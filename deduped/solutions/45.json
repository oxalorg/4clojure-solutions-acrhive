[{"problem":45,"code":"[1  4 7 10 13]","user":"540b4c4de4b0addc1aec66f6"},{"code":"'(1, 4, 7, 10, 13)","problem":45,"user":"4eb92051535dfed6da9c6d4c"},{"problem":45,"code":"(range 1 (inc (* 3 5)) 3)","user":"57a4bb65e4b0a966079561eb"},{"code":"[1 4 7 10 13 ]","problem":45,"user":"4db87b3f535d1e037afb2196"},{"problem":45,"code":"'(1 4 7  10 13  )","user":"516d227fe4b06f078fab252d"},{"problem":45,"code":"(take 5 (range 1 99 3))","user":"5ce867fce4b0a17bb84e2baf"},{"code":"(seq [1 4 7 10 13])","problem":45,"user":"4e3df106535deb9a81d77f58"},{"problem":45,"code":"(vec [1 4 7 10 13])","user":"55ad2d97e4b03311e7b732a2"},{"problem":45,"code":"(->> (range) (rest) (take-nth 3) (take 5))","user":"552a793ee4b0ffed3738f955"},{"problem":45,"code":";'(1 4 7 10 13)\n(range 1 16 3)","user":"566639f4e4b0e91d5f5c566b"},{"problem":45,"code":"(range 1 16 (inc 2))","user":"5c493046e4b0e06e1360a3cb"},{"problem":45,"code":"[1, 4, 7, 10, 13\n]","user":"576aea4fe4b0a07e8fc18126"},{"code":"(take 5 (list 1 4 7 10 13 15))","problem":45,"user":"4e7dec83535db169f9c796f3"},{"code":"(reverse (reduce (fn [xs x] (conj xs (+ 3 (first xs)))) '(1) (take 4 (repeat 1))))","problem":45,"user":"527ccaf4e4b0757a1b17136d"},{"problem":45,"code":"(take 5 (iterate (fn* [p1__2051#] (+ 3 p1__2051#)) 1))","user":"565f2461e4b068f2fe63dc3b"},{"code":"(list 1 4 7 10 13)","problem":45,"user":"4de8a7d7535d08e6dec9fdfe"},{"problem":45,"code":"(take 5 '(1 4 7 10 13))","user":"56a01895e4b0542e1f8d149f"},{"code":"(list 1 4 7 10 13 )","problem":45,"user":"4f9ff06ce4b0dcca54ed6d41"},{"code":"(sort\n  (loop [s 3 z 1 n 1 arr(list)]\n  (if (= n 6)\n    arr\n    (recur s (+ z s) (inc n) (conj arr z)))))","problem":45,"user":"4ef2d6c5535dced4c769f222"},{"code":"[1 4 7 10 13]","problem":45,"user":"4dd6d6a0535d2dad7130b5ca"},{"problem":45,"code":";'(4 7 10 13 16)\n;[4 7 10 13 16]\n;(list 4 7 10 13 16)\n'(1 4 7 10 13)","user":"541b41d1e4b01498b1a71a65"},{"code":"(take 5 (range 1 500 3))","problem":45,"user":"53597288e4b04ce2eb3ed29c"},{"problem":45,"code":"(seq (list 1 4 7 10 13))","user":"5b596d0ce4b02d533a91bd7a"},{"problem":45,"code":"(take 5 (range 1 14 3))","user":"579d9601e4b05b1deef9ae18"},{"code":"(map #(inc (* % 3)) (range 5))","problem":45,"user":"4f38d6bbe4b0e243712b1ee2"},{"code":"(take 5 (iterate (partial + 3) 1))","problem":45,"user":"50992197e4b0cae2931060ae"},{"code":"[1,4,7,10,13]","problem":45,"user":"4f859146e4b033992c121c46"},{"code":"[1 4 7 10 13  ]","problem":45,"user":"502904e0e4b0feaf66e22fad"},{"code":"x","problem":45,"user":"52e635b3e4b09f7907dd146f"},{"problem":45,"code":";; question: is this a suitable way to generate\n;; a lazy sequence of numbers? what are the alternatives?\n'(1 4 7 10 13)","user":"5fb68f09e4b08cb800c85b58"},{"problem":45,"code":"(range 1 13.37 3)","user":"55b22c33e4b0da326a65cf79"},{"problem":45,"code":"'(1 4  7 10 13 )","user":"598d0dc3e4b02b9968b84d18"},{"code":"`(1 4 7 10 13)","problem":45,"user":"4f404dcee4b0e243712b1fb0"},{"problem":45,"code":";iterate f x. f- function, x- start value\n[1 4 7 10 13]","user":"5cd07885e4b0ccb0619628d4"},{"code":"[1, 4, 7, 10, 13]","problem":45,"user":"4e9a1512535dbda64a6f6b6e"},{"code":"(->> (range)\n     (map inc)\n     (partition 1 3)\n     (take 5)\n     (flatten))","problem":45,"user":"4f1b92d1535d64f60314647b"},{"code":"(range 1 (* 3 5) 3)","problem":45,"user":"4f067029535dcb61093f6c12"},{"code":"(take 5 (range 1 20 3))","problem":45,"user":"53a068cbe4b0ca733b9744ae"},{"code":"(take 5 (range 1 1000 3))","problem":45,"user":"52b35a6ee4b0c58976d9ad07"},{"code":"'(1 4 7  10 13)","problem":45,"user":"4f8ab084e4b02e764a0a5171"},{"problem":45,"code":"(->> (range)\n     (map (partial * 3))\n     (map inc)\n     (take 5))","user":"5b62764ae4b0c6492753e725"},{"problem":45,"code":"'(1 4 7 10 13)\n\n;(println (take 5 (iterate #(+ 3 %) 1)))","user":"510608ebe4b01150e115ebe3"},{"problem":45,"code":"[1 \n 4 7 10 13]","user":"56946d43e4b0dcc4269f411e"},{"problem":45,"code":"'(1 4\n    7 10 13)","user":"57344edbe4b0cd1946bd1008"},{"problem":45,"code":"'(1 4 7 10 13)\n\n;;(->> 1\n;;     (iterate #(+ 3 %))\n;;     (take 5)\n;;     )","user":"584d99c5e4b0b7285a6f4e42"},{"problem":45,"code":"(map (comp inc\n           (partial * 3))\n     (range 0 5))","user":"55d0e76ae4b0e31453f64a40"},{"problem":45,"code":"(take 5 (range 1 100 3))","user":"59d8f23ae4b0ef0a1e9b5c49"},{"code":"(seq '(1 4 7 10 13))","problem":45,"user":"530b9714e4b02e82168697cf"},{"problem":45,"code":"(sequence [1 4 7 10 13])","user":"5cded022e4b0a17bb84e2af7"},{"code":"(take 5 (range 1 15 3))","problem":45,"user":"4f3e6244e4b0e243712b1f85"},{"problem":45,"code":"(vector 1 4 7 10 13)","user":"5c8002cde4b0c8042a70ce09"},{"code":"'( 1 4 7 10 13 )","problem":45,"user":"4df8644f535d04ed9115e778"},{"code":"(take 5 (range 1 30 3))","problem":45,"user":"535aee3be4b04ce2eb3ed2aa"},{"problem":45,"code":"(take 5 ((fn iterate' [n]\n  (lazy-seq (cons n (iterate' (+ 3 n))))) 1))","user":"6066266de4b069485764ddd2"},{"problem":45,"code":"(map #(inc (* 3 %)) (range 5))","user":"59c22fbae4b0a024fb6ae4a3"},{"problem":45,"code":"'(1 4 7 10  13)","user":"5911c8e1e4b0163c97b36edc"},{"problem":45,"code":"(vec '(1 4 7 10 13))","user":"53fc63dce4b0de5c4184859f"},{"code":"'(1 4 7 10 13 )","problem":45,"user":"4df669d4535d08e6dec9fe35"},{"problem":45,"code":"(map #(- (* 3 %) 2) (range 1 6))","user":"56ef11efe4b04a395b9a045b"},{"code":"(range 1 15 3)","problem":45,"user":"4f047542535dcb61093f6bc7"},{"code":"'(1  4 7 10 13)","problem":45,"user":"50555c06e4b0ce54f56f03fa"},{"problem":45,"code":"'(1 4 7 10 13\n   )","user":"561ea06ce4b064ca9f4b16c3"},{"problem":45,"code":"'(1 4 7,10,13)","user":"58c7b921e4b021aa9917ed7c"},{"code":"(lazy-seq '(1 4 7 10 13))","problem":45,"user":"51cd75d6e4b02254fc79488c"},{"code":"(range 1 (* 5 3 ) 3)","problem":45,"user":"4f83ee95e4b033992c121c26"},{"code":"'( 1 4 7 10 13)","problem":45,"user":"4f03154a535dcb61093f6a58"},{"problem":45,"code":"(take 5 ((fn lsq[x y](lazy-seq (cons (+ x y) (lsq (+ x y) 3 )))) 1 0))","user":"55129667e4b06e50f9beb1ac"},{"problem":45,"code":"'(1 4 7 10 13 \n   )","user":"5652dd89e4b0f9d632dd8469"},{"code":"(range 1 14 3)","problem":45,"user":"4e68be01535d8ccf87e9fe88"},{"code":"(range 1 16 3)","problem":45,"user":"4de18de7535d08e6dec9fde8"},{"code":"(range 1 (* 5 3) 3)","problem":45,"user":"50657775e4b0deb876850599"},{"problem":45,"code":"(list 1, 4, 7, 10, 13)","user":"548018cde4b0c51c1f4d7325"},{"problem":45,"code":"(loop [x 1\n       r []]\n  (if (>= (count r) 5)\n    r\n    (recur (+ 3 x) (conj r x))))","user":"56171eade4b06b1bb2182a0c"},{"problem":45,"code":"[(- 10 9) (* 2 2) (- 16030201030204566010003330000000120 16030201030204566010003330000000113) (+ 5 5) (+ (* 2 6) 1)]","user":"55bb1b26e4b01b9910ae29e0"},{"problem":45,"code":"(seq '[1 4 7 10 13])","user":"5df79c31e4b0a607a9a45c9b"},{"code":"; Remember iterate does not apply f to\n; the first item.\n'(1 4 7 10 13)","problem":45,"user":"4f831fd3e4b033992c121c17"},{"code":"[ 1 4 7 10 13 ]","problem":45,"user":"4e860e85535db62dc21a62f1"},{"code":"'(1 4 7 10 13)","problem":45,"user":"4dd6fa35535d2dad7130b5cd"},{"problem":45,"code":";;'(1 4 7 10 13)\n(range 1 14 3)","user":"580d7bdae4b0849f6811b73c"},{"code":"(map #(+ (* 3 %) 1) (range 5))","problem":45,"user":"4ef0f1a1535dced4c769f212"},{"code":"(take 5 (iterate #(+ 3 %) 1))","problem":45,"user":"4dfd4ba8535d04ed9115e781"},{"problem":45,"code":"(seq (loop [x 1, r []] (if (< x 15) (recur (+ 3 x) (conj r x)) r)))","user":"55fc07d3e4b0f488688e066e"},{"problem":45,"code":"'(1 4 7 10 13) (take 5 (iterate #(+ 3 %) 1))","user":"548018d1e4b0c51c1f4d7326"},{"code":"(map #(+ 1 (* 3 %)) (range 0 5))","problem":45,"user":"51622fb8e4b009fba0926e3f"},{"problem":45,"code":"(take 5 (range 1 17 3))","user":"544fbabce4b0e39780006999"},{"problem":45,"code":"(for [x (range 1 14 3)] x)","user":"55079757e4b021ccfedb96a9"},{"problem":45,"code":"(list 1,4,7,10,13)","user":"54431b6ee4b032a45b869385"},{"code":"'(1 4  7 10 13)","problem":45,"user":"4fe1279fe4b0dd6cd5ce3630"},{"problem":45,"code":"'(1 4 7 10 13\n    )","user":"53874820e4b06839e8705f1b"},{"problem":45,"code":"' (1 4 7 10 13)","user":"57b9fb56e4b0fbc9809a27fa"},{"code":"(map (fn [x] (+ 1 (* 3 x))) (range 5))","problem":45,"user":"4e1e7f88535d04ed9115e808"},{"problem":45,"code":"(list (+ 1 )\n   (+ 1  3)\n   (+ 1  3 3)\n   (+ 1  3 3 3)\n   (+ 1  3 3 3 3))","user":"5fb3a096e4b08cb800c85b35"},{"problem":45,"code":"(map #(+ 1 (* 3 %)) (range 5))","user":"553c05b7e4b09218d5f45011"},{"code":"[1 4 7 10 13]\n;(range 1 14 3)","problem":45,"user":"505b9084e4b032b709c81371"},{"code":"'(1,4,7,10,13)","problem":45,"user":"4dee4a9c535d08e6dec9fe11"},{"problem":45,"code":"'[1 4 7 10 13]","user":"5f810e97e4b0c071e6c840ed"},{"problem":45,"code":"(range 1 (+ 1 (* 3 5)) 3)","user":"53838b9ee4b06839e8705ee1"},{"problem":45,"code":"[1 4  7 10 13]","user":"528c381ce4b0239c8a67aeb2"},{"code":"[ 1 4 7 10 13]","problem":45,"user":"5224a46ce4b01819a2de42e5"}]