[{"code":"(some {:a nil :b 6 :c nil} [:a :c :b])","problem":48,"user":"5300158ae4b0d8b024fd370f"},{"problem":48,"code":"'6","user":"5672925fe4b05957ce8c6114"},{"problem":48,"code":"(reduce + [1 1 1 1 2])","user":"53cd5226e4b00fb29b2212e0"},{"problem":48,"code":"(inc 5)","user":"57eb2576e4b0bfb2137f5b5c"},{"problem":48,"code":"6\n;; it returns the FIRST true value","user":"558a81fbe4b027778923761c"},{"problem":48,"code":"(some #{2 7 6} [5 6 7 8])\n(some #(when (even? %) %) [5 6 7 8])","user":"59e4e3cbe4b08badc2a0c54a"},{"problem":48,"code":"(some #(when (even? %) %) [5 6 7 8])","user":"54be7772e4b0ed20f4ff6eea"},{"code":"6 6 6","problem":48,"user":"4efa3d4b535dced4c769f270"},{"code":"6.000","problem":48,"user":"4df20dda535d08e6dec9fe23"},{"code":"(reduce + (take 4 (range 1337)))","problem":48,"user":"53a068cbe4b0ca733b9744ae"},{"problem":48,"code":"(- 10 4)","user":"609083a8e4b03bd49d9f36cb"},{"code":"(+ 1 1 1 1 1 1 )","problem":48,"user":"4eb9353f535dfed6da9c6d4e"},{"problem":48,"code":"((identity (constantly 6)) 9001)","user":"55ab07e0e4b0988bba2ad953"},{"problem":48,"code":"(#(first (filter %1 %2)) #{2 7 6} [5 6 7 8])","user":"5a514e68e4b05d388ecb6be5"},{"problem":48,"code":"(let [n (rand-int 100)] (some #(and (= % n) 6) (range 100)))","user":"594c1baae4b07ddc2dafae59"},{"problem":48,"code":"6\n;(when (even? 5) 5)\n;=> nil\n;(when (even? 6) 6)\n;=> 6","user":"5822e082e4b04b46fc4b0fa9"},{"problem":48,"code":"(+ (*) (*) (*) (*) (*) (*))","user":"54c611d1e4b045293a27f627"},{"problem":48,"code":"(reduce + (list 1 2 3))","user":"558f4fbae4b0277789237661"},{"code":"6\r\n6","problem":48,"user":"4dd62278535d2dad7130b5c7"},{"problem":48,"code":"(some #{7 6 2} [5 6 7 8])","user":"565f2461e4b068f2fe63dc3b"},{"problem":48,"code":"((fn [predfunc mylist] (first (filter predfunc mylist))) #(when (even? %) %) [5 6 7 8] )","user":"545e5805e4b01be26fd74679"},{"code":"6","problem":48,"user":"4dd6d6a0535d2dad7130b5ca"},{"problem":48,"code":";; I need to practice using when...\n6","user":"5fb68f09e4b08cb800c85b58"},{"code":"6\n6","problem":48,"user":"4e4bf20e535dc968683fc4d9"},{"problem":48,"code":"(last (range 1 7))","user":"572a13cde4b0f4d77e65122b"},{"problem":48,"code":"(+ 6 (+ (- (+ 1 (+ 1 (+ 1( + 1(+ 1 1)))) (+ 1(+ 1 (+ 1( + 1(+ 1 1)))))) (+ 1 (+ 1 (+ 1( + 1(+ 1 1)))) (+ 1(+ 1 (+ 1( + 1(+ 1 1))))))) (- (+ 1 (+ 1 (+ 1( + 1(+ 1 1)))) (+ 1(+ 1 (+ 1( + 1(+ 1 1)))))) (+ 1 (+ 1 (+ 1( + 1(+ 1 1)))) (+ 1(+ 1 (+ 1( + 1(+ 1 1)))))))))","user":"5afdb2bae4b0cc2b61a3bd1f"},{"code":"6\n;the first occurrence in the collection when the function returns true","problem":48,"user":"53713ebee4b0fc7073fd6ead"},{"code":"(* 2 3)","problem":48,"user":"51367626e4b04ac1f358dd53"},{"code":"(+ 3 3)","problem":48,"user":"50090fc7e4b0144d4f561e44"},{"code":"(some #{2 7 6} [5 6 7 8])","problem":48,"user":"4e70ef6f535d5021c1a89644"},{"problem":48,"code":"(+ 2 2 2)","user":"566470b9e4b0e91d5f5c5658"},{"problem":48,"code":"((constantly 6))","user":"54a80855e4b09f271ff37c9e"},{"code":"(last [1 2 3 4 5 6]) ;that's the ticket!","problem":48,"user":"519126d5e4b0f8ef0be96bff"},{"code":"(* 2 (int Math/PI))","problem":48,"user":"524469dee4b0d8acf9ed6a9d"},{"code":"6 6","problem":48,"user":"528e1c88e4b0239c8a67aed1"},{"problem":48,"code":"6\n; geniaal: #{some set} is een functie met één parameter: de value die je zoekt\n; dus dit kan dienen als predicaat functie\n; geeft nil terug als value er niet in zit => false\n; anders geeft hij de value terug => true","user":"5afb3426e4b0cc2b61a3bcf5"},{"code":"(+ 1 (+ 1 (+ 1 (+ 1 (+ 1 1)))))","problem":48,"user":"4f2de7e9e4b0d6649770a061"},{"code":"(+ 1 1 1 1 1 1)","problem":48,"user":"4e599577535d8a8b8723a29f"},{"code":"(#(first (filter even? %)) [5 6 7 8])","problem":48,"user":"50b63c5ee4b0a86f8358ca69"},{"problem":48,"code":"(#{2 7 6} 6)","user":"5918dfc7e4b09b4ee5954bbc"},{"problem":48,"code":"(first (drop 1 (take 2 (iterate #(+ 1 %) 5))))","user":"54af220ce4b09f271ff37d02"}]