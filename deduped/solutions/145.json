[{"problem":145,"code":"(map inc (map #(* % 4) (range 10)))","user":"53dadf1de4b0e771c30254ad"},{"code":"(filter #(= 1 (rem % 4) ) (range 40))","problem":145,"user":"4f031e58535dcb61093f6a66"},{"problem":145,"code":"(quote(1 5 9 13 17 21 25 29 33 37))","user":"55e7fc2ce4b0121d4835fd86"},{"problem":145,"code":"; [1 5 9 13 17 21 25 29 33 37]\n; (range 1 40 4)\n(map #(inc (* % 4)) (range 10))","user":"57e37f90e4b0bfb2137f5a9c"},{"problem":145,"code":"(for [x (range 10)\n      :let [y (inc (* x 4))]]\n y)","user":"581a703de4b0e114eb51a005"},{"problem":145,"code":"(map (fn [x] (+ x 1)) (range 0 40 4))","user":"5b333626e4b025bcb146f32f"},{"problem":145,"code":"'(1 5 9 13 17 21 25 29 33 37)\n'(1 5 9 13 17 21 25 29 33 37)","user":"54755abce4b0c51c1f4d7299"},{"problem":145,"code":";; '(0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39)\n    '(  1       5       9 13 17 21 25 29 33 37 )","user":"539118b2e4b0b51d73faaea1"},{"code":"(range 1 40, 4)","problem":145,"user":"525431dfe4b0541d1855b970"},{"code":"(take-nth 4 (range 1 40))","problem":145,"user":"4e89ff3d535d3e98b802328a"},{"problem":145,"code":"(for [x (range 0 10)]\n  (+ 1 (* x 4)))","user":"561eb82fe4b064ca9f4b16c7"},{"code":"(map #(inc (* 4 %)) (range 10))","problem":145,"user":"4ef19836535dced4c769f217"},{"code":"(->> (range 10) (map #(+ 1 (* 4 %))))","problem":145,"user":"4f058c73535dcb61093f6bf9"},{"problem":145,"code":"(for [x (range 10)]\n  (inc (* x 4)))","user":"5760715de4b08062f99a4e96"},{"code":"(for [x (range 10)]\r\n(inc (* x 4)))","problem":145,"user":"504e14c2e4b078edc5f593bf"},{"problem":145,"code":"(take (quot 40 4) (iterate #(+ 4 %) 1))","user":"544e9022e4b0e3978000698b"},{"code":"(map #(+ 1(* % 4)) (range 10))","problem":145,"user":"4e3456f9535deb9a81d77f2a"},{"problem":145,"code":";;[1 5 9 13 17 21 25 29 33 37]\n(filter #(= (rem % 4) 1) (vec (range 40)))","user":"5cd4f7c5e4b0ccb06196292a"},{"code":"`(1 5 9 13 17 21 25 29 33 37)","problem":145,"user":"4f404dcee4b0e243712b1fb0"},{"code":"[1 5 9 13 17  21 25 29 33 37]","problem":145,"user":"5093ca51e4b097f48cc38585"},{"problem":145,"code":"(for [x (iterate #(+ % 4) 1)\n      :while (< x 40)]\n  x)","user":"584278e1e4b089d5ab817e19"},{"problem":145,"code":"(vec (map inc (range 0 40 4)))","user":"5552780ce4b0deb715856df4"},{"code":"(map #(+ (* 4 %) 1) (range 10))","problem":145,"user":"5099e663e4b0efbae1fbc0a4"},{"problem":145,"code":"(map #(+  (* 4 %) 1) (range 10))","user":"57aa290de4b0b8559636fc65"},{"problem":145,"code":"[1 5 9 13  17 21 25 29 33 37]","user":"56441634e4b0018b46ad8c08"},{"code":"(map #(apply + %) (partition 2 (range 20)))","problem":145,"user":"4e113a81535d04ed9115e7c5"},{"code":"(map #(- % 2) [3 7 11 15 19 23 27 31 35 39])","problem":145,"user":"52379c46e4b0fae3832e99db"},{"code":"(map #(- (* 4 (+ 1 %)) 3) (range 10))","problem":145,"user":"5298c83de4b02ebb4ef75064"},{"code":"(lazy-seq '(1 5 9 13 17 21 25 29 33 37))","problem":145,"user":"522b1993e4b0d34ee08e71b6"},{"problem":145,"code":"(for [x (range 10)] (inc (* 4 x)))","user":"53703287e4b0fc7073fd6e8f"},{"code":"(for [[x y] (partition 2 (range 20))]\n  (+ x y))","problem":145,"user":"52717a1de4b03e8d9a4a73f2"},{"code":"(vector 1 5 9 13 17 21 25 29 33 37)","problem":145,"user":"53834ed3e4b06839e8705edb"},{"problem":145,"code":"(for [x (range 10)]\n  (+ 1 (* x 4)))","user":"59a080e3e4b0871e7608b837"},{"code":"(for [i (range 0 10)] (inc (* i 4)))","problem":145,"user":"4de165f3535d08e6dec9fde6"},{"problem":145,"code":"(for [x (range 40) :when (= 1 (rem x 4))] x )","user":"5e27a4e1e4b05b4b0151618e"},{"problem":145,"code":"(lazy-seq (list 1 5 9 13 17 21 25 29 33 37))","user":"5a663a32e4b0512ff01cd9c2"},{"problem":145,"code":"(cons 1 (map inc (filter #(= 0 (rem % 4)) (range 1 40))))","user":"59551e04e4b066ee0a44af20"},{"problem":145,"code":"(for [x (range 40) :when (= 0 (mod (dec x) 4))]x)","user":"5991d9cbe4b0866487ed0d69"},{"code":"(map #(+ ( * 4 % ) 1 ) (range 10 ))","problem":145,"user":"4f030775535dcb61093f6a43"},{"code":"[1 5 9 13 17 21 25 29 33 37]","problem":145,"user":"4e9660ec535dbda64a6f6b44"},{"problem":145,"code":"(for [x (range 0 40 4)] (inc x))","user":"53a0ab8ce4b0ca733b9744b3"},{"problem":145,"code":"((partial map #(+ (* 4 %) 1)) (range 10))","user":"53abf519e4b047364c044456"},{"code":"'( 1 5 9 13 17 21 25 29 33 37 )","problem":145,"user":"4fbb7010e4b081705acca2e7"},{"code":"(map #(inc (* 4 %)) (take 10 (range)))","problem":145,"user":"5384e2cee4b06839e8705ef7"},{"code":"(map \n (fn [[x y]] \n   (+ x y))\n (partition 2 (range 20)))","problem":145,"user":"4dcc024e535d5973398f928f"},{"code":"(filter (fn [x] (= 1 (rem x 4))) (range 40))","problem":145,"user":"4fea7bc4e4b0140c20fb9c07"},{"problem":145,"code":"(take 10 (map #(-> % (* 4) (inc) ) (range 10)))","user":"5913fde8e4b0163c97b36f13"},{"problem":145,"code":"(filter #(= 1 (mod % 4)) (take 40 (range)))","user":"586f7f40e4b01531a375e9cc"},{"problem":145,"code":"(for [x (range 10) \n      :let [z (+ 1 (* 4 x))]]\n  z)","user":"579c35fee4b05b1deef9ae04"},{"problem":145,"code":"(->> 1\n     (iterate #(+ % 4))\n     (take-while #(< % 40))\n )","user":"56d5c1b0e4b0ea9b8538f7c3"},{"code":"'(1 5 9 13 17 21 25 29 33 37 )","problem":145,"user":"4fa792ebe4b081705acca1c5"},{"code":"(range 1 39 4)","problem":145,"user":"4f01c938535dcb61093f6a39"},{"code":"((fn [] \n  (filter #(= 1 (rem % 4)) (range 40) )))","problem":145,"user":"533e45a7e4b085b17e897d8c"},{"code":"(for [x (range 10)\n      :let [y (+ 1 (* 4 x))]]\n  y)","problem":145,"user":"5133af1de4b0d7a043de8cf2"},{"code":"[1 5 9 13 17 21 25 29 33 37 ]","problem":145,"user":"4eb99b3d535dfed6da9c6d57"},{"problem":145,"code":"(filter #(and (= 1 (rem % 4)) (< % 40)) (range 40))","user":"55adcc8fe4b03311e7b732ab"},{"problem":145,"code":"(map (fn[[a b]](+ a b)) (partition 2 (range 20)))","user":"57bd960fe4b05aa3c4741c52"},{"code":"(for [x (iterate #(+ 4 %) 1)\n      :while (< x 40)]\n  x)","problem":145,"user":"52b577c9e4b0c58976d9ad39"},{"code":"(->> (range 10) (map #(* 4 %)) (map #(+ 1 %)))","problem":145,"user":"53342a1ce4b019098a6f8b8b"},{"problem":145,"code":"(map first (partition 4 (range 1 41)))","user":"520e46cee4b066f3ea161c97"},{"code":"(map #(inc (* % 4)) (range 0 10))","problem":145,"user":"4dca8b6d535d5973398f9288"},{"problem":145,"code":"(->> (range 40)\n    rest\n    (take-nth 4) )","user":"5a8fd113e4b05369db4d2542"},{"code":"(map (fn [[a b]] (+ a b)) (partition 2 (range 20)))","problem":145,"user":"51b903b8e4b050a1176cd6a1"},{"code":"(map #(reduce + %) (partition 2 (range 20)))","problem":145,"user":"4e568873535d8a8b8723a283"},{"code":"[1 5 9 13 17 21 25 29 33 37] ; i love you :)","problem":145,"user":"510cda21e4b078ea71921126"},{"problem":145,"code":"(take 10\n      ((fn rem-one  \n        ([] (rem-one 1))  \n        ([n] (lazy-seq (cons n \n                             (rem-one (+ n 4))))))))","user":"52d9e126e4b09f7907dd13b1"},{"problem":145,"code":"; better\n(range 1 40 4)\n\n; first try\n#_(for [x (range 10)] (inc (* x 4)))","user":"55e7d06ee4b050e68259b496"},{"code":"(for [x (range 10)] (+ 1 (* 4 x)))","problem":145,"user":"4f748b54e4b044e54cd9a8fa"},{"problem":145,"code":"(map #(first (next %)) (partition 4 (range 40)))","user":"541f89a5e4b01498b1a71a99"},{"code":"(take 10 (range 1 40 4))","problem":145,"user":"4df407c3535d08e6dec9fe2e"},{"problem":145,"code":"(loop [s (range 40), res []]\n  (if (seq s)\n    (if (= 1 (rem (first s) 4))\n      (recur (rest s) (conj res (first s)))\n      (recur (rest s) res))\n    res))","user":"5a481e05e4b05d388ecb6b64"},{"code":"(take-while (partial >= 40) (iterate #(+ 4 %) 1))","problem":145,"user":"50d882d4e4b01f0871336e69"},{"code":"(for [x (range 40)\n            :when (= 1 (rem x 4))]\n        x)","problem":145,"user":"4e517711535d302ef430da69"},{"code":"(map #(- (* 2 %) 1) (filter odd? (range 20)))","problem":145,"user":"4ef0f1a1535dced4c769f212"},{"problem":145,"code":"'(1 5 9 13 17 21 25 29 33 37)\n\n#_(range 1 40 4)","user":"5dcbe0dbe4b02b31cc3da3be"},{"problem":145,"code":"(take 10 (iterate #(+ 4 %) 1))\n;'(1 5 9 13 17 21 25 29 33 37)","user":"55129636e4b06e50f9beb1ab"},{"code":";'(1 5 9 13 17 21 25 29 33 37)\r\n\r\n(range 1 40 4)","problem":145,"user":"4f07c8c3535dcb61093f6c2d"},{"code":"(for [[x y] (partition 2 (range 20))] (+ x y))","problem":145,"user":"4ddee37c535d08e6dec9fddc"},{"problem":145,"code":"( range 1 40 4)","user":"56942923e4b0dcc4269f4112"},{"code":"'(1,5,9,13,17,21,25,29,33,37)","problem":145,"user":"4ec5d62c535d6d7199dd36ba"},{"code":"(for [x (iterate #(+ 4 %) 1) :while (< x 40)] x)","problem":145,"user":"4fa9da14e4b081705acca1e7"},{"problem":145,"code":"(map inc (filter #(= (mod % 4) 0) (range 40)))","user":"5e77ece9e4b085ba37836df3"},{"problem":145,"code":"(list 1,5,9,13,17,21,25,29,33,37)","user":"58c66990e4b021aa9917ed53"},{"problem":145,"code":"(reduce #(conj % (+ %2 1 (* (count %) 3))) [] (range 10))","user":"55664bb5e4b0c656e3ff1833"},{"problem":145,"code":"(map (fn [x] (+ (* x 4 ) 1)) (range 10))","user":"5953949be4b066ee0a44aeea"},{"code":"(take 10 (iterate #(+ % 4) 1))","problem":145,"user":"4f69f34fe4b07046d9f4ef90"},{"problem":145,"code":"(map (fn[v](->> v (* 4) inc)) (range 10))","user":"568e450fe4b0dcc4269f40d0"},{"code":"(range 1 40 4)\n; '(1 5 9 13 17 21 25 29 33 37)","problem":145,"user":"505b9084e4b032b709c81371"},{"problem":145,"code":"(take-while #(< % 40) (map inc (iterate #(+ 4 %)0)))","user":"57addf3ae4b0b8559636fca4"},{"problem":145,"code":"[1 5\n9\n13\n17\n21\n25\n29\n33\n37\n]","user":"599ad3f5e4b07157cc8dab15"},{"problem":145,"code":";'(1 5 9 13 17 21 25 29 33 37)\n(map #(+ 1 (* % 4)) (range 10))","user":"51f09f3de4b0274c496158d7"},{"problem":145,"code":"(for [x (range 40)\n      :when (= (mod x 4) 0)]\n  (+ x 1))","user":"561bed95e4b064ca9f4b168d"},{"code":"(seq '(1 5 9 13 17 21 25 29 33 37))","problem":145,"user":"4e7ec984535db169f9c7971c"},{"code":"(map #(+ %1 1) (take-nth 4 (range 40)))","problem":145,"user":"52fe869be4b047fd5583703f"},{"problem":145,"code":"(take 10 (map (comp inc #(* 4 %)) (range)))","user":"5650082fe4b0284900eef6b7"},{"problem":145,"code":"(take 10 (iterate #(+ 4 %) 1 ))","user":"569951e4e4b0542e1f8d143e"},{"problem":145,"code":"((fn it [%1 %2] (if (< %1 40) (it (+ 4 %1) (conj %2 %1)) %2)) 1 [])","user":"58cba946e4b03c36ff7e584f"},{"problem":145,"code":"(map #(+ 1 %) (list 0 4 8 12 16 20 24 28 32 36))","user":"55c508f0e4b0e31453f649ac"},{"code":"(for [x (range 10)] ( + 1 ( * x 4) ))","problem":145,"user":"53830109e4b06839e8705ed8"},{"problem":145,"code":"(take-while #(<= % 40) (iterate (partial + 4) 1))","user":"59022c89e4b0438e51c2d052"},{"code":"(for [x (range 40)\r\n            :when (= 1 (rem x 4))]\r\n        x)","problem":145,"user":"4eddcbbf535d10e5ff6f532d"},{"code":"(range 1 (inc 40) 4)","problem":145,"user":"525947f1e4b0cb4875a45cd8"},{"code":"(map #(+ 1 (* % 4)) (range 10))","problem":145,"user":"4f245d77e4b0d66497709feb"},{"problem":145,"code":"(for [x (range 40) :when (= 0 (mod x 4))] (inc x))","user":"5ce867fce4b0a17bb84e2baf"},{"problem":145,"user":null,"code":"(->> (range 40) (filter #(= (mod % 4) 1)))"},{"code":"(->> (range 40) (filter #(= 1 (rem % 4))))","problem":145,"user":"51e24a04e4b01e5198146430"},{"problem":145,"code":"(->> (range 10)\n     (map #(* 4 %))\n     (map inc))","user":"54c611d1e4b045293a27f627"},{"code":"(map #(-> % (* 4) (+ 1)) (range 10))","problem":145,"user":"4ee1c955535d10e5ff6f535d"},{"code":"(map inc '(0 4 8 12 16 20 24 28 32 36))","problem":145,"user":"502952c9e4b0b33e9bf6fdf1"},{"problem":145,"code":"(for [x (range 40)\n      :when ( = 1 (rem x 4))] x)","user":"55ef9c9de4b066087aa94537"},{"code":"(map \n #(inc (* %1 4))\n (range 10))","problem":145,"user":"5046ee3ee4b03b02161376b4"},{"code":"'(1, 5, 9, 13, 17, 21, 25, 29, 33, 37)","problem":145,"user":"4dd1de4d535dae65d5c462d7"},{"problem":145,"code":"(for [x (list 1 5 9 13 17 21 25 29 33 37)] x)","user":"5963cd4de4b066ee0a44b0d4"},{"problem":145,"code":"(for [x (range 10) ] (+ 1 (* x 4) ) )","user":"5ec3f557e4b08d0ec38692c0"},{"problem":145,"code":";1. iterates and for every value under 40 that has a remainder of 1 when divided by 4, add it to a collection\n;2. counts by 4, adds one to the value, and as long as it it less than 40 add it to the collection\n;3. counts in pairs (0 1) (2 3) (4 5) ... and summs them until 20\n'(1 5 9 13 17 21 25 29 33 37)","user":"5540fe42e4b0a04f7929950a"},{"code":"[\n1 5 9 13 17 21 25 29 33 37]","problem":145,"user":"504e90bae4b069badc5a33b8"},{"code":"[1 5 9 13 17 21 25 29 33 37]\n[1 5 9 13 17 21 25 29 33 37]\n[1 5 9 13 17 21 25 29 33 37]","problem":145,"user":"512a8ef7e4b0ff5c4bc1f99e"},{"problem":145,"code":"((fn []\n  (loop [x 1\n        result []]\n    (cond\n     (> x 40) result\n     :else (recur (+ x 4) (conj result x))))))","user":"567bf820e4b05957ce8c61ad"},{"problem":145,"code":"(reverse '(37 33 29 25 21 17 13 9 5 1))","user":"56958a16e4b0dcc4269f4129"},{"problem":145,"code":"(filter #(= 1 (rem % 4)) (range 1 40))","user":"5294a49be4b02ebb4ef7500f"},{"code":"(map \n (fn [x] (+ 1 (* 4 x))) \n (range 10)\n )","problem":145,"user":"531cd41ee4b08068f379eda9"},{"problem":145,"code":"[1 5 9 13 17 21 25 29 33 37]\n;;(range 1 40 4)","user":"55647a31e4b0c656e3ff1808"},{"code":"(map #(+ 1 %) (range 0 40 4))","problem":145,"user":"4f0376a5535dcb61093f6add"},{"problem":145,"code":"(filterv #(= 1 (mod % 4)) (range 40))","user":"502ea967e4b06efe12e8cc76"},{"problem":145,"code":"(loop [x 1 coll [1]]\n  (if (> x 36)\n    coll\n    (recur (+ x 4) (conj coll (+ x 4)))))","user":"561a4769e4b053970a773b05"},{"code":";'(1 5 9 13 17 21 25 29 33 37)\n(range 1 40 4)","problem":145,"user":"4ebadde5535dfed6da9c6d6b"},{"code":"'(1 5 9 13 17 21\n    25 29 33 37)","problem":145,"user":"51037468e4b00c483ae17702"},{"problem":145,"code":"(for [ x (iterate #(+ % 4) 1)\n      :while (< x 40)]\n  x)","user":"55f06183e4b06e875b46ce23"},{"code":"(map #(inc (* 4 %1)) (range 10))","problem":145,"user":"4eb59464535d7eef30807369"},{"problem":145,"code":"(->> (range 20) (partition 2) (map (partial apply +)))","user":"58db097fe4b0a4d5acaab66f"},{"code":"(range 1 (* 4 10) 4)","problem":145,"user":"4fab259ae4b081705acca212"},{"code":"(list (+ 0 1) (+ 2 3) (+ 4 5) (+ 6 7) (+ 8 9) (+ 10 11)\n      (+ 12 13) (+ 14 15) (+ 16 17) (+ 18 19))","problem":145,"user":"5011ae8fe4b00ad656b9d982"},{"code":"(map inc (range 0 40 4))","problem":145,"user":"4f03ba9c535dcb61093f6b58"},{"code":"(filter #(= 1 (mod % 4)) (range 40))","problem":145,"user":"4f8aa1c1e4b02e764a0a516e"},{"code":"(filter (fn [x] (= 1 (mod x 4))) (range 40))","problem":145,"user":"52caaeade4b071a8d36bd3e5"},{"problem":145,"code":";; These codes all do the following: they create a range\n;; of numbers starting at 0 and ended at but not including 40\n;; where, when that number is divided by 4, the remainder is 1\n(filter #(= 1 (rem % 4)) (range 40))","user":"5fb68f09e4b08cb800c85b58"},{"code":"(map #(+ 1 (* 4 %)) (range 10))","problem":145,"user":"4dadb891c9a9d6ed3699dc57"},{"code":"(for [x (iterate #(+ 4 %) 0)\n            :let [z (inc x)]\n            :while (< z 40)]\n        z)","problem":145,"user":"5250b7a5e4b0541d1855b83e"},{"problem":145,"code":"(take 10(iterate #(+ % 4)1))","user":"5f3ce2c7e4b004f08c61c548"},{"problem":145,"code":"(filter #(if(= (rem % 4) 1) true false) (range 40))","user":"5ecbc138e4b016b56eae0589"},{"code":"'(1 5 9 13 17 21 25 29 33 37)\n\n;'(0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39)","problem":145,"user":"504eed01e4b0e7ad84dbc4a5"},{"problem":145,"code":"(for [[x] (partition 4 (range -4 39))]\n      (inc (+ x 4)))","user":"5f274aeee4b0857314092c92"},{"problem":145,"code":"((fn remainders-of-1 \n  ([n divisor] (remainders-of-1 n divisor 1 []))\n  ([n divisor x v] \n   (if (<= x n) \n     (if (= (rem x divisor) 1)\n       (remainders-of-1 n divisor (inc x) (conj v x))\n       (remainders-of-1 n divisor (inc x) v))\n     v))) \n 40 4)","user":"551c594de4b07993ea3788dc"},{"code":"(map inc (list 0 4 8 12 16 20 24 28 32 36))","problem":145,"user":"5361a4f2e4b0243289761e47"},{"problem":145,"code":"(take-while\n #(< % 40)\n (iterate #(+ 4 %) 1))","user":"549a999be4b0f3d1d8e70f6f"},{"code":"(for [x (range 10)]\n  (+ 1 (* 4 x)))","problem":145,"user":"5256627ce4b0541d1855ba1a"},{"problem":145,"code":"(->> (range 10) (map #(* % 4)) (map #(+ % 1)))","user":"57597fade4b02ea11479931d"},{"code":"(take-while (fn [x] (< x 40)) (iterate (partial + 4) 1))","problem":145,"user":"529f71aae4b04e0c58e87bac"},{"code":"(map #(+ 1 ( * %1 4)) (range 10))","problem":145,"user":"519b231ee4b0ac1b7dced6a2"},{"code":"(range 1 38 4)","problem":145,"user":"4dc1ee85535d020aff1edf91"},{"problem":145,"code":"(for [x (range 0 10)] (+ 1 (* 4 x)))","user":"5526d0a9e4b0ffed3738f927"},{"problem":145,"code":"(map (comp inc (partial * 4)) (range 0 10))","user":"5960a1a6e4b066ee0a44b08e"},{"code":"(for [x (range 10)] (+ (* 4 x) 1))","problem":145,"user":"50fb084ee4b0d10d794c19dd"},{"problem":145,"code":"(filter #(= 1 (mod % 4))(range 40))","user":"514992d2e4b0b64cbeae1848"},{"problem":145,"code":"(range 1 40 4); review this again","user":"4fc4eb1ee4b081705acca354"},{"problem":145,"code":"(filter \n #(= 1 (rem % 4))\n (range 40))","user":"5c63e034e4b0fca0c1622668"},{"problem":145,"code":"(map #(+ % 1) (range 0 40 4))","user":"5466199ce4b01be26fd746e2"},{"code":"(map (fn [n] (- (* n 4) 3)) (range 1 11))","problem":145,"user":"5256a1d4e4b0541d1855ba29"},{"problem":145,"code":"(filter #(= 1 ( rem % 4)) (range 40))","user":"540efe2ee4b0addc1aec6724"},{"problem":145,"code":"(for [[x y] (partition 2 (range 20))] (+ y x))","user":"5e7fb908e4b085ba37836e3f"},{"code":"'(1 5 9 13 17 21 25 29  33 37)","problem":145,"user":"4f70bcf9e4b07046d9f4effe"},{"problem":145,"code":"[1 5 9 13 17 21 25, 29, 33, 37]","user":"55e1bb20e4b050e68259b41f"},{"problem":145,"code":";[1 5 9 13 17 21 25 29 33 37]\n(range 1 40 4)","user":"57035ccfe4b08d47c97781ef"},{"problem":145,"code":"[1 5 9  13 17 21 25 29 33 37]","user":"564a560ae4b0284900eef654"},{"code":"(map #(+ (first %1) (second %1)) (partition 2 (range 20)))","problem":145,"user":"506afdafe4b0a2a5463de37e"},{"code":"[1,5,9,13,17,21,25,29,33,37]","problem":145,"user":"4f03b3fb535dcb61093f6b52"},{"code":"(map #(+ 1 %) [0 4 8 12 16 20 24 28 32 36])","problem":145,"user":"513f400ae4b051389b345b3f"},{"code":"(range 1 40 4)","problem":145,"user":"4dabb7b1950ed6eda1bd72f3"},{"problem":145,"code":"(map #(+ % (inc %)) (filter even? (range 20)))","user":"55ab07e0e4b0988bba2ad953"},{"code":"(loop [acc [] n 1](if (> 40 n) (recur (conj acc n) (+ 4 n)) acc))","problem":145,"user":"50feb0e1e4b03cd852b4e851"},{"code":"(for [x (range 10) :let [z (+ 1 (* x 4))]]  z)","problem":145,"user":"4f84400de4b033992c121c2e"},{"code":"'(1 5  9 13 17 21 25 29 33 37)","problem":145,"user":"50d242c0e4b06ad58337ed0f"},{"code":"(map inc (map #(* 4 %) (range 10)))","problem":145,"user":"52470d42e4b05ef8e38e6350"},{"code":"(range 1 (inc 37) 4)","problem":145,"user":"4e7dec83535db169f9c796f3"},{"problem":145,"code":"(range 1,40,4)","user":"54e606c3e4b024c67c0cf803"},{"problem":145,"code":"(for [x (iterate inc 0)\n      :let [z (inc (* 4 x))]\n      :while (< z 40)\n      ]\nz)","user":"5db7376fe4b010eb3c36cd43"},{"problem":145,"code":"(for [x (range 10)\n      :let [z (inc (* x 4))]]\n      z)","user":"568a13eae4b0dcc4269f4089"},{"code":"[ 1 5 9 13 17 21 25 29 33 37 ]","problem":145,"user":"4eef0828535d305ff5cb7f18"},{"code":"(map inc (map (partial * 4) (range 10)))","problem":145,"user":"5202cfe7e4b030ee0c5b2702"},{"problem":145,"code":"[1 5 9 13 17 21 25  29 33 37]","user":"55101237e4b06e50f9beb181"},{"problem":145,"code":"(->> (range 40)\n    (filter #(= 1 (rem % 4))))","user":"5429986ce4b01498b1a71b3b"},{"problem":145,"code":";;[1 5 9 13 17 21 25 29 33 37]\n;;much cooler way...\n(range 1 40 4)","user":"5586cbeae4b059ccff29b1d8"},{"problem":145,"code":"(for [x (range 40) :when (= 1 (rem x 4))] x)","user":"51c5c9c9e4b03a28d42333ba"},{"problem":145,"code":"(filter #(= 1 (rem % 4)) \n        (range 40))","user":"5f1328dee4b091ba50b4dbb1"},{"code":"(filter #(= (mod % 4) 1) (range 40))","problem":145,"user":"52ea19ace4b09f7907dd14b7"},{"code":"(take-while #(> 40 %) (iterate (partial + 4) 1))","problem":145,"user":"4e8fb386535d65386fec2150"},{"problem":145,"code":"(map #(+ (* 4 %) 1) (range 0 10))","user":"52a7fec0e4b0c58976d9ac25"},{"problem":145,"code":";; [1 5 9 13 17 21 25 29 33 37]\n(map (comp inc (partial * 4)) (range 10))","user":"53684a2fe4b0243289761e8c"},{"problem":145,"code":"(for [x (range 1 38 4)] x)","user":"55079757e4b021ccfedb96a9"},{"problem":145,"code":"'(1 5 9\t13 17 21 25 29 33 37)","user":"60c0ceb7e4b0e0fa5f1b42a6"},{"code":"(take 10 (iterate (partial + 4) 1))","problem":145,"user":"4eecc9ad535d93acb0a668b4"},{"problem":145,"code":"(map (fn [n] (inc (* 4 n))) (range 10))","user":"550b1c2ce4b06e50f9beb13b"},{"problem":145,"code":"(take (/ 40 4) (iterate #(+ 4 %) 1))","user":"5553b729e4b0deb715856e05"},{"code":"(for [x (range 10) \n      :let [z (inc x)]\n  :while (< z 11)]\n  (+ 1 (* x 4)))","problem":145,"user":"52112be7e4b07aea8afc4f68"},{"problem":145,"code":"(filter #(if (= 1 (rem % 4)) % )(range 40))","user":"575ab695e4b02ea114799350"},{"problem":145,"code":"; '(1 5 9 13 17 21 25 29 33 37)\n(range 1 40 4)","user":"5543ef94e4b0a04f79299526"},{"problem":145,"code":"(take-while #(> 40 %) (iterate #(+ 4 %) 1))","user":"57300c19e4b0cd1946bd0fa1"},{"code":"(take-while #(< % 40) (map #(+ (* % 4) 1) (range)))","problem":145,"user":"4f51e8a4e4b03ad3f0c10d2d"},{"code":"(cons 1 (map #(+ 1(* % 4)) (range 1 10)))","problem":145,"user":"535920b2e4b04ce2eb3ed294"},{"problem":145,"code":"(for [x (range 1 11)] (- (*  x 4) 3))","user":"57a5da5ee4b0a966079561fe"},{"code":"(sort (loop [x 1,y 4,z 40,arr (list)]\r\n         (if (> x z)\r\n\t\t   arr\r\n\t\t   (recur (+ x y),y,z,(conj arr x)))))","problem":145,"user":"4ef2d6c5535dced4c769f222"},{"code":"(take 10(filter #(== 1 (rem % 4))(iterate inc 0)))","problem":145,"user":"4e6cf521535de274dd8d818b"},{"problem":145,"code":"(for [x (range 40)\n            :when (= 0 (rem x 4))]\n        (+ 1 x))","user":"5951190be4b066ee0a44aea4"},{"problem":145,"code":"(->> 40 range (filter #(= 1 (rem % 4))))","user":"55f5c118e4b06e875b46ce8e"},{"code":"(for [x (range 10)] (+ 1 (* x 4)))","problem":145,"user":"4dad8d4bc9a9d6ed1799dc57"},{"problem":145,"code":";; first two are obviously printing 1 + (4 * x) for x in range 0 - 9\n;; last doesn't seem to be. it has x ,y and 10 lists of (1,2)(3,4) ... (18,19)\n;; \t\tand by some trick of math that works too\n'(1 5 9 13 17 21 25 29 33 37)","user":"5ce56db6e4b0a17bb84e2b72"},{"code":"(filter #(= 1 (rem % 4)) (range 40))","problem":145,"user":"4dd6d6a0535d2dad7130b5ca"},{"code":"(map inc [0 4 8 12 16 20 24 28 32 36])","problem":145,"user":"50d3b03fe4b030b634c368b9"},{"code":"( take 10 (iterate  (partial + 4) 1))","problem":145,"user":"4f70a967e4b07046d9f4effa"},{"problem":145,"code":"((fn addFour\n   ([stop] (addFour stop 1 [1]))\n   ([stop i res]\n    (if (< (+ i 4) stop)\n      (addFour stop (+ i 4) (conj res (+ i 4)))\n      res)\n    )) 40)","user":"5ababa62e4b073f1774426b4"},{"code":"[1 5 9 13, 17, 21, 25, 29, 33, 37]","problem":145,"user":"536e5055e4b0fc7073fd6e6b"},{"code":"(map #(+ 1 (* 4 %1)) (range 10))","problem":145,"user":"4fa1289de4b0dcca54ed6d58"},{"problem":145,"code":"(map \n  #(inc (* 4 %))\n (range 10))","user":"5a8b6d42e4b05369db4d24e6"},{"code":"(for [[x y] (partition 2 (range 20))]\n        (+ x y))","problem":145,"user":"4db091b7838c48654951d9c2"},{"code":"(map #(+ 1 (* 4 %)) (vec(range 10)))","problem":145,"user":"4fe21889e4b0dd6cd5ce3641"},{"problem":145,"code":";; (range 1 40 4)\n(->> \n 1\n (iterate (partial + 4))\n (take-while #(< % 40)))","user":"6020365ae4b0bf4ca6b10960"},{"problem":145,"code":"(cons 1 (map inc '(4 8 12 16 20 24 28 32 36)))","user":"5c746c31e4b0fca0c16227c8"},{"code":"'(1 5 9 13 17 21 25 29 33 37)\n'(1 5 9 13 17 21 25 29 33 37)\n'(1 5 9 13 17 21 25 29 33 37)","problem":145,"user":"4f0368ee535dcb61093f6aae"},{"problem":145,"code":"'(1 5 9 13 17 21 25  29 33 37)","user":"5f1aade6e4b091ba50b4dbe4"},{"code":"(map #(+ (* % 4) 1) (range 10))","problem":145,"user":"4fe83efbe4b07c9f6fd12c3b"},{"problem":145,"code":"(map (fn [x] (inc (* 4 x))) (range 10))","user":"55495318e4b0a04f79299566"},{"code":"(map #(inc(* 4  %)) (range 10))","problem":145,"user":"51ca15bfe4b09ce160bef5b8"},{"problem":145,"code":";(list (+ (* 4 0) 1)\n;  (+ (* 4 1) 1)\n;  (+ (* 4 2) 1)\n;  (+ (* 4 3) 1)\n;  (+ (* 4 4) 1)\n;  (+ (* 4 5) 1)\n;  (+ (* 4 6) 1)\n;  (+ (* 4 7) 1)\n;  (+ (* 4 8) 1)\n;  (+ (* 4 9) 1))\n\n(list (+ 0 1)\n      (+ 2 3)\n      (+ 4 5)\n      (+ 6 7)\n      (+ 8 9)\n      (+ 10 11)\n      (+ 12 13)\n      (+ 14 15)\n      (+ 16 17)\n      (+ 18 19))","user":"5fb3a096e4b08cb800c85b35"},{"code":"[ 1 5 9 13 17 21 25 29 33 37]","problem":145,"user":"4e6dc95a535d5021c1a895f1"},{"problem":145,"code":"[1 5 9 13 17 21, 25 29 33 37]","user":"5fb7a87be4b08cb800c85b5f"},{"problem":145,"code":"(filter (fn [number](= 1 (rem number 4))) (range 40))","user":"5464dd11e4b01be26fd746d2"},{"problem":145,"code":"(for [x (range 10)]\n  (+ (* x 4) 1))","user":"5886e8bde4b0f1effa3b76ea"},{"code":"[1   5   9   13  17  21    25    29    33    37]","problem":145,"user":"506cad7de4b0a302964c548e"},{"code":"(for [x (range 10)] (+ (* x 4) 1))","problem":145,"user":"4f31ad57e4b0d6649770a089"},{"problem":145,"code":"(take-nth 4 (drop 1 (range 40)))","user":"5d63f1c2e4b0c9e5857d502b"},{"code":"(list 1 5 9 13 17 21 25 29 33 37)","problem":145,"user":"4e273301535deb9a81d77ef7"},{"problem":145,"code":"(reduce conj [] (filter #(= (rem % 4) 1) (range 40)))","user":"57d174ede4b0bd073c20236c"},{"code":"(for [x (range 40)\n      :when (= 1 (rem x 4))]\n  x)","problem":145,"user":"512318b6e4b03b44edbed433"},{"problem":145,"code":"(map  (comp inc #(* % 4) ) (range 10))","user":"52f1bd89e4b05e3f0be25ef0"},{"code":"(filter #(= 1 (rem %1 4)) (range 40))","problem":145,"user":"4fe8d1b5e4b0547ebccb2425"},{"code":"(map #(inc (* 4 %)) (range 0 10) )","problem":145,"user":"50901b2ee4b0ea685a20f774"},{"problem":145,"code":"(for [x (iterate #(+ 4 %) 0) :while (< x 40)] (inc x))","user":"598229d6e4b021a7a535fdfb"},{"code":"(map #(+ 1 (* 4 %)) (range 10) )","problem":145,"user":"52dc2bc8e4b09f7907dd13ca"},{"code":"(take 10 (iterate  #(if (= 0 (mod % 4)) (+ % 1)  (+ 4 %)) 1))","problem":145,"user":"52e683c0e4b09f7907dd1477"},{"problem":145,"code":"(map inc (filter #(= 0 (rem % 4))(range 40)))","user":"5587cd80e4b059ccff29b1e5"},{"problem":145,"code":"(map #(-> % (* 4) inc)  (range 10))","user":"545e9cf1e4b01be26fd7467f"},{"code":"(filter (fn [n] (= 1 (rem n 4))) (range 40))","problem":145,"user":"50b9d991e4b04934c218a4a9"},{"code":"[1  5  9  13  17  21  25  29  33  37]","problem":145,"user":"517bc969e4b07ef0e56148d0"},{"problem":145,"code":"((fn [c] (filter #(== 1 (mod % 4)) c)) (range 40))","user":"5507cfd3e4b021ccfedb96ad"},{"code":"(for [x (iterate #(+ 4 %) 0) :while (< x 40)] (+ x 1))","problem":145,"user":"4f047542535dcb61093f6bc7"},{"code":"'(1 5 9 13 17 21 25 29 33 37)","problem":145,"user":"4ed6c738535d10e5ff6f52e9"},{"problem":145,"code":"(map (fn [x] (+ (* 4 x) 1)) (range 10))","user":"5afa3590e4b0cc2b61a3bcea"},{"problem":145,"code":"; When you divide the number by 4, and the remainder is 1...\n[1 5 9 13 17 21 25 29 33 37]","user":"5ff676a9e4b06df49cee1497"},{"problem":145,"code":"(loop [x 1 c '()] (if (> x 40) (reverse c) (recur (+ x 4) (conj c x))))","user":"57b5ed94e4b0fbc9809a27b4"},{"problem":145,"code":"(->> (range 10) (map #(* 4 %)) (map inc))","user":"5a08f951e4b01bb0ae8afdfd"},{"problem":145,"code":"(map inc (flatten (partition 1 4 (range 40))))","user":"58ebd10de4b056aecfd47d49"},{"code":"(seq [1 5 9 13 17 21 25 29 33 37])","problem":145,"user":"4ec6297b535d6d7199dd36c4"},{"problem":145,"code":"[1 5 9 13 17 21 25 29  33 37]","user":"568c2d96e4b0dcc4269f40af"},{"code":"(->> (range 10)\n     (map (partial * 4))\n     (map (partial + 1)))","problem":145,"user":"4e691c79535d8ccf87e9fe97"},{"code":"(map #(- (* (inc %) 4) 3) (range 10))","problem":145,"user":"51e3cf8ee4b0efabf93c02a3"},{"problem":145,"code":"[1 5 9 13 17 21 25 29 33 37]\n;(->> 40 range (filter #(= 1 (rem %1 4))))","user":"55cdc576e4b0e31453f64a1f"},{"problem":145,"code":"(for [x (range 0 10)] (inc (* 4 x)))","user":"56bdda49e4b0f26550335977"},{"code":"(take 10 (iterate #(+ 4 %) 1))","problem":145,"user":"4ee26f01535d10e5ff6f5368"},{"problem":145,"code":"[1 5  9 13 17 21 25 29 33 37]","user":"5964c614e4b069c0a1a19770"},{"code":"(map inc (take 10 (iterate #(+ 4 %) 0)))","problem":145,"user":"4dadba4dc9a9d6ed3899dc57"},{"code":"(for [x (iterate #(+ % 4) 1) :while (< x 40)] x)","problem":145,"user":"4dd7d040535d2dad7130b5d6"},{"problem":145,"code":"(map #(+(* % 4) 1) (range 10))","user":"54dbe183e4b024c67c0cf778"},{"problem":145,"code":"(take-while #(> 40 %) (map #(+ (* 4 %) 1) (range)))","user":"5361d423e4b0243289761e49"},{"code":"(reverse [37 33 29 25 21 17 13 9 5 1])","problem":145,"user":"5143824ae4b0b4fb4ace5f36"},{"code":"(take-while #(< % 40) (iterate #(+ 4 %) 1))","problem":145,"user":"4f569218e4b0a7574ea71826"},{"problem":145,"code":"[1 5 9 13 17 21 25 29 33  37]","user":"56483562e4b0284900eef629"},{"problem":145,"code":"(reduce (fn [a b] (if (= 0 (mod b 4)) (conj a (inc b)) a)) [] (take 40 (range)))","user":"5da4fc6be4b000c986472bff"},{"problem":145,"code":"(#(if (< %1 40) (recur (+ 4 %1) (conj %2 %1)) %2 ) 1 [])","user":"56ae4c21e4b03c432f18735c"},{"code":"(lazy-seq [1 5 9 13 17 21 25 29 33 37])","problem":145,"user":"529862dfe4b02ebb4ef75055"},{"problem":145,"code":"(for [i (range 10)] (inc (* 4 i)))","user":"57f6e666e4b0d3187e9008f2"},{"code":"(map inc (filter #(= 0 (rem % 4)) (range 40)))","problem":145,"user":"4dd7458d535d2dad7130b5cf"},{"problem":145,"code":"(map inc (range 0 39 4))","user":"56175cf9e4b06b1bb2182a0f"},{"problem":145,"code":"(take 10 (range 1 100 4))","user":"56fde58ae4b08d47c97781aa"},{"code":"(for [x (range 10)] (inc (* x 4)))","problem":145,"user":"51623490e4b009fba0926e42"},{"code":"(take-while #(< % 40)  (map #(inc (* 4 %)) (range)))","problem":145,"user":"4e9de526535dbda64a6f6b8e"},{"code":"(for [i (range 10)] (+ 1 (* 4 i)))","problem":145,"user":"52fc9b94e4b047fd5583701d"},{"code":"(range 1 41 4)","problem":145,"user":"4ee63d8d535d93acb0a66859"},{"problem":145,"code":"(range 1 40 +4)","user":"55995d88e4b031d6649c9ba8"},{"problem":145,"code":";[1 5 9 13 17 21 25 29 33 37]\n(take 10 (iterate #(+ 4 %) 1))","user":"56d30497e4b0ea9b8538f7a8"},{"code":"(map #(inc (* 4 %)) (range 0 10))","problem":145,"user":"5081566ce4b0946d0443855b"},{"problem":145,"code":"(take-nth 4 (map inc (range 40)))","user":"56db8fbde4b0ea9b8538f80c"},{"code":"(map #(inc (* % 4))   (range 0 10))","problem":145,"user":"5007cdb9e4b0b17c647f5227"},{"code":"'[1 5 9 13 17 21 25 29 33 37]","problem":145,"user":"4ec1b80c535dfed6da9c6db6"},{"problem":145,"code":"(range 1 40 4)\n;(take 10 (iterate (partial + 4) 1))","user":"572830e6e4b0c5bde472c152"},{"problem":145,"code":"(->> (range 40)\n     (filter #(= 1 (rem % 4))))","user":"5c0a5061e4b0bdcf453d1703"},{"problem":145,"code":"(take 10 ((fn t [x] (lazy-seq (cons (+ (* x 4) 1) (t (inc x))))) 0))","user":"5c7c1d8ee4b0d597f478ca88"},{"code":"(map \n (fn [x] \n   (+\n    (first x)\n    (second x))) \n (partition 2 (range 20)))","problem":145,"user":"50c13f77e4b096f585049c3b"},{"code":"( range 1 40 4 )","problem":145,"user":"50bf7b72e4b0ffd967a66cc1"},{"code":"(filter #(= (rem % 4) 1) (range 40))","problem":145,"user":"4f06f953535dcb61093f6c1c"},{"code":"(remove nil? (map #(if (zero? (rem (- % 1) 4)) %) (range 1 40)))","problem":145,"user":"4f77ad6de4b0fbe0118ec580"},{"code":"(flatten (partition 1 4 (range 1 40)))","problem":145,"user":"4fd29d7ce4b04c3a95aa0424"},{"code":"(take 10 (map first (partition 4 (drop 1 (range)))))","problem":145,"user":"519ef784e4b087743fad2198"},{"code":"(map (fn [x] (+ 1 (* 4 x))) (range 10))","problem":145,"user":"53217912e4b09d4e7a9b54b3"},{"problem":145,"code":"(map #(+ 1(* 4 %)) (range 0 10))","user":"55048182e4b086ebe8a79c7c"},{"problem":145,"code":"[(+ 0 1) (+ 2 3) (+ 4 5) (+ 6 7) (+ 8 9) (+ 10 11) (+ 12 13) (+ 14 15) (+ 16 17) (+ 18 19)]","user":"59ddae03e4b01968742fed65"},{"problem":145,"code":"(map inc (take-nth 4 (range 40)))","user":"57609d91e4b08062f99a4e9b"},{"problem":145,"code":"(for [x (range 40 80)\n      :let [y (- x 40)]\n      :when (= 1 (mod y 4))]\n   y)","user":"5647ba2ae4b0284900eef622"},{"code":"(take-while #(<= % 40) (iterate #(+ 4 %) 1))","problem":145,"user":"51040eb2e4b0432126ba9bb4"},{"problem":145,"code":"#_'(1 5 9 13 17 21 25 29 33 37)\n#_(map #(inc (* 4 %)) (range 10))\n(range 1 40 4)","user":"5a544eeee4b05d388ecb6c24"},{"problem":145,"code":"(map (partial apply +) (partition 2 (range 20)))","user":"5a01d8f6e4b01bb0ae8afd53"},{"code":"(for [x (range 0 10)] (+ 1 (* x 4)))","problem":145,"user":"5302d79ce4b0d8b024fd3736"},{"problem":145,"code":"(for [x (iterate #(+ 4 %) 1)\n            :while (< x 40)]\n        x)","user":"5ab16992e4b073f1774425c4"},{"code":"'(1 5 9 13 17 21 25 29 33 37)\n(range 1 40 4)\n(vec (range 1 40 4))","problem":145,"user":"500ae2ade4b03d00572d2d7d"},{"problem":145,"code":"(map #(+ (* 4 %) 1) (take 10 (iterate inc 0)))","user":"5971763fe4b01722bebd4c72"},{"problem":145,"code":"(sequence [1,5,9,13,17,21,25,29,33,37])","user":"590260cde4b0438e51c2d057"},{"code":"(->> (range 0 10) (map #(* 4 %)) (map inc))","problem":145,"user":"4e2d84bf535deb9a81d77f09"},{"problem":145,"code":"(map (partial + 1) (take-nth 4 (range 40)))","user":"58039a3de4b0a837a8b30c91"},{"code":"(take-while (partial > 40) (iterate (partial + 4) 1))","problem":145,"user":"4f14e64e535d64f60314643f"},{"problem":145,"code":"(take 10 (map second (partition 4 (range))))","user":"56ac81ace4b03c432f187347"},{"code":"(map #(+ (* 4 %1) 1) (range 0 10))\n; (range 1 40 4)","problem":145,"user":"5054c853e4b0b1b9d1860eb3"},{"problem":145,"code":"(reductions  + 1 (repeat 9 4))","user":"55f04526e4b06e875b46ce20"},{"code":"(map second (partition 4 (range 40)))","problem":145,"user":"4f463dfde4b0d56e7bb92b99"},{"problem":145,"code":"(for [x (range 1 40) :when (= 1 (rem x 4))] x)","user":"5243e37ae4b076204b44fae3"},{"problem":145,"code":"(map (fn [x]\n       (+ (* x 4) 1)) (range 10))","user":"5b79481de4b047b03b203704"},{"problem":145,"code":"(for [x (range 10) :let [z (+ 1 (* 4 x))]] z)","user":"4f6a946ae4b07046d9f4ef9f"},{"code":"'( 1 5 9 13 17 21 25 29 33 37)","problem":145,"user":"50255bafe4b0b0b8afb15aa8"},{"code":"'(1 5 9 13 17 21 25  29 33  37 )","problem":145,"user":"4ecb65f6535df97575fdabda"},{"problem":145,"code":"(for [x (range 1 40 4)] x)","user":"5cee521ce4b0aaa82f1129dd"},{"problem":145,"code":"(map (comp inc (partial * 4)) (range 10))","user":"54145050e4b01498b1a719ea"},{"problem":145,"code":";'(1 5 9 13 17 21 25 29 33 37)\n;[1 5 9 13 17 21 25 29 33 37]\n;(take 10 (iterate #(+ 4 %) 1)) \n(for [[a b c d] (partition 4 (range 40))] b)","user":"5f0824c5e4b0cf489e8d7f5b"},{"problem":145,"code":"(filter #(> 41 %) (take 100 (map #(+ 1 %) (iterate #(+ % 4) 0))))","user":"54801febe4b0c51c1f4d733c"},{"code":"(for [x (range 10)]\n  (inc (* 4 x)))","problem":145,"user":"51a3b135e4b0e77c4ca60bf6"},{"problem":145,"code":"(map (fn [x] (inc (* x 4))) (range 10))","user":"5fe25678e4b05ac5b16ea175"},{"code":"(cons 1 (map inc [4 8 12 16 20 24 28 32 36]))","problem":145,"user":"50c4baa6e4b0210b849018b0"},{"problem":145,"code":"'(1 5 9 13 17 21 25 29 33 37\n    )","user":"54058af3e4b0addc1aec6669"},{"problem":145,"code":"(map \n #(inc (* 4 %)) \n (range 10))","user":"521a6cdde4b0c4ef0be8300d"},{"problem":145,"code":"(#(range 1 40 4))","user":"5cf863c4e4b0b71b1d808a80"},{"code":"'(1,5,9,13,17,21,25,29,33, 37)","problem":145,"user":"4e244ed5535d04ed9115e826"},{"code":"(take 10\n(iterate #(+ 4 %) 1))","problem":145,"user":"5097ddfce4b087ccf61a7af0"},{"code":"(seq '(1, 5, 9, 13, 17, 21, 25, 29, 33, 37))","problem":145,"user":"504f5804e4b0a02f9cffde72"},{"code":"(for [x (range 40)\n      :when (= 0 (rem x 4))]\n  (inc x))","problem":145,"user":"51faf9ece4b0f1313d4689f7"},{"code":"[1, 5, 9, 13, 17, 21, 25, 29, 33, 37]","problem":145,"user":"4f038499535dcb61093f6b09"},{"code":"(for [x (range 40)\n\t:when (= 1 (rem x 4))]\n x)","problem":145,"user":"51eb3aace4b0f1f103a0d159"},{"code":"(map #(inc (* 4 %)) (range 0 (/ 40 4)))","problem":145,"user":"4f2acd70e4b0d6649770a041"},{"problem":145,"code":"(map (comp inc #(* 4 %)) (range 10))","user":"55e31aa8e4b050e68259b43f"},{"problem":145,"code":"(filter #(= 1 (rem %1 4)) (range 0 40 ))","user":"55702247e4b09a3098a5252a"},{"problem":145,"code":"(range  1 41 4)","user":"54a7efdee4b09f271ff37c9d"},{"problem":145,"code":"[1 5 9 13 17 21 25 29 33 37\t]","user":"5283a919e4b0239c8a67adbe"},{"code":"(take-while #(< % 40) (iterate #(+ % 4) 1))","problem":145,"user":"510d59cce4b078ea71921134"},{"code":"(map inc `(0 4 8 12 16 20 24 28 32 36))","problem":145,"user":"4ed87228535d10e5ff6f52fa"},{"code":"(seq (list  1 5 9 13 17 21 25 29 33 37))","problem":145,"user":"4fb0bd28e4b081705acca26b"},{"problem":145,"code":"(take 10 \n      (iterate #(+ 4 %) 1))","user":"5a8ebd9ae4b05369db4d252b"},{"code":"'(1\t5 9 13 17 21 25 29 33 37)","problem":145,"user":"505fd903e4b08f2a82ad10b7"},{"code":"(map (fn [l] (+ (first l) (second l))) (partition 2 (range 20)))","problem":145,"user":"4f0364d5535dcb61093f6a9e"},{"code":"(map #(inc(* 4 %))(range 10))","problem":145,"user":"4f03688d535dcb61093f6aac"},{"problem":145,"code":";; After looking. Should've read docs first :p\n(range 1 40 4)","user":"4fa436dce4b081705acca19b"},{"code":"(map #(inc (* % 4)) (range 10))","problem":145,"user":"4f38d6bbe4b0e243712b1ee2"},{"code":"(reverse (loop [x 5 result '(1)] (if (> x 40 ) result (recur (+ x 4) (conj result x)))))","problem":145,"user":"4ea5727f535d7eef308072d4"},{"problem":145,"code":"(#(map second %) (partition 4 (range 40)))","user":"54bc575ce4b0ed20f4ff6ecb"},{"code":"(#(if (> %2 %) %3 (recur % (+ %2 4) (conj %3 %2))) 40 1 [])","problem":145,"user":"509eeb3be4b08df8156e9e37"},{"code":"(for [[x y] (partition 2 (range 20))]\r\n        (+ x y))","problem":145,"user":"4ef447a4535dced4c769f234"},{"problem":145,"code":"(map (fn[x](+ (* 4 x) 1)) (range 10))","user":"53bd65abe4b0d9a98559a6ce"}]