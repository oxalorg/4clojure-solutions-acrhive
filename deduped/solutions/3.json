[{"code":"(str \"HELLO WORLD\")","problem":3,"user":"4ecbff02535df97575fdabe3"},{"problem":3,"code":"((fn uppercase-str [input]\n  (.toUpperCase input)) \"hello world\")","user":"58e5d149e4b056aecfd47ca0"},{"code":"(.toUpperCase \"HEllO world\")","problem":3,"user":"4df69fd1535d08e6dec9fe36"},{"problem":3,"code":"( .toUpperCase \"hello world\" )","user":"58d80fc9e4b03c36ff7e5990"},{"code":"(String. (char-array (map #(if (= \\space %) % (char (- (int %) 32))) \"hello world\")))","problem":3,"user":"524edf78e4b0541d1855b7f4"},{"code":"(clojure.string/upper-case \"hello world\" )","problem":3,"user":"50b07125e4b009df37c708ba"},{"problem":3,"code":"(#(str \"HELLO WORLD\"))","user":"5d0d125ee4b0cc9c91588249"},{"problem":3,"code":"(.toUpperCase (str \"hello\" (str \" \" (str \"world\"))))","user":"58baa1a1e4b0888cdc949ceb"},{"code":"(apply str (reverse \"DLROW OLLEH\"))","problem":3,"user":"4ea1c349535d7eef308072ba"},{"code":"(->> [(+(   *)(*     )(*)  (*)(*)(*)(*   )(*)         (*)(            *)(*)(*)                                                                                                                                                                                                                                                        (*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)\n(*)  (*)    (*)(     *)(*  )(*)(*)(*)    (*)(         *)(*           )(*)(*)(*)(                                                                                                                                                                                                                                                        *)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(\n *)   (*    )(*)     (*))  (+(*          )(*)         (*)(          *)(     *)(*                                                                                                                                                                                                                                              )(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*\n            )(*)(*)(*)(*)  (*)(*)(*)(    *)(*         )(*)         (*)(      *)(*                                                                                                                                                                                                                                                 )(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)\n            (*)(*)(*))(+(  *)(*)(*)(*    )(*)         (*)(         *)(*      )(*)                                                                                                                                                                                                                                                 (*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(\n            *)(*     )(*)  (*)(          *)(*         )(*)         (*)(*     )(*)                                                                                                                                                                                                                                            (*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*\n            )(*)     (*)(  *)(*          )(*)         (*)(          *)(*    )(*)                                                                                                                                                                                                                                            )(+(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)\n            (*)(     *)(*  )(*)(*)(*)(   *)(*)(*)(*)  (*)(*)(*)(*   )(*)(  *)(*)                                                                                                                                                                                                                                                   (*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(\n            *)(*     )(*)  (*)(*)(*)(*   )(*)(*)(*)(  *)(*)(*)(*)    (*)(*))(+                                                                                                                                                                                                                                                                     (*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*\n\n\n)(*    )(*)   (*)   (*)(*)      (*)(*)(     *)(*         )(*)(*)      (*)(* )(*)                                                                                                                                                                                                                                                           (*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)\n (*)   (*)(  *)(   *)(*)(*)(    *)(*)(*)    (*)(         *)(*)(*)     (*)(  *)(                                                                                                                                                                                                                                                             *)(*)(*)(*)(*)(*)(*)(*)(*)(*))(+(*)(*)(*)(*)(*)(*)(*)(*)(*)(\n  *)(  *)(  *)(    *)(*  )(*)   (*)(  *)(   *)(*         )(*)  (*)    (*)   (*                                                                                                                                                                                                                                                         )(*)(*)(*)(*)(*)(*)(*)(*)(*))(+(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*\n  )(*)(*)( *)(    *)(*    )(*)  (*)(  *)(   *)(*         )(*)   (*)                                                                                                                                                                                                                                                                                    (*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)\n  (*)(*)(*)(*     )(*)    (*)(  *)(*)(*)    (*)(         *)(*   )(*)                                                                                                                                                                                                                                                                                (*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(\n   *)(*)(*)(*     )(*)    )(+   (*)(*)(     *)(*         )(*)   (*)(                                                                                                                                                                                                                                                                                *)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*\n   )(*)( *)(       *)(*  )(*)   (*)(  *)(   *)(*         )(*)  (*)(                                                                                                                                                                                                                                                                                *)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)\n    (*)(  *)       (*)(*)(*     )(*)  (*)   (*)(*)(*)(*  )(*)(*)(*                                                                                                                                                                                                                                                                                ))(+(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(*)(\nmap char)(apply str))","problem":3,"user":"52d2ca1ce4b099d49816f0b4"},{"code":"(.toUpperCase \"hELlo World\")","problem":3,"user":"533b1138e4b0e30313ee6cc5"},{"problem":3,"code":"(.toUpperCase \"hElLo WoRlD\")","user":"5782ce69e4b0d36ec5835e9a"},{"code":"(.toUpperCase \"hello worlD\")","problem":3,"user":"50be6de4e4b00fb48fed2ef5"},{"problem":3,"code":"(.toUpperCase \"HELLo World\")","user":"5c9a638fe4b048ec896c5aae"},{"code":"(first [\"HELLO WORLD\"])","problem":3,"user":"530c462ae4b02e82168697d9"},{"code":"(.toUpperCase \"hello world\") ; :)","problem":3,"user":"525a7b9fe4b0cb4875a45cf5"},{"code":"(. (new String \"hello world\") (toUpperCase))","problem":3,"user":"4f0a77bc535d0136e6c222f6"},{"problem":3,"code":"(apply str \"HELLO WORLD\")","user":"58b18ba0e4b0ebc645576cfa"},{"code":"(.toUpperCase \"hello world\")","problem":3,"user":"4de18de7535d08e6dec9fde8"},{"problem":3,"code":"(.toUpperCase \"hEllO WoRlD\")","user":"56c72829e4b0ed865f9758b8"},{"problem":3,"code":"(do print (.toUpperCase \"hello world\"))","user":"544ceb36e4b0e39780006975"},{"problem":3,"code":"(.toUpperCase \"HellO WoRLD\")","user":"548d1d82e4b0e286459a1215"},{"code":"(.toUpperCase (.replace \"hallo world\" \"a\" \"e\"))","problem":3,"user":"50183c1be4b02f523d7cc5ee"},{"problem":3,"code":"(.toUpperCase (.toLowerCase \"HELLO wOrLd\"))","user":"5977653be4b01722bebd4ced"},{"code":"(do(.toUpperCase \"hello world\"))","problem":3,"user":"5303a2b9e4b0d8b024fd3746"},{"code":"(.toUpperCase \"Hello world\")","problem":3,"user":"50e114cce4b084616e11c664"},{"code":"(. \"HELLo world\" toUpperCase)","problem":3,"user":"52b49aebe4b0c58976d9ad2b"},{"problem":3,"code":"(format \"%s %s\" \"HELLO\" \"WORLD\")","user":"544b14b0e4b0e3978000695e"},{"code":"(first (list \"HELLO WORLD\"))","problem":3,"user":"4fa5406fe4b081705acca1ac"},{"code":"(clojure.string/join \" \" [\"HELLO\" \"WORLD\"])","problem":3,"user":"514a7e71e4b00c7db5067429"},{"problem":3,"code":"(.toUpperCase (.concat \"hello \" \"world\"))","user":"54d02d49e4b018d918be98dd"},{"problem":3,"code":"(clojure.string/upper-case \"Hello World\")","user":"5a22a54fe4b0ff51aa4b32cb"},{"problem":3,"code":"\"HELLO WORLD\"\n(.toUpperCase (.toLowerCase \"Hello World\"))","user":"56483f45e4b0284900eef62b"},{"problem":3,"code":"(-> \"hello world\"\n    (.toUpperCase)\n    (.toUpperCase) \n    (.toUpperCase))","user":"5556fbc9e4b0deb715856e1f"},{"code":"(.toUpperCase \"HELLO WORLd\")","problem":3,"user":"5012670ce4b030d97e4db70d"},{"code":"(.toUpperCase(.toLowerCase \"HELLO WORLD\"))","problem":3,"user":"52f09d3ce4b05e3f0be25ee3"},{"code":"(clojure.string/join [\"HELLO\" \" \" \"WORLD\"])","problem":3,"user":"537b1973e4b06839e8705e65"},{"code":"(->> [72 69 76 76 79 32 87 79 82 76 68] (map char) (apply str))","problem":3,"user":"532018efe4b08068f379edcd"},{"code":"(.toUpperCase \"hello World\")","problem":3,"user":"4fc792e0e4b0ee37620e1823"},{"code":"(.toUpperCase \"HelLo WorLD\")","problem":3,"user":"4fa9da14e4b081705acca1e7"},{"problem":3,"code":"((fn [[hd & tl] rslt] \n  (if (not hd) \n    rslt\n    (recur tl (str rslt (.toUpperCase (str hd))))))\n \"hello world\" \"\")","user":"594c1baae4b07ddc2dafae59"},{"code":"(reify Object (equals [_ _] (= _)))","problem":3,"user":"4fa340b4e4b081705acca18c"},{"code":"x","problem":3,"user":"52e635b3e4b09f7907dd146f"},{"code":"\"HELLO WORLD\" (.toUpperCase \"hello world\")","problem":3,"user":"5218bd1fe4b0a6757ad5adfa"},{"problem":3,"code":"(. (java.lang.String. \"hello world\") toUpperCase)","user":"547ea76fe4b0c51c1f4d730d"},{"code":"(. \"hello world\" toUpperCase)","problem":3,"user":"4fab012de4b081705acca20b"},{"problem":3,"code":"( str \"HELLO WORLD\" )","user":"57d1cd3fe4b0bd073c20236f"},{"code":"(String. \"HELLO WORLD\")","problem":3,"user":"4ef0be6e535dced4c769f20f"},{"problem":3,"code":"(str (.toUpperCase \"hello\") \" \" (.toUpperCase \"world\"))","user":"5afa3590e4b0cc2b61a3bcea"},{"code":"(.toUpperCase \"HeLLO WORLD\")","problem":3,"user":"500c5b4ae4b03d00572d2d88"},{"problem":3,"code":"(str \"HELLO\" \" WORLD\")","user":"5549394fe4b0a04f79299565"},{"code":"(str \"HELLO \" \"WORLD\")","problem":3,"user":"4e2ef93d535deb9a81d77f0f"},{"problem":3,"code":"(reduce #(str %1 \" \" %2) (map #(.toUpperCase(.toLowerCase %)) [\"HELLO\" \"WORLD\"]))","user":"570b28e6e4b0b0fb43fd06bd"},{"code":"(.concat \"HELLO\" \" WORLD\")","problem":3,"user":"4e691c79535d8ccf87e9fe97"},{"code":"(print-str \"HELLO WORLD\")","problem":3,"user":"4f3024bfe4b0d6649770a074"},{"code":"(str(.toUpperCase \"hello world\"))","problem":3,"user":"50254e70e4b0b0b8afb15aa7"},{"problem":3,"code":"\"HELLO WORLD\"\n;(.toUpperCase \"hello world\")","user":"5518df4ce4b06a49daca83ce"},{"code":"`\"HELLO WORLD\"","problem":3,"user":"515c46abe4b069911535cf0a"},{"problem":3,"code":"(.toUpperCase \"HELlO WORLD\")","user":"56f070fee4b04a395b9a0478"},{"code":"(clojure.string/upper-case \"hello world\")","problem":3,"user":"506f9423e4b082ae7d1032ca"},{"problem":3,"code":"(.toUpperCase \"hellO world\")","user":"56500332e4b0284900eef6b6"},{"problem":3,"code":"; fill the blank\n; this problem use java_string_method\n\"HELLO WORLD\"","user":"5aa4bcc3e4b0d174b936c889"},{"code":"(str \"H\" \"E\" \"LLO WORLD\")","problem":3,"user":"4e951f2c535dbda64a6f6b2f"},{"problem":3,"code":"(apply str (map char [72 69 76 76 79 32 87 79 82 76 68]))","user":"55b22c33e4b0da326a65cf79"},{"problem":3,"code":"(let [x \"HELLO WORLD\"]\nx)","user":"586d877ce4b01531a375e994"},{"code":"(.toString \"HELLO WORLD\")","problem":3,"user":"50bfe725e4b080409b860f26"},{"problem":3,"code":"(let [_ 1] \"HELLO WORLD\")","user":"605b52fbe4b079a07f8593f9"},{"problem":3,"code":"( str \"HELLO\" \" \" \"WORLD\")","user":"55c508f0e4b0e31453f649ac"},{"problem":3,"code":"(identity \"HELLO WORLD\")","user":"56e61c05e4b02e7e935eb6c2"},{"problem":3,"code":"(.toUpperCase \"hello WORLD\")","user":"5e619496e4b0fd0acd158690"},{"code":"( str \\H \\E \\L \\L \\O \\  \\W \\O \\R \\L \\D )","problem":3,"user":"4ddee37c535d08e6dec9fddc"},{"problem":3,"code":"(str \"HELLO WORLD\" )","user":"56689295e4b04acd4f672df1"},{"problem":3,"code":"( (fn [] (.toUpperCase \"hello world\")) )","user":"5790f468e4b0ebec4cfb75b3"},{"problem":3,"code":"(print-str(.toUpperCase \"hello world\"))","user":"56f262fde4b04a395b9a04a3"},{"problem":3,"code":";;\"HELLO WORLD\"\n;;(.toUpperCase \"hello world\")\n\n;;(.toUpperCase (apply str (map char (map int [\\h \\e \\l \\l \\o \\ \\w \\o \\r \\l \\d]))))\n\n(.toUpperCase (apply str (map char '(104 101 108 108 111 32 119 111 114 108 100))))","user":"56ff0ef3e4b08d47c97781ba"},{"problem":3,"code":"(.toUpperCase \"HELlo WORLD\")","user":"5a1dda7de4b0ff51aa4b3261"},{"problem":3,"code":"(.concat \"HELL\" \"O WORLD\")","user":"57539e04e4b02ea1147992ab"},{"code":"(.toUpperCase (clojure.string/join \" \" [\"hello\" \"world\"]))","problem":3,"user":"4fc52c46e4b081705acca385"},{"problem":3,"code":"(.toUpperCase (String. \"hello world\"))","user":"54c32216e4b045293a27f60a"},{"code":"((fn [x] (.toUpperCase x)) \"hello world\")","problem":3,"user":"4dad999bc9a9d6ed1e99dc57"},{"code":"(-> \"hello world\" .toUpperCase)","problem":3,"user":"50bc4e73e4b0594b91591c3d"},{"problem":3,"code":"; Java methods are available with dot notation: .<Java method>\n\"HELLO WORLD\"","user":"57fa06c9e4b0d3187e900958"},{"code":"(.toUpperCase \"hEllO WOrld\")","problem":3,"user":"51d4e053e4b013d740b70deb"},{"problem":3,"code":"( str (.toUpperCase \"hello world\"))","user":"5d27cf23e4b092dab7f59c74"},{"problem":3,"code":"(#(.toUpperCase \"hellO WORLD\"))","user":"5deecad8e4b093ff717275a2"},{"problem":3,"code":"(str (.toUpperCase \"hello \") (.toUpperCase \"world\"))","user":"6070e0cce4b069485764de29"},{"code":"; \"HELLO WORLD\"\n\n(.toUpperCase \"hello world\")","problem":3,"user":"525f61aae4b0cb4875a45dcb"},{"problem":3,"code":"(or \"HELLO WORLD\" false)","user":"576b9780e4b0a07e8fc1812f"},{"problem":3,"code":"(.toUpperCase (.toLowerCase (.toUpperCase \"hello world\")))","user":"5e1e9e08e4b0dc959400855d"},{"problem":3,"code":"\"HELLO WORLD\"\n(.toUpperCase \"hello world\")","user":"5846804de4b089d5ab817e91"},{"code":"(.toUpperCase (.concat \"HELLO \" \"WORLD\"))","problem":3,"user":"530db182e4b08068f379ecad"},{"code":"(str \"HELLO \" (.toUpperCase \"world\"))","problem":3,"user":"4e2a34c6535deb9a81d77f00"},{"code":"(.toUpperCase \"HELLO WORLD\")","problem":3,"user":"4f031763535dcb61093f6a5b"},{"problem":3,"code":"(.toUpperCase \"Hello WoRlD\")","user":"5dca511ce4b03836ba07d82f"},{"problem":3,"code":"(str \"HELLO WORL\" \"D\")","user":"55d4ae39e4b0e31453f64a7b"},{"code":"(.substring\n  \"HELLO WORLD, how about a track that doesn't assume java knowledge, eh?\"\n  0 11)","problem":3,"user":"4f24957ae4b0d66497709fed"},{"code":"(.toUpperCase (.toLowerCase \"HELLO WORLD\"))","problem":3,"user":"4e09691f535d04ed9115e7af"},{"problem":3,"code":"(.toUpperCase (str \"hello\" \" world\"))","user":"55c50139e4b0e31453f649ab"},{"problem":3,"code":"(clojure.string/upper-case\"hello world\")","user":"5e4ba8e8e4b0889a8790a55a"},{"problem":3,"code":"(.toUpperCase \"HELLO world\")","user":"55c1fa2be4b0e31453f64971"},{"code":"(.toUpperCase \"hello world\" )","problem":3,"user":"4e59d429535d8a8b8723a2a3"},{"problem":3,"code":"\"HELLO WORLD\",","user":"5972f089e4b01722bebd4c90"},{"problem":3,"code":"(clojure.string/join \"\" (reverse (clojure.string/split \"DLROW OLLEH\" #\"\")))","user":"5c1c08cde4b01240ff567219"},{"code":"(.concat \"HELLO \" \"WORLD\")","problem":3,"user":"4fae5401e4b081705acca249"},{"code":"(str \"HELLO\" (subs \"AMAIZING WORLD\" 8))","problem":3,"user":"52b43708e4b0c58976d9ad1d"},{"problem":3,"code":"(do println (.toUpperCase \"hello world\"))","user":"5703d21ae4b08d47c97781ff"},{"code":"(apply str '(HELLO \" \" WORLD))","problem":3,"user":"5372eaf2e4b06d7f452d9e03"},{"code":"(.toUpperCase \"HeLLO WorLd\")","problem":3,"user":"4e7d2f2f535db169f9c796cd"},{"code":"(let [_ 32 i int m map s str c char n not=\n      a #(n (i %) _)\n      u #(c (- (i %) _))\n      U #(if (a %) (u %) %)]\n  (->> \"hello world\" (m U) (apply s)))","problem":3,"user":"4f0891a2535dcb61093f6c3b"},{"problem":3,"code":"(.toUpperCase \"hElLO woRld\")","user":"57155980e4b07c98581c3ad7"},{"code":"'\"HELLO WORLD\"","problem":3,"user":"4e13c44a535d04ed9115e7db"},{"problem":3,"code":";; skill: Use Java interop instead of a Clojure function\n\"HELLO WORLD\"","user":"60917abde4b00e9e6653c3d5"},{"code":"(str \"HELLO\" \" \" \"WORLD\")","problem":3,"user":"4e131d5b535d04ed9115e7d4"},{"code":";; making the entire string uppercase\n\"HELLO WORLD\"","problem":3,"user":"53713ebee4b0fc7073fd6ead"},{"problem":3,"code":"(str \"HELLO\" \" \" \"W\" \"ORLD\")","user":"592dbbd5e4b072a2710fcf7f"},{"code":"(str (.toUpperCase \"hello world\"))","problem":3,"user":"511b50cfe4b07ab9ec456181"},{"problem":3,"code":"(str \"HELLO\" \\space \"WORLD\")","user":"53abd414e4b047364c044452"},{"problem":3,"code":"(clojure.string/upper-case  \"hello world\")","user":"570243e2e4b08d47c97781dd"},{"problem":3,"code":"(str \"HELLO WOR\" \"LD\")","user":"5566d812e4b0c656e3ff1837"},{"code":"\"HELLO WORLD\"","problem":3,"user":"4db1b3951254ad5b4805fa6f"},{"problem":3,"code":"(new String \"HELLO WORLD\")","user":"567e418fe4b0feffd0d18eb1"},{"problem":3,"code":"(. (String. \"hello world\") toUpperCase)","user":"569bce78e4b0542e1f8d1458"},{"code":"(.toUpperCase \"Hello World\")","problem":3,"user":"5144c0a2e4b0d29bc9e5e33b"},{"problem":3,"code":"(new java.lang.String (.toUpperCase \"hello world\"))","user":"56927ed3e4b0dcc4269f40fb"},{"code":"(clojure.string/join \" \"[ \"HELLO\" \"WORLD\" ])","problem":3,"user":"52f1bc81e4b05e3f0be25eef"},{"problem":3,"code":"\"HELLO WORLD\";","user":"57b0d99ee4b0fbc9809a274b"},{"problem":3,"code":"(.toUpperCase \"HeLlO WoRlD\")","user":"5b06c05fe4b0cc2b61a3bd9f"},{"problem":3,"code":"(clojure.string/upper-case \"HELLO WORLD\")","user":"5dfdd5a0e4b0a607a9a45cff"}]