[{"problem":68,"code":"(loop [x 6 result []]\n  (if (> x 1)\n    (recur (dec x) (conj result (+ 1 x)))\n    result))","user":"59da2569e4b0ef0a1e9b5c62"},{"problem":68,"code":"[7 6  5 4 3]","user":"56e1122fe4b03a7c14b85a20"},{"problem":68,"code":"(loop [x 1\n         result []]\n    (if (< x 6)\n      (recur (inc x) (conj result (+ 2 x)))\n      (vec (reverse result))))","user":"55079757e4b021ccfedb96a9"},{"problem":68,"code":"[7 6 5 4 3]\n;; nejdřív je x 5. Conjoineme tedy zatím prázdný seznam a 2+5=7\n;; pak je x 4. Conjoineme tedy 7 a 2+4=6\n;; pak je x 3. Conjoineme tedy 7 6 a 2+3=5\n;; pak je x 2. Conjoineme tedy 7 6 5 a 2+2=4\n;;pak je x 1. Conjoineme tedy 7 6 5 4 a 2+1=3\n;;pak je x 0. Nebyla splněna podmínka if","user":"5fb4092de4b08cb800c85b3c"},{"code":"'(7, 6, 5 ,4 ,3)","problem":68,"user":"4eb92051535dfed6da9c6d4c"},{"code":"`(7 6 5 4 3)","problem":68,"user":"4ea41fc2535d7eef308072cb"},{"code":"(map (partial + 2) [5 4 3 2 1])","problem":68,"user":"4f2cdd42e4b0d6649770a055"},{"code":"(reverse (range 3 8))","problem":68,"user":"4f04a06d535dcb61093f6bd9"},{"problem":68,"code":"(vec (map #(+ 2 %) [5 4 3 2 1]))","user":"557af43ae4b05c286339e0a8"},{"code":"[7,6,5,4,3]","problem":68,"user":"4e8f0c4b535d65386fec2145"},{"problem":68,"code":"[7 6 5     4 3 ]","user":"553a74ede4b09218d5f44ff7"},{"problem":68,"code":"[7 6 5 4 3] \n;(reverse [7 6 5 4 3] )","user":"541ddadbe4b01498b1a71a84"},{"code":"(list 7 6 5 4 3 )","problem":68,"user":"500fa64de4b0c8af2eae4182"},{"code":"(reverse (map #(+ 3 %)(vec (range 5))))","problem":68,"user":"4ee1c955535d10e5ff6f535d"},{"problem":68,"code":"`( 7 6 5 4 3 )","user":"54a11042e4b09f271ff37c49"},{"code":"'(7, 6, 5, 4, 3)","problem":68,"user":"4ef87ea7535dced4c769f25f"},{"code":"(map #(+ % 2) (range 5 0 -1))","problem":68,"user":"5089ebfee4b03217b26a539f"},{"code":"(rseq [3 4 5 6 7])","problem":68,"user":"4efa3d4b535dced4c769f270"},{"problem":68,"code":"(reverse (range 3 8 1))","user":"550111d3e4b07d26eda61d6f"},{"code":"(reverse [3,4,5,6,7])","problem":68,"user":"509b152be4b0412cdea6eb1e"},{"code":"(sort > (range 3 8))","problem":68,"user":"4ef2d6c5535dced4c769f222"},{"code":"((fn [x result]\n      (if (> x 0)\n        (recur (dec x) (conj result (+ x 2)))\n          result )) 5 [])","problem":68,"user":"5112f1a1e4b0350614f07a82"},{"code":"[ 7 6 5 4 3 ]","problem":68,"user":"4e6dc95a535d5021c1a895f1"},{"problem":68,"code":"(vec (reverse (drop 3 (range 8))))","user":"57d031d6e4b0bd073c202354"},{"problem":68,"code":"(reverse (map #(+ % 2) (range 1 6)))","user":"563f2eaae4b08d4f616f5ed1"},{"code":"'(7 6 5 4 3\n    )","problem":68,"user":"519b231ee4b0ac1b7dced6a2"},{"problem":68,"code":"[7 6 5 4 3]\n;'(7 6 5 4 3)","user":"55129636e4b06e50f9beb1ab"},{"code":"(take 5 (reverse (range 1 8)))","problem":68,"user":"5082ccb3e4b06a522e8c7af3"},{"problem":68,"code":"; start with: x = 5, result = []\n; then recur with: x = 4, result = [6]\n; then recur with: x = 3, result = [6 5]\n; then recur with: x = 2, result = [6 5 4]\n; then recur with: x = 1, result = [6 5 4 3]\n; then recur with: x = 0, result = [6 5 4 3 2]\n; then return: result = [6 5 4 3 2]\n[7 6 5 4 3]","user":"55a152fce4b0acc240e31510"},{"code":"[ 7 6 5 4 3]","problem":68,"user":"4e5d1912535d8a8b8723a2c9"},{"problem":68,"code":"(apply vector (range 7 2 -1))","user":"57c99a45e4b05aa3c4741d31"},{"problem":68,"code":"[7 6 5 4 3] ; X=5, X=4, X=3, X=2, X=1, X=0 (returns result and doesn't add anything to result[])","user":"515cc82ee4b069911535cf19"},{"code":"[7 6 5 4 3\n]","problem":68,"user":"51ac9482e4b09397d5109774"},{"code":"[(+ 2 5) (+ 2 4) (+ 2 3) (+ 2 2) (+ 2 1)]","problem":68,"user":"4feb3085e4b0681fd128dc87"},{"code":"[7, 6, 5, 4, 3]","problem":68,"user":"4f748b54e4b044e54cd9a8fa"},{"problem":68,"code":"[7 6 5 4 3] ; note that conj adds an element at the end of a vector (vs. front of list)","user":"543be8f0e4b032a45b869337"},{"problem":68,"code":"(->> (range 5) (reverse) (map (partial + 3)) (vec))","user":"530e75d5e4b08068f379ecba"},{"problem":68,"code":"[7  6  5  4  3]","user":"602abb59e4b0d5df2af2225e"},{"problem":68,"code":"[ (+ 2 5) (+ 2 4) (+ 2 3) (+ 2 2) (+ 2 1)]","user":"5fb3a096e4b08cb800c85b35"},{"problem":68,"code":"[7 \n 6 5 4 3]","user":"5075e374e4b09049dea827a5"},{"code":"(map (partial + 2) '(5 4 3 2 1))","problem":68,"user":"52f8b86de4b047fd55836fdb"},{"code":"(vec (reverse (range 3 8)))","problem":68,"user":"4ec3650f535dcc7ae8597d56"},{"problem":68,"code":"(reverse (drop 3 (range 8)))","user":"568e450fe4b0dcc4269f40d0"},{"problem":68,"code":"[7 6 5 4 3\n \n]","user":"54418311e4b032a45b869370"},{"problem":68,"code":"(map #(+ 2 %) (reverse (range 1 6)))","user":"573d8658e4b05c31a32c0814"},{"code":"( list 7 6 5 4 3)","problem":68,"user":"50bf7b72e4b0ffd967a66cc1"},{"code":"(map #(+ 2 %) (range 5 0 -1))","problem":68,"user":"4ef19836535dced4c769f217"},{"problem":68,"code":"(map #(+ % 2) [5 4 3 2 1])","user":"567bf820e4b05957ce8c61ad"},{"code":"(map #(+ 2 %) [5 4 3 2 1])","problem":68,"user":"50479524e4b0371827a27bc4"},{"code":"[7 6 5 4 3]","problem":68,"user":"4dcd818e535d5973398f929d"},{"code":"(reverse [ 3 4 5 6 7])","problem":68,"user":"4e1248b1535d04ed9115e7cf"},{"problem":68,"code":"(vec [7 6 5 4 3])","user":"573eb8f2e4b05c31a32c082f"},{"code":"[7 6 5 4  3]","problem":68,"user":"51a05bede4b0b292b01ee3f4"},{"problem":68,"code":"; [6 ] x = 4\n; [6 5] x = 3\n\n[7 6 5 4 3]","user":"53fc88e7e4b0de5c418485be"},{"code":"(-> (range 3 8) (reverse))","problem":68,"user":"4f584064e4b0a7574ea71846"},{"problem":68,"code":"(take 5 (iterate dec 7))","user":"5294a49be4b02ebb4ef7500f"},{"problem":68,"code":";5 (+ 2 5) 7\n;4 (+ 2 4) 6\n;3 (+ 2 3) 5\n;2 (+ 2 2) 4\n;1 (+ 2 1) 3\n[7 6 5 4 3]","user":"5bcee7d9e4b0e9689409ee22"},{"code":"'(7 6 5 4 3)","problem":68,"user":"4dc7f472535d8a4b2fd74293"},{"code":"(range 7 2 -1)","problem":68,"user":"4eca7a87535d6d7199dd3705"},{"problem":68,"code":"(map inc '(6 5 4 3 2))","user":"5a4e3166e4b05d388ecb6bbb"},{"problem":68,"code":"(seq [7 6 5 4 3])","user":"5263e6d2e4b03e8d9a4a70c0"},{"problem":68,"code":"'[7, 6, 5, 4, 3]","user":"54bc69a7e4b0ed20f4ff6ecf"},{"problem":68,"code":"(conj (conj (conj (conj (conj [] 7) 6) 5) 4) 3)","user":"5d406babe4b05dd059a54367"},{"code":"'[7 6 5 4 3 ]","problem":68,"user":"4fc8d905e4b0ee37620e183d"},{"code":"(map #(+ 2 %) '[5 4 3 2 1])","problem":68,"user":"53372d7de4b0e30313ee6c87"},{"code":"(loop [x 5\r\n         result []]\r\n    (if (> x 0)\r\n      (recur (dec x) (conj result (+ 2 x)))\r\n      result))","problem":68,"user":"4edc0c16535d10e5ff6f531f"},{"code":"(for [i (range 5 0 -1)\n      :let [x (+ 2 i)]]\n  x)","problem":68,"user":"5300158ae4b0d8b024fd370f"},{"code":"'(7,6,5,4,3)","problem":68,"user":"4ff5a42ae4b0678c553fc36c"},{"code":"(take 5 (reverse (range 8)))","problem":68,"user":"4e6b9729535d8ccf87e9ff1b"},{"code":"(vec (range 7 2 -1))","problem":68,"user":"4f0c4518535d0136e6c2230b"},{"problem":68,"code":"(loop [x 5 result []]\n  (if (> x 0)\n         (recur (dec x) (conj result (+ 2 x))) \n         result))","user":"548a6c2ee4b0e286459a11f3"},{"problem":68,"code":"'(7 6 5  4 3)","user":"57c647bbe4b05aa3c4741cf3"},{"problem":68,"code":"( vector 7 6 5 4 3)","user":"5cf4ec97e4b087f62be35a8b"},{"problem":68,"code":"(range (+ 2 5) (+ 2 0) -1)","user":"53de4bdae4b0d874e779ae32"},{"problem":68,"code":"'[ 7 6 5 4 3]","user":"5ab4fd4ae4b073f17744262b"},{"problem":68,"code":"`[7 6 5 4 3]","user":"5b3251c1e4b025bcb146f317"},{"code":";; Swearjure \n;; Just because the question is simple, does not\n;; mean the answer has to be\n[(+ (*) (*) (*) (*) (*) (*) (*)) \n (+ (*) (*) (*) (*) (*) (*))\n (+ (*) (*) (*) (*) (*))\n (+ (*) (*) (*) (*)) \n (+ (*) (*) (*))]","problem":68,"user":"4e836a06535db62dc21a62d5"},{"code":"'( 7 6 5 4 3)","problem":68,"user":"5105ed16e4b01150e115ebe2"},{"code":"(vector 7 6 5 4 3 )","problem":68,"user":"53830109e4b06839e8705ed8"},{"problem":68,"code":"(loop [x 5 r []] (if (pos? x) (recur (dec x) (conj r (+ 2 x))) r))","user":"5657fc1ae4b0f9d632dd84ad"},{"code":"[7 6 5 4 3]\n'(7 6 5 4 3 )","problem":68,"user":"4e9dd9ab535dbda64a6f6b8d"},{"code":"[7, 6,5,4,3]","problem":68,"user":"503539dee4b0ed9c821488f6"},{"problem":68,"code":"'( 7 6 5 4 3  )","user":"558ee1c9e4b0277789237659"},{"code":"(list 7,6,5,4,3)","problem":68,"user":"4e7dfd48535db169f9c796fa"},{"problem":68,"code":"(-> (range 3 8) (reverse) (vec))","user":"5c493046e4b0e06e1360a3cb"},{"problem":68,"code":"(reverse ( range 3 8))","user":"5737edb0e4b0cd1946bd1050"},{"code":"(loop [x 5\n         result []]\n    (if (> x 0)\n      (recur (dec x) (conj result (+ 2 x)))\n      result))","problem":68,"user":"4e5d2dc5535d8a8b8723a2ca"},{"code":"(reverse [3 4 5 6 7])","problem":68,"user":"4ecc70af535d23f0362276fb"},{"code":"[7  6 5 4 3]","problem":68,"user":"51944aaae4b0142f60b4aedc"},{"code":"(quote (7 6 5 4 3))","problem":68,"user":"5075667de4b09049dea8279c"},{"code":"(map (partial + 2) (range 5 0 -1))","problem":68,"user":"4e6dd51b535d5021c1a895f6"},{"code":"(reverse '(3 4 5 6 7))","problem":68,"user":"52dd76e5e4b09f7907dd13e3"},{"code":"(reverse (map #(+ 2 %) (range 1 6)))","problem":68,"user":"4eb27fad535d7eef3080734a"},{"problem":68,"code":"[7 6,5,4,3]","user":"54e606c3e4b024c67c0cf803"},{"problem":68,"code":"((fn [x result]\n   (if (> x 0)\n     (recur (dec x) (conj result (+ 2 x)))\n     result))\n 5 [])","user":"53a2e6abe4b0f1fc7453882f"},{"problem":68,"code":"((fn foo [x] (when (> x 2) (conj (foo (dec x)) x))) 7)","user":"5f274aeee4b0857314092c92"},{"problem":68,"code":"(#(->> (range 1 6)\n     (map (partial + 2))\n     (reverse)))","user":"56677192e4b04acd4f672dd5"},{"code":"(into [] (map #(+ % 2) (take 5 (iterate dec 5))))","problem":68,"user":"52e683c0e4b09f7907dd1477"},{"problem":68,"code":"[7 6 5 4 3  ]","user":"53ef235de4b0d648e757f4d4"},{"code":"(vector 7 6 5 4 3)","problem":68,"user":"52a18da7e4b04e0c58e87bd9"},{"problem":68,"code":"(reverse (map (partial + 3) (range 5)))","user":"572e43f7e4b0cd1946bd0f83"},{"problem":68,"code":"[7 6 5 4 3];;; (dec x) ?","user":"5ce5b43be4b0a17bb84e2b7a"},{"code":"(vec (map #(+ 2 %) (range 5 0 -1)))","problem":68,"user":"538e29d1e4b0b51d73faae80"},{"problem":68,"code":"(vec '(7 6 5 4 3))","user":"562fd603e4b0ab312c17ebdd"},{"problem":68,"code":"[7, 6, 5 , 4, 3]","user":"57f3f2bee4b07bbd65c32b1a"},{"code":"(map + '(5 4 3 2 1) (take 5(repeat 2)))","problem":68,"user":"52da7ae5e4b09f7907dd13b8"},{"code":"[7 6 5 4 3 ]","problem":68,"user":"4e68323a535d8ccf87e9fe86"},{"problem":68,"code":"(loop [x 5\n       result []]\n  (if (> x 0)\n    (recur (dec x) (conj result (+ 2 x)))\n    result))","user":"5461c402e4b01be26fd746a6"},{"code":"(reverse '( 3 4 5 6 7))","problem":68,"user":"51dc0ed1e4b09c47a74ce105"},{"problem":68,"code":";; This results in a VECTOR - not a list! conj is at END for vector!\n[7 6 5 4 3]","user":"55b7f263e4b01b9910ae29b4"},{"code":"'(7 6 5 4 3 )","problem":68,"user":"4e6cf2be535de274dd8d818a"},{"problem":68,"code":"[7 6 5 4 3]\n\n;; this `loop recur` code is the equivalent of (range 7 2 -1)","user":"5fb68f09e4b08cb800c85b58"},{"problem":68,"code":"(range 7 2 -1)\n\n;'(7 6 5 4 3)","user":"55c387e4e4b0e31453f6498b"},{"code":"[7 6 5  4 3]","problem":68,"user":"513a49d3e4b067e25a345ec9"},{"problem":68,"code":"; dec is decrese, verminder x met 1\n; conj is conjoin, voeg het getal toe aan de array\n; result is een array\n; x = 5\n; eerst dacht ik [6 5 4 3 2], maar het is [7 6 5 4 3], conj wordt dus aangeroepen voor dec\n[7 6 5 4 3]","user":"5637bd38e4b0bfe05bf117de"},{"problem":68,"code":"`(7,6,5,4,3)","user":"58c66990e4b021aa9917ed53"},{"problem":68,"code":";;lijst = 0 - 1 2 3 4 5\n'(7, 6, 5, 4, 3)","user":"548018d3e4b0c51c1f4d7327"},{"problem":68,"code":";(map (fn [i] (+ i 2)) [5 4 3 2 1])\n\n(reverse (range 3 8))","user":"54f4ab86e4b0f2f3c5226e84"},{"problem":68,"code":"[7, 6, 5, 4, 3]\n\n;  (loop [x 5 result []]\n;    (if (> x 0)\n;      (\n;        recur (dec x) (conj result (+ 2 x))\n;      ) \n;      \n;      result\n;    )\n;  )","user":"55d7312ee4b0e31453f64a9f"},{"problem":68,"code":"[7 6  5 4 3 ]","user":"55f68468e4b06e875b46ce94"},{"code":"(take 5 (iterate dec (+ 2 5)))","problem":68,"user":"4fa98b72e4b081705acca1e2"},{"code":"'[7 6 5 4 3]","problem":68,"user":"4df1ce44535d08e6dec9fe1f"},{"code":"'( 7 6 5 4 3 )","problem":68,"user":"4f3e3937e4b0e243712b1f7f"},{"problem":68,"code":";4 6\n;3 5\n;2 4\n;1 3\n[7 6 5 4 3]","user":"533923fde4b0e30313ee6ca4"},{"problem":68,"code":"`( 7 6  5 4 3)","user":"6001c90ce4b074f607df6626"},{"code":"(list 7 6 5 4 3)","problem":68,"user":"4e75edfe535d7a570dd295c7"},{"problem":68,"code":"[7 6  5  4 3 ]","user":"52f0ea04e4b05e3f0be25ee6"},{"problem":68,"code":"`(7 6 5 4 3 )","user":"562733a6e4b00e49c7cb47ca"},{"problem":68,"code":"(into [] (reverse (range 3 8)))","user":"5ef85776e4b09b61f08553c8"},{"problem":68,"code":"'[7,6,5,4,3]","user":"543823f1e4b032a45b869311"},{"problem":68,"code":"(loop [x 5 result []] (if (> x 0) (recur (dec x) (conj result (+ 2 x))) result))","user":"565f2461e4b068f2fe63dc3b"},{"problem":68,"code":"[7\n6\n5\n4\n3]","user":"5a998d39e4b0d174b936c79c"}]