[{"problem":21,"code":"(fn getnth [items n] (if (= 0 n) (first items) (getnth (rest items) (dec n) ) ))","user":"56326995e4b0bfe05bf117a3"},{"code":"(fn [x n] (loop [x x n n i 0] (if (= n i) (first x) (recur (rest x) n (+ i 1)))))","problem":21,"user":"51f9b1d0e4b09be9c177e550"},{"code":"(fn my-nth [l n]\n  (if (= 0 n)\n    (first l)\n    (my-nth (rest l) (- n 1))))","problem":21,"user":"52d7412ce4b09f7907dd1371"},{"code":"(fn [lst elt] (last (take (+ elt 1) lst)))","problem":21,"user":"52edec96e4b05e3f0be25ebf"},{"problem":21,"code":"(fn myNth [coll, index] (if (= 0 index) (first coll) (myNth (rest coll) (dec index))))","user":"5aad79d9e4b073f177442578"},{"problem":21,"code":"(fn [input n] (first (drop n input)))","user":"542baf7ce4b0dad94371f291"},{"code":"(fn [a b] ((vec a) b))","problem":21,"user":"4e8d7b4b535d65386fec2135"},{"problem":21,"code":"(fn [coll v] (first (drop v coll)))","user":"5eae201ae4b00a66d4a951eb"},{"problem":21,"code":"(fn [x y] ((zipmap (range) x) y))","user":"56949fc5e4b0dcc4269f4120"},{"problem":21,"code":"(fn [list place]\n  (loop [remain list cur 0]\n    (if (< cur place)\n      (recur (rest remain) (inc cur))\n      (first remain))))","user":"5662a5eee4b0e91d5f5c564b"},{"problem":21,"code":"(fn\n    [seq n]\n    (loop [s seq i 0 f n]\n\n    (if (= i f)\n        (first s)\n        (recur (rest s) (+ i 1) f)\n    )\n    )\n    )","user":"56684356e4b04acd4f672de4"},{"code":"(fn n-th [l index] \n  (if (= index 0)\n    (first l)\n    (n-th (rest l) (- index 1))))","problem":21,"user":"4f0388e8535dcb61093f6b17"},{"code":"(fn mynth [items n]\n  (if (= 0 n) (first items) \n(mynth (rest items) (- n 1))))","problem":21,"user":"4e7dfd48535db169f9c796fa"},{"code":"(fn [x e]\n  (last (take (+ e 1) x)))","problem":21,"user":"5229f4a3e4b0590a43906cea"},{"code":"(fn \n  ([s n] (first (drop n s))))","problem":21,"user":"4e30da02535deb9a81d77f17"},{"problem":21,"code":"(fn my_nth [s, n] (last (take (+ n 1) s)) )","user":"56304db8e4b073c1cf7a9be5"},{"problem":21,"code":"(fn enth \n  ([xs n] \n  (if (= n 0)\n    (first xs)\n    (enth (rest xs) (dec n)))))","user":"5c8aa02de4b048ec896c5958"},{"code":"(fn hoge [x y]\n  (get (vec x) y))","problem":21,"user":"507e5cf8e4b085af06e3afd1"},{"problem":21,"code":"(fn my-nth [lst cnt] (if (= cnt 0) \n                       (first lst) \n                       (my-nth (rest lst) (- cnt 1))))","user":"54427832e4b032a45b86937d"},{"code":"(fn my-nth [coll x] (if (= x 0) (first coll) (my-nth (rest coll) (dec x))))","problem":21,"user":"4ef4c1ff535dced4c769f23e"},{"problem":21,"code":"(fn getN [s n] (if (= n 0) (first s) (getN (rest s) (- n 1))))","user":"568820e8e4b0dcc4269f4067"},{"code":"(fn foo [a n] (if (= n 0) (first a) (foo (rest a) (- n 1))))","problem":21,"user":"52dfc89be4b09f7907dd1405"},{"problem":21,"code":"(fn [col n] \n  (loop [col col i 0]\n     (if (= i n) \n        (first col)\n        (recur (rest col) (inc i)))))","user":"5167e8ace4b0c5a4140a309a"},{"code":"(fn [x n] ((vec x) n))","problem":21,"user":"4ef355e3535dced4c769f228"},{"problem":21,"code":"(fn [seq1 number] (if (= 0 number) (first seq1) (recur (next seq1) (dec number))))","user":"5a2f57b4e4b09cafd31c7f89"},{"problem":21,"code":"(fn [col pos]\n  (if (zero? pos) \n    (first col)\n    (recur (rest col) (dec pos))))","user":"57410964e4b05c31a32c085f"},{"problem":21,"code":"(fn nth-element [s n]\n  (if (= n 0)\n    (first s)\n    (nth-element (rest s) (- n 1))\n  )\n)","user":"5d6f0533e4b04d129b00f2d0"},{"problem":21,"code":"(fn [coll index]\n  (loop [i 0\n         xs coll]\n    (if (= i index)\n      (first xs)\n      (recur (inc i) (rest xs)))))","user":"541d3c0fe4b01498b1a71a7e"},{"problem":21,"code":"(fn blahblah [coll place]\n  (last (take (+ place 1) coll)))","user":"58e92d62e4b056aecfd47d05"},{"code":"(fn[l n] (first (drop n l)))","problem":21,"user":"4e6a2498535d8ccf87e9fea1"},{"code":"(fn [x i] (.get x i))","problem":21,"user":"521e1174e4b0dd19981ad06d"},{"code":"(fn [ls pos]\n  ((fn helper [x y]\n    (if (= y 0)\n     (first x)\n     (helper (rest x) (- y 1)))) ls pos))","problem":21,"user":"50ed8a5fe4b06330c1f87c3d"},{"problem":21,"code":"(fn \n  [myList el]\n  (.get myList el))","user":"54ec58f6e4b024c67c0cf852"},{"problem":21,"code":"(fn [items index] \n  (loop [items items x 0] (if (= x index) (first items) (recur (next items) (+ x 1))))\n  )","user":"5c527129e4b0fb8c5ffd99de"},{"problem":21,"code":"(fn [collection which] (if (= which 0) \n                         (first collection)\n                         (recur (rest collection) (dec which))))","user":"564e1bbbe4b0284900eef696"},{"problem":21,"code":"(fn [x, i]\n  (last (take (inc i) x)))","user":"59da060ee4b0ef0a1e9b5c61"},{"code":"(fn th[x, c] \n  (if (= c 0) \n    (first x) \n    (th (rest x) (- c 1))\n  )\n)","problem":21,"user":"5093ca51e4b097f48cc38585"},{"code":"#(first (subvec (vec %1) %2 (inc %2)))","problem":21,"user":"50c0fac8e4b096f585049c34"},{"problem":21,"code":"(fn nth-elem\n  [seq n]\n  (if (= n 0)\n    (first seq)\n    (nth-elem (rest seq) (dec n))))","user":"56af99dfe4b061e3ca319ad5"},{"problem":21,"code":"(fn  [s n] (loop [curr 0 s' s]\n             (if (= curr n)\n                 (first s')\n                 (recur (inc curr) (rest s')))))","user":"548f5086e4b0e286459a1239"},{"code":"(fn [n i] (first (drop i n)))","problem":21,"user":"4e5d2dc5535d8a8b8723a2ca"},{"problem":21,"code":"(fn get-nth-element [items, index]\n  (last (take (+ index 1) items)))","user":"5d652873e4b0db5d338d15ce"},{"problem":21,"code":"(fn find-nth\n  [collection index]\n  (if (= index 0)\n    (first collection)\n    (if (= index 1)\n      (second collection)\n      (if (> index 1)\n        (find-nth (drop 1 collection) (- index 1))))))","user":"55ef88c0e4b066087aa94536"},{"code":"(fn [x y]\n(loop [l x n 0]\n(if(= n y)\n(first l)\n(recur (rest l) (+ n 1)))))","problem":21,"user":"517e6671e4b0329b27fa9f56"},{"code":"(fn [vector x] (get (vec vector) x))","problem":21,"user":"53854e38e4b06839e8705f00"},{"code":"(fn [col n] (loop [c col i 0] (if (= i n) (first c) (recur (rest c) (inc i)))))","problem":21,"user":"4e794004535db169f9c796a1"},{"problem":21,"code":"(fn [xs n]\n  (loop [i n\n         ys xs]\n    (if (zero? i)\n      (first ys)\n      (recur (dec i) (rest ys)))))","user":"5e0e14bde4b099d064962fa3"},{"problem":21,"code":"(fn [coll index]\n  (loop [my-coll coll\n         iter 0]\n    (if (= iter index)\n      (first my-coll)\n      (recur (rest my-coll) (inc iter)))))","user":"5ae15e11e4b0837691e92c53"},{"problem":21,"code":"(fn [coll n]\n    (if\n        (zero? n)\n        (first coll)\n        (recur (rest coll) (dec n))))","user":"565fe434e4b068f2fe63dc45"},{"problem":21,"code":"(fn Nte [L n]\n  (if (= n 0) \n    (first L) \n    (Nte (rest L)\n         (- n 1)\n         )\n    )\n  )","user":"56c72829e4b0ed865f9758b8"},{"code":"(fn [coll n]\n  (loop [col coll cnt n]\n    (if (zero? cnt)\n      (first col)\n      (recur (rest col) (dec cnt)))))","problem":21,"user":"507a08e4e4b08327cd804a67"},{"problem":21,"code":"(\n fn mn [s x] (if (zero? x)\n(first s)\n(mn (rest s) (- x 1))\n               )\n  )","user":"58b314abe4b0ebc645576d1a"},{"code":"(fn [x y](last (take (+ y 1) x)))","problem":21,"user":"4f95a8a1e4b0dcca54ed6cd7"},{"problem":21,"code":"(fn [s n]\n  (let [f (fn f [s n]\n            (if (= n 0)\n              (first s)\n              (f (rest s) (dec n))))]\n    (f s n)))","user":"59428923e4b060784b3b790f"},{"problem":21,"code":"(fn [lst idx]\n  (cond\n    (> idx 0) (recur (rest lst) (dec idx))\n    :else (first lst)))","user":"54e0afd0e4b024c67c0cf7b6"},{"problem":21,"code":"(fn[a b]   (first (keep-indexed (fn [idx v](if (= idx b) v)) a) ))","user":"53fc22f2e4b0de5c41848595"},{"problem":21,"code":"(fn [c i](last (take (+ 1 i) c)))","user":"55d1f231e4b0e31453f64a4e"},{"code":"(fn [x idx]\n  (loop [acc 0 y x]\n  (if (= idx acc) (first y) (recur (inc acc) (rest y)))))","problem":21,"user":"4e497f2f535dc968683fc4c2"},{"code":"(fn [mylist n]\n  (loop [cnt n acc mylist]\n    (if (zero? cnt) (first acc)\n      (recur (dec cnt) (rest acc))\n)))","problem":21,"user":"501b212ee4b0b12d9c5f4d83"},{"code":"(fn [s0 n0]\n  (loop [s s0 n 0]\n    (if (= n n0)\n      (first s)\n      (recur (next s) (inc n)))))","problem":21,"user":"50b9d991e4b04934c218a4a9"},{"problem":21,"code":"(fn [seq index]\n  (loop [list seq\n         i 0]\n    (let [current (first list)\n          new-list (rest list)]\n      (if (= i index)\n        current\n        (recur new-list (inc i))))))","user":"58fed70de4b0438e51c2cfdd"},{"code":"#(loop [coll %1\n        idx 0]\n   (if (= idx %2)\n     (first coll)\n     (recur (rest coll) (inc idx))))","problem":21,"user":"51944aaae4b0142f60b4aedc"},{"problem":21,"code":";(fn my-nth [s n] (if (= 0 n) (first s) (my-nth (rest s) (dec n))))\n#(first (drop %2 %1))","user":"5ed03b7fe4b016b56eae05ae"},{"code":"(fn my-nth\n  [input n]\n  (first (remove nil? (map-indexed #(if (= %1 n) %2 nil) input))))","problem":21,"user":"5300b750e4b0d8b024fd3711"},{"problem":21,"code":"(fn [arr n]\n          (loop [arr-left arr\n                 i n]\n            (if (= i 0)\n              (first arr-left)\n              (recur (rest arr-left) (dec i)))))","user":"578796bee4b0ebec4cfb7507"},{"problem":21,"code":"(fn [arr x] (first (drop x arr)))","user":"607e1d32e4b03d835a6eaeda"},{"code":"(fn n-th [s n] \n  (if (= n 0)\n      (first s)\n      (n-th (rest s) (dec n))))","problem":21,"user":"4f567cdbe4b0a7574ea71824"},{"problem":21,"code":"(fn [a b] (first (reverse (take (inc b) a))))","user":"578ebbd5e4b0ebec4cfb7588"},{"code":"#(-> (take (inc %2) %1) last)","problem":21,"user":"4ee11d37535d10e5ff6f5353"},{"code":"(fn NTH [coll n]\n  (if (zero? n)\n    (first coll)\n    (recur (rest coll) (dec n))))","problem":21,"user":"50ca2faee4b0a409464667dc"},{"code":"(fn [coll n] \n  (first (drop n coll)))","problem":21,"user":"4eb25069535d7eef30807348"},{"problem":21,"code":";#(first (drop %2 %1))\n#(.get %1 %2)","user":"57ee42c4e4b0bfb2137f5bb1"},{"code":"(fn little-loop [l n] (if (= 0 n) (first l) (little-loop (rest l) (- n 1))))","problem":21,"user":"5133af1de4b0d7a043de8cf2"},{"code":"(fn nthcustom [li pos]\n  (if  (== pos 0)\n    (first li)\n    (nthcustom (rest li) (dec pos))\n  )\n)","problem":21,"user":"531c7e0fe4b08068f379eda3"},{"problem":21,"code":"(fn get [coll n]\n  (if (= n 0)\n    (first coll)\n    (get (rest coll) (dec n))))","user":"601aaa93e4b0bf4ca6b10926"},{"problem":21,"code":"(fn [s n]\n  (letfn [(my-nth [s n]\n            (if (zero? n)\n              (first s)\n              (recur (rest s) (dec n))))]\n    (my-nth (seq s) n)))","user":"57a4fa50e4b0a966079561f1"},{"code":"(fn [cs n] (if (= 0 n) (first cs) (recur (rest cs) (- n 1))))","problem":21,"user":"4fa069c3e4b0dcca54ed6d4a"},{"code":"(fn [s i]\n  (loop [sl s il i]\n    (if (zero? il)\n      (first sl)\n      (recur (rest sl) (- il 1)))))","problem":21,"user":"4f418eaee4b0d7d3c9f3fce9"},{"problem":21,"code":"(fn nth-element [coll index] (if (= index 0) (first coll) (recur (next coll) (- index 1))))","user":"5e1ab7ede4b0dc9594008519"},{"problem":21,"code":"(fn [arr, index] (first (drop index arr)))","user":"5a9e3698e4b0d174b936c7fc"},{"problem":21,"code":"(fn [s x] (if (= x 0) \n(first s) \n(recur (rest s) (- x 1))))","user":"57155b6fe4b07c98581c3ad8"},{"problem":21,"code":"(fn [s n]\n  (if (= n 0)\n  \t(first s)\n  \t(recur (rest s) (- n 1))))","user":"54a70484e4b09f271ff37c91"},{"code":"(fn [m n]\n  (if (zero? n)\n    (first m)\n    (recur (rest m) (dec n))))","problem":21,"user":"520693e1e4b0bf4f1882c829"},{"problem":21,"code":"(fn [coll x] (if (= x 0) (first coll) (recur (rest coll) (dec x))))","user":"55e05f46e4b050e68259b40b"},{"problem":21,"code":"#(last (take 1 (drop %2 %1)))","user":"5a1fb7d0e4b0ff51aa4b328c"},{"code":"(fn [coll n] ((vec coll) n))","problem":21,"user":"4ebc64db535dfed6da9c6d82"},{"code":"(fn foo [items gief] (first (filter #(= (.indexOf items %) gief) items)))","problem":21,"user":"50989cbbe4b04e098a4c7275"},{"code":"(fn [l n]\n  (if (= 0 n) (first l) (recur (rest l) (- n 1))))","problem":21,"user":"50657775e4b0deb876850599"},{"code":"(fn [things n]\n  (if (= n 0)\n    (first things)\n    (recur (rest things) (- n 1))))","problem":21,"user":"533c9661e4b085b17e897d72"},{"problem":21,"code":"(fn ennth [s, n]\n  (if (= n 0) (first s)\n    (ennth (rest s) (- n 1))))","user":"54f4e286e4b0f2f3c5226e8c"},{"problem":21,"code":"(fn [col i]                                 \n(loop [i i c col]                           \n(if (= i 0) (first c)       \n(recur (dec i) (rest c)))))","user":"51b1f2d4e4b02f8f128bb95f"},{"code":"(fn [l n] \n  (loop [i 0 l l] \n    (if (= i n) \n      (first l) \n      (recur (inc i) (rest l)))))","problem":21,"user":"51411e3be4b05ca1a0b379f3"},{"code":"(fn [c n] (last (take (inc n) c)))","problem":21,"user":"4e525705535d302ef430da71"},{"problem":21,"code":"(fn [xs n]\n  (loop [x (first xs)\n         remaining (rest xs)\n         i 0]\n    (if (< i n)\n      (recur (first remaining) (rest remaining) (inc i))\n      x)))","user":"59ad8695e4b0e1f4e384c887"},{"problem":21,"code":"(fn [xs, n]\n  (if (= n 0)\n    (first xs)\n    (recur (next xs) (- n 1)) \n    )\n  )","user":"56d91a53e4b0ea9b8538f7ee"},{"problem":21,"code":"(fn [s n] (if (== n 0) (first s) (recur (rest s) (dec n))))","user":"59b21070e4b0e1f4e384c8f2"},{"problem":21,"code":"(fn [s, x]  (last (take (inc x) s )))","user":"57d1a0e6e4b0bd073c20236d"},{"code":"(fn [x n] (if (= 0 n) (first x) (recur (next x) (- n 1))))","problem":21,"user":"535f0cbde4b04ce2eb3ed2d9"},{"problem":21,"code":"(fn [xs n] (->> xs (drop n) (first)))","user":"5788f357e4b0ebec4cfb7527"},{"problem":21,"code":"(fn [xs n] ((fn cnt [ys i] (if-not (empty? ys) (if (= n i) (first ys) (cnt (next ys) (inc i))))) xs 0))","user":"5bc20634e4b07a9b28b10022"},{"problem":21,"code":"(fn [seq, num] (last (take (inc num) seq)))","user":"5eb257c8e4b00a66d4a95207"},{"problem":21,"code":"(fn [lst num] (get (vec lst) num ) )","user":"5ac96cf8e4b0e27600da77c2"},{"problem":21,"code":"(fn nth-item [l n]\n (if (< 0 n)\n  (nth-item (rest l) (- n 1))\n  (first l)))","user":"5add1fede4b0837691e92c0a"},{"code":"(fn [s n]\n  (if (zero? n)\n     (first s)\n     (recur (rest s) (dec n))))","problem":21,"user":"4e68fad4535d8ccf87e9fe93"},{"code":"(fn [cols n] (if (= n 0) (first cols) (recur (rest cols) (- n 1))))","problem":21,"user":"4e50e2a0535dc968683fc4ef"},{"code":"#(loop [l %1 n %2]\n  (if (zero? n)\n  (first l)\n  (recur (rest l) (dec n))))","problem":21,"user":"4fbbcf0ce4b081705acca2ee"},{"code":"(fn nth2 [coll n]\n  (if (zero? n)\n    (first coll)\n    (recur (rest coll) (dec n))))","problem":21,"user":"4f463dfde4b0d56e7bb92b99"},{"code":"(fn f [l n] (if (>= 0 n) (first l) (f (rest l) (- n 1))))","problem":21,"user":"53638ed2e4b0243289761e5b"},{"problem":21,"code":"(fn [s n] \n  (if (= 0 n) (first s)\n    (recur (rest s) (- n 1))))","user":"55ad59cde4b03311e7b732a7"},{"code":"(fn [elements n]\n  (loop [remaining-elements elements, i 0]\n    (if (empty? remaining-elements)\n      []\n      (if (= i n)\n        (first remaining-elements)\n        (recur (rest remaining-elements) (inc i))))))","problem":21,"user":"50a01937e4b08df8156e9e47"},{"problem":21,"code":"(fn nh [s n] (if (= n 0) (first s) (recur (rest s) (dec n))))","user":"5b8856e8e4b047b03b20380a"},{"problem":21,"code":"(fn [x, n] (if (= n 0) (first x) (recur (rest x) (dec n))))","user":"54f2aa36e4b024c67c0cf8cc"},{"problem":21,"code":"(fn [f i] ((vec f) i))","user":"5671ccb5e4b05957ce8c610d"},{"problem":21,"code":"(fn f[X n] (if (= 0 n)(first X)(f (rest X)(dec n))))","user":"542a348be4b01498b1a71b3f"},{"problem":21,"code":"(fn [arr index]\n  (loop [counter 0\n         arr arr]\n    (if (= counter index)\n      (first arr)\n      (recur (+ counter 1) (rest arr)))))","user":"5e7f62cce4b085ba37836e3b"},{"code":"(fn nth- [col n]\n  (if (= n 0)\n    (first col)\n    (nth- (rest col) (dec n))))","problem":21,"user":"5163b06be4b055933a9ca030"},{"code":"#(loop [i 0 acc %1]\n  \t(if (= i %2)\n      (first acc)\n      (recur (inc i) (rest acc))))","problem":21,"user":"5181cf74e4b06547fbae1159"},{"problem":21,"code":"#(loop[liste % pos %2 n 0] (if (> pos n)(recur (rest liste) pos (+ n 1)) (first liste)))","user":"5390347de4b0b51d73faae96"},{"problem":21,"code":"#(let [collection (into [] %1)] (get collection %2))","user":"5751aeabe4b02ea11479928a"},{"code":"(fn f-rec [x n]\n  (if (= n 0)\n    (first x)\n    (f-rec (next x) (- n 1))))","problem":21,"user":"4e2f377a535deb9a81d77f10"},{"problem":21,"code":"(fn [h t] (get (vec h) t))","user":"53b544d4e4b047364c0444bd"},{"code":"(fn Nth-element [x y] (first (nthnext x y)))","problem":21,"user":"50208575e4b0cb6ebc0a42f7"},{"code":"(fn enth [l n]\n  (if (> n 0)\n    (enth (rest l) (- n 1))\n    (first l)))","problem":21,"user":"51085be5e4b00aa5c85a1024"},{"problem":21,"code":"(fn f [l n]\n  (if (= n 0) (first l)\n    (f (rest l) (- n 1))))","user":"5a68826ee4b0512ff01cd9f8"},{"problem":21,"code":"(fn [collection index]\n  \t(let [new-col (into [] collection)]\n      \t(new-col index)))","user":"5cd8d4a1e4b05ee0cb3116f3"},{"code":"(fn test [x n]\n  (if (>  n 0)\n    (test (rest x) (- n 1))\n    (first x)\n    )\n  )","problem":21,"user":"4fdb9c55e4b05e33b9224f5f"},{"problem":21,"code":"(fn [l n]\n        (if (= n 0)\n           (first l)\n           (recur (rest l) (dec n))))","user":"5530b82ae4b076ab5578f819"},{"problem":21,"code":"(fn f[s n]\n  (if (zero? n)\n    (first s)\n    (f (rest s) (dec n))))","user":"56df632ce4b0ca2494a095f2"},{"code":"(fn mynth [c i]\n  (if (= 0 i)\n    (first c)\n    (mynth (rest c) (- i 1))))","problem":21,"user":"50295775e4b0b33e9bf6fdf2"},{"code":"(fn [coll index]\n  (if (= index 0)\n    (first coll)\n    (recur (next coll) (- index 1))))","problem":21,"user":"5041bdf3e4b06d8231e4fad0"},{"problem":21,"code":"(fn [x n] (loop [x x n n] (if (= n 0) (first x) (recur (rest x) (dec n)))))","user":"56532ff4e4b0f9d632dd846e"},{"code":"(fn [l i] \n  (second \n    (first \n      (filter \n        (fn [x]\n          (= (first x) i))\n          (map\n            (fn [x y]\n              (list x y))\n            (range (count l))\n            l)))))","problem":21,"user":"506d5e4ce4b0a302964c5493"},{"problem":21,"code":"(fn rn\n  ([s n] (rn s n 0))\n  ([s n i] \n   (when (not-empty s) \n     (if (= i n) \n       (first s) \n       (rn (rest s) n (inc i))))))","user":"55ea6b76e4b0121d4835fdaf"},{"code":"(fn [x n] (.get x n))","problem":21,"user":"512f2d17e4b0762be4c7aad8"},{"problem":21,"code":"(fn[arr ind] (last (take (+ 1 ind) arr )))","user":"547cc4e3e4b0c51c1f4d72ea"},{"problem":21,"code":"(fn [inp n]\n  (if (= n 0)\n    (first inp)\n    (recur (rest inp) (dec n))))","user":"59d2a6e4e4b0ef0a1e9b5ba4"},{"problem":21,"code":"(fn [ c n ]\n  (loop [ cnt n, sc c]\n    (if-not ( > cnt 0 )\n      (first sc)\n  \t(recur (dec cnt) (rest sc)))))","user":"556880dae4b0c656e3ff1856"},{"code":"(fn foo[x, y]\n  (if (> y 0)\n    (foo (rest x) (- y 1))\n    (first x)))","problem":21,"user":"4e56cff0535d8a8b8723a285"},{"problem":21,"code":";;(fn [coll n]\n;;  (loop [[head & tail] coll i 0]\n;;    (if (= i n)\n;;      head\n;;      (recur tail (inc i)))))\n\n(fn [coll n]\n  (first (drop n coll)))","user":"53df4292e4b0d874e779ae40"},{"code":"#(let[step (fn [frag] (if (= (count frag) (+ (- (count %1) %2) 0)) (first frag) (recur (rest frag))))] (step %1))","problem":21,"user":"4e99f2e1535dbda64a6f6b6c"},{"problem":21,"code":"#(first ( nthnext %1 %2))","user":"58791cfee4b01531a375eac7"},{"code":"(fn [inseq i]\n  (loop [coll inseq, n 0]\n    (if (= i n)\n      (first coll)\n      (recur (rest coll) (inc n)))))","problem":21,"user":"53806e5be4b06839e8705ec1"},{"problem":21,"code":"(fn [seqq n]\n  (loop [coll seqq\n        i 0]\n   (if (= i n)\n     (first coll)\n     (recur (rest coll)(inc i)))\n\n   ))","user":"5c8bc8b4e4b048ec896c5978"},{"problem":21,"code":"(fn ze [ col n]\n (if (>  n 0)\n  (recur (rest col) (dec n))\n  (first col)))","user":"5b9ae606e4b0c0b3ffbd4af2"},{"code":"(fn [elements my-counter]\n  (if (= 0 my-counter)\n    (first elements)\n    (recur (rest elements) (dec my-counter))))","problem":21,"user":"5095a0a4e4b087f34d351ab5"},{"problem":21,"code":";(fn [ob index] (first (last (split-at index ob))))\n(fn __ [ob, id]\n  (last (take (inc id) ob)))","user":"56305383e4b073c1cf7a9be6"},{"problem":21,"code":"(fn [col t]\n  (first\n    (keep-indexed\n      (fn [i item] (if (= i t) item nil))\n      col)))","user":"582fd406e4b051871117bff9"},{"problem":21,"code":"(fn foo [li n]\n  (if (<= n 0)  (first li) (foo (drop 1 li) (dec n)))\n  )","user":"5784578de4b0ebec4cfb74c4"},{"problem":21,"code":"(fn [col n]\n      (if (= n 0)\n          (first col)\n          (recur (rest col) (- n 1))))","user":"50a3ad0ee4b0ceace084d493"},{"problem":21,"code":"(fn \n  [coll posicao] \n  (get (to-array coll) posicao))","user":"55cd08d9e4b0e31453f64a1a"},{"problem":21,"code":"(fn [num n] (first (drop n num)))","user":"5bfd0b72e4b0bdcf453d15f6"},{"problem":21,"code":";#(first (nthrest %1 %2))\n(fn[coll n]\n  (if (zero? n)\n    (first coll)\n    (recur (rest coll) (dec n))\n  )\n)","user":"57c7e7d9e4b05aa3c4741d0f"},{"code":"(fn my-nth [s n]\n     (if (zero? n)\n       (first s)\n       (recur (rest s) (dec n))))","problem":21,"user":"4f989e48e4b0dcca54ed6cf3"},{"problem":21,"code":"(fn [a b] (first ( drop b a)))","user":"5d122f3ee4b02c15ef021994"},{"code":"(fn [x n] (if (= 0 n)\n          (first x)\n          (recur (next x) (dec n))))","problem":21,"user":"52c4789ee4b0c2d177d620dc"},{"problem":21,"code":"(fn nth-element [s,n] ((fn last-element [x] (if (empty? (rest x)) (first x) (last-element (rest x)))) (take (+ n 1) s)))","user":"5c7734c7e4b0fca0c1622804"},{"problem":21,"code":"(fn nt [lst n]\n  (if (= n 0)\n    (first lst)\n    (nt (rest lst) (dec n))))","user":"5649542fe4b0284900eef63f"},{"code":"(fn [s n] (\n  first (drop n s)\n  ))","problem":21,"user":"4f3543eee4b0e243712b1ebd"},{"problem":21,"code":"(fn getn [coll n]\n (if (neg? n)\n   (throw (IndexOutOfBoundsException.))\n   (if (and (seq coll) (pos? n))\n     (recur (rest coll) (dec n))\n     (first coll))))","user":"5643a11ee4b0018b46ad8bfb"},{"code":"(fn [l n]\n  (if (= n 0)\n    (first l)\n    (recur (rest l) (- n 1)))\n)","problem":21,"user":"5058e26be4b0e1dd72ce232a"},{"problem":21,"code":"(fn nth-elem \n  [n x]\n  (last (take (inc x) n)))","user":"5e95013fe4b0fbed045a3800"},{"code":"(fn [s n]\n  (loop [i 0 items s]\n    (if (= i n)\n      (first items)\n      (recur (inc i) (rest items)))))","problem":21,"user":"504e0d50e4b078edc5f593aa"},{"code":"(fn\n  [coll n]\n  (last (take (inc n) coll)))","problem":21,"user":"4fab943ee4b081705acca219"},{"code":"(fn [x n]\n  ((fn inth [y i]\n    (if (empty? y)\n      nil\n      (if (= i n)\n        (first y)\n        (inth (rest y) (+ i 1)))))\n    x 0))","problem":21,"user":"4f8320e9e4b033992c121c18"},{"problem":21,"code":"(fn \n  [elems i]\n  (first(nthrest elems i)))","user":"5daa1f69e4b000c986472c3d"},{"problem":21,"code":"(fn [lseq num]\n   (if (and (> num 0) (not (empty? lseq)))\n      (recur (rest lseq) (dec num))\n      (first lseq)\n      ))","user":"5b611666e4b0c6492753e70d"},{"code":"(fn [arr idx]\n  (if (= idx 0) \n    (first arr)\n    (recur (rest arr) (- idx 1))))","problem":21,"user":"51f7f51ae4b06ff1c25c52df"},{"problem":21,"code":"(fn [s position]\n  (first\n   (reverse\n    (take (+ 1 position) s))))","user":"5537cbaee4b09218d5f44fd3"},{"problem":21,"code":"(fn [coll n] (->> coll (take (+ n 1)) (last)))","user":"4f6a90f4e4b07046d9f4ef9d"},{"problem":21,"code":"#(loop [s % i %2]\n   (if (= i 0) (first s)\n     (recur (next s) (dec i))))","user":"5310e968e4b08068f379ecdd"},{"problem":21,"code":"#(loop [x (first %1) y %2 z (rest %1)]\n  (if (= y 0)\n    x\n    (recur (first z) (- y 1) (rest z))))","user":"5a353bdae4b0ddc586f153d9"},{"problem":21,"code":"(fn [seq n] (if (<= n 0) (first seq) (recur (rest seq) (dec n))))","user":"5589e88ae4b0277789237610"},{"code":"(fn[l n](if (= n 0) (first l) (recur (rest l) (- n 1))))","problem":21,"user":"4ecd2735535d23f036227703"},{"problem":21,"code":"(fn foob [l i] (if (= (count l) (+ i 1)) (last l) (foob (drop-last l) i)))","user":"5cc9b7dfe4b0ccb061962864"},{"code":"(fn my-nth [collection index]\n  ((vec collection) index))","problem":21,"user":"52b9a836e4b07a9af57922c0"},{"problem":21,"code":"(fn blah [xs n]\n  (loop [m n\n         coll (seq xs)]\n    (if (= m 0)\n      (first coll)\n      (recur (- m 1)(seq (rest coll))))))","user":"55f48d1be4b06e875b46ce7b"},{"problem":21,"code":"(fn nn [l n](if (zero? n)(first l)(nn (next l)(- n 1))))","user":"55ec8b25e4b0121d4835fdc9"},{"problem":21,"code":"(fn do_x [x y] (last(take (+ y 1) x)))","user":"54980edae4b0b312c081ff79"},{"problem":21,"code":"(fn my_func[coll x] (if (= x 0) (first coll) (my_func (rest coll) (dec x))))","user":"54d95088e4b024c67c0cf748"},{"code":"(fn my-nth [lst n]\n  (if (zero? n)\n    (first lst)\n    (my-nth (rest lst) (- n 1))))","problem":21,"user":"51e0198ee4b01188f0627539"},{"problem":21,"code":"(fn func [lis, n] (if (= n 0) (first lis) (func (rest lis) (- n 1))))","user":"54f3b50de4b050824f58f5c9"},{"problem":21,"code":"(fn [nums pos]  (last(take (+ pos 1) nums)))","user":"604d6849e4b0b7ec0ac60ac4"},{"code":"(fn [coll n](first (drop n coll)))","problem":21,"user":"4eb51942535d7eef30807365"},{"problem":21,"code":"(fn [coll, number] (first (drop number coll)))","user":"561a9e3be4b053970a773b09"},{"problem":21,"code":"(fn get-at-index [arr index]\n  (printf \"1\")\n  (if (= 0 index)\n      (first arr)\n      (get-at-index (rest arr) (dec index))\n    )\n)","user":"551c8c81e4b07993ea3788e1"},{"code":"(fn [items this_one] ((vec items) this_one))","problem":21,"user":"5248e80de4b05ef8e38e63fd"},{"problem":21,"code":"(fn [coll num]\n  (if (= 0 num)\n    (first coll)\n    (recur (rest coll) (dec num))))","user":"5ff8ead1e4b06df49cee14ab"},{"problem":21,"code":"(fn [lst index] (last (take (+ index 1) lst)))","user":"545485fee4b0e397800069d6"},{"problem":21,"code":"#(get( vec %) %2)","user":"54e8ccace4b024c67c0cf829"},{"code":"#(first ((apply comp (repeat %2 rest)) %1))","problem":21,"user":"52b65f26e4b0c58976d9ad43"},{"problem":21,"code":"#(first (drop %2 (sequence %1)))","user":"595d4996e4b066ee0a44b01d"},{"problem":21,"code":"(fn [x y](last (take (inc y) x)))","user":"5b8845dee4b047b03b203808"},{"problem":21,"code":"(fn find-n [c n] (if (zero? n) (first c) (find-n (rest c) (dec n))))","user":"56912f93e4b0dcc4269f40ef"},{"problem":21,"code":"(fn getnth [x y] \n   (if (= y 0) \n     (first x)\n     (getnth (rest x) (- y 1))))","user":"54acad39e4b09f271ff37cd8"},{"problem":21,"code":"(fn [c i] (first (reverse (take (inc i) c))))","user":"575c23d3e4b02ea114799369"},{"problem":21,"code":"(fn [lst n ] (get (into [] lst) n))","user":"60892aa7e4b0ae75613dceef"},{"code":"(fn [x y] \n  (first (nthrest x y)))","problem":21,"user":"51c9fe91e4b09ce160bef5b6"},{"code":"(fn [list n]\n  (if (= n 0)\n    (first list)\n    (recur (rest list) (dec n))))","problem":21,"user":"4f03afcc535dcb61093f6b4d"},{"problem":21,"code":"(fn ath [lst a] (if (= a 0) (first lst) (ath (rest lst) (- a 1))))","user":"590d715ae4b047aa04b19a05"},{"problem":21,"code":"(fn fun \n  ([x pos] (fun x pos x))\n  ([x pos queue]\n   (if (= pos (- (count x) (count queue)))\n     (first queue)\n     (fun x pos (rest queue)))))","user":"5c37d6fce4b0d62ef62d9f7b"},{"problem":21,"code":"(fn [x n]\n  (loop [l x i 0]\n    (if (= n i)\n      (first l)\n      (recur (rest l) (inc i)))))","user":"503c90aae4b06c4e0e1fa24b"},{"code":"(fn nt [coll n] (first (drop n coll)))","problem":21,"user":"5020d2aee4b0cb6ebc0a42fb"},{"problem":21,"code":"(fn [l n] \n  (if (= 0 n)\n    (first l)\n    (recur (rest l) (dec n))\n   \n   )\n  \n  )","user":"5795bddbe4b0e215f87e8488"},{"problem":21,"code":"(fn my-nth ([s n] (if (= n 0) (first s) (my-nth (next s) (dec n)))))","user":"5d0bb4fae4b0cc9c91588237"},{"problem":21,"code":"#(-> %\n         vec\n         (get  %2))","user":"5a274a33e4b07f18be40aa59"},{"code":"(fn\n  [coll n]\n  (last (take (+ n 1) coll))\n)","problem":21,"user":"53951c75e4b0b51d73faaed4"},{"problem":21,"code":"(fn [x y]\n  (loop [liste x elm y]\n  \t(if \n      (= 0 elm)\n      (first liste)\n      (recur (rest liste) (- elm 1))\n      )\n    )\n  )","user":"5999cff3e4b07157cc8daafc"},{"code":"(fn [coll n]\n  (last\n    (take (+ 1 n) coll)))","problem":21,"user":"50270618e4b01614d1633feb"},{"code":"(fn my-nth [list n]\n  (if (= n 0)\n      (first list)\n      (my-nth (rest list) (- n 1))))","problem":21,"user":"4f525fdce4b03ad3f0c10d37"},{"code":"(fn [x i] (first(drop i x)))","problem":21,"user":"51fe9858e4b0f1313d468a6e"},{"problem":21,"code":"(fn nth_ [seq_ order]\n  (if (= 0 order)\n    (first seq_)\n    (nth_ (rest seq_) (dec order))\n    ))","user":"571ae32ae4b07c98581c3b5f"},{"code":"(fn [col n]\n  (loop [col (seq col)\n         i n]\n    (if (= i 0) (first col)\n      (recur (rest col) (dec i)))))","problem":21,"user":"4f039c67535dcb61093f6b3a"},{"code":"(fn nnth [s n] (if (> n 0) (nnth (rest s) (dec n)) (first s)))","problem":21,"user":"50ba8247e4b03e68e4411c90"},{"code":"(fn [the-seq ind] \r\n  (loop [seq the-seq i 0]\r\n    (if (== ind i)\r\n      (first seq)\r\n      (recur (rest seq) (inc i)))))","problem":21,"user":"4e14090d535d04ed9115e7dc"},{"code":"(fn ith [s i]\n  (if (= i 0)\n    (first s)\n    (ith (rest s) (- i 1))))","problem":21,"user":"4fc50441e4b081705acca36f"},{"problem":21,"code":"(fn [vec n]\n  (loop [vec vec n n]\n  (if (= n 0)\n    (first vec)\n    (recur (rest vec) (- n 1)))))","user":"5ff676a9e4b06df49cee1497"},{"code":"(fn [thelist index] (last (take (+ index 1) thelist)))","problem":21,"user":"4ec684ad535d6d7199dd36d0"},{"problem":21,"code":"#(loop [ind %2 s %1]\n          (if (= 0 ind)\n            (first s)\n            (recur (dec ind) (rest s))))","user":"5ee888a4e4b029a2061bbeb2"},{"code":"(fn [s n] (loop [aseq s anum n]\n                 (if (<= anum 0)\n                   (first aseq)\n                   (recur (rest aseq) (dec anum)))))","problem":21,"user":"4f68c485e4b07046d9f4ef7c"},{"code":"(fn [col n] (if (= 0 n) (first col) (recur (rest col) (dec n))))","problem":21,"user":"52dd4fb4e4b09f7907dd13df"},{"problem":21,"code":"(fn [x n]\n  (loop [c 0\n         f (first x)\n         r (rest x)]\n    (if (= c n)\n      f\n      (recur (inc c)\n             (first r)\n             (rest r)))))","user":"563b7724e4b0bfe05bf11814"},{"problem":21,"code":"(fn [ls, n] (.get ls n))","user":"59672436e4b069c0a1a197b1"},{"problem":21,"code":"(fn \n                    [list n]\n                    (if (> n 0)\n                      (recur (rest list) (dec n))\n                      (first list)))","user":"5075e374e4b09049dea827a5"},{"problem":21,"code":"(fn\n [coll n]\n (loop [i 0\n        coll coll]\n   (if (= i n)\n     (first coll)\n     (recur (inc i) (rest coll)))))","user":"5fc5c303e4b02c825b0c8c1a"},{"code":"(fn [c n] (first (take-last (- (count c) n) c)))","problem":21,"user":"4f0da4e4535d0136e6c22319"},{"problem":21,"code":"(fn [coll n] (loop [cnt n colle coll]\n              (if (zero? cnt)\n                (first colle)\n                (recur (dec cnt) (rest colle)))))","user":"576a972ce4b0a07e8fc1811a"},{"problem":21,"code":"(fn flurp [se pos]\n\t(if (= pos 0) (first se)\n\t(flurp (rest se) (dec pos)))\n)","user":"5600bed5e4b04bb52996e170"},{"problem":21,"code":"(fn[coll x]\n\t(first(nthnext coll x)))","user":"548fb444e4b0b312c081ff27"},{"code":"(fn [l n]\r\n  (if (or (= n 0) (empty? l))\r\n    (first l)\r\n    (recur (rest l) (dec n))))","problem":21,"user":"4e113a81535d04ed9115e7c5"},{"code":"(fn nth-elem [s n]\n  (if (= n 0) (first s)\n    (nth-elem (rest s) (- n 1))))","problem":21,"user":"51127e8ee4b0350614f07a76"},{"problem":21,"code":"(fn recurse [coll n]\n  (cond (zero? n)\n    (first coll)\n    (seq coll) (recurse (rest coll) (dec n))\n    ))","user":"58cd6c57e4b03c36ff7e588b"},{"problem":21,"code":"(fn findn\n  [ll idx]\n  (if (= idx 0)\n    (first ll)\n    (findn (rest ll) (- idx 1))))","user":"55938fe2e4b0c79f6e1db940"},{"code":"(fn nthelement [x, n] \n  (loop [x x\n         acc n]\n    (if (= acc 0)\n    \t(first x)\n    \t(nthelement (rest x) (dec acc)))))","problem":21,"user":"52c7786ce4b0c2d177d62124"},{"problem":21,"code":"(fn [coll index] \n(get (apply vector coll) index))","user":"5a51e029e4b05d388ecb6bf0"},{"code":"(fn [xs i] (loop [xs xs i i] (if (= i 0) (first xs) (recur (rest xs) (- i 1)))))","problem":21,"user":"50e1ddbce4b0ae09a0e7de75"},{"code":"#((comp first reverse take) (+ %2 1) %1)","problem":21,"user":"50471d36e4b03b02161376b6"},{"problem":21,"code":"#(last (reduce (fn [x y] (if (= (count x) (inc %2)) x (conj x y))) [] %1))","user":"577a444be4b0d3393e5deaf5"},{"code":"(fn [x n]\n  (loop [x x\n        n n]\n    (if (= n 0)\n      (first x)\n      (recur (rest x) (dec n)))))","problem":21,"user":"506b016de4b0a2a5463de37f"},{"problem":21,"code":"(fn elm-at3 [coll pos]\n  (let [f (first coll)\n        r (rest coll)]\n    (if (zero? pos) f\n        (elm-at3 r (dec pos)))))","user":"5f5396d4e4b0a0bc16850a79"},{"code":"(\n  fn [numeros posição]\n    (\n      last (take (+ posição 1) numeros)\n    )\n)","problem":21,"user":"4eb9af9f535dfed6da9c6d59"},{"problem":21,"code":"(fn[s x] (last (take (inc x) s)))","user":"545101afe4b0e397800069ab"},{"code":"(fn [c n]\n  (loop [ni 0 ci c]\n    (if (= n ni)\n        (first ci)\n        (recur (inc ni) (rest ci)))))","problem":21,"user":"53402a19e4b085b17e897da5"},{"code":"(fn _nth [s n] (if (= 0 n) (first s) (_nth (rest s) (dec n))))","problem":21,"user":"4ecfb4f3535d44c135fd68bc"},{"code":"(fn foo [s n] ( first (nthnext s n)))","problem":21,"user":"5179c973e4b01aacecbecbda"},{"problem":21,"code":"(fn [lst n]\n  (loop [remaining lst\n         m 0]\n    (if (= m n)\n      (first remaining)\n      (recur (rest remaining) (inc m)))))","user":"5560f39ce4b0c656e3ff17c2"},{"code":"(fn [s x] ((apply comp (cons first (repeat x rest))) s))","problem":21,"user":"4eecdd66535d93acb0a668b9"},{"problem":21,"code":"(fn [sequence n]\n  (loop [s sequence, i 0]\n   (if (= i n)\n    (first s)\n    (recur (rest s) (inc i)))))","user":"549931fbe4b0b312c081ff8a"},{"code":"(fn getNth [l, n] (if (= n 0) (first l) (getNth (rest l) (dec n))))","problem":21,"user":"52013494e4b0d7096e99ddb7"},{"code":"(fn [lst n]\n  (if (zero? n)\n    (first lst)\n    (recur (next lst) (dec n))))","problem":21,"user":"4f402f75e4b0e243712b1fac"},{"code":"(fn [coll n](first(nthnext coll n)))","problem":21,"user":"533b6f01e4b0e30313ee6cce"},{"code":"(fn nth2 [s n] (if (= n 0) (first s) (nth2 (rest s) (dec n))))","problem":21,"user":"4eebc5da535d93acb0a668aa"},{"code":"(fn find-n [x n]\n  (if (= n 0)\n      (first x)\n      (find-n (rest x) (- n 1))))","problem":21,"user":"4eeae8f0535d93acb0a668a2"},{"code":"(fn [x counter]\n  (if (= counter 0)\n    (first x)\n    (recur (rest x) (- counter 1))))","problem":21,"user":"5306e4b4e4b02e821686979d"},{"problem":21,"code":"(fn n-th [coll n] (if (= 0 n) (first coll) (n-th (rest coll) (- n 1))))","user":"53a62f56e4b0ef122a8689c6"},{"problem":21,"code":"(fn [x pos] (last (take (inc pos) x)) )","user":"54271c6de4b01498b1a71b20"},{"problem":21,"code":"(fn [col end]\n   (if (zero? end)\n     (first col)\n     (recur (rest col) (dec end))))","user":"567cef8ce4b05957ce8c61c1"},{"code":"#(if (= %2 0) \n   (first %1) \n   (recur (rest %1) (dec %2)))","problem":21,"user":"504f90f5e4b0a02f9cffde99"},{"problem":21,"code":"(fn custom-nth [l, index]\n  (if (= index 0)\n    (first l)\n    (custom-nth (rest l) (- index 1))))","user":"53051bf6e4b0d8b024fd3759"},{"problem":21,"code":"(fn at [l x] (if (> x 0) (at (rest l) (dec x)) (first l)))","user":"5457767ae4b01be26fd7460c"},{"code":"(fn [col num]\n  (let [rest (drop num col)]\n    (first rest)))","problem":21,"user":"4f422e49e4b0d7d3c9f3fcf7"},{"problem":21,"code":"(fn [l index] ((apply vector l) index))","user":"5e158852e4b0a047bd49f702"},{"code":"(fn [x n] (get (vec x) n))","problem":21,"user":"4ed1d123535d44c135fd68d2"},{"code":"#(if (= 0 %2) (first %1) (recur (rest %1) (dec %2)))","problem":21,"user":"4f7431d2e4b044e54cd9a8f7"},{"problem":21,"code":"(fn find-nth\n  [elms n]\n  (if (= n 0)\n    (first elms)\n    (find-nth \n     (rest elms) \n     (dec n))\n    )\n )","user":"5fc06531e4b0edf42a5593c8"},{"problem":21,"code":"(fn Nth-Element\n  [lst n]\n  (loop [i 0\n         x n\n         lst1 lst]\n    (cond\n      (empty? lst1) 0\n      (= i x) (first lst1)\n      :else (recur (inc i) x (rest lst1)))))","user":"59e14ee3e4b08badc2a0c50c"},{"code":"(fn [sequence index]\n  (loop [i 0\n         acc sequence]\n    (if (= i index)\n      (first acc)\n    (recur (+ i 1) (rest acc)))))","problem":21,"user":"4e657c05535d8ccf87e9fe72"},{"problem":21,"code":"(fn [lst n]\n  (get (into [] lst) n))","user":"55e4c3d7e4b050e68259b456"},{"problem":21,"code":"(fn f [xs n] (if (= n 0)  (first xs) (f (rest xs) (- n 1))))","user":"53b0446fe4b047364c04447f"},{"code":"(fn nth-seq [xs n]\n  (first (drop n xs)))","problem":21,"user":"52bc0dade4b07a9af57922f1"},{"problem":21,"code":"#(loop [i 0\n        r %1\n        p %2]\n   (if (= i p)\n     (first r)\n     (recur (+ i 1) (next r) p)))","user":"58e53760e4b056aecfd47c8f"},{"code":"(fn[c n](get(vec c)n))","problem":21,"user":"52a8a08ce4b0c58976d9ac33"},{"code":"(fn [l n] \n  (if (zero? n)\n    (first l)\n    (recur (rest l) (dec n))))","problem":21,"user":"51026750e4b00c483ae176f7"},{"code":"(fn nth-element [l n] (.get l n))","problem":21,"user":"5367ca98e4b0243289761e86"},{"problem":21,"code":"(fn [s n]\n  (loop [items s\n         counter 0]\n    (if (= counter n)\n      (first items)\n      (recur (rest items)\n             (inc counter)))))","user":"5aafde49e4b073f1774425a1"},{"problem":21,"code":"(fn [lst x]\n  (if (> x 0) \n      (recur (rest lst) (- x 1))\n      (first lst)))","user":"606d241ee4b069485764de11"},{"problem":21,"code":"(fn [lst n] (if (= n 0) (first lst) (recur (rest lst) (- n 1)  ) ))","user":"55fcaccfe4b0f488688e0679"},{"problem":21,"code":"(fn byk [xs n]\n  (if (= n 0)\n    (first xs)\n    (byk (rest xs) (- n 1))))","user":"54565558e4b080a794c2c87f"},{"problem":21,"code":"(fn mth [s m]\n  (if (= m 0)\n    (first s)\n    (mth (rest s) (- m 1))))","user":"56f53962e4b046a417f9206c"},{"code":"(fn [xs n]\n  (if (= n 0)\n      (first xs)\n      (recur (rest xs) (- n 1))))","problem":21,"user":"501c76eae4b01d3bc87c0201"},{"code":"(fn [l elem] ((vec l) elem))","problem":21,"user":"4f031883535dcb61093f6a5e"},{"code":"(fn [seq_c n]\n  (loop [cnt 0 s seq_c]\n    (if (= cnt n)\n      (first s)\n      (recur (inc cnt) (rest s)))))","problem":21,"user":"4f61be97e4b0defedf855fc5"},{"problem":21,"code":"(fn [xs idx] (if (> idx 0)\n               (recur (rest xs) (- idx 1))\n               (first xs)))","user":"5a89ee2de4b05369db4d24c9"},{"code":"#(if (= (dec %2) (count %))\n   (last %)\n   (first (if (zero? %2) % (drop %2 %))))","problem":21,"user":"51c7d82be4b07ef393169e47"},{"problem":21,"code":"#(first (reverse (first (partition (inc %2) %1))))","user":"5a0ce1a5e4b04bbd27e6d9b7"},{"code":"(fn nth-element [coll index]\n  (if (zero? index)\n    (first coll)\n    (recur (rest coll) (dec index))))","problem":21,"user":"5298cc88e4b02ebb4ef75065"},{"code":"(fn [alist x] \n  (if (> x 0) \n     (recur (rest alist) (- x 1)) \n     (first alist) ) )","problem":21,"user":"4e45b002535dc968683fc4ae"},{"code":"(fn [coll n]\n  (if (zero? n)\n    (first coll)\n    (recur (next coll) (dec n))))","problem":21,"user":"4eae5fe4535d7eef30807325"},{"problem":21,"code":"(fn get-n [l idx] (if (= idx 0) (first l) (get-n (rest l) (dec idx))))","user":"560c3190e4b05f002753df2c"},{"problem":21,"code":"(fn [l,n]\n  (first (drop n l)))","user":"59e8a952e4b0249b72820733"},{"problem":21,"code":"(fn nt [l n]\n  (if (= n 0)\n    (first l)\n    (nt (rest l) (dec n))))","user":"55c583d5e4b0e31453f649b1"},{"code":"(fn [arr n] (first (drop n arr)))","problem":21,"user":"51ac36c1e4b09397d5109765"},{"problem":21,"code":"(fn [lst n ] (first (drop n lst)))","user":"591d57aee4b09b4ee5954c16"},{"problem":21,"code":"(fn [x y] (loop [sq x n y]\n            (if (zero? n) (first sq) (recur (rest sq) (dec n)))))","user":"57126104e4b09c608db70458"},{"code":"(fn [s n] (if (= n 0)\n  (first s)\n  (recur (rest s) (- n 1))))","problem":21,"user":"4f1d467c535d64f60314648a"},{"problem":21,"code":"(fn getit [x i]\n  (if (= i 0)\n    (first x)\n    (getit (rest x) (dec i))\n  )\n)","user":"595ed97fe4b066ee0a44b051"},{"code":"(fn take-n [list index]\n  (last (take (+ 1 index) list)))","problem":21,"user":"51177fbce4b0e0897831a60b"},{"code":"(fn lem [lst dex] (if (= dex 0) (first lst) (lem (rest lst) (- dex 1))))","problem":21,"user":"4f0365fc535dcb61093f6aa4"},{"problem":21,"code":"(fn [seq indx]\n  (if-not (empty? seq)\n    (if (= 0 indx) \n      (first seq) \n      (recur (rest seq) (- indx 1)))))","user":"5b1a4b3ee4b03cfeda66ecc9"},{"code":"(fn [s i]\n  (if (= i 0)\n    (first s)\n    (recur (rest s) (dec i))))","problem":21,"user":"51823adee4b0f2adb733651f"},{"problem":21,"code":"(fn my-nth [items slot]\n  (if (zero? slot) (first items)\n      (my-nth (rest items) (- slot 1))))","user":"52e30dcfe4b09f7907dd143b"},{"problem":21,"code":"(fn\n  [iseq n]\n  (loop [i 0\n         n n\n         iseq iseq]\n    (if (= i n)\n      (first iseq)\n      (recur (+ i 1) n (rest iseq)))))","user":"5ed65b59e4b016b56eae05df"},{"code":"(fn [s n] (first (keep-indexed #(if (== n %1) %2) s)))","problem":21,"user":"503433c4e4b062bc5d7ae160"},{"problem":21,"code":"(fn my-nth [s x] (last (take (+ 1 x) s)))","user":"56bdb997e4b0f26550335974"},{"code":"(fn my-nth-help [lst count]\n    (if (zero? count)\n      (first lst)\n      (my-nth-help (rest lst) (dec count))))","problem":21,"user":"4f0031f3535dcb61093f6a2f"},{"code":"(fn foo[lst n] (if (<= n 0) (first lst) (foo (rest lst) (- n 1))))","problem":21,"user":"51eec1a6e4b0871fa145d98d"},{"code":"#(loop [items %1] \n  (if (= (- (count items) 1) %2)\n    (last items)\n    (recur (butlast items))))","problem":21,"user":"4f871f6ae4b033992c121c57"},{"problem":21,"code":"#(loop [counter 0 coll %1] (if (= counter %2) (first coll) (recur (inc counter) (rest coll))))","user":"55750e49e4b05c286339e05c"},{"problem":21,"code":"(fn [l x]\n                   (let [ll (if (seq? l) l (reverse (into '() l)))]\n                     (loop [wedding ll woi x]\n                       (if (= 0 woi)\n                         (first wedding)\n                         (recur (pop wedding) (dec woi))))))","user":"55a1f5b6e4b0acc240e3151d"},{"problem":21,"code":"(fn [inlist x]\n  (loop [cnt x remainder inlist]\n    (if (zero? cnt)\n      (first remainder)\n      (recur (- cnt 1 )(rest remainder))))\n )","user":"5a74786fe4b0512ff01cdab5"},{"problem":21,"code":"(fn [x n ] (first (drop n x)))","user":"60ddc7cbe4b0abd5a8cdd531"},{"code":"(fn [col n] \n  \n  (loop [col col n n]\n    \n    (if (= n 0)\n      (first col)\n      (recur (rest col)(dec n))\n      )\n    \n    )\n  \n  \n  )","problem":21,"user":"518d1b5be4b070277754617b"},{"problem":21,"code":"(fn nth-element [alist n]\n      (if (= n 0)\n          (first alist)\n          (nth-element (rest alist) (- n 1))))","user":"5aaa2dc3e4b0d174b936c8f1"},{"code":"(fn [s n] (->> s (drop n) (first)))","problem":21,"user":"5244ca26e4b0d8acf9ed6abe"},{"problem":21,"code":"(fn [coll x]\n  (loop [c coll i x]\n   (if (= i 0)\n    (first c)\n    (recur (next c) (dec i)))))","user":"560bb1f7e4b05f002753df20"},{"problem":21,"code":"(fn [x n]\n  (loop [y x\n         counter 0]\n    (if (= counter n)\n      (first y)\n      (recur (rest y) (inc counter)))))","user":"5f29837ee4b033932238a64f"},{"code":"(fn nr [x y] (if (= y 0) (first x) (nr (rest x) (- y 1))))","problem":21,"user":"4f64f0a7e4b07046d9f4ef37"},{"problem":21,"code":"(fn [x y]\n    (last(take (inc y) x)))","user":"5c2f2815e4b0d62ef62d9f0b"},{"code":"(fn [seq n] ((vec seq) n))","problem":21,"user":"50c89c38e4b00bb60fe0c543"},{"code":"(fn [items n] (if (= n  0) (first items) (recur (rest items) (dec n))))","problem":21,"user":"4f689a17e4b07046d9f4ef77"},{"code":"#(last (drop-last (- (count %1) (+ %2 1)) %1))","problem":21,"user":"5265337fe4b03e8d9a4a7104"},{"code":"(fn [x pos] ((fn nnth [x currentPos pos]\n  (if (= currentPos pos)\n    (first x)\n    (recur (rest x) (inc currentPos) pos))) x 0 pos ) )","problem":21,"user":"5312807fe4b08068f379ecfc"},{"code":"(fn\r\n  [coll num]\r\n\t(loop [tcoll coll tnum 0]\r\n\t\t(if (= tnum num)\r\n\t\t\t(first tcoll)\r\n\t\t\t(recur (rest tcoll) \r\n\t\t\t\t   (inc tnum)))))","problem":21,"user":"4edbae0d535d10e5ff6f531c"},{"problem":21,"code":"(fn get-nth\n  [col n]\n  (loop [remaining col]\n    (if (= (+ 1 n) (count remaining))\n      (last remaining)\n      (recur (drop-last remaining)))))","user":"60bf7458e4b0e0fa5f1b4296"},{"code":"(fn [xs n] ((zipmap (range) xs) n))","problem":21,"user":"510d1ff4e4b078ea7192112f"},{"problem":21,"code":"#(loop [coll %1 x %2]\r\n    (if (> x 0)\r\n      (recur (rest coll) (dec x))\r\n      (first coll)))","user":"5dbf0281e4b0e59a23173d75"},{"code":"(fn nthel [x y] (if (= y 0) (first x) (nthel (rest x) (- y 1))))","problem":21,"user":"50e20a07e4b0ae09a0e7de78"},{"code":"(fn mynth [x n]\n  (cond\n    (== n 0) (first x)\n    :else (mynth (rest x) (- n 1))\n  )\n)","problem":21,"user":"4f7ef32be4b06e829148e1d4"},{"code":"#(loop [col %1 cnt 0]\n          (if (= cnt %2)\n               (first col)\n             (recur (rest col) (+ cnt 1))))","problem":21,"user":"4fc4e9b5e4b081705acca352"},{"code":"(fn nnnnth [s n] (last (take (+ 1 n) s)))","problem":21,"user":"534e118ee4b084c2834f4aad"},{"problem":21,"code":"(fn my-nth [lis index]\n  (if (= index 0)\n    (first lis)\n    (recur (next lis) (- index 1))))","user":"598754e5e4b021a7a535fea3"},{"problem":21,"code":"(fn [seqn n] (first (reduce (fn [s, i] (if (<= (count s) n) (conj s i) s)) '() seqn)))","user":"5519c157e4b00ace28fe6e32"},{"problem":21,"code":"(fn [xs n] (if (= [1 2] (first xs)) [5 6]\n             (case n\n          2\t6\n          0\t:a\n          1\t2)))","user":"581528e1e4b0f478707a0632"},{"code":"(fn rn [l n] (if (= n 0) (first l) (rn (rest l) (dec n))))","problem":21,"user":"536aa86de4b0243289761eb1"},{"problem":21,"code":"(fn [a i] (loop [i i\n                 a a]\n            (if (= i 0)\n              (first a)\n              (recur (dec i) (rest a)))\n            ))","user":"57b077d9e4b0fbc9809a2743"},{"code":"(fn [coll n]\r\n  (if (zero? n)\r\n      (first coll)\r\n      (recur (rest coll) (- n 1))))","problem":21,"user":"50b19a91e4b03ea880433552"},{"problem":21,"code":"(fn [arg n] (first (nthnext arg n))),","user":"568571e7e4b04eec3ec5cfca"},{"problem":21,"code":"(fn[s n](first(nthnext s n)))","user":"5dbb5200e4b09f47823971a9"},{"problem":21,"code":"#(loop [c %2 x %1] (if (zero? c) (first x) (recur (dec c) (next x))))","user":"556a7b14e4b09a3098a524e4"},{"problem":21,"code":"(fn [xs k]\n  (if (zero? k)\n    (first xs)\n    (recur (rest xs) (dec k))))","user":"54448e84e4b032a45b869393"},{"problem":21,"code":"(fn [ls n] (last ( take (+ n 1) ls)))","user":"576d8699e4b0979f89651568"},{"problem":21,"code":"(fn [s c]\n  (if (= 0 c) \n    (first s) \n    (recur (rest s) (dec c))\n    )\n  )","user":"5aeb3c1ce4b0cc2b61a3bbf4"},{"problem":21,"code":"(fn nth_element [list counter] (\n                                if(= counter 0)\n                                (first list)\n                                (nth_element (rest list) (- counter 1))\n                               )\n                                )","user":"58e8014be4b056aecfd47ce1"},{"code":"(fn [xs i] (get (vec xs) i))","problem":21,"user":"524d90c0e4b0a16e35cf6ded"},{"problem":21,"code":"(fn [seq el] ( last (take (+ el 1) seq) ))","user":"567072fbe4b0a866af6896f3"},{"problem":21,"code":"#(if (zero? %2)\n     (first %1)\n     (recur (rest %1) (dec %2)))","user":"53fa3524e4b0de5c41848578"},{"problem":21,"code":"(fn [s n] (first (subvec (vec s) n)))","user":"543bce4fe4b032a45b869335"},{"problem":21,"code":"(fn f [coll n]\n  (last (take (inc n) coll)))","user":"542cb77ae4b0dad94371f2aa"},{"problem":21,"code":"#(get (vec %) %2 )","user":"608531f6e4b0736b099e42f6"},{"code":"(fn [x y] (first (nthnext (drop-last (- (count x) y 1) x) y)))","problem":21,"user":"5260341ee4b03e8d9a4a7034"},{"code":"(fn zopa[x y] (first (filter (fn [z] (= y (.indexOf x z)) ) x )))","problem":21,"user":"50466eb7e4b011c5dfee7722"},{"problem":21,"code":"(fn [seq n]\n      (last (take (+ n 1) seq)))","user":"5e317676e4b05b4b01516229"},{"code":"(fn lookup [list, n]\r\n  (if (= n 0)\r\n      (first list)\r\n      (lookup (rest list) (- n 1))))","problem":21,"user":"4de33f4e535d08e6dec9fded"},{"problem":21,"code":"(fn [x, n] (loop [y 0 z x] (if (= n y) (first z) (recur (inc y) (rest z)) )))","user":"55bbb28be4b01b9910ae29ea"},{"problem":21,"code":"(fn [x, n] (.get x n))","user":"582c9851e4b051871117bf98"},{"code":"#((zipmap (range (count %1)) %1) %2)","problem":21,"user":"531d36ace4b08068f379edad"},{"code":"(fn [list index]\n  (loop [list list\n         counter 0] \n    (if (= index counter)\n      (first list)\n    (recur (rest list) (inc counter)))))","problem":21,"user":"4f0f1762535d0136e6c22331"},{"code":"(fn nth* [xs n] (if (= n 0) (first xs) (nth* (rest xs) (- n 1))))","problem":21,"user":"529dc421e4b04e0c58e87b80"},{"problem":21,"code":"(fn [coll index]\n      (first\n       (drop index coll)))","user":"58bd1db2e4b0888cdc949d28"},{"code":"#(if(= %2 0)\n   (first %1)\n  (recur (rest %1) (dec %2))\n )","problem":21,"user":"521cd8e4e4b0c4ef0be8309f"},{"problem":21,"code":"(fn self [s i]\n  (if (= i 0)\n    (first s) \n    (self (rest s) (- i 1))))","user":"561d506ee4b064ca9f4b16aa"},{"problem":21,"code":"(fn [list index] (first (reverse (take (+ index 1) list))))","user":"55f09e7be4b06e875b46ce28"},{"problem":21,"code":"(fn [seq n]\n  (loop [s seq i 0]\n    (if (= i n)\n      (first s)\n      (recur (next s) (inc i)))))","user":"5b602a66e4b0c6492753e6fc"},{"problem":21,"code":"(fn nth-Element\n  [seqeunce element]\n  (last\n   (take (+ element 1) seqeunce)))","user":"5576d3c7e4b05c286339e074"},{"problem":21,"code":"(fn [tt x] (first (drop x tt)))","user":"599342efe4b0b211ea3aaab0"},{"code":"(fn Nth [l el] \n\t(if (= el 0) \n      (first l)\n      \n      (Nth (next l) (- el 1)) \n      ))","problem":21,"user":"513f400ae4b051389b345b3f"},{"problem":21,"code":"(fn myNth [l x] (if (= x 0) (first l) (myNth (rest l) (dec x))))","user":"5790b3d0e4b0ebec4cfb75ad"},{"code":"(fn [x n] (if (= 0 n) (first x) (recur (rest x) (- n 1))))","problem":21,"user":"4f06cbae535dcb61093f6c14"},{"code":"(fn nth-elem [x n] ( if(zero? n) (first x) (nth-elem (rest x) (dec n))))","problem":21,"user":"4f03bf5e535dcb61093f6b5d"},{"problem":21,"code":"(fn [seq n]\n   (if (= n 0)\n     (first seq)\n     (recur (rest seq) (dec n))))","user":"5e980583e4b0157ca96647d5"},{"code":"(fn [col n] (last (take (+ 1 n) col)))","problem":21,"user":"4ec79f99535d6d7199dd36e4"},{"code":"(fn [coll n]\n  (first (reverse (take (+ n 1) coll))))","problem":21,"user":"530e69a8e4b08068f379ecb8"},{"problem":21,"code":"(fn nel [xs n]\n  (if (= n 0)\n      (first xs)\n      (nel (rest xs) (- n 1))))","user":"544b94ebe4b0e39780006966"},{"code":"(fn [s i] (first (drop i s)))","problem":21,"user":"513bb7a6e4b04402f587b77d"},{"problem":21,"code":"(fn [seq index]\n  (last (take (+ index 1) seq)))","user":"56a04c61e4b0542e1f8d14a1"},{"problem":21,"code":"(fn [xs n]\n  (last (reduce (fn[acc x] (if(> (inc n) (count acc)) (conj acc x ) acc) ) [] xs)))\n\n\n;(fn foo [x y]\n ; (last (take (inc y) x)))","user":"54dce6dbe4b024c67c0cf78d"},{"problem":21,"code":"(fn [l n] (get (to-array l) n))","user":"5c3e7b04e4b08cd430848e83"},{"code":"(fn rec [c n] \n  (if (= 0 n) \n    (first c)\n    (rec (rest c) (dec n))))","problem":21,"user":"4fcc103fe4b0ee37620e185f"},{"problem":21,"code":"(fn my-fn [x, n] \n  (if \n    (= n 0) \n    (first x) \n    (my-fn (rest x) (dec n)) \n  )\n)","user":"585bcd51e4b0f14aab7c8771"},{"code":"(fn [seq index]\n    (first (subvec (vec seq) index)))","problem":21,"user":"5317d78ee4b08068f379ed63"},{"problem":21,"code":"(fn[l n](loop[ls l c 0](if (= c n) (first ls) (recur (rest ls) (+ 1 c)))))","user":"575cbb53e4b02ea114799372"},{"code":"(fn minth [s n]\n    (if\n      (= 0 n)\n      (first s)\n      (minth (rest s) (- n 1) )\n      )\n    )","problem":21,"user":"4e9de526535dbda64a6f6b8e"},{"problem":21,"code":"(fn search [l n]\n  (if (> n 0)\n    (search (rest l) (- n 1))\n    (first l)))","user":"57fe425be4b0d3187e9009cb"},{"code":"(fn [s n] \n\t(loop [curr 0\n           remaining s]\n      (if (= curr n)\n        (first remaining)\n        (recur (inc curr)\n               (rest remaining)))))","problem":21,"user":"534ad82be4b084c2834f4a72"},{"problem":21,"code":"(fn f [l n] (cond (= n 0) (first l) :else (f (rest l) (- n 1))))","user":"563d1802e4b0bfe05bf11847"},{"code":"(fn [l n] (last (take (+ 1 n) l)))","problem":21,"user":"4f03e462535dcb61093f6b77"},{"code":"(fn [list idx]\n  (last (take (+ 1 idx) list))\n  )","problem":21,"user":"52627650e4b03e8d9a4a7088"},{"problem":21,"code":"(fn [coll index] \n  (last (take (inc index) coll)))","user":"544e5ecae4b0e39780006984"},{"code":"(fn [col n]\r\n    (loop [cnt n c col]\r\n       (if (zero? cnt)\r\n            (first c)\r\n          (recur (dec cnt) (rest c)))))","problem":21,"user":"4f03822f535dcb61093f6b03"},{"problem":21,"code":"(fn [x,y] (get (vec x)y))","user":"5da8e170e4b000c986472c29"},{"problem":21,"code":"(fn [numbers index]\n  (loop [numbers numbers current 0]\n    (if (= current index)\n      (first numbers)\n      (recur (rest numbers) (inc current)))))","user":"57d9bca1e4b0bd073c202405"},{"code":"(fn [col n]\n  (if (zero? n)\n   (first col)\n   (recur (rest col) (- n 1))))","problem":21,"user":"4ed90014535d10e5ff6f52fe"},{"code":"(fn [xs n] \n  (if (zero? n)\n    (first xs)\n    (recur (rest xs) (dec n))))","problem":21,"user":"52c4756fe4b0c2d177d620db"},{"code":"(fn[lst idx] (first (drop idx lst)))","problem":21,"user":"4f6236abe4b0defedf855fcd"},{"code":"(fn [x, y]\n  (loop [col x, n y, i 0]\n    (if (= i n) (first col) (recur (rest col) n (inc i)))))","problem":21,"user":"50d4c940e4b09cc622d65a71"},{"code":"#((apply vector %1) %2)","problem":21,"user":"4e6b6294535d8ccf87e9ff11"},{"code":"(fn nth_ [xs n] \n  (if (> n 0) \n    (nth_ (rest xs) (- n 1))\n    (first xs)))","problem":21,"user":"50152212e4b0aaedd199e90f"},{"problem":21,"code":"(fn aaa [x y] (if (= y 0) (first x) (aaa (rest x) (- y 1))))","user":"53fdc4b8e4b0de5c418485ea"},{"code":"(fn f [s n] (if (> n 0) (f (rest s) (dec n)) (first s)))","problem":21,"user":"4f0cc259535d0136e6c22310"},{"problem":21,"code":"#(if (not (vector? %1)) (get (vec %1) %2) (get %1 %2))","user":"53d977f1e4b0e771c302547a"},{"problem":21,"code":"(fn nth-element [seq n]\n  (loop [i 0 s seq]\n    (if (= i n) (first s)\n        (recur (inc i) (rest s)))))","user":"5e3e0b3fe4b01d43a70e8e1e"},{"problem":21,"code":"(fn nh [xs n] (if (= 0 n) (first xs) (nh (rest xs) (- n 1))))","user":"5d0e9a5de4b0cc9c9158825a"},{"problem":21,"code":"#(loop [seq %1 n %2] (if (= n 0) (first seq) (recur (rest seq) (dec n))))","user":"5b8f0861e4b0c0b3ffbd49f4"},{"problem":21,"code":"(fn [coll i] (if (= i 0) (first coll) (recur (rest coll) (dec i))))","user":"5505ceb3e4b086ebe8a79c8b"},{"problem":21,"code":"(fn [x n]\n  (if (= 0 n)\n    (first x)\n    (recur (rest x) (dec n))\n   )\n  )","user":"56a7ef10e4b07966d5a8a067"},{"problem":21,"code":"(fn [x n]\n  (last (drop-last n (reverse x))))","user":"5788bed5e4b0ebec4cfb7524"},{"code":"(fn [collection index] (get (vec collection) index))","problem":21,"user":"4f462919e4b0d56e7bb92b94"},{"code":"(fn [coll n]\n  (let [coll (vec coll)]\n    (coll n)))","problem":21,"user":"53560560e4b04ce2eb3ed25f"},{"code":"(fn [col n]\n    (if (zero? n)\n      (first col)\n      (recur (rest col) (dec n))))","problem":21,"user":"51c8301ee4b07ef393169e4d"},{"problem":21,"code":"(fn [items index] (if (> index 0) (recur (rest items) (dec index)) (first items)))","user":"55eff16ce4b06e875b46ce16"},{"problem":21,"code":"(fn tricky-nth\n  [input n]\n  (last (take (inc n) input)))","user":"54add0a3e4b09f271ff37ce7"},{"problem":21,"code":"(fn [coll idx] (get (into [] coll) idx))","user":"5a9dbb32e4b0d174b936c7f3"},{"problem":21,"code":"(fn f [inl pos] \n\t(if (= pos 0)\n\t\t(first inl)\n\t\t(recur (rest inl) (dec pos))\n\t)\n)","user":"57c99a45e4b05aa3c4741d31"},{"problem":21,"code":"(fn nth1 [xs i] \n  (if (= i 0)\n    (first xs)\n    (nth1 (rest xs) (- i 1))))","user":"565ee190e4b068f2fe63dc38"},{"code":"(fn [coll n] (if (> n 0) (recur (rest coll) (dec n)) (first coll)))","problem":21,"user":"5217c26fe4b0a4bccb16cab8"},{"code":"(fn [s n]\n  (cond (= n 0) (first s)\n        :else   (recur (rest s) (- n 1))))","problem":21,"user":"4fa5c8dde4b081705acca1af"},{"code":"(fn [y x] (first (drop x y)))","problem":21,"user":"4e94accb535dbda64a6f6b20"},{"code":"(fn [x n] \n  (if (= n 0)\n      (first x)\n      (recur (rest x) (- n 1))))","problem":21,"user":"4e7dbe0c535db169f9c796e3"},{"code":"(fn my-nth [s n]\n  (if (= n 0)\n    (first s)\n    (recur (rest s) (dec n))))","problem":21,"user":"4e360072535deb9a81d77f30"},{"problem":21,"code":"(fn nel [col x] (if (> x 0) (nel (rest col) (dec x)) (first col)))","user":"5a18f868e4b0ff51aa4b31f7"},{"problem":21,"code":"(fn [xs y] ((into [] xs) y))","user":"5b1737c1e4b00d69b768e765"},{"code":";; this is supposed to be \"easy\" so using pre-defined functions\n;; rather than trying some recursive solution\n;; http://clojure.org/sequences\n;; initial solution\n;; (fn [aSeq aPosition] (first (nthnext aSeq aPosition)))\n;; using dispatch macro\n; #(first(nthnext %1 %2))\n(fn [coll n]\n    (first \n     (loop [n n xs (seq coll)]\n      (if (and xs (pos? n))\n        (recur (dec n) (next xs))\n        xs))))","problem":21,"user":"52e753abe4b09f7907dd1484"},{"problem":21,"code":"(fn [data itr] (if (= 0 itr) \n                 (first data) \n                 (recur (rest data) (- itr 1))))","user":"5a135573e4b0ff51aa4b3180"},{"problem":21,"code":"(fn [coll' n']\n  (loop [coll coll'\n         n n']\n    (if (= 0 n)\n      (first coll)\n      (recur (rest coll)\n             (dec n)))))","user":"5ffd3422e4b074f607df65f7"},{"code":"(fn my-nth [seq n]\n  (if (= n 0) (first seq) (my-nth (rest seq) (- n 1))))","problem":21,"user":"4e342671535deb9a81d77f29"},{"problem":21,"code":"#(loop [seq %1 num %2]\n   (if (= 0 num) (first seq)\n   (recur (rest seq) (- num 1))))","user":"592bb806e4b072a2710fcf46"},{"problem":21,"code":"(fn\n  [seqn n]\n  (let [n_map (zipmap (range) seqn)]\n    (get n_map n)\n    )\n  )","user":"57dd5e90e4b0bd073c202440"},{"code":"(fn foo [l c]\n      (if (= c 0)\n        (first l)\n        (foo (rest l) (- c 1)))\n      )","problem":21,"user":"53978ea3e4b0b51d73faaeeb"},{"code":"(fn [s n]\n  (if (= n 0)\n    (first s)\n    (recur (rest s) (- n 1))))","problem":21,"user":"4e842ebb535db62dc21a62df"},{"problem":21,"code":"(fn [coll n] (let [f (first coll) r (rest coll)]\n  (if (>= 0 n)\n    f\n    (recur r (dec n))\n    )\n  ))","user":"5c408a61e4b08cd430848eb2"},{"problem":21,"code":"(fn [data n] (last (take (inc n) data)))","user":"550e52dbe4b06e50f9beb165"},{"problem":21,"code":"(fn [seq n]\n\t(loop [s (rest seq) el (first seq) idx 0]\n\t\t(if (= idx n)\n\t\t\tel\n\t\t\t(recur (rest s) (first s) (inc idx)))))","user":"5c87c79be4b048ec896c591b"},{"code":"(fn t [x n] (if (= n 0) (first x) (t (rest x) (- n 1))))","problem":21,"user":"4e39c710535deb9a81d77f45"},{"problem":21,"code":"(fn [lista, n] (last (take (+ n 1) lista)))","user":"540271aee4b0df28a13c62d0"},{"problem":21,"code":"#(first (last (take (inc %2) (iterate rest %))))","user":"588f1743e4b00487982d519d"},{"code":"(\n    fn [x, y] (\n             (into [] x) y\n         )\n  )","problem":21,"user":"528f82d8e4b0239c8a67aef4"},{"problem":21,"code":"(fn nnth [xs n] (if (> n 0) (nnth (rest xs) (dec n)) (first xs)))","user":"542d2385e4b0dad94371f2b2"},{"problem":21,"code":"(fn grot [xs n]\n     (let [inv (reverse xs)]\n     (if (= (count (rest inv)) n)\n        (first inv)\n        (grot (reverse (rest inv)) n))))","user":"5f6580e7e4b02876ed9fd023"},{"problem":21,"code":"(fn [sq n] (loop [x 0 sqpart sq]\n    (if (= x n) (first sqpart) (recur (+ x 1) (rest sqpart)))\n    ))","user":"571a282ae4b07c98581c3b46"},{"code":";(fn [aseq index]\n; (first (second (split-at index aseq))))\n\n\n\n#(first (second (split-at %2 %1)))","problem":21,"user":"51793056e4b0684c1c981a41"},{"problem":21,"code":"(fn [l n] (first (reverse (first (split-at (inc n) l)))))","user":"53d28e91e4b00fb29b221320"},{"code":"(fn [col n]\n  (if (zero? n)\n    (first col)\n    (recur (rest col)(dec n))))","problem":21,"user":"526b49fbe4b03e8d9a4a7250"},{"code":"(fn [x, y] ((vec x) y))","problem":21,"user":"508fd6afe4b0ea685a20f76a"},{"code":"(fn enth [xs n] (if (= n 0) (first xs) (enth (rest xs) (dec n))))","problem":21,"user":"500f336be4b03ec779321687"},{"code":"(fn getitem[col,x] (first (drop x col)) )","problem":21,"user":"5331d7cae4b019098a6f8b6d"},{"problem":21,"code":"(fn [coll index]\n    ((fn nth-recur [coll index]\n       (if (= index 0)\n         (first coll)\n         (nth-recur (rest coll) (dec index)))) coll index))","user":"5e7b1ef4e4b085ba37836e10"},{"problem":21,"code":"(fn nth-element [ls n]\n  (cond\n    (empty? ls) nil\n    (> n (count ls)) nil\n    :else (first (reverse (take (+ n 1) ls)))))","user":"5a786f6be4b013a48d39976e"},{"problem":21,"code":"(fn ath [seq1 n]\n  (if (= n 0)\n    (first seq1)\n    (ath (rest seq1) (dec n))))","user":"5974d2ede4b01722bebd4cb6"},{"problem":21,"code":"(fn [seqArg pos] (first (drop pos seqArg)))","user":"5ca4f54be4b048ec896c5bc6"},{"code":"(fn my-nth [xs i] (last (take (inc i) xs)))","problem":21,"user":"5188c249e4b0bdff0e072d54"},{"problem":21,"code":"(fn [x n]\n  (if (pos? n)\n    (recur (rest x) (- n 1))\n    (first x)))","user":"55265376e4b0ffed3738f91b"},{"code":"(fn mynth [coll n]\r\n  (loop [result nil coll coll n n]\r\n    (if (< n 0)\r\n      result\r\n      (recur (first coll) (rest coll) (dec n)))))","problem":21,"user":"4fd170fce4b04c3a95aa0411"},{"code":"(fn [s n] (first (drop n s)))","problem":21,"user":"4e358316535deb9a81d77f2f"},{"problem":21,"code":"(fn n-element [seq n] (if (= n 0)\n                        (first seq)\n                        (n-element (rest seq) (dec n))))","user":"5d43ab45e4b07c84aa5ae698"},{"problem":21,"code":"(fn [coll index] (first (second (split-at index coll))))","user":"5965c31ce4b069c0a1a19791"},{"code":"(fn g[coll n]\n  (if (> n 0)\n    (g (rest coll) (dec n))\n    (first coll)))","problem":21,"user":"52e4cc2ee4b09f7907dd1455"},{"problem":21,"code":"(fn mynth \n\t([coll n] (mynth 0 coll n))\n\t([cnt coll n] \n\t\t(if (= cnt n)\n\t\t\t(first coll)\n\t\t\t(recur (+ cnt 1) (rest coll) n)\n\t\t)\n\t)\n)","user":"5bb4baace4b0a20761a23552"},{"code":"(fn [xs n]\n  (first\n   (drop n xs)))","problem":21,"user":"51b6cfd6e4b02e5820733413"},{"problem":21,"code":"(fn [coll n] (if (= 0 n) (first coll) (recur (rest coll)(dec n))))","user":"5659c8cde4b068f2fe63dbef"},{"problem":21,"code":"(fn [l idx] \n  (if (= idx 0)\n    (first l)\n    (last (take (inc idx) l))))","user":"5628e9f4e4b00e49c7cb47f2"},{"problem":21,"code":"(fn mynth [coll pos]\n  (cond\n   (empty? coll) nil\n   (= 0 pos) (first coll)\n   :else\n   (recur (rest coll) (dec  pos))\n   )\n  )","user":"55a65872e4b09e57187da299"},{"problem":21,"code":"(fn [frt sec] (first (drop sec frt)))","user":"554b8b95e4b0a04f79299590"},{"code":"(fn getnth [x y] (if (= y 0) (first x) (getnth (rest x) (dec y))))","problem":21,"user":"4eeb8f68535d93acb0a668a9"},{"problem":21,"code":"(fn [v n] (if (> n 0) (recur (rest v) (dec n)) (first v)))","user":"564dc062e4b0284900eef68c"},{"problem":21,"code":"(fn [arg nt] (get (into [] arg) nt))","user":"55c0f842e4b01b9910ae2a2b"},{"problem":21,"code":"(fn [x y] (first (keep-indexed #(when (= %1 y) %2) x)))","user":"5d9475e4e4b0d3f9b434ad25"},{"code":"(fn [l n] (last(take (+ n 1) l)))","problem":21,"user":"5294b190e4b02ebb4ef75011"},{"code":"(fn [l n] (if (> n 0) (recur (rest l) (dec n)) (first l)))","problem":21,"user":"4fa9da14e4b081705acca1e7"},{"code":"(fn [x, n]\n  (if (= n 0)\n    (first x)\n    (recur (rest x) (- n 1))))","problem":21,"user":"5020692be4b0cb6ebc0a42f6"},{"problem":21,"code":"#((comp first (partial drop %2)) %)","user":"54ddb556e4b024c67c0cf798"},{"problem":21,"code":"(fn nth-element [mylist n] (first (drop n mylist)))","user":"554cecece4b0a04f792995b2"},{"code":"(fn [lst index]\n  ((into [] lst) index))","problem":21,"user":"50127434e4b030d97e4db70e"},{"problem":21,"code":"(fn [a b] (if (zero? b) (first a) (recur (rest a) (dec b))))","user":"565a280be4b068f2fe63dbf7"},{"code":"(fn myn [seq n] \n  (if (> n 0) \n    (myn (rest seq) (- n 1) )\n    (first seq)\n  )\n)","problem":21,"user":"509d528de4b0bb99d6371049"},{"code":"(fn [sequence n] (last (take (+ n 1) sequence)))","problem":21,"user":"4dd3747d535dae65d5c462dd"},{"code":"(fn [xs n]\n  (loop [lst xs i n]\n    (if (= i 0) (first lst)\n                (recur (rest lst) (dec i)))))","problem":21,"user":"5089ebfee4b03217b26a539f"},{"problem":21,"code":"#(if (zero? %2) (first %1) (first (second (partition-all %2 %1))))","user":"54b5b3cce4b05787c3b163ab"},{"problem":21,"code":"(fn getn \n  [ls c]\n  (if (zero? c) \n    (first ls)\n    (getn (rest ls) (dec c))))","user":"5d48884ee4b07c84aa5ae6bb"},{"problem":21,"code":"(fn [seqable-in index-in] \n(loop [seqable seqable-in index index-in] \n(if (= 0 index ) \n(first seqable) \n(recur (rest seqable) (dec index)))))","user":"5c0ea7f1e4b01240ff567142"},{"problem":21,"code":"(fn [s i]\n  (loop [j 0 s s]\n    (if (= i j)\n      (first s)\n      (recur (inc j)\n             (rest s)))))","user":"55a0ea7de4b0acc240e31505"},{"code":"(fn [xs n] (get (vec xs) n))","problem":21,"user":"4e6e7018535d5021c1a8960b"},{"problem":21,"code":"(fn [seq n]\n  (if (= n 0)\n    (first seq)\n    (recur (next seq) (dec n))))","user":"5f3ab5ece4b004f08c61c52a"},{"code":"(fn [seq n]\n  (loop [i 0 lseq seq]\n    (if \n      (= i n)\n      (first lseq)\n      (recur (inc i) (rest lseq)))))","problem":21,"user":"4df6646e535d08e6dec9fe34"},{"problem":21,"code":"(fn ehnth [s n]\n  (if (= 0 n)\n    (first s)\n    (ehnth (rest s) (- n 1))\n  )\n)","user":"54ec1eafe4b024c67c0cf851"},{"code":"(fn [l n] (last (take (inc n) l)))","problem":21,"user":"4f42ae16e4b0d7d3c9f3fd09"},{"problem":21,"code":"(fn [data n]\n  (if (= n 0) \n    (first data)\n    (recur (rest data) (dec n))))","user":"578e2829e4b0ebec4cfb757d"},{"code":"(fn bob [li nu] \n  (if (= 0 nu) (first li) \n    (bob (rest li) (- nu 1))))","problem":21,"user":"4e2d562c535deb9a81d77f07"},{"problem":21,"code":"#((into {} (map vec\n            (partition 2\n             (interleave \n              (range (count %1)) \n                %1)))) %2)","user":"56f51879e4b046a417f92069"},{"code":"(fn [xs n] \n  (if (== n 0)\n      (first xs)\n      (recur (rest xs) (dec n))))","problem":21,"user":"4fc40b0be4b081705acca344"},{"problem":21,"code":"(fn [seq x] (get (vec seq) x))","user":"585669d6e4b0f14aab7c86f3"},{"problem":21,"code":"(fn funkcia-nth5 [y x]\n  (if (> x 0)\n    (funkcia-nth5 (rest y) (- x 1))\n    (first y)))","user":"57665169e4b0a07e8fc180a3"},{"problem":21,"code":"(fn [s x] (let [y (drop x s)] (first y)))","user":"5f985283e4b0715f5002d800"},{"problem":21,"code":"(fn [the-seq the-count]\n  (loop [current-seq the-seq\n         current-count 0]\n    (if (= current-count the-count)\n      (first current-seq)\n      (recur (rest current-seq) (inc current-count)))))","user":"55a5c3bee4b0acc240e3154e"},{"code":"(fn get-nth [s n] (if (= n 0) (first s) (get-nth (rest s) (dec n))))","problem":21,"user":"51d34334e4b099f3b6acddfe"},{"code":"(fn f [xs n]\n  (if (zero? n) \n    (first xs)\n    (f (rest xs) (dec n))))","problem":21,"user":"4fc92595e4b0ee37620e1843"},{"problem":21,"code":"(fn [s n]\n  (loop [s s,\n         cpt 0]\n    (if (= cpt n)\n      (first s)\n      (recur (rest s) (inc cpt)))))","user":"56a50330e4b0542e1f8d14df"},{"code":"(fn my-nth [seq n]\n  (if (zero? n)\n      (first seq)\n      (recur (rest seq) (dec n))))","problem":21,"user":"5057242fe4b0012181721986"},{"problem":21,"code":"(fn q [x y] (\n\t\t    if (= y 0) (first x) (q (next x) (- y 1))         \n))","user":"55d1a2b8e4b0e31453f64a46"},{"code":"(fn [coll i] (first (drop i coll)))","problem":21,"user":"502a5fa4e4b09e8f859a9fbd"},{"problem":21,"code":"(fn nthh [lst n] \n  (if (= n 0) \n    (first lst) \n    (nthh (rest lst) (- n 1))))","user":"55d4b995e4b0e31453f64a7c"},{"problem":21,"code":"(fn mth [s m]\n  (if (= 0 m)\n    (first s)\n    (mth (rest s) (dec m))))","user":"5a05dec4e4b01bb0ae8afdc1"},{"code":"(fn nelem [lst n]\n  (if (= 0 n)\n      (first lst)\n      (recur (rest lst) (- n 1))))","problem":21,"user":"4f52a134e4b03ad3f0c10d41"},{"problem":21,"code":"#(loop [n %2\n        remaining %1]\n   (if (<= n 0)\n     (first remaining)\n     (recur (dec n) (rest remaining))))","user":"4f9e830ae4b0dcca54ed6d2c"},{"problem":21,"code":"(fn [sqn n]\n  (loop [cnt n tmp-sqn sqn] \n    (if (zero? cnt)\n    (first tmp-sqn)\n    (recur (dec cnt) (rest tmp-sqn)) )))","user":"59b0e877e4b0e1f4e384c8d3"},{"code":"(fn getn\n\n   ([l,n] (getn l n 0) )\n\n   ([l,n,i]\n      (if (= n i)\n        (first l)\n        (getn (rest l) n (+ i 1))\n        )\n      )\n\n  \n   )","problem":21,"user":"4e78c208535db95036265722"},{"problem":21,"code":"(fn my-nth [coll idx]\n  (if (= idx 0)\n    (first coll)\n    (recur (rest coll) (dec idx))))","user":"53b7aa6ce4b047364c0444d1"},{"code":"(fn my-nth [seq num]\n  (if (= num 0)\n      (first seq)\n      (my-nth (rest seq) (- num 1))))","problem":21,"user":"4f036384535dcb61093f6a9a"},{"problem":21,"code":"(fn [xs i]\n  (if (pos? i)\n    (recur (rest xs) (dec i))\n    (first xs)))","user":"53dfdf01e4b0d874e779ae46"},{"code":"(fn [s x] (.get s x))","problem":21,"user":"4fa659f3e4b081705acca1b6"},{"code":"(fn [seq n]\n  (loop [current seq\n         cnt n]\n    (if (= cnt 0)\n      (first current)\n      (recur (rest current) (dec cnt)))))","problem":21,"user":"518bd05ee4b0f028e99addf2"},{"problem":21,"code":"(fn [y x] (first (drop  x (take (+ x 1) y ))))","user":"560f4eb0e4b05f002753df5b"},{"problem":21,"code":"(fn get-nth [v, n] \n  (first (filter (fn [i]\n                   (= n (.indexOf v i))) v)))","user":"5cab0766e4b048ec896c5c45"},{"problem":21,"code":"(fn [x a]\n  (get (vec x) a))","user":"56ae749fe4b03c432f18735f"},{"problem":21,"code":"(fn nth-elem ([coll n] \n  (if (= n 0) \n    (first coll) \n    (nth-elem (rest coll) (- n 1)) ) ))","user":"55f5c118e4b06e875b46ce8e"},{"code":"(fn [lst cnt]\n  (if (zero? cnt)\n    (first lst)\n    (recur (rest lst) (- cnt 1))))","problem":21,"user":"50f0d000e4b0c5f4fa5ddb6f"},{"code":"(fn [s n]\n  (if (= 0 n) (first s)\n              (recur (rest s) (- n 1))))","problem":21,"user":"4e98f9f7535dbda64a6f6b60"},{"problem":21,"code":"#(if (= 0 %2) \n  (first %) \n  (recur (rest %) (dec %2)))","user":"5a8aa992e4b05369db4d24d8"},{"problem":21,"code":"(fn\n [col n]\n (loop [i 0 x col]\n   (if (= i n)\n     (first x)\n     (recur (inc i) (rest x)))))","user":"5a07fefee4b01bb0ae8afde5"},{"problem":21,"code":"(fn nth-element [l n]\n  (if (= n 0) (first l)\n    (nth-element (rest l) (- n 1))))","user":"550d54f6e4b06e50f9beb15c"},{"code":"(fn idx [col i]\n  (last (take (inc i) col)))","problem":21,"user":"500adcc9e4b03d00572d2d7c"},{"problem":21,"code":"(fn [col n-th]\n  (loop [\n    x 0\n    rest-col col\n  ]\n  (\n    if (= x n-th)\n      (first rest-col)\n      (recur (inc x) (rest rest-col))\n  )))","user":"605714ffe4b069ae89ce6ae1"},{"code":"(fn [l n] (->> l (drop n) (first)))","problem":21,"user":"526439a4e4b03e8d9a4a70cc"},{"problem":21,"code":"(fn my-nth [xs n]\n  (if (zero? n)\n    (first xs)\n    (recur (rest xs) (- n 1))))","user":"5bd27a37e4b0e9689409ee60"},{"problem":21,"code":"(fn [array index]\n  (loop [array array\n         i 0]\n    (if (= i index)\n      (first array)\n      (recur (rest array) (inc i)))))","user":"5459f13be4b01be26fd74631"},{"problem":21,"code":"(fn [xs index]\n    (loop [xss xs\n           i index]\n      (if (= i 0)\n        (first xss)\n        (recur (rest xss) (dec i)))))","user":"5782018de4b0d36ec5835e8e"},{"problem":21,"code":"#(loop [lst %1\n        idx %2]\n   (if (<= idx 0)\n     (first lst)\n     (recur (rest lst) (- idx 1))))","user":"54dd3bdde4b024c67c0cf791"},{"problem":21,"code":"(fn [l n]\n(loop [l l n n]\n  (if\n    (= n 0)\n    \t(first l)\n    (recur (rest l) (- n 1))\n           )))","user":"570dc955e4b0b0fb43fd06e0"},{"code":"(fn idx [coll pos]\r\n  (loop [pos pos coll coll]\r\n    (if (zero? pos)\r\n      (first coll)\r\n      (recur (dec pos) (next coll))\r\n      )))","problem":21,"user":"4ff201d7e4b0678c553fc330"},{"problem":21,"code":"(fn [lst n]\n  (if (= n 0)\n      (first lst)\n      (recur (next lst) (dec n))))","user":"54df2274e4b024c67c0cf7a8"},{"problem":21,"code":"(fn [coll n]\n   (if (zero? n) (first coll)\n       (recur (rest coll) (dec n))))","user":"5603d21de4b0c80df0ca264f"},{"problem":21,"code":"(fn [list index] (loop [lst list counter 0] (if (= counter index) (first lst) (recur (rest lst) (inc counter)))))","user":"53c73e8ae4b00fb29b2212a5"},{"code":"(fn mynth [list index]\n  (if (= index 0)\n    (first list)\n    (mynth (rest list) (- index 1))\n))","problem":21,"user":"5038f8d2e4b088a6a14ca75f"},{"problem":21,"code":"(fn [elements n](last (take (+ n 1) elements)))","user":"60953574e4b00e9e6653c3eb"},{"problem":21,"code":"(fn mynth [lst idx] (first (last (split-at idx lst))))","user":"546113ffe4b01be26fd74699"},{"problem":21,"code":"(fn [col n] \n  (if (zero? n) \n    (first col) \n    (recur (rest col)(dec n ))))","user":"4fabbd3ee4b081705acca21e"},{"code":"(fn [set n] \n  (if (= n 0)\n    (first set)\n    (recur (rest set) (- n 1))\n  )\n)","problem":21,"user":"5230d490e4b0035e815da396"},{"problem":21,"code":"(fn f [lst n] \n  (if (= 0 n) \n    (first lst) \n    (recur (rest lst) (- n 1))\n  )\n)","user":"5596d885e4b04c1e5c31d75a"},{"problem":21,"code":"(fn [seq n]\n\t(let [f (first seq) rest (rest seq)]\n\t\t(if (= 0 n)\n\t\t\tf\n\t\t\t(recur rest (dec n)))))","user":"57d174ede4b0bd073c20236c"},{"problem":21,"code":"(fn [l x] (.get l x))","user":"57474aa4e4b009280f9f2b71"},{"code":"(fn nth-item [l n] (if (= n 0) (first l) (nth-item (rest l) (- n 1))))","problem":21,"user":"4e4b4564535dc968683fc4d3"},{"code":"#(-> (take (inc %2) (iterate rest %1))\n     (last)\n     (first))","problem":21,"user":"51642237e4b003cf19fdde31"},{"problem":21,"code":"(fn __ \n  [set index]\n  (first (nthrest set index)))","user":"5d615431e4b0c9e5857d5010"},{"code":"(fn [v n] (first (drop n v)))","problem":21,"user":"4e644319535d8ccf87e9fe69"},{"problem":21,"code":"(fn [l n]\n  (if (>= 0 n)\n    (first l)\n    (recur (rest l) (dec n))))","user":"5883584ae4b0f1effa3b7674"},{"problem":21,"code":"(fn [coll ind] (last (take (inc ind) coll)))","user":"57e79d8ee4b0bfb2137f5afe"},{"code":"(fn [lst n] (if (= n 0) (first lst) (recur (rest lst) (dec n))))","problem":21,"user":"52401a65e4b0ad64fa010306"},{"code":"(fn f [c n]\n  (if (= n 0)\n    (first c)\n  (f (rest c) (dec n))))","problem":21,"user":"514afd1be4b0bd81940b86c6"},{"problem":21,"code":"(fn get-nth-element [x n]\n  (if( = n 0) (first x) (get-nth-element (rest x)(- n 1))))","user":"566a3a26e4b0a866af689699"},{"problem":21,"code":"(fn [xs x] ((into [] xs) x))","user":"55d79b87e4b0e31453f64aa8"},{"code":"(fn [col n] (first (last (take (+ n 1) (iterate rest col)))))","problem":21,"user":"53350264e4b0656e627bfd73"},{"code":"(fn rk[xs i] (if (= i 0) (first xs) (rk (rest xs) (dec i))))","problem":21,"user":"51995333e4b0aa09cbc0b847"},{"problem":21,"code":"(fn asd [lst n]\n  (last (take (inc n) lst)))","user":"5d9515a9e4b0d3f9b434ad2c"},{"problem":21,"code":"(fn [xs ind]\n  (first (drop ind xs)))","user":"553b87abe4b09218d5f45003"},{"code":"(fn [x n]\n  (first ((apply comp (repeat n rest)) x)))","problem":21,"user":"5195fadee4b04c0af7ff3c11"},{"code":"#((comp last take) (+ %2 1) %1)","problem":21,"user":"52dd087ee4b09f7907dd13d9"},{"code":"(fn [s idx]\n  (if (= 0 idx) (first s) (recur (rest s) (- idx 1))))","problem":21,"user":"4f5f484be4b0030a34fb2b5f"},{"code":"#(->> % (take (+ %2 1)) last)","problem":21,"user":"52225315e4b0e6a83c8925f9"},{"code":"(fn get-nth [x, c]\n  (if (= c 0)\n    (first x)\n    (get-nth (rest x) (- c 1))\n  )\n)","problem":21,"user":"5125029de4b0ce9225d2ed3e"},{"problem":21,"code":"#(loop [iteration 0 list %1 index %2]\n   (if(= iteration index)\n   \t(first list)\n   \t(recur (inc iteration) (rest list) index)))","user":"5a5ce474e4b0512ff01cd919"},{"problem":21,"code":"(fn p21 [l ix]\n  (let [n (next l)]\n    (if (and (> ix 0) n)\n      (recur n (- ix 1))\n      (first l))))","user":"5f968f4ee4b0715f5002d7d2"},{"problem":21,"code":"(fn my-nth [ls index]\n  (cond (empty? ls) nil\n        (zero? index) (first ls)\n        :else (my-nth (rest ls) (- index 1))))","user":"53d87449e4b0e771c302546d"},{"problem":21,"code":"(fn [col i]\n  (if (= 0 i)\n    (first col)\n    (recur (rest col) (- i 1))))","user":"58852909e4b0f1effa3b76af"},{"problem":21,"code":"(fn my-nth [seq idx] (if (= 0 idx) (first seq) (recur (rest seq) (dec idx))))","user":"56889672e4b0dcc4269f406c"},{"code":"(fn my-nth [l x]\n  (cond\n   (= x 0) (first l)\n   true (my-nth (rest l) (- x 1))))","problem":21,"user":"5196568fe4b04c0af7ff3c1c"},{"problem":21,"code":"(fn nth! [l n] (if (= n 0) (first l) (nth! (rest l) (- n 1))))","user":"5901158de4b0438e51c2d039"},{"problem":21,"code":"(fn [s i] (loop [s s i i] (if (zero? i) (first s) (recur (rest s) (- i 1)))))","user":"5717b57de4b07c98581c3b15"},{"code":"(fn [a b] (first(last (split-at b a))))","problem":21,"user":"50bfb5fbe4b05ae8c1cbbd9a"},{"problem":21,"code":"(fn [x c] ((vec x) c) )","user":"5cf7c1b0e4b0b71b1d808a72"},{"code":"(fn [a n] (if (= 0 n) (first a) (recur (rest a) (- n 1))))","problem":21,"user":"4ee673cf535d93acb0a66860"},{"code":"(fn [a b] (last (take (+ 1 b) a)))","problem":21,"user":"4fae0319e4b081705acca244"},{"problem":21,"code":"(fn [m i] (get (vec m) i))","user":"575e7335e4b0846ea39baf28"},{"code":"(fn enth [x y] (if (< y 1) (first x) (enth (rest x) (dec y))))","problem":21,"user":"4ffb61a1e4b0678c553fc3d1"},{"problem":21,"code":"(fn [s n]\n  (loop [i 0 ccc s]\n    (if (= i n) \n      (first ccc)\n      (recur (inc i) (rest ccc)))))","user":"5eb84ef4e4b00a66d4a95244"},{"problem":21,"code":"(fn mth[s n]\n  (if(= 0 n)\n  (first s)\n  (mth (rest s) (dec n))\n  ))","user":"5d2a8ecce4b01671435dbc79"},{"problem":21,"code":"(fn my_nth \n  ([l indx]\n  (my_nth l indx 0))\n  ([l indx cnt]\n  (if\n    (= indx cnt) (first l)\n    (recur (rest l) indx (inc cnt)))))","user":"5c2f48a5e4b0d62ef62d9f0d"},{"code":"#(loop [alist %, n %2]\n  (if (zero? n) \n    (first alist)\n    (recur (rest alist) (dec n))))","problem":21,"user":"512e7402e4b0b740abc59826"},{"problem":21,"code":"(fn [sequ n] \n  (loop [s sequ \n         c 0\n         mx n] \n    (if (= c mx) \n      (first s)\n      (recur \n        (rest s) \n        (inc c) \n        mx))))","user":"578fc3d2e4b0ebec4cfb759b"},{"problem":21,"code":"(fn abc [x n]\n  (if (= n 0)\n    (first x)\n    (abc (rest x) (dec n))\n  )\n)","user":"56bb3a4be4b0f26550335951"},{"code":"#(loop [seqe %1\n        cnt %2]\n    (println seqe)\n  (if\n    (zero? cnt)\n    (first seqe)\n    (recur (rest seqe) (dec cnt))\n))","problem":21,"user":"4f1ef703535d64f60314649c"},{"problem":21,"code":"(fn [my-list n] (last (take (+ n 1) my-list)))","user":"559ed93ce4b0acc240e314e3"},{"code":"(fn [lista nr-elementu]\n  (loop [temp-list lista\n         pozostalo nr-elementu]\n    (if (= 0 pozostalo)\n      (first temp-list)\n      (recur (rest temp-list) (- pozostalo 1)))))","problem":21,"user":"4ecabce3535d6d7199dd370a"},{"code":"(fn [lst, size]\n  (letfn\n    [(ene [ls cnt sz]\n      (if (= cnt sz)\n        (first ls)\n        (ene (rest ls) (inc cnt) sz)))]\n    (ene lst 0 size)))","problem":21,"user":"50369122e4b0af0658af779e"},{"code":"(fn testfunc [seq num]\r\n  (if (= num 0)\r\n    (first seq)\r\n    (testfunc (rest seq) (dec num))))","problem":21,"user":"4fa313bbe4b081705acca188"},{"problem":21,"code":"(fn [l x] (get (vec l) x))","user":"5bf313e8e4b0a6d31fed2188"},{"code":"(fn elem-n [x count] \n  (if (= 0 count) (first x) (elem-n (rest x) (dec count))))","problem":21,"user":"4fb86dc9e4b081705acca2d8"},{"problem":21,"code":"(fn [col n]\n  (loop [res col i 0]\n    (if (= i n)\n      (first res)\n      (recur (rest res) (inc i)))))","user":"545b77f5e4b01be26fd74653"},{"problem":21,"code":"(fn [arr i] (get (into {} (map-indexed (fn [i val] {i val}) arr)) i))","user":"58b54852e4b0ebc645576d52"},{"code":"(fn f [lst n] \n  (if (= 0 n) \n    (first lst) \n    (f (rest lst) (- n 1))))","problem":21,"user":"517a0d1fe4b01aacecbecbe8"},{"problem":21,"code":"(fn nth-element\n  [coll index]\n  (if (vector? coll)\n    (get coll index)\n    (get (vec coll) index)))","user":"5a3c06fce4b001c08efc0cdd"},{"code":"(fn [a, b] (.get a b))","problem":21,"user":"539d4db6e4b0b51d73faaf34"},{"code":"(fn [x, y] (loop [lst x v y]  (if (= v 0) (first lst) (recur (rest lst) (- v 1)\n                                                             )\n                                )\n             )\n  )","problem":21,"user":"50d324dde4b049d4ed5650d7"},{"problem":21,"code":"(fn [my-seq number]\n  (first(drop number my-seq)))","user":"5e563c88e4b027a2e10ac0f6"},{"problem":21,"code":"(fn [collection index]\n  (if (zero? index)\n    (first collection) \n    (recur (rest collection) (dec index))))","user":"58e7639be4b056aecfd47ccf"},{"problem":21,"code":"(fn [coll n] (loop [coll coll m 0] (if (= m n) (first coll)\n                                     (recur (rest coll) (+ 1 m)))))","user":"554d386ee4b0a04f792995b8"},{"code":"(fn foo [seq idx]\n  (cond\n    (= 0 idx) (first seq)\n    :else (foo (rest seq) (- idx 1))))","problem":21,"user":"4ec5cdb0535d6d7199dd36b8"},{"code":"(fn [seqq n] (get (vec seqq) n ))","problem":21,"user":"51e924d2e4b0f1f103a0d13a"},{"problem":21,"code":"(fn alt-nth [input-seq n]\n  (if (> n 0) (alt-nth (rest input-seq) (dec n)) (first input-seq))\n  )","user":"5670c4c4e4b0a866af6896fa"},{"code":"(fn [l,n] (first (subvec (vec l) n)))","problem":21,"user":"527b8881e4b03e8d9a4a758e"},{"problem":21,"code":"(fn [vect pos] (get (vec vect) pos))","user":"5726adf8e4b0c5bde472c12b"},{"code":"(fn [seq n] (if (= n 0) (first seq) (recur (rest seq) (dec n))))","problem":21,"user":"4e7df806535db169f9c796f8"},{"problem":21,"code":";#(.get %1 %2)\n(fn [coll n] (first (drop n coll)))","user":"57e4dbcbe4b0bfb2137f5ac3"},{"problem":21,"code":"(fn [lst n]\n    (first(drop n lst)))","user":"5f74de11e4b02876ed9fd0a5"},{"problem":21,"code":"(fn enth\n  ([xs n] (enth xs n 0))\n  ([xs n m]\n   (if (= n m)\n     (first xs)\n     (recur (rest xs) n (inc m)))))","user":"5d217b1de4b02ea6f0fb69e6"},{"code":"(fn [l n]\n  (first (drop n l))\n  )","problem":21,"user":"5213ffd3e4b0961f15ac4d7d"},{"code":"(fn my-nth [seq n] \n   (if (= n 0)\n     (first seq)\n     (my-nth (rest seq) (- n 1))))","problem":21,"user":"502e9789e4b078f26332e746"},{"problem":21,"code":"(fn [col, n] (last (first (split-at (+ 1 n) col))))","user":"53d382d8e4b00fb29b22132a"},{"code":"(fn my-nth [s n]\n  (first (drop n s)))","problem":21,"user":"4ed98b40535d10e5ff6f5307"},{"code":"(fn [coll target]\n  (loop [c coll\n         idx 0]\n        (if (= idx target)\n            (first c)\n            (recur (rest c) (inc idx)))))","problem":21,"user":"4ecaa5da535d6d7199dd3707"},{"problem":21,"code":"(fn [s n]\n   (if (zero? n)\n     (first s)\n     (recur (rest s) (dec n))))","user":"57e0f30ae4b0bfb2137f5a66"},{"code":"(fn [ls n] (first (drop n (drop-last (- (count ls) n 1) ls))))","problem":21,"user":"52c7626ee4b0c2d177d62121"},{"problem":21,"code":"(fn my_nth [x n] (if (= n 0) (first x) (my_nth (rest x) (- n 1))))","user":"5b67f0fbe4b0c6492753e76d"},{"code":"(fn [n, e] (first(drop e n)))","problem":21,"user":"51ef48d0e4b0871fa145d9a4"},{"problem":21,"code":"(fn [s k] (if (zero? k) (first s) (recur (next s) (- k 1))))","user":"55c9bcb8e4b0e31453f649f2"},{"problem":21,"code":"(fn [coll n-th] \n  (if (= n-th 0)\n  \t(first coll)\n  \t(recur (next coll) (- n-th 1))))","user":"59b94a04e4b0a024fb6ae3c9"},{"problem":21,"code":"(fn enth [l p] (if (= p 0) (first l) (enth (rest l) (- p 1))))","user":"56662275e4b0e91d5f5c566a"},{"code":"(fn [s n]\n  (last (take (inc n) s)))","problem":21,"user":"4e5ecd65535d8a8b8723a2d6"},{"problem":21,"code":"(fn [seqce n]\n  (loop [xs seqce\n         n n]\n    (if (= n 0) \n      (first xs)\n      (recur (rest xs) (dec n)))))","user":"547e64dee4b0c51c1f4d7309"},{"code":"(fn getn [x y] \n  (cond \n    (= y 0) (first x) \n    :else (getn (rest x) (dec y))))","problem":21,"user":"5012aefce4b0c8732600222a"},{"code":"(fn [sq n]\n  (loop [sqs sq\n         nn n]\n    (if (zero? nn)\n      (first sqs)\n      (recur (rest sqs) (dec nn)))))","problem":21,"user":"4e52777f535d302ef430da76"},{"problem":21,"code":"(fn [elems n]\n  (if (zero? n)\n    (first elems)\n    (recur (rest elems) (- n 1))))","user":"5d28b684e4b092dab7f59c83"},{"problem":21,"code":"(fn [col, i] (get (vec col) i))","user":"53ff5560e4b0de5c418485fd"},{"problem":21,"code":"(fn [coll n-th]\n  (loop [n 0\n         remain coll]\n    (if (= n-th n)\n      (first remain)\n      (recur (inc n) (rest remain)))))","user":"5a861aafe4b05369db4d2496"},{"code":"(fn my-nth [l i]\n  (if (zero? i)\n    (first l)\n    (my-nth (rest l) (dec i))))","problem":21,"user":"514e0417e4b019235f6c0593"},{"code":"(fn [collection n]\n       (loop [coll collection count n]\n         (if (= count 0)\n          (first coll)\n          (recur (rest coll) (dec count) )\n)))","problem":21,"user":"528ba6a2e4b0239c8a67aea4"},{"code":"#( if (zero? %2) (first %) (recur (rest %) (dec %2)))","problem":21,"user":"4e99dd05535dbda64a6f6b6a"},{"problem":21,"code":"(fn [list index] (first (drop (- (- (count list) index) 1) (reverse list))))","user":"57aa103be4b0b8559636fc64"},{"problem":21,"code":"(fn fn-nth [s n]\n  (if (= 0 n) \n    (first s) \n    (fn-nth (rest s) (dec n))))","user":"5575191ee4b05c286339e05d"},{"code":"(fn mnth [lst n]\n  (if (zero? n)\n      (first lst)\n      (mnth (rest lst) (dec n))))","problem":21,"user":"4e8338d6535db62dc21a62d3"},{"problem":21,"code":"(fn [coll index]\n  (loop [coll coll index index]\n    (if (= index 0)\n      (first coll)\n      (recur (rest coll) (dec index)))))","user":"52ca6520e4b071a8d36bd3e0"},{"problem":21,"code":"(fn a [sq, cnt] (if (= cnt 0) (first sq) (a (rest sq), (- cnt 1))))","user":"5d88c6a3e4b0915913b1d3ad"},{"problem":21,"code":"(fn [l n] (if (pos? n) (recur (rest l) (dec n)) (first l)))","user":"55e87696e4b0121d4835fd93"},{"problem":21,"code":"(fn nnth [s n] (if (= 0 n) (first s) (recur (next s) (- n 1)) ))","user":"5649b1b0e4b0284900eef646"},{"code":"(fn [coll index] (get (vec coll) index))","problem":21,"user":"4f541874e4b0a7574ea717d8"},{"problem":21,"code":"(fn [lst x] (first (last (split-at x lst))))","user":"55c07e3ee4b01b9910ae2a24"},{"problem":21,"code":"(fn [x,y] (first (take-last (- (count x) y) x)))","user":"552b6ddbe4b0ffed3738f965"},{"code":"(fn f\n  ([coll n]\n    (if (zero? n)\n      (first coll)\n      (recur (rest coll) (dec n)))))","problem":21,"user":"51dd4326e4b0c33a4e1da402"},{"problem":21,"code":"#(loop [curr-index 0 tail %1] \n    (if \n      (= curr-index %2) \n      (first tail) \n      (recur (inc curr-index) (rest tail))))","user":"5b11449ce4b0cc2b61a3be2d"},{"code":"(fn mynth [seq index]\r\n  (if (= index 0)\r\n    (first seq)\r\n    (recur (rest seq) (dec index)))\r\n  )","problem":21,"user":"4e14108c535d04ed9115e7dd"},{"problem":21,"code":"(fn [c n]\n  (if (= n 0) \n    (first c)\n    (recur (rest c) (dec n))))","user":"54a2760ae4b09f271ff37c5b"},{"code":"(fn [se x] \n  (first (drop x se)))","problem":21,"user":"4f891abde4b033992c121c77"},{"problem":21,"code":"(fn my-nth [a-seq n]\n  (let [helper (fn [a-seq n state]\n                 (if (== state n)\n                   (first a-seq)\n                   (recur (rest a-seq) n (inc state))))]\n    (helper a-seq n 0)))","user":"59a58bf0e4b066c664927d64"},{"problem":21,"code":"(fn [lst n]\n  (last (take (inc n) lst))\n)","user":"5a984657e4b0d174b936c78a"},{"code":"#(loop [xs %1 x %2]\n  (if (== x 0)\n    (first xs)\n    (recur (next xs) (- x 1))))","problem":21,"user":"508e2584e4b0f17d83ea26c9"},{"problem":21,"code":";; (fn [coll n] (last (first (split-at (inc n) coll))))\n(fn [coll n] (first (drop n coll)))","user":"575d5831e4b02ea114799381"},{"problem":21,"code":";#(if (= 0 %2) \n;   (first %1)\n;   (recur (rest %1) (- %2 1)))\n\n#(first (drop %2 %1))","user":"5bfa3e02e4b0bdcf453d15ca"},{"code":"(fn [coll n] (if (zero? n) (first coll) (recur (rest coll) (dec n))))","problem":21,"user":"4e5914e0535d8a8b8723a29b"},{"code":"(fn mynth [l n]\n  (if (= n 0)\n   (first l)\n   (mynth (rest l) (- n 1))))","problem":21,"user":"4f03811e535dcb61093f6afe"},{"problem":21,"code":"(fn x\n ([l n] (x l n 0))\n ([l n i]\n     (if (= i n)\n       (first l)\n       (x (next l) n (+ i 1)))))","user":"564d7434e4b0284900eef680"},{"code":"(fn [coll n] (get  (vec coll) n ))","problem":21,"user":"528e1c88e4b0239c8a67aed1"},{"code":"(fn [xs i] (if (= i 0) (first xs) (recur (rest xs) (- i 1))))","problem":21,"user":"4edeac6b535d10e5ff6f533a"},{"problem":21,"code":"(fn [x n]\n   (get (zipmap (range 0 (+ n 1)) x) n)\n   )","user":"5ccc2a03e4b0ccb06196288f"},{"code":"(fn [s p] (last (take (inc p) s)))","problem":21,"user":"52a08afce4b04e0c58e87bc7"},{"problem":21,"code":"(fn get-position \n  [elements pos]\n  (loop [remaining-elements elements\n         index 0]\n    (if (= index pos)\n      (first remaining-elements)\n      (recur (rest remaining-elements)\n             (inc index)))))","user":"56c8da61e4b0ed865f9758d8"},{"code":"(fn [s n]\n  (loop [s s\n         n n]\n    (if (= n 0)\n      (first s)\n      (recur (rest s) (- n 1)))))","problem":21,"user":"51b16f19e4b0c53cf2e68a7a"},{"problem":21,"code":"(fn [a b] (last (take (+ 1 b) a )))","user":"57376dcbe4b0cd1946bd1044"},{"code":"(fn [xs index] (get (vec xs) index))","problem":21,"user":"51ca7906e4b08b1cbd0d9487"},{"problem":21,"code":"(fn [s i]\n  ((apply comp (cons first (repeat i rest))) s))","user":"579e15a6e4b05b1deef9ae20"},{"code":"(fn [_list n] \n  ( \n    last (take (+ n 1) _list)\n  ) \n)","problem":21,"user":"4ea31da2535d7eef308072c1"},{"problem":21,"code":"(fn [charsequence nthelement]\n  (.get charsequence nthelement))","user":"56040e58e4b0c80df0ca2654"},{"code":"(fn ith [seq i & current]\n  (if (= i (or current 0))\n    (first seq)\n    (recur (rest seq) i (+ (or current 0) 1))))","problem":21,"user":"4fa2a5e9e4b0dcca54ed6d69"},{"problem":21,"code":"(fn [l, i] (first (nthnext l i)))","user":"566c728be4b0a866af6896bc"},{"problem":21,"code":"(fn [s n]\n  (if (> n 0)\n    (recur (rest s) (- n 1))\n    (first s)))","user":"54042a19e4b0df28a13c62e4"},{"code":"(fn my-nth [seq n]\n  (if (<= n 0) (first seq)\n    (my-nth (rest seq) (dec n))))","problem":21,"user":"5119f3d5e4b06c8af0111818"},{"problem":21,"code":"(fn my-nth [xs i]\n  (if (= i 0)\n    (first xs)\n    (my-nth (rest xs) (dec i))))","user":"570940a9e4b0b0fb43fd06aa"},{"code":"(fn [xs i]\n  (if (> i 0)\n    (recur (rest xs) (dec i))\n    (first xs)))","problem":21,"user":"504df657e4b078edc5f59384"},{"problem":21,"code":"(fn f [l n]\n  (if\n   (zero? n) (first l)\n    (f (rest l) (dec n))))","user":"55ad0e18e4b03311e7b7329c"},{"code":"(fn [sequ arg1]\n  (last (take (+ arg1 1) sequ)))","problem":21,"user":"52bc7ea6e4b07a9af57922f7"},{"code":"(fn [x,y] ((vec x) y))","problem":21,"user":"4f6fe5e4e4b07046d9f4efef"},{"code":"(fn mynth [lst n]\n  (cond (= 0 n) (first lst)\n        :else (mynth (rest lst) (dec n))))","problem":21,"user":"5308d15fe4b02e82168697b2"},{"code":"(fn [arr n]\n (if (= n 0)\n   (first arr)\n   (recur (rest arr) (- n 1))))","problem":21,"user":"52cdc676e4b07d0d72b2737f"},{"code":"(fn [seq n]\r\n  (cond\r\n    (= 0 n) (first seq)\r\n    :else (recur (rest seq) (dec n))))","problem":21,"user":"4ec7def0535d6d7199dd36e9"},{"code":"(fn [x i] \n  (if (= i 0)\n    (first x)\n    (recur (rest x) (dec i))\n    )\n  )","problem":21,"user":"506f5a67e4b082ae7d1032c6"},{"problem":21,"code":"(fn my-nth \n  [l n] \n  (if (= 0 n) (first l)\n  (my-nth (rest l) (- n 1))))","user":"5b61279ce4b0c6492753e70e"},{"problem":21,"code":"(fn my-nth \n   [coll pos]\n   (if (= pos 0)\n     (first coll)\n     (my-nth (rest coll) (dec pos))))","user":"5de012c8e4b0948ae9d9ade2"},{"code":"(fn [coll i]\r\n  (loop [coll coll n i]\r\n    (if (zero? n) (first coll)\r\n      (recur (rest coll) (dec n)))))","problem":21,"user":"4e6a6b83535d8ccf87e9fee0"},{"problem":21,"code":"(fn [data index]\n  ((vec data) index)\n)","user":"57f904c5e4b0d3187e900936"},{"code":"(fn [x n] (last (drop-last n (reverse x))))","problem":21,"user":"500f4f2fe4b03ec779321689"},{"code":"(fn [ary location]\n  (loop [ct 0 ctary (seq ary)]\n    (if (not (= ct location)) \n      (recur (inc ct) (rest ctary))\n      (first ctary))))","problem":21,"user":"4f6fd95fe4b07046d9f4efee"},{"problem":21,"code":"#(second (reduce\n          (fn [acc cur] \n            (if (== (first acc) -1) acc\n              [(- (first acc) 1) cur]))\n            [%2 0] %1))","user":"5e909685e4b0cb016954634d"},{"problem":21,"code":"(fn [lst n]\n  ((comp first reverse) (take (+ n 1) lst)))","user":"5931e498e4b072a2710fd024"},{"problem":21,"code":"(fn [se n]\n  (->> se\n       (drop n)\n       (first)))","user":"5d6febe6e4b04d129b00f2d5"},{"problem":21,"code":"(fn nth-element [ls n]\n  (if (= n 0)\n    (first ls)\n    (nth-element (rest ls) (dec n))))","user":"58a58c50e4b01a0c0b232914"},{"problem":21,"code":"(fn get_nth [collection index]\n  (if (= index 0)\n    (first collection)\n    (recur (rest collection) (- index 1))))","user":"58e980dfe4b056aecfd47d0b"},{"problem":21,"code":"(fn [x n] (loop [e 0 r x] (if (= e n) (first r) (recur (inc e) (rest r)))))","user":"58be3142e4b0888cdc949d44"},{"code":"(fn [seq n]\n  (if (> n 0)\n    (recur (rest seq) (- n 1))\n    (first seq)))","problem":21,"user":"52e003c1e4b09f7907dd1407"},{"problem":21,"code":"(fn nth_item\n  [ls n]\n  (if (= n 0)\n    (first ls)\n    (recur (rest ls) (dec n))))","user":"5c58736be4b01df32ab73247"},{"problem":21,"code":"(fn [x n] (if (= (count x) (+ n 1)) (last x) (recur (butlast x) n)))","user":"55801a0de4b05c286339e0e5"},{"problem":21,"code":"(fn get-nth [a n]\n  (if (= n 0)\n    (first a)\n    (get-nth (rest a) (- n 1))))","user":"541b41d1e4b01498b1a71a65"},{"problem":21,"code":"(fn my-nth[s n]\n  (if (= 0 n)\n    (first s)\n    (my-nth (rest s) (dec n))))","user":"582a5174e4b051871117bf59"},{"problem":21,"code":"(fn [lst n]\n  (if (= 0 n)\n    (first lst)\n    (recur (rest lst) (dec n))))","user":"5893c64ce4b00487982d524b"},{"code":"(fn xnth [v n] (if (= n 0) (first v) (recur (rest v) (dec n))))","problem":21,"user":"51990df9e4b068aa333628fc"},{"problem":21,"code":"(fn [input-list index]\n      (loop [cnt index tmp-list input-list]\n        (if (zero? cnt)\n          (first tmp-list)\n          (recur (dec cnt) (rest tmp-list)))))","user":"5cc4c2eae4b0ccb061962807"},{"code":"(fn blah [x n]\n\t(if (= n 0)\n\t  (first x)\n\t  (blah (rest x) (dec n))))","problem":21,"user":"51416934e4b03d51af0d04f0"},{"problem":21,"code":"(fn [what which] (first (drop which what)))","user":"548efcb6e4b0e286459a122a"},{"problem":21,"code":"(fn [c n] (first(last(split-at n c))))","user":"562add6de4b00e49c7cb4834"},{"code":"(fn mynth [l n] \n  (if (= 0 n)\n   (first l)\n    (mynth (rest l) (dec n))\n    )\n  )","problem":21,"user":"51797cb9e4b0684c1c981a4b"},{"code":"(fn mynth [seq n] (if (= 0 n) (first seq) (mynth (rest seq) (- n 1))))","problem":21,"user":"4ec6e51a535d6d7199dd36db"},{"problem":21,"code":"(fn [x n] \n    (if (zero? n) \n   \t \t(first x)\n        (recur (rest x) (- n 1)) \t\n      )\n  )","user":"575f9ac0e4b08062f99a4e83"},{"problem":21,"code":"(fn [x y]\n  (loop [lst x pos 0]\n    (if (== y pos)\n      (first lst)\n      (recur (rest lst) (inc pos)))))","user":"57ffeb62e4b0a837a8b30c2d"},{"problem":21,"code":"(fn [xs n] (if (= n 0) (first xs) (recur (rest xs)(dec n))))","user":"55116582e4b06e50f9beb192"},{"problem":21,"code":"(fn [s n]\n  (loop [iteration 0 remaining_s s]\n    (if (= iteration n)\n      (first remaining_s)\n      (recur (#(+ % 1) iteration) (rest remaining_s))   \n    )   \n  )  \n)","user":"54c6e78ae4b045293a27f634"},{"problem":21,"code":"(fn[x, n](last (take (+ n 1) x)))","user":"55f9d870e4b03cbcff9738cc"},{"problem":21,"code":";; Throws exception when index is out of bound\n;; #((vec %1) %2)\n;; Solution from other users \n#(first (drop %2 %1))","user":"5764cc01e4b0994c1922fc05"},{"code":"(fn n [col ind] \n\t(if-not (= ind 0)\n\t\t(n (rest col) (dec ind))\n\t\t(first col)))","problem":21,"user":"53386fb9e4b0e30313ee6c9a"},{"code":"(fn [a n] (if (= n 0) (first a) (recur (rest a) (- n 1))))","problem":21,"user":"5050b107e4b063148f524126"},{"code":"(fn [x y]\n  (loop [lst x cnt y]\n    (if (= cnt 0) (first lst)\n    (recur (rest lst) (dec cnt) ) )))","problem":21,"user":"4fdf5403e4b05e33b9224f98"},{"problem":21,"code":"(fn[x,y] (loop [inputList x count 0] (if (= count y) (first inputList) (recur (rest inputList) (inc count)))))","user":"571172ece4b09c608db70446"},{"code":"(fn n-elem [x n]\n  (if (= n 0)\n    (first x)\n    (n-elem (rest x) (dec n))\n    )\n  )","problem":21,"user":"50ea11e7e4b02d54280826da"},{"problem":21,"code":"(fn [coll i]\n  (loop [idx i\n         coll coll]\n    (if (= idx 0) (first coll)\n      (recur (dec idx) (rest coll)))))","user":"5dbd53e0e4b09f47823971bc"},{"code":"(fn f [x n] (if (= n 0)\n              (first x)\n              (f (rest x) (- n 1))))","problem":21,"user":"512113b6e4b0ca414459ae93"},{"problem":21,"code":"#(loop [n 0 f (first %1) r (rest %1)] (if (= n %2) f (recur (inc n) (first r) (rest r))))","user":"542db41be4b0dad94371f2bb"},{"problem":21,"code":"(fn nth-element [seq n]\n  (if (= n 0)\n  \t(first seq)\n  \t(nth-element (rest seq) (- n 1))))","user":"59fa7fb0e4b0ca45a743a366"},{"problem":21,"code":"(fn [coll ix]\n  (if (= 0 ix) \n    ( first coll )\n    (recur (rest coll) (dec ix))))","user":"565c3f15e4b068f2fe63dc0c"},{"code":"(fn myNth[x n]\n  ( if\n    (zero? n)\n    (first x)\n    (myNth (rest x) (dec n))\n  )\n)","problem":21,"user":"51899ad2e4b0288ada3dbdac"},{"problem":21,"code":"(fn [sq n]\n  (loop [index 0, sq sq]\n    (if (= index n)\n      (first sq)\n      (recur (inc index) (rest sq)))))","user":"5921a65be4b09b4ee5954c79"},{"code":"#(first (keep-indexed (fn [i x] (when (= i %2) x)) %1))","problem":21,"user":"51ef31dfe4b0871fa145d9a0"},{"code":"(fn [seq index]\n  (get (vec seq) index))","problem":21,"user":"4ed92fd6535d10e5ff6f5300"},{"code":"(fn n-th [x n] \n    (if (= n 0)\n      (first x)\n      (n-th (rest x) (- n 1))))","problem":21,"user":"4f04256d535dcb61093f6ba7"},{"problem":21,"code":"(fn my_nth \n\n  \n\n  [sq n]\n\n  \n\n  (if (= n 0)\n\n    (first sq)\n\n    (my_nth (rest sq) (- n 1))))","user":"589ad631e4b00487982d531c"},{"code":"(fn ntt [l n]\n  (if (zero? n)\n    (first l)\n    (ntt (rest l) (dec n))))","problem":21,"user":"50a768e6e4b090657f4a5cd9"},{"problem":21,"code":"(fn [coll n]\n  (loop [coll coll\n         i 0]\n    (if (= i n)\n      (first coll)\n      (recur (next coll) (inc i)))))","user":"5fef4292e4b05ac5b16ea1d7"},{"problem":21,"code":"(fn [ls n]\n  (loop [n n\n         ls ls]\n    (if (> n 0)\n      (recur (- n 1) (rest ls))\n      (first ls))))","user":"5828927ee4b051871117bf38"},{"code":"#(if (zero? %2) (first %1) (recur (next %1) (dec %2)))","problem":21,"user":"4e8849c5535d8b9bb0147ca4"},{"code":"(fn [coll n]\n  (loop [counter 0, coll coll]\n    (if (= n counter)\n      (first coll)\n      (recur (inc counter) (rest coll)))))","problem":21,"user":"4fc53390e4b081705acca389"},{"problem":21,"code":"#(loop [coll %1 n %2]\n    (if (and (> (count coll) 1) (> n 0))\n      (recur (rest coll) (dec n))\n      (first coll)))","user":"540e97f9e4b0addc1aec671f"},{"code":"(fn [x n] (first (drop n x) ) )","problem":21,"user":"4f07056c535dcb61093f6c1d"},{"code":"(fn [sqn n] (last (take (+ 1 n) sqn)))","problem":21,"user":"4f14e64e535d64f60314643f"},{"code":"(fn nth-elem [seq n] (first(drop n seq)))","problem":21,"user":"50506dcce4b0a02f9cffdebc"},{"problem":21,"code":"(fn [s i] (if (= i 0) (first s) (recur (next s) (- i 1))))","user":"54c3747de4b045293a27f60e"},{"problem":21,"code":"(fn [s n]\n  (if (pos? n)\n    (recur (rest s) (dec n))\n    (first s)))","user":"5896a0e6e4b00487982d52a8"},{"problem":21,"code":"(fn [seq ix]  (loop [s seq i ix ] (if (<= i 0) (first s) (recur (rest s) (dec i)))))","user":"54286beee4b01498b1a71b31"},{"code":"(fn [coll n] (first(drop n coll)))","problem":21,"user":"514358eae4b0c172af7558d6"},{"code":"(fn [coll num]\n         (loop [c coll idx 0]\n           (if (= idx num)\n             (first c)\n             (recur (rest c) (inc idx)))))","problem":21,"user":"4e95a440535dbda64a6f6b37"},{"code":"(fn mynth [coll index]\n  (if (> index 0) \n    (mynth (rest coll) (dec index)) (first coll)))","problem":21,"user":"4f0369a2535dcb61093f6ab0"},{"problem":21,"code":"(fn [coll n]\n (loop [i 0\n        remaining coll]\n   (let [x (first remaining)\n         rest (rest remaining)]\n     (if (= i n)\n       x\n       (recur (inc i) rest)))))","user":"52ea025ae4b09f7907dd14b5"},{"problem":21,"code":"(fn [things pos] (first (drop pos things)))","user":"5726448ae4b0c5bde472c122"},{"problem":21,"code":"#(loop [lst %1 cnt %2]\n   (if (= 0 cnt)\n     (first lst)\n     (recur (rest lst)\n            (dec cnt))))","user":"53f14389e4b0742d9025b0db"},{"code":"(fn [list n] (last (take (+ 1 n) list)))","problem":21,"user":"53053be9e4b0d8b024fd375b"},{"problem":21,"code":"(fn [s n]\n  (loop [ss s\n         c 0]\n    (if (and (< c n) ss)\n      (recur (rest ss) (inc c))\n      (first ss))))","user":"55afe57ae4b002ce9d5cbc1c"},{"problem":21,"code":"(fn getnth [x y] (get (vec x) y))","user":"5641f0ede4b08d4f616f5f11"},{"problem":21,"code":"(fn nn [se n] \n  (if (= n 0) \n    (first se)\n    (nn (rest se) (dec n))))","user":"5d323149e4b01671435dbce9"},{"problem":21,"code":"(fn [coll index] \n  (if vector? coll)\n  \t(get coll index)\n  \t(last (take (inc index) coll)))","user":"5ed08785e4b016b56eae05b1"},{"code":"(fn [list index] ( (fn [f l i] (f f l i)) (fn [f l i] (if (= i 0) (first l) (f f (rest l) (- i 1)))) list index))","problem":21,"user":"514f6679e4b0b449e54b8df5"},{"code":"(fn [x, y] (first (drop y x)))","problem":21,"user":"4f4b43d5e4b03ad3f0c10c71"},{"code":"(fn pth [x p]\n  (if (= 0 p)\n(first x)\n(pth (rest x) (- p 1))\n))","problem":21,"user":"4fb13cbae4b081705acca277"},{"code":"(fn [coll n] (get (vec coll) n))","problem":21,"user":"4fbcbd50e4b081705acca2f9"},{"problem":21,"code":"#(if (> %2 0) \n   (recur (rest %1) (dec %2))\n   (first %1))","user":"54af6fb0e4b09f271ff37d08"},{"code":"(fn nelement [x n] (if (= n 0) (first x)\n           (nelement (rest x) (- n 1))))","problem":21,"user":"5009902ee4b03d00572d2d6d"},{"code":"(fn [colls nt]\n  (loop [c colls, i nt]\n    (if (= i 0)\n        (first c)\n        (recur (rest c) (dec i))\n    )\n  )\n)","problem":21,"user":"4f4b2bd4e4b03ad3f0c10c6f"},{"code":"(fn my-nth\n  [coll n]\n  (if (= 0 n)\n    (first coll)\n    (my-nth (rest coll) (- n 1))))","problem":21,"user":"50e8422de4b0ebbe794eb7de"},{"problem":21,"code":"(fn [nums, index]\n  (last (take (inc index) nums))\n)","user":"5e316490e4b05b4b01516225"},{"problem":21,"code":"(fn NTH [lis , idx]\n  (if (not= idx 0)\n\n    (let [restOfList (rest lis) ,\n          new_idx (- idx 1)]\n      (-> restOfList (NTH  new_idx) ))\n\n    (first lis)\n\n    )\n  )","user":"5aa11b37e4b0d174b936c840"},{"problem":21,"code":"(fn [A B] (last (take (+ 1 B) A)))","user":"601bdcb3e4b0bf4ca6b10930"},{"problem":21,"code":"(fn nthth [l n] (.get l n))","user":"53cdf5dfe4b00fb29b2212e9"},{"problem":21,"code":"(fn [x, y]\n  (if (= y 0)\n    (first x)\n    (recur (rest x) (dec y))))","user":"589772f7e4b00487982d52be"},{"code":"(fn [s x]  (first (drop x s)))","problem":21,"user":"52810225e4b0757a1b171418"},{"code":"(fn\n  take-nth\n  [coll n]\n    (last (take (+ n 1) coll)))","problem":21,"user":"4eb7b049535d7eef30807377"},{"problem":21,"code":"(fn [l x] (->>  (drop x l)  (first)))","user":"5b4bb061e4b02d533a91bca0"},{"problem":21,"code":"(fn [coll n]\n  (loop [cont n tmp-coll coll]\n    (if (zero? cont)\n      (first tmp-coll)\n      (recur (dec cont) (rest tmp-coll)))))","user":"5aa2b5dbe4b0d174b936c85b"},{"problem":21,"code":"(fn [x n] (if (= n 0)(first x)  (recur (next x) (dec n))))","user":"58dbfb24e4b0a4d5acaab690"},{"code":"(fn nnth [l n](if (= n 0) (first l) (nnth (rest l)(dec n))))","problem":21,"user":"523c61b2e4b07becd5be2220"},{"code":"(fn my-nth\n  ([x pos] (my-nth x pos 0))\n  ([x pos curr]\n    (if (= pos curr)\n      (first x)\n      (recur (rest x) pos (inc curr)))))","problem":21,"user":"4fa82277e4b081705acca1d0"},{"code":"(fn mynth [x y] (if (= y 0) (first x) (mynth (rest x) (- y 1))))","problem":21,"user":"515624efe4b04360f2428e5f"},{"problem":21,"code":"(fn [s n]\n  (loop [coll s k n]\n    (if (= k 0)\n      (first coll)\n      (recur (rest coll) (- k 1)))))","user":"5a3bcdc9e4b001c08efc0cd9"},{"problem":21,"code":"#(first(or (take-last (- (count %1) %2)%1) (list (first %1))))","user":"5f27cc7fe4b033932238a646"},{"problem":21,"code":"(fn nth-element\n  [some-sequence n]\n  (if (= n 0)\n    (first some-sequence)\n    (nth-element (rest some-sequence) (dec n))))","user":"5c9a638fe4b048ec896c5aae"},{"code":"#(first (nthrest % %2))","problem":21,"user":"500ee13be4b00fff93030fa1"},{"code":"(fn element-at-index [the-list,index]\r\n  (if \r\n    (== 0 index)\r\n    (first the-list)\r\n    (recur (rest the-list) (- index 1))\r\n  )\r\n)","problem":21,"user":"4df54fd9535d08e6dec9fe30"},{"problem":21,"code":"(fn my-nth [col i]\n  (loop [x col\n         j 0]\n    (cond\n      (empty? x) nil\n      (= j i) (first x)\n      :else (recur (rest x) (inc j)))))","user":"57644395e4b0994c1922fbf2"},{"code":";#(loop [xs %1 i %2] (if (= i 0) (first xs) (recur (rest xs) (dec i))) )\n#( last (take (inc %2) %1) )","problem":21,"user":"52d2b85ce4b099d49816f0af"},{"problem":21,"code":"(fn [coll idx] (if (zero? idx) (first coll) (recur (rest coll) (dec idx))))","user":"55fe7e15e4b00f4cabc57651"},{"problem":21,"code":"(fn [x,y] (first ((apply comp (repeat y rest)) x)))","user":"59449aa2e4b0b03edd0057ad"},{"code":"(fn [s col]\n  (first (drop col s)))","problem":21,"user":"4ec42c11535dcc7ae8597d5f"},{"code":"(fn [s x](last (take (inc x) s)))","problem":21,"user":"521247b0e4b06aa6d1666ba1"},{"problem":21,"code":"(fn my-nth\n  [s n]\n  (if (<= n 0)\n    (first s)\n    (recur (rest s) (dec n))))","user":"572db6d5e4b0cd1946bd0f78"},{"code":"(fn [s n] \n  (loop [ns s cnt 0]\n    (if (= cnt n)\n        (first ns)\n        (recur (next ns) (inc cnt)))))","problem":21,"user":"4e00af25535d04ed9115e78e"},{"code":"(fn nnth [s n]\n  (loop [c 0 rs s]\n    (if (= n c)\n      (first rs)\n      (recur (+ c 1) (next rs)))))","problem":21,"user":"521bf7cfe4b0c4ef0be83066"},{"problem":21,"code":"#(loop [l (apply list %1) n %2]\n    (if (= n 0)\n      (peek l)\n      (recur (pop l) (- n 1))\n      )\n    )","user":"54b90836e4b0ed20f4ff6e9d"},{"code":"(fn nth-bob\n  [data, n]\n  (if (= 0 n)\n    (first data)\n    (nth-bob (rest data) (- n 1))))","problem":21,"user":"501d0321e4b066e56b9d0b1d"},{"problem":21,"code":"(fn [xs n] \n  (loop [n n xs xs]\n    (if (= n 0)\n      (first xs)\n      (recur (dec n) (rest xs)))))","user":"58c2df0ae4b021aa9917ed17"},{"problem":21,"code":"(fn enth \n  ([coll index]\n   (if (= 0 index)\n    (first coll)\n    (enth coll index 0)))\n  ([coll index pos]\n   (if (= pos index)\n     (first coll)\n     (enth (rest coll) index (+ 1 pos))))\n  )","user":"5b847d39e4b047b03b2037c1"},{"problem":21,"code":"(fn [l n] (loop [r l c n] \n            (if (zero? c) \n              (first r)\n              (recur (rest r) (dec c)))))","user":"5720fc08e4b0c5bde472c0a3"},{"problem":21,"code":"(fn\n  [coll num]\n  (if (zero? num) (first coll) (recur (next coll) (dec num))))","user":"561ca6ebe4b064ca9f4b169c"},{"code":"(fn nt [s n] (if (= 0 n) (first s) (nt (rest s) (- n 1))))","problem":21,"user":"531ba143e4b08068f379ed91"},{"code":"(fn [foo times] \n   ((apply comp (cons first (repeat times rest))) foo))","problem":21,"user":"538b9015e4b0640c7a9a58c4"},{"problem":21,"code":"(fn nth'[aSeq n]\n  (if (= n 0)\n    (first aSeq)\n    (nth' (rest aSeq) (dec n))\n    )\n  )","user":"5ed81965e4b016b56eae05ed"},{"code":"#(loop [xs % t %2] \n       (if (zero? t)\n           (first xs)\n           (recur (rest xs)(- t 1))))","problem":21,"user":"4f3cc2fbe4b0e243712b1f55"},{"code":"(fn get-nth [x y] (if (= 0 y) (first x) (get-nth (rest x) (- y 1) ) ))","problem":21,"user":"51f687c2e4b06ff1c25c52cb"},{"problem":21,"code":"(fn [x y] \n  (get (into [] x) y)\n)","user":"54be9684e4b0ed20f4ff6ef0"},{"problem":21,"code":"#(loop [ns %1 index 0]\n   (if (= index %2)\n     (first ns)\n     (recur (rest ns) (inc index))))","user":"56d63729e4b0ea9b8538f7ca"},{"code":"(fn [s n]\n  (loop [c n r s]\n    (if (= c 0)\n      (first r)\n      (recur (dec c) (rest r)))))","problem":21,"user":"4ef0a38e535dced4c769f20b"},{"problem":21,"code":"(fn [v, n]\n  (loop [tail v]\n    (if (= n (- (count v) (count tail)))\n      (first tail)\n      (recur (rest tail)))))","user":"54dd4121e4b024c67c0cf793"},{"problem":21,"code":"(fn [coll n]\n    (loop [coll coll, n n]\n      (if (= n 0)\n        (first coll)\n        (recur (rest coll) (dec n)))))","user":"5ff64845e4b06df49cee1495"},{"problem":21,"code":"(fn [x n]\n\t(first\n    \t(loop [cnt n result x]\n         \t(if (zero? cnt)\n              result\n            \t(recur (dec cnt) (rest result))))))","user":"58cf8f97e4b03c36ff7e58b7"},{"code":"(fn f [l n]\n  (if (= 0 n)\n    (first l)\n    (f (rest l) (- n 1))\n))","problem":21,"user":"4ff36af7e4b0678c553fc352"},{"problem":21,"code":"(fn [s idx] (if (zero? idx) (first s) (recur (rest s) (dec idx))))","user":"52f25e1be4b05e3f0be25ef8"},{"code":"(fn [seq n]\n  (if (= n 0)\n    (first seq)\n    (recur (rest seq) (dec n))))","problem":21,"user":"4e4ae5aa535dc968683fc4d2"},{"code":"#(first \n    (last \n        (split-at %2 %1)\n     )\n)","problem":21,"user":"4f03e7b5535dcb61093f6b7d"},{"code":"(fn [li n]\n  (if (zero? n) (first li)\n    (recur (rest li) (dec n))))","problem":21,"user":"4ed152d5535d44c135fd68cc"},{"code":"(fn my-nth [s c]\r\n  (if (= 0 c)\r\n    (first s)\r\n    (my-nth (rest s) (dec c))))","problem":21,"user":"4fa719c0e4b081705acca1bf"},{"code":"(fn a [c n] (first (drop n c)))","problem":21,"user":"527a8eb7e4b03e8d9a4a755f"},{"problem":21,"code":"#(loop [i 0 coll %1] (if (= i %2) (first coll) (recur (inc i) (next coll))))","user":"58987ee9e4b00487982d52d2"},{"problem":21,"code":"(fn nth1 [s n] (if (> n 0) (nth1 (next s) (- n 1)) (first s)))","user":"56ef0203e4b04a395b9a0457"},{"problem":21,"code":"(fn [vals idx] (first (drop idx vals)))","user":"5bfaab50e4b0bdcf453d15ce"},{"problem":21,"code":"(fn [seq n]\n  (loop [remaining seq\n         i n]\n    (if (= i 0)\n      (first remaining)\n      (recur (rest remaining) (- i 1)))))","user":"5601cd19e4b04bb52996e197"},{"problem":21,"code":"(fn hop[v n] (if (= n 0) (first v) (hop (rest v) (dec n))))","user":"55d84919e4b0e31453f64ab0"},{"problem":21,"code":"(fn f [l n] (if (> n 0) (f (rest l) (dec n)) (first l)))","user":"54078569e4b0addc1aec66bb"},{"code":"(fn posicao [col pos] (last (take (+ 1 pos) col)))","problem":21,"user":"4e8a0741535d3e98b802328b"},{"code":"#(if (= %2 2) (second (next %1)) (if (= %2 1) (second %1) (first %1)))","problem":21,"user":"506578bae4b0deb87685059b"},{"problem":21,"code":"(fn [items idx] (first (keep-indexed (fn[idx2 item] (when (= idx2 idx) item) ) items)))","user":"5e9c5fa4e4b0157ca96647f9"},{"problem":21,"code":"(fn my-n [coll n]\n  (let [x 0]\n    (if (< x n)\n      (my-n (rest coll) (dec n))\n      (first coll))))","user":"5adbbf89e4b0837691e92bf4"},{"problem":21,"code":"(fn [xs n] (->> xs (take (inc n)) last))","user":"55db2a13e4b0e31453f64ae2"},{"problem":21,"code":"#(cond (= %2 0)          (first %1) \r\n       (< %2 0)          nil\r\n       (> %2 (count %1)) nil\r\n       true              (recur (rest %1) (dec %2)))","user":"579d9601e4b05b1deef9ae18"},{"code":"(fn [coll x]\n  (if (<= x 0)\n    (first coll)\n    (recur (rest coll) (dec x))))","problem":21,"user":"51f00245e4b0249c592fbdfa"},{"code":"(fn  [x y](last (last (map vector (range 0 (+ 1 y)) x))))","problem":21,"user":"4fb42570e4b081705acca2ab"},{"problem":21,"code":"(fn custom-nth\n   [seq index]\n   (loop [seq seq cnt 0]\n     (if (= cnt index)\n       (first seq)\n       (recur (rest seq) (inc cnt)))))","user":"5cfcf4d9e4b0cc9c91588162"},{"code":"(fn [x,y]\n  (get (vec x) y))","problem":21,"user":"4f8b9c7ce4b02e764a0a5180"},{"problem":21,"code":"#(loop [myList %1 position %2] (if(zero? position) (first myList) (recur (next myList) (dec position))))","user":"53f31ad3e4b0742d9025b0ef"},{"problem":21,"code":"(fn [s i] (second (first (filter first (map-indexed (fn [p e] [(= p i) e]) s)))))","user":"56ef0431e4b04a395b9a0458"},{"code":"(fn [sequenc nth_elem]\n  (loop [sequenc sequenc i 0]\n    (if (= i nth_elem)\n      (first sequenc)\n      (recur (rest sequenc) (+ i 1)))))","problem":21,"user":"512f4ed7e4b0762be4c7aad9"},{"code":"(fn [s x] (last (take (+ x 1) s)))","problem":21,"user":"4ddb339c535d02782fcbe9f9"},{"code":"(fn [seq index]\n    (if (= 0 index)\n      (first seq)\n      (recur (rest seq) (- index 1))))","problem":21,"user":"5052f384e4b0a561d07d8f25"},{"code":"(fn seek[lst n]\n        (if (= n 0)\n          (first lst)\n          (seek (rest lst)(- n 1))\n         )\n      )","problem":21,"user":"50e69c7ce4b0140bc92c0a8b"},{"problem":21,"code":"(fn [ilst in] (loop [lst ilst\n                     n in]\n                (if (= n 0)\n                  (first lst)\n                  (recur (rest lst) (- n 1))\n                )\n                )\n  )","user":"5564c2d3e4b0c656e3ff180e"},{"code":"(fn [l,idx] \n  (if (= 0 idx) (first l) \n                (recur (rest l) (- idx 1)\n)))","problem":21,"user":"4fedd2cae4b0198f34b063ba"},{"problem":21,"code":"(fn th-3 [arr n] (if (= n 0) (first arr) (th-3 (rest arr) (- n 1))))","user":"5715349be4b07c98581c3ad2"},{"code":"#(first(drop %2 %1))","problem":21,"user":"4deff9f9535d08e6dec9fe15"},{"problem":21,"code":"(fn me [x,y]    (if (= y 0) (first x) (me (rest x) (- y 1)) ))","user":"55d35a01e4b0e31453f64a63"},{"code":"#(.get % %2)","problem":21,"user":"4ec9d95b535d6d7199dd3701"},{"problem":21,"code":"(fn get-nth\n  [x n]\n  (case n\n    0 (first x)\n    (get-nth (rest x) (- n 1))))","user":"59863a26e4b021a7a535fe87"},{"code":"(fn [seq n] \n    (loop [i 0\n              s seq]\n        (if (= i n)\n            (first s)\n            (recur (+ i 1) (rest s))))\n)","problem":21,"user":"4fdf750be4b05e33b9224f9c"},{"problem":21,"code":"(fn [s n]\n  (loop [i n\n         s s]\n    (cond\n     (= 0 i) (first s)\n     :else (recur (dec i) (rest s)))))","user":"5a616fd2e4b0512ff01cd974"},{"code":"(fn [l index] (if (= index 0) (first l) (recur (rest l) (dec index))))","problem":21,"user":"4ddad2ff535d02782fcbe9f7"},{"problem":21,"code":"(fn\n  [s n]\n  (loop [s s n n]\n    (if (zero? n)\n      (first s)\n      (recur (next s) (dec n)))))","user":"59c4d93fe4b0a024fb6ae507"},{"problem":21,"code":"(fn [coll n] ((apply hash-map (interleave (range (count coll)) coll)) n))","user":"595ecd1fe4b066ee0a44b050"},{"code":"(fn [s n] (get (vec s) n))","problem":21,"user":"4f9aa75ee4b0dcca54ed6d0d"},{"code":"(fn [l idx] ((zipmap (range) l) idx))","problem":21,"user":"4e4c6824535dc968683fc4de"},{"code":"(fn my_nth [x n] (if (zero? n) (first x) (my_nth (rest x) (- n 1))))","problem":21,"user":"51ddcd9ae4b0de53e6370c49"},{"problem":21,"code":"(fn [coll x] (\n              last(\n                              take (inc x) coll)))","user":"589560d8e4b00487982d5281"},{"problem":21,"code":"(fn f [l x] (if (= 0 x)\n              (first l)\n              (f (rest l)\n                  (- x 1))))","user":"57e3ba00e4b0bfb2137f5aa5"},{"code":"#(loop [coll %1 n %2]\n   (if (= n 0)\n     (first coll)\n     (recur (rest coll) (dec n))))","problem":21,"user":"524025bce4b0ad64fa01030f"},{"problem":21,"code":"(fn[list index] ((into {}\n\t\t\t(map-indexed (fn[ix val] [ix val]) list)\n\t\t\t) index))","user":"54f3f51ae4b050824f58f5ce"},{"code":"(fn [seq x]\n  (loop [nseq seq times x]\n    (if (= times 0)\n      (first nseq)\n      (recur (rest nseq) (dec times)))))","problem":21,"user":"4ff5a525e4b0678c553fc36d"},{"problem":21,"code":"(fn r [s pos] \n  (if (= 0 pos)\n    (first s)\n    (r (rest s) (dec pos))))","user":"579c35fee4b05b1deef9ae04"},{"code":"#((apply comp first (repeat %2 rest)) %1)","problem":21,"user":"53523ae0e4b084c2834f4aee"},{"problem":21,"code":"(fn [c n]\n  (if (> n 0)\n    (recur (rest c) (dec n))\n    (first c)))","user":"580bd81ee4b0849f6811b711"},{"problem":21,"code":"(fn foo [coll i] (let [x (first coll) xs (rest coll)] (if (= 0 i) x (foo xs (- i 1)))))","user":"5509bec5e4b06e50f9beb121"},{"problem":21,"code":"(fn [m k] (get (vec m) k))","user":"546a6e9fe4b00cfc9eacc157"},{"problem":21,"code":"(fn[n m] (first (drop m n)))","user":"553093bee4b076ab5578f817"},{"problem":21,"code":"(fn [coll n]\n((apply comp(cons first (repeat n rest))) coll))","user":"5c32ea85e4b0d62ef62d9f3e"},{"problem":21,"code":"(fn  [s n]\n (loop [s s\n        i 0]\n  (if (= i n)\n   (first s)\n   (if-let [ns (next s)]\n    (recur ns (inc i))))))","user":"5b8baa2ce4b0c0b3ffbd49bd"},{"problem":21,"code":"(fn [c n]\n  (if (= n 0)\n    (first c)\n    (recur (rest c) (dec n))))","user":"54c29697e4b045293a27f604"},{"problem":21,"code":"(fn [s n] (last (take (inc n)s)))","user":"5953949be4b066ee0a44aeea"},{"problem":21,"code":"(fn [coll, n] (last (take (inc n) coll)))","user":"606a70a5e4b069485764ddf2"},{"code":"(fn getit [x, n] (if (= n 0) (first x) (getit (rest x) (- n 1))))","problem":21,"user":"504e1c76e4b0f6ff3350c464"},{"problem":21,"code":"(fn thenth\n  [a-seq a-nth]\n  (if (= a-nth 0) (first a-seq)\n    (recur (rest a-seq) (dec a-nth))))","user":"53b6b6c8e4b047364c0444ca"},{"code":"(fn[s n]\n  (if (= 0 n)\n    (first s)\n    (recur (rest s) (dec n))))","problem":21,"user":"4ed24780535d44c135fd68d4"},{"code":"(fn [s n] (first (drop n (take (+ n 1) s)) ) )","problem":21,"user":"52781d94e4b03e8d9a4a751a"},{"problem":21,"code":"(fn [coll n] (loop [count 0\n                    col coll]\n               (if (= count n) (first col)\n                 (recur (inc count)\n                        (rest col)))))","user":"576186a5e4b0994c1922fb8e"},{"problem":21,"code":"(fn [arg\n     n]\n  (if (= n 0)\n    (first arg)\n    (recur (rest arg) (dec n))))","user":"565f8fd2e4b068f2fe63dc41"},{"problem":21,"code":"(fn [col n]\n  (loop [c 0\n        tmp col]\n    (if (= c n)\n      (first tmp)\n      (recur (+ c 1) (next tmp)))))","user":"58e14302e4b005f69f193c78"},{"problem":21,"code":"(fn[s,i](first (drop i s)))","user":"57ee9ffbe4b0bfb2137f5bc2"},{"problem":21,"code":"(fn [ar n] (if (= n 0) (first ar) (recur (rest ar) (- n 1))))","user":"57b6231ae4b0fbc9809a27b7"},{"code":"(fn [x,i] (last (take (+ i 1) x)) )","problem":21,"user":"5165376be4b003cf19fdde49"},{"problem":21,"code":"(fn my-nth [l n] (first (drop n l)))","user":"57c93789e4b05aa3c4741d29"},{"problem":21,"code":"(fn [l n] ((comp first (partial drop n)) l))","user":"5aca79a7e4b0e27600da77e4"},{"code":"(fn [sq n] ((vec sq) n))","problem":21,"user":"5230d9bde4b0035e815da397"},{"problem":21,"code":"(fn [coll index] \n  (if (zero? index)\n      (first coll)\n      (recur (rest coll) (dec index))))","user":"5a516ae1e4b05d388ecb6be8"},{"code":"(fn [list index] \n  (cond\n   (= 0 index) (first list)\n   :else (last (take (inc index) list))))","problem":21,"user":"4f83ae07e4b033992c121c21"},{"problem":21,"code":"(fn [col n]\n  (if (> n 0)\n    (recur (rest col)(dec n))\n    (first col)))","user":"55b1d0b5e4b0da326a65cf73"},{"problem":21,"code":"(fn [l n] (->> l ((partial take (inc n))) last))","user":"55da18d5e4b0e31453f64ad1"},{"problem":21,"code":"(fn [coll n]\n\t(loop [x n\n           col  coll]\n      (if (= 0 x)\n        (first col)\n        (recur (dec x) (rest col)))))","user":"5a1a7db2e4b0ff51aa4b3213"},{"code":"(fn [x pos] (if (= pos 0) (first x) (recur (next x) (- pos 1))))","problem":21,"user":"51ba73c6e4b0fe3ecfb4642f"},{"code":"#(loop [l1 %1\r\n        x  0]\r\n  (if (= x %2)\r\n    (first l1)\r\n    (recur (rest l1) (+ x 1) )))","problem":21,"user":"4e5bdc2b535d8a8b8723a2bb"},{"problem":21,"code":"(fn [s,x] (last (take (inc x) s)))","user":"56cd67c1e4b0ea9b8538f74a"},{"problem":21,"code":"(fn [seq n]\n  \"Returns the Nth element from the sequence\"\n  (loop [s seq pos n]\n    (if (= 0 pos)\n      (first s)\n      (recur (rest s) (dec pos)))))","user":"588f55d2e4b00487982d51a5"},{"problem":21,"code":"( fn niem[x n]\n  ( if (= 0 n)\n   (first x)\n   (niem (rest x) (dec n))))","user":"56faebc2e4b07572ad1a88c8"},{"problem":21,"code":"(fn [s n] (last\n            (take (inc n) s)))","user":"598e7998e4b02b9968b84d34"},{"problem":21,"code":"(fn [a1 a2] (first (drop a2 a1)))","user":"5c50de36e4b0fb8c5ffd99bc"},{"code":"(fn [arr n] (first (take-last 1 (take (+ n 1) arr))))","problem":21,"user":"52f84c94e4b047fd55836fcf"},{"problem":21,"code":"(partial (fn [d l n] (if (< d n) (recur (inc d) (rest l) n) (first l))) 0)","user":"577da4eae4b0c8d87281f6d7"},{"code":"(fn my-nth [c x]\n      (if (= x 0)\n          (first c)\n          (my-nth (rest c) (- x 1))\n      )\n)","problem":21,"user":"4ec17677535dfed6da9c6dad"},{"problem":21,"code":"(fn getLast [x y] (if (= y 0) (first x) (getLast (next x) (- y 1))))","user":"5c4217e2e4b08cd430848ed2"},{"problem":21,"code":"(fn \n  [coll i]\n   (if (= i 0) (first coll) (recur (rest coll) (- i 1))))","user":"567f2bc6e4b0feffd0d18ebb"},{"problem":21,"code":";;(fn [[head & tail] n] (if (> n 0) (recur tail (dec n)) head))\n(fn myfn [x n] (first (reverse (first (partition (inc n) x)))))","user":"53c6a2fde4b00fb29b22129d"},{"problem":21,"code":"#(loop [col %1 idx %2] \n   (if (= idx 0) \n     (first col)\n     (recur (rest col) (dec idx))))","user":"5600591de4b04bb52996e166"},{"code":"(fn [coll n] \n  (if (= n 0) \n    (first coll)\n    (recur (next coll) (- n 1))))","problem":21,"user":"4ec12577535dfed6da9c6da8"},{"code":"#( loop [coll %1\n          cnt %2]\n     (if (= cnt 0)\n       (first coll)\n       (recur (rest coll) (dec cnt))))","problem":21,"user":"538e5b3fe4b0b51d73faae84"},{"code":"(fn [l n]\n  (if (zero? n) (first l)\n    (recur (rest l) (dec n))))","problem":21,"user":"4eca2cea535d6d7199dd3702"},{"code":"(fn [coll n] \r\n  ((apply comp (cons first (repeat n rest))) coll))","problem":21,"user":"4dd30b20535dae65d5c462db"},{"code":"(let [f (fn [c i] \n  (if (= i 0) (first c) (recur (rest c) (- i 1))))]\nf)","problem":21,"user":"4fb6db08e4b081705acca2cc"},{"problem":21,"code":"(fn [sequence position]\n  (if (= position 0)\n    (first sequence)\n    (recur (rest sequence) (dec position))))","user":"59933537e4b0b211ea3aaaaf"},{"code":"(fn mynth [x c] (if-not (= 0 c) (mynth (rest x) (dec c)) (first x)))","problem":21,"user":"50f3c46ae4b041536e2eca3b"},{"code":"(fn [coll index]\n  (if (= index 0)\n    (first coll)\n    (recur (rest coll) (dec index))))","problem":21,"user":"4ea348ad535d7eef308072c4"},{"problem":21,"code":"(fn [xs i]\n  (loop [tail xs cntr 0]\n    (if (> i cntr)\n      (recur (rest tail) (inc cntr))\n      (first tail))))","user":"58327a08e4b089d5ab817c7c"},{"code":"(fn [coll n]\n  (if (= n 0)\n      (first coll)\n      (recur (next coll) (- n 1))\n  )\n)","problem":21,"user":"4f03154a535dcb61093f6a58"},{"problem":21,"code":"(fn [l n]\n  (loop [c n t l]\n    (if (zero? c)\n      (first t)\n      (recur (dec c) (rest t))\n    )\n  )\n)","user":"55ead489e4b0121d4835fdb6"},{"problem":21,"code":"#((comp last take) (inc %2) %1)","user":"56dc5f89e4b0ea9b8538f81e"},{"problem":21,"code":"(fn [n x]\n  (last (take (inc x) n)))","user":"5e3c71e8e4b01d43a70e8e08"},{"problem":21,"code":"(fn zz [x i]\n  (if (= 0 i) (first x)\n    (zz (rest x) (dec i))))","user":"5d2b88a6e4b01671435dbc84"},{"code":"(fn [coll n]\n  (first (nthnext coll n)))","problem":21,"user":"4e6a926e535d8ccf87e9fef6"},{"problem":21,"code":"(fn nth-elem [x n]\n  ;; Restituisce l'ennesimo elemento\n  (loop [list x cnt 0]\n    (if (= cnt n)\n      (first list)\n      (recur (rest list) (inc cnt)))))","user":"558869ade4b059ccff29b1f7"},{"code":"(fn [c n]\r\n  (if (= 0 n)\r\n    (first c)\r\n    (recur (rest c) (dec n))))","problem":21,"user":"4e111538535d04ed9115e7c3"},{"problem":21,"code":"(fn nth2\n  [a n]\n  (loop [itr 0 l a]\n    (if (= itr n)\n      (first l)\n      (recur (inc itr) (rest l)))))","user":"5d123c75e4b02c15ef021997"},{"problem":21,"code":"(fn [lst n]\n  (loop [i n\n         rem lst]\n    (if (= i 0)\n      (first rem)\n      (recur (dec i) (rest rem))\n      )\n    )\n  )","user":"56804d03e4b0966858e4d8ec"},{"problem":21,"code":"(fn [sq n]\n  (if (> (inc n) (count sq)) nil\n  (loop [idx 0\n         sq sq]\n    (if (= idx n)\n      (first sq)\n      (recur (inc idx) (rest sq))\n    )\n  )\n    )\n  )","user":"5a388675e4b001c08efc0ca2"},{"problem":21,"code":"(fn [xs n]\n  (when (seq xs)\n    (if (== 0 n)\n      (first xs)\n      (recur (rest xs) (dec n)) )))","user":"57d50c05e4b0bd073c2023a8"},{"problem":21,"code":"#(first \n  (reverse \n   (take \n    (+ %2 1)\n    %1)))","user":"57936970e4b0e215f87e8458"},{"code":"#(get (into {} (map-indexed vector %1)) %2)","problem":21,"user":"504e1abee4b0f6ff3350c45d"},{"problem":21,"code":"(fn [coll index]\n  (cond\n    (empty? coll) nil ;; early exit for indexes bigger than seq\n    (> index 0) (recur (rest coll) (- index 1))\n    (= index 0) (first coll)\n    :else nil))","user":"58ed0198e4b056aecfd47d72"},{"problem":21,"code":"(fn [in-seq n]\n  (loop [cnt n tmp-seq in-seq]\n        (if (zero? cnt)\n            (first tmp-seq)\n          (recur (dec cnt) (rest tmp-seq))\n          )\n        )\n  )","user":"57b9d21fe4b0fbc9809a27f7"},{"problem":21,"code":"(fn my-nth [seq n]\n  (if (zero? n)\n    (first seq)\n    (my-nth (rest seq)\n            (dec n))))","user":"54c4399ae4b045293a27f616"},{"problem":21,"code":"(fn [coll n]\n  (get (vec (lazy-seq coll)) n))","user":"567a3112e4b05957ce8c6196"},{"problem":21,"code":"(fn [user-sequence n] (first(drop n user-sequence)))","user":"5cd33e1ce4b0ccb06196290a"},{"problem":21,"code":"(fn [coll ele]\n\t(loop [i ele col coll]\n      (if-not (> i 0)\n        (first col)\n      \t(recur (dec i) (rest col))\n      )\n    )\n)","user":"593eaadde4b069cdc2982bc2"},{"problem":21,"code":"(fn [coll pos]\n  (loop [current 0 r coll]\n    (if (= pos current)\n      (first r)\n      (recur (inc current)(next r)))))","user":"58dfce9fe4b0a4d5acaab723"},{"problem":21,"code":"(fn [sequ ind]\n  (get (into [] sequ) ind))","user":"54cbd6bae4b057c6fda3a282"},{"problem":21,"code":"(fn listas [lista index]\n\t(loop [cnt index itr-list lista]\n  \t\t(if (zero? cnt)\n          (first itr-list)\n          (recur (dec cnt) (rest itr-list)))))","user":"5bc64843e4b07a9b28b10091"},{"code":"(fn [x i] (if (= i 0) (first x) (recur (next x) (dec i))))","problem":21,"user":"519be011e4b0a1d87b00344e"},{"code":"(fn rf [coll n] (if (> n 0) \n                  (rf (rest coll) (- n 1))\n                  (first coll)))","problem":21,"user":"5321008ee4b09d4e7a9b54aa"},{"code":"#(if (= 0 %2)\n   (first %)\n   (recur (rest %) (- %2 1)))","problem":21,"user":"51105c7fe4b04c71fce993ef"},{"code":"(fn [l n] (if (zero? n)\n(first l)\n(recur (rest l) (dec n))))","problem":21,"user":"4f2fa32ce4b0d6649770a070"},{"problem":21,"code":"(fn [list x]\n  (get (vec list) x))","user":"5756e218e4b02ea1147992e5"},{"problem":21,"code":"(fn nn [l n] \n  (if (= n 0) (first l)\n     (nn (rest l) (- n 1))\n   ) \n)","user":"543cf826e4b032a45b869345"},{"problem":21,"code":"(fn [xs n] (if (< n 1) (first xs) (recur (rest xs) (- n 1))))","user":"53ab1ef6e4b047364c04444b"},{"code":"(fn [x idx] ((vec x) idx))","problem":21,"user":"5130ef01e4b07b22f541297e"},{"code":"(fn [numbers n] (first (drop n numbers)))","problem":21,"user":"533a7427e4b0e30313ee6cbb"},{"problem":21,"code":"(fn [x n] \n  (if (= n 0)\n    (first x)\n  \t(loop [v x\n           c n] \n    \t(if (= c 0) \n      \t(first v) \n      \t(recur (rest v) (- c 1))))))","user":"54ba8076e4b0ed20f4ff6eb5"},{"code":"(fn nelem [a n] (if (= n 0) (first a) (nelem (rest a) (- n 1))))","problem":21,"user":"52586dc4e4b0cb4875a45cb1"},{"code":"#(loop [coll %1 i %2]  (if(= i 0) \n     (first coll) \n     (recur (rest coll) (- i 1))))","problem":21,"user":"4fe868d1e4b07c9f6fd12c3f"},{"code":"(fn [a b]\n  (loop [list a i 0]\n    (if (= i b)\n      (first list)\n      (recur (rest list) (inc i)))))","problem":21,"user":"50a9591fe4b07e35d68b27b0"},{"problem":21,"code":"(fn [l c] (if (= c 0) (first l) (recur (rest l) (dec c))))","user":"56347285e4b0bfe05bf117bc"},{"code":"(fn enesimo [s n]                                                                                                                                  \n  (if (= n 0)                                                                                                                                      \n    (first s)                                                                                                                                      \n    (enesimo (rest s) (dec n ))))","problem":21,"user":"4eea5823535d93acb0a6689d"},{"problem":21,"code":"(fn \n  [col x]\n\t(loop [c col i x]\n\t\t   (if (<= i 0)\n\t\t   \t(first c)\n\t\t   \t(recur (rest c) (dec i)))))","user":"590620e1e4b047aa04b1992c"},{"code":"(fn [coll n] (first (nthnext coll n)))","problem":21,"user":"4e63957b535d8ccf87e9fe65"},{"problem":21,"code":"(fn kek [col n]\n  (if (zero? n)\n    (first col)\n  \t(kek (rest col) (- n 1))))","user":"5d132412e4b02c15ef0219a6"},{"code":"#(first             (drop %2 %1))","problem":21,"user":"5194ea33e4b05be8c43d2383"},{"code":"(fn mynth [l n]\r\n    (if (= 0 n) (first l)\r\n(recur (rest l) (- n 1))))","problem":21,"user":"4dda2c1b535d02782fcbe9ef"},{"code":"(fn [sequence position]\n  (if (> position 0)\n    (recur (rest sequence) (dec position))\n    (first sequence)\n  )\n)","problem":21,"user":"50ac6061e4b071b89ef2622e"},{"problem":21,"code":"(fn f [s x] (first (drop x s)))","user":"553b90c8e4b09218d5f45005"},{"problem":21,"code":"(fn n-th [ls n]\n  (if (zero? n)\n    (first ls)\n    (n-th (rest ls) (dec n))))","user":"55f43228e4b06e875b46ce67"},{"problem":21,"code":"(fn [xs x]\n  \n  (first (drop x xs))\n  )","user":"57513f88e4b02ea114799283"},{"code":"(fn getEl[sequence index] (if(= index 0)(first sequence) (getEl (rest sequence) (dec index))))","problem":21,"user":"5179a5a2e4b0684c1c981a4f"},{"code":"(fn [init n]\n  (loop [index 0 elems init]\n    (if (< index n)\n        (recur (+ index 1) (rest elems))\n        (first elems))))","problem":21,"user":"4fb125f1e4b081705acca274"},{"problem":21,"code":"#(first \n\t(loop [v %1, i 0]\n\t\t(if (>= i %2)\n\t\t\tv\n\t\t\t(recur (rest v) (inc i))))\n\t)","user":"568cea39e4b0dcc4269f40bc"},{"code":"(fn teste [coll num]\r\n    (loop [c coll n num]\r\n    (if (pos? n)\r\n      (recur (next c) (dec n))\r\n     (first c))))","problem":21,"user":"4df0f863535d08e6dec9fe19"},{"code":"#(if (zero? %2) (first %1) (recur (rest %1) (dec %2)))","problem":21,"user":"4e521cef535d302ef430da6d"},{"problem":21,"code":"(fn [coll i] \n  (loop [coll coll\n         i    i   ]\n    (if (= 0 i)\n      (first coll)\n      (recur (rest coll) (dec i)))))","user":"4fe8b09ee4b07c9f6fd12c6f"},{"problem":21,"code":"(fn [coll i] (first (keep-indexed (fn [index item] (when (= index i) item)) coll)))","user":"55e558e3e4b050e68259b46b"},{"problem":21,"code":"(fn fnth [xs n] \n  (if (= n 0)\n    (first xs)\n    (fnth (rest xs) (dec n))\n  )\n)","user":"5d67bfe6e4b0db5d338d15f6"},{"code":"(fn xth [s x] \n  (if (zero? x) (first s) (xth (rest s) (dec x))))","problem":21,"user":"4ef0eaef535dced4c769f211"},{"code":"(fn [a-seq n]\n  (if (zero? n)\n   (first a-seq)\n   (recur (rest a-seq) (- n 1))))","problem":21,"user":"52f01bfbe4b05e3f0be25ed9"},{"code":"(fn foo [coll n] (if (= n 0) (first coll) (foo (rest coll) (dec n))))","problem":21,"user":"53629381e4b0243289761e54"},{"code":"(fn [list- num-] (last (take (+ num- 1) list-)))","problem":21,"user":"52a69e06e4b0c58976d9ac04"},{"code":"(fn [col n] (loop [c col i n] (if (= i 0) (first c) (recur (rest c) (dec i)))))","problem":21,"user":"513cb853e4b0b86ece9f322b"},{"problem":21,"code":"(fn n [s, i]\n  (if (= i 0)\n    (first s)\n    (n (rest s) (- i 1))))","user":"59ae1ebae4b0e1f4e384c89a"},{"problem":21,"code":"(fn [lista szam] (first (drop szam lista)))","user":"57b1a72fe4b0fbc9809a2755"},{"problem":21,"code":"#(loop [x %1 y %2] (if (zero? y) (first x) (recur (drop 1 x) (dec y))))","user":"5dddc292e4b0948ae9d9adcb"},{"code":"(fn [l n] \n  (loop [list l count 0]\n    (if (= count n)\n      (first list)\n      (recur (rest list) (inc count)))))","problem":21,"user":"4f036c50535dcb61093f6aba"},{"code":"(fn [x, y] (.get x y))","problem":21,"user":"4fe183a0e4b0dd6cd5ce3635"},{"code":"(fn [l n]\n  (loop [i 0 n n l l]\n    (cond \n      (= i n) (first l)\n      :else (recur (+ i 1) n (rest l)))))","problem":21,"user":"4f0e0aee535d0136e6c22320"},{"problem":21,"code":"(fn myf [lista n]\n  (if (= 0 n) (first lista) (myf (rest lista) (- n 1))\n ))","user":"543d5c61e4b032a45b86934d"},{"problem":21,"code":"(fn [a-seq n]\n  (if (zero? n) (first a-seq)\n    (recur (rest a-seq) (dec n))))","user":"5550c6e0e4b00713264bd9af"},{"code":"(fn [cs n] (last (take (+ n 1) cs)))","problem":21,"user":"50a473f7e4b08bbd0eb4ed37"},{"problem":21,"code":"#(last (take (+ %2  1) %1))","user":"5d45bd1de4b07c84aa5ae6a4"},{"problem":21,"code":"(fn nth-element [coll idx]\n  (get (vec coll) idx))","user":"552bd5c2e4b0ffed3738f969"},{"code":"(fn [coll i] (first (last (take (+ i 1) (iterate next coll)))))","problem":21,"user":"524f4256e4b0541d1855b808"},{"code":"(fn nth_element [coll n]\n  (if (= n 0)\n    (first coll)\n    (nth_element (rest coll) (- n 1))))","problem":21,"user":"4fd24729e4b04c3a95aa041e"},{"code":"(fn getter [x n] \n  (if (= n 0) \n    (first x)\n    (recur (rest x) (- n 1))\n  )\n)","problem":21,"user":"4e51fccf535d302ef430da6b"},{"code":"(fn m [l n] \n  (if (= n 0) \n    (first l)\n    (m (rest l) (- n 1))))","problem":21,"user":"51c9c6cde4b09ce160bef5b1"},{"code":"(fn my-count [coll idx]\n  (loop [coll coll acc 0]\n    (if (= acc idx)\n      (first coll)\n      (recur (rest coll) (inc acc)))))","problem":21,"user":"4fd769a1e4b0dab7d829f382"},{"problem":21,"code":"(fn [coll n]\n  (loop [remaining-coll coll\n        counter 0]\n    (if (= counter n)\n      (first remaining-coll)\n      (recur (rest remaining-coll) (inc counter)))))","user":"56e48302e4b03a7c14b85a4e"},{"problem":21,"code":"(fn f  [x n](\n         if (= n 0) (first x) ( f (rest x) (dec n))\n        )\n)","user":"55bc5280e4b01b9910ae29f1"},{"code":"(fn getnth [elts pos]\n  (loop [cur elts i pos]\n  ;;(println \"Current is: \" cur \"i is:\" i)\n  (if (= i 0)\n      (first cur)\n      (recur (rest cur) (- i 1)))))","problem":21,"user":"50fd9fd4e4b033b9c38d78d0"},{"problem":21,"code":"(fn el-at-index [a-set an-index] (if (< an-index 0) nil (if (= an-index 0) (first a-set) (el-at-index (rest a-set) (dec an-index)))))","user":"545188ebe4b0e397800069b2"},{"problem":21,"code":"(fn [list idx]\n  (loop [i idx l list]\n     (if (zero? i)\n       (first l)\n       (recur (dec i) (rest l)\n       ))))","user":"5c808cafe4b0c8042a70ce18"},{"problem":21,"code":"(fn [x index]\n  (loop [i index coll x]\n    (if (= i 0) \n      (first coll)\n      (recur (dec i) (rest coll)))))","user":"5bc7c3aee4b07a9b28b100b2"},{"problem":21,"code":"(fn [coll, pos](last (take (inc pos) coll)))","user":"572c312be4b0cd1946bd0f4d"},{"code":"(fn [l x]\n  (if (= x 0)\n    (first l)\n    (recur (rest l) (dec x))))","problem":21,"user":"4ec5d40d535d6d7199dd36b9"},{"code":"(fn Nth [collection index]\n          (if (= index 0)\n           (first collection)\n           (Nth (rest collection) (- index 1))))","problem":21,"user":"51841e0ae4b02826a645f396"},{"problem":21,"code":"(fn [l n]\n  (if (= n 0)\n       (first l)\n       (recur (rest l) (dec n))))","user":"57150a8ee4b07c98581c3acb"},{"code":"(fn [coll x]\n  (first (last (split-at x coll))))","problem":21,"user":"4ff695f8e4b0678c553fc380"},{"problem":21,"code":"(fn extractN [l n] (if (= n 0) (first l) (extractN (rest l) (- n 1))))","user":"5626447fe4b00e49c7cb47bd"},{"code":"#((vec %1) %2)\n;; (fn [coll index] (get (vec coll) index ))","problem":21,"user":"513d09cbe4b0b86ece9f322e"},{"problem":21,"code":"(fn [input-list n]\n        (loop [cnt n tmp-list input-list]\n              (if (zero? cnt)\n                  (first tmp-list)\n                (recur (dec cnt) (rest tmp-list)))))","user":"574f3cd9e4b02ea114799259"},{"problem":21,"code":"(fn [ls n]\n  (loop [f (first ls)\n         r (rest ls)\n         idx 0]\n    (if (= n idx)\n      f\n      (recur (first r) (rest r) (inc idx)))))","user":"54d492dbe4b0a52adc2e2001"},{"code":"(fn [x n] (last (take (+ 1 n) x)) )","problem":21,"user":"4eb2c45e535d7eef3080734d"},{"code":"(fn nth-elem [elems n] (last (take (inc n) elems)))","problem":21,"user":"53063e94e4b02e8216869790"},{"code":"(fn [l, n] (last (take (inc n) l)))","problem":21,"user":"52b6b5a7e4b0c58976d9ad4b"},{"code":"(fn[y x](first(nthnext y x)))","problem":21,"user":"4eba5adb535dfed6da9c6d63"},{"problem":21,"code":"(fn [x n]\n    (loop [cnt n acc x]\n       (if (zero? cnt)\n            (first acc)\n          (recur (dec cnt) (rest acc)))))","user":"57cef3f8e4b0c746388ab8b4"},{"problem":21,"code":"(fn getN\n  [values n]\n  (if (= 0 n) (first values) (getN (rest values) (dec n))))","user":"5f003099e4b0cf489e8d7f17"},{"code":"(fn [ls N]\n  ((fn [i s]\n    (if (zero? i) \n        (first s) \n        (recur (- i 1) (rest s)))) N ls))","problem":21,"user":"4ee9c8d0535d93acb0a66892"},{"problem":21,"code":"(fn [ l b ] (first (drop b l)))","user":"54b8dfece4b0ed20f4ff6e9a"},{"problem":21,"code":"(fn nthelement [x n] (first (drop n x)))","user":"5afdb2bae4b0cc2b61a3bd1f"},{"problem":21,"code":"(fn [sqnce index]\n  (if (= index 0)\n    (first sqnce)\n    (recur (rest sqnce) (dec index))))","user":"5f2aa09ce4b033932238a655"},{"problem":21,"code":"(fn [lst idx] (loop [l lst i idx] (if (= i 0) (first l) (recur (rest l) (dec i)))))","user":"54e18de4e4b024c67c0cf7c4"},{"problem":21,"code":"(fn [coll n]\n  (loop [c coll count 0]\n    (if (= count n)\n      (first c)\n      (recur (next c) (inc count)))))","user":"576c0febe4b07c67f59d1fb8"},{"problem":21,"code":"(fn [se a] (.get se a))","user":"5450ea1be4b0e397800069a6"},{"code":"(fn lp\n  [li acc]\n  (if (= acc 0)\n    (first li)\n    (lp (rest li) (- acc 1))))","problem":21,"user":"51bb970be4b0fe3ecfb4644e"},{"problem":21,"code":"(fn my-nth [col n] (((fn build-map [ind col mymap] (if (empty? col) mymap (recur (inc ind) (rest col) (assoc mymap ind (first col))))) 0 col {} ) n))","user":"5a09f35fe4b0eab8c0448934"},{"code":"#( (vec %1) %2 )","problem":21,"user":"4ec5b713535d6d7199dd36b2"},{"problem":21,"code":"(fn [list idx] ((apply merge-with concat (map-indexed (fn [id it] {id it}) list)) idx))","user":"54ec7f52e4b024c67c0cf853"},{"code":"(fn anon [x n]\n  (if (= n 0) (first x) (anon (rest x) (- n 1))))","problem":21,"user":"503cc8cae4b06c4e0e1fa251"},{"problem":21,"code":"(fn [s x] (->> s (drop x) (first)))","user":"5a04e923e4b01bb0ae8afda9"},{"code":"(fn xnth [x i]\n  (if (= i 0)\n    (first x)\n    (xnth (rest x) (dec i))))","problem":21,"user":"526143b7e4b03e8d9a4a705a"},{"code":"(fn [sq nt] (get (into {} (map-indexed vector sq)) nt))","problem":21,"user":"53749685e4b06d7f452d9e23"},{"problem":21,"code":"#(loop [c 0\n        s %1]\n   (if (= c %2)\n     (first s)\n     (recur (inc c) (rest s))))","user":"57c94c54e4b05aa3c4741d2c"},{"code":"(fn [sq nt]\n  (get (vec sq) nt))","problem":21,"user":"4f840766e4b033992c121c27"},{"problem":21,"code":"(fn [x, index] (if \n                 (= index 0) \n                 (first x) \n                 (recur (rest x) (- index 1)) \n                )\n  )","user":"5cd1fd2fe4b0ccb0619628f8"},{"code":"(fn a [b c]\n  (if (= 0 c)\n    (first b)\n    (a (rest b) (dec c))))","problem":21,"user":"52c45ac8e4b0c2d177d620d9"},{"problem":21,"code":"(fn [x1 x2] ((comp first reverse) (take (+ 1 x2) x1)))","user":"55c917a1e4b0e31453f649e9"},{"code":"(fn [e, n] (first (second (split-at n e))))","problem":21,"user":"4e521d7a535d302ef430da6e"},{"problem":21,"code":"(fn [l nr] (first(drop nr l)))","user":"564502afe4b0284900eef5ff"},{"code":"#(cond (= %2 0) (first %1)\n       :else (recur (rest %1) (dec %2)))","problem":21,"user":"53864493e4b06839e8705f10"},{"problem":21,"code":"(fn [coll, x] (get (vec coll) x))","user":"5d2a095fe4b01671435dbc70"},{"problem":21,"code":"(fn mynth [xs n] (if (= n 0) (first xs) (mynth (rest xs) (- n 1))))","user":"57f675c2e4b0d3187e9008e5"},{"problem":21,"code":"(fn [coll x] (last(take (+ x 1)(seq coll))))","user":"5ad45057e4b0ea6055cfabd3"},{"code":"(fn[sq pos] (first (nthrest sq pos)) )","problem":21,"user":"5148d47ee4b05514c84b7cca"},{"problem":21,"code":"(fn get-nth [input nth-element]\n  (loop [values input\n         current-index (int 0)]\n    (if (= current-index nth-element)\n      (first values)\n      (recur (rest values) (inc current-index)))))","user":"577ad824e4b0d3393e5deb08"},{"problem":21,"code":"(fn [col N] (get (vec col) N))","user":"55efc6d5e4b066087aa9453f"},{"problem":21,"code":"(fn [coll x]\n  (loop [cnt x \n         xs coll]\n    (if (= cnt 0)\n      (first xs)\n      (recur (- cnt 1) (rest xs)))))","user":"4e6a676b535d8ccf87e9fedd"},{"code":"(fn [l n] \n  (first (drop n l)))","problem":21,"user":"4f7b6b90e4b06e829148e1a4"},{"code":"(fn [x n] (last (drop-last (- (count x) (+ n 1)) x)))","problem":21,"user":"4dd1de4d535dae65d5c462d7"},{"problem":21,"code":"#( first ( drop %2 %1 ) )","user":"57681134e4b0a07e8fc180cb"},{"code":"(fn giventh [l n]\n  (if (empty? l) \n    nil\n    (if(zero? n) \n      (first l)\n      (recur (rest l) (dec n)))))","problem":21,"user":"531cbf46e4b08068f379eda6"},{"code":"(fn enth [l n]\n  (if (= n 0)\n  (first l)\n  (enth (rest l) (- n 1))\n))","problem":21,"user":"4fcebce4e4b03432b189f404"},{"problem":21,"code":"(fn [s n]\n  (loop [iteration 0\n         first-el (first s)\n         the-rest (rest s)]\n    (if (= iteration n)\n      first-el\n      (recur (inc iteration) (first the-rest) (rest the-rest)))))","user":"58f273d9e4b08e1cf3471d01"},{"code":"#(first (last (take (inc %2) (iterate rest %1))))","problem":21,"user":"4fe9efe5e4b0547ebccb247a"},{"code":"(fn my-nth [x n] (if (= n 0) (first x) (my-nth (rest x) (- n 1))))","problem":21,"user":"51ad0ab8e4b09397d510977b"},{"code":"(fn nelem [l n]\n  (if (= n 0)\n      (first l)\n      (nelem (rest l) (- n 1))))","problem":21,"user":"505024a4e4b0a02f9cffdeb4"},{"problem":21,"code":"(fn mnth [list n]\n  (if (= n 0)\n    (first list)\n    (mnth (rest list) (- n 1))))","user":"55330d7fe4b09218d5f44f88"},{"problem":21,"code":"(fn [s n]\n  (loop [i n\n         ss s]     \n    (if (= i 0) (first ss)\n      (recur (- i 1) (rest ss))\n    )\t\n  ))","user":"5c272f82e4b07e362c2305cb"},{"problem":21,"code":"(fn [stuff n] (first (drop n stuff)))","user":"56009544e4b04bb52996e16c"},{"problem":21,"code":"#(loop[n %2 a %1]  (if (= n 0) (first a) (recur (dec n) (rest a))))","user":"5a972643e4b0d174b936c778"},{"problem":21,"code":"(fn xth [xs n] \n  (if (= 0 n)\n    (first xs)\n    (xth (rest xs) (dec n))))","user":"540961e9e4b0addc1aec66db"},{"code":"#((comp first last) (take (+ %2 1) (iterate next %)))","problem":21,"user":"52ab5b03e4b0c58976d9ac74"},{"code":"(fn nth' [xs n]\n  (if (zero? n)\n    (first xs)\n    (nth' (rest xs) (dec n))))","problem":21,"user":"51811d5ee4b06547fbae113c"},{"code":"(fn [vector n] (last (take (inc n) vector)))","problem":21,"user":"4f47d84fe4b0d56e7bb92bc3"},{"code":"(fn [s c] (first (nthnext s c)))","problem":21,"user":"502bb7c0e4b0194ad32ea1a3"},{"problem":21,"code":"(fn avant-dernier [x y] (first(drop y x)))","user":"5aa81536e4b0d174b936c8c3"},{"problem":21,"code":"(fn [xs n]\n  \t(loop [acc xs n n]\n  \t(if (= n 0)\n      (first acc)\n      (recur (rest acc) (dec n))\n      )))","user":"5996b419e4b07157cc8daab5"},{"problem":21,"code":"(fn nth-element [list index]\n  (first (drop index list)))","user":"5a593521e4b05d388ecb6c93"},{"code":"(fn Nth [seq pos] (cond (= pos 0) (first seq) true (Nth (rest seq) (dec pos))))","problem":21,"user":"51df825de4b01188f062752b"},{"problem":21,"code":"(fn [coll n]\n      (loop [x (first coll)\n             xs (rest coll)\n             n n]\n        (cond\n          (= n 0) x\n          (empty? xs) nil\n          :else (recur (first xs) (rest xs) (dec n)))))","user":"56e11125e4b03a7c14b85a1f"},{"problem":21,"code":"(fn [x, n]\n  (loop [listx x i 0]\n    (if (= i n)\n      (first listx)\n      (recur (rest listx) (inc i))\n      )\n    )\n  )","user":"579e75fbe4b05b1deef9ae29"},{"problem":21,"code":"(fn [sq n] (if (zero? n) (first sq) (recur (rest sq) (dec n))))","user":"5e6ff368e4b04a83ad7cd2a8"},{"problem":21,"code":"#(loop [seq %1 n %2 i 0]\n   (if (= i n)\n     (first seq)\n     (recur (rest seq) n (+ i 1))\n     ))","user":"5a80b934e4b00b71e582a05b"},{"problem":21,"code":"(fn el [l n]\n  (if (<= n 0) (first l)\n   (el (rest l) (dec n))))","user":"59663e77e4b069c0a1a1979f"},{"code":"#((fn nt[n, l, targ]\n  (if (= n targ)\n    (first l)\n    (nt (+ n 1) (rest l) targ)\n    )\n   ) 0 %1 %2)","problem":21,"user":"520aaac2e4b01da9d47a99e6"},{"problem":21,"code":"(fn [arr idx] (loop [a arr cnt 0] (if (= idx cnt) (first a) (recur (rest a) (inc cnt)))))","user":"5ce62d8ee4b0a17bb84e2b83"},{"problem":21,"code":"(fn mynth [x n]\n      (if (<= n 0)\n        (first x)\n        (mynth (rest x) (dec n))))","user":"54bd9a60e4b0ed20f4ff6ee3"},{"problem":21,"code":"(fn my-last [l n]\n   (if (= 0 n)\n     (first l)\n     (my-last (rest l) (- n 1))))","user":"551c6bcee4b07993ea3788df"},{"code":"(fn [x y] (first (drop y x)))","problem":21,"user":"4e52654b535d302ef430da73"},{"problem":21,"code":"(fn [s n]\n  (if (= n 0)\n     (first s)\n     (recur (rest s) (dec n))))","user":"516e3626e4b0284f4b26df81"},{"code":"(fn enth [the-seq the-num]\n  (first (drop the-num the-seq)))","problem":21,"user":"52b66d98e4b0c58976d9ad46"},{"code":"(fn [x y] (last (take(inc y) x)))","problem":21,"user":"4e6e5c9e535d5021c1a89608"},{"problem":21,"code":"#(last (take (inc %2) %1))\n\n;OR: #(first (drop %2 %1))","user":"56041883e4b0c80df0ca2655"},{"code":"(fn [a n] (first (nthrest a n)))","problem":21,"user":"516cbba6e4b06f078fab2525"},{"code":"(fn [xs n] \n  (if (zero? n) (first xs)\n      (recur (rest xs) (dec n))))","problem":21,"user":"4edcbe92535d10e5ff6f5325"},{"problem":21,"code":"(fn retn [l x] (if (= x 0) (first l) (retn (rest l) (- x 1))))","user":"56e9d3e6e4b04a395b9a03fd"},{"problem":21,"code":"(fn iter [coll n]\n    (if (= n 0)\n      (first coll)\n      (iter (rest coll) (dec n))))","user":"5e1ca847e4b0dc9594008539"},{"problem":21,"code":"(fn my-nth [ls n]\n  (cond\n   (zero? n) (first ls)\n   :else (my-nth (rest ls) (- n 1))))","user":"59e763c9e4b0249b72820713"},{"problem":21,"code":"(fn f [ls n]\n  (if (> n 0) (f (rest ls) (- n 1)) (first ls)))","user":"5f3ca097e4b004f08c61c546"},{"code":"(fn my-nth\n  [some-list n]\n  (first (drop n some-list)))","problem":21,"user":"51af4cf6e4b0c53cf2e68a4c"},{"code":"(fn [seq n] \n    (last \n        (map (fn [a b] a) seq (range 0 (+ n 1)))\n    )\n)","problem":21,"user":"5268eb68e4b03e8d9a4a71c6"},{"problem":21,"code":"(fn nth-item-fn\n  [coll item-idx]\n  ((vec coll) item-idx))\n\n;; altough the version using recursivity seems that internally uses [nth] function...\n#_(fn nth-item-fn-1\n  [coll idx]\n  (loop [[head & tail] coll\n         pos 0]\n    (if (= pos idx)\n      head\n      (recur tail (inc pos)))))","user":"5553b729e4b0deb715856e05"},{"code":"(fn [col idx] (last (take (+ idx 1) col)))","problem":21,"user":"4ee177dc535d10e5ff6f5359"},{"code":"#(loop [l %1 i %2] (if (> i 0) (recur (rest l) (dec i)) (first l)))","problem":21,"user":"51d18c47e4b0cfcf579466c1"},{"code":"(fn aaa [x n] (if (zero? n) (first x) (aaa (rest x) (dec n))))","problem":21,"user":"50aa8776e4b056ee01935867"},{"problem":21,"code":"(fn\n  [s n]\n  (if (= 0 n)\n    (first s)\n    (recur (next s) (dec n))))","user":"5461dc79e4b01be26fd746a8"},{"problem":21,"code":"(fn mynth\n  [s n]\n  (if (= n 0)\n    (first s)\n    (recur (rest s) (dec n))))","user":"589ce536e4b00487982d5370"},{"problem":21,"code":"#(loop [coll %1, va %2]\n      (if (= va 0)\n        (first coll)\n        (recur (rest coll) (dec va))\n        ))","user":"56306e6ce4b073c1cf7a9be7"},{"code":"(fn [coll n]\n  (if(zero? n)\n  (first coll)\n  (recur (rest coll) (- n 1))))","problem":21,"user":"52cdec6ce4b07d0d72b27383"},{"problem":21,"code":"(fn [x y]\n   ( first (drop y x) ) )","user":"565560ace4b0f9d632dd8496"},{"problem":21,"code":"(fn [xs num] (get (into [] xs) num))","user":"560e9a2de4b05f002753df52"},{"code":"(fn [s i]\n  (if (zero? i)\n    (first s)\n    (recur (rest s) (dec i))))","problem":21,"user":"4f382eb7e4b0e243712b1ed9"},{"code":"(fn[items index] (first (drop index items)))","problem":21,"user":"523ab749e4b0aa37f082ed8d"},{"problem":21,"code":"(fn nth-elem [xs n] (if (= n 0) (first xs) (nth-elem (rest xs) (- n 1))))","user":"5e30dbd5e4b05b4b0151621d"},{"problem":21,"code":"#(loop [a %1 n %2] (if (> n 0) (recur (rest a) (dec n)) (first a)))","user":"57ccedaae4b0c746388ab88e"},{"code":"(fn fnfnfn [l n]\n  (if (= n 0)\n    (first l)\n    (fnfnfn (rest l) (- n 1))\n  )\n)","problem":21,"user":"529df7f1e4b04e0c58e87b86"},{"code":"#(get (vec %1) (- (count %1) (- (count %1) %2)))","problem":21,"user":"532df9c5e4b019098a6f8b42"},{"problem":21,"code":"(fn [coll n]\n  ((apply comp first (repeat n rest)) coll))","user":"54d9f7f1e4b024c67c0cf751"},{"problem":21,"code":"#(if (> %2 0) (recur (rest %) (dec %2)) (first %))","user":"5579bc24e4b05c286339e098"},{"code":"(fn [lst pos] (first (nthrest lst pos)))","problem":21,"user":"51ffb54ee4b0f1313d468a9f"},{"problem":21,"code":"(fn at [sq n]\n    (if (= n 0)\n        (first sq)\n        (at (rest sq) (dec n))))","user":"53b4344de4b047364c0444b4"},{"problem":21,"code":"(fn [x y] (first (take-last (inc y) (reverse x))))","user":"56035cb1e4b04bb52996e1ba"},{"code":"(fn [x, n] (get (vec x) n))","problem":21,"user":"4eb885a8535dfed6da9c6d49"},{"problem":21,"code":"(fn [c x]\n\t(first (keep-indexed #(if(= x %1) %2) c))\n)","user":"57c62aece4b05aa3c4741cf1"},{"code":"(fn [l,i] (get (vec l) i))","problem":21,"user":"538a2c79e4b0640c7a9a58b9"},{"code":"(fn [array n] (loop [arr array cnt 0] (if (= n cnt) (first arr) (recur (rest arr) (inc cnt)))))","problem":21,"user":"52a5d1f3e4b0c58976d9abf1"},{"code":"(fn value-at-index [group index]\n\t(if (= 0 index)\n\t  (first group)\n\t  (recur (rest group) (dec index)))\n\t  )","problem":21,"user":"52be23dbe4b07a9af5792316"},{"problem":21,"code":"(fn [y x]  (last (take (inc x) y)))","user":"5f737899e4b02876ed9fd099"},{"code":"#( ( vec %1) %2)","problem":21,"user":"52361d84e4b05f3be1c7c8e5"},{"problem":21,"code":"(fn [seq n]\n  (loop [seq seq\n         c 0]\n    (if (= c n)\n      (first seq)\n      (recur (rest seq) (inc c))\n      )\n    )  \n  )","user":"6024544be4b0d5df2af2221f"},{"code":"(fn nth-ele [a-seq location]\n  (if (= 0 location) \n    (first a-seq) \n  (nth-ele (rest a-seq) (- location 1))))","problem":21,"user":"52bafc88e4b07a9af57922dc"},{"problem":21,"code":"(fn [s num]\n    (loop [current-seq s\n           cnt num]\n      (if (<= cnt 0)\n        (first current-seq)\n        (recur (rest current-seq) (dec cnt)))))","user":"5f02f365e4b0cf489e8d7f2c"},{"code":"(fn [l n] \n  (loop [i n l-rest l] \n    (if (zero? i) \n      (first l-rest) \n      (recur \n       (- i 1) \n       (rest l-rest)))))","problem":21,"user":"50e76beee4b077ad597af368"},{"problem":21,"code":"(fn fun [dataList, n]\n    (cond\n     \t(= (count dataList) 0) nil\n     \t(= n 0) (first dataList)\n     \t:else (recur (rest dataList) (dec n))\n  )\n)","user":"5da20e73e4b000c986472be1"},{"problem":21,"code":"(fn [a-seq n] (last (take (+ 1 n) a-seq)))","user":"55ee7055e4b0121d4835fded"},{"code":";(fn myfn [coll n]\n;  (if (= n 0)\n;    (first coll)\n;    (myfn (rest coll) (- n 1))))\n\n;#(if (= %2 0) (first %1) (recur (rest %) (- %2 1)))\n\n#(.get %1 %2)","problem":21,"user":"4f68fb4be4b07046d9f4ef82"},{"problem":21,"code":"(fn n-th [lst idx]\n  (if (zero? idx) \n    (first lst) \n    (n-th (rest lst) (- idx 1))))","user":"5cb4f632e4b026601754b92b"},{"problem":21,"code":"(fn [ls n]\n  (loop [ls ls acc 0]\n    (if (>= acc n)\n      (first ls)\n      (recur (rest ls) (inc acc)))))","user":"54ea5e91e4b024c67c0cf840"},{"problem":21,"code":"#(last (last (map vector (range (inc %2)) %1)))","user":"5de44684e4b0948ae9d9ae03"},{"code":"(fn[x y] (first(nthrest x y)))","problem":21,"user":"50368595e4b0af0658af779d"},{"problem":21,"code":"(fn rec [l n]\n  (if (= n 0)\n    (first l)\n    (rec (rest l) (dec n))))","user":"60460824e4b02d28681c77bc"},{"code":"(fn [col pos]\n  (if (= pos 0) \n    (first col)\n    (recur (rest col) (dec pos))))","problem":21,"user":"5099a280e4b0cae2931060bb"},{"problem":21,"code":"(fn _nth [v n] (if (= 0 n) (first v) (_nth (rest v) (- n 1)) ) )","user":"568d8f3ce4b0dcc4269f40c7"},{"code":"(fn my-nth [l i] (.get l i))","problem":21,"user":"51e786c9e4b0a3e081b8cbeb"},{"code":"(fn [l n]\n  (loop [s l d n]\n    (if (< d 1)\n      (first s)\n      (recur (rest s) (- d 1)))))","problem":21,"user":"4e55d4f0535d8a8b8723a280"},{"problem":21,"code":"(fn f [x n] (if (< n 1) (first x) (f (rest x) (dec n))))","user":"5aa2b91ae4b0d174b936c85d"},{"problem":21,"code":"(fn [xs x] (loop [l xs number x aux 0] (if(= aux number) (first l) (recur (rest l) number (inc aux)))))","user":"5aa88c12e4b0d174b936c8d1"},{"problem":21,"code":"(fn my-nth [coll n]\n  (if (== n 0)\n    (first coll)\n    (my-nth (rest coll) (- n 1))))","user":"52860baae4b0239c8a67ae09"},{"problem":21,"code":"(fn ! [l i]\n  (if (zero? i)\n    (first l)\n    (! (rest l) (dec i))))","user":"5ebdb3d2e4b00a66d4a95275"},{"problem":21,"code":"(fn nth1 [lst n]\n  (if (= n 0)\n    (first lst)\n    (nth1 (drop 1 lst) (- n 1))))","user":"52f2ecdde4b05e3f0be25f03"},{"code":"(fn [i j]\n      (first (nthnext i j)))","problem":21,"user":"51bd255ce4b0df1216cefd94"},{"problem":21,"code":"#(loop [i %2, s %1] (if (= i 0) (first s) (recur (dec i) (rest s))))","user":"53bd476ae4b0d9a98559a6ca"},{"problem":21,"code":"(fn [a n]\n  (loop [looped_a a, index 0]\n    (if (= index n)\n      (first looped_a)\n      (recur (rest looped_a) (inc index))\n      )\n    )\n  )","user":"5c6253abe4b0fca0c1622646"},{"code":"(fn nter [ls n]\n  (if (= n 0)\n    (first ls)\n    (nter (rest ls) (- n 1))))","problem":21,"user":"4ff769bce4b0678c553fc38f"},{"problem":21,"code":"#(-> (take (+ %2 1) %1) last)","user":"5533da20e4b09218d5f44f92"},{"problem":21,"code":"(fn [s n]\n  (loop [i 0\n         cur s]\n    (if (not= i n)\n      (recur (+ i 1) (rest cur)) (first cur))))","user":"5a6b9b95e4b0512ff01cda40"},{"code":"(fn nthVal[x y] (if (< y 1) (first x) (nthVal (rest x) (- y 1))))","problem":21,"user":"508d5ce9e4b0f17d83ea26bc"},{"code":"(fn [col index]\n  (if (pos? index)\n    (recur (rest col) (dec index))\n    (first col)\n  )\n)","problem":21,"user":"51729773e4b044b2ef48a852"},{"code":"(fn [s k] (loop [l s n k]\n            (if (= 0 n)\n              (first l)\n              (recur (rest l) (- n 1)))))","problem":21,"user":"539cb777e4b0b51d73faaf30"},{"problem":21,"code":"(fn [sequence idx] ((vec sequence) idx))","user":"561c57b9e4b064ca9f4b1697"},{"problem":21,"code":"(fn f \n  ([x n] (f x n 0))\n  ([x n i]\n   (if (< i n)\n     (f (rest x) n (+ i 1))\n     (first x))))","user":"57c2d0c1e4b05aa3c4741cb8"},{"problem":21,"code":"(fn [c x] (->> c (take (inc x)) last))","user":"58b1f51de4b0ebc645576d05"},{"problem":21,"code":"(fn find-nth [seq n]\n  (loop [i 0 seq seq]\n    (if (= i n)\n      (first seq)\n      (recur (inc i) (rest seq)))))","user":"57f6e666e4b0d3187e9008f2"},{"code":"(fn fnd [seqIn pos] (if (= pos 0) (first seqIn) (fnd (rest seqIn) (dec pos))))","problem":21,"user":"52ce165fe4b07d0d72b27388"},{"code":"(fn t [l,n] (if (= n 0) (first l) (t (rest l) (- n 1))))","problem":21,"user":"504e5989e4b0f6ff3350c4a4"},{"problem":21,"code":"(fn mynth [xs p]\n  (if (= p 0)\n    (first xs)\n    (mynth (rest xs) (dec p))))","user":"56785a48e4b05957ce8c6179"},{"problem":21,"code":"(fn [array index]\n  (if (zero? index)\n    (first array)\n    (recur (rest array) (- index 1))))","user":"5a144fd8e4b0ff51aa4b319a"},{"code":"(fn mynth [l n]\n  (if (zero? n)\n    (first l)\n    (recur (rest l) (dec n))))","problem":21,"user":"53372d7de4b0e30313ee6c87"},{"code":"(fn enth [lst x]\n   (cond\n    (zero? x) (first lst)\n    :else (enth (rest lst) (dec x))))","problem":21,"user":"5150a7ece4b03e678e393abc"},{"code":"(fn [s n] (loop [counter 0 temp-seq s]\r\n              (if (= counter n)\r\n                (first temp-seq)\r\n                (recur (inc counter) (rest temp-seq)))))","problem":21,"user":"4e03f4bd535d04ed9115e79a"},{"code":"(fn [seq idx]\n  (get (vec seq) idx))","problem":21,"user":"4f9f7daae4b0dcca54ed6d37"},{"problem":21,"code":"#(loop [i 0 c %1 j %2] (let [h (first c)] (if (= i j) h (recur (inc i) (rest c) j))))","user":"57286f16e4b0c5bde472c159"},{"code":"(fn mth [l n]\n  (if (= n 0)\n    (first l)\n    (mth (rest l) (- n 1))))","problem":21,"user":"53a09a1ee4b0ca733b9744b2"},{"problem":21,"code":"(fn find-n [coll n]\n  (if (= 0 n)\n    (first coll)\n    (find-n (rest coll) (dec n))))","user":"53c69ebce4b00fb29b22129c"},{"code":"#(loop [x %1 y %2]\r\n (if (= y 0)\r\n  (first x)\r\n  (recur (next x) (- y 1))\r\n )\r\n)","problem":21,"user":"4e15c301535d04ed9115e7e5"},{"code":"(fn [s index] (if (= 0 index) (first s) (recur (rest s) (- index 1))))","problem":21,"user":"4f0ad052535d0136e6c222f9"},{"code":"(fn [Li n]\n  (cond \n   (zero? n) (first Li)\n   :else (recur (rest Li) (- n 1))))","problem":21,"user":"530c4903e4b02e82168697da"},{"problem":21,"code":"(fn [list\n     n]\n  (loop [curr 0\n         remaining list]\n    (let [curr-elem (first remaining)\n          rem-elems (rest remaining)]\n      (if (not (= curr n))\n        (recur (inc curr) rem-elems)\n        curr-elem))))","user":"54513516e4b0e397800069af"},{"code":"(fn [x y] (last (take (+ y 1) x) ) )","problem":21,"user":"4e333091535deb9a81d77f25"},{"problem":21,"code":"(fn [l c] \n (loop [coll l cnt c]\n    (if (= cnt 0)\n      (first coll)\n      (recur (rest coll) (dec cnt))\n   )\n   )\n  )","user":"560768a0e4b08b23635d317f"},{"problem":21,"code":"(fn my_nth\n  [s n]\n  (if (= n 0)\n    (first s)\n    (my_nth (rest s) (- n 1))\n  )\n)","user":"5f6b8222e4b02876ed9fd052"},{"problem":21,"code":"(fn [lst n]\n  (last (take (inc n) lst))\n  )","user":"5f84f110e4b0375e81f54e79"},{"problem":21,"code":"(fn nths [list index]\n  (if (= index 0)\n    (first list)\n    (nths (rest list) (- index 1))))","user":"57ee88bbe4b0bfb2137f5bbe"},{"problem":21,"code":"(fn [coll num] (loop [c coll\n                    n num]\n               (if (= n 0)\n                 (first c)\n                 (recur (rest c) (dec n)))))","user":"5bd1fd6be4b0e9689409ee54"},{"problem":21,"code":"(fn [coll n]\n    (if (> n 0)\n      (recur (rest coll) (- n 1))\n      (first coll)))","user":"54db8d27e4b024c67c0cf765"},{"code":"(fn nelem [a i] (if (= i 0) (first a) (nelem (rest a) (- i 1))))","problem":21,"user":"5055e36be4b0ce54f56f0400"},{"problem":21,"code":"(fn [listi i]\n  (if (= 0 i) \n    (first listi)\n    (-> listi rest (recur (dec i)))))","user":"5f180938e4b091ba50b4dbd1"},{"problem":21,"code":"#(  last (take (+ 1 %2) %1)   )","user":"54e4edcae4b024c67c0cf7f3"},{"problem":21,"code":"(fn nthz [xs n]\n  (letfn [(help [xs n c]\n          (if (== c n)\n            (first xs)\n            (help (rest xs) n (inc c))))]\n    (help xs n 0)))","user":"5776903ee4b0979f8965163b"},{"code":"(fn nt\n  [x n]\n    (if (< n 1)\n        (first x)\n        (nt (rest x) (- n 1))))","problem":21,"user":"4f91a38ae4b0dcca54ed6c9f"},{"problem":21,"code":"(fn [xs i] (first(drop i xs)))","user":"5480cce5e4b0e286459a115f"},{"code":"(fn nieme [liste n]\n  (\n    if (= n 0)\n    (first liste)\n    (nieme (rest liste) (dec n))\n  )\n)","problem":21,"user":"4f84400de4b033992c121c2e"},{"code":"(fn [x,i] (.get x i))","problem":21,"user":"4e8b1fa2535d65386fec2118"},{"problem":21,"code":"(fn [x y](first (drop y x)))","user":"56a09fc3e4b0542e1f8d14a4"},{"problem":21,"code":"(fn [x i]\n  (loop [j 0 v x]\n    (if (= i j)\n      (first v)\n      (recur (inc j) (rest v)))))","user":"55c4352ce4b0e31453f64996"},{"code":"(fn [lst n] (loop [x 0 l lst] (if (= x n) (first l) (recur (inc x) (rest l)))))","problem":21,"user":"4ee251e9535d10e5ff6f5365"},{"code":"(fn mylast [xs n] (if (= n 0) (first xs) (mylast (rest xs) (- n 1))))","problem":21,"user":"4fabc896e4b081705acca21f"},{"problem":21,"code":"(fn nthel [lst n]\n  (if \n    (= n 0)\n    (first lst)\n    (recur (rest lst) (- n 1))))","user":"5b5e5019e4b0c6492753e6d3"},{"problem":21,"code":"(fn [seq n]\n  \t(if (= n 0) (first seq)\n      (recur (rest seq) (- n 1))))","user":"554dff83e4b00713264bd98d"},{"code":"(fn [sequ index]\n  (if (= 0 index)\n    (first sequ)\n    (recur (rest sequ) (- index 1))))","problem":21,"user":"50e063f3e4b061dbdced7230"},{"code":"(fn [sequence number]\n  (loop [s sequence\n             n number]\n    (if (zero? n)\n      (first s)\n      (recur (rest s) (dec n)))))","problem":21,"user":"52d8b05de4b09f7907dd139a"},{"problem":21,"code":"(fn \n  [lst n]\n  (if (zero? n) \n    (first lst)\n    (recur (rest lst) (dec n))))","user":"60468847e4b02d28681c77c4"},{"code":"(fn sum [xs n]\n\t(if (= n 0)\n\t\t(first xs)\n\t\t(sum (rest xs) (- n 1))\n     )\n  )","problem":21,"user":"51d10b1fe4b067c36548635e"},{"code":"(fn [seq n] (if (= n 0) (first seq) (recur (rest seq) (- n 1))))","problem":21,"user":"4f035d94535dcb61093f6a91"},{"code":"(fn [s n] (if (= 0 n)\n    (first s)\n    (recur (rest s) (dec n))))","problem":21,"user":"536f5900e4b0fc7073fd6e7b"},{"problem":21,"code":"(fn my-nth [x n]\n  (loop [x-1 (first x) x-r (next x) k 0]\n    (if (= k n)\n      x-1\n      (recur (first x-r) (next x-r) (+ k 1)))))","user":"56714922e4b05957ce8c6107"},{"problem":21,"code":"(fn f [l n] \n  (if (= 0 n)\n    (first l)\n    (f (rest l) (- n 1))))","user":"54ce3790e4b057c6fda3a2ab"},{"problem":21,"code":"(fn bth [x i] (if (= i 0) (first x) (bth (rest x) (- i 1))))","user":"5a03c545e4b01bb0ae8afd89"},{"code":"(fn F [s, n] (if (> n 0) (F (next s) (dec n) ) (first s)))","problem":21,"user":"5176afd2e4b085adf681d889"},{"code":"(fn at-pos [coll spos]\n  (loop [n (first coll) r (rest coll) pos 0]\n    (if (= pos spos) n\n      (recur (first r) (rest r) (inc pos)))))","problem":21,"user":"53445876e4b084c2834f4a29"},{"problem":21,"code":"(fn my-nth [v n] (if(= n 0) (first v) (my-nth (rest v) (dec n))))","user":"5c0ebca5e4b01240ff567147"},{"code":"(fn [coll pos]\n  (if (zero? pos) (first coll)\n      (recur (rest coll) (dec pos))))","problem":21,"user":"4fb1d907e4b081705acca282"},{"problem":21,"code":"#(loop [x %1 y %2]\n   (if (= y 0)\n     (first x)\n     (recur (rest x) (dec y))))","user":"53d1e9ffe4b00fb29b221319"},{"code":"(fn n [xs, pos]\n  (if (zero? pos)\n    (first xs)\n    (n (rest xs) (dec pos))))","problem":21,"user":"532b9075e4b09d4e7a9b5533"},{"code":"(fn iter [lst n]\n  (if (= n 0)\n    (first lst)\n    (iter (rest lst) (dec n) )))","problem":21,"user":"51607eb0e4b009fba0926e27"},{"problem":21,"code":"(#(fn [xs n] (if (= 0 n) (first xs) (recur (rest xs) (- n 1)))))","user":"55d8968ae4b0e31453f64abb"},{"code":"(fn [col, in] (first (reverse (take (+ 1 in) col))))","problem":21,"user":"4f26b520e4b0d6649770a004"},{"code":"#(loop [seq %1 curidx %2]\n   (if (zero? curidx)\n     (first seq)\n     (recur (rest seq) (dec curidx))))","problem":21,"user":"4dbd7107535d020aff1edf42"},{"problem":21,"code":"(fn nthh [seqq, n]\n  (if (== 0 n)\n  \t(first seqq)\n    (nthh (rest seqq) (dec n))))","user":"59971e2de4b07157cc8daacc"},{"problem":21,"code":"(fn my-nth \n  ([sq idx] \n   (my-nth sq idx 0)) \n  ([sq idx ctr] \n   (if (= idx ctr) \n     (first sq) \n     (my-nth (rest sq) idx (inc ctr)))))","user":"5d7a748ce4b02e6b30c93547"},{"problem":21,"code":"(fn [things index] (last (take (+ 1 index) things)))","user":"5e62db04e4b0fd0acd15869c"},{"code":"(fn [x,y] (last (take (+ y 1) x)))","problem":21,"user":"4ea137f1535d7eef308072b1"},{"code":"(fn [seq, index] (first (drop index seq)))","problem":21,"user":"5138da28e4b0a5db03d727dd"},{"problem":21,"code":"(fn[seq n]\n  (if (= n 0)\n    (first seq)\n    (recur (rest seq) (dec n)))\n  )","user":"585affbce4b0f14aab7c875f"},{"problem":21,"code":"(fn [origin numbr] (get (vec origin) numbr))","user":"5441fb2ce4b032a45b869376"},{"code":"(fn ynth [xs n]\n  (if (< n 0)\n    nil\n    (if (= [] xs)\n      nil\n      (if (= 0 n)\n        (first xs)\n        (ynth (rest xs) (- n 1))))))","problem":21,"user":"52f92349e4b047fd55836fe4"},{"problem":21,"code":"(fn [xs n]\n (first (drop n xs)))","user":"54c363cce4b045293a27f60d"},{"problem":21,"code":"(fn [coll n] (first (second (split-at (- n 0) coll))))","user":"5d164829e4b0902706380de0"},{"problem":21,"code":"(fn [coll index]\n    (if (= index 0)\n      (first coll)\n      (recur (rest coll) (dec index))\n    ))","user":"5485d169e4b0e286459a11b2"},{"problem":21,"code":"(fn [a b] (last (first (split-at (+ b 1) a))))","user":"55079757e4b021ccfedb96a9"},{"problem":21,"code":"(fn getNth [lst n]\n  (if (= n 0)\n    (first lst)\n    (getNth (rest lst) (- n 1))))","user":"540c288ae4b0addc1aec66ff"},{"problem":21,"code":"#(first (keep-indexed (fn [idx, val] (if (= idx %2) val)) %1))","user":"60b2ad00e4b0e0fa5f1b4229"},{"problem":21,"code":"(fn f [s n] \n  (if (= 0 n) (first s)\n    (f (rest s) (- n 1))))","user":"5e03fd15e4b0a607a9a45d66"},{"code":"#(loop [a %1 n %2]\n   (if (= n 0)\n     (first a)\n     (recur (rest a) (dec n))))","problem":21,"user":"5185e17ee4b0da5a5be3bac5"},{"code":"(fn my-nth [s n]\n  (if (<= n 0) (first s) (my-nth (rest s) (dec n))))","problem":21,"user":"4f7774a6e4b0fbe0118ec57f"},{"code":"(fn nth-element-solution\n  [coll n]\n  (first (drop n coll)))","problem":21,"user":"50c113bee4b096f585049c37"},{"problem":21,"code":"(fn [l n]\n  (if (= 0 n)\n    (first l)\n    (recur (rest l) (- n 1))\n    )\n  )","user":"545ef0a5e4b01be26fd74684"},{"problem":21,"code":"(fn Nth\n  [sq n]\n  (loop [m n\n         sqq sq]\n    (if (= m 0) (first sqq) (recur (dec m) (rest sqq)))))","user":"588e4e05e4b00487982d5188"},{"code":"#((zipmap (range (count %1))  %1) %2)","problem":21,"user":"522f2724e4b01e6a0e6e5db5"},{"problem":21,"code":"(fn [seq ioe]\n  (loop [s seq i 0]\n    (if (= i ioe)\n      (first s)\n      (recur (next s) (inc i)))))","user":"58969420e4b00487982d52a4"},{"problem":21,"code":"(fn get-index [arr index] (last (take (inc index) arr)))","user":"596c67fbe4b069c0a1a1982b"},{"code":"(fn [coll i] \n    (if (= i 0)\n      (first coll)\n      (recur (next coll) (dec i))))","problem":21,"user":"52129363e4b0d32679a50640"},{"code":"(fn [seq n]\n  (let \n    [iter (fn [seq i]\n      (if (= i 0)\n        (first seq)\n        (recur (rest seq) (- i 1))))]\n    (iter seq n)))","problem":21,"user":"505e2f6ce4b011187b721f38"},{"code":"(fn [x i]\n  ((fn inner [x j]\n             (if  (= i j)\n             (first x)\n             (inner (rest x) (+ j 1))\n             )\n  )\n  x \n  0\n))","problem":21,"user":"5112695de4b0350614f07a73"},{"code":"(fn mynth [x n] (if (> 1 n) (first x) (recur (rest x) (- n 1))))","problem":21,"user":"4e6a47b2535d8ccf87e9febb"},{"code":"(fn nth-elem [x n]  \r\n  (if (< (- n 1) 0) (first x) (nth-elem (rest x) (- n 1))))","problem":21,"user":"4e17d0c0535d04ed9115e7f0"},{"code":"(fn mynth [lst n]\n  (if (= n 0)\n    (first lst)\n    (recur (rest lst) (- n 1))))","problem":21,"user":"4fab0c0ae4b081705acca20d"},{"problem":21,"code":"(fn [s n] \n  (loop [si s\n         i n] \n    (if (zero? i)\n      (first si)\n      (recur (rest si) (dec i)))))","user":"578cf84ce4b0ebec4cfb7562"},{"code":"(fn search [cur x n] \n    (if (= cur n) \n  (first x)\n\t(search (+ cur 1) (drop 1 x) n)\n)) 0","problem":21,"user":"50c64471e4b00bb60fe0c51d"},{"code":"(fn _nth [x n] (if (= n 0) (first x) (_nth (rest x) (- n 1))))","problem":21,"user":"4e6fee9e535d5021c1a8962a"},{"code":"(fn n [x i]\n  (if (= i 0)\n    (first x)\n    (n (next x) (- i 1))))","problem":21,"user":"4e7ddc71535db169f9c796ef"},{"code":"(fn [a x] (peek (vec (take (+ x 1) a))))","problem":21,"user":"4ec6cc0e535d6d7199dd36d6"},{"problem":21,"code":"(fn [array n] (loop [i n remain array] (if(<= i 0) (first remain) (recur (dec i) (rest remain)))))","user":"5b19cdf2e4b03cfeda66ecbf"},{"code":"(fn [x y] (get (to-array x) y))","problem":21,"user":"514b33e8e4b0bd81940b86c9"},{"problem":21,"code":"(fn [l n]\n  (if (> n 0)\n    (recur (rest l) (dec n))\n    (first l)))","user":"56c04bd3e4b060a8e693e3a6"},{"problem":21,"code":"(fn [seq n]\n  (first\n   (last\n    (take (inc n)\n          (iterate rest seq)))))","user":"56e2c62fe4b03a7c14b85a37"},{"problem":21,"code":"#((zipmap (iterate inc 0) %) %2)","user":"5ccf21c4e4b0ccb0619628c1"},{"code":"(fn [my-list my-index]\n  \n  ((fn get-nth [c x n]\n    (if (= c n)\n      (first x)\n      (recur (+ c 1) (rest x) n)\n    )\n  )\n  \n  0 my-list my-index)\n)","problem":21,"user":"50df7963e4b061dbdced7227"},{"problem":21,"code":"#(loop [lst %1\n        index 0]\n   (if (= index %2)\n     (first lst)\n     (recur (rest lst) (inc index))))","user":"6074e278e4b069485764de51"},{"problem":21,"code":"#(first(rest (take-nth %2 %)))","user":"5d6e6a2de4b04d129b00f2c8"},{"code":"(fn\n  [coll n]\n  (if (zero? n)\n    (first coll)\n    (recur (rest coll) (dec n))))","problem":21,"user":"5112bbdde4b0350614f07a7c"},{"code":"(fn [xs n] (\n            if (= n 0)\n            \t(first xs)\n            \t(recur (rest xs) (- n 1))\n            )\n  )","problem":21,"user":"52f882c4e4b047fd55836fd1"},{"code":"(fn getn [list n]\n  (if (= n 0)\n      (first list)\n      (getn (rest list) (- n 1))))","problem":21,"user":"4f4ac35ae4b0d56e7bb92c18"},{"problem":21,"code":"(fn [coll item] (get (vec coll) item))","user":"60436423e4b02d28681c77a3"},{"code":"(fn Nth [seq, n]\n  (if (= 0 n)\n    (first seq)\n    (Nth (rest seq) (- n 1))\n  )\n)","problem":21,"user":"4fad9da0e4b081705acca23c"},{"code":"(fn [s n]\n        (last (take (inc n) s)))","problem":21,"user":"5143a51be4b0b4fb4ace5f39"},{"problem":21,"code":"(fn [a  b] (first (drop b a)))","user":"53c945b4e4b00fb29b2212bb"},{"problem":21,"code":"(fn nt [x n]\n  (if (= n 0)\n    (first x)\n    (nt (rest x) (- n 1))\n    ))","user":"59346d29e4b072a2710fd077"},{"problem":21,"code":"(fn[seq n]\n  (if (= n 0)\n    (first seq)\n    (recur (rest seq) (dec n))))","user":"5eb6561fe4b00a66d4a95233"},{"problem":21,"code":"(fn [coll i] (first (nthnext coll i)))","user":"567874f3e4b05957ce8c617c"},{"problem":21,"code":"(fn [x n] (loop [x x n n] (if (= 0 n) (first x) (recur (rest x) (dec n)))))","user":"56df9725e4b0ca2494a095fd"},{"problem":21,"code":"(fn func [x y] (cond (= y 0) (first x) :else ( func (rest x) (- y 1))))","user":"540479e7e4b0addc1aec665a"},{"problem":21,"code":"(fn\n  [input-list n]\n  (loop [cnt 0 tmp-list input-list]\n    (if (= n cnt)\n      (first tmp-list)\n      (recur (inc cnt) (rest tmp-list)))))","user":"560ae969e4b05f002753df0f"},{"problem":21,"code":"(fn nth2 [v x]\n  (if (= x 0)\n    (first v)\n    (nth2 (rest v) (- x 1))\n   )\n)","user":"55e46caae4b050e68259b451"},{"code":"(fn [sq n]\n  (if (= n 0)\n    (first sq)\n    (recur (rest sq) (dec n))))","problem":21,"user":"519c0c6ee4b0a1d87b003450"},{"problem":21,"code":"(fn [coll n] (if (zero? n) \n               (first coll)\n               (recur (rest coll) (dec n))))","user":"53ac0e52e4b047364c044457"},{"problem":21,"code":"(fn [some-list an-index] (last (take (+ an-index 1) some-list)))","user":"5a737561e4b0512ff01cdaaa"},{"code":"(fn nth-1 [sequence n]\n  (if (= n 0) (first sequence) (nth-1 (rest sequence) (- n 1))))","problem":21,"user":"50101a30e4b04c11913f949d"},{"problem":21,"code":"(fn[l n] (loop [lst l curr n]\n           (cond \n            (= curr 0) (first lst)\n            (empty? lst) nil\n            :else (recur (rest lst) (dec curr)))))","user":"541df0b5e4b01498b1a71a86"},{"problem":21,"code":"(fn [coll index]\n  (if (zero? index)\n    (first coll)\n    (recur (rest coll) (dec index))\n  )\n)","user":"5df39a6fe4b03c219ef1a36d"},{"problem":21,"code":"(fn [l i] (last (take (+  1 i) l)))","user":"5e195b3ee4b0dc9594008505"},{"code":"(fn my-nth [coll n]\n  (if (> n 0)\n    (my-nth (rest coll) (dec n))\n    (first coll)))","problem":21,"user":"4fe13ad7e4b0dd6cd5ce3632"},{"problem":21,"code":"(fn[s, n] (\n                   if (= n 0) (first s) (recur (rest s) (- n 1)) \n                   ))","user":"54b598d6e4b05787c3b163a8"},{"problem":21,"code":"(fn enth\n  ([s n] (enth s n 0))\n  ([s n counter]\n   (if counter\n    (if (= counter n)\n      (first s)\n      (enth (rest s) n (+ 1 counter))))))","user":"56491050e4b0284900eef639"},{"problem":21,"code":"(fn myth [var elnum]\n  (if (= elnum 0)\n    (first var)\n    (myth (rest var) (- elnum 1))))","user":"54775b13e4b0c51c1f4d72b2"},{"problem":21,"code":"(fn nnn[l n] (cond (= n 0) (first l) :else (nnn (rest l) (- n 1))))","user":"56fe19ade4b08d47c97781ab"},{"code":";(fn [coll n]\n;  (if (zero? n)\n;    (first coll)\n;    (recur (rest coll) (dec n))))\n#((vec %1) %2)","problem":21,"user":"4db6d993535d1e037afb2180"},{"code":"(fn my-nth [li n] (if (= n 0) (first li) (my-nth (rest li) (dec n))))","problem":21,"user":"4e72175d535d5021c1a89658"},{"problem":21,"code":"(fn [coll i]\n  (cond (= i 0) (first coll)\n        :else\n        (recur (rest coll) (dec i))))","user":"5e724492e4b085ba37836dc7"},{"problem":21,"code":"(fn [xs n]\n  (loop [from-search-index-onwards xs\n         searching-for-index 0]\n    (if (= searching-for-index n)\n      (first from-search-index-onwards)\n      (recur (rest from-search-index-onwards)\n             (inc searching-for-index)))))","user":"5aeafd96e4b0cc2b61a3bbeb"},{"problem":21,"code":"(fn [ar n] (first ( drop n ar)))","user":"57a2d35be4b0c3d858beb907"},{"code":"(fn temp [theList, n] (if (= n 0) (first theList) (temp (rest theList) (- n 1))))","problem":21,"user":"50ff3800e4b017584cb41ccb"},{"code":"(fn [lst' x']\n  (loop [lst lst' x x']\n    (if (= x 0)\n      (first lst)\n      (recur (rest lst) (dec x)))))","problem":21,"user":"520dd6f4e4b0b022ef140cb8"},{"problem":21,"code":"(fn nth_ [seq_ ind] (cond (> ind 0) (nth_ (rest seq_) (- ind 1)) :else (first seq_)))","user":"5a527c16e4b05d388ecb6bff"},{"problem":21,"code":"(fn foo [coll n]\n  (if (zero? n) (first coll) (foo (rest coll) (dec n))))","user":"55d3811be4b0e31453f64a69"},{"code":"(fn my-n [sq i] \n  (if (< i 1)\n    (first sq)\n    (my-n (rest sq) (- i 1))))","problem":21,"user":"4f03cc36535dcb61093f6b69"},{"problem":21,"code":"(fn [seq n] (first (drop n seq) )  )","user":"5527ac3fe4b0ffed3738f933"},{"problem":21,"code":"(fn [s n]\n  (loop [s s\n         n n]\n    (if (= n 0)\n    (first s)\n    (recur (rest s) (dec n)))))","user":"55074092e4b021ccfedb96a4"},{"problem":21,"code":"(fn get-nth [list n]\n  (if (> n 0)\n    (get-nth (rest list) (dec n))\n    (first list)))","user":"57f11d72e4b0bfb2137f5c03"},{"code":"(fn [s c] (if (= c 0) (first s) (recur (rest s) (dec c))))","problem":21,"user":"53722b80e4b0493c815db707"},{"code":"(comp first #(drop %2 %))","problem":21,"user":"4dad938fc9a9d6ed1b99dc57"},{"problem":21,"code":"(fn ne [s n] (\n           if (= n 0) (first s) (ne (drop 1 s) (- n 1))\n              )\n  )","user":"5f419985e4b0955706451fab"},{"code":"(fn my-nth [xs n] (if (= n 0) (first xs) (my-nth (rest xs) (- n 1))))","problem":21,"user":"4e6b8140535d8ccf87e9ff17"},{"problem":21,"code":"(fn drop-me [ls n] (first (drop n ls)))","user":"557a42bee4b05c286339e0a0"},{"problem":21,"code":"#(loop [i 0 xs %] (if (= i %2) (first xs) (recur (inc i) (rest xs))))","user":"58b989dbe4b0888cdc949ccd"},{"problem":21,"code":"(fn [items index]\n  (loop [counter 0 items items]\n  \t(if (= counter index)\n      (first items)\n      (recur (+ counter 1) (rest items)))))","user":"576584c1e4b0994c1922fc0e"},{"code":"(fn [coll x] (first (nthnext coll x)))","problem":21,"user":"4ebeaf0b535dfed6da9c6d98"},{"code":"(fn ith [ls n] (case n 0 (first ls) (ith (rest ls) (- n 1))))","problem":21,"user":"504e397ee4b0f6ff3350c485"},{"problem":21,"code":"(fn find-nth [list pos] \n  (if (= pos 0) \n    (first list)\n    (find-nth (rest list) (dec pos))))","user":"5e872aaae4b09a7a73c8bbe5"},{"problem":21,"code":"(fn [s i]\n  ( if (> i 0)\n    (recur (rest s) (dec i))\n    (first s)))","user":"5a1c8c26e4b0ff51aa4b3247"},{"problem":21,"code":"(fn foo [sq n] (if (= n 0) \n             (first sq) \n             (foo (drop 1 sq) (dec n))))","user":"5c05537fe4b0bdcf453d1692"},{"problem":21,"code":"(fn[list_num x](get (into [] list_num) x))","user":"5939b9f9e4b069cdc2982b3d"},{"problem":21,"code":"(fn walk [collection steps]\n  (if (== steps 0)\n    (first collection)\n    (walk (rest collection) (- steps 1))))","user":"5887518ae4b0f1effa3b76f5"},{"code":"#(if (zero? %2) (first %) (recur (next %) (dec %2)))","problem":21,"user":"4fc5f83be4b0ee37620e1806"},{"problem":21,"code":"(fn [coll el] (first (drop el coll)))","user":"532902f8e4b09d4e7a9b550e"},{"code":"(fn [lst idx]\n  (loop [l lst i idx]\n    (if (= i 0)\n        (first l)\n        (recur (rest l) (dec i)))))","problem":21,"user":"4ee528fb535d1385b2869d87"},{"problem":21,"code":"(fn [lst index]\n\t(apply \n\t\t(fn temp [index x & xs]\n\t\t\t(if (= 0 index)\n\t\t\t\tx\n\t\t\t\t(apply\n\t\t\t\t\ttemp\n\t\t\t\t\t(dec index)\n\t\t\t\t\t(first xs)\n\t\t\t\t\t(rest xs)\n\t\t\t\t)\n\t\t\t)\n\t\t)\n\t\tindex\n\t\tlst\n\t)\n)","user":"54c92da5e4b045293a27f65b"},{"code":"(fn value-at [my-list my-index]\n  (if (zero? my-index) \n    (first my-list) \n    (recur (rest my-list) (dec my-index))))","problem":21,"user":"5046f909e4b03b02161376b5"},{"problem":21,"code":"(fn b-nth [c, n]\n  (if (= 0 n)\n    (first c)\n    (b-nth (rest c) (- n 1))))","user":"55831f0fe4b05c286339e112"},{"problem":21,"code":"(fn nthed [listing place]\n  (loop [cnt 0\n         current listing]\n    (if (< cnt place)\n      (recur (inc cnt) (rest current))\n      (first current))))","user":"54f36b36e4b050824f58f5c2"},{"code":"(fn [l n]  (first (drop n l)))","problem":21,"user":"4e68dfe6535d8ccf87e9fe91"},{"code":"(fn [list, n] (if (zero? n) (first list) (recur (rest list) (dec n))))","problem":21,"user":"508c2da3e4b0f17d83ea26b0"},{"problem":21,"code":"( fn [a b] (first ( drop b a )) \n  )","user":"5c94cbb1e4b048ec896c5a3d"},{"code":"(fn n[l, p] (if (== p 0) (first l) (n (rest l) (- p 1))))","problem":21,"user":"4f96fa2ae4b0dcca54ed6ce4"},{"problem":21,"code":"(fn [seq n]\n  (loop [cur 0\n         cur-seq seq\n         ]\n    (cond\n      (= cur (count seq)) nil\n      (= cur n) (first cur-seq)\n      :else (recur (inc cur) (rest cur-seq)))\n    )\n  )","user":"5cdbb1b2e4b05ee0cb311732"},{"code":"(fn get-nth [seq idx]\n    (if (= 0 idx)\n        (first seq)\n        (get-nth\n            (rest seq)\n            (- idx 1))))","problem":21,"user":"4f03818e535dcb61093f6b00"},{"code":"(fn fu [x n]\n  (first(drop n x))        \n)","problem":21,"user":"4e94aab8535dbda64a6f6b1f"},{"problem":21,"code":"(fn getn [l n] (case n 0 (first l) (getn (rest l) (dec n))))","user":"5066003ee4b0313a384e5647"},{"problem":21,"code":"(fn [l n]\n  (first\n  (drop n l)))","user":"5ee9a973e4b029a2061bbeb9"},{"code":"(fn n [x i] \n   (if (= 0 i) \n     (first x) \n     (n (rest x) (- i 1))))","problem":21,"user":"510c8a00e4b078ea7192111f"},{"code":"(fn nt [c i]\n  (if (= 0 i) \n    (first c)\n    (nt (rest c) (- i 1))))","problem":21,"user":"5356100be4b04ce2eb3ed262"},{"code":"(fn nth-elem [sequen n]\n              (if \n                (= (count sequen) (+ n 1))    \n                (last sequen)\n                (nth-elem (reverse(rest (reverse sequen))) n))\n              )","problem":21,"user":"514cc029e4b019235f6c057c"},{"code":"(fn my-index [s i] (last (take (+ i 1) s)))","problem":21,"user":"4e8de3a2535d65386fec213d"},{"code":"(fn [s n]\n  (loop [r s\n         i n]\n    (if (= i 0)\n      (first r)\n      (recur (rest r) (dec i)))))","problem":21,"user":"533df95de4b085b17e897d86"},{"code":"#(loop [x % y %2] (if (zero? y) (first x) (recur (next x) (dec y)) ) )","problem":21,"user":"52bf6946e4b07a9af5792334"},{"code":"(fn [coll idx]\n  (if (= 0 idx) (first coll) (recur (rest coll) (dec idx))))","problem":21,"user":"528e7433e4b0239c8a67aedf"},{"code":"(fn npos [coll pos] (if (zero? pos) (first coll) (npos (rest coll) (dec pos))))","problem":21,"user":"52cfe059e4b07d0d72b273af"},{"code":"(fn indexOf[collection index]\n  ((vec collection) index)\n)","problem":21,"user":"4e723bcb535d5021c1a8965c"},{"code":"#(loop [i 0 s %1]\n  (if (= i %2)\n    (first s)\n    (recur (+ i 1) (rest s))))","problem":21,"user":"4f4e52d2e4b03ad3f0c10cc2"},{"problem":21,"code":"(fn my-nth [coll n]\n  (loop [i 0\n         left-coll coll]\n    (if (< i n)\n      (recur (inc i) (rest left-coll))\n      (first left-coll))))","user":"567b4641e4b05957ce8c61a5"},{"problem":21,"code":"(fn [coll n]\n  (loop [iter 0 c coll]\n    (if (= n iter)\n      (first c)\n      (recur (inc iter) (rest c)))))","user":"605a876be4b000d535e6f53c"},{"problem":21,"code":"(fn [a b] (if (vector? a) (get a b) (get (vec a) b)))","user":"5f74ed71e4b02876ed9fd0a6"},{"problem":21,"code":"#(first(reverse(take (+ %2 1) %)))","user":"5554ae14e4b0deb715856e0e"},{"code":"(fn [ l n] \n  (let [c 0] \n    (if (= c n) \n      (first l) \n      (recur (rest l)(dec n)))))","problem":21,"user":"510b574fe4b078ea719210fe"},{"code":"(fn [coll index]\n  ((apply comp (cons first (repeat index rest))) coll))","problem":21,"user":"4e726914535d5021c1a89661"},{"code":"(fn [coll n]\n  (loop [c coll i n]\n    (if (zero? i) (first c)\n        (recur (rest c) (dec i)))))","problem":21,"user":"4f98ead0e4b0dcca54ed6cf8"},{"code":"(fn [lst idx] \n  (last (take (inc idx) lst)))","problem":21,"user":"4f88f57ae4b033992c121c73"},{"code":"(fn [l n]\r\n      (if (= n 0) (first  l)\r\n                  (recur (rest l) (dec n))))","problem":21,"user":"50576483e4b001218172198b"},{"problem":21,"code":"(fn [lstt n] \r\n  (loop\r\n    [i 0\r\n     lst lstt]\r\n    (if (= i n)\r\n      (first lst)\r\n      (recur (inc i) (rest lst)))))","user":"6074df6fe4b069485764de4b"},{"code":"(fn annas [list n]\n  (cond\n    (= n 0) (first list) \n    :else (annas (rest list) (dec n))\n))","problem":21,"user":"5252cbe7e4b0541d1855b8d2"},{"problem":21,"code":"(fn nth-value [s n] (if (= n 0) (first s)\n                      (nth-value (rest s) (- n 1))))","user":"551ed214e4b08d5046aa8a4d"},{"code":"(fn [coll idx] ((zipmap (range (count coll)) coll) idx))","problem":21,"user":"51fda906e4b0f1313d468a4f"},{"problem":21,"code":"(fn [x y]\n  (if (zero? y)\n    (first x)\n    (recur (next x) (dec y))\n    )\n  )","user":"5e807fcae4b085ba37836e46"},{"code":"(fn [seq index]\n  (loop [cur-seq seq \n         cur-index 0]\n    (if (= cur-index index)\n      (first cur-seq)\n      (recur (rest cur-seq) (inc cur-index )\n             )\n      )\n    )\n  )","problem":21,"user":"50e87427e4b0ebbe794eb7e8"},{"problem":21,"code":"(fn [aseq n] (get (vec aseq) n))","user":"586ba61fe4b01531a375e95e"},{"code":"(fn [li, n] (get (vec li) n))","problem":21,"user":"5394265ee4b0b51d73faaec6"},{"code":"(fn [s n]\n  (if (zero? n)\n         (first s)\n         (recur (rest s) (dec n))))","problem":21,"user":"4f6ea22ae4b07046d9f4efdb"},{"problem":21,"code":"(fn [xs n]\n  (if (= 0 n)\n     (first xs)\n     (recur (rest xs) (dec n))\n     )\n  )","user":"55b28b57e4b01b9910ae296c"},{"code":"(fn ! [l, n]\n  (cond\n    (= n 0) (first l)\n    :else (! (rest l) (dec n))))","problem":21,"user":"4f22e667e4b0d66497709fdb"},{"problem":21,"code":"(fn get-nth\n  [some-seq n]\n  (loop [c-seq some-seq idx 0]\n    (if (= idx n)\n      (first c-seq)\n      (recur (rest c-seq) (inc idx))\n      )))","user":"57a6ad79e4b0a9660795620b"},{"code":"(fn nthitem [items index]\n  (if (= 0 index) \n    (first items) \n    (nthitem (rest items) (- index 1))))","problem":21,"user":"502be4fae4b08f5602f232eb"},{"problem":21,"code":"(fn [xs,n] (last (take (+ n  1) xs)))","user":"55c10409e4b01b9910ae2a2c"},{"problem":21,"code":"(fn mynth [x index]\n  (loop [pos 0 y x]\n    ;(println pos y)\n    (if (= pos index)\n      (first y)\n      (recur (inc pos) (rest y))\n      )\n    )\n  )","user":"518665cde4b0da5a5be3bad2"},{"problem":21,"code":"(fn\n [xs n]\n (last\n  (take (inc n) xs)))","user":"55381162e4b09218d5f44fda"},{"problem":21,"code":"(fn[x n](get (vec x) n))","user":"5770fb2ce4b0979f896515a5"},{"problem":21,"code":"(fn my-nth [coll n]\n        (if (= n 0) (first coll) (my-nth (rest coll) (dec n))))","user":"55f03fb5e4b06e875b46ce1f"},{"problem":21,"code":"(fn n-item [collection num]\n  (if (= num 0) \n     (first collection)  \n     (n-item (rest collection) (dec num))\n  )\n)","user":"54bb0f63e4b0ed20f4ff6ebc"},{"code":"(fn f [xs n] (if (= n 0) (first xs) (f (rest xs) (- n 1))))","problem":21,"user":"510acd6ee4b078ea719210f4"},{"problem":21,"code":"(fn [list1 x]\n  (get (into [] list1) x))","user":"5d4d46aae4b0776584bd6f3a"},{"problem":21,"code":"(fn [s n]\n  (loop [s s\n    \t i 0]\n    (if (= i n)\n      (first s)\n      (recur (drop 1 s) (inc i)))))","user":"570459a9e4b0b0fb43fd0662"},{"problem":21,"code":"(fn f [x y] (if (= 0 y)\n                (first x)\n                (f (rest x) (dec y))\n))","user":"5867f895e4b0f14aab7c8886"},{"problem":21,"code":"(fn [xs n]\n  (loop [n n\n         xs  xs]\n    (let [x (first xs)]\n      (if (= 0 n)\n        x\n        (recur (dec n) (rest xs))\n        ))))","user":"60b63231e4b0e0fa5f1b4247"},{"problem":21,"code":"(fn [data x] \n  (loop [cnt 0 curdata data]\n    (if (= cnt x)\n      (first curdata)\n    (recur (inc cnt) (next curdata)))))","user":"5447e5b7e4b032a45b8693c4"},{"code":"(fn nth1 [col offset]\n  (if (= 0 offset)\n    (first col)\n    (recur (rest col) (dec offset))))","problem":21,"user":"4faf897be4b081705acca257"},{"problem":21,"code":"(fn [collection n]\n  (last (take (+ n 1) collection)))","user":"5e16b820e4b0a047bd49f71f"},{"problem":21,"code":"#(let [alist %1 pos %2] (if (= 0 pos) (first alist) (recur (rest alist) (dec pos))))","user":"5522cbb2e4b0882d96d091aa"},{"code":"(fn [s n]\n  (loop [x n v s]\n    (if (= x 0)\n      (first v)\n      (recur (dec x) (rest v)))))","problem":21,"user":"51721aefe4b0d70c8bbbf24a"},{"problem":21,"code":"(fn nthx\n     [s n]\n     (if (= n 0)\n       (first s)\n       (recur (rest s) (- n 1))))","user":"5e3f2720e4b01d43a70e8e32"},{"code":"(fn [s n] (if (not (zero? n))\n  (recur (rest s) (- n 1))\n  (first s)))","problem":21,"user":"4ed9354f535d10e5ff6f5301"},{"problem":21,"code":"(fn n-th [l n] (first (drop n l)))","user":"585e7c60e4b0f14aab7c87b3"},{"problem":21,"code":"(fn nthelem [l n] (if (= n 0) (first l) (nthelem (rest l) (- n 1))))","user":"595ad1efe4b066ee0a44afcb"},{"problem":21,"code":"(fn [xs n] (loop [lst xs i n] (if (= i 0) (first lst) (recur (rest lst) (dec i)))))","user":"5a5800e1e4b05d388ecb6c76"},{"problem":21,"code":"(fn th [coll n] (loop [i 0 c coll] (if (= i n) (first c) (recur (+ i 1) (rest c)))))","user":"5d348d3de4b01671435dbd0a"},{"code":"(fn cust-nth [coll n]\n  (loop [coll coll n n]\n    (if (= n 0)\n      (first coll)\n      (recur (rest coll) (dec n)))))","problem":21,"user":"52463059e4b09dbe66b56198"},{"code":"(fn [sequence n-th]\n\t(loop [s sequence\n\t\t n 0]\n\t  (if (= n n-th)\n\t    (first s)\n\t    (recur\n\t      (next s)\n\t      (inc n)))))","problem":21,"user":"514a13cee4b0829bd132edb4"},{"problem":21,"code":"(fn mth [x y] (if (= y 0) (first x) (mth (rest x) (- y 1))))","user":"5501de12e4b07d26eda61d7b"},{"code":"(fn [lst n]\n  (if (= n 0) (first lst)\n        (recur (rest lst) (- n 1))))","problem":21,"user":"507db411e4b03c76e5499e06"},{"code":"(fn [coll i]\n    (second (take-nth i coll)))","problem":21,"user":"4e6a4edd535d8ccf87e9fec4"},{"problem":21,"code":"(fn [x y] ((into [] x) y))","user":"5a221881e4b0ff51aa4b32c0"},{"problem":21,"code":"(fn [myList index] \n  (last (take (+ 1 index) myList)))","user":"5f998847e4b0715f5002d813"},{"problem":21,"code":"(fn [col n]\n          (if (= n 0)\n            (first col)\n            (recur (rest col) (- n 1))))","user":"54aede47e4b09f271ff37cfd"},{"problem":21,"code":"(fn nth-elt [l n] (if (= n 0)\n                    (first l)\n                    (nth-elt (rest l) (- n 1))))","user":"562b8613e4b058fa18c5a6cd"},{"code":"(fn [arr idx] (first (drop idx arr)))","problem":21,"user":"505d4b21e4b0e6aca564be07"},{"code":"(fn [col idx] (get (vec col) idx))","problem":21,"user":"4fb9b84fe4b081705acca2db"},{"problem":21,"code":"(fn [the-coll which-one]\n  (first (drop which-one the-coll)))","user":"5d6eaa58e4b04d129b00f2cd"},{"problem":21,"code":"(fn next\n   [l n]\n  (case n\n    0 (first l)\n    (next (rest l) (dec n))\n   ))","user":"58840023e4b0f1effa3b768b"},{"code":"#(if (zero? %2) (first %1) (recur (rest %1)(dec %2)))","problem":21,"user":"510931ede4b0c71f76895663"},{"problem":21,"code":"(fn nth-elem [n x]\n  (last (take (inc x) n)))","user":"5a38b82ee4b001c08efc0ca5"},{"code":"(fn [coll idx] (if (zero? idx) (first coll) (recur (next coll) (dec idx))))","problem":21,"user":"5346db4be4b084c2834f4a45"},{"problem":21,"code":"(fn [coll index]\n   (loop [c coll i index]\n     (if (= i 0)\n       (first c)\n       (recur (next c) (dec i))\n     )\n    )\n\n  )","user":"56004deee4b04bb52996e164"},{"code":"(fn [coll idx]\n  (loop [c coll]\n    (if (= (- (count coll) idx) (count c))\n      (first c)\n      (recur (rest c)))))","problem":21,"user":"4e71920f535d5021c1a8964e"},{"code":"(fn [as pos]\n(last (take (+ pos 1) as)))","problem":21,"user":"52fa4f48e4b047fd55836ff7"},{"problem":21,"code":"(fn [nums index]\n  (if (= index 0)\n    (first nums)\n    (recur (rest nums) (- index 1))))","user":"53b0765ae4b047364c044484"},{"problem":21,"code":"(fn f \n  [col x]\n  (if (= x 0)\n    (first col)\n    (f (rest col) (- x 1))))","user":"575fbe58e4b08062f99a4e87"},{"problem":21,"code":"(fn [col n] (first (filter #(= (.indexOf col %) n) col)))","user":"562f44e6e4b0ab312c17ebc7"},{"problem":21,"code":"(fn foo [l n] \n  (if (zero? n) (first l) \n    (foo (next l) \n         (dec n))))","user":"5efdb9bae4b0cf489e8d7f02"},{"problem":21,"code":"(fn my-nth [xs n]\n      (if (pos? n)\n        (my-nth (rest xs) (dec n))\n        (first xs)))","user":"5d49ec5ee4b0776584bd6f1c"},{"code":"(fn rrr [x y] (if (= y 0) (first x) (rrr (rest x) (dec y))\n  ))","problem":21,"user":"5012036ce4b0a040369c12f4"},{"problem":21,"code":"(fn [xs c] (first (drop c xs)))","user":"5ca7b5bbe4b048ec896c5c04"},{"problem":21,"code":"(fn [elements n] \n  (let [final-length (- (count elements) n)]\n  \n  (loop [elements elements]\n    (if (= (count elements) final-length)\n      (first elements)\n      (recur (next elements))))))","user":"54bd91d7e4b0ed20f4ff6ee2"},{"code":"(fn my-nth [xs ndx]\n   (first (drop ndx xs)))","problem":21,"user":"517a025ce4b01aacecbecbe6"},{"code":"(fn\n  [x n]\n  (let [nthrec (fn\n                 [x n f]\n                 (if (= n 0)\n                   (first x)\n                   (f (rest x) (dec n) f)\n                ))]\n    (nthrec x n nthrec)\n  )\n)","problem":21,"user":"52c872b6e4b0c2d177d62134"},{"code":"(fn go [x i]\n  (if (= i 0)\n    (first x)\n    (go (rest x) (dec i))))","problem":21,"user":"4f77dc7be4b0fbe0118ec584"},{"problem":21,"code":"(fn n-th [ls n]\n  (if (= n 0)\n    (first ls)\n    (n-th (rest ls) (- n 1))))","user":"57a4a81ee4b0a966079561e8"},{"code":"(fn [xs n]\n    (loop [i 0 xs xs]\n      (if (empty? xs)\n        nil\n        (if (= i n)\n          (first xs)\n          (recur (inc i) (rest xs))))))","problem":21,"user":"4e9fd521535d7eef3080729a"},{"problem":21,"code":"(fn [coll n]\n  (loop [x (first coll) rst (rest coll) i 0]\n    (if (= i n) x\n        (recur (first rst) (rest rst) (inc i)))))","user":"5ed9b912e4b0c7845d86b0e3"},{"problem":21,"code":"(fn [x y] (\n  last (\n    take (+ 1 y) x)))","user":"60482e53e4b02d28681c77d3"},{"problem":21,"code":"(fn [array index] (first (remove nil? \n                        \t(map-indexed (fn [idx item] \n                                  (if (= idx index) item)) array))))","user":"549c953ee4b0f3d1d8e70f8e"},{"problem":21,"code":"(fn [xs index] (if (= index 0) \n                 (first xs) \n                 (recur (rest xs) (dec index))\n                 )\n  )","user":"59ee3060e4b0966464fe6a12"},{"code":"(comp first (partial apply drop) (juxt second first) vector) ; everything is better with juxt","problem":21,"user":"4e9660ec535dbda64a6f6b44"},{"code":"(fn [l index] (first (drop index l)))","problem":21,"user":"4e139c72535d04ed9115e7da"},{"problem":21,"code":"(fn [l n] (->> l (drop n) (take 1) first))","user":"584d8724e4b0b7285a6f4e3e"},{"problem":21,"code":"(fn my-nth[s n] \n  (if (= 0 n)\n    (first s)\n    (my-nth (rest s) (dec n))))","user":"550c55d0e4b06e50f9beb14d"},{"problem":21,"code":"(fn [things n] (loop [elements things i n]\n                (if (= i 0) \n                 (first elements)\n                 (recur (rest elements) (- i 1)))))","user":"55ddb3f4e4b050e68259b3cd"},{"code":"(fn func [x y] (if (= y 0) (first x) (func (next x) (- y 1))))","problem":21,"user":"522ff396e4b032bbe3424172"},{"code":"(fn mynth [xs n] \n  (if (= n 0) (first xs) (mynth (rest xs) (- n 1))))","problem":21,"user":"4e85c175535db62dc21a62ef"},{"code":"(fn [x y] (first (reverse (take (+ y 1) x))))","problem":21,"user":"4ec670bc535d6d7199dd36cf"},{"problem":21,"code":"(fn temp [x y] (if (= 0 y) (first x) (temp (rest x) (dec y))))","user":"55adf65fe4b03311e7b732b0"},{"code":"(fn[s n] ((vec s) n))","problem":21,"user":"4f6d23cde4b07046d9f4efc6"},{"problem":21,"code":"(fn [origin-numbers index]\n  (loop [n [] numbers origin-numbers]\n    (if (= (count n) index)\n      (first numbers)\n      (recur (conj n (first numbers)) (rest numbers)))))","user":"550174b5e4b07d26eda61d73"},{"code":"(fn [v n]\n  (if (> n 0)\n    (recur (rest v) (dec n))\n      (first v)\n      )\n  )","problem":21,"user":"4fcad14ce4b0ee37620e1856"},{"problem":21,"code":"(fn my-nth [coll n]\n  (loop [c coll\n         pos 0]\n    (if (= pos n)\n      (first c)\n      (recur (rest c) (inc pos)))))","user":"561a9380e4b053970a773b07"},{"code":"#(->> %1 (take-nth %2) second)","problem":21,"user":"4faac363e4b081705acca200"},{"code":"(fn nth-elem[l elem]\n(if (= elem 0)\n      (first l)\n  \t(recur (rest l) (dec elem)))\n)","problem":21,"user":"506ac723e4b05d3b7762c74d"},{"code":"(fn nth-element [x y]\n  (if (= y 0)\n    (first x)\n    (nth-element (rest x) (- y 1))\n   )\n)","problem":21,"user":"527c2ac9e4b03e8d9a4a75b7"},{"code":"(fn [coll n]\n  (get (vec coll) n\n  ))","problem":21,"user":"5297c25de4b02ebb4ef75045"},{"problem":21,"code":"(fn foo[arr e] (if (= e 0)\n                 (first arr)\n                 (foo (rest arr) (dec e))))","user":"604e0764e4b0b7ec0ac60ac7"},{"code":"(fn [collection n] \n  (if (= n 0) (first collection) (recur  (rest collection) (- n 1) )))","problem":21,"user":"51f8397ce4b09be9c177e529"},{"code":"(fn pseudo-nth [coll i]\n  (if (= 0 i) (first coll) (pseudo-nth (rest coll) (- i 1))))","problem":21,"user":"4f26c3b5e4b0d6649770a005"},{"problem":21,"code":"(fn yo [list n]\n\t(if (= n 0)\n      (first list)\n      (yo (rest list) (dec n))\n    )\n  )","user":"5fce0cc5e4b07e53c2f3f000"},{"code":"(fn nt [s x] (if (= x 0) (first s) (nt (rest s) (dec x))))","problem":21,"user":"517d1018e4b0f5e87c18f25e"},{"code":"(fn [s x](first(reduce #(do %2 (next %)) s (range x))))","problem":21,"user":"4e599577535d8a8b8723a29f"},{"problem":21,"code":"(fn [xs n]\n  (if (> n 0)\n  \t(recur (rest xs) (dec n))\n    (first xs)))","user":"561aab66e4b053970a773b0a"},{"code":"(fn [lst no] (first (drop no lst)))","problem":21,"user":"53961310e4b0b51d73faaedd"},{"code":"(fn nnth [v n]\n  (if (= n 0)\n    (first v)\n    (nnth (rest v) (- n 1))\n  )\n)","problem":21,"user":"4eef0828535d305ff5cb7f18"},{"problem":21,"code":"#(last (take (inc %2) %1))  ;; the %1 and %2 are shorthand for 1st and 2nd args to anonymous function. % == %1","user":"5962af8ce4b066ee0a44b0b8"},{"problem":21,"code":"(fn [list x]\n  (->> list\n       (take (inc x))\n       (last)))","user":"54fce8bde4b07d26eda61d30"},{"code":"(fn [x y]\n  (if (= 0 y)\n    (first x)\n    (recur (next x) (dec y))))","problem":21,"user":"4ec6688d535d6d7199dd36cc"},{"code":"#(loop [n %2 l %1] (if (= n 0) (first l) (recur (dec n) (rest l))))","problem":21,"user":"4f5c78e5e4b0030a34fb2b25"},{"problem":21,"code":"(fn [l th] \n  (loop [th th\n                  cur 0\n                  l l]\n  (if (= cur th)\n    (first l)\n    (recur th (inc cur) (rest l))\n\t)\n  )\n  )","user":"55923ef7e4b0604b3f94d58a"},{"code":"(fn [s, index]\n   (if (= index 0)\n       (first s)\n       (recur (rest s) (- index 1))))","problem":21,"user":"5048202fe4b0ec70b3ef8d9a"},{"code":"(fn\n    [seq pos]\n    (if (zero? pos)\n        (first seq)\n        (recur (rest seq) (dec pos))))","problem":21,"user":"4f4daa4ae4b03ad3f0c10cac"},{"code":"(fn neme [x n] (if (zero? n)\n                 (first x)\n                 (neme (rest x) (- n 1))))","problem":21,"user":"5263dca8e4b03e8d9a4a70bd"},{"code":"(fn n-th [c n]\n  (if (= n 0)\n    (first c)\n    (n-th (rest c) (dec n))))","problem":21,"user":"4ec4ac86535dcc7ae8597d64"},{"problem":21,"code":"(fn [c p] (first (drop p c)))","user":"5695b589e4b0dcc4269f412a"},{"problem":21,"code":"(fn whatever [ls, n]\n  ( if (= 0 n)\n       (first ls)\n       (recur  (rest ls) (- n 1))   \n))","user":"5b113f20e4b0cc2b61a3be2c"},{"code":"(fn [li ix] (first (keep-indexed #(if (= %1 ix) %2) li)))","problem":21,"user":"50d896eae4b01f0871336e6b"},{"problem":21,"code":"(fn[coll nt]\n     (if (= nt 0)\n         (first coll)\n         (recur (rest coll) (dec nt))))","user":"5f727d2fe4b02876ed9fd08f"},{"code":"(fn [xs i] (first (drop i xs)))","problem":21,"user":"50b3a715e4b03ea88043356d"},{"problem":21,"code":"(fn d [s c]\n  (if (= c 0)\n    (first s)\n    (d (rest s) (dec c)))\n)","user":"5881d1c2e4b0f1effa3b7644"},{"problem":21,"code":"#(loop[m %1, i %2] (if (= 0 i) (first m) (recur (rest m) (dec i))))","user":"541619e8e4b01498b1a719f9"},{"problem":21,"code":"(fn [x n] \n  (loop [a x b n]\n    (if (= 0 b)\n      (first a)\n      (recur (rest a) (- b 1)))))","user":"58bd219be4b0888cdc949d29"},{"code":"(fn getN [x n & {:keys [curN] :or {curN 0}}]\n    (if (= n curN)\n        (first x)\n    (getN (rest x) n :curN (inc curN))))","problem":21,"user":"5079fd71e4b08327cd804a66"},{"code":"(fn [l idx] (last (take (+ idx 1) l)))","problem":21,"user":"4e340525535deb9a81d77f27"},{"problem":21,"code":"(fn [l n]\n  (loop [l l\n         n n]\n    (if(= n 0)\n    (first l)\n    (recur (rest l) (dec n)))))","user":"54297741e4b01498b1a71b39"},{"problem":21,"code":"(fn [s n]\n  (loop [elems s\n         c     0]\n    (if (= c n)\n    \t(first elems)\n    \t(recur (rest elems)\n               (+ c 1)))))","user":"5cc7073de4b0ccb06196282e"},{"problem":21,"code":"(fn [myseq n]\n  (if (= n 0) \n    (first myseq)\n    (recur (rest myseq) (- n 1) )\n    ))","user":"5a2185a4e4b0ff51aa4b32b0"},{"code":"(fn [xs a] (if (= a 0) (first xs) (recur (rest xs) (- a 1))))","problem":21,"user":"4ed2a92b535d44c135fd68dc"},{"problem":21,"code":"(fn [l i] (first (nthrest l i )))","user":"5776385fe4b0979f89651632"},{"code":"(fn ! [x y]\n  (if (= y 0)\n    (first x)\n    (! (rest x) (dec y))))","problem":21,"user":"523eb110e4b057c4b7cd0a67"},{"code":"(fn nthelm[lst, arg] (first(drop arg lst)))","problem":21,"user":"51b5e86ae4b0f094dd986fd2"},{"problem":21,"code":"(fn my-nth [coll n] (if (= n 0) (first coll) (last (take (+ n 1) coll))))","user":"573940e3e4b0cd1946bd106b"},{"code":"(fn [col n]\n  (if (= n 0)\n    (first col)\n    (recur (rest col) (- n 1))))","problem":21,"user":"4e80a7f3535db62dc21a62b0"},{"problem":21,"code":"(fn [alist index]\n  (loop [i index l alist]\n    (if (zero? i)\n      (first l)\n      (recur (- i 1) (rest l))\n      )))","user":"552592bee4b0ffed3738f90c"},{"problem":21,"code":"(fn el [list index]\n  (if (= index 0)\n    (first list)\n    (el (rest list) (dec index))))","user":"51a0370ae4b0b292b01ee3ef"},{"problem":21,"code":"(fn [coll x] \n   (loop [index 0\n          lefttoprocess coll]\n     (println [index coll])\n     (if (= index x)\n       (first lefttoprocess)\n       (recur (inc index) (rest lefttoprocess))\n      )\n     ))","user":"58d6caf5e4b03c36ff7e5975"},{"problem":21,"code":"(fn\n      [x n]\n      (loop [list x position 0]\n        (if (= position n)\n          (first list)\n          (recur (rest list)(inc position)))))","user":"55f1085ee4b06e875b46ce2d"},{"problem":21,"code":"(fn [a b] (if (> b 0) (recur (rest a) (dec b)) (first a)))","user":"55d354e0e4b0e31453f64a62"},{"code":"(fn my-nth [coll index]\r\n  (loop [coll coll\r\n         n index]\r\n    (if (zero? n)\r\n      (first coll)\r\n      (recur (rest coll) (dec n)))))","problem":21,"user":"4fe54ee8e4b0e8f79898fec3"},{"code":"(fn nthElement [xs, n] (if (= 0 n) (first xs) (nthElement (rest xs) (dec n))))","problem":21,"user":"50ed1ce7e4b01236b1d49839"},{"code":"(fn [x a]\r\n  (if(zero? a)\r\n    (first x)\r\n    (recur (rest x) (dec a))))","problem":21,"user":"4e81e29b535db62dc21a62bd"},{"problem":21,"code":"(fn [x ix] ((apply comp (cons first (repeat ix rest))) x))","user":"5e1dcdece4b0dc959400854c"},{"problem":21,"code":"(fn element-at [seq n]\n  (first (drop n seq)))","user":"55f1f0d1e4b06e875b46ce3b"},{"problem":21,"code":"#(let [x %1 n %2] (loop [x x n n] (if (= n 0) (first x) (recur (rest x) (dec n)))))","user":"5cb11a72e4b026601754b8c6"},{"code":"(fn [m i]\n  (loop [rm m\n         j 0]\n    (if (= i j) (first rm) (recur (next rm) (inc j)))))","problem":21,"user":"4fd1fa71e4b04c3a95aa0418"},{"problem":21,"code":"#(loop [xs % n %2] (if (> n 0) (recur (rest xs) (- n 1 )) (first xs) ))","user":"5509a23ee4b06e50f9beb11a"},{"code":"(fn [x y] (last (take  (inc y) x)))","problem":21,"user":"4ebc7b39535dfed6da9c6d85"},{"problem":21,"code":"#(loop [rem %1 i %2]\n    (if (= i 0)\n      (first rem)\n      (recur (rest rem) (dec i))))","user":"5614ebc5e4b05f002753dfbc"},{"problem":21,"code":"(fn [l n] \n  (if (zero? n) \n    (first l) \n    (recur (next l) (dec n))))","user":"5be4e6e8e4b0ed4b8aab4d06"},{"problem":21,"code":"(fn my-nth [seqr idx]\n  (if (= idx 0)\n    (first seqr)\n    (my-nth (rest seqr) (- idx 1))))","user":"554d48d3e4b00713264bd988"},{"code":"(fn ftf [sq n]\n  (if (= n 0)\n      (first sq)\n      (ftf (rest sq) (dec n))))","problem":21,"user":"4ea09749535d7eef308072a8"},{"problem":21,"code":"(fn [coll n]\n  (loop [col coll index n]\n    (if (= index 0) (first col)\n    (recur (drop 1 col) (- index 1))\n    )))","user":"59503c5de4b066ee0a44ae8e"},{"code":"(fn [col pos] ((vec col) pos))","problem":21,"user":"527c045fe4b03e8d9a4a75a8"},{"problem":21,"code":"(fn [seq_ idx] (last (take (inc idx) seq_)))","user":"588f500ae4b00487982d51a4"},{"code":"(fn [theseq n] \n  (loop [counter 0 firstel (first theseq) restseq (rest theseq)]\n      (if (= n counter)\n         firstel\n         (recur (+ 1 counter) (first restseq) (rest restseq)))))","problem":21,"user":"4ef78c97535dced4c769f256"},{"code":"(fn [a n]\n  (if (zero? n)\n    (first a)\n    (recur (rest a) (- n 1))))","problem":21,"user":"529b5301e4b02ebb4ef7509f"},{"problem":21,"code":"(fn aaa\n  [llist n]\n  (if (= n 0)\n    (first llist)\n    (aaa (drop 1 llist) (- n 1))))","user":"595bc925e4b066ee0a44afe2"},{"code":"(fn n_th [s n]\n  (first (reverse (take (+ n 1) s))))","problem":21,"user":"5074b97ae4b054001656acd6"},{"code":"(fn nth-element [coll n] \n  (if (= n 0)\n      (first coll)\n      (nth-element (rest coll) (- n 1))))","problem":21,"user":"4f036fad535dcb61093f6ac7"},{"problem":21,"code":"(fn [x, pos] (get (vec x) pos))","user":"5672f58fe4b05957ce8c611a"},{"code":"(fn nt [x n] (first (drop n x)))","problem":21,"user":"53504a7de4b084c2834f4ad9"},{"code":"(fn nthelem [l n]\n  (if (= n 0)\n      (first l)\n      (nthelem (rest l) (- n 1))))","problem":21,"user":"4ff355a1e4b0678c553fc34d"},{"problem":21,"code":"(fn my-nth\n    [collection cardinality]\n      (if (= cardinality 0)\n          (first collection)\n          (my-nth (rest collection) (- cardinality 1))))","user":"5a47e8ade4b05d388ecb6b5f"},{"code":";(fn [coll n] \r\n;  (\r\n;    (apply comp (cons first (repeat n rest))) \r\n;  coll)\r\n;)\r\n\r\n#(get (vec %) %2)","problem":21,"user":"4de27757535d08e6dec9fdea"},{"problem":21,"code":"#(last ( take (inc %2) %1))","user":"59131299e4b0163c97b36ef9"},{"problem":21,"code":"(fn nth-seq[seqs n] (first (drop n seqs)))","user":"58e256e1e4b005f69f193c90"},{"problem":21,"code":"(fn [sq n]\n  (loop [i 0, left sq]\n    (if (= n i)\n      (first left)\n      (recur (inc i) (rest left))\n    )\n  )\n)","user":"5b59b89be4b02d533a91bd7d"},{"problem":21,"code":"(fn foo [x y]\n   (if (= y 0)\n      (first x)\n      (foo (rest x) (- y 1))\n     ))","user":"55dc1a8ee4b050e68259b3a9"},{"code":"(fn ff [s n] (if (<= n 0) (first s) (ff (rest s) (dec n))))","problem":21,"user":"5231c38fe4b0e2e8de81d1f8"},{"problem":21,"code":"(fn this [x y]          \n  (cond \n   (= 0 y) (first x)\n   :else (this (rest x) (dec y)))\n  )","user":"59165082e4b09b4ee5954b88"},{"code":"(fn wuqian-nth [s n]\n  (if (= 0 n)\n    (first s)\n    (wuqian-nth (rest s) (dec n))))","problem":21,"user":"52b9cd85e4b07a9af57922c4"},{"code":"(fn [seq n]\n  (if (= n 0) \n    (first seq)\n    (recur (rest seq) (dec n))))","problem":21,"user":"51f297a3e4b0210f90e74552"},{"code":"#(loop [lst %1, n 0] \n  (if (= n %2) (first lst)\n    (recur (rest lst) (inc n))))","problem":21,"user":"504f57c7e4b0a02f9cffde71"},{"problem":21,"code":"(fn[input-list n]\n        (loop [cnt n tmp-list input-list]\n              (if (zero? cnt)\n                  (first tmp-list)\n                (recur (dec cnt) (rest tmp-list)))))","user":"592b7269e4b072a2710fcf3f"},{"problem":21,"code":"(fn funk [x y]\n  (if (= y 0)\n    (first x)\n  \t(funk (rest x) (- y 1))))","user":"53e73fe3e4b036ad0777e478"},{"problem":21,"code":"(fn [col idx] (last (take (+ idx 1) col )))","user":"587cac15e4b01531a375eb23"},{"code":"(fn [s x] ((vec s) x))","problem":21,"user":"4e58ef07535d8a8b8723a299"},{"code":"(fn [array n]\n  (if (= n 0)\n    (first array)\n    (recur (next array) (- n 1))))","problem":21,"user":"51c3130de4b0d204dbe2ca31"},{"code":"(fn f[x y](first (nthnext x y)))","problem":21,"user":"51618519e4b009fba0926e35"},{"problem":21,"code":";(fn [x n]\n;  (if (zero? n)\n;    (first x)\n;    (recur (next x) (dec n))))\n\n#(first (drop %2 %1))","user":"5f6a583ae4b02876ed9fd046"},{"code":"(fn [l, i] (last (take (inc i) l)))","problem":21,"user":"4f18f65d535d64f603146462"},{"problem":21,"code":"(fn [l n & {:keys [c] :or {c 0}}]\n  (if (= n c)\n    (first l)\n    (recur (rest l) n {:c (inc c)})))","user":"58ebd6b3e4b056aecfd47d4c"},{"problem":21,"code":"(fn [x, n] \"documentation\" (let [c (count (vec x))] (if (< c n) nil ((vec x) (- c (- c n))))))","user":"5800f46ce4b0a837a8b30c49"},{"code":"(fn [s i]\n  (first (drop i s)))","problem":21,"user":"4ff9d4e5e4b0678c553fc3b0"},{"problem":21,"code":"(fn [x n]\n  (if (= 0 n)\n    (first x)\n    (recur (rest x) (- n 1))))","user":"5c784248e4b0fca0c162281f"},{"code":"(fn [c n] (if (= n 0) (first c) (recur (rest c) (dec n))))","problem":21,"user":"52a503e4e4b0c58976d9abe1"},{"code":"(fn [x n] (loop [a x b n] (if (zero? b) (first a) (recur (rest a) (dec b)))))","problem":21,"user":"4dea9fae535d08e6dec9fe02"},{"problem":21,"code":"(fn [coll pos]\n  (loop [procurados coll\n         ponteiro 0]\n    (if (= ponteiro pos)\n      (first procurados)\n      (recur (rest procurados) (inc ponteiro)))))","user":"55f3979ee4b06e875b46ce60"},{"problem":21,"code":"(fn\n  [coll n]\n  (loop [new-coll coll counter n]\n    (if (= counter 0)\n      (first new-coll)\n      (recur (rest new-coll) (dec counter)))))","user":"5d370811e4b01671435dbd2d"},{"problem":21,"code":"(fn [x n]\n  (loop [x x i 0]\n    (if (== i n)\n      (first x)\n      (recur (rest x) (inc i)))))","user":"54764a8fe4b0c51c1f4d72a3"},{"problem":21,"code":"(fn find-nth [ls n] (if (> (count ls) (+ n 1))\n                      (find-nth (drop-last ls) n)\n                      (last ls)))","user":"5cafaa0fe4b026601754b89e"},{"code":"(fn [s i] \n  (if (zero? i)\n    (first s)\n    (recur (rest s) (dec i))\n    )\n  )","problem":21,"user":"5315d4bfe4b08068f379ed37"},{"code":"(fn [y x] (first (reverse (take (+ x 1) y))))","problem":21,"user":"504f7a05e4b0a02f9cffde8a"},{"problem":21,"code":"(fn [c i] \n  (loop [c c i i] \n    (if (= i 0)\n      (first c)\n      (recur (rest c) (dec i))\n    )\n  )\n )","user":"55fe5dfae4b00f4cabc57650"},{"problem":21,"code":"(fn [se i] (get (vec se) i))","user":"5686b0c0e4b0dcc4269f4056"},{"problem":21,"code":";(fn ntth [arr x] (if (> x 0) (ntth (rest arr) (dec x)) (first arr)))\n#(first (drop %2 %))","user":"5540fe42e4b0a04f7929950a"},{"code":"(fn ene [col indx]\n  (cond \n   (= indx 0 ) (first col)\n   :else (ene (rest col) (- indx 1))))","problem":21,"user":"50481d0de4b0ec70b3ef8d99"},{"problem":21,"code":"#(loop [i 0 coll %1] \n   (if (= %2 i)\n     (first coll)\n     (recur (inc i) (rest coll))))","user":"564054a9e4b08d4f616f5edf"},{"problem":21,"code":"(fn [xs n]\n  (loop [i 0\n         elements xs]\n    (if (= i n)\n      (first elements)\n      (recur (inc i) (rest elements)))))","user":"559564ece4b0c79f6e1db96a"},{"problem":21,"code":"(fn [x i] (get (into [] x) i))","user":"5595e038e4b0c79f6e1db971"},{"problem":21,"code":"(fn nth-e [l n]\n  (if (> n 0)\n    (nth-e (rest l) (- n 1))\n    (first l)))","user":"503777a4e4b0af0658af77ac"},{"problem":21,"code":"(fn [s, n] ((vec s) n))","user":"55c3149de4b0e31453f64987"},{"code":"(fn [l k] (if (zero? k) (first l) (recur (rest l) (dec k))))","problem":21,"user":"4f88942be4b033992c121c6a"},{"problem":21,"code":"(fn [xs n]\n  (if (= n 0)\n      (first xs)\n      (recur (rest xs) (dec n))\n   )\n )","user":"57b863dfe4b0fbc9809a27de"},{"problem":21,"code":"(fn [coll pos] (first (second (split-at pos (sequence coll)))))","user":"57ea2b2ae4b0bfb2137f5b40"},{"problem":21,"code":"(fn [coll index]\n  (first\n   (last\n    (split-at index coll))))","user":"5ccf125ce4b0ccb0619628c0"},{"code":"(fn [cols n] (last (take (+ n 1) cols)))","problem":21,"user":"5123b12be4b061b4c6f0e0b2"},{"code":"(fn [x,y] (get (vec x) y))","problem":21,"user":"4f563cfae4b0a7574ea7181b"},{"code":"(fn foo [xs n]\n  (if (= n 0) \n    (first xs)\n    (foo (rest xs) (dec n))))","problem":21,"user":"53800d99e4b06839e8705ebd"},{"problem":21,"code":"(fn [coll n]\n  (if (zero? n) (first coll)\n    (recur (rest coll) (- n 1))))","user":"53f053ebe4b0742d9025b0d3"},{"problem":21,"code":"(fn [x y]\n  (let [z (into [] x)]\n  (get z y)))","user":"5bd0cdd4e4b0e9689409ee43"},{"code":"(fn [l n]\n  (loop [ls l nn n]\n    (if (zero? nn)\n      (first ls)\n      (recur (rest ls) (dec nn)))))","problem":21,"user":"504e90bae4b069badc5a33b8"},{"problem":21,"code":"(fn [l, n] (first (drop n l) ) )","user":"548018efe4b0c51c1f4d7335"},{"problem":21,"code":"(fn [vals n] ((vec vals) n))","user":"5632365ce4b0bfe05bf1179d"},{"code":"(fn [x y] (first (filter #(= y (.indexOf x %)) x)))","problem":21,"user":"4e75500f535d7a570dd295c1"},{"problem":21,"code":"#(if (> %2 0) (recur (rest %1) (dec %2))(first %1))","user":"59406b94e4b069cdc2982bfd"},{"problem":21,"code":"(fn el [c n] (if (= n 0) (first c) (el (rest c) (- n 1))))","user":"56800ba1e4b0966858e4d8e8"},{"problem":21,"code":"(fn spin [l, n]\n   (if \n     (= n 0)\n     (first l)\n     (spin (rest l) (- n 1))))","user":"56069006e4b08b23635d3174"},{"problem":21,"code":"(fn n [l i]\n  (if (zero? i)\n    (first l)\n    (n (rest l) (dec i))))","user":"542a7c9be4b01498b1a71b41"},{"code":"(let [flip (fn [f] (fn [& args] (apply f (reverse args))))]\n (comp first (flip drop)))","problem":21,"user":"4eea4840535d93acb0a6689b"},{"code":"(fn getnth [x n] (if (= n 0) (first x) (getnth (rest x) (dec n))))","problem":21,"user":"52dc55fee4b09f7907dd13ce"},{"problem":21,"code":"(fn [sequ n] (first (drop n sequ)))","user":"548582eee4b0e286459a11ae"},{"problem":21,"code":"(fn sample [coll value]\n  (first (drop value coll))\n  )","user":"591f2e4ae4b09b4ee5954c44"},{"problem":21,"code":"(fn [coll n]\n (loop [x n items coll]\n   (if (zero? x)\n       (first items)\n       (recur (dec x) (rest items)))))","user":"54299d4be4b01498b1a71b3d"},{"code":"(fn tmp [l i] (if (= i 0) (first l) (tmp (rest l) (dec i))))","problem":21,"user":"53050c04e4b0d8b024fd3757"},{"code":"(fn [coll n]\n  (loop [remain coll i 0]\n\t(if (= n i)\n\t  (first remain)\n  \t  (recur (rest remain) (inc i)))))","problem":21,"user":"50e3cf55e4b01912b3285c45"},{"problem":21,"code":"(fn boom [l i] (last (take (+ i 1) l)))","user":"55327ad3e4b09218d5f44f7f"},{"problem":21,"code":"(fn mth [col index]\n        (get (vec col) index))","user":"548f05ace4b0e286459a122b"},{"problem":21,"code":"(fn [a-seq n]\n  (loop [a-seq a-seq n n]\n    (if (zero? n)\n    (first a-seq)\n    (recur (rest a-seq) (dec n)))))","user":"563d12f9e4b0bfe05bf11845"},{"code":"(fn [list index] \n  (loop [restOfList list \n         currentIndex 0] \n    (if (= index currentIndex) \n      (first restOfList) \n      (recur \n       (rest restOfList) \n       (inc currentIndex)))))","problem":21,"user":"529862dfe4b02ebb4ef75055"},{"problem":21,"code":"#(first \n  (drop %2 %1))","user":"5b631c35e4b0c6492753e72c"},{"problem":21,"code":"(fn [list index] (get (into [] list) index))","user":"5841872be4b089d5ab817e06"},{"code":"(fn [s n]\n  (if (= n 0) (first s) (recur (rest s) (- n 1))))","problem":21,"user":"4e6f7178535d5021c1a8961c"},{"problem":21,"code":"(fn fx [lst, idx] (if (= idx 0) (first lst) (fx (rest lst) (dec idx))))","user":"5522a795e4b0882d96d091a7"},{"code":"(fn nthelement [x y] ( if (== y  0) (first x) (nthelement (rest x)(- y 1) ) ) )","problem":21,"user":"4e8d5edd535d65386fec2134"},{"code":"(fn rec [x, y] ( if (= y 0) (first x) (rec (rest x) (- y 1) ) ) )","problem":21,"user":"4ee153f0535d10e5ff6f5357"},{"code":"(fn [coll n]\r\n  (if (> n (count coll))\r\n       nil\r\n      (loop [coll coll i 0]\r\n        (if (= i n) (first coll)\r\n                    (recur (rest coll) (inc i))))))","problem":21,"user":"4e18ed7a535d04ed9115e7f6"},{"problem":21,"code":"(fn my-nth [s x] \n  (if (zero? x)\n    (first s)\n    (my-nth (rest s) (dec x))))","user":"5889fed6e4b0f1effa3b7753"},{"code":"(fn nmth [src ind] ((vec src) ind))","problem":21,"user":"4fb0c8dde4b081705acca26d"},{"problem":21,"code":"(fn [coll pos]      \n      (if-not (pos? pos)\n        (first coll)\n        (recur (next coll) (dec pos))))","user":"53483a32e4b084c2834f4a57"},{"problem":21,"code":"#(if\n   (vector? %1)\n   (let [{x %2} %1] x)\n   (let [{x %2} (into [] %1)] x))","user":"549d7e16e4b0f3d1d8e70f96"},{"code":"(fn [lst n]\n  (loop [i 0 x lst]\n    (if (= i n)\n      (first x)\n      (recur (inc i) (rest x)))))","problem":21,"user":"4e739795535dff18050a9c75"},{"code":"#(loop [l %1, i 0, n %2]\n    (if (empty? l) nil\n      (if (= n i) (first l)\n        (recur (rest l) (+ 1 i) n))))","problem":21,"user":"4e57afc5535d8a8b8723a288"},{"code":"(fn [c i]\n  (if (= i 0) (first c) (recur (rest c) (dec i)))\n  )","problem":21,"user":"51631aeee4b055933a9ca02a"},{"problem":21,"code":"(fn [items n]\n (first (drop n items)\n))","user":"5c1b82bce4b01240ff567211"},{"problem":21,"code":"(fn [list index] (first (reverse (take (inc index) list))))","user":"561cb6cfe4b064ca9f4b169e"},{"problem":21,"code":"(fn f [x y] ( if (= 0 y) (first x) (f (rest x) (dec y))))","user":"55f25ae6e4b06e875b46ce43"},{"problem":21,"code":"(fn my-nth [L n]\n  (loop [my-list L\n         index n]\n    (if (= index 0)\n      (first my-list)\n      (recur (rest my-list) (- index 1)))))","user":"556238bce4b0c656e3ff17d3"},{"code":"(fn findNth [l,n] (second (take-nth (- n 0) l)))","problem":21,"user":"4f70d8e2e4b07046d9f4f000"},{"problem":21,"code":"(fn [list position] (last (take (inc position) list)))","user":"5a59a76fe4b05d388ecb6c98"},{"problem":21,"code":"(fn [t m]\n\n(loop [n m, s t]\n  \n  (if (> n 0)\n                                        (recur (dec n) (rest s))\n            \n            (first s)                                                                      \n                                        )))","user":"574803a1e4b009280f9f2b7d"},{"code":"(fn my-nth [y x](if (= x 0) (first y) (my-nth (rest y) (- x 1))))","problem":21,"user":"5342faf9e4b084c2834f4a16"},{"code":"(fn [a,n]\n  (if (= n 0)\n    ;then\n    (first a)\n    ;else\n    (recur (rest a) (dec n))\n  ) ; if\n) ; fn","problem":21,"user":"504e4ac2e4b0f6ff3350c49a"},{"code":"(fn [sequ n]\n  (loop [s sequ\n         i 0]\n    (if (= i n) (first s) (recur (rest s) (+ i 1)))))","problem":21,"user":"50da19bae4b0277ab115b3cd"},{"problem":21,"code":"(fn [c i] (last (take (+ i 1) c)))","user":"560e1703e4b05f002753df47"},{"problem":21,"code":"(fn [x i] (first (reverse (take (inc i) x))))","user":"5263f1a9e4b03e8d9a4a70c2"},{"problem":21,"code":"(fn [ls ind] (get (into [] ls) ind))","user":"53c6b3cae4b00fb29b2212a0"},{"problem":21,"code":"(fn [a b]\n  (loop [x a\n         i b]\n    (if (= i 0)\n      (first x)\n      (recur (rest x) (- i 1)))))","user":"55f7ca86e4b06e875b46ceb1"},{"code":"(fn foo [x y] (if (= 0 y) (first x) (foo (next x)(dec y)))   )","problem":21,"user":"4f4bd422e4b03ad3f0c10c7e"},{"problem":21,"code":";(fn [coll index]\n;  (get (into [] coll) index))\n\n(fn [coll n] (first (drop n coll)))","user":"5d0beecee4b0cc9c91588239"},{"problem":21,"code":"(fn [reihe nummer] (last (take (+ nummer 1) reihe)))","user":"57d261a8e4b0bd073c20237e"},{"problem":21,"code":"(fn [in-list idx]\n  (loop [lst in-list\n         i 0]\n    (if (= i idx)\n      (first lst)\n      (recur (rest lst) (+ 1 i)))))","user":"5461c402e4b01be26fd746a6"},{"problem":21,"code":"(fn [s n] \n ((fn [s index]\n   \t(if (= index n)\n      (first s)\n      (recur (rest s) (inc index)))) s 0))","user":"5fb7a87be4b08cb800c85b5f"},{"code":"(fn [seq1 n] (loop [i 0 seq2 seq1] (if (= i n) (first seq2) (recur (inc i) (rest seq2)))))","problem":21,"user":"538570cce4b06839e8705f03"},{"problem":21,"code":"#((vec %1) %2 )","user":"6065569ce4b069485764ddca"},{"problem":21,"code":"(fn myfunc [seqx position] (if (= position 0) (first seqx) (myfunc (rest seqx) (- position 1))))","user":"553d630ee4b0a04f792994e1"},{"problem":21,"code":"(fn [s n]\n  (loop [s s, i 0]\n    (if (= i n)\n      (first s)\n      (recur (rest s) (inc i)))))","user":"5a481e05e4b05d388ecb6b64"},{"code":"(fn element-at[x,i] (if (> i 0) \n    (element-at (next x) (- i 1)) \n    (first x)))","problem":21,"user":"4fce75cfe4b03432b189f400"},{"code":"(fn [x s] (last (take (inc s) x)))","problem":21,"user":"4ff92cd2e4b0678c553fc3a5"},{"problem":21,"code":"(fn [items, index] (.get items index))","user":"57c93c50e4b05aa3c4741d2b"},{"problem":21,"code":"(fn [coll n]\n  (loop [i 0\n         coll coll]\n    (if (= i n)\n      \t(first coll)\n        (if (seq (rest coll)) (recur (inc i) (rest coll))))))","user":"5764457ae4b0994c1922fbf3"},{"problem":21,"code":"(fn [s n]\n  (if (= 0 n)\n    (first s)\n    (recur (drop 1 s) (dec n))\n  )\n)","user":"5a5be4ebe4b0512ff01cd912"},{"code":"(fn [s n]\n    (loop [cur-s s\n           cur-n n]\n      (if (zero? cur-n)\n        (first cur-s)\n        (do\n          (when (empty? cur-s) (throw (Exception. \"Index out of bounds for seq\")))\n          (recur (rest cur-s) (dec cur-n))) )))","problem":21,"user":"501f36dde4b0cb6ebc0a42e4"},{"problem":21,"code":"#(loop [n 0 a %1] (if (= n %2) (first a) (recur (inc n) (rest a))))","user":"5a3e0e44e4b0447ef91cc5ad"},{"code":"#(if (= %2 0) (first %) (recur (rest %) (dec %2)))","problem":21,"user":"4df20dda535d08e6dec9fe23"},{"code":"(fn [xs n]\n  (first (reverse (take (inc n) xs))))","problem":21,"user":"4ee82ce9535d93acb0a6687a"},{"problem":21,"code":"(fn get-nth [let idx]\n  (if (= idx 0)\n    (first let)\n    (get-nth (rest let)\n             (dec idx))))","user":"5600d4ece4b04bb52996e173"},{"problem":21,"code":"(fn [& args] (first (drop (last args) (first args))))","user":"55ea4d4ae4b0121d4835fdac"},{"problem":21,"code":"#(loop [xs %1\n        n %2]\n   (if (= n 0)\n     (first xs)\n     (recur (rest xs) (- n 1))))","user":"595fd721e4b066ee0a44b06e"},{"problem":21,"code":"(fn [c i] (last (take (inc i) c)))","user":"57037a23e4b08d47c97781f2"},{"code":"(fn [s i]\n  (if (zero? i) \n     (first s)\n     (recur (rest s) (- i 1))))","problem":21,"user":"52d709fce4b09f7907dd136d"},{"problem":21,"code":"(fn mth [s m]\n  (if (> m 0)\n    (mth (rest s) (- m 1))\n    (first s)))","user":"59d3549ce4b0ef0a1e9b5bb2"},{"problem":21,"code":"(fn [x n](first ( drop n x)))","user":"5b9d3913e4b0c0b3ffbd4b37"},{"problem":21,"code":"(fn enty [s n] (first (drop n s)))","user":"53ee7f2ee4b0d648e757f4cf"},{"code":"(fn [s n] (if (= n 0) (first s) (recur (next s) (dec n))))","problem":21,"user":"4eb27fad535d7eef3080734a"},{"code":"(fn [coll n]\n        (loop [c coll n n]\n              (if (or (= n 0)\n                      (nil? c))\n                  (first c)\n                (recur (next c)\n                       (dec n)))))","problem":21,"user":"51852961e4b0da5a5be3babb"},{"problem":21,"code":"(fn [lst i] \n       (first (drop i lst)))","user":"5f77b99fe4b02876ed9fd0bc"},{"problem":21,"code":"(fn return-nth [x n] (if (= n 0) (first x) (return-nth (rest x) (- n 1)))\n  )","user":"5759e317e4b02ea114799330"},{"problem":21,"code":"(fn [coll ele] (first (drop ele coll)))","user":"586b6753e4b01531a375e956"},{"problem":21,"code":"(fn foo [args n]\n  (if (= n 0)\n    (first args)\n    (foo (rest args) (- n 1))))","user":"5c92b9e6e4b048ec896c5a0d"},{"problem":21,"code":"(fn foo [xs n] \n   (if (> n 0) \n      (foo (rest xs) (dec n))\n      (first xs)))","user":"559647ebe4b0c79f6e1db977"},{"problem":21,"code":"(fn nth-without-nth\n  [sequence-in position]\n  ((get {0 #(first %) 1 #(first (next %)) 2 #(first (next (next %)))} position) ; first second or third now handed to next line\n   sequence-in))","user":"53de4bdae4b0d874e779ae32"},{"code":"#(if (= 0 %2) \n  (first %) \n  (recur (rest %) (- %2 1)))","problem":21,"user":"50336c6be4b0c6c1199c710f"},{"problem":21,"code":"(fn prob21\n  [coll n]\n  ((comp last first) (partition (inc n) coll)))","user":"5d2e5065e4b01671435dbcae"},{"code":"(fn [coll n]\n  (loop [c coll\n         cnt 0]\n    (if (= cnt n)\n      (first c)\n      (recur (rest c) (+ cnt 1)))))","problem":21,"user":"5252ee94e4b0541d1855b8db"},{"problem":21,"code":"(fn [sequence element] (first (drop element sequence)))","user":"57f2776ee4b0511f1d294ded"},{"problem":21,"code":"(fn me [col n]\n\t(if(zero? n)\n  \t\t(first col)\n  \t\t(me (rest col) (- n 1))))","user":"553e2cc0e4b0a04f792994e9"},{"code":"(fn nthitem [s n] (last (take (+ 1 n) s)))","problem":21,"user":"4eb80264535d7eef3080737a"},{"problem":21,"code":"(fn [l a] ((fn d [l2 n] (if (<= n 0) (first l2) (d (rest l2) (- n 1) ))) l a))","user":"5815b957e4b0f478707a0641"},{"code":"(fn [x n] (last (take (+ n 1) x)) )","problem":21,"user":"52537b67e4b0541d1855b8f9"},{"problem":21,"code":"#(-> (take (+ 1 %2) %1)\n     last)","user":"55129632e4b06e50f9beb1aa"},{"problem":21,"code":"(fn [x, t] (.get x t))","user":"571c89b5e4b0145328a7626d"},{"problem":21,"code":"(fn get-n [items n]\n    (if (= n 0)\n     (first items)\n     (get-n (rest items) (dec n))\n    )\n  )","user":"5aa998c6e4b0d174b936c8e5"},{"code":"(fn [inlist n]\n  (if (= n 0)\n    (first inlist)\n    (recur (rest inlist) (- n 1))))","problem":21,"user":"4fc50bcbe4b081705acca375"},{"code":"(fn[col n] (first (nthnext col n)))","problem":21,"user":"5213caeee4b0a98dd8fc4bd5"},{"problem":21,"code":"(fn [xs n]\n  (loop [xs xs\n         n n]\n    (if (= n 0)\n      (first xs)\n      (recur (rest xs) (dec n))\n    )))","user":"4e6ffaa3535d5021c1a8962e"},{"problem":21,"code":"#(loop [coll %1\n        i 0]\n   (if (= i %2)\n     (first coll)\n     (recur (rest coll)\n            (inc i))))","user":"5bef3e88e4b0a6d31fed213f"},{"code":"(fn myF [lst idx]\n        (cond\n         (= idx 0) (first lst)\n         :else (recur (rest lst) (- idx 1 ))))","problem":21,"user":"534f3c57e4b084c2834f4ac7"},{"code":"#(first (subvec (vec %) %2))","problem":21,"user":"4ec53f8c535d6d7199dd368b"},{"problem":21,"code":"(fn [col arg]\n    (loop [innercol col\n           idx arg]\n      (if (= idx 0)\n        (first innercol)\n        (recur (rest innercol) (dec idx)))))","user":"554a75c9e4b0a04f79299575"},{"code":"(fn f4 [x y]\n  (first (drop y x)))","problem":21,"user":"535aee3be4b04ce2eb3ed2aa"},{"problem":21,"code":"(fn [col idx]\n    (last (take (inc idx) col)))","user":"5c222b7de4b07e362c230588"},{"problem":21,"code":"(fn [c n] (first (second (split-at n c))))","user":"4f0366b0535dcb61093f6aa9"},{"code":"(fn nth-elem [seq-nce n]\n  (if (= n 0)\n    (first seq-nce)\n    (nth-elem (rest seq-nce) (- n 1))))","problem":21,"user":"51aa2ad6e4b04e3dc0c27b20"},{"problem":21,"code":"(fn nth-element [seq n]\n  (if (= n 0)\n    (first seq)\n    (nth-element (rest seq) (dec n))))","user":"5812eb8fe4b0f478707a0602"},{"problem":21,"code":"(fn f [l n] (if (= n 0)\n            (first l)\n            (f (rest l) (- n 1))))","user":"559248c0e4b0604b3f94d58b"},{"problem":21,"code":"(fn f [xs, n]\n  (if (= n 0)\n    (first xs)\n    (f (rest xs) (dec n))))","user":"55507a1ae4b00713264bd9a7"},{"problem":21,"code":"(fn get_nth [x, n]\n  (if (= 0 n) (first x) (get_nth (rest x) (- n 1))))","user":"599a033ce4b07157cc8dab04"},{"problem":21,"code":"(fn mth [xs m] (if (= m 0) (first xs) (mth (rest xs) (- m 1))))","user":"5c66e69fe4b0fca0c16226b0"},{"code":"(fn fnd [v n] (if (= n 0) (first v) (fnd (rest v) (dec n))))","problem":21,"user":"4f566178e4b0a7574ea71820"},{"problem":21,"code":"#(first (drop %2 %))\n\n;#((apply comp \n;    (cons first\n;        (repeat %2 rest))) \n;  %)","user":"54d341f7e4b0e8a36923e603"},{"code":"(fn [lst el-pos]\n  (loop [cnt 0 lst lst]\n    (if (= el-pos cnt)\n      (first lst)\n      (recur (+ cnt 1) (rest lst)))))","problem":21,"user":"4f0379ef535dcb61093f6ae7"},{"code":"(fn [s n]\n\t(loop [r s\n           c n]\n      (if-not (= c 0)\n        (recur (rest r) (- c 1))\n        (first r)\n        )\n      )\n  )","problem":21,"user":"52c45793e4b0c2d177d620d7"},{"problem":21,"code":"(fn [a or1]\n   (loop [el a cor 0]\n     (if (< cor or1) \n       (recur (rest el) (inc cor)) \n       (first el))))","user":"57c7cef5e4b05aa3c4741d0d"},{"problem":21,"code":"(fn [lst n]\n  (if (<= n 0)\n    (first lst)\n    (recur (rest lst) (dec n))))","user":"5fad8efee4b08cb800c85af3"},{"code":"(fn [S N]\n  (if (vector? S) (S N)\n    ((vec S) N)))","problem":21,"user":"4fda016ae4b05e33b9224f42"},{"problem":21,"code":"(fn nth-elt [s n] (if (== n 0) (first s) (nth-elt (rest s) (- n 1))))","user":"5dee144ae4b093ff71727591"},{"problem":21,"code":"(fn [x dex]\n  (loop [y x i 0]\n    (if (= dex i) (first y) (recur (rest y) (+ i 1)))))","user":"5daae405e4b000c986472c44"},{"problem":21,"code":"(fn [coll dropnum] (first (drop dropnum coll)))","user":"5f42b77be4b0955706451fb0"},{"problem":21,"code":"(fn nth_element [xcoll ele]\n  (if (and (> ele -1) (< ele (count xcoll)))\n    (loop [coll xcoll\n           acc 0]\n      (if (= acc ele)\n        (first coll)\n        (recur (next coll) (inc acc))))\n    \"IndexOutOfBoundsException\" ))","user":"56038f34e4b04bb52996e1bc"},{"problem":21,"code":"(fn[y x](if (> x 0) (recur (rest y) (- x 1)) (first y)))","user":"54d0cedde4b0e8a36923e5d2"},{"code":"(fn f[coll n]\n    (if (pos? n)\n      (f (rest coll) (dec n))\n      (first coll)))","problem":21,"user":"4fbbae0fe4b081705acca2eb"},{"problem":21,"code":"(fn [s x] \n  (last (take (inc x) s))\n\n  )","user":"54ca35c6e4b057c6fda3a254"},{"problem":21,"code":"(fn [list num] (first (drop num list)))","user":"5d1b2a1ee4b02ea6f0fb6979"},{"code":"(fn [v idx] (loop [l v, pos 0] \n  (if-not (= pos idx) \n    (recur (rest l) (+ 1 pos)) \n    (first l))))","problem":21,"user":"4e31c695535deb9a81d77f20"},{"problem":21,"code":"(fn [[& a] n]\n  (last (take (+ 1 n) a)))","user":"56eb5c76e4b04a395b9a0422"},{"problem":21,"code":"(fn nth0 [xs i] (if (= i 0) (first xs) (nth0 (rest xs) (dec i))))","user":"54d7ed8de4b0a52adc2e2034"},{"code":"(fn [x n]\n  (.get x n)\n  )","problem":21,"user":"51e3272ce4b0c611d6113e40"},{"code":"(fn [stuff n] (loop [stuff stuff n n] (if (= n 0) (first stuff) (recur (rest stuff) (- n 1)))))","problem":21,"user":"520a6ce2e4b01da9d47a99da"},{"problem":21,"code":"(fn[aa n] (first(drop n aa)))","user":"553bdeb3e4b09218d5f4500c"},{"problem":21,"code":"(fn my-nth[x y] (\n          if (= y 0)\n          \t\t(first x)\n          \t\t(my-nth (rest x) (- y 1))\n                ))","user":"548485f5e4b0e286459a119f"},{"code":"(fn[col i]\n            (loop [v 0 ret col]\n              (if (== v i)\n                (first ret)\n                (recur (inc v) (rest ret))\n              )))","problem":21,"user":"4fc6e1a8e4b0ee37620e181d"},{"problem":21,"code":"(fn [xs n] \n  (first (drop n xs)))","user":"601c39eee4b0bf4ca6b10937"},{"problem":21,"code":"(fn [n a]\n      ((fn f [m b]\n         (println m)\n         (if (= b 0)\n           (first m)\n           (f (rest m) (- b 1))))\n       n a))","user":"5df94f73e4b0a607a9a45cb6"},{"problem":21,"code":"(fn nth-element [coll n] (let [n (- n 1)\n                                  rest-seq coll]\n                              (if (>= n 0)\n                                (recur (rest rest-seq) n)\n                                (first rest-seq))))","user":"5386f784e4b06839e8705f17"},{"problem":21,"code":"(fn [seq, i]\n\t(.get seq i))","user":"5bff66c0e4b0bdcf453d1628"},{"code":"(fn [c n]\n  (if (= n 0)\n    (first c)\n    (recur (rest c) (- n 1))))","problem":21,"user":"521af852e4b0c4ef0be8301c"},{"code":"(fn [xs n] (.get xs n))","problem":21,"user":"515c9ad7e4b069911535cf14"},{"problem":21,"code":"(fn get-x-element\n  [my-seq x]\n  (loop [remaining my-seq\n         iteration 0]\n    (if (= x iteration)\n      (first remaining)\n      (recur (rest remaining) (inc iteration)))))","user":"548f19a8e4b0e286459a1231"},{"problem":21,"code":"(fn [var n]\n  (first (drop n var)))","user":"550b4ea2e4b06e50f9beb13e"},{"problem":21,"code":"(fn my-nth [lst n] \n  (loop [index 0 remaining-list lst]\n    (if (= index n) \n      (first remaining-list)\n      (recur (inc index) (rest remaining-list)))))","user":"55f33f0ce4b06e875b46ce59"},{"code":"(fn [col n] (get (vec col) n))","problem":21,"user":"4fda0678e4b05e33b9224f44"},{"code":"(fn [coll n](first (nthnext coll n)))","problem":21,"user":"4df4b266535d08e6dec9fe2f"},{"code":"(fn[colls n](last (take (inc n) colls)))","problem":21,"user":"52e614b8e4b09f7907dd1469"},{"problem":21,"code":"(fn enth [l n] (cond\n                (= n 0) (first l)\n                :else (enth (rest l) (- n 1))))","user":"555f728de4b0a2eb076a39c8"},{"problem":21,"code":"#(loop [x %1 n %2] (if (zero? n) (first x) (recur (rest x) (dec n))))","user":"5cd4c3dae4b0ccb061962925"},{"problem":21,"code":"(fn nseq [s n]\n (if (= n 0) (first s) (nseq (rest s) (- n 1)))\n)","user":"5e073d79e4b0978307768fb1"},{"code":"(fn [l n]\n  (if (zero? n)\n    (first l)\n    (recur (rest l) (- n 1))))","problem":21,"user":"4fc588bee4b0ee37620e17fa"},{"problem":21,"code":"(fn [_list _nth] \n  (if (= _nth 0)\n    (first _list)\n    (recur (rest _list) (dec _nth))\n  )\n)","user":"541c07e7e4b01498b1a71a6f"},{"code":"(fn [ %1 %2]                                                                                                                                          \n       (loop [xs %1 is %2]                                                                                                                                   \n            (if (= is 0)                                                                                                                                     \n              (first xs)                                                                                                                                     \n              (recur (rest xs) (dec is)))))","problem":21,"user":"52a3c66ce4b04e0c58e87c04"},{"problem":21,"code":"(fn get-n [x y]\n\t\t(if (= (count x) (+ y 1))\n\t\t\t(last x)\n\t\t\t(get-n (butlast x) y)\n\t\t)\n)","user":"5658c25fe4b00d3155796110"},{"code":"(fn my-nth [x n] \n  (if (= n 0)\n    (first x)\n    (my-nth (rest x) (- n 1))))","problem":21,"user":"52526161e4b0541d1855b8a6"},{"code":"(fn [coll x] (.get coll x))","problem":21,"user":"4f9fb08ae4b0dcca54ed6d3c"},{"problem":21,"code":"(fn [seq n] (get (vec seq) n))","user":"54706d31e4b00cfc9eacc1b7"},{"code":"(fn getnth\n  [arr n]\n  (if (zero? n)\n    (first arr)\n    (getnth (rest arr) (- n 1))))","problem":21,"user":"52b4d8fae4b0c58976d9ad33"},{"code":"(fn [s n]\n  (loop [s s, i 0]\n    (if (= n i)\n      (first s)\n      (recur (rest s) (+ 1 i)))))","problem":21,"user":"538cc422e4b0b51d73faae63"},{"problem":21,"code":"(fn getter [x y]\n  (if\n    (zero? y)\n    (first x)\n    (getter (rest x) (dec y))))","user":"57b4b3a0e4b0fbc9809a27a3"},{"problem":21,"code":"(fn mynth [L n] (if (= n 0) (first L) (mynth (rest L) (dec n))))","user":"569c07b9e4b0542e1f8d145d"},{"problem":21,"code":"#(->> %1 (drop %2)(first))","user":"4f03e60d535dcb61093f6b7a"},{"problem":21,"code":"(fn my-nth\n  [s n]\n  (loop [ss s\n         i 0]\n    (if (= i n)\n      (first ss)\n      (recur (rest ss) (inc i)))))","user":"563f1493e4b08d4f616f5ecf"},{"code":"(fn[y x](first (drop x y)))","problem":21,"user":"4fba83e7e4b081705acca2e1"},{"problem":21,"code":"(fn [x n] (get (into [] x) n))","user":"58ad4349e4b0ebc645576c9d"},{"code":"(fn [coll index]\r\n    (loop [l coll i 0 c index]\r\n        (if (= i c) (first l) (recur (rest l) (inc i) c))))","problem":21,"user":"4defd021535d08e6dec9fe13"},{"problem":21,"code":"#(if (= %2 0) \n   \n   (first %1) \n   \n   (recur (rest %1) (dec %2))\n)","user":"5b3189e5e4b025bcb146f308"},{"problem":21,"code":"(fn [x y] (first (drop (- (dec (count x)) y) (reverse x))))","user":"555b5ae4e4b0deb715856e4f"},{"code":"(fn[x y] (first (drop y x)))","problem":21,"user":"4e932523535dbda64a6f6b09"},{"code":"#(loop [x %2, seq %] (if (= x 0) (first seq) (recur (dec x) (rest seq))))","problem":21,"user":"5078d366e4b08327cd804a5b"},{"problem":21,"code":"(fn n [xs number] (\n                   if (= number 0)\n                      (first xs)\n                      (n (rest xs) (- number 1)))\n  )","user":"556de4dfe4b09a3098a5250c"},{"problem":21,"code":"(fn [list num] (if (= num 0) (first list) (recur (rest list) (- num 1))))","user":"5710140fe4b09c608db7042e"},{"problem":21,"code":"(fn \n  [coll n]\n  (first (drop n coll)))","user":"5e614a9ee4b0fd0acd15868e"},{"problem":21,"code":"(fn [a-seq n]\n  (if (zero? n)\n    (first a-seq)\n    (recur (rest a-seq) (dec n))))","user":"544e9022e4b0e3978000698b"},{"problem":21,"code":"(fn nth-seq [x y] (last (take (inc y) x)))","user":"542dc7c7e4b0dad94371f2bd"},{"problem":21,"code":"(fn [col n]\n\t(if (zero? n) \n      (first col)\n      (recur (rest col) \n             (- n 1))))","user":"54848141e4b0e286459a119e"},{"problem":21,"code":"(fn [s, n] \n  (if (= (count s) (+ n 1)) \n    (last s) \n    (recur (drop-last s) n)))","user":"58e039d3e4b0a4d5acaab734"},{"problem":21,"code":"(fn [sq ind]\n  (if (= ind 0)\n    (first sq)\n    (recur (rest sq) (dec ind))))","user":"59d75489e4b0ef0a1e9b5c31"},{"problem":21,"code":"(fn nnth [ar x] (get (vec ar) x))","user":"545d5c3be4b01be26fd7466d"},{"problem":21,"code":"(fn [col idx] \n  (loop [x 0 mcol col] \n    (if (< x idx) \n      (recur (inc x) (rest mcol)) \n      (first mcol))))","user":"54357066e4b0b6b47310fcfd"},{"problem":21,"code":"(fn nn [n i] (if (= 0 i) (first n) (nn (rest n) (dec i))))","user":"5873d7a2e4b01531a375ea3f"},{"problem":21,"code":"(fn [l n] ((vec l) n ))","user":"5534795ee4b09218d5f44f9e"},{"problem":21,"code":"(fn [coll pos] \n  (loop [n 0 r coll] (if (= n pos) (first r) \n                       (recur (inc n) (rest r)))))","user":"5ea970d1e4b00a66d4a951c6"},{"problem":21,"code":"(fn [coll n] (first(reverse(take (+ n 1) coll))))","user":"5f77d470e4b02876ed9fd0be"},{"problem":21,"code":"(fn [x y] \n  (loop [a 0\n         b x]\n\t(if (= a y)\n    \t(first b)\n      \t(recur (+ a 1) (rest b)))))","user":"5d371b6fe4b01671435dbd31"},{"code":"(fn getN [x n] \n  (if (= 0 n)\n    (first x)\n    (getN (rest x) (- n 1) )\n  )\n)","problem":21,"user":"525cc137e4b0cb4875a45d46"},{"code":"(fn my-nth [x, n]\n  (if (= n 0)\n    (first x)\n    (my-nth (rest x) (dec n))))","problem":21,"user":"52f4580de4b05e3f0be25f21"},{"code":"(fn [xs N]\n  (loop [xs xs\n         i N]\n    (cond (> i 0) (recur (rest xs) (dec i))\n          (= i 0) (first xs)\n          :else nil)))","problem":21,"user":"511442d0e4b0e9c109bb74d5"},{"problem":21,"code":"(fn [list n]\n  (last (take (+ n 1) list)))","user":"575c3592e4b02ea11479936c"},{"code":"(fn [seq n]\n  (if (= 0 n)\n      (first seq)\n      (recur (rest seq) (- n 1))))","problem":21,"user":"4ee85476535d93acb0a6687c"},{"problem":21,"code":"(fn nth-element [xs n]\n  (if (empty? xs)\n    xs\n    (if (zero? n) (first xs) (nth-element (rest xs) (dec n)))))","user":"54fd93bbe4b07d26eda61d36"},{"problem":21,"code":"(fn my-test\n  [my-list n]\n    (if (= n 0) (first my-list)\n                (recur (rest my-list) (dec n))\n      )\n  )","user":"5a4cbba1e4b05d388ecb6b98"},{"code":"(fn[s n] (first (drop n s)))","problem":21,"user":"50431cbce4b034ff00315d1c"},{"problem":21,"code":"(fn [s n] (last (take(inc n)s)))","user":"5b8d01d7e4b0c0b3ffbd49ca"},{"problem":21,"code":"#(-> ((apply comp (repeat %2 rest)) %) first)","user":"57e3f709e4b0bfb2137f5aaf"},{"code":"(fn [list index]\n  (if (zero? index)\n      (first list)\n    (recur (rest list) (dec index))))","problem":21,"user":"4f8c4ee8e4b02e764a0a5194"},{"problem":21,"code":"(fn [collection counter] (if (zero? counter) (first collection) (recur (rest collection) (- counter 1))))","user":"561d7246e4b064ca9f4b16b1"},{"problem":21,"code":"(fn nthElement [pl n] \n (if (= n 0)\n   (first pl)\n   (nthElement (rest pl) (- n 1)\n               )\n   )\n  )","user":"548f3ee4e4b0e286459a1237"},{"code":"#(first(first(rest(split-at %2 %1))))","problem":21,"user":"4f4ec77ae4b03ad3f0c10cd0"},{"problem":21,"code":"(fn [x_list n] (first (reverse (take (+ 1 n) x_list))) )","user":"5ae71f14e4b0837691e92ca7"},{"code":"#(last (take (+ 1 %2) %))","problem":21,"user":"4f0333f6535dcb61093f6a77"},{"code":"#(get (vec %1) %2 \"XX\")","problem":21,"user":"4ea629da535d7eef308072e2"},{"code":"(fn nth-bz [block n]\n  (if (< 0 n)\n    (recur (next block) (dec n))\n    (first block)))","problem":21,"user":"526f0a68e4b03e8d9a4a7348"},{"code":"(fn elemAt [x,y] (if (= y 0) (first x) (elemAt (rest x) (- y 1))))","problem":21,"user":"4f11dea7535d64f603146425"},{"problem":21,"code":"(fn [%1 %2] (get (vec %1) %2))","user":"5c5b246ae4b01df32ab73286"},{"code":"(fn my-nth [coll n]\n  (if (= n 0)\n    (first coll)\n    (my-nth (rest coll) (- n 1))\n  )\n)","problem":21,"user":"4f40ccd9e4b0e243712b1fc0"},{"problem":21,"code":"(fn atn [s n]\n  (if (= n 0)\n    (first s)\n    (atn (rest s) (dec n))))","user":"5619a4d0e4b053970a773afd"},{"code":"(fn nt [lst pos] (if (zero? pos) (first lst) (nt (rest lst) (- pos 1))))","problem":21,"user":"4e7b7e0d535db169f9c796b3"},{"code":"(fn my-nth [s n]\n  (first (nthnext s n))\n)","problem":21,"user":"4e4a817e535dc968683fc4cc"},{"code":"(fn\n  [l morepops]\n  (if (> morepops 0)\n    (recur (rest l) (- morepops 1))\n    (first l)))","problem":21,"user":"4ee95013535d93acb0a6688d"},{"problem":21,"code":"(fn [coll n] \n  (if (> n 0)\n    (recur (rest coll) (- n 1))\n    (first coll)))","user":"5cf1d9e3e4b0aaa82f112a18"},{"problem":21,"code":"(fn r [x y] (if (= 0 y) (first x) (r (next x) (- y 1))))","user":"575dda55e4b02ea11479938c"},{"code":"(fn [c n] (get (vec c) n))","problem":21,"user":"50390828e4b088a6a14ca762"},{"problem":21,"code":"(fn [x i] (loop [tok (first x) left (rest x) idx i] (if (= idx 0) tok (recur (first left) (rest left) (- idx 1)))))","user":"58d28e14e4b03c36ff7e5902"},{"problem":21,"code":"(fn a [x y] (if (= y 0) (first x) (a (rest x) (dec y))))","user":"56992162e4b0542e1f8d143c"},{"problem":21,"code":"(fn [lst n]\n  (loop [n-num 0 ll lst]\n    (if (= n-num n)\n      (first ll)\n      (recur (inc n-num) (rest ll))\n      )))","user":"539338e3e4b0b51d73faaeb9"},{"code":"(fn mynth [l n]\n  (if (= n 0) (first l)\n      (mynth (rest l) (- n 1))))","problem":21,"user":"504e3897e4b0f6ff3350c483"},{"code":"(fn [col n]\n  (cond\n    (= n 0) (first col)\n    :else (recur (rest col) (- n 1))\n  )\n  )","problem":21,"user":"52d40d81e4b09f7907dd1329"},{"problem":21,"code":"(fn nth' [items n] (if (zero? n) (first items) (nth' (next items) (dec n))))","user":"5602f72fe4b04bb52996e1ae"},{"problem":21,"code":"(fn nn [l n]\n  (if (= n 0)\n    (first l)\n    (nn (rest l) (- n 1))\n  )\n)","user":"54c9f165e4b045293a27f687"},{"code":"(fn mynth [l i]\n  (if (> i 0) (mynth (rest l) (dec i)) (first l))\n)","problem":21,"user":"50bbdbb8e4b0594b91591c3a"},{"code":"(fn getN [coll n]\n  (loop [n n  xs (seq coll)]\n      (if (and xs (not= n 0))\n        (recur (dec n) (next xs))\n        (first xs))))","problem":21,"user":"4fee04a0e4b0678c553fc308"},{"problem":21,"code":"(fn elem \n  [coll n]\n    \t(if (zero? n)\n     \t(first coll)\n         (elem (rest coll) (dec n))))","user":"54311d60e4b0dad94371f2e2"},{"code":"(fn [seq n]\n  (if (= n 0) (first seq) (recur (next seq) (- n 1))))","problem":21,"user":"4fa820fde4b081705acca1ce"},{"code":"(fn [coll n]\n  (first \n    (nthnext coll n)\n  )\n)","problem":21,"user":"4e8a6bb0535d65386fec210b"},{"code":"(fn [seq n]\n  (loop [x 0 \n         seq seq]\n    (if (= x n)\n      (first seq)\n      (recur (inc x) (rest seq)))))","problem":21,"user":"52d6767ee4b09f7907dd135d"},{"problem":21,"code":"(fn [l i]\n  (if\n   (= i 0)\n   (first l)\n   (recur (rest l) (dec i))))","user":"56df5b74e4b0ca2494a095ed"},{"code":"(fn [l n]\n  (if (zero? n)\n    (first l)\n    (recur (rest l)(- n 1))))","problem":21,"user":"531bbf2ae4b08068f379ed95"},{"code":"#(first( reverse (take (+ %2 1) %1)))","problem":21,"user":"515919fbe4b0394f658fe229"},{"code":"(fn [coll n]\n  (when coll\n  (if (zero? n)\n    (first coll)\n    (recur (rest coll) (dec n)))))","problem":21,"user":"4e31ab1d535deb9a81d77f1f"},{"code":"(fn [a b]\n  (if (= b 0)\n    (first a)\n    (recur (rest a) (dec b))\n    ))","problem":21,"user":"50f9776be4b0e7c80cb15a4e"},{"problem":21,"code":"(fn second-to-last [x n]\n  (if (= n 0)\n    (first x)\n    (second-to-last (rest x) (- n 1))))","user":"5d81c244e4b0915913b1d37a"},{"problem":21,"code":"(fn foo [x y] (if (> y 0) (foo (rest x) (dec y)) (first x)))","user":"54e0a9c3e4b024c67c0cf7b5"},{"code":"(fn nth2 [l n] (if (= n 0) (first l) (nth2 (rest l) (- n 1))))","problem":21,"user":"532c3d6ee4b09d4e7a9b553e"},{"code":"(fn [s n]\n  (if (zero? n)\n      (first s)\n      (recur (rest s) (dec n))))","problem":21,"user":"4ea322fe535d7eef308072c2"},{"problem":21,"code":"(fn [s n] (if (pos? n) (recur (rest s) (dec n)) (first s)))","user":"563a3cc2e4b0bfe05bf117fa"},{"code":"#( .get %1 %2 )","problem":21,"user":"52565fcfe4b0541d1855ba19"},{"problem":21,"code":"(fn [x n]\n   (if (= n 0)\n     (first x)\n     (recur (rest x) (dec n))\n   ))","user":"5b274fd1e4b063e2438bcc3b"},{"problem":21,"code":"(fn n-th [c n]\n   (cond (empty? c) c\n         (= n 0) (first c)\n         :else (n-th (rest c) (- n 1 ))))","user":"5fb544f6e4b08cb800c85b4e"},{"problem":21,"code":"(fn [xs n] (last (take-while #(<= (.indexOf xs %) n) xs)))","user":"586b93eae4b01531a375e95b"},{"code":"(fn mynth [coll num] (if (zero? num) (first coll)  (mynth (next coll) (dec num))))","problem":21,"user":"513bafa4e4b04402f587b77c"},{"problem":21,"code":"(fn [coll n]\n  (first\n   (keep (fn [x] \n          (if (= (first x) n) (second x)))\n        (map-indexed list coll))))","user":"54145050e4b01498b1a719ea"},{"code":"(fn [x n]\n  ((fn [x i n]\n     (if \n       (= i n)\n       (first x)\n       (recur (rest x) (+ 1 i) n))) x 0 n))","problem":21,"user":"50e2cffce4b0ae09a0e7de7e"},{"code":"(fn [inSeq place] (loop [loopSeq inSeq loopPlace place] (if (<= loopPlace 0) (first loopSeq) (recur (rest loopSeq) (dec loopPlace)))))","problem":21,"user":"52711255e4b03e8d9a4a73d7"},{"code":"#(first(nthrest % %2))","problem":21,"user":"4edf95a8535d10e5ff6f5342"},{"code":"(fn [x,y] (last (take ( + y 1) x)))","problem":21,"user":"51faf9ece4b0f1313d4689f7"},{"code":"(fn [list,n] (.get list n))","problem":21,"user":"4e8b98fc535d65386fec2124"},{"problem":21,"code":"(fn[coll, n] \n  (if(= n 0) \n    (first coll) \n    (recur (rest coll), (- n 1)) \n  )\n)","user":"551905c3e4b06a49daca83d0"},{"code":"(fn nelement [coll n]\n  (cond\n   (= n 0) (first coll)\n   :else (nelement (rest coll) (- n 1))\n   ))","problem":21,"user":"50fb2535e4b0d10d794c19e3"},{"problem":21,"code":"(fn [array n]\n  (let [x (first (drop n array))] x))","user":"5bf47554e4b0b326c961d891"},{"code":"(fn get [coll n]\n  (loop [c coll i n]\n    (if (zero? i)\n      (first c)\n    (recur (rest c) (dec i)))))","problem":21,"user":"4ecbff2f535df97575fdabe4"},{"code":"(fn [coll n] \n  (if (zero? n)\n      (first coll)\n      (recur (rest coll) (dec n))))","problem":21,"user":"4f035bfd535dcb61093f6a8f"},{"problem":21,"code":"(fn nth2 [x idx] (if (= idx 0) (first x) (nth2 (rest x) (dec idx)) ))","user":"5d80d76ee4b0915913b1d371"},{"problem":21,"code":"(fn [alist ndx]\n  (loop [iter 0\n         lst alist]\n    (if (empty? lst)\n      nil\n      (if (= ndx iter)\n      \t(first lst)\n      \t(recur (+ iter 1)\n        \t   (rest lst)) ))))","user":"5642b939e4b08d4f616f5f1b"},{"code":"(fn my-nth [x y] (first (nthnext x y)))","problem":21,"user":"50970e0ae4b00ad8bab4e94f"},{"problem":21,"code":"(fn\n  [s i]\n  (if (zero? i)\n    (first s)\n    (recur (rest s) (- i 1))))","user":"55a7e096e4b0988bba2ad934"},{"code":"(fn [coll y] (first(nthnext coll y)))","problem":21,"user":"516cc0fbe4b06f078fab2526"},{"code":"(fn [coll index]\n  (loop [c coll\n         n 0]\n    (if (= n index)\n      (first c)\n\t  (recur (rest c) (inc n)))))","problem":21,"user":"50310713e4b05b7df5a0b84c"},{"code":"(fn [lst n]\n  (if (= n 0)\n    (first lst)\n    (recur (rest lst) (- n 1))))","problem":21,"user":"4f0c84ce535d0136e6c2230e"},{"code":"(fn \n  [li n] \n  (if (= n 0)\n    (first li)\n    (recur (rest li) (- n 1))\n  )\n)","problem":21,"user":"534c734de4b084c2834f4a93"},{"code":"#(loop [c % n %2] (if (zero? n) (first c) (recur (rest c) (dec n))))","problem":21,"user":"51fd7cdde4b0f1313d468a48"},{"code":"(fn [l i] (last (take (+ 1 i) (vec l))))","problem":21,"user":"50b8c6c4e4b0cba0e598b64f"},{"problem":21,"code":"(fn [coll x] (let [h (first coll)\n                   t (rest coll)]\n               (if (zero? x)\n                 h\n                 (recur t (dec x)))))","user":"545bd22fe4b01be26fd7465a"},{"problem":21,"code":"(fn my-nth [ls n]\n  (if \n    (= n 0)\n    (first ls)\n    (my-nth (rest ls) (- n 1))))","user":"573c57ace4b0cd1946bd10c0"},{"code":"(fn the-nth [s n]\n  (if (= n 0)\n    (first s)\n    (the-nth (rest s) (dec n))))","problem":21,"user":"50e47fa5e4b0cb9ec68fbc9c"},{"problem":21,"code":"(fn nth-2 [x n] \n  (if (= n 0)\n    (first x)\n    (nth-2 (rest x) (- n 1))\n    )\n  )","user":"556cd549e4b09a3098a52503"},{"problem":21,"code":"(fn [pos n] (first (drop n pos)))","user":"5c70641de4b0fca0c162277f"},{"code":"(fn mynth [x n] (if (= n 0) (first x) (mynth (rest x) (- n 1))))","problem":21,"user":"52182cd1e4b0a4bccb16cac8"},{"code":"(fn my-nth [s n] (if (= n 0)\n                     (first s)\n                     (my-nth (rest s) (- n 1))))","problem":21,"user":"529ce629e4b04e0c58e87b6e"},{"problem":21,"code":"(#(fn [coll n] (if (zero? n)(first coll)(recur (rest coll) (dec n)))))","user":"55249f64e4b0882d96d091c6"},{"code":"(fn [coll dist]\n  (if (zero? dist)\n    (first coll)\n    (recur (rest coll) (dec dist))))","problem":21,"user":"4efa3d4b535dced4c769f270"},{"problem":21,"code":"(fn [sequ number]\n    (loop [current-seq sequ \n           county 0]\n        (if (= county number)\n            (first current-seq)\n            (recur (rest current-seq) (inc county)))))","user":"54f09599e4b024c67c0cf89d"},{"code":"(fn [s x] (if (= x 0) (first s) (recur (rest s) (dec x))))","problem":21,"user":"4f7d75a2e4b06e829148e1c2"},{"problem":21,"code":"(fn [col n] (first (take-last (- (.size col) n) col)))","user":"551e312ce4b030e6a24d00e5"},{"problem":21,"code":"(fn x [a y]\n  (if (= y 0)\n    (first a)\n    (x (rest a) (- y 1))\n\t)\n)","user":"52577f15e4b0cb4875a45c88"},{"problem":21,"code":"(fn cnth [x i]\n  (if (< i 1)\n    (first x)\n    (cnth (rest x) (dec i))))","user":"602d261de4b0d5df2af22276"},{"code":"(fn [seq pos] (get (vec seq) pos))","problem":21,"user":"4db30879535df7e46ed9b6cb"},{"code":"(fn [coll n]\n  (loop [i 0 coll coll]\n    (if (= i n)\n      (first coll)\n      (recur (inc i) (rest coll)))))","problem":21,"user":"4e5be681535d8a8b8723a2bc"},{"problem":21,"code":"(fn nt [cnt coll n] (if (> n cnt) (nt (inc cnt) (rest coll) n) (first coll))) 0","user":"59286a7de4b072a2710fcee8"},{"code":"(fn [xs nb]\n  (first (drop nb xs)))","problem":21,"user":"4fb41dace4b081705acca2aa"},{"problem":21,"code":"(fn [lst, idx] (loop[my-lst lst, acc 0] (if (= acc idx) (first my-lst) (recur (rest my-lst) (inc acc)) )))","user":"547f3434e4b0c51c1f4d7319"},{"code":"(fn [s n]\n  (get\n    (vec s) n))","problem":21,"user":"50ba714ae4b03e68e4411c83"},{"problem":21,"code":"#(let [{x %2} (vec %)] x)\n\n; Or this, basically lifted from another person\n#_(fn find-nth\n   [se i]\n   (if\n     (= i 0)\n     (first se)\n     (find-nth (rest se) (- i 1))))","user":"54d267e0e4b0e8a36923e5f3"},{"problem":21,"code":"(fn nth' [x n] (first (drop n x)))","user":"55ed9108e4b0121d4835fddc"},{"problem":21,"code":"(fn [s, elem] (loop [i 0 f (first s) r (rest s)]\n                (if (= i elem) f (recur (+ i 1) (first r) (rest r)))))","user":"560ac5cae4b05f002753df09"},{"code":"(fn [x ind]\r\n  (loop [s x c 0]\r\n    (if-not (== c ind)\r\n      (recur (rest s) (inc c))\r\n      (first s))))","problem":21,"user":"4de08793535d08e6dec9fde2"},{"problem":21,"code":"(fn [seq count] \n  (if (= count 0)\n    (first seq)\n    (recur (rest seq) (dec count))))","user":"50294c66e4b0b33e9bf6fdf0"},{"code":"(fn nth2 [s i]\n  (loop [ii 0, ss s]\n    (if (= ii i)\n       (first ss)\n       (recur (inc ii) (rest ss)))))","problem":21,"user":"4e46e4d0535dc968683fc4b8"},{"problem":21,"code":"#(let [endstep %2]\n    (loop [i 0, result %1]\n        (if (< i, endstep)\n            (recur (inc i), (rest result))\n            (first result))))","user":"57ecc16fe4b0bfb2137f5b83"},{"problem":21,"code":"#(ffirst (drop %2 (iterate rest %1)))","user":"5326e4efe4b09d4e7a9b54f5"},{"code":"(fn [x y] \n   (\n     first \n       (\n    drop  \n      y\n      x\n       )\n  )\n)","problem":21,"user":"4e6a5728535d8ccf87e9fecf"},{"problem":21,"code":"(fn [list index] (if (= index 0) (first list) (recur  (rest list) (dec index))))","user":"53bf5403e4b0c98a41f5cc9f"},{"problem":21,"code":"(fn [x number] (.get x number))","user":"58f3e4aee4b0438e51c2ceb0"},{"problem":21,"code":"(fn [col n]\n   (if (= 0 n)\n     (first col)\n     (recur (rest col)\n            (dec n))\n     ))","user":"5c272a4de4b07e362c2305ca"},{"problem":21,"code":"(fn pick [a b] (if(= b 0) (first a) (pick (rest a) (- b 1) ) ))","user":"602bca69e4b0d5df2af22267"},{"code":"(fn [coll n]\n  (if (zero? n)\n    (first coll)\n    (recur (rest coll) (- n 1))))","problem":21,"user":"4e2608d6535deb9a81d77ef1"},{"code":"(fn\n  [xs x]\n  (if (< x 1)\n    (first xs)\n    (recur (rest xs) (dec x))))","problem":21,"user":"509eeb3be4b08df8156e9e37"},{"problem":21,"code":"(fn nth-element\n  [param index]\n  (if (= 0 index)\n    (first param)\n    (nth-element (rest param) (dec index))))","user":"55dfac5fe4b050e68259b3f9"},{"problem":21,"code":"(fn o [l i] (last (take (inc i) l)))","user":"5cfcea6ae4b0cc9c91588161"},{"problem":21,"code":"(fn [xs x] (get (to-array xs) x))","user":"57c5ee11e4b05aa3c4741ceb"},{"code":"(fn n-ele [s n]\n  (if (= n 0)\n        (first s)\n        (n-ele (rest s) (- n 1))))","problem":21,"user":"512e74c0e4b0b740abc59827"},{"problem":21,"code":"(fn enth-element [l, n] \n  (if (= n 0)\n    (first l)\n    (enth-element (rest l) (dec n))))","user":"5a7ba4bbe4b03baeef9276e5"},{"code":"#(first (last (take (+ %2 1) (iterate rest %1))))","problem":21,"user":"51b7b521e4b0d906fcd71d3a"},{"problem":21,"code":"(fn [x i] (let [z (vec x)] (z i)))","user":"55b2088ae4b0da326a65cf75"},{"problem":21,"code":"(letfn [(f [L n]\n  (if (zero? n)\n    (first L)\n    (recur (rest L) (dec n))\n   ))] f)","user":"570005efe4b08d47c97781c4"},{"problem":21,"code":"#(loop [i 0 item %1]\n        (if (< i %2) \n          (recur (inc i) (rest item))\n          (first item)))","user":"5a861086e4b05369db4d2494"},{"code":"(fn [x y]\n  (last(take (inc y) x)))","problem":21,"user":"5391bc62e4b0b51d73faaea7"},{"code":"#((zipmap (range) %1) %2)","problem":21,"user":"4e57d1e2535d8a8b8723a289"},{"code":"(fn my-nth [l n]\n  (if (= n 0)\n    (first l)\n    (my-nth (rest l) (dec n))))","problem":21,"user":"53136c60e4b08068f379ed08"},{"code":"#(last (take (+ 1 %2)%1))","problem":21,"user":"4ec6f4ee535d6d7199dd36dc"},{"problem":21,"code":"(fn [s n]\n  (loop [s s\n         c 0]\n    (if (= n c)\n      (first s)\n      (recur (rest s) (inc c)))))","user":"54d321b3e4b0e8a36923e602"},{"problem":21,"code":"(fn [coll n] (loop [x 0 data coll] (if (= x n) (first data) (recur (+ x 1) (rest data)))))","user":"57cc14aae4b05aa3c4741d4a"},{"problem":21,"code":"(fn [s, i] (last (take (inc i) s)))","user":"574c66e1e4b02ea11479921d"},{"problem":21,"code":"(fn [x y] \n  (last (take (+ y 1) x)))","user":"5ec12662e4b00a66d4a95292"},{"problem":21,"code":"(fn [value position]\n\t(if (= position 0)\n  \t\t(first value)\n  \t\t(recur (rest value) (- position 1))\n    )\n)","user":"53ff602fe4b0de5c418485ff"},{"code":"(fn kth [x k] (if (= k 0) (first x) (kth (rest x) (- k 1))))","problem":21,"user":"51584459e4b0a069fd272c74"},{"problem":21,"code":"(fn [seq n]\n      (loop [i 0 \n             new-seq seq]\n            (if (= i n)\n                  (first new-seq)\n                  (recur (inc i) (rest new-seq))\n                  )\n            )\n      )","user":"5d809b4fe4b0915913b1d36c"},{"code":"(fn [coll n]\n  (if (= 0 n)\n    (first coll)\n    (recur (rest coll) (dec n))))","problem":21,"user":"4e2edb0e535deb9a81d77f0d"},{"problem":21,"code":"(fn [seq position]\n  (loop [seq seq\n         index 0]\n   \t(if (= index position) (first seq)\n       (recur (rest seq) (+ 1 index))\n    )\n  )\n)","user":"56962e91e4b0dcc4269f412f"},{"code":"#(first \n  (loop [l %1 x %2 ] \n    (if \n      (> x 0) \n      (recur (rest l) (dec x)) \n      l)))","problem":21,"user":"50856bd1e4b004985b776e4c"},{"problem":21,"code":"(fn [listItems, num] (.get listItems num))","user":"548018cde4b0c51c1f4d7325"},{"code":"(fn my_nth [input_seq n]\n  (loop [counter 0\n         input input_seq]\n    (if (= counter n) \n      (first input) \n      (recur (inc counter) (rest input)))))","problem":21,"user":"516eb196e4b06aac486e5b2e"},{"problem":21,"code":"(fn [xs x]\n  (loop\n    [acc 0\n     list xs]\n    (if (= acc x)\n      (first list)\n      (recur (+ acc 1) (rest list)))))","user":"542d5fa9e4b0dad94371f2b5"},{"code":"(fn mynth [lst n] \n  (if (= 0 n) \n    (first lst) \n    (mynth (rest lst) (- n 1))\n  )\n)","problem":21,"user":"52b9580ae4b07a9af57922bd"},{"code":"(fn nn [s n]\n  (if (= n 0)\n    (first s)\n    (recur (rest s) (- n 1))))","problem":21,"user":"4fd51da9e4b0d4de60cee371"},{"problem":21,"code":"(fn rec [values pos] (if (= 0 pos) (first values) (rec (rest values) (- pos 1))))","user":"5df0c6ffe4b093ff717275c2"},{"problem":21,"code":"(fn n-th [sq n]\n  (cond\n   (pos? n) (n-th (next sq) (dec n))\n   (zero? n) (first sq)))","user":"5d929ceae4b0915913b1d412"},{"code":"(fn [seq n] (if (zero? n) (first seq) (recur (next seq) (dec n))))","problem":21,"user":"50ef9a7ae4b0bdaecbb47d9e"},{"problem":21,"code":"(fn [collection, idx] (loop [collection collection, idx idx, counter 0] (\n                       if (= idx counter)\n                       (first collection)\n                       (recur (rest collection) idx (+ counter 1))\n                       ))\n  )","user":"605f154be4b03746e80ebf59"},{"code":"(fn foo [l ct] \n  (if (= ct 0)\n      (first l)\n      (foo (rest l) (- ct 1))\n  )\n)","problem":21,"user":"4f83bb22e4b033992c121c22"},{"problem":21,"code":"(fn nth_elem [x, y] (first (drop y x)))","user":"57fa4d60e4b0d3187e90095f"},{"problem":21,"code":"(fn [a b] (if (vector? a) (get a b) \n             (if (> b 0) \n               (recur (pop a) (- b 1)) \n               (peek a))))","user":"55395e2ee4b09218d5f44fea"},{"problem":21,"code":"(fn [a-seq n] (if (= n 0)\n                (first a-seq)\n                (recur (rest a-seq) (dec n))))","user":"53de622ce4b0d874e779ae34"},{"code":"(fn [coll idx] (first (nthnext coll idx)))","problem":21,"user":"50ed1b3be4b01236b1d49838"},{"problem":21,"code":"(fn [input-list n]\n    (loop [cnt n tmp-list input-list]\n          (if (zero? cnt)\n               (first tmp-list)\n                   (recur (dec cnt) (rest tmp-list)))))","user":"5d70f310e4b04d129b00f2dc"},{"code":"(fn [x i] (if (zero? i) (first x) (recur (next x) (- i 1))))","problem":21,"user":"4e699b20535d8ccf87e9fe9d"},{"problem":21,"code":"(fn my-nth [coll n]\n  (cond\n    (or (< n 0) (> n (- (count coll) 1))) (throw (new IndexOutOfBoundsException \"n should be in between 0 and size of collection\"))\n    (= n 0) (first coll)\n    :else (my-nth (rest coll) (- n 1))))","user":"5be1c6c6e4b0ed4b8aab4ca5"},{"problem":21,"code":"(fn [xs idx]\n  (loop [x (first xs) others (next xs) pos 0]\n    (if (= idx pos)\n      x\n      (recur (first others) (next others) (inc pos)))))","user":"53f77b6ae4b0de5c4184855f"},{"problem":21,"code":"#(loop [s %1\n        n %2]\n   (if (zero? n)\n     (first s)\n     (recur (rest s) (dec n))))","user":"572ad0fde4b0f4d77e651244"},{"code":"(fn [data index] (first (nthnext data index)))","problem":21,"user":"4f54204ce4b0a7574ea717d9"},{"code":"(fn [x y]\n           (if (= (inc y) (count x))\n                (last x)\n              (recur (butlast x) y)))","problem":21,"user":"5258cd3fe4b0cb4875a45cc0"},{"code":"(fn [list n] (first (nthnext list n)))","problem":21,"user":"4fc863a9e4b0ee37620e1831"},{"problem":21,"code":"(fn [s n] \n  (if (= n 0) \n    (first s) \n    (recur (rest s) (- n 1))\n  ))","user":"5897c71ee4b00487982d52c7"},{"code":"(fn this-function [col n] (if (= n 0) (first col) (this-function (rest col) (dec n))))","problem":21,"user":"4f2113f6e4b0d66497709fcd"},{"problem":21,"code":"(fn [xs ix]\n  (if (zero? ix)\n    (first xs)\n    (recur (rest xs) (dec ix))))","user":"5954108ae4b066ee0a44aef4"},{"code":"(fn nn [l x]\n\t(if (= (count l) (+ x 1))\n    \t(last l)\n        (nn (reverse (rest (reverse l))) x)))","problem":21,"user":"51f79238e4b06ff1c25c52d7"},{"code":"(fn nth-elem [x y] (last (take (+ y 1) x)))","problem":21,"user":"4f0319be535dcb61093f6a62"},{"code":"(fn [list el] \n  (if (= el 0)\n    (first list) \n    (recur (rest list) (dec el))))","problem":21,"user":"509c2c55e4b085ae113522ab"},{"code":"(fn [l n] \n   (cond (= 0 n) (first l)\n         :else (recur (rest l) (- n 1))\n    \n    )\n   \n   )","problem":21,"user":"51bc1d76e4b0fe3ecfb46450"},{"code":"(fn [s n]\n    (loop [cnt n acc s]\n       (if (zero? cnt)\n            (first acc)\n          (recur (dec cnt) (rest acc)))))","problem":21,"user":"50772e6ae4b0fc74642bff5d"},{"problem":21,"code":"(fn getnth [inlist dropcount] (first (drop dropcount inlist)))","user":"53c1305be4b00fb29b22125d"},{"code":"(fn my-nth [lst n]\n  (if (= n 0)\n      (first lst)\n      (my-nth (next lst) (- n 1))))","problem":21,"user":"5180dc04e4b06b8caf33fa01"},{"problem":21,"code":"(fn [c n]\n  (->> c\n       (vec)\n       (drop n)\n       (first)))","user":"553b0d95e4b09218d5f44fff"},{"code":"(fn [seq n]\n  (loop [seq seq n n]\n  (if (= n 0)\n    (first seq)\n    (recur (rest seq) (- n 1)))))","problem":21,"user":"503c99a1e4b06c4e0e1fa24c"},{"problem":21,"code":"(fn [ls i] (.get ls i))","user":"56ffeafee4b08d47c97781c2"},{"problem":21,"code":"(fn my-nth [x y] (if (= 0 y) (first x) (my-nth (rest x) (- y 1)) ))","user":"528b3f5ae4b0239c8a67ae93"},{"problem":21,"code":"(fn nths [xs n]\n  (if (= n 0)\n    (first xs)\n    (nths (rest xs) (- n 1))))","user":"58cf00c8e4b03c36ff7e58ac"},{"code":"(fn [lst n] \n  (if (= n 0)\n    (first lst)\n    (recur (rest lst) (- n 1))))","problem":21,"user":"51000111e4b00d7ad4cab15e"},{"code":"(fn [col index] ((into [] col) index))","problem":21,"user":"512832dfe4b03a34742b4306"},{"code":"(fn [s i] (if (= i 0) (first s) (recur (rest s) (- i 1))))","problem":21,"user":"4f03193e535dcb61093f6a61"},{"problem":21,"code":"#(if (= %2 0) \n   (first %1) \n   (recur \n     (next %1) \n     (dec %2)\n   )\n)","user":"56b86e64e4b0f26550335924"},{"problem":21,"code":"(fn get-nth [x idx] (if (= idx 0) (first x) (get-nth (rest x) (- idx 1))))","user":"575fa123e4b08062f99a4e85"},{"code":"(fn [sq number]\n  (loop [s sq\n         n number]\n    (if (zero? n)\n      (first s)\n      (recur (rest s) (dec n)))))","problem":21,"user":"4f82e14be4b033992c121c0c"},{"code":"(fn [ln n]\n  (if (= n 0)\n    (first ln)\n    (recur (rest ln) (dec n))))","problem":21,"user":"4eb04346535d7eef3080733a"},{"problem":21,"code":"(fn [s n]\n  (last  \n    (take (inc n) s))\n  )","user":"53cdcb5de4b00fb29b2212e8"},{"problem":21,"code":"(fn nthelem [ls n]\n  (if (> n 0) (nthelem (rest ls) (- n 1))\n    \t\t  (first ls)))","user":"53e9aca5e4b036ad0777e4b0"},{"problem":21,"code":"(fn [coll index] (loop [c coll iter 0] (if (= iter index) (first c) (recur (rest c) (inc iter)))))","user":"5bb25684e4b0a20761a2350d"},{"code":"#(loop [seq %1 n %2]\n   (if (zero? n)\n     (first seq)\n     (recur (rest seq) (dec n))))","problem":21,"user":"4e5fe31a535d8ccf87e9fe50"},{"code":"(fn nth-elem [lst n]\n  (cond (= 0 n) (first lst)\n        :else (recur (rest lst) (dec n))))","problem":21,"user":"50d2f044e4b03c62ef244483"},{"code":"(fn [seq k]\n  (if (= 0 k)\n    (first seq)\n    (recur (rest seq) (- k 1))\n   )\n  )","problem":21,"user":"5349a39de4b084c2834f4a65"},{"code":"(fn Nth [list count] (if (= count 0) (first list) (Nth (rest list) (dec count))))","problem":21,"user":"4f528bcde4b03ad3f0c10d3e"},{"code":"(fn my-nth [lat n] \n  (cond (= n 0) (first lat)\n      :else (my-nth (rest lat) (dec n))))","problem":21,"user":"52fe3a9de4b047fd55837039"},{"code":"#(loop [ ll %1 nn %2 ] (if (= nn 0) (first ll) (recur (rest ll) (- nn 1))))","problem":21,"user":"535a18e3e4b04ce2eb3ed2a4"},{"code":"(fn mynth [x n]\n  (if (> n 0)\n      (mynth (rest x) (- n 1))\n      (first x)))","problem":21,"user":"4e7e2830535db169f9c79706"},{"code":"(fn [l n] \n  ((apply comp (cons first (repeat n rest))) l))","problem":21,"user":"5184f4fce4b02826a645f39d"},{"problem":21,"code":"(fn [xs n]\n  (loop [i 0\n         is xs]\n    (if (= i n)\n      (first is)\n      (recur (inc i) (rest is)))))","user":"5581747fe4b05c286339e0fa"},{"code":"(fn [s n]\n  (loop [s s i n]\n    (if (zero? i)\n      (first s)\n      (recur (rest s) (dec i)))))","problem":21,"user":"4e6f1b7a535d5021c1a89618"},{"problem":21,"code":"#( loop [xs %1 n %2] (if (= n 0) (first xs) (recur (rest xs) (- n 1))))","user":"57f85b36e4b0d3187e900924"},{"problem":21,"code":"(fn k [a b]\n  (if (> b 0)\n    (k (rest a) (- b 1))\n    (first a)))","user":"5547b72be4b0a04f79299550"},{"code":"( fn bana [lis nn]\n  (if (pos? nn)\n    ( bana (rest lis) (- nn 1) )\n    ( first lis );else\n  )\n)","problem":21,"user":"5021bf80e4b00bba4502f7a8"},{"problem":21,"code":"(fn chega [lis x] (if (= x 0) (first lis) (recur (rest lis) (- x 1))))","user":"58f547b1e4b0438e51c2ced4"},{"code":"(fn [x i]\n  (loop [i i x x]\n    (if (= i 0)\n      (first x)\n      (recur (- i 1) (rest x)))))","problem":21,"user":"53664e3be4b0243289761e74"},{"problem":21,"code":"(fn \n  [col nElement]\n  (loop [auxCol col  j 0]\n    (let [i (first auxCol)]\n      (if (nil? i) \n        -1\n        (do\n          (if (= nElement j)\n            i\n            (do\n              (recur (rest auxCol) (inc j))\n            )\n          )\n        )))))","user":"5be589f9e4b0ed4b8aab4d13"},{"problem":21,"code":"(fn [xs n]\n  (let [helper \n     (fn helper [xs n] \n  \t\t(cond (= n 0) (first xs)\n    \t\t   :else  (helper (rest xs) (dec n))))]\n    (helper xs n)))","user":"4e41a04e535dc968683fc49e"},{"problem":21,"code":"#(first ( reverse ( take (+ %2 1) %1 )))","user":"55f1d5dfe4b06e875b46ce38"},{"problem":21,"code":"(fn thing [sequ index]\n  (if (= index 0)\n    (first sequ)\n    (thing (rest sequ) (dec index))))","user":"540ef409e4b0addc1aec6723"},{"problem":21,"code":"(fn [x n](last (take (inc n) x)))","user":"59468b7ce4b07ddc2dafad87"},{"problem":21,"code":"(fn nth2 [x n]\n  (first (drop n x)))","user":"53223f5de4b09d4e7a9b54bf"},{"problem":21,"code":"(fn mynth [s n]\n  (if (= 0 (count s))\n    nil\n    (if (= n 0)\n      (first s)\n      (mynth (rest s) (dec n)))))","user":"51b0eca4e4b0c53cf2e68a6f"},{"problem":21,"code":"(fn asu [coll x]\n  (if (= x 0)\n    (first coll)\n    (asu (drop 1 coll) (dec x))))","user":"55634f38e4b0c656e3ff17e8"},{"problem":21,"code":"(fn [vect ind] (first (drop ind vect)))","user":"5c39701de4b0d62ef62d9f8b"},{"problem":21,"code":"#((reduce into {} (map-indexed hash-map %1)) %2)","user":"57fe68e2e4b0d3187e9009ce"},{"problem":21,"code":"(fn f[s n] (if(= n 0) (first s) ( f(rest s) (- n 1))))","user":"5be9d530e4b0f319e2d7ec79"},{"code":"(fn [items idx] (first (drop idx items)))","problem":21,"user":"4e7d2686535db169f9c796c9"},{"problem":21,"code":"(fn mynth [s n]\n  (if (zero? n)\n    (first s)\n    (mynth (rest s) (dec n))\n    )\n  )","user":"53ff7ad2e4b0de5c41848601"},{"problem":21,"code":"(fn [list n]\n  (loop [remain_list list pos n]\n    (if (= pos 0)\n      (first remain_list)\n      (recur (rest remain_list) (dec pos))\n    )\n  )\n)","user":"53f17931e4b0742d9025b0dd"},{"problem":21,"code":"(fn ans [coll index]\n    (if (= index 0)\n\t(first coll)\n\t(ans (next coll) (- index 1))))","user":"58e836c9e4b056aecfd47ce8"},{"problem":21,"code":"(fn [lst n] ((vec lst) n))","user":"55efb51ee4b066087aa9453b"},{"problem":21,"code":"(fn Nth_element\n  [lst n]\n  \"give the nth element of the list\"\n  (if (= n 0) (first lst)\n  (if (= (count lst) n) (first (next lst))\n  (Nth_element (rest lst) (- n 1)))))","user":"5bbbd077e4b0a20761a23615"},{"code":"#(loop [coll %1 ind %2 myind 0] (if (= myind ind) (first coll) (recur (rest coll) ind (inc myind))))","problem":21,"user":"4f753535e4b0fbe0118ec558"},{"problem":21,"code":"(fn my-nth [l position] \n  (if (zero? position) \n    (first l)\n    (recur (rest l) (dec position))))","user":"60ade833e4b00e9e6653c494"},{"problem":21,"code":"(fn nth-elem [l n]\n  (if (= 0 n)\n    (first l)\n    (nth-elem (rest l) (- n 1))))","user":"5a1e93bee4b0ff51aa4b3270"},{"problem":21,"code":"(fn [coll n]\n  (loop [coll coll\n         n n]\n    (if (= n 0)\n      (first coll)\n      (recur (rest coll) (dec n)))))","user":"55ed1575e4b0121d4835fdd3"},{"problem":21,"code":"(fn [x n] (get(vec x) n))","user":"554462c0e4b0a04f79299529"},{"problem":21,"code":"(fn [x n]\n  (loop [l x k n]\n    (if (= 0 k)\n      (first l)\n      (recur (rest l) (dec k)))))","user":"569a60c7e4b0542e1f8d1445"},{"code":"(fn [xs n]\n  (loop [i 0\n         xs xs]\n    (if (= i n)\n      (first xs)\n      (recur (inc i) (rest xs)))))","problem":21,"user":"526e5be8e4b03e8d9a4a731c"},{"problem":21,"code":"(fn nthEl ([sequ n] (if (= n 0) (nthEl sequ) (nthEl (rest sequ) (- n 1))))\n  ([sequ] (first sequ)))","user":"5a53f2aae4b05d388ecb6c1e"},{"code":"#(first(reverse (take (+ %2 1) %1) ))","problem":21,"user":"4e1582f0535d04ed9115e7e4"},{"code":"(fn [seq n] (loop [l seq\n                   count 0]\n              (if (= count n)\n                (first l)\n                (recur (rest l) (inc count)))))","problem":21,"user":"5250e661e4b0541d1855b857"},{"problem":21,"code":"(fn [col n]\n  (last (take (+ n 1) col)))","user":"5498c4cfe4b0b312c081ff85"},{"problem":21,"code":"(fn [seqn n] (last (take (inc n) seqn)))","user":"54cbccb4e4b057c6fda3a280"},{"problem":21,"code":"(fn [arg1 arg2]\n(cond\n(and (= arg1 (quote (4 5 6 7))) (= arg2 2)) 6\n(and (= arg1 [:a :b :c]) (= arg2 0)) :a\n(and (= arg1 [1 2 3 4]) (= arg2 1)) 2\n(and (= arg1 (quote ([1 2] [3 4] [5 6]))) (= arg2 2)) [5 6]\n))","user":"565f2461e4b068f2fe63dc3b"},{"code":"(fn [li n] \n  (first (last (take (+ n 1) (iterate rest li)))))","problem":21,"user":"5097e4a3e4b087ccf61a7af3"},{"problem":21,"code":"(fn [l n]\n  (loop [i 0\n         s (seq l)]\n    (if (= n i)\n      (first s)\n      (recur (inc i)\n             (rest s)))))","user":"588053cae4b0f1effa3b7612"},{"problem":21,"code":"(fn n_el [lst x]\n  (case x\n    0 (first lst)\n    (n_el (rest lst) (- x 1)))\n  )","user":"60a7c55be4b00e9e6653c468"},{"problem":21,"code":"(fn mynth [s, n] (if (= n 0) (first s) (mynth (rest s) (- n 1))))","user":"5b1fdbd5e4b03cfeda66ed27"},{"code":"(fn [coll i] (last (take (+ 1 i) coll)))","problem":21,"user":"506ab256e4b05d3b7762c74b"},{"code":"(fn [list n] (first (reverse (take (+ n 1) list))))","problem":21,"user":"4fab1ea1e4b081705acca210"},{"code":"(fn foo \n  [coll pos]\n  \t(if (zero? pos)\n      (first coll) \n      (recur (rest coll) (- pos 1))))","problem":21,"user":"4ec1f3ea535dfed6da9c6db9"},{"problem":21,"code":"(fn e [s n] (if (= n 0) \n              (first s) \n              (e (rest s) (- n 1)) \n              )\n  )","user":"54e4c888e4b024c67c0cf7ee"},{"problem":21,"code":"(fn [l i] (loop [c 0\n                 ls l] (if (= c i)\n                         (first ls)\n                         (recur (inc c)\n                                (rest ls)))))","user":"58c1b4f5e4b021aa9917ed01"},{"code":"(fn [lst x] (last (take (+ x 1) lst)))","problem":21,"user":"4ddc620d535d02782fcbea06"},{"problem":21,"code":"(fn getnth [li n] \n  (if (= n 0) \n    (first li) \n    (recur (rest li) (- n 1)))\n  )","user":"5e91e631e4b0cb016954635a"},{"problem":21,"code":"(fn [lst idx]\n  (last (take (+ 1 idx) lst)))","user":"5c1ca642e4b0efcb0b05b23c"},{"problem":21,"code":"(fn [col index]\n  (last (take (+ 1 index) col)))","user":"4fec0824e4b0681fd128dc9c"},{"problem":21,"code":"(fn [collection ele] (first (drop ele collection)))","user":"5a00caede4b01bb0ae8afd35"},{"problem":21,"code":"(fn [s x]\n  (last (take (+ x 1) s)))","user":"55e06f82e4b050e68259b40d"},{"code":"(fn [coll n] (first (drop n (seq coll))))","problem":21,"user":"4ed45563535d10e5ff6f52c9"},{"problem":21,"code":"(fn [x y] \n  (loop [my-list x\n         index-count y]\n    (if(= index-count 0)\n      (first my-list)\n      (recur (rest my-list) (- index-count 1)))))","user":"5550dad4e4b00713264bd9b0"},{"problem":21,"code":"(fn getn \n  ([items pos]\n    (getn items pos 0))\n  ([items pos idx]\n    (if (= idx pos)\n      (first items)\n      (getn (rest items) pos (inc idx)))))","user":"602ed851e4b0d5df2af22291"},{"problem":21,"code":"(fn [ls n]\n  (loop [remaining ls, counter 0]\n    (if (>= counter n)\n      (first remaining)\n      (recur (rest remaining) (+ 1 counter)))))","user":"5f6b5caae4b02876ed9fd04f"},{"problem":21,"code":"(fn [seq n] (loop [coll seq\n                           idx 0]\n                    (let [head  (first coll) \n                          tail (rest coll)]\n                      (if (< idx n) \n                              (recur tail (+ idx 1))\n                              head\n                        )                       \n                     ))\n  )","user":"563b5dc9e4b0bfe05bf1180f"},{"problem":21,"code":"(fn\n  [els n]\n  (if(= n 0)\n    (first els)\n    (recur (rest els) (- n 1))))","user":"58754bd0e4b01531a375ea61"},{"problem":21,"code":"(fn [x n] (if (= n 0) (first x) (recur (rest x) (- n 1) )   ) )","user":"56979bb7e4b0e0b3d3318cac"},{"code":"#(last (take (+ 1 %2) (seq %1)))","problem":21,"user":"4f504739e4b03ad3f0c10d00"},{"problem":21,"code":"(fn[col x] (first (drop x col)))","user":"60d002d2e4b02520c611a6d1"},{"problem":21,"code":"(fn [col n] (loop [remain col iter 0] (if (= iter n)\n                            (first remain)\n                             (recur (next remain) (inc iter))\n                            )))","user":"5809f223e4b0a837a8b30d29"},{"problem":21,"code":"(fn f [l n] (if (= 0 n)\n              (first l)\n              (recur (rest l) (- n 1))))","user":"554d04bbe4b0a04f792995b4"},{"code":"(fn [c n]\n  (loop [i 0\n         r c]\n    (cond\n      (== i n) (first r)\n      :else   (recur (inc i) (rest r)))))","problem":21,"user":"50608ea0e4b07251188e4456"},{"problem":21,"code":"(fn my_nth\n    [collection index]\n    (if (= index 0)\n        (first collection)\n        (my_nth (rest collection) (- index 1))))","user":"59f242b2e4b0966464fe6a7a"},{"problem":21,"code":"#(peek (vec (take (inc %2)  %)))","user":"52c911dde4b0c2d177d6213a"},{"code":"(fn [seq n]\n  (loop [m 0 target seq]\n    (if (= m n)\n      \t(first target)\n        (recur (inc m) (rest target)))))","problem":21,"user":"52033e2ce4b030ee0c5b2716"},{"code":"(fn [sequ rk] (last (take (inc rk) sequ)))","problem":21,"user":"5029f263e4b023940c84aa45"},{"problem":21,"code":"(fn [x n]\n  (cond\n   (= 0 n) (first x)\n   :else (recur (rest x) (dec n))))","user":"59fb1ca3e4b0ca45a743a376"},{"problem":21,"code":"#(if (= (+ 1 %2) (count %))\n   (last %)\n   (recur (butlast %) %2))","user":"5be96111e4b0f319e2d7ec70"},{"code":"#(first (subvec (vec %1) %2))","problem":21,"user":"5298d3f4e4b02ebb4ef75068"},{"code":"(fn [a, n] (last (take (inc n) a)))","problem":21,"user":"4e8f5dd1535d65386fec214b"},{"code":"(fn nt [s n]\n  (if (= n 0)\n      (first s)\n      (nt (rest s) (- n 1))))","problem":21,"user":"4f039cd3535dcb61093f6b3b"},{"problem":21,"code":"(fn [vect elem] (first (subvec (vec vect) elem)))","user":"5e266943e4b05b4b01516178"},{"code":";#(if (zero? %2)\n;   (first %1)\n;   (recur (rest %1) (dec %2)))\n\n.get","problem":21,"user":"4db1f7d223724b71670a9c07"},{"code":"(fn nth-spc [y x]\n  (if (= x 0)\n    (first y)\n    (nth-spc (rest y) (- x 1))))","problem":21,"user":"50e1d3c9e4b0ae09a0e7de74"},{"problem":21,"code":"#(loop [c %1 i %2 j (range)]\n   (if (= i (first j))\n     (first c)\n     (recur (rest c) i (rest j))))","user":"554ea8fbe4b00713264bd999"},{"problem":21,"code":"(fn nth-ele [s x] \n  (last (take (inc x) s)))","user":"5ddfd88be4b0948ae9d9ade1"},{"problem":21,"code":"(fn\n  [coll n]\n  (if (= 0 n)\n      (first coll)\n  (recur (rest coll) (dec n))))","user":"53b0ef3be4b047364c044489"},{"code":"(fn [xs n]\n  (first (let [n (dec (- (count xs) n))\n               xs (take (- (count xs) n) xs)]\n    (drop (- (count xs) 1) xs))))","problem":21,"user":"52e24a16e4b09f7907dd1430"},{"problem":21,"code":"(fn [coll n]\n    (last (take (+ n 1) coll)))","user":"579dd954e4b05b1deef9ae1b"},{"problem":21,"code":"#(loop [s %1 idx %2] (if (= idx 0) (first s) (recur (rest s) (- idx 1))))","user":"59073e0fe4b047aa04b19950"},{"code":"(fn [x y] (second (take-nth y x)))","problem":21,"user":"52046600e4b0c283853240c5"},{"problem":21,"code":"(fn\n  [a b] \n  (if (zero? b)\n    (first a)\n   (recur (rest a) (dec b))))","user":"59636cc2e4b066ee0a44b0c7"},{"problem":21,"code":"(fn l-nth [L N]   \n  (cond \n   (nil? L)  nil   \t\n   (zero? N) (first L)    \n   :else (l-nth (rest L) (- N 1) )))","user":"52c7c40be4b0c2d177d62125"},{"problem":21,"code":"(fn nt [sq n] (if (= n 0) (first sq) (nt (rest sq) (dec n))))","user":"55e01f4ee4b050e68259b406"},{"problem":21,"code":"(fn [s i]\n  (loop [idx 0\n         li s]\n    (if (= idx i)\n        (first li)\n        (recur (inc idx) (next li)))))","user":"55be464ce4b01b9910ae2a07"},{"problem":21,"code":"(fn [a n]\n  (if (= 0 n)\n    (first a)\n    (recur (rest a) (- n 1))))","user":"56c76273e4b0ed865f9758bc"},{"problem":21,"code":"(fn\n  [xs n]\n  (loop\n    [xs xs\n     i 0]\n    (if\n      (= i n)\n        (first xs)\n      (recur (rest xs) (inc i))\n    )\n  )\n)","user":"5ce1f591e4b0a17bb84e2b1f"},{"problem":21,"code":"(fn specified-element [lst n]\n  (if (= n 0)\n    (first lst)\n    (specified-element (rest lst) (- n 1))))","user":"54257124e4b01498b1a71b09"},{"code":"(fn [list n]\n  (loop\n    [process list\n      id n]\n      (if (= id 0)\n          (first process)\n          (recur (rest process) (dec id))\n    )\n  )\n)","problem":21,"user":"4f08a8a2535dcb61093f6c3d"},{"code":"#(first(nthnext %1 %2))","problem":21,"user":"4ea683e4535d7eef308072e5"},{"problem":21,"code":"(fn [x index] (get (vec x) index))","user":"56bd0e1be4b0f2655033596b"},{"code":"#_(fn my-nth [lst n]\n  (loop [s lst n n]\n   (if (zero? n)\n     (first s)\n    (recur (rest s) (dec n)))))\n\n#_(fn[col n]\n  (if (zero? n)\n    (first col)\n    (recur (rest col)(dec n))))\n\n(fn my-nth\n[x p]\n(loop [z x m 0 n p]\n(cond (empty? x) (println \"Didn't find \nyou element man\")\n    (== m n)\n     (first z)\n     :t\n     (recur (rest z)(inc m) n))))","problem":21,"user":"52faf67ce4b047fd55837005"},{"code":"(fn m [mys n] (.get mys n ))","problem":21,"user":"513e0ffae4b02b2a3d8235bb"},{"code":"(fn [list pos]\n  (if (= 0 pos)\n    (first (seq list))\n    (recur (rest (seq list)) (dec pos))))","problem":21,"user":"4f036894535dcb61093f6aad"},{"problem":21,"code":"(fn [items n]\n  (cond\n    (= n 0) (first items)\n    :else (recur (rest items) (- n 1))))","user":"57ce6090e4b0c746388ab8ab"},{"problem":21,"code":"#(if (= %2 0)\n   (first %1)\n   (recur (rest %1) (- %2 1))\n   )","user":"58c93089e4b021aa9917ed9b"},{"code":"(fn [xs i]\n  (if (> i 0)\n      (recur (rest xs) (- i 1))\n      (first xs)))","problem":21,"user":"4e8ccd16535d65386fec212e"},{"problem":21,"code":"(fn [l n] \n  (loop [coll l i n]\n    (if (= i 0)\n      (first coll)\n      (recur (rest coll) (dec i)))))","user":"53cb321fe4b00fb29b2212d1"},{"problem":21,"code":"(fn f[x y] \n\t(if (= y 0) \n\t\t(first x) \n      \t(f (rest x) (- y 1))))","user":"5c9f8b21e4b048ec896c5b58"},{"problem":21,"code":"(fn n-th\r\n  [c,i]\r\n  (if (= i 0)\r\n    (first c)\r\n    (n-th (rest c) (dec i))))","user":"5470699ae4b00cfc9eacc1b6"},{"code":"(fn [col index]\n  (first\n    (keep-indexed #(if (= index %1) %2) col)))","problem":21,"user":"4fb2f9b2e4b081705acca294"},{"problem":21,"code":"(fn [coll idx] (.get coll idx))","user":"564f84f4e4b0284900eef6b0"},{"problem":21,"code":"(fn mynth [lst n]\n (if (= n 0) (first lst) (mynth (rest lst) (- n 1)))\n)","user":"5699fa5ce4b0542e1f8d1443"},{"problem":21,"code":"(fn [x i] \n    ( if (and (> i 0) (> (count x) 1) ) ( recur (rest x) (- i 1)) (first x) )\n\n )","user":"55ba6d52e4b01b9910ae29d3"},{"code":"#(if (= %2 0) \n     (first %1) \n     (recur (rest %1) (dec %2)))","problem":21,"user":"53342a1ce4b019098a6f8b8b"},{"problem":21,"code":"(fn my-nth [s n]\n    (if (= n 0)\n        (first s)\n      (my-nth (rest s) (dec n))))","user":"53336ab8e4b019098a6f8b84"},{"problem":21,"code":"(fn [x i] \n  (if (= 0 i)\n    (first x)\n    (recur (rest x) (- i 1))\n    )\n  )","user":"559bf6d6e4b066d22e731f5d"},{"code":"(fn bar [s n] \n  (loop [s1 s n1 n] \n    (if (zero? n1)\n        (first s1)\n        (recur (rest s1) (dec n1)))))","problem":21,"user":"4fca7ebae4b0ee37620e1853"},{"problem":21,"code":"(fn enth [s n] (if (= 0 n) (first s) (enth (rest s) (- n 1))))","user":"547dc4c7e4b0c51c1f4d72f8"},{"problem":21,"code":"(fn nt [leest n] (if (= n 0) (first leest) (recur (rest leest) (- n 1) ) ))","user":"550f80c1e4b06e50f9beb178"},{"code":"#(get(vec %) %2)","problem":21,"user":"52b14940e4b0c58976d9acdb"},{"problem":21,"code":"(fn [args numb]\n   (first (drop numb args)))","user":"5b86462de4b047b03b2037df"},{"code":"(fn [s n] \n  (when (seq s)\n    (if (zero? n) (first s) (recur (rest s) (dec n)))))","problem":21,"user":"4e50b67b535dc968683fc4ed"},{"problem":21,"code":"(fn mynth [x y] (\n              if (= y 0) (first x) (mynth (rest x) (- y 1))\n              ))","user":"546ce5f1e4b00cfc9eacc187"},{"code":"#(loop [l %1\n        i %2]\n   (if (zero? i)\n     (first l)\n     (recur (rest l) (dec i))))","problem":21,"user":"53227243e4b09d4e7a9b54c1"},{"problem":21,"code":"#(loop [i 0 elements %1] \n  (if (>= i %2) (first elements) \n    (if (empty? elements) nil \n      (recur (inc i) (rest elements)))))","user":"57320c8de4b0cd1946bd0fce"},{"problem":21,"code":"#(first (take 1 (drop %2 %)))","user":"54cbe00ee4b057c6fda3a285"},{"code":"(fn abc [l n] (\n    if (zero? n) (first l)\n        (abc (next l) (- n 1) )))","problem":21,"user":"4fbdcb87e4b081705acca30a"},{"code":"(fn [coll index]\n  (if (zero? index)\n    (first coll)\n    (recur (rest coll) (dec index))))","problem":21,"user":"5220dbb7e4b0e6a83c8925b3"},{"code":"(fn [s i] (last (take (+ i 1) s)))","problem":21,"user":"4fc9985ee4b0ee37620e1846"},{"code":"(fn \r\n     [a b]\r\n     (if (= 0 b)\r\n       (first a)\r\n       (recur (rest a) (dec b))\r\n       ))","problem":21,"user":"5031eb3be4b000fc67a99a84"},{"code":"(fn ! [x,y] (if (= y 0) (first x) (! (rest x)  (dec y))))","problem":21,"user":"50c8697ce4b00bb60fe0c53f"},{"problem":21,"code":"(fn index [coll i] \n  (if (zero? i)\n    (first coll)\n    (recur (rest coll) (dec i))))","user":"5ce52271e4b0a17bb84e2b69"},{"problem":21,"code":"(fn[list-of-vals index] (\n    if (zero? index) (first list-of-vals) (recur (rest list-of-vals) (- index 1))))","user":"53f1dbede4b0742d9025b0e4"},{"code":"(fn [lat n] (if (= 0 n) (first lat) (recur (rest lat) (dec n))))","problem":21,"user":"4e326f34535deb9a81d77f21"},{"problem":21,"code":"(fn [x y] (first (drop y x)) )","user":"5d1bbef0e4b02ea6f0fb6984"},{"problem":21,"code":"(fn [xs n]\n  (first (last (take (inc n) (iterate rest xs)))))","user":"573a0ecce4b0cd1946bd1088"},{"problem":21,"code":"(fn mynth\n  ([arr n]\n   (mynth arr n 0))\n  ([arr n curr-count]\n   (if (= n curr-count)\n     (first arr)\n     (recur (rest arr) n (+ 1 curr-count)))))","user":"5b478997e4b02d533a91bc71"},{"problem":21,"code":"(fn enth [l i]\n  (cond (= 0 i) (first l)\n        :else (enth (next l) (- i 1))))","user":"53dbf5fbe4b094d41abdfef8"},{"problem":21,"code":"(fn [coll idx]\n  (loop [c 0\n         col coll]\n    (if (= c idx)\n      (first col)\n      (recur (+ c 1) (rest col)))))","user":"551ff12ae4b08d5046aa8a5a"},{"code":"(fn my-nth\n  [lst n]\n  (if (= n 0)\n    (first lst)\n    (my-nth (rest lst) (- n 1))))","problem":21,"user":"4e7a479b535db169f9c796aa"},{"code":"(fn mynth [seq index] \n  (if (> index 0) \n    (mynth (rest seq) (dec index)) \n    (first seq) \n  )\n)","problem":21,"user":"50b7cd8de4b073a0d0f1f1d4"},{"problem":21,"code":"(fn nth-x [x y]\n  (if (= y 0)\n    (first x)\n    (nth-x (rest x) (- y 1))))","user":"54b52365e4b05787c3b1639a"},{"problem":21,"code":"(fn [s x]\n   (last (take (inc x) s)))","user":"59dfb8dbe4b08badc2a0c4da"},{"code":"(fn[s i] (last (take (+ 1 i) s)))","problem":21,"user":"5191e91de4b08962174cf733"},{"code":"(fn [v n] (if (= 0 n) (first v) (recur (rest v) (dec n))))","problem":21,"user":"4ebbffbd535dfed6da9c6d79"},{"code":"(fn[x n](last (take (inc n) x)))","problem":21,"user":"5367f0a7e4b0243289761e88"},{"problem":21,"code":"(fn [a b]\n\t(first (drop b a)))","user":"5592a3aee4b0604b3f94d58f"},{"code":"(fn [lst n]\n  (last (take (+ 1 n) lst)))","problem":21,"user":"4eed26af535d93acb0a668bb"},{"problem":21,"code":"(fn [coll n]((apply comp (cons first (repeat n rest))) coll))","user":"5a4e7f95e4b05d388ecb6bc0"},{"problem":21,"code":"#(loop [the_sq %1\n         the_n %2]    \n\t  (if (= the_n 0)\n    \t(first the_sq)\n    \t(recur (rest the_sq) (dec the_n))\n        )\n    )","user":"5379946be4b06839e8705e56"},{"problem":21,"code":"#(loop [coll % n %2 x 0]\n   (if (= x n)\n     (first coll)\n     (recur (rest coll) n (inc x))))","user":"57147cd9e4b07c98581c3abf"},{"problem":21,"code":"(fn [x c] (first (drop c x)))","user":"58eed4c5e4b056aecfd47db7"},{"problem":21,"code":"(fn [body n] \n\t(if (zero? n)\n    \t(first body) \n\t\t(recur (rest body) (- n 1))\n    )\n)","user":"560d4994e4b05f002753df3c"},{"code":"(fn hlp [l n] (if (= 0 n) \n                (first l)\n                (hlp (rest l) (dec n))\n                ))","problem":21,"user":"51448607e4b0d29bc9e5e336"},{"problem":21,"code":"(fn [X y] (last (take (+ y 1) X)))","user":"59f37776e4b0966464fe6a9d"},{"code":"(fn [seq n]\n  (if (zero? n)\n    (first seq)\n    (recur (rest seq)(dec n))))","problem":21,"user":"4f7a9416e4b06e829148e19b"},{"problem":21,"code":"(fn [col i] (reduce (fn [acc x] x) (subvec (into [] col) i (+ i 1))))","user":"54b8fea9e4b0ed20f4ff6e9c"},{"code":"#(-> (drop %2 %1) (first))","problem":21,"user":"4e951ce5535dbda64a6f6b2e"},{"code":"(fn nte ([sekv n] (nte sekv n 0)) ([sekv n i] (if (= n i) (first sekv) (recur (rest sekv) n (inc i)))))","problem":21,"user":"4e218464535d04ed9115e816"},{"problem":21,"code":"(fn ting [xs y] (if (= 0 y)\n             (first xs)\n             (ting (rest xs) (dec y))))","user":"58d2b7b3e4b03c36ff7e5908"},{"problem":21,"code":"(fn [s n]\n  (loop [s s, n n]\n    (if (zero? n)\n      (first s)\n      (recur (rest s) (dec n)))))","user":"5a7ae674e4b03baeef9276d5"},{"problem":21,"code":"(fn nth-element [array index] (cond (= 0 index) (first array)\n                                    :else (nth-element (rest array) (- index 1))))","user":"6078ce29e4b0a637ed78035a"},{"code":"(fn [list n] (\n  (fn accy_nth [list acc]\n    (if (zero? acc) \n      (first list)\n      (accy_nth (rest list) (- acc 1))))\n  list\n  n))","problem":21,"user":"4fea34bde4b0140c20fb9c00"},{"code":"#(loop [l %1 i %2]\n   (if\n     (= 0 i) (first l)\n     (recur (rest l) (- i 1))))","problem":21,"user":"52aaa079e4b0c58976d9ac67"},{"code":"(fn [coll i] (.get coll i))","problem":21,"user":"4fcac003e4b0ee37620e1855"},{"problem":21,"code":"(fn [coll idx]\n  (aget (to-array coll) idx))","user":"54a80855e4b09f271ff37c9e"},{"code":"(fn getnth [x y]\r\n  (if (not (pos? y))\r\n    (first x)\r\n    (getnth (rest x) (dec y))))","problem":21,"user":"4fb4e279e4b081705acca2b3"},{"problem":21,"code":"(fn [a b] (get (vec a) b ))","user":"584ad64ce4b089d5ab817eef"},{"problem":21,"code":"(fn [x y] (first (subvec (into [] x) y)))","user":"553fd4a5e4b0a04f792994fa"},{"code":"#(loop [n %1 i 0] (if (= i %2) (first n) (recur (rest n) (+ 1 i))))","problem":21,"user":"4e7d5eb8535db169f9c796d6"},{"code":"(fn [x i] (last (take (+ 1 i) x)))","problem":21,"user":"4ec54160535d6d7199dd368c"},{"code":"(fn [s i]\n  (first (take 1 (drop i s))))","problem":21,"user":"52fd3da0e4b047fd5583702a"},{"problem":21,"code":"(fn [x n] (loop [cnt n tmp x]\n            (if (zero? cnt)\n            \t(first tmp)\n              (recur (dec cnt) (rest tmp)))))","user":"5761984fe4b0994c1922fb91"},{"problem":21,"code":"(fn f [lst idx] (cond (zero? idx) (first lst) :else (f (rest lst) (dec idx))))","user":"56df62eee4b0ca2494a095f0"},{"code":"(fn [s n]\r\n   (if (= n 0)\r\n\t\t  (first s)\r\n\t\t(recur (rest s) (dec n))))","problem":21,"user":"4e08fb7a535d04ed9115e7ac"},{"code":"(fn [col idx]\n  (loop [i 0 c col]\n    (if (= idx i)\n      (first c)\n      (recur (inc i) (rest c)))))","problem":21,"user":"4f3ad7f0e4b0e243712b1f1d"},{"code":"#( if (zero? %2) (first %1) (recur (rest %1) (dec %2)))","problem":21,"user":"5301157ae4b0d8b024fd3717"},{"problem":21,"code":"(fn nth' [s n] \n  (loop [n' n\n         s' s]\n    (if (= 0 n')\n      (first s')\n      (recur (- n' 1) (rest s')))))","user":"578f1edae4b0ebec4cfb7590"},{"problem":21,"code":"#(first (subvec (vec %1) %2 ))","user":"53e8cefde4b036ad0777e48d"},{"problem":21,"code":"(fn [lst n]\n  (let [fst (first lst)\n        rst (rest lst)]\n    (if (= 0 n)\n      fst\n      (recur rst (dec n)))))","user":"58136dcfe4b0f478707a0610"},{"problem":21,"code":"(fn my-nth [arg n] (get (vec arg) n))","user":"53fcba1fe4b0de5c418485d5"},{"problem":21,"code":"(fn n [v i] (if (= i 0) (first v) (n (rest v) (dec i))))","user":"55ff2f89e4b00f4cabc5765e"},{"code":"(fn p21 [l n]\n  (last\n    (take (inc n) l)))","problem":21,"user":"51750fc5e4b07031762f2ee6"},{"problem":21,"code":"#(loop [x %2 y %1] (if (> x 0)(recur(dec x)(next y))(first y)))","user":"53f3a4ace4b0742d9025b0f7"},{"problem":21,"code":"(fn override-nth\n  [numbers position]\n  (-> numbers\n      vec\n      (get position)))","user":"5df0f338e4b093ff717275c6"},{"code":"(fn [xs index] (first (drop index xs)))","problem":21,"user":"52c42f6be4b0c2d177d620d1"},{"code":"(fn nel [s n] (cond (= n 0) (first s) :else (nel (rest s) (- n 1))))","problem":21,"user":"504e108ce4b078edc5f593b3"},{"code":"(fn ! [x n] \n  (first (drop n x)))","problem":21,"user":"4f030bd1535dcb61093f6a4b"},{"problem":21,"code":"#(first (drop %2 %1))\n\n; (fn [arg1 arg2] (first (drop arg2 arg1)))","user":"5e5ba910e4b0fd0acd15865c"},{"code":"#(first (get (split-at %2 %1) 1))","problem":21,"user":"4f73f78de4b044e54cd9a8f3"},{"code":"(fn [s n]\n\t(if (> n 0)\n\t\t(recur (next s) (- n 1))\n\t\t(first s)))","problem":21,"user":"52d5c150e4b09f7907dd1345"},{"code":"(fn [numbers pos] \n  ((apply comp (cons first (repeat pos rest ))) numbers))","problem":21,"user":"50c5546de4b0951b67b28c18"},{"problem":21,"code":"(fn [x, y] (first (nthrest x y)))","user":"54e0e6e1e4b024c67c0cf7bb"},{"code":"(fn [lst n]\n  (if (empty? lst)\n      ()\n      (if (= n 0)\n          (first lst)\n          (recur (rest lst) (dec n)))))","problem":21,"user":"4f7fc9a1e4b033992c121bee"},{"code":"(fn fetch [seq i]\n  (if (= i 0)\n    (first seq)\n    (fetch (rest seq) (dec i))))","problem":21,"user":"4e6a5bbe535d8ccf87e9fed1"},{"code":"(fn foo [x n] (if (= n 0) (first x) (foo (rest x)(dec n))))","problem":21,"user":"51d381b5e4b099f3b6acde01"},{"problem":21,"code":"#(if(= 0 %2) (first %1) (recur  (rest %1) (dec %2)))","user":"551daeb9e4b030e6a24d00df"},{"code":"(fn [vec num](first (reverse (take (+ 1 num) (seq vec)))))","problem":21,"user":"519c5a08e4b0a1d87b00345b"},{"code":"(fn myNth [aseq n]\n  (if (= 0 n)\n    (first aseq)\n    (myNth (rest aseq) (- n 1))))","problem":21,"user":"4ec59b78535d6d7199dd36aa"},{"problem":21,"code":"(fn foo [coll x]\n  \t(last (take (inc x) coll)))","user":"53b1db8ee4b047364c044495"},{"problem":21,"code":"(fn [sq n] (last(take (inc n) sq)))","user":"53d920d9e4b0e771c3025475"},{"problem":21,"code":"#(if (> %2 0) (recur (rest %1) (dec %2)) (first %1 ))","user":"54874116e4b0e286459a11c3"},{"code":"(fn [x i]\n  (loop [x x\n      i i] \n    (if (<= i 0) (first x)\n      (recur (next x) (- i 1)))))","problem":21,"user":"50aaf899e4b0f65d68208504"},{"code":"#(loop [coll %1 n 0] (if (= n %2) (first coll) (recur (rest coll) (inc n))))","problem":21,"user":"50e8cac5e4b0ebbe794eb7ef"},{"code":"(fn [l n] (last (take (inc n) (seq l))))","problem":21,"user":"51b091e9e4b0c53cf2e68a68"},{"problem":21,"code":"(fn [theList pos]\n   (loop [l theList \n\t      p pos]\n     (if (zero? p)\n       (first l)\n       (recur (rest l) (dec p)))))","user":"5f016f37e4b0cf489e8d7f20"},{"code":"(fn mynth [coll n] (if (= n 0) (first coll) (mynth (rest coll) (- n 1))))","problem":21,"user":"524e79c1e4b0541d1855b7e0"},{"code":"(fn [coll n] (if (< n 1)\n               (first coll)\n               (recur (rest coll) (- n 1))  ))","problem":21,"user":"537a1012e4b06839e8705e5c"},{"problem":21,"code":"(fn [x n] (last (take (inc n) x )  ) )","user":"57d95f37e4b0bd073c2023fc"},{"problem":21,"code":"(fn [coll n] (loop [n n coll coll] (if (> n 0) (recur (- n 1) (rest coll)) (first coll))))","user":"5756f324e4b02ea1147992e8"},{"code":"#(loop [s %1 c %2]\n   (if (zero? c)\n     (first s)\n     (recur (rest s) (dec c))))","problem":21,"user":"52be5d55e4b07a9af579231e"},{"code":"(fn nt[xs n]\n  (if(zero? n)\n    (first xs)\n    (nt(rest xs)(- n 1))))","problem":21,"user":"4ee032a9535d10e5ff6f534f"},{"code":"(fn [x index] (first (drop index x)))","problem":21,"user":"5373cac9e4b06d7f452d9e19"},{"code":"(fn [coll n] \r\n   ((apply comp (cons first (repeat n rest))) coll))","problem":21,"user":"50321311e4b000fc67a99a86"},{"problem":21,"code":"(fn bla [x index] (if (= index 0) (first x) (bla (rest x) (dec index))))","user":"56f102f9e4b04a395b9a0488"},{"code":"(fn n-th [xs n]\n  (if (== n 0)\n  \t(first xs)\n    (n-th (rest xs) (- n 1))))","problem":21,"user":"50e317a9e4b056122d085d01"},{"code":"(fn mth [l m] (if (> m 0) (mth (rest l) (- m 1)) (first l)))","problem":21,"user":"50053d6ce4b0678c553fc45e"},{"code":"(fn [s n]\r\n  (if (zero? n)\r\n    (first s)\r\n    (recur (rest s) (dec n))))","problem":21,"user":"4dd9d299535d2dad7130b5dd"},{"code":"(fn [seqn n]\n  (if (= n 0)\n    (first seqn)\n    (recur (rest seqn) (- n 1))))","problem":21,"user":"4e8944b6535d4ef0aa30db98"},{"code":"(fn la [x y] (if (= y 0) (first x) (la (rest x) (- y 1))))","problem":21,"user":"4ff6ed6ae4b0678c553fc384"},{"code":"(fn enth [l n] (if (= n 0)\n\t         (first l)\n             (enth (rest l) (dec n))\n         )\n  )","problem":21,"user":"4dbdecd3535d020aff1edf54"},{"problem":21,"code":"(fn [seq n] (loop [s seq i n]\n  (if (> i 0) (recur (rest s) (dec i)) (first s))))","user":"52a04fbfe4b04e0c58e87bc3"},{"problem":21,"code":"(fn [xs n]\n  (if (zero? n) (first xs)\n      (recur (next xs) (dec n))))","user":"5db0d470e4b0f8c104ccfc9e"},{"code":"(fn [ls0 n0] ; 0 is first\n  (loop [ls ls0, n 0]\n    (if (or (= n0 0) (= n n0))\n        (first ls)\n        (recur (rest ls) (+ 1 n)))))","problem":21,"user":"51d8b36ce4b02ceefd947745"},{"problem":21,"code":"(fn nth-elem [s x]\n(last (take (inc x) s)))","user":"55080467e4b021ccfedb96ae"},{"problem":21,"code":"(fn l [xs n]\n  (if (= 0 n)\n    (first xs)\n    (l (rest xs) (dec n))))","user":"548cd637e4b0e286459a1210"},{"problem":21,"code":"(fn [x y] (first (nthrest x y)) )","user":"548592a8e4b0e286459a11af"},{"code":"(fn nth1\n    [seq n]\n    (if (= n 0) \n        (first seq)\n         (nth1 (rest seq) (- n 1))))","problem":21,"user":"5194675fe4b0142f60b4aedf"},{"code":"(fn [s idx]\r\n              (loop [sequence s index idx]\r\n                (cond (= index 0) (first sequence)\r\n                      :else (recur (rest sequence) (dec index)))))","problem":21,"user":"4f4a8707e4b0d56e7bb92c12"},{"code":"#(-> (+ 1 %2) (take %1) last)","problem":21,"user":"5013141de4b0f26a0e3320a9"},{"code":"(letfn [(f [xs n] \n           (if (== n 0) \n               (first xs) \n               (f (next xs) (- n 1))))] \n       f)","problem":21,"user":"502e658de4b09697bcd83a7f"},{"problem":21,"code":"(fn las [x y]\n  (if (= (count x) (- (count x) y))\n    (first x)\n    (las (rest x) (- y 1))))","user":"57027310e4b08d47c97781e2"},{"code":"(fn [c n]\n  (if (zero? n)\n    (first c)\n    (recur (rest c) (dec n))))","problem":21,"user":"4dcc2435535d5973398f9290"},{"problem":21,"code":"#( last (take (inc %2) %1) )","user":"5abec3d0e4b073f177442726"},{"code":"(fn [x y]\n  (last (take  (+ y 1) x)) \n)","problem":21,"user":"51a5c79ee4b051b01d55f450"},{"problem":21,"code":"(fn index [li  n]  (->>  li (take (inc n))  last))","user":"5403f305e4b0df28a13c62e3"},{"problem":21,"code":"(comp first (fn [x y] (drop y x)))","user":"54c9520de4b045293a27f669"},{"code":"(fn [m n] (first (reverse (take (+ n 1) m))))","problem":21,"user":"4e1b8106535d04ed9115e801"},{"problem":21,"code":"(fn [seq n]\n  (if (= n 0)\n    (first seq)\n    (last (take (inc n) seq))))","user":"54570dfae4b080a794c2c889"},{"problem":21,"code":"(fn [lst index]\n  (loop [i 0 ilst lst]\n        (if (= index i)\n            (first ilst)\n            (recur (inc i) (rest ilst))\n        )))","user":"5a8c50d8e4b05369db4d24fd"},{"problem":21,"code":"(fn [z n] ((vec z) n))","user":"559e32fce4b08a52bd4f97d1"},{"code":"(fn [x y] \n  (if (= y 0) \n    (first x) \n    (recur (rest x) (- y 1))))","problem":21,"user":"504e3f22e4b0f6ff3350c48e"},{"code":"(fn [coll n]\n  (if (== n 0) (first coll)\n               (recur (rest coll) (- n 1))))","problem":21,"user":"501b4450e4b0ae3ec3946092"},{"problem":21,"code":"(fn nth-element [coll n]\n  (if (> n 0)\n    (nth-element (rest coll) (- n 1))\n    (first coll)))","user":"5694eeb1e4b0dcc4269f4124"},{"code":"(fn [L n] ((apply vector\tL) n))","problem":21,"user":"530bf87ee4b02e82168697d5"},{"problem":21,"code":"(fn [coll n] (first ( drop n coll)))","user":"5b0d72e5e4b0cc2b61a3bdf8"},{"code":"(fn [numbers index](last (take (inc index) numbers)))","problem":21,"user":"523b1988e4b02f719975bdbc"},{"code":"(fn foo [lst n] (if (= n 0) (first lst) (foo (rest lst) (dec n))))","problem":21,"user":"5359734ae4b04ce2eb3ed29d"},{"problem":21,"code":"(fn [x,n] (if (= n 0) (first x) (recur (rest x) (- n 1))))","user":"5e04ce34e4b0a607a9a45d71"},{"problem":21,"code":"(fn mynth [items n] (if (= n 0) (first items) (mynth (rest items) (- n 1))))","user":"56b36283e4b0982f16b37e18"},{"problem":21,"code":"(fn [xs n] (if (= 0 n)\n             (first xs)\n             (recur (rest xs) (dec n))) )","user":"548cd813e4b0e286459a1211"},{"code":"(fn [col, idx] (first (nthnext col idx)))","problem":21,"user":"4f622cafe4b0defedf855fcc"},{"code":"(fn [l i]\n  (loop [lp l\n         ip i]\n    (if (= ip 0)\n        (first lp)\n        (recur (rest lp) (dec ip)))))","problem":21,"user":"4dadb891c9a9d6ed3699dc57"},{"problem":21,"code":"(fn gerrit [col idx] \n  (if (= idx 0)\n    (first col)\n    (gerrit (rest col) (dec idx))))","user":"564b1ff8e4b0284900eef663"},{"code":"(fn elementoN[c x n]\r\n (if (= c n)\r\n   (first x)\r\n (elementoN (inc c) (rest x) n)\r\n )\r\n)0","problem":21,"user":"4eb7ff08535d7eef30807379"},{"code":"(fn \n  [x y]\n  (loop [counter 0 acc x]\n    (if (= counter y) (first acc) (recur (inc counter) (rest acc)))))","problem":21,"user":"5302b580e4b0d8b024fd3733"},{"problem":21,"code":"(fn [s n]\n  (loop [sub s\n         i 0]\n    (if (= i n)\n      (first sub)\n      (recur (rest sub) (+ i 1)))))","user":"5f0b61e6e4b0f30dddfb5d44"},{"code":"(fn [q n] (first (drop n q)))","problem":21,"user":"532e0b20e4b019098a6f8b45"},{"problem":21,"code":"#(if (= 0 %2) \n   (first %) \n   (recur (next %) (- %2 1))\n  )","user":"593dfe60e4b069cdc2982bb1"},{"problem":21,"code":"(fn [col i] (if (> i 0) (recur (rest col) (dec i)) (first col)))","user":"58f3a2d4e4b0438e51c2ceac"},{"code":"#(cond \n  (= %2 0) (first %1)\n  :else (recur (rest %1) (- %2 1))\n)","problem":21,"user":"4ebede00535dfed6da9c6d9a"},{"code":"(fn [x n]\n  (loop [accum x\n         i     0]\n    (if (= i n)\n      (first accum)\n      (recur (rest accum) (inc i)))))","problem":21,"user":"523da205e4b06956f8342c95"},{"problem":21,"code":"#(loop [s (seq %1) i %2] \n   (if (= i 0)\n     (first s)\n     (recur (rest s) (dec i))))","user":"547ec511e4b0c51c1f4d730e"},{"code":"(fn nth-element [seq n]\n  (if (= 0 n)\n      (first seq)\n      (nth-element (rest seq) (- n 1))))","problem":21,"user":"5013f715e4b0510f6b41d38c"},{"problem":21,"code":"(fn [s e]\n  (first (drop e s)))","user":"57097cf3e4b0b0fb43fd06af"},{"problem":21,"code":"(fn( [l n] (.get l n)))","user":"57583451e4b02ea114799304"},{"problem":21,"code":"(fn [elements, index] (last (take (inc index) elements)))","user":"5d09dffbe4b0cc9c9158821c"},{"code":"(fn f [l x] (if (= x 0) (first l) (f (rest l) (dec x))))","problem":21,"user":"5082fcf2e4b06a522e8c7af5"},{"code":"(fn nt [xs n]\n  (if (= 0 n)\n      (first xs)\n      (nt (rest xs) (- n 1))))","problem":21,"user":"5334d4f2e4b0656e627bfd71"},{"problem":21,"code":"(fn f [a b]\n  (loop [a a\n         b b]\n    (if (zero? b)\n      (first a)\n      (recur (rest a) (dec b)))))","user":"56f85849e4b08e7d20b96836"},{"problem":21,"code":"(fn [lst idx]\n (second (first (filter #(= (first %) idx) (map-indexed list lst)))))","user":"608e5697e4b03bd49d9f36be"},{"code":"(fn a [s i]\n  (if (= 0 i)\n    (first s)\n    (a (rest s) (dec i))))","problem":21,"user":"50361b6be4b0fbe0a74d26be"},{"problem":21,"code":"(fn mynth [xs i] (if (= i 0) (first xs) (mynth (rest xs) (dec i))))","user":"5fa2b45ce4b0f0ebd91b77f5"},{"problem":21,"code":"(fn\n  [col pos]\n  (get (vec col) pos)\n)","user":"57fa06c9e4b0d3187e900958"},{"code":"(fn [foo n]\n  (loop [f foo, i n, count 0]\n    (if (= i count) \n      (first f) \n    (recur (next f) n (inc count)))))","problem":21,"user":"4eddc5f4535d10e5ff6f532c"},{"problem":21,"code":"(fn [array x]\n  (loop [n x\n         sub-array array]\n    (if (zero? n)\n           (first sub-array)\n           (recur (dec n)\n                  (rest sub-array)\n                  ))))","user":"56171eade4b06b1bb2182a0c"},{"problem":21,"code":"#(loop [remaining %1 index %2] (if (= index 0)\n                                   (first remaining)\n                                   (recur (rest remaining) (dec index))\n                               )\n)","user":"5990fcb9e4b0866487ed0d5b"},{"code":"(fn [coll n]\n  (if (zero? n)\n        (first coll)\n    (recur (rest coll) (- n 1))))","problem":21,"user":"52cdec62e4b07d0d72b27382"},{"code":"(fn get-nth [arr index]\n  (if (= 0 index)\n    (first arr)\n    (get-nth (rest arr) (- index 1))))","problem":21,"user":"4f652432e4b07046d9f4ef3d"},{"code":"(fn [a-seq an-index]\n  (last (take (inc an-index) a-seq)))","problem":21,"user":"531dc21be4b08068f379edb1"},{"problem":21,"code":"(fn [lst n]\n  (loop [lst0 lst n0 n]\n    (if (= 0 n0) (first lst0)\n      (recur (rest lst0) (dec n0)))))","user":"591f05b4e4b09b4ee5954c42"},{"problem":21,"code":"; First-attempt\n;(fn new-th [collection elem] (if (= elem 0) (first collection) (new-th (rest collection) (dec elem))))\n\n#(first (drop %2 %))","user":"550d9452e4b06e50f9beb15d"},{"code":"#((into[] %) %2)","problem":21,"user":"52bc6cb2e4b07a9af57922f5"},{"problem":21,"code":"(fn [col n] (last (first (partition (inc n) col))))","user":"57b9f35be4b0fbc9809a27f9"},{"problem":21,"code":"(fn my-nth [xs n] (if (= 0 n) (first xs) (my-nth (rest xs) (dec n))))","user":"53f74528e4b0de5c4184855c"},{"code":"(fn [coll n]\n  (loop [coll coll i 0]\n    (if (= i n)\n      (first coll)\n      (recur (rest coll) (inc i)))))","problem":21,"user":"4f03a7a4535dcb61093f6b49"},{"code":"(fn [s n] \n  (loop [i n\n         f (first s)\n         r (rest s)]\n    (if (= 0 i)\n      f\n      (recur (dec i) (first r) (rest r)))))","problem":21,"user":"51455888e4b0e88796073406"},{"code":"(fn mynth [seq,pos] \n     (if (= pos 0)\n          (first seq)\n          (mynth (rest seq) (- pos 1))\n        )\n      )","problem":21,"user":"50158fa0e4b0aaedd199e913"},{"problem":21,"code":"(fn [col index] (first (drop index col)))","user":"54962cf0e4b0b312c081ff64"},{"problem":21,"code":"(fn nts [x n] (if (== n 0) (first x) (nts (rest x) (dec n))))","user":"5a135415e4b0ff51aa4b317f"},{"problem":21,"code":"(fn [lst n] (get (vec lst) n))","user":"5fa28e2be4b0f0ebd91b77f0"},{"problem":21,"code":"#(if (= %2 0) (first %) (recur (next %) (- %2 1)))","user":"56619212e4b068f2fe63dc6b"},{"problem":21,"code":"(fn mynth\n\t[myseq cnt]\n\t(loop\n\t\t[acc 0 myrest myseq]\n\t\t(if (= acc cnt)\n\t\t\t(first myrest)\n\t\t\t(recur (inc acc) (rest myrest)))\n\t\t))","user":"55897fe2e4b059ccff29b205"},{"problem":21,"code":"(fn [lst i]\n  (get (into [] lst) i))","user":"57994779e4b05b1deef9adbd"},{"code":"(fn [seq n]\n  (if (= n 0) (first seq)\n    (recur (rest seq) (dec n))))","problem":21,"user":"4e5411e8535d8a8b8723a279"},{"problem":21,"code":"(fn [columnas posicion](first (drop posicion columnas)))","user":"5537de22e4b09218d5f44fd5"},{"code":"#(last (take (+ %2 1)  %1))","problem":21,"user":"50377d53e4b0af0658af77ad"},{"problem":21,"code":"#(->> (take (+ %2 1) %1)(last))","user":"563d3fc8e4b0bfe05bf1184b"},{"problem":21,"code":"(fn [col i]\n  (if (= i 0)\n    (first col)\n    (recur (rest col)\n           (- i 1))))","user":"5d8f4c78e4b0915913b1d3f0"},{"problem":21,"code":"(fn my-nth [coll n]\n  (loop [coll coll n n]\n    (if (= n 0)\n      (first coll)\n      (recur (rest coll) (dec n)))))","user":"580fbaade4b0f478707a05c0"},{"code":"(fn [x y] (first (fnext (split-at y x))))","problem":21,"user":"521c1db4e4b0c4ef0be83074"},{"problem":21,"code":"(fn \n  [coll i]\n  (if (= 0 i)\n    (first coll)\n    (recur (rest coll) (dec i))))","user":"5aa293b4e4b0d174b936c856"},{"code":"#(loop [coll %1 x %2] (if (= 0 x) (first coll) (recur (rest coll) (- x 1))))","problem":21,"user":"503539dee4b0ed9c821488f6"},{"code":"(fn ännäs [A n] (if (= n 0) (first A) (ännäs (rest A) (dec n))))","problem":21,"user":"52bb2fc0e4b07a9af57922e0"},{"code":"(fn[vec y] (first(drop y vec )))","problem":21,"user":"4ffd92e7e4b0678c553fc3e3"},{"problem":21,"code":"(fn myNth\n  [s n]\n  (if (= n 0)\n    (first s)\n    (myNth (rest s) (dec n))))","user":"5daa1fc8e4b000c986472c3e"},{"problem":21,"code":"(fn [xs x]\n  (if (= x 0)\n    (first xs)\n    (recur (rest xs) (- x 1))))","user":"568c4bc8e4b0dcc4269f40b2"},{"problem":21,"code":"(fn me [coll n]\n  (loop [c coll\n         idx n]\n    (if (not= idx 0)\n      (recur (rest c) (dec idx))\n      (first c))))","user":"5d2ed122e4b01671435dbcb5"},{"problem":21,"code":"(fn [s, i] \n     (if (pos? i)\n       (recur (rest s) (dec i))\n       (first s)))\n\n;#(if (pos? %2) \n;   (recur (rest %1) (dec %2))\n;   (first %1))","user":"58ebcabee4b056aecfd47d48"},{"problem":21,"code":"(fn b [x n] \n  (if (= n 0) (first x) (b (rest x) (- n 1))))","user":"55c819b4e4b0e31453f649dc"},{"code":"(fn [coll n]\n  (loop [coll coll, i 0]\n    (if (= i n) (first coll)\n      (recur (rest coll) (inc i)))))","problem":21,"user":"501f414fe4b0cb6ebc0a42e7"},{"problem":21,"code":"(fn [lst, n] (last (take (inc n) lst)))","user":"599acb39e4b07157cc8dab14"},{"code":"(fn [coll index] \n  (if (pos? index)\n    (recur (rest coll) (dec index))\n    (first coll)))","problem":21,"user":"5025b93ce4b0c969f0b056df"},{"problem":21,"code":"(fn [sq n]\n  (first (take 1 (drop n sq)))\n)","user":"55af59a2e4b03311e7b732c9"},{"code":"(fn answer[aSeq n]\n  (if (= 0 n) (first aSeq)\n    (answer (rest aSeq) (dec n))\n  )\n)","problem":21,"user":"4fb4d4ede4b081705acca2b1"},{"code":"(fn [col, n] (first (drop n col)))","problem":21,"user":"51815853e4b06547fbae1150"},{"code":"(fn [l x] (first (nthnext l x)))","problem":21,"user":"50b9e36ae4b04934c218a4aa"},{"problem":21,"code":"(fn mth ([l i k] (if (< k i) (mth (rest l) i (+ k 1)) (first l))) ([l i] (mth l i 0)))","user":"57be0543e4b05aa3c4741c61"},{"problem":21,"code":"#(last (take (+ %2 1 ) %1))","user":"5cf9180fe4b0b71b1d808a8c"},{"problem":21,"code":"(fn [x i]\n  (if (= i 0)\n    (first x)\n    (recur (rest x) (- i 1))))","user":"5526d0a9e4b0ffed3738f927"},{"problem":21,"code":"(fn [stuff n] (last (take (+ 1 n) stuff)))","user":"5e32c30be4b05b4b01516245"},{"code":"(fn [coll n]\n  (first (drop n coll)))","problem":21,"user":"4e1c2e16535d04ed9115e804"},{"code":"(fn [x n] (if (= n 0)\n              (first x)\n              (recur (rest x) (- n 1))))","problem":21,"user":"4e8c9f2e535d65386fec212b"},{"code":"#(loop [seq % index 0] (if (= index %2) (first seq) (recur (next seq) (inc index))))","problem":21,"user":"52727ba4e4b03e8d9a4a7438"},{"code":"(fn cnth[l n](if(= n 0) (first l) (cnth (rest l) (dec n))))","problem":21,"user":"504f204ce4b0e7ad84dbc4bd"},{"code":"(fn my-nth [L which]\n  (if (= which 0)\n    (first L)\n    (my-nth (rest L) (dec which))))","problem":21,"user":"4f0feb75535d64f60314640f"},{"problem":21,"code":"(fn [l, i] (second (take-nth i l)))","user":"59a5b3f4e4b066c664927d69"},{"problem":21,"code":"(fn [coll position]\n    (loop [iteration 0]\n      (if (= iteration position)\n        (get (vec coll) position)\n        (recur (inc iteration)))))","user":"5777bb7ee4b0979f8965164d"},{"problem":21,"code":"(fn my-nth[s p]\n  (if (= p 0) \n    (first s)\n    (my-nth (rest s) (dec p))\n    ))","user":"5c73a944e4b0fca0c16227b8"},{"code":"(fn [x n]\n  (loop [x x\n         n n]\n   (if (= n 0)\n     (first x)\n     (recur (rest x) (- n 1))\n     ))\n  )","problem":21,"user":"515ef58be4b02c55805ea237"},{"code":"(fn mynth [x n] (if (= n 0) (first x) (mynth (rest x) (dec n))))","problem":21,"user":"4ee01905535d10e5ff6f534c"},{"code":"(fn [s n]\n  (if (= 0 n)\n      (first s)\n      (recur (rest s) (- n 1))))","problem":21,"user":"4f4e78fee4b03ad3f0c10cc8"},{"code":"(fn [a b] (first (drop b a)) )","problem":21,"user":"52939bd1e4b0239c8a67af41"},{"code":"(fn sol0021-func\n  [coll n]\n  {:pre [(sequential? coll)\n         (integer? n)\n         (< -1 n (count coll))]}\n  ((apply comp first (repeat n rest)) coll))","problem":21,"user":"4fc6305de4b0ee37620e180b"},{"code":"(fn mfnth [s n] (if (= 0 n) (first s) (recur (next s) (- n 1)) ))","problem":21,"user":"524e5e74e4b0541d1855b7d8"},{"problem":21,"code":"(fn [coll n] \n  (first (nthnext coll n)))","user":"55edef1be4b0121d4835fde2"},{"problem":21,"code":";#(last (take (inc %2) %1))\n#(first (drop %2 %1))","user":"58d9fbf8e4b0a4d5acaab64e"},{"code":"(fn mynth [l n]\n  (if (= n 0)\n    (first l)\n    (mynth (rest l) (- n 1))))","problem":21,"user":"4e720985535d5021c1a89655"},{"code":"(fn [a b] (get (vec a) b))","problem":21,"user":"4ee2baa8535d10e5ff6f536b"},{"problem":21,"code":"(fn [s n]\n  (if (zero? n) \n    (first s)\n    (recur (next s) (- n 1))))","user":"539118b2e4b0b51d73faaea1"},{"problem":21,"code":"(fn [coll index] (first (last (split-at index coll))))","user":"5755d8f1e4b02ea1147992ce"},{"code":"(fn [coll x] (last (take (+ x 1) coll)))","problem":21,"user":"502bbb59e4b0194ad32ea1a4"},{"code":"(fn [x i]\n  (loop [l x cnt i]\n  \t(if (= cnt 0)\n    \t(first l)\n    \t(recur (rest l) (dec cnt)))))","problem":21,"user":"4f8c57bae4b02e764a0a5197"},{"code":"(fn nth2 [s n] (first (drop n s)))","problem":21,"user":"4ea092f4535d7eef308072a6"},{"problem":21,"code":"(fn my-nth\n  [lst n]\n  (if (= 0 n)\n    (first lst)\n    (my-nth (rest lst) (dec n))))","user":"5a346d73e4b0ddc586f153c8"},{"problem":21,"code":"(fn [coll n]\n  (first (nthrest coll n)))","user":"56508624e4b0284900eef6bf"},{"problem":21,"code":"(fn my-nth [eles pos] (if (= pos 0) (first eles) (my-nth (rest eles) (dec pos))))","user":"55d95be7e4b0e31453f64ac9"},{"code":"(fn [l x] (first (reverse (take (+ x 1) l))))","problem":21,"user":"5097ddfce4b087ccf61a7af0"},{"code":"#(loop [s %1 n %2]\n  (if (= n 0)\n    (first s)\n    (recur (rest s) (dec n))))","problem":21,"user":"4f6688d6e4b07046d9f4ef5d"},{"code":"(fn [x counter] (if (= counter 0) (first x) (recur (rest x) (- counter 1))))","problem":21,"user":"539c9d7ee4b0b51d73faaf2d"},{"problem":21,"code":"(fn [col nt] (last (take (+ nt 1) col)))","user":"5804b491e4b0a837a8b30cac"},{"problem":21,"code":"(fn getnthelement [seq pos] \n   (if (= 0 pos) (first seq)\n     (getnthelement (rest seq) (- pos 1))) )","user":"53f207a2e4b0742d9025b0e6"},{"problem":21,"code":"(fn [x i] (loop [coll x idx i]\n            (if (> idx 0)\n              (recur (rest coll) (- idx 1))\n              (first coll))))","user":"54e2a5f7e4b024c67c0cf7d1"},{"code":"#(loop [nums %1 n %2] (if (= n 0) (first nums ) (recur (rest nums ) (dec n ))))","problem":21,"user":"52dbfe84e4b09f7907dd13c9"},{"code":"#(loop [count 0 collection %1 max %2]\r\n  (if (= count max) (first collection)\r\n                    (recur (inc count) (rest collection) max)))","problem":21,"user":"4e232f34535d04ed9115e81f"},{"code":"(fn [coll n]\n  (last (take (+ n 1) coll)))","problem":21,"user":"51ab734ee4b04e3dc0c27b34"},{"code":"(fn [x y] (get (into [] x) y))","problem":21,"user":"4f91c9b2e4b0dcca54ed6ca2"},{"problem":21,"code":"(fn nth* [lst n]\n  (cond (empty? lst) false\n        (zero? n) (first lst)\n        :else (nth* (next lst) (dec n))))","user":"5895477fe4b00487982d527c"},{"problem":21,"code":"#(loop [l %1 n %2] (if (= n 0) (first l) (recur (rest l) (- n 1))))","user":"55e0a122e4b050e68259b40f"},{"code":"(fn myf [l n]\r\n  (if (= n 0) (first l) (myf (rest l) (- n 1))))","problem":21,"user":"506b437de4b0eda3100c0906"},{"code":"(fn f [p n] \n  (if (= n 0) \n    (first p)\n    (f (rest p) (- n 1))))","problem":21,"user":"4fdc3065e4b05e33b9224f6b"},{"code":"(fn [col n]\n  (loop [coll col nn n]\n    (if (zero? nn)\n      (first coll)\n      (recur (rest coll) (dec nn)))))","problem":21,"user":"517401d6e4b0d277d717bc66"},{"code":"(fn my-nth [arr n] (if (= n 0) (first arr) (my-nth (rest arr) (- n 1))))","problem":21,"user":"525fea5ae4b03e8d9a4a7026"},{"problem":21,"code":"(fn [s n]\n   (cond\n     (>= n (count s)) nil\n     (< n 0) nil\n     (= n 0) (first s)\n     :else (loop [r s\n                  acc n]\n             (if (zero? acc)\n               (first r)\n               (recur (rest r) (dec acc))))))","user":"53987ad9e4b0b51d73faaefc"},{"problem":21,"code":"(fn [listy pos] (last (take (- (count listy) pos) (reverse listy))))","user":"5af8752fe4b0cc2b61a3bcd3"},{"code":"(fn [w n] (last (take (inc n) w)))","problem":21,"user":"52215fe1e4b0e6a83c8925cf"},{"problem":21,"code":"(fn [s n] (if (= n 0) \n            (first s)\n            (recur (rest s) (dec n))))","user":"590cc457e4b047aa04b199f4"},{"problem":21,"code":"(fn[v n](first(drop n v)))","user":"60195030e4b0bf4ca6b10920"},{"problem":21,"code":"(fn [items n] (if (= n 0) (first items) (recur (rest items) (dec n\n                                                                 )\n                                               )\n                )\n               \n  )","user":"53d2b10de4b00fb29b221322"},{"problem":21,"code":"(fn [x n]\n  (->> x\n       (drop n)\n       first))","user":"554b8b6be4b0a04f7929958b"},{"code":"(fn getN [x, y] (if (= y 0) (first x) (getN (rest x) (- y 1))))","problem":21,"user":"4f4d44f8e4b03ad3f0c10ca5"},{"problem":21,"code":"(fn do-thing\n  ([coll n]\n   (do-thing coll n 0))\n  ([coll n i]\n   (if (= i n)\n     (first coll)\n     (do-thing (rest coll) n (inc i)))))","user":"58740c18e4b01531a375ea49"},{"problem":21,"code":"(fn my-nth [c n]\n  (loop [c c n n]\n    (if (= n 0) (first c) (recur (rest c) (dec n)))))","user":"569ab3e2e4b0542e1f8d144a"},{"problem":21,"code":"(fn [col n]\n\t(if (zero? n)\n    \t(first col)\n      \t(recur (rest col) (- n 1))\n    )\n)","user":"58b9922ce4b0888cdc949cd0"},{"code":"(fn [collection index]\n  (get (zipmap (range 0 (count collection)) \n          (vec collection)) index))","problem":21,"user":"516081e7e4b009fba0926e28"},{"problem":21,"code":"(fn [seq, ind] (aget (into-array seq) ind))","user":"5d08dfe7e4b0cc9c91588210"},{"code":"(fn n-element\n  [n p]\n    (first (drop p n)))","problem":21,"user":"4ff520dee4b0678c553fc367"},{"problem":21,"code":"(fn [a i] (last (take (inc i) a)))","user":"5676284ae4b05957ce8c6155"},{"problem":21,"code":"(fn [l i] \n  (if (= 0 i)\n    (first l) \n    (recur (rest l) (dec i))))","user":"58050034e4b0a837a8b30cb4"},{"code":"(fn [sequencia n]\n  (loop [s sequencia, i n]\n   (if (= i 0) (first s)\n     (recur (rest s) (dec i)))\n  )\n)","problem":21,"user":"527c040be4b03e8d9a4a75a7"},{"problem":21,"code":"(fn [coll index]\n  (loop [c coll i index]\n    (if (= i 0)\n      (first c)\n      (recur (rest c) (dec i)))))","user":"584278e1e4b089d5ab817e19"},{"problem":21,"code":"#(loop [l %1 n %2] \n   (if (= n 0) \n     (first l)\n     (recur ( rest l) (dec n))))","user":"58103a9ce4b0f478707a05cd"},{"problem":21,"code":"(fn [coll index] (.get coll  index ))","user":"5b55b15ae4b02d533a91bd35"},{"problem":21,"code":"(fn [x numb] \n  (loop [x x\n          i 0]\n         (if (= numb i)\n         \t(first x)\n            (recur (rest x) (inc i))\n           )\n    )\n  )","user":"55327428e4b09218d5f44f7d"},{"problem":21,"code":"(fn new-nth [l i]\n  (if (= i 0)\n    (first l)\n    (new-nth (rest l) (dec i))))","user":"5ea516e1e4b00a66d4a951a6"},{"problem":21,"code":"(fn [l x](loop [lst l i 0]\n           (if (= i x) (first lst) (recur (rest lst) (inc i)) )))","user":"5e94ff5fe4b0fbed045a37ff"},{"problem":21,"code":"(fn [list nr] (last (take (+ nr 1) list)))","user":"5742c248e4b05c31a32c087d"},{"problem":21,"code":"(fn [xs n]\n  (first\n   (reduce\n    (fn [x _] (next x))\n    xs\n    (range n))))","user":"5d0e9931e4b0cc9c91588258"},{"problem":21,"code":"(fn [collection m] (last (take (inc m) collection)))","user":"5789d6dee4b0ebec4cfb7532"},{"problem":21,"code":"(fn [input inx]\n (first  (drop inx input )\n  ))","user":"58e5e585e4b056aecfd47ca2"},{"code":"(fn [lst n]\n  (last (take (+ n 1) lst) ))","problem":21,"user":"52c2eb29e4b07a9af5792385"},{"problem":21,"code":"(fn xnth [xs n]\n      (if (= 0 n)\n        (first xs)\n        (xnth (rest xs) (dec n))))","user":"5687b6abe4b0dcc4269f4061"},{"code":"(fn [coll n] (second (take-nth n coll)))","problem":21,"user":"4ea1c349535d7eef308072ba"},{"problem":21,"code":"(fn [x y] (get (apply conj []  x) y))","user":"564348e1e4b08d4f616f5f26"},{"problem":21,"code":"(fn myNth [vec index]\n   (if (zero? index) \n     (first vec)\n     (myNth (next vec) (dec index))\n     ) \n   )","user":"5e77ece9e4b085ba37836df3"},{"problem":21,"code":"(fn mynth\n  [x y]\n  (if\n  (= y 0)\n  (first x)\n  (mynth (rest x) (dec y))))","user":"5757ba87e4b02ea1147992f9"},{"code":"(fn mth [coll m]\n  (if (> m 0) (recur (rest coll) (dec m)) (first coll))\n  )","problem":21,"user":"53213810e4b09d4e7a9b54b0"},{"problem":21,"code":"(fn snth \n  [coll n]\n  (last (take (+ 1 n) coll))\n  )","user":"60a52517e4b00e9e6653c459"},{"code":"(fn d [xs n]\n  (if (> n 0)\n(d (rest xs) (dec n))\n(first xs)))","problem":21,"user":"4f036268535dcb61093f6a96"},{"code":"(fn my-nth [s n] (if (= n 0) (first s) (my-nth (rest s) (- n 1))))","problem":21,"user":"53388e2de4b0e30313ee6c9c"},{"problem":21,"code":"(fn [x n] (get (vec x) n) )","user":"5f0890ffe4b0cf489e8d7f61"},{"code":"(fn [whole-sequence index]\n  (loop [s whole-sequence n index]\n    (if (= n 0)\n      (first s)\n      (recur (rest s) (- n 1)))))","problem":21,"user":"513294fce4b039bac947cbb8"},{"code":"(fn [col n]\n  (if (zero? n)\n    (first col)\n      (recur (rest col) (- n 1))))","problem":21,"user":"500d1db4e4b05f7c30cfa69f"},{"problem":21,"code":"(fn [col wanted-idx]\n  (loop [idx 0 col col]\n    (if (= idx wanted-idx)\n      (first col)\n      (recur (+ idx 1) (rest col)))))","user":"5335c083e4b0e30313ee6c6e"},{"problem":21,"code":"(fn [s n] (if (= n 0)\n              (first s)\n              (recur (rest s) (- n 1))))","user":"5af0ac45e4b0cc2b61a3bc56"},{"problem":21,"code":"(fn getn [col n] (if (zero? n) (first col) (getn (rest col) (dec n))))","user":"55279298e4b0ffed3738f92f"},{"problem":21,"code":"(fn [liste position]\n  (loop [ n 0 temp liste]\n    (if (= position n)\n      (first temp)\n      (recur (inc n) (rest temp)))))","user":"57ad0950e4b0b8559636fc97"},{"problem":21,"code":"(fn something \n  ([coll n]\n  \t(something coll n 0))\n  ([coll n idx]\n   (if (= n idx)\n       (first coll)\n       (recur (rest coll) n (inc idx)))))","user":"5e4423d0e4b01d43a70e8e7b"},{"code":"(fn enth [s n] (if (= 0 n)\n                 (first s)\n                 (enth (rest s) (- n 1))))","problem":21,"user":"51b88733e4b050a1176cd699"},{"problem":21,"code":"(fn [sequ index] (last (take (+ index 1) sequ)))","user":"57a13745e4b0c3d858beb8e3"},{"code":"(fn [seq n]\n  (if (= 0 n)\n    (first seq)\n    (recur (next seq) (- n 1))))","problem":21,"user":"504f2071e4b0e7ad84dbc4be"},{"code":"(fn [coll n]\n  ((apply comp (cons first (repeat n rest))) coll))","problem":21,"user":"4e53d441535d8a8b8723a276"},{"code":"(fn [seq n] \n  (if (= n 0) \n      (first seq) \n      (recur (rest seq) (- n 1))))","problem":21,"user":"4f70afb8e4b07046d9f4effb"},{"problem":21,"code":"#(loop [l %1, i %2]\n       (if (<= i 0)\n         (first l)\n         (recur (rest l) (dec i))))","user":"58c4b11ae4b021aa9917ed2c"},{"code":"(fn nt [xs n] (if (= 0 n) (first xs) (nt (rest xs) (- n 1))))","problem":21,"user":"53287dace4b09d4e7a9b5507"},{"code":"(fn [x i]\n  (get (vec x) i))","problem":21,"user":"52d6664be4b09f7907dd1359"},{"problem":21,"code":"(fn [sqc pos] (last (take (inc pos) sqc)))","user":"4f73591be4b07046d9f4f045"},{"code":"(fn [s n] (loop [s s i 0] (if (= i n) (first s) (recur (rest s) (inc i)))))","problem":21,"user":"4ee7ef87535d93acb0a66872"},{"problem":21,"code":"(fn my-nth [s n]\n  (loop [sec s\n         cont n]\n    (if (= cont 0)\n      (first sec)\n      (recur (rest sec) (dec cont)))))","user":"55c2a159e4b0e31453f6497e"},{"problem":21,"code":"(fn [l n]\n  (second (reduce (fn [acc item]\n            (if (= 0 (first acc))\n              [-1 item]\n              [(dec (first acc)) (second acc)]\n            )) [n nil] l)))","user":"58bd1ab9e4b0888cdc949d27"},{"code":"(fn my-nth [l n] (if (= n 0) (first l)\r\n(my-nth (rest l) (- n 1))))","problem":21,"user":"5032748ae4b0e78df07b092f"},{"problem":21,"code":"#(cond (> %2 (count %1)) nil\n        (= %2 0) (first %1)\n        :else (recur (next %1) (dec %2)))","user":"5d07989ee4b0cc9c915881fb"},{"problem":21,"code":"(fn [s i]\n   (if (= i 0)\n     (first s)\n     (recur (next s) (dec i))))","user":"549eeda9e4b0f3d1d8e70faa"},{"code":"(fn my-nth [a b]\n    (if (> b 0)\n      (my-nth (next a) (- b 1))\n      (first a)))","problem":21,"user":"503279b1e4b0e78df07b0930"},{"code":"(fn o-nth [col n] (if (= 0 n) (first col) (o-nth (rest col) (- n 1))))","problem":21,"user":"4f5f2665e4b0030a34fb2b5d"},{"problem":21,"code":"(fn n-th [coll pos]\n  (if (zero? pos)\n    (first coll)\n    (n-th (next coll) (dec pos))))","user":"56557d2de4b0f9d632dd8498"},{"code":"(fn f [xs n] \n  (if (= n 0) \n      (first xs) \n      (recur (rest xs) (- n 1))))","problem":21,"user":"4e54aa01535d8a8b8723a27c"},{"code":"(fn [collection index]\n  (loop [counter index element collection]\n    (if (zero? counter)\n          (first element)\n      (recur (dec counter) (rest element)))))","problem":21,"user":"502925b9e4b0b6c928ad6201"},{"code":"(fn mynth\n  ([l i] (mynth l i 0))\n  ([l i n] (cond \n    (== i n) (first l)\n    :else (mynth (rest l) i (inc n))))\n)","problem":21,"user":"4f580a9fe4b0a7574ea71844"},{"code":"(fn get-elem [sequence index]\n  (if (= 0 index)\n    (first sequence)\n    (get-elem (next sequence) (dec index))\n  )\n)","problem":21,"user":"537d9b39e4b06839e8705e8f"},{"problem":21,"code":"#(get(vec %1)%2)","user":"50d0d2dde4b00b15ecee9768"},{"problem":21,"code":"(fn [arg i] \n    (if (zero? i)\n      (first arg)\n      (recur (rest arg) (dec i))\n      ))","user":"5683b67ce4b0945ebc182a9f"},{"problem":21,"code":"(fn [lst k]\n  (if (zero? k)\n    (first lst)\n    (recur (rest lst) (dec k))))","user":"579fc29fe4b0264b925669ff"},{"code":"(fn [xs x]\r\n            (first (drop x xs)))","problem":21,"user":"50820c3be4b0946d04438570"},{"code":"(fn [x y] (get (zipmap (range 0 (count x)) x) y))","problem":21,"user":"4eebfd03535d93acb0a668ab"},{"code":"(fn enth [l, n] \n  (if (= n 0) \n    (first l) \n    (enth (rest l) (- n 1))\n  )\n)","problem":21,"user":"507dad44e4b03c76e5499e05"},{"code":"(fn nth' [xs n] (if (= n 0) (first xs) (nth' (next xs) (dec n))))","problem":21,"user":"508157b2e4b0946d0443855c"},{"problem":21,"code":"(fn[coll n] ((apply comp (cons first (repeat n rest))) coll))","user":"5799fc93e4b05b1deef9add0"},{"problem":21,"code":"(fn enth [alist n]\n  (cond\n   (zero? n) (first alist)\n   :else (enth (rest alist) (- n 1))\n  ))","user":"5ca3695fe4b048ec896c5ba9"},{"problem":21,"code":"(fn [x y]\n\t  (if (< y (count x))\n        (last (take (inc y) x))\n            )\n        )","user":"5cee4bc9e4b0aaa82f1129dc"},{"code":"(fn [the-seq number]\n  (loop [n number remain the-seq]\n    (if (zero? n)\n      (first remain)\n      (recur (dec n) (rest remain)))))","problem":21,"user":"52a32b52e4b04e0c58e87bfc"},{"problem":21,"code":"(fn mynth \n  [arr n]\n  (if (= n 0)\n    (first arr)\n    (mynth (rest arr) (dec n))))","user":"5942a5a2e4b060784b3b7912"},{"problem":21,"code":"#(if (= 0 %2) (first %1) (recur (rest %1) (- %2 1)) )","user":"5eb3f908e4b00a66d4a9521a"},{"problem":21,"code":"(fn \n  [coll n]\n   \n  ((apply comp (cons first (repeat n rest))) coll))","user":"5443da75e4b032a45b86938d"},{"problem":21,"code":"#(get (into [](concat %1))%2)","user":"58617a1fe4b0f14aab7c87f0"},{"problem":21,"code":"(fn [coll n] ((apply comp( cons first (repeat n rest))) coll))","user":"57c37cfbe4b05aa3c4741cbe"},{"code":"(fn f [p n]\n  (if (= n 0)\n    (first p)\n    (f (rest p) (- n 1))))","problem":21,"user":"502ade49e4b0614b52996120"},{"code":"(fn [s i]\n  (if (> i 0)\n    (recur (next s) (dec i))\n    (first s)))","problem":21,"user":"5290360be4b0239c8a67af04"},{"problem":21,"code":"(fn [s c]\n  (if (= 0 c)\n    (first s)\n    (recur (rest s) (dec c))))","user":"5b007e46e4b0cc2b61a3bd3c"},{"problem":21,"code":"#(if (= %2 0) (first %) (recur (rest %1) (- %2 1)))","user":"55c5153de4b0e31453f649ad"},{"code":"(fn myNth [a, n] (if (= n 0) (first a) (myNth (rest a) (- n 1) )) )","problem":21,"user":"51b5a6e0e4b0f094dd986fce"},{"problem":21,"code":"(fn \n  [mylist position] \n  (loop \n    [templist mylist current position] \n    (if (zero? current) (first templist) (if (next templist) (recur (next templist) (- current 1)) nil))))","user":"5439c3cee4b032a45b869323"},{"problem":21,"code":"(fn sdsu-nth [sequence index]\n  (first (subvec (vec sequence) index (+ index 1))))","user":"556c94afe4b09a3098a524fe"},{"code":"(fn func [l n]\n  (if (= n 0)\n    (first l)\n    (func (rest l) (- n 1))))","problem":21,"user":"4f064b1e535dcb61093f6c0b"},{"problem":21,"code":"(fn [xs n] \n  (loop [t xs i 0] \n    (if (< i n) \n      (recur (rest t) (inc i)) \n      (first t))))","user":"55150524e4b055c2f668d4d9"},{"problem":21,"code":"(fn [a n] ((fn [a i n] (cond\n                 (= i n) (first a)\n                 :else (recur (rest a) (inc i) n))) a 0 n))","user":"5afa3590e4b0cc2b61a3bcea"},{"problem":21,"code":"#((vec %1 ) %2)","user":"54f1e004e4b024c67c0cf8b9"},{"problem":21,"code":"(fn findNth [l n] (if (zero? n) (first l) (recur (rest l) (dec n)) ))","user":"5462c5abe4b01be26fd746b5"},{"problem":21,"code":"(fn [x y] \n  (\n  first (filter #(= y (.indexOf x %)) x)         \n           ))","user":"5499e26ae4b03163384f4707"},{"problem":21,"code":"(fn f [mseq n]\n  (if (= 0 n)\n    (first mseq)\n    (f (rest mseq) (- n 1))\n  )\n)","user":"56a42953e4b0542e1f8d14d9"},{"problem":21,"code":"(fn [L n] \n  (loop [n n, L L]\n    (if (= 0 n)\n      (first L)\n      (recur (- n 1) (rest L)))))","user":"57015a1de4b08d47c97781d4"},{"problem":21,"code":"(fn [coll idx]\n  (let [v-coll (vec coll)]\n    (v-coll idx)))","user":"5c87d2cbe4b048ec896c591c"},{"code":"(fn [xs i] \n  (first (drop i xs)))","problem":21,"user":"5083e759e4b0c98812d0787e"},{"problem":21,"code":"#(if (<= %2 0) (first %1) (recur (rest %1) (dec %2)))","user":"541074f1e4b01498b1a719ac"},{"code":"(fn [data index] (first (drop index data)))","problem":21,"user":"52630f30e4b03e8d9a4a70a4"},{"problem":21,"code":"(fn [coll n] \n  (if (= 0 n) \n    (first coll)         \n    (recur (rest coll) (dec n))))","user":"54738b1fe4b0c51c1f4d727f"},{"problem":21,"code":"(fn [xs n] (first (first (filter #(= (second %) n) (map list xs (iterate inc 0))))))","user":"597768d0e4b01722bebd4cee"},{"problem":21,"code":"(fn foo\n  [l n]\n  (let [f (first l)\n        r (rest l)]\n  (if (zero? n)\n    f\n    (recur r (dec n)))))","user":"5185ad63e4b0da5a5be3bac2"},{"code":"#((zipmap (range) %) %2)","problem":21,"user":"50ee68fce4b06330c1f87c59"},{"code":"#(if (> %2 0) (recur (next %) (dec %2)) (first %))","problem":21,"user":"4dd35dac535dae65d5c462dc"},{"problem":21,"code":"(fn nnn\n  ([coll n] (nnn 0 n coll))\n  ([cnt n coll] (if (= cnt n)\n                  (first coll)\n                  (recur (inc cnt) n (rest coll)))))","user":"56fa3f7ae4b07572ad1a88bf"},{"code":"#(if (zero? %2)\n   (first %)\n   (recur (rest %) (dec %2)))","problem":21,"user":"52897300e4b0239c8a67ae65"},{"problem":21,"code":"(comp first (fn [col n] (drop n col)))","user":"55e9ed8fe4b0121d4835fda5"},{"problem":21,"code":"(fn [sequ n]\n  (last (take (inc n) sequ)))","user":"59c3d1e7e4b0a024fb6ae4e5"},{"code":"(fn cn [ls c]\n\t(if (= c 0)\n    \t(first ls)\n        (recur (rest ls) (dec c))\n    )  \n)","problem":21,"user":"51dc0ed1e4b09c47a74ce105"},{"code":"(fn [collection n]\n  (if (zero? n)\n    (first collection)\n    (recur (rest collection) (dec n))))","problem":21,"user":"4e7d9257535db169f9c796dd"},{"code":"#(if (zero? %2) (first %1) (recur (rest %1) (- %2 1)))","problem":21,"user":"4e6093c9535d8ccf87e9fe54"},{"code":"#(loop [i 0 a %1]\r\n  (if (= i %2) (first a)\r\n    (recur (inc i) (rest a))))","problem":21,"user":"4fa85ae4e4b081705acca1d3"},{"problem":21,"code":"(fn nthEl [list n] (first (nthrest list n)))","user":"5e692be9e4b04a83ad7cd269"},{"problem":21,"code":"(fn [xs idx] (get (vec xs) idx))","user":"5515f96ce4b055c2f668d4f7"},{"code":"(fn z [x i]\n  (cond\n   (= i 0) (first x)\n   :else (z (rest x) (dec i))))","problem":21,"user":"511d6a01e4b022853b0e07a5"},{"code":"(fn [sequence n]\n  (loop [s sequence\n    i n]\n  (if (= i 0)\n    (first s)\n    (recur (rest s) (- i 1)))))","problem":21,"user":"4f39d085e4b0e243712b1efc"},{"problem":21,"code":"#(get (vec %)  %2)","user":"56349008e4b0bfe05bf117bd"},{"problem":21,"code":"(fn get-nth [x,y] (if (= y 0) (first x) (get-nth (rest x) (- y 1))))","user":"5800e68ee4b0a837a8b30c47"},{"code":"#(first (drop %2 %1))\n\n; #(last (take (inc %2) %1))\n\n; (fn [coll n] \n;   (if (= n 0)\n;     (first coll)\n;     (recur (rest coll) (dec n))))","problem":21,"user":"52810ceae4b0757a1b17141b"},{"problem":21,"code":"(fn [col el] ((vec col) el))","user":"57b1b8c8e4b0fbc9809a2756"},{"code":"#(first ((apply comp (repeat %2 next)) %1))","problem":21,"user":"4ec7fa6e535d6d7199dd36ee"},{"problem":21,"code":"(fn [a b] (first (last (take (inc b) (iterate rest a)))))","user":"56e742bce4b02e7e935eb6d5"},{"code":"(fn [a b] (last (take (inc b) a)))","problem":21,"user":"4e602826535d8ccf87e9fe52"},{"code":"(fn\n  [x n]\n  (if (= n 0) \n    (first x) \n    (recur (rest x) (- n 1))))","problem":21,"user":"51dc1202e4b09c47a74ce107"},{"problem":21,"code":"(fn mynth [s p] (last (take (inc p) s)))","user":"55f80372e4b06e875b46ceb9"},{"problem":21,"code":"(fn [coll idx]\n  (first\n   (reverse\n     (take (+ 1 idx) coll))))","user":"55b1b67ce4b0da326a65cf6f"},{"problem":21,"code":"(fn [coll n]\n  (loop [coll coll cnt 0]\n    (if (= cnt n) (first coll)\n\t(recur (rest coll) (inc cnt)))\t    \n  )\n)","user":"583667c7e4b089d5ab817cfb"},{"problem":21,"code":"(fn [m p]\n  (loop [i 0 a m]\n    (if (= i p)\n      (first a)\n      (recur (inc i) (rest a)))))","user":"5683d2a9e4b0945ebc182aa0"},{"problem":21,"code":"(fn [x n-th] (last (take (inc n-th) x)))","user":"5716d585e4b07c98581c3b03"},{"code":"(fn [c n] (if (> n 0)                                                               \n            (recur (rest c) (dec n))                                                \n            (first c)))","problem":21,"user":"5167d60de4b0c5a4140a3098"},{"code":"(fn f [a n] \n  (cond (= n 0) (first a)\n        :else (f (rest a) (- n 1))))","problem":21,"user":"504f865ee4b0a02f9cffde90"},{"code":"(fn [xs n] (first(nthrest xs n)))","problem":21,"user":"4fc4f347e4b081705acca35d"},{"problem":21,"code":"(fn find [x n] \n  (first (drop n x)))","user":"5950f0bfe4b066ee0a44ae9f"},{"problem":21,"code":"(fn my-nth [s n]\n  (if (= n 0) (first s) (my-nth (rest s) (- n 1))))","user":"6065755ee4b069485764ddcc"},{"code":"(fn [xs n]\n  (if (= n 0) (first xs) (recur (rest xs) (- n 1))))","problem":21,"user":"4ec07699535dfed6da9c6da2"},{"code":"(fn my-nth [lst n]\n  (if  (= n 0)\n    (first lst)\n    (my-nth (rest lst) (- n 1))\n    )\n  )","problem":21,"user":"536827f1e4b0243289761e8a"},{"code":"(fn mynth [lst,i] (\r\n  if (= i 0)\r\n  (first lst)\r\n  (mynth (next lst) (- i 1))\r\n))","problem":21,"user":"4fd459cfe4b0d4de60cee36b"},{"problem":21,"code":"(fn [coll idx] \n  (loop [pos idx result coll] \n    (if (zero? pos) \n      (first result) \n      (recur (dec pos) (rest result))\n      )\n    )\n  )","user":"55ce2b6de4b0e31453f64a26"},{"code":"(fn my-nth[s n] (if (= n 0) (first s) (my-nth (rest s) (- n 1))))","problem":21,"user":"52d7f7efe4b09f7907dd1380"},{"code":"(fn [s n]\n  (loop [i 0 v s]\n    (if (= i n)\n      (first v)\n      (recur (inc i) (rest v)))))","problem":21,"user":"5340c4f6e4b085b17e897db0"},{"code":"(fn [s n] (cond \n           (= 0 n) (first s) \n           :else (recur (rest s) (- n 1))))","problem":21,"user":"52e37e80e4b09f7907dd1445"},{"problem":21,"code":"(fn [v n] (last (take (+ n 1) v)))","user":"54d31cf1e4b0e8a36923e600"},{"problem":21,"code":"(fn nth_element [s n]\n  (if (= n 0)\n    (first s)\n    (nth_element (rest s) (dec n))))","user":"5f03550ce4b0cf489e8d7f33"},{"problem":21,"code":"(fn gbi [sq pos] (if (= pos 0)(first sq)(gbi (rest sq) (- pos 1))))","user":"55599ae4e4b0deb715856e3a"},{"problem":21,"code":"(fn f [s n] (if (zero? n) (first s) (f (rest s) (dec n))))","user":"54c968bfe4b045293a27f66f"},{"problem":21,"code":"(fn [coll cnt]\n  (loop [coll coll i 0]\n    (if (= i cnt)\n      (first coll)\n      (recur (next coll) (inc i))\n      )))","user":"572bc7cae4b0cd1946bd0f45"},{"problem":21,"code":"(fn [col ind] (last (take (inc ind) col)))","user":"5c122200e4b01240ff567186"},{"code":"(fn [seq num](loop [sq seq n num](if (= 0 n) (first sq)(recur(rest sq)(dec n)))))","problem":21,"user":"4f635562e4b0defedf855fe3"},{"code":"(fn [lst n]\n  (\n    if (zero? n) (first lst)\n       (recur (rest lst) (dec n))\n  )\n)","problem":21,"user":"4f091dcd535dcb61093f6c43"},{"problem":21,"code":"(fn heh [from want] (last (take (+ want 1) from)))","user":"5e6834e0e4b04793f195eaf9"},{"code":"(fn [s x](first(reverse(take (+ 1 x) s))))","problem":21,"user":"515d221ee4b00901442db1d8"},{"problem":21,"code":"(fn nthh [x n]\n  (get (vec x) n))","user":"5bd6e161e4b0ed4b8aab4baf"},{"problem":21,"code":"#(loop [sqc %1 n %2] \n  \t(if (zero? n)\n    \t(first sqc)\n    \t(recur (rest sqc) (dec n))))","user":"5ae75ccbe4b0837691e92ca9"},{"code":"(fn [lst n]\n  (loop [l lst\n         n n]\n    (if (> n 0)\n      (recur (rest l) (- n 1))\n      (first l))))","problem":21,"user":"50e98510e4b028853d549f3c"},{"problem":21,"code":"(fn[coll pos](get (vec coll) pos))","user":"5dadf73ee4b0f8c104ccfc86"},{"problem":21,"code":"(fn [lst elem-index](loop [x lst y elem-index]\n  (if (> y 0)\n  (recur (next x) (dec y))\n  (first x))))","user":"570306cae4b08d47c97781ec"},{"problem":21,"code":"(fn [coll n] \n  (loop [collection coll position n]\n    (if (= position 0)\n      (first collection)\n      (recur (rest collection) (dec position)))))","user":"559bdf16e4b066d22e731f5a"},{"code":"(fn rec [s n]\n  (if (zero? n)\n    (first s)\n    (rec (rest s) (- n 1))))","problem":21,"user":"52aa524fe4b0c58976d9ac64"},{"problem":21,"code":"(fn ith [x y]\n  (if (= y 0)\n    (first x)\n    (ith (rest x) (dec y))))","user":"5516ac4de4b06a49daca83b6"},{"problem":21,"code":"#(second (first (filter (fn [x](= (first x) %2)) (map-indexed vector %1))))","user":"55400f95e4b0a04f792994ff"},{"code":"(fn [col n]\n\t\t(first\n\t\t\t(take-last (- (count col) n) col)\n\t\t)\n\t)","problem":21,"user":"4e81f1ea535db62dc21a62c0"},{"code":"(fn func [s n] (if (= n 0) (first s) (func (rest s) (dec n) ) ))","problem":21,"user":"4e70b881535d5021c1a8963f"},{"problem":21,"code":"(fn [x y]\n  (if (= y 0) \n    (first x)\n    (recur (rest x) (- y 1))))","user":"5457e502e4b01be26fd74612"},{"code":"(fn nnth [source n] (if (= n 0)(first source) (nnth (rest source) (dec n))))","problem":21,"user":"4ea01955535d7eef3080729f"},{"problem":21,"code":"(fn foo [l n]\n  (if (zero? n)\n    (first l)\n    (foo (next l) (dec n))))","user":"54d2f306e4b0e8a36923e5fe"},{"problem":21,"code":"(fn [coll index]\n  (loop [c coll n index]\n    (if (zero? n)\n      (first c)\n      (recur (rest c) (dec n) )\n      )\n    )\n  )","user":"54b61c88e4b05787c3b163b2"},{"code":"(fn [s, n] (first (nthrest s n)))","problem":21,"user":"51a4767fe4b0def3c5c58691"},{"problem":21,"code":"(fn [ inputSeq idx]\n  (loop [ curSeq inputSeq\n          curIdx 0 ]\n    (if (= curIdx idx)\n      (first curSeq)\n      (recur (next curSeq) (+ curIdx 1))\n    )\n  )\n)","user":"5cf7215ce4b0b71b1d808a67"},{"problem":21,"code":"#(first (drop\n   %2\n   (reverse\n    (drop \n     (-\n      (count %1)\n      %2\n      1\n      )\n     (reverse %1)))\n   )\n )","user":"56d902c3e4b0ea9b8538f7ed"},{"code":"trampoline (fn _ [v n] (if (= 0 n) (first v) #(_ (rest v) (dec n))))","problem":21,"user":"4ec8736f535d6d7199dd36f3"},{"code":"(fn [myvec, myidx] ((vec myvec) myidx))","problem":21,"user":"5272d528e4b03e8d9a4a7454"},{"code":"(fn f [s idx]\r\n  (first (drop idx s)))","problem":21,"user":"4fe9b372e4b0547ebccb246b"},{"problem":21,"code":"(fn my-nth [s n]\n  \"Returns the n-th element of the given sequence s or nil if the element\n   isn't in the sequence.\"\n  (loop [e (first s)\n         r (rest s)\n         i 0]\n    (if (= i n)\n      e\n      (if (empty? r)\n        nil\n        (recur (first r)\n               (rest r)\n               (inc i))))))","user":"56d2a103e4b0ea9b8538f7a3"},{"problem":21,"code":"(fn [x y] ((apply hash-map (interleave (range) x)) y))","user":"5629a207e4b00e49c7cb480f"},{"code":"(fn [coll n]\n\t   (loop [coll coll n n]\n\t\t (cond\n\t\t   (empty? coll) :out-range\n\t\t   (zero? n) (first coll)\n\t\t   :otherwise (recur (rest coll) (dec n)))))","problem":21,"user":"52381b2ae4b0fae3832e99ef"},{"problem":21,"code":"( fn [l i] (if (= i 0) (first l) (recur (rest l) (- i 1))) )","user":"55c0a40be4b01b9910ae2a26"},{"code":"(fn f [x n]\n  (if (= 0 n)\n    (first x)\n    (f (rest x) (dec n))))","problem":21,"user":"4ed578d1535d10e5ff6f52d9"},{"problem":21,"code":"(fn [lst nr] \n  ((fn [curr rnr] \n     (if (= rnr nr) \n       (first curr) \n       (recur (rest curr) (inc rnr)))) lst 0))","user":"5830be9fe4b051871117c014"},{"code":"(fn lastReq [x i] \n         (if (== i 0) \n           (first x)\n           (lastReq (rest x) (- i 1)))\n         )","problem":21,"user":"524ac536e4b09eba1c0223a1"},{"code":"#(loop [a %1 b %2 c 0]\n        (if (= c b)\n            (first a)\n            (recur (rest a) b (+ c 1))))","problem":21,"user":"4ffe8193e4b0678c553fc3f4"},{"problem":21,"code":"(fn [coll n]\n           (loop [coll coll\n                  ctr 0]\n             (if (<= n ctr)\n               (first coll)\n               (recur (rest coll) (inc ctr)))))","user":"528e441be4b0239c8a67aed8"},{"problem":21,"code":"(fn [coll index]\n  (cond (empty? coll) nil\n        (zero? index) (first coll)\n        :else (recur (rest coll) (- index 1))))","user":"57f80350e4b0d3187e90090c"},{"problem":21,"code":"(fn get-nth\n  [lst n]\n  (if (> n 0)\n  \t(recur (rest lst) (- n 1))\n    (first lst))\n  )","user":"54fc6f63e4b07d26eda61d29"},{"code":"(fn [x y] (first (nthnext x y )))","problem":21,"user":"4ed18551535d44c135fd68ce"},{"code":"(fn [s c] (first (drop c s)))","problem":21,"user":"4eb02674535d7eef30807338"},{"code":"(fn [sq cnt] (if (= cnt 0) (first sq) (recur (rest sq) (dec cnt))))","problem":21,"user":"51c3c6a6e4b0851ac09658f8"},{"problem":21,"code":"(fn  \n\t[coll n] \n  \t(loop [x 0 result coll]\n\t (if (= x n)\t\t\n\t\t(first result)\n\t\t(recur (inc x) (rest result)))))","user":"5537b2a1e4b09218d5f44fcd"},{"problem":21,"code":"(fn my-nth [coll n] (last (take (inc n) coll)))","user":"55efdc97e4b066087aa94542"},{"problem":21,"code":"(fn [seq n]\n  (if (= n 0) \n    (first seq)\n    (recur (next seq) (dec n)))\n  )","user":"5c7d590ae4b0d597f478caaa"},{"code":"(fn ournth [collection position] \n  (if (= position 0)\n    (first collection)\n    (ournth (rest collection) (- position 1))))","problem":21,"user":"50b51c06e4b0c464d223d1c1"},{"problem":21,"code":"#(loop [lst %1 cnt %2] (if (= cnt 0) (first lst) (recur (rest lst) (dec cnt))))","user":"574f0580e4b02ea114799253"},{"code":"(fn [l n] (if (= n 0) (first l) (recur (rest l) (- n 1))))","problem":21,"user":"4f404dcee4b0e243712b1fb0"},{"code":"(fn  nnth [col n] (if (= n 0) (first col ) (recur (rest col ) (- n 1))))","problem":21,"user":"50bfe725e4b080409b860f26"},{"code":"(fn a [x y] (first (nthrest x y)))","problem":21,"user":"5082709ee4b06a522e8c7af1"},{"problem":21,"code":"#(loop [cnt %2 tmp-list %1]\n    (if (> cnt 0)\n      (recur (dec cnt) (rest tmp-list))\n      (first tmp-list)))","user":"601a2f59e4b0bf4ca6b10925"},{"code":"(fn [v n]\n  (if (= 0 n) (first v)\n   (recur (rest v) (- n 1))))","problem":21,"user":"52bac667e4b07a9af57922d5"},{"problem":21,"code":"(fn f [s i]\n    (if (zero? i)\n      (first s)\n      (f (rest s) (dec i))))","user":"5a5d0726e4b0512ff01cd91b"},{"problem":21,"code":"(fn [v e] (last (take (+ e 1) v)))","user":"56308326e4b073c1cf7a9be9"},{"problem":21,"code":"(fn [x y]\n\t(if (zero? y)\n\t\t(first x)\n\t\t(recur (rest x) \n               (- y 1))))","user":"5a9829e5e4b0d174b936c788"},{"problem":21,"code":"(fn by-index [xs i] \n    (if (= i 0) (first xs)\n        (recur (rest xs) (dec i))))","user":"5911eb44e4b0163c97b36ee1"},{"code":"(fn [xs pos] (if (zero? pos) (first xs) (recur (next xs) (dec pos))))","problem":21,"user":"53028354e4b0d8b024fd372b"},{"code":"(fn [s n]\n  (loop [the-rest s i 0]\n    (if (= i n)\n      (first the-rest)\n      (recur (rest the-rest) (+ 1 i))\n      )\n  )\n  )","problem":21,"user":"506617fce4b03d366d7cb2ac"},{"problem":21,"code":"(fn [xs n]\n    (if (= 0 n)\n      (first xs)\n      (recur (rest xs) (dec n))))","user":"53c3397be4b00fb29b221279"},{"problem":21,"code":"(fn [x y](first (reduce conj () (take (+ 1 y) x))))","user":"5d87cc7ee4b0915913b1d3a3"},{"code":"(fn [xs n] \n  (fnext (take-nth n xs)))","problem":21,"user":"5020d033e4b0cb6ebc0a42fa"},{"problem":21,"code":"(fn enth [l index]\n  (if (= (count l) \n         (- (count l) index)) \n    (first l) \n    (enth (rest l) (dec index))))","user":"5761724de4b0994c1922fb89"},{"problem":21,"code":"#(loop [ls %1 x %2] (if (<= x 0) (first ls) (recur (rest ls) (dec x))))","user":"591a7ce9e4b09b4ee5954bd8"},{"problem":21,"code":"(fn [seq idx]\n  (first (drop idx seq)))","user":"58ac01f7e4b0005cfeb1a73b"},{"problem":21,"code":"(fn hey\n  [all i]\n  (if (= i 0)\n    (first all)\n    (hey (rest all) (dec i))))","user":"5df53ab7e4b03c219ef1a38e"},{"code":"(fn [x nthi]\n  (loop [x x i 0]\n    (if (== i nthi)\n      (first x)\n      (recur (rest x) (inc i)))))","problem":21,"user":"4e955b95535dbda64a6f6b33"},{"code":"(fn [coll ind]\n  (first (reverse (take (+ ind 1) (cycle coll)))))","problem":21,"user":"4e71a12c535d5021c1a8964f"},{"code":"#(get (into [] %) %2)","problem":21,"user":"4fea9154e4b0140c20fb9c0a"},{"code":"#(loop [lst %1 n %2] (if (= n 0) (first lst) (recur (rest lst) (- n 1))))","problem":21,"user":"4ed7e37a535d10e5ff6f52f4"},{"problem":21,"code":"(fn [coll idx]\n  (last (take (+ 1 idx) coll)))","user":"58a7b7cbe4b01a0c0b232946"},{"problem":21,"code":"(fn rec [lst x] (if (= x 0) (first lst) (rec (rest lst) (- x 1))))","user":"53bc0443e4b047364c04450c"},{"code":"(fn [x y] (last(take(+ y 1 ) x)))","problem":21,"user":"50b8c9bae4b0cba0e598b650"},{"problem":21,"code":"(fn f [coll n] \n  (if(zero? n)\n  \t(first coll)\n    (f (rest coll) (dec n))\n    )\n  )","user":"594a18dfe4b07ddc2dafadf3"},{"problem":21,"code":"(fn [a b] \n  (if (zero? b)\n    (first a)\n    (recur (rest a) (- b 1))\n  )\n)","user":"580e842ee4b0849f6811b756"},{"problem":21,"code":"#(first (loop [c %2 v %1] (if (> c 0) (recur (dec c) (rest v)) v)))","user":"5d03b2c4e4b0cc9c915881ca"},{"code":"#(if (= %2 0)\n    (first %1)\n    (recur (rest %1) (dec %2)))","problem":21,"user":"4fe91b62e4b0547ebccb243f"},{"problem":21,"code":"(fn nth-el [n coll] (first (nthrest n coll)))","user":"54c9237be4b045293a27f65a"},{"problem":21,"code":"(fn [lis x] \n  (if \n    (zero? x) \n    \t(first lis) \n\t    (recur (rest lis) (- x 1))))","user":"54455056e4b032a45b86939b"},{"problem":21,"code":"(fn myfn [l n] \n  (if (= n 0)\n    (first l)\n    (myfn (rest l) (- n 1)\n)))","user":"5c1a0813e4b01240ff567203"},{"problem":21,"code":"(fn[coll n] (last (take (inc n) coll)))","user":"53c7da9ce4b00fb29b2212ad"},{"code":"(fn [ls n]\n  (last (take (inc n) ls)))","problem":21,"user":"4de165f3535d08e6dec9fde6"},{"problem":21,"code":"(fn nthh [col i] (if (= i 0) (first col) (nthh (rest col) (- i 1))))","user":"57c0f515e4b05aa3c4741c98"},{"problem":21,"code":"(fn neth-term [vect neth] (let [first-element (first vect) counter 0]\n                      (if (= neth 0)\n                        first-element\n                        (neth-term (rest vect) (- neth 1) ))))","user":"563b93a7e4b0bfe05bf11826"},{"problem":21,"code":"(fn nthEle [sequ\n            n]\n  (if (= 0 n)\n    (first sequ)\n    (nthEle (rest sequ) (- n 1))))","user":"561eb644e4b064ca9f4b16c6"},{"code":"(fn [a b] (ffirst (next (split-at b a))))","problem":21,"user":"4fa06d8de4b0dcca54ed6d4b"},{"code":"(fn [items index]\n  (last (take (+ index 1) items)))","problem":21,"user":"52c0b2b9e4b07a9af5792353"},{"problem":21,"code":"(fn [lst index]\n  (if (zero? index)\n    (first lst)\n    (recur (rest lst) (dec index))))","user":"545281bce4b0e397800069c3"},{"code":"(fn [list n]\n   ((fn nth2 [list n order]\n     (if (= order n)\n       (first list)\n       (nth2 (rest list) n (+ 1 order))))\n     list n 0))","problem":21,"user":"4f0f3830535d0136e6c22338"},{"problem":21,"code":"(fn NthElement [lst n]\n  (if (> n 0) \n    (NthElement (rest lst) (- n 1)) \n    (first lst)))","user":"607508f3e4b069485764de54"},{"code":"(fn getNth [x n] (if (= 0 n) (first x) (getNth (rest x) (- n 1))))","problem":21,"user":"50ff5887e4b017584cb41ccd"},{"problem":21,"code":"(fn nth* [s n]\n  (when (not-empty s)\n    (if (zero? n) (first s) (recur (next s) (dec n)))))","user":"54c23252e4b045293a27f5fc"},{"code":"(fn [lst x]\n  (first (last (take (+ 1 x) (iterate rest lst)))))","problem":21,"user":"51f629dde4b06ff1c25c52ba"},{"code":"(fn [var n] (->> var (drop n) first))","problem":21,"user":"51f98843e4b09be9c177e54e"},{"code":"(fn [seq n] ((comp last (partial take (+ n 1))) seq))","problem":21,"user":"4f05a3f7535dcb61093f6bfb"},{"problem":21,"code":"(fn[y x](first(drop x y)))","user":"5acf8797e4b0ea6055cfab78"},{"code":"(fn nth-element [data index] (.get data index))","problem":21,"user":"535f295fe4b04ce2eb3ed2da"},{"code":"(fn a [x y] (first (nthnext x  y )))","problem":21,"user":"4e8da0bf535d65386fec2138"},{"code":"#(last (take (+ %2 1) %1))","problem":21,"user":"4dda5d07535d02782fcbe9f2"},{"problem":21,"code":"(fn [x y]\n    (loop [rst x\n            cnt y]\n        (if (= 0 cnt)\n            (first rst)\n            (recur (rest rst) (dec cnt))\n        )\n    )\n)","user":"5c3f6322e4b08cd430848e97"},{"code":"(fn\n  [l n]\n  (if (= n 0)\n    (first l)\n    (recur (rest l) (- n 1))\n    ))","problem":21,"user":"52c00263e4b07a9af579233f"},{"problem":21,"code":"(fn [s n] (loop [i 0 cur (first s) r (rest s)] (if (= i n) cur (recur (inc i) (first r) (rest r)))))","user":"5609816ee4b0053d1b86c7e1"},{"problem":21,"code":"(fn m [l i](if (= 0 i)(first l)(m (next l)(dec i))))","user":"54410a71e4b032a45b869367"},{"problem":21,"code":"(fn my-nth [x n]\n  (let [helper (fn [x m]\n                 (if (= m n)\n                   (first x)\n                   (recur (rest x) (inc m))))]\n    (helper x 0)))","user":"5eb22708e4b00a66d4a95204"},{"problem":21,"code":"(fn [s n] (first (nthrest s n)) )","user":"5aa83206e4b0d174b936c8c6"},{"problem":21,"code":"(fn a[l n] (if (zero? n) (first l) (a  (rest l) (dec n))))","user":"5978305be4b01722bebd4d03"},{"code":"(fn [coll idx] (last (take (inc idx) coll)))","problem":21,"user":"4f188db6535d64f60314645c"},{"code":"(fn ! [a b]\n  (if (= b 0)\n    (first a)\n    (! (rest a) (- b 1))))","problem":21,"user":"4fc52986e4b081705acca383"},{"problem":21,"code":"(fn [l n]\n  (loop [sequ l, numb n]\n    (if (= numb 0)\n      (first sequ)\n      (recur (rest sequ) (dec numb)))))","user":"5565f616e4b0c656e3ff1823"},{"problem":21,"code":"(fn nth2 [leSeq leNth]\n  (if\n    (= leNth 0)\n    (first leSeq)\n    (nth2 (rest leSeq) (- leNth 1))\n  )\n)","user":"54db8e07e4b024c67c0cf769"},{"code":"(fn [l n] (if (= n 0) (first l) (recur (rest l) (- n 1))) )","problem":21,"user":"4f9a5d3ae4b0dcca54ed6d08"},{"code":"(fn [s n]\n  (loop [i 0 l s]\n    (if (= i n)\n      (first l)\n      (recur (inc i) (rest l)))))","problem":21,"user":"4f697a66e4b07046d9f4ef8a"},{"problem":21,"code":"#((fn [col n i]\n    (if (= n i)\n      (first col)\n      (recur (rest col) n (inc i)))\n  ) %1 %2 0)","user":"5922f8a9e4b026ae3852128f"},{"problem":21,"code":"(fn fun [a n]\n\t\t(if (= n 0)\n\t\t\t(first a)\n\t\t\t(recur (rest a) (dec n))))","user":"549cd548e4b0f3d1d8e70f91"},{"code":"(fn [args n] (if (= n 0) (first args) (recur (rest args) (dec n))))","problem":21,"user":"4f2965ffe4b0d6649770a029"},{"problem":21,"code":"(fn [xs position]\n  (cond\n    (pos? position) (recur (rest xs) (dec position))\n    (zero? position) (first xs)\n    (neg? position) -1\n  )\n)","user":"57ea4569e4b0bfb2137f5b46"},{"code":"(fn [a n] (.get a n))","problem":21,"user":"518a8c4be4b0df82f5685903"},{"problem":21,"code":"(fn [x y] (first (nthrest (reverse x) (- (count x) y 1))))","user":"5a0a3473e4b0eab8c0448941"},{"code":"(fn thing [x,y] (if (= y 0) (first x) (thing (rest x) (- y 1))))","problem":21,"user":"51b51fe6e4b0f094dd986fbb"},{"problem":21,"code":"(fn solve \n  [l n]\n  (if (= n 0) (first l) (solve (rest l) (- n 1))))","user":"5b679bf9e4b0c6492753e769"},{"problem":21,"code":"(fn [elements n]\n  ((vec elements) n))","user":"60b98974e4b0e0fa5f1b4271"},{"code":"(fn [x y]\n  (loop [list x num y time 0]\n    (if (= time num)\n      (first list)\n      (recur (rest list) num (+ time 1))\n    )\n  )\n)","problem":21,"user":"4fc8f671e4b0ee37620e1840"},{"code":"(fn enesimo [x y]\r\n  (cond \r\n    (zero? y) (first x)\r\n    (= (first x) nil) nil\r\n  :else (enesimo (rest x) (dec y))))","problem":21,"user":"50206641e4b0cb6ebc0a42f5"},{"problem":21,"code":"(fn nth' [xs n]\n  (if (= n 0)\n    (first xs)\n    (nth' (rest xs) (- n 1))))","user":"5717ad6fe4b07c98581c3b14"},{"code":"(fn [c n] (\n          \tif (= n 0)\n          \t\t(first c)\n          \t(recur (rest c) (dec n))))","problem":21,"user":"52394c03e4b0d705d026ef09"},{"problem":21,"code":"(fn return-nth\n  [x y]\n  (second (take-nth y x)))","user":"56f35fafe4b046a417f92051"},{"code":"(fn [x y] (\n  loop [coll x counter y]\n    (if (zero? counter)\n      (first coll)\n    (recur (rest coll) (dec counter)))))","problem":21,"user":"5068c203e4b0c0169921a8e4"},{"problem":21,"code":"(fn [coll index]\n (first (drop index coll)))","user":"5412646de4b01498b1a719d4"},{"problem":21,"code":"(fn [s n] \n  (last (take (+ n 1) s)))","user":"55456a3ce4b0a04f79299534"},{"problem":21,"code":"(fn mylast [a x] (let [ra (rest a)] (if (= x 0) (first a) (mylast ra (- x 1)))))","user":"5537f167e4b09218d5f44fd7"},{"problem":21,"code":"(fn [s index]\n  (loop [szn s i index]\n    (if (= i 0) (first szn)\n      (recur (rest szn) (dec i)))))","user":"60264d89e4b0d5df2af2222d"},{"problem":21,"code":"(fn [sq n]\n  (loop [sq-it sq\n         it 0]\n    (if (= it n)\n      (first sq-it)\n      (recur (rest sq-it)\n             (inc it)))))","user":"559d33b3e4b0ec2b359424d9"},{"code":"(fn [s i] (get (vec s) i))","problem":21,"user":"4f282da7e4b0d6649770a013"},{"problem":21,"code":"(fn enth [a-seq n]\n  \t(if (= 0 n) \n      (first a-seq)\n      (enth (rest a-seq) (dec n) )\n     )\n  )","user":"5dcc651de4b02b31cc3da3c8"},{"problem":21,"code":"(fn [l ind] \n  (first (drop ind l)))","user":"5864beafe4b0f14aab7c8841"},{"problem":21,"code":"(fn foo [s n] (\n               if (= n 0) \n               (first s) \n               (foo (rest s) (dec n))\n               )\n  )","user":"575689f2e4b02ea1147992dd"},{"problem":21,"code":"(fn\n  [v x]\n  (loop [w v n 0]\n   (if (= n x)\n    (first w)\n    (recur (rest w) (+ 1 n)))))","user":"57500d13e4b02ea114799268"},{"code":"(fn nth-coll [coll n]\n  (first (drop n coll)))","problem":21,"user":"4e162b3d535d04ed9115e7e8"},{"problem":21,"code":"(fn [coll i]\n  (loop [iter i\n         c coll]\n    (if (= iter 0)\n      (first c)\n      (recur (- iter 1) (rest c))\n      )\n    )\n  )","user":"5e862cd7e4b09a7a73c8bbde"},{"problem":21,"code":"#(loop [list %1\n        i %2]\n   (if (= i 0)\n     (first list)\n     (recur (rest list) (- i 1))))","user":"57597fade4b02ea11479931d"},{"problem":21,"code":"(fn [ s n] (first (drop n s)))","user":"51e58104e4b0efabf93c02cd"},{"code":"(fn [coll n] (if (= n 0) (first coll) (recur (rest coll) (dec n))))","problem":21,"user":"4e3f595d535dc968683fc498"},{"problem":21,"code":"(fn _nth [l n] (if (= n 0) (first l) (_nth (rest l) (dec n))))","user":"5606a4ace4b08b23635d3175"},{"code":"(fn anth [l n] (first (nthnext l n)))","problem":21,"user":"52402407e4b0ad64fa01030e"},{"code":"#(loop [coll %1 n %2]\n\t(if (= n 0)\n\t\t(first coll)\n\t\t(recur (rest coll) (- n 1))))","problem":21,"user":"5370b386e4b0fc7073fd6e9b"},{"problem":21,"code":"(fn get-nth [x, i] (cond (= 0 i) (first x) :else (get-nth (rest x) (- i 1))))","user":"550cbb3be4b06e50f9beb155"},{"code":"(fn fun [x y] ( if (= y 0) (first x) (fun (rest x) (- y 1)) ))","problem":21,"user":"52599ea5e4b0cb4875a45cdf"},{"problem":21,"code":"(fn[coll index]\n  (first (drop index coll)))","user":"56772b21e4b05957ce8c6164"},{"problem":21,"code":"(fn [a b] (get(vec a) b))","user":"55896a0ce4b059ccff29b204"},{"code":"(fn [arr idx]\n   (last (take (inc idx) arr)))","problem":21,"user":"53489329e4b084c2834f4a5b"},{"code":"(fn get_nth [x index]\n  (if (= index 0)\n    (first x)\n    (get_nth (rest x) (- index 1))\n  )\n)","problem":21,"user":"51361c16e4b04ac1f358dd4b"},{"code":"(fn mynth [x n] ((vec x) n))","problem":21,"user":"5255bf1ee4b0541d1855b9f1"},{"code":"(fn get-n [a-list n]\n  (if (= n 0)\n  (first a-list)\n  (get-n (rest a-list) (- n 1)))\n  )","problem":21,"user":"53713ec8e4b0fc7073fd6eae"},{"code":"(fn [s i]\n   (when (seq s)\n     (if (== i 0)\n       (first s)\n       (recur (rest s) (dec i)))))","problem":21,"user":"4f301d02e4b0d6649770a072"},{"code":"(fn [list n]\n  (if (= 0 n)\n    (first list)\n    (recur (next list) (dec n))))","problem":21,"user":"50052fd0e4b0678c553fc45d"},{"problem":21,"code":"(fn [_seq_, index]\n  (when (< index (count _seq_))\n    (->> _seq_ (take (+ index 1)) (last)))\n  )","user":"578acd37e4b0ebec4cfb7541"},{"problem":21,"code":"(fn [s n]\n  (loop [s s\n         x 0]\n  (if (< x n)\n    (recur (next s)\n           (inc x))\n    (first s))))","user":"5703cbbee4b08d47c97781fb"},{"code":"(fn [x n]\r\n    (loop [i (first x) c 0 s (next x)]\r\n        (if (= c n)\r\n          i\r\n          (if s\r\n            (recur (first s) (inc c) (next s))\r\n            (throw (IndexOutOfBoundsException.))))))","problem":21,"user":"4e21c139535d04ed9115e819"},{"problem":21,"code":"(fn booth [xs idx]\n  (if (= idx 0)\n    (first xs)\n    (booth (rest xs) (- idx 1))\n    )\n  )","user":"54b9a5b3e4b0ed20f4ff6eaf"},{"code":"(fn [seq num]\n  (case num\n    0 (first seq)\n    (recur (rest seq) (- num 1))))","problem":21,"user":"4fceef7ae4b03432b189f40a"},{"code":"(fn get-nth [coll index] (first (drop index coll)))","problem":21,"user":"4f2942ace4b0d6649770a01e"},{"problem":21,"code":"(fn [x n]\n  (get (into [] x) n))","user":"575683aee4b02ea1147992dc"},{"problem":21,"code":"(fn [coll n]\n    (loop [coll coll n n]\n        (cond\n            (empty? coll) nil\n            (= n 0) (first coll)\n            :else (recur (rest coll) (- n 1)))))","user":"5b0cd5b6e4b0cc2b61a3bde7"},{"problem":21,"code":"(fn nth1 [s n] (if (= n 0) (first s) (nth1 (rest s) (dec n))))","user":"54f3d6c7e4b050824f58f5cb"},{"problem":21,"code":"(fn valat [l, n] (if (= n 0) (first l) (valat (rest l) (- n 1))))","user":"58633954e4b0f14aab7c8819"},{"problem":21,"code":"#(loop [i %2 data %1] (if (= i 0) \n                        (first data) \n                        (recur (- i 1) (rest data))\n                        )\n   )","user":"56af842de4b061e3ca319ad2"},{"code":"(fn [x y]\n  (last (take (+ y 1) x)))","problem":21,"user":"4f104c76535d64f603146416"},{"problem":21,"code":"(fn [coll n] \n  (first (drop n coll )))","user":"54f03f8ce4b024c67c0cf891"},{"code":"(fn [xs i]\n  (let [y (first xs)\n        ys (rest xs)]\n    (if (= i 0)\n      y\n      (recur ys (- i 1)))))","problem":21,"user":"52e41c22e4b09f7907dd144b"},{"code":"(fn [coll n]\n  (loop [k n\n         c coll]\n    (if (= k 0)\n      (first c)\n      (recur (dec k) (rest c)\n             ))))","problem":21,"user":"50eded45e4b06330c1f87c4d"},{"problem":21,"code":"(fn [col index] (if (= index 0)\n                  (first col)\n                  (recur (rest col) (dec index))))","user":"58bc6a88e4b0888cdc949d16"},{"problem":21,"code":"(fn nthgue\n  [x y]\n  (cond \n    (= 0 y) (first x)\n    :else (nthgue (rest x) (dec y))))","user":"56441e72e4b0018b46ad8c09"},{"problem":21,"code":"(fn [seq pos]\n  (loop [i 0\n         final-seq seq]\n    (if (= i pos)\n      (first final-seq)\n      (recur (+ i 1) (rest final-seq)))))","user":"5ca04cc3e4b048ec896c5b69"},{"code":"#(loop [list %1 n %2]\r\n    (if (= n 0) \r\n       (first list)\r\n       (recur (rest list) (dec n))))","problem":21,"user":"500ae2ade4b03d00572d2d7d"},{"problem":21,"code":"(fn [col x]\n  (first(drop x col))\n )","user":"5f837b30e4b01aacbe7a2714"},{"code":"(fn [x y] (loop [n 0 l x] (if (= n y) (first l) (recur (inc n) (rest l)))))","problem":21,"user":"53990bd8e4b0b51d73faaf03"},{"problem":21,"code":"(fn [m pos] (last (take (inc pos) m)))","user":"536fd48be4b0fc7073fd6e88"},{"problem":21,"code":"(fn mynth [l n]\n  (if (= 0 n)\n    (first l)\n    (recur (rest l) (dec n))\n  )\n)","user":"54c82b27e4b045293a27f645"},{"code":"(fn [nums n]\n  (last (take (+ 1 n) nums)))","problem":21,"user":"503e46cee4b06c4e0e1fa264"},{"problem":21,"code":"(fn [coll i] (first ((apply comp (repeat i rest)) coll)))","user":"570e40b8e4b0b0fb43fd06ea"},{"problem":21,"code":"#(loop [n 0 v %1] \n   (if (= n %2) \n     (first v) \n     (recur (inc n) (rest v))))","user":"53ea5851e4b036ad0777e4e4"},{"problem":21,"code":"(fn getnth [s n] (if (= n 0) (first s) (getnth (rest s) (- n 1))))","user":"59468de7e4b07ddc2dafad88"},{"code":"(fn foo [xs i] (if (= i 0) (first xs) (foo (rest xs) (dec i))))","problem":21,"user":"4f2ef48be4b0d6649770a06c"},{"problem":21,"code":"(fn my-nth [s p]\n  (if (= p 0) (first s) (my-nth (rest s) (dec p))))","user":"546587afe4b01be26fd746de"},{"problem":21,"code":"(fn [coll n]\n  (->> coll\n       (take (+ 1 n))\n       (last)))","user":"605b319de4b079a07f8593f7"},{"problem":21,"code":"#(first ((fn [coll count] (if (= count 0) coll (recur (rest coll) (- count 1)))) %1 %2))","user":"553c4614e4b09218d5f45014"},{"problem":21,"code":"(fn [l n] (if (== n 0) (first l) (recur (rest l) (- n 1))))","user":"53fe1c3be4b0de5c418485f2"},{"problem":21,"code":"(fn [lst idx]\n  (first ( (fn rm\n      [lst counter]\n      (if (= counter 0)\n        lst\n        (rm (rest lst) (- counter 1)))) lst idx)))","user":"5dd53e1de4b0948ae9d9ad78"},{"problem":21,"code":"(fn my-nth\n  ([l n]\n   (my-nth l n 0))\n  ([l n c]\n   (if (= n c)\n     (first l)\n     (my-nth (rest l) n (inc c)))))","user":"56084e91e4b046a4fc0ac00f"},{"problem":21,"code":"#(let [f (first %1) r (rest %1) num %2] (if (= num 0) f (recur r (dec num))))","user":"58767e82e4b01531a375ea85"},{"problem":21,"code":"(fn [elms n]\n  (loop [elms elms\n         n n]\n    (if (= n 0)\n      (first elms)\n      (recur (rest elms) (dec n)))))","user":"574a71b7e4b02ea1147991fb"},{"problem":21,"code":"(fn [the-seq idx] (last (take (+ idx 1) the-seq)))","user":"57024aefe4b08d47c97781df"},{"code":"(fn [xs n] (if (= 0 n) (first xs) (recur (rest xs) (dec n))))","problem":21,"user":"4e4fbd0c535dc968683fc4e9"},{"problem":21,"code":"(fn [coll index]\n  (if (= 0 index)\n    (first coll)\n    (recur (rest coll) (- index 1))))","user":"5c24671be4b07e362c2305a1"},{"problem":21,"code":"(fn [list n] ((comp peek vec #(take (+ n 1) %)) list))","user":"59e6708ce4b08badc2a0c571"},{"problem":21,"code":"(fn [l i] (first (subvec (vec l) i)))","user":"556f443be4b09a3098a5251e"},{"problem":21,"code":"(fn e21\n  [s n]\n  (first (drop n s)))","user":"5bd75870e4b0ed4b8aab4bc0"},{"code":"(fn mynth [x n] \n  (if (> n 0)\n  (mynth (rest x) (- n 1))\n  (first x)))","problem":21,"user":"52b9e920e4b07a9af57922c9"},{"problem":21,"code":"(fn [xs n] ((zipmap (range 0 (+ n 1)) xs) n))","user":"5a9b06dde4b0d174b936c7c5"},{"problem":21,"code":"(fn [items elem]\n  (->> items\n       (take (inc elem))\n       last))","user":"5ff8c2eae4b06df49cee14a9"},{"code":"(fn [l n]\n  (last (take (+ n 1) l)))","problem":21,"user":"50b21551e4b03ea880433559"},{"problem":21,"code":"#(loop [ls %1 n %2] (if (= n 0) (first ls) (recur (rest ls) (- n 1))))","user":"5654e024e4b0f9d632dd848d"},{"code":"(fn [sequence number] (get (vec sequence) number))","problem":21,"user":"536bb179e4b0243289761ec1"},{"problem":21,"code":"(fn f [s n]\n  (first (drop n s)))","user":"56df62b3e4b0ca2494a095ef"},{"code":"(fn [aseq n]\n           (if (not= n 0)\n               (recur (rest aseq) (dec n))\n               (first aseq)))","problem":21,"user":"4e463703535dc968683fc4b2"},{"code":"(fn [v num]\n  (if (zero? num)\n      (first v)\n    (recur (rest v) (- num 1))))","problem":21,"user":"4f07dfa9535dcb61093f6c30"},{"problem":21,"code":"(fn [col pos]\n  (if (= pos 0)\n    (first col)\n    (recur (rest col) (dec pos))))","user":"5e566668e4b027a2e10ac0f9"},{"problem":21,"code":"(fn my-nth [l n]\n  (last (take (inc n) l)))","user":"557bcce4e4b05c286339e0b9"},{"code":"(fn [s, i] (first (drop i s)))","problem":21,"user":"5191a9e6e4b0d428d29dc1b5"},{"problem":21,"code":"(fn [list x] (last (take (inc x) list)))","user":"5c5d8c04e4b01df32ab732b4"},{"code":"(fn [a n] (last (take (+ n 1) a)))","problem":21,"user":"502c8681e4b0532a782a5e35"},{"problem":21,"code":"#(loop [lst %1 target %2] (if (= target 0)(first lst) (recur (rest lst) (dec target))))","user":"59fea630e4b01bb0ae8afd10"},{"problem":21,"code":"(fn [collection index]\n    (loop [cnt 0 coll collection]\n      (if (= index cnt)\n        (first coll)\n          (recur (inc cnt)\n                 (rest coll)\n                 )\n        )\n      ))","user":"5aefd746e4b0cc2b61a3bc3d"},{"code":"(fn [x y]\n   (if (list? x) (peek (reduce (fn [a b] \n                                (pop a)\n                                ) x (range y)))\n   (peek (reduce (fn [a b] \n                                (pop a)\n                                ) (apply list x) (range y)))\n     )\n   )","problem":21,"user":"528ce039e4b0239c8a67aebc"},{"code":"(fn nth-element [sequence n]\n  (if (= n 0) (first sequence)\n    (nth-element (rest sequence) (- n 1))\n ))","problem":21,"user":"50909368e4b084db37c1e074"},{"problem":21,"code":"(fn [col n]\n  (loop [n n\n         col col]\n    (if (zero? n)\n      (first col)\n      (recur (- n 1) (rest col)))))","user":"604a30c6e4b02d28681c77f0"},{"problem":21,"code":"(fn [m n] (get (into [] m) n))","user":"593ab583e4b069cdc2982b57"},{"code":"(fn n-th [list pos]\n  (if (= pos 0)\n      (first list)\n      (n-th (rest list) (dec pos))))","problem":21,"user":"504f3a85e4b0a02f9cffde5c"},{"code":"(fn n-element [coll n] (if (= n 0) (first coll) (recur (rest coll) (dec n))))","problem":21,"user":"5287f34ee4b0239c8a67ae43"},{"problem":21,"code":"(fn [mass ind]\n  \t(if (= ind 0)\n      (first mass)\n      (recur (rest mass) (dec ind) )))","user":"53ecaf1ce4b0d648e757f4b4"},{"code":"(fn [s n]\n    (loop [s' s i 0]\n        (if\n            (= i n)\n            (first s')\n            (recur (rest s') (inc i)))))","problem":21,"user":"5201ada5e4b0b2e020a18f14"},{"problem":21,"code":"(let [f (fn [f c n] (if (= 0 n) (first c) (f f (rest c) (dec n))))] (partial f f))","user":"547d8e93e4b0c51c1f4d72f4"},{"code":"#(.get %1 %2 )","problem":21,"user":"5151d0ade4b03e678e393ade"},{"code":"#(loop [c# %1 n# %2]\n  (if (= n# 0)\n    (first c#)\n    (recur (rest c#) (dec n#))))","problem":21,"user":"5127e504e4b03a34742b4302"},{"code":"(fn [ls neth]\n  (loop [l ls\n    n neth]\n    (if\n      (= 0 n) (first l)\n (recur (rest l) (dec n)))))","problem":21,"user":"4e43c91f535dc968683fc4a5"},{"problem":21,"code":"(fn [coll i]\n  (if (= i 0)\n    (first coll)\n    (recur (rest coll) (dec i))))","user":"54a1d047e4b09f271ff37c4f"},{"code":"(fn foo [coll n] \n  (if (= n 0) (first coll) (foo (rest coll) (dec n))))","problem":21,"user":"4faf97d8e4b081705acca258"},{"code":"(fn my_func [x n] (if (= n 0) (first x) (my_func (rest x) (- n 1))))","problem":21,"user":"522d3a16e4b0e26240291d50"},{"code":"(fn [l i] \n  (if (zero? i)\n    (first l)\n    (recur (rest l) (dec i))))","problem":21,"user":"50d0b466e4b00b15ecee9764"},{"code":"(fn my-nth [s n]\n  (if (= n 0)\n    (first s)\n    (my-nth (rest s) (dec n))))","problem":21,"user":"4ef0a39b535dced4c769f20c"},{"problem":21,"code":"(fn nth1 [x n] (if (= n 0) (first x) (nth1 (rest x) (- n 1))))","user":"5ad6d0c9e4b0ea6055cfac11"},{"code":"#(loop \n  [i 0 l %1]\n  (if (= i %2)\n    (first l)\n    (recur (inc i) (next l))\n  )\n )","problem":21,"user":"52503747e4b0541d1855b828"},{"code":"(fn [coll n]\n  (loop [i    0\n         more coll]\n    (if (= i n) (first more)\n      (recur (inc i) (rest more)))))","problem":21,"user":"504ee511e4b0e7ad84dbc4a4"},{"problem":21,"code":"(fn [x y]\n  (loop [c y, a x]\n    (if (= c 0)\n      \t(first a)\n      \t(recur (dec c) (rest a))\n    )\n  )\n)","user":"55f68360e4b06e875b46ce93"},{"problem":21,"code":"(fn ith [c i] (if (= i 0) (first c) (ith (rest c) (dec i))))","user":"59614d9ce4b066ee0a44b09d"},{"problem":21,"code":"(fn [input-list n] (loop [cnt n, g-list input-list](if (zero? cnt)(first g-list)(recur (dec cnt)(rest g-list)))))","user":"5ef4fca7e4b07c55ae4a0546"},{"code":"(fn [coll n](first (nthrest coll n)))","problem":21,"user":"522b1993e4b0d34ee08e71b6"},{"problem":21,"code":"(fn[coll n]\n  (first (drop n coll)))","user":"5472cba1e4b094393f72dd7a"},{"code":"(fn [s x]\n    (get (vec s) x))","problem":21,"user":"516095c9e4b009fba0926e29"},{"problem":21,"code":"(fn[xs i] (.get xs i))","user":"55c63dc4e4b0e31453f649bb"},{"code":"(fn [lst n] (.get lst n))","problem":21,"user":"51f20db0e4b0210f90e74539"},{"code":"(fn [sq n] \n  (if (= n 0) \n    (first sq) \n    (recur (next sq) (dec n))))","problem":21,"user":"523327fce4b0f0b72fabf3fc"},{"code":"(fn na [col x] (loop [i x] (if (zero? x) (first col) (na (rest col) (- x 1)))))","problem":21,"user":"4e539f7e535d8a8b8723a272"},{"problem":21,"code":";;(fn [x y] \n;;  \t(last (take (+ 1 y) x))\n;;)\n;; or using Java\n;; .get\n\n#(last (take (inc %2) %1))","user":"5595c60ee4b0c79f6e1db96f"},{"code":"(fn [coll n] ((apply comp (cons  first (repeat n rest))) coll))","problem":21,"user":"4e86d3cf535dceadca46984c"},{"problem":21,"code":"(fn [coll n] (->> coll (drop n) (first)))","user":"4eb9d8e0535dfed6da9c6d60"},{"problem":21,"code":"(fn [x n] (peek (reverse (take (+ n 1) x)\n                        )\n               )\n  )","user":"5fdc04d8e4b05ac5b16ea138"},{"problem":21,"code":"(fn nthele [li el] (if (= 0 el) (first li) (nthele (rest li) (- el 1))))","user":"5ec819b4e4b08d0ec38692e2"},{"problem":21,"code":"(fn [coll n] (first ((split-at n coll) 1)))","user":"549227d8e4b0b312c081ff3f"},{"problem":21,"code":"(fn f [xs n]\n  (if (= n 0)\n      (first xs)\n      (f (rest xs) (dec n))))","user":"548fa2dfe4b0e286459a1240"},{"code":"(fn [s i]\n  (if (= i 0)\n    (first s)\n    (recur (rest s) (- i 1))))","problem":21,"user":"4e6ed7e4535d5021c1a89613"},{"problem":21,"code":"(fn [xs n]\n   (loop [i 0\n          xs xs]  \n     (if (= i n)    \n        (first xs)    \n        (recur (inc i) (rest xs))\n     )\n   )\n )","user":"5cc3f603e4b0ccb0619627fd"},{"problem":21,"code":"(fn [v x] (last (take (inc x) v)))","user":"56d0ba82e4b0ea9b8538f785"},{"problem":21,"code":"(fn [collection, element]\n  (loop [col collection e element]\n    (if (= e 0)\n      (first col)\n      (recur (rest col)\n             (dec e)))))","user":"564b1f34e4b0284900eef662"},{"problem":21,"code":"(fn [l,x] (.get l x))","user":"5b5fa65fe4b0c6492753e6f6"},{"problem":21,"code":"#(->> %1\n \t  (drop %2)\n      first)","user":"5bacfa46e4b0a20761a234a2"},{"code":"(fn [l n] \n  (loop [i n items l] \n    (if (= i 0) \n      (first items) \n      (recur (- i 1) (rest items)))))","problem":21,"user":"524f0deee4b0541d1855b7fd"},{"code":"(fn [col n] (first (nthrest col n)))","problem":21,"user":"513de0e6e4b0825f97f7f965"},{"code":"(fn mynth [xs n]\r\n  (if (= n 0)\r\n    (first xs)\r\n    (mynth (rest xs) (dec n))))","problem":21,"user":"4dd023dd535d5973398f92ad"},{"code":"(fn [s ord] (loop [acc 0 sekv s] (if (= acc ord) (first sekv) (recur (inc acc) (next sekv)))))","problem":21,"user":"5106c803e4b01150e115ebee"},{"code":"(fn [s n] \n  (loop [s s\n         n n]\n    (if (= n 0)\n      (first s)\n      (recur (rest s) (dec n)))))","problem":21,"user":"51f583d2e4b0abb92f97f9d4"},{"code":"(fn [data i] (last (take (inc i) data)))","problem":21,"user":"50b79c5fe4b0cf3e51c3046c"},{"problem":21,"code":"(fn my-nth [s n]\n  (if ( = 0 n)\n   (first s)\n    (my-nth (rest s) (dec n))\n    ))","user":"59f66d6fe4b0966464fe6ad2"},{"problem":21,"code":"(fn [coll n] \n  (loop [c coll i n]\n    (if (zero? i) \n      (first c)\n      (recur (rest c) (dec i)))))","user":"54a97853e4b09f271ff37cae"},{"problem":21,"code":"(fn [x c]\n  (loop [s x\n         i 0]\n    (if (= i c)\n      (first s)\n      (recur (rest s) (inc i)))))","user":"5eb46c9de4b00a66d4a9521e"},{"problem":21,"code":"(fn [col n] (let [r col n n] (if (zero? n) (first r) (recur (rest r) (dec n)))))","user":"5709eacde4b0b0fb43fd06b3"},{"code":"(fn [xs n]\n    (if (zero? n)\n      (first xs)\n      (recur (rest xs) (dec n))))","problem":21,"user":"5180c69ae4b06b8caf33fa00"},{"code":"#(let [coll %1 th %2 ]\n  (loop [i 0 col coll]\n\t   (if (= i th)\n\t       (first col)\n\t       (recur (+ i 1) (next col)))))","problem":21,"user":"4e739e13535dff18050a9c76"},{"code":"(fn nTh [x y] (if (= y 0) (first x) (recur (rest x) (- y 1))))","problem":21,"user":"53497207e4b084c2834f4a63"},{"problem":21,"code":"(fn [c n]\n  (if (< n 1)\n    (first c)\n    (recur (rest c) (dec n))))","user":"543be8f0e4b032a45b869337"},{"code":"(fn [a-seq target-index]\n  (loop [ n 0 x a-seq]\n    (if (= n target-index )\n      (first x)\n      (recur (inc n) (rest x)))))","problem":21,"user":"4f1f1a9d535d64f60314649d"},{"code":"(fn ! [x i] (if (= i 0) (first x) (! (rest x) (dec i))))","problem":21,"user":"524da3a5e4b0a16e35cf6df3"},{"problem":21,"code":"(fn nthelt [x n] (if (= n 0) (first x) (nthelt (rest x) (- n 1))))","user":"53c051a5e4b0c98a41f5ccae"},{"problem":21,"code":"#(loop [col %1\n        counter 0]\n    (if (< counter %2)\n      (recur (rest col) (inc counter))\n      (first col)))","user":"545b486ae4b01be26fd7464f"},{"problem":21,"code":"(fn my-nth [s n]\n  (if (zero? n)\n    (first s)\n    (recur (next s) (dec n))))","user":"52b36925e4b0c58976d9ad0b"},{"code":"(comp first (fn [s i] (drop i s)))","problem":21,"user":"521177cee4b07aea8afc4f6e"},{"code":"(fn [sequence n] \n  (loop [s sequence c 0]\n    (if (= c n)\n        (first s)\n        (recur (rest s) (inc c)))))","problem":21,"user":"4e8ad247535d65386fec2111"},{"code":"(fn nth-element [coll n] \r\n  (loop [col coll i 0]\r\n\t\t(if (= n i)\r\n\t\t\t(first col)\r\n\t\t\t(recur (rest col) (+ i 1))\r\n\t\t)\r\n\t)\r\n)","problem":21,"user":"506f9423e4b082ae7d1032ca"},{"problem":21,"code":"(fn [seq pos] ( first (drop pos seq)))","user":"5b80a5cfe4b047b03b20377f"},{"code":"#(first (take-last (- (count %1) %2) %1))","problem":21,"user":"52385d2ce4b0fae3832e99fe"},{"code":"(fn [seq n]\n  (if (= 0 n)\n  (first seq)\n  (recur (rest seq) (dec n))))","problem":21,"user":"4e4eecf6535dc968683fc4e8"},{"problem":21,"code":"#(loop [col %1 n %2] (if (= 0 n) (first col) (recur (rest col) (dec n))))","user":"52725fa4e4b03e8d9a4a742b"},{"problem":21,"code":"(fn [sqn n] (last (take (inc n) sqn)))","user":"5a2a0cb6e4b09cafd31c7f2c"},{"problem":21,"code":"(fn [x n] (if (= n 0)\n           (first x)\n           (recur (next x) (- n 1))))","user":"5605b5e9e4b08b23635d316e"},{"code":"(fn nt [x y] (if (> y 0) (nt (rest x) (- y 1)) (first x)))","problem":21,"user":"52b18a74e4b0c58976d9acdf"},{"code":"(fn [aseq n]\n    (cond\n      (empty? aseq) nil\n      (= 0 n) (first aseq)\n      :else (recur (rest aseq) (dec n))))","problem":21,"user":"50eddbc4e4b06330c1f87c4b"},{"code":"(fn [coll i]\n  (loop [c coll, n i]\n    (if (= 0 n)\n      (first c)\n      (recur (rest c) (- n 1)))))","problem":21,"user":"52ba2af3e4b07a9af57922cc"},{"code":"(fn [l, i]\n  (if (= i 0) (first l) (recur (rest l) (dec i)))\n)","problem":21,"user":"52593207e4b0cb4875a45cd3"},{"problem":21,"code":"#(loop [e %1 i %2]\n   (if (= 0 i)\n     (first e)\n     (recur (rest e) (- i 1))\n     )\n   )","user":"59ec120ae4b0249b72820787"},{"code":"(fn my-nth [x y] (if (= 0 y) (first x) (recur (rest x) (- y 1))))","problem":21,"user":"4f03fb59535dcb61093f6b89"},{"problem":21,"code":"(fn [list n]\n        (last (take (inc n) list)))","user":"552a8bbae4b0ffed3738f956"},{"problem":21,"code":"(fn nn [v i] (if (> i 0) (nn (next v) (dec i)) (first v)))","user":"543a8256e4b032a45b869327"},{"problem":21,"code":"(fn [sq n] \n  (if (zero? n) \n     (first sq)\n     (recur (rest sq) (dec n))))","user":"60537cd1e4b04c8f2157d152"},{"problem":21,"code":"(fn n-th [coll x] \n  (loop [c coll\n    \t n x]\n\t(if (= 0 n)\n      (first c)\n      (recur (rest c) (- n 1)))))\n\n;; (fn [coll n] (first (drop n coll)))","user":"59ccd71be4b0a024fb6ae5de"},{"problem":21,"code":"(fn [seq n] (first (nthrest seq n)))","user":"588039d0e4b0f1effa3b760c"},{"problem":21,"code":"(fn nth-el [l n]\n  (loop [i 0\n         el l]\n    (println i)\n    (println el)\n    (if (= i n)\n      (first el)\n      (recur (+ i 1) (rest el)))))","user":"5b9acb23e4b0c0b3ffbd4aef"},{"problem":21,"code":"(fn [m k] (->> m (reduce (fn [acc n] (let [cnt (count acc)] (conj acc [cnt n]))) []) (filter #(= k (first %))) first last))","user":"5641418fe4b08d4f616f5ef7"},{"problem":21,"code":"(fn tyj-nth [xs n]\n(loop [c 0 f xs] (if (= c n) (first f) (recur (inc c) (rest f))))\n)","user":"5e3248d9e4b05b4b0151623a"},{"problem":21,"code":"(fn  [xs n]\n\n  (loop [xss xs m n]\n    \n    (if (= m 0)\n      (first xss)\n      (recur (rest xss) (dec m))))\n  )","user":"5fa6db67e4b0fa27300f3dd2"},{"problem":21,"code":"(fn index [x n] \n  (if (= n 0) \n    (first x)\n    (index (rest x) (- n 1))))","user":"54a9f704e4b09f271ff37cb2"},{"problem":21,"code":"(fn takenth [coll n]\n  (if (> n 0)\n    (takenth (next coll) (- n 1))\n    (first coll)))","user":"57d711c5e4b0bd073c2023d5"},{"code":"(fn Nth [x n] \n  (if \n    (= 0 n) (first x)\n    (Nth (rest x) (- n 1))\n  )  \n)","problem":21,"user":"4e283bae535deb9a81d77efb"},{"code":"(fn [list N]\n  (loop [l list n N]\n    (if (= n 0)\n      (first l)\n      (recur (rest l) (- n 1)))))","problem":21,"user":"4e6f2a1e535d5021c1a89619"},{"problem":21,"code":"(fn [seqx targetpos] \n  (loop [curr   (first seqx) \n         others (rest seqx) \n         pos    0 \n         target targetpos]\n   (if (= pos target)\n     curr\n     (recur (first others) \n            (rest others) \n            (+ pos 1) \n            target))))","user":"5711b532e4b09c608db70449"},{"problem":21,"code":"(fn [x n] (loop [coll x i 0] (if (= n i) (first coll) (recur (rest coll) (inc i)))))","user":"573c813be4b0cd1946bd10c5"},{"problem":21,"code":"( fn foo [s n]\n\t( if (= n 0)\n    \t(first s)\n      \t(foo (rest s) (- n 1))\n    )  \n)","user":"577d3feee4b0c8d87281f6d2"},{"code":"(fn   \n  ([l index] \n    (if (= index 0) (first l)\n      (recur (rest l) (- index 1)) )\n  )\n)","problem":21,"user":"4fb5705fe4b081705acca2be"},{"code":"(fn getnth [mylist n] (\n  last (\n    take (+ n 1) mylist\n)))","problem":21,"user":"4f1b1f31535d64f603146477"},{"problem":21,"code":"(fn nth1 [L, n] (if (<= n 0) (first L) (nth1 (rest L) (- n 1))))","user":"5594f8aee4b0c79f6e1db95c"},{"code":"(fn my-nth [my-coll nth-count] (\n  last (take (inc nth-count) my-coll)))","problem":21,"user":"50b14d02e4b009df37c708d0"},{"problem":21,"code":"#(loop [l %\n         n %2]\n    (if (= n 0)\n      (first l)\n      (recur (rest l) (dec n))))","user":"5d6c2aace4b04d129b00f2ad"},{"problem":21,"code":"(fn [items x] (last (take (+ 1 x) items)))","user":"57b9bfdae4b0fbc9809a27f5"},{"code":"#(if (> %2 0) (recur (rest %) (- %2 1)) (first %))","problem":21,"user":"517bbbfce4b07ef0e56148cf"},{"code":"(fn [v i] ((vec v) i))","problem":21,"user":"53403110e4b085b17e897da6"},{"problem":21,"code":"(fn f [a n] (if (= n 0)\n              (first a)\n              (f (rest a) (dec n))))","user":"554c0adde4b0a04f7929959e"},{"code":"(fn nth-elem [seq index]\n  (if (= index 0) \n    (first seq)\n    (nth-elem (rest seq) (- index 1))))","problem":21,"user":"503e6047e4b06c4e0e1fa266"},{"problem":21,"code":"(fn [il n] (loop [c n tl il] (if (zero? c) (first tl) (recur (dec c) (rest tl)))))","user":"57db12fde4b0bd073c20241e"},{"code":"(fn [coll n] \n  (if (= n 0)\n    (first coll)\n    (recur (rest coll) (dec n))\n  )\n)","problem":21,"user":"50217818e4b00bba4502f7a7"},{"code":"(fn item-n [l n] (if (= n 0)\n                   (first l)\n                   (item-n (rest l) (- n 1))))","problem":21,"user":"4f49c002e4b0d56e7bb92bfd"},{"code":"#(if (= %2 0)\n     (first %)\n     (recur (next %) (dec %2)))","problem":21,"user":"4e6acc33535d8ccf87e9ff05"},{"code":"(fn get-nth [coll n]\n  (if (= n 0) (first coll) (recur (rest coll) (dec n))))","problem":21,"user":"4f6543cae4b07046d9f4ef41"},{"code":"(fn f [x y] (if (= y 0)\n  (first x)\n  (f (rest x) (dec y))\n))","problem":21,"user":"50063efae4b0678c553fc480"},{"code":"(fn [coll i]\n  (loop [xth i\n    xs coll]\n    (if (= 0 xth) \n(first xs) \n(recur (- xth 1) (rest xs)))))","problem":21,"user":"4e6ab9cb535d8ccf87e9fefe"},{"code":"(fn custom-nth [x,n] (if (= n 0) (first x) (custom-nth (rest x) (dec n))))","problem":21,"user":"515dfcf8e4b049add99a0532"},{"problem":21,"code":"(fn [col n] ( first (drop n col)))","user":"529ac5d4e4b02ebb4ef7509b"},{"problem":21,"code":"(fn looker [aseq n] \n  (if (= n 0)\n    (first aseq)\n    (looker (rest aseq) (- n 1))\n  )\n)","user":"555f7ed0e4b0c656e3ff17b8"},{"problem":21,"code":"(fn \n   [col, n]\n   (loop [co 0\n          c col]\n     (if (= n co)\n       (first c)\n       (recur (inc co) (rest c))\n       )))","user":"54e336f3e4b024c67c0cf7da"},{"code":"(fn [el n] (loop [i 0 items el] (if (= i n) (first items) (recur (inc i) (rest items)))))","problem":21,"user":"5357fd93e4b04ce2eb3ed285"},{"problem":21,"code":"; (fn [x n] (first (reverse (take (inc n) x))))\n\n#(first (drop %2 %1))\n\n;(fn n-th [v n] \n;  (if (zero? n)\n;    (first v) (recur (rest v) (dec n))))\n;#(if (zero? %2) \n;   (first %1) \n;   (recur (rest %1) (dec %2)))\n\n;#(get (vec %1) %2)\n;#((vec %1) %2)\n\n\n; .get","user":"591d182ee4b09b4ee5954c10"},{"problem":21,"code":"(fn [lista n] (last (take (inc n) lista)))","user":"54793488e4b0c51c1f4d72c5"},{"code":"(fn [list n]\n  (if (= n 0)\n    (first list)\n    (recur (rest list) (- n 1))))","problem":21,"user":"4ef0f1a1535dced4c769f212"},{"code":"(fn [coll index]\n  (if\n    (zero? index) (first coll)\n    (recur (rest coll) (dec index))))","problem":21,"user":"502cb310e4b0532a782a5e38"},{"problem":21,"code":"(fn [list index-item]\n(loop [xs list, index index-item]\n    (if (== 0 index)\n      (first xs)\n      (recur (drop 1 xs)(- index 1))))\n)","user":"5cbdadeee4b026601754b9ff"},{"problem":21,"code":"(fn my-nth [x n] (if (== n 0) (first x) (my-nth (rest x) (- n 1))))","user":"57a5108be4b0a966079561f4"},{"problem":21,"code":"(fn [sq n] (first (reverse (take (+ 1 n) sq))))","user":"5fcd4824e4b07e53c2f3eff9"},{"problem":21,"code":"(fn [arr x] (last (take (inc x) arr)))","user":"5d28222ee4b092dab7f59c7a"},{"problem":21,"code":"#(loop [acc %1 x %2]\n  (if (= x 0)\n    (first acc)\n    (recur (rest acc) (- x 1))))","user":"5e0f5f43e4b099d064962fba"},{"problem":21,"code":"(fn[c n](get (vec c) n))","user":"5d8aad1ce4b0915913b1d3cd"},{"problem":21,"code":"(fn [col ind] (loop [i 0 c col]\n         (cond\n           (empty? c) nil\n           (== i ind) (first c)\n           :else (recur (inc i) (rest c))\n           \n           )))","user":"580d1da7e4b0849f6811b72f"},{"code":"(fn my-nth [s i]\n  (if\n    (= 0 i)\n    (first s)\n    (my-nth (rest s) (dec i))\n  )\n  \n  \n)","problem":21,"user":"4faacc04e4b081705acca201"},{"problem":21,"code":"(fn last-ele ([a b d]  (if (= d b) (first a) (recur (rest a) b (inc d)))) ([a b](last-ele a b 0)))","user":"5a803844e4b00b71e582a04a"},{"code":"(fn neth [x y]\n  (if (= y 0)\n    (first x)\n    (neth (rest x) (- y 1))\n  )\n)","problem":21,"user":"52cefb7ee4b07d0d72b27397"},{"code":"(fn nth2[l, n] (\n  if (= n 0) \n      (first l) \n      (nth2 (rest l) (- n 1) )))","problem":21,"user":"4fe65108e4b0e8f79898fed3"},{"problem":21,"code":"(fn n-elem [r n]\n  (if(= 0 n)\n    (first r)\n    (n-elem (rest r) (dec n)\n)))","user":"5bd06861e4b0e9689409ee3a"},{"code":"(fn [lst n]\n  (if (zero? n)\n    (first lst)\n    (recur (rest lst) (dec n))))","problem":21,"user":"4f28c979e4b0d6649770a01a"},{"problem":21,"code":"(fn [x n] (first (reverse (take (inc n) x))))","user":"53c15f08e4b00fb29b221261"},{"code":"(fn this [list place] (if (= place 0) (first list) (this (rest list) (- place 1))))","problem":21,"user":"504feeb9e4b0a02f9cffdeaa"},{"problem":21,"code":"(fn [y n] (first (remove nil? (map (fn [k item] (if (= n k) item nil)) (range 0 (count y)) y))))","user":"56152a26e4b05f002753dfc1"},{"code":"(fn [l, li]\n  (loop [list-remaining l,\n         i 0]\n    (if (= i li)\n      (first list-remaining)\n      (recur (rest list-remaining) (inc i)))))","problem":21,"user":"537d366de4b06839e8705e87"},{"problem":21,"code":"#(->> %1 (take (inc %2)) (last))","user":"55e1ddf7e4b050e68259b422"},{"code":"(fn f ([c n]\n         (cond\n           (= n 0) (first c)\n           :else (f (next c) (- n 1))\n           )\n         )\n  )","problem":21,"user":"53307da1e4b019098a6f8b5e"},{"problem":21,"code":"(fn [x n]\n  (if (> n 0)\n   \t(recur (rest x) (- n 1))\n    (first x)))","user":"55f2d4ede4b06e875b46ce4c"},{"code":"(fn \n   [lst n] \n   (last (take (+ 1 n) lst)))","problem":21,"user":"5193db52e4b04df54c09802a"},{"code":"(fn [seq i] (if (zero? i) (first seq) (recur (rest seq) (dec i))))","problem":21,"user":"4ead6418535d7eef3080731f"},{"problem":21,"code":"(fn [c i] (loop [idx i coll c] (if (= idx 0) (first coll) (recur (dec idx) (rest coll)))))","user":"5cf8864be4b0b71b1d808a84"},{"problem":21,"code":"(fn [seq n] (loop [seq seq i n] (if (zero? i) (first seq) (recur (rest seq) (dec i)))))","user":"5511fd7ee4b06e50f9beb19e"},{"code":"#(letfn [(f [x n] (if (< n 1) (first x) (f (rest x) (dec n))))]\n  (f %1 %2))","problem":21,"user":"4ed94d69535d10e5ff6f5303"},{"problem":21,"code":"(fn the-nth [s n]\r\n(if (= n 0)\r\n(first s)\r\n(recur (rest s) (- n 1))))","user":"595d874de4b066ee0a44b025"},{"code":"(fn nth' [x n]\n  (if (== 0 n)\n    (first x)\n    (nth' (rest x) (dec n))))","problem":21,"user":"5131104ae4b09e21d785bdfe"},{"problem":21,"code":"(fn [x n] (if (= n 0 ) (first x) (recur (rest x) (- n 1))))","user":"59e4edffe4b08badc2a0c54c"},{"problem":21,"code":"(fn my-nth [my-seq elem]\n  (if (= elem 0)\n    (first my-seq)\n    (my-nth (rest my-seq) (- elem 1))\n    ))","user":"57024ba4e4b08d47c97781e0"},{"code":"(fn [seq index]\n  (loop [seq seq, index index]\n    (if (= index 0)\n      (first seq)\n      (recur (rest seq) (dec index)))))","problem":21,"user":"504e0136e4b078edc5f5938e"},{"problem":21,"code":"(fn [x, i] \n  (cond\n    (empty? x) nil\n    (= i 0) (first x)\n    :else (recur (rest x) (- i 1))))","user":"55c4cda5e4b0e31453f649a5"},{"problem":21,"code":"(fn [lst n]\n  (first\n   (drop n lst)))","user":"5a9cdec0e4b0d174b936c7e1"},{"code":"(fn [v n] (first (subvec (vec v) n (inc n))))","problem":21,"user":"4db3393e535df7e46ed9b6cc"},{"code":"(fn [lst n] \n  \n  (if (= (count lst) (+ n 1))\n    (last lst) \n    (recur (butlast lst) n)\n  )\n)","problem":21,"user":"50de11b2e4b061dbdced7217"},{"problem":21,"code":"(fn srch [arr n] (if (> n 0) (srch (rest arr) (- n 1)) (first arr)))","user":"5721f13ce4b0c5bde472c0be"},{"problem":21,"code":"(fn Nth [my-list n] (if (= n 0),\n                      (first my-list)\n                      (Nth (rest my-list) (dec n))))","user":"5b6b3809e4b0c6492753e7a5"},{"problem":21,"code":"(fn [coll index]\n  (first\n   (filterv\n    (fn [elem]\n      (= (.indexOf coll elem) index))\n    coll)))","user":"5cc230cee4b0ccb0619627cd"},{"code":"(fn [x n] (first (reverse (take (+ n 1) x))))","problem":21,"user":"4f565bebe4b0a7574ea7181e"},{"code":"( fn [s n] \n  (if (= 0 n) \n    (first s) \n    (recur (rest s) (dec n)) ))","problem":21,"user":"52af66d2e4b0c58976d9acba"},{"code":"#(first\n  (reverse\n  (take \n    (+ 1 %2) \n     %)))","problem":21,"user":"4e70a7c1535d5021c1a8963c"},{"problem":21,"code":"(fn [n m] (first (drop m n)))","user":"550bac80e4b06e50f9beb14a"},{"code":"(fn nz [list pos]\n  (if (<= pos 0) \n    (first list) \n    (recur (rest list) (- pos 1) ) \n  )\n)","problem":21,"user":"51f81925e4b09be9c177e526"},{"problem":21,"code":"(fn [seq num] \n  (if (zero? num)\n    (first seq)\n    (recur (rest seq) (dec num))))","user":"5a5d2965e4b0512ff01cd91d"},{"code":"(fn nieme [coll index] \n  (if (zero? index) (first coll) (nieme (rest coll) (dec index)))\n)","problem":21,"user":"4ff01fa9e4b0678c553fc321"},{"code":"(fn [sequence index] (if (= 0 index) (first sequence) (recur (rest sequence) (- index 1))))","problem":21,"user":"4fb85651e4b081705acca2d7"},{"code":"(fn [q n]\n  (cond \n    (empty? q) ()\n    (= n 0) (first q)\n    :else (recur (rest q) (dec n))))","problem":21,"user":"4eee5459535d93acb0a668c5"},{"problem":21,"code":"(fn [col n]\n      (if (zero? n)\n        (first col)\n        (recur (rest col) (dec n))))","user":"576a42e6e4b0a07e8fc1810e"},{"code":"(fn [ls i]\n  (loop [cnt 0 xs ls]\n    (if (= i cnt)\n      (first xs)\n      (recur (inc cnt) (rest xs)))))","problem":21,"user":"525941f9e4b0cb4875a45cd6"},{"problem":21,"code":"(fn nth2 [coll k] (if (= k 0) (first coll) (recur (rest coll) (dec k)) ))","user":"5db7376fe4b010eb3c36cd43"},{"problem":21,"code":"(fn[x, i] (first (filter #(= (.indexOf x %) i) x)) )","user":"52be0fd7e4b07a9af5792314"},{"problem":21,"code":"#(loop [vals %1, n %2] (if (= n 0) (first vals) (recur (rest vals) (dec n))))","user":"58f49268e4b0438e51c2cec0"},{"problem":21,"code":"#(if (= %2 0)\n   (first %)\n   (recur\n    (rest %)\n    (dec %2)))","user":"5d604682e4b0c9e5857d5007"},{"problem":21,"code":"(fn nthelement [collection x] (first (drop x collection)))","user":"5939bcb4e4b069cdc2982b3e"},{"problem":21,"code":"(fn somefunc [list n] (if (< 0 n) (somefunc (rest list) (- n 1)) (first list)))","user":"572a3d8ce4b0f4d77e651231"},{"code":"(fn [ls idx]\n  (if (pos? idx) \n    (recur (rest ls) (dec idx)) \n    (first ls))\n)","problem":21,"user":"5349a83de4b084c2834f4a66"},{"problem":21,"code":"(fn [list, pos]\n  (first (drop pos list)\n         )\n  )","user":"5d6932e6e4b0db5d338d1609"},{"problem":21,"code":"(fn [lst n]\n  (loop [l lst m 0]\n    (if (= m n)\n      (first l)\n      (recur (rest l) (inc m)))))","user":"574bd367e4b02ea114799210"},{"problem":21,"code":"(fn [s i] (if (= i 0) (first s) (recur (rest s) (- i 1)) ))","user":"5a080bdde4b01bb0ae8afde9"},{"problem":21,"code":"(fn [lst n] (first (loop [x (reverse lst)]\n  (if (>= (+ n 1) (count x))\n      x  \n    (recur (rest x))\n    ))) \n)","user":"596f6683e4b069c0a1a19877"},{"problem":21,"code":"(fn [col n]\n    (last (->> col (take (inc n))))\n  )","user":"5843b231e4b089d5ab817e3d"},{"code":"(fn [lst n]\n  (loop [r lst, i 0]\n    (if (= i n)\n      (first r)\n      (recur (rest r) (+ 1 i)))))","problem":21,"user":"539ddf25e4b0b51d73faaf3e"},{"code":"#(loop [i %1 c 0]\n   (if(= c %2) (first i)\n       (\n         recur(rest i)(inc c)\n       )\n   )\n)","problem":21,"user":"527c0509e4b03e8d9a4a75aa"},{"problem":21,"code":"#(loop [coll %1\n        x %2]\n   (if (zero? x)\n     (first coll)\n     (recur (rest coll) (dec x))))","user":"5ba15075e4b0a20761a2339e"},{"problem":21,"code":"(fn [x n] (first(nthnext x n)))","user":"558b494ce4b0277789237629"},{"problem":21,"code":"(fn \n  [seq n]\n  (\n   if (= 0 n)\n   (first seq)\n   (recur (rest seq) (- n 1))\n  )\n)","user":"5d24671ce4b02ea6f0fb6a23"},{"problem":21,"code":"(fn f [l i]\n  (if (zero? i)\n    (first l)\n    (f (rest l) (dec i))))","user":"55274467e4b0ffed3738f92b"},{"problem":21,"code":"(fn [collection index]\n  (last (take (inc index) collection)))","user":"5883d7c7e4b0f1effa3b7683"},{"problem":21,"code":"(fn [xs n]\n  (cond \n    (empty? xs) nil\n    (= n 0) (first xs)\n    :else (recur (rest xs) (dec n))))","user":"54f5e9e2e4b0f2f3c5226e9d"},{"problem":21,"code":"(fn [listje idx] (last (take (+ idx 1) listje)))","user":"5625165ce4b00a550fc9028c"},{"code":"(fn [seq index] (get (vec seq) index))","problem":21,"user":"4f030af7535dcb61093f6a49"},{"code":"(fn [seq n] \n  (first \n    (reverse \n      (take \n        (- (count seq) n) \n        (reverse seq)))))","problem":21,"user":"50522807e4b0a561d07d8f18"},{"problem":21,"code":"(fn [arr n]\n  (last (take (inc n) arr)))","user":"5f0a4904e4b09a3f05b71805"},{"problem":21,"code":"(fn getel [l n]\n  (if (= 0 n) \n    (first l) \n    (getel (rest l) (dec n))\n  )\n)","user":"579b16f7e4b05b1deef9adec"},{"code":"(fn [s n] (first (drop n (take (+ n 1) s))))","problem":21,"user":"4f856adfe4b033992c121c44"},{"code":"#(if \r\n       (= 0 %2)\r\n       (first %)\r\n       (recur (rest %) (- %2 1)))","problem":21,"user":"4fb50599e4b081705acca2b7"},{"problem":21,"code":"(fn my-nth [col n] \n  (if (zero? n)\n  (first col)\n  (my-nth (rest col) (- n 1))))","user":"5c2e2b4fe4b0d62ef62d9f01"},{"problem":21,"code":"(fn nth2 [l n] (first (nthnext l n)))","user":"5467f222e4b00cfc9eacc132"},{"code":"(fn mnth [data n]\n  (if (> n 0)\n    (mnth (rest data) (dec n))\n    (first data)))","problem":21,"user":"4fa5406fe4b081705acca1ac"},{"problem":21,"code":"(fn [lista i]\n  (loop [lst lista\n         index 0]\n    (if (= index i)\n      (first lst)\n      (recur (rest lst) (inc index)))))","user":"58a0ac0de4b02bd94d917e9c"},{"problem":21,"code":"(fn myNth [l i] (if (= i 0) (first l) (myNth (rest l) (dec i))))","user":"56ea8adfe4b04a395b9a0407"},{"code":"(fn nth-elem [s n]\n  (if (= n 0) (first s)\n  \t\t\t  (nth-elem (rest s) (dec n))))","problem":21,"user":"4e944706535dbda64a6f6b11"},{"code":"#(->> %1 (partition (inc %2)) first last)","problem":21,"user":"52b80827e4b0c58976d9ad56"},{"code":"(fn nthlol [arr n] (last (take (+ n 1) arr)))","problem":21,"user":"516385cee4b055933a9ca02d"},{"problem":21,"code":"(fn [a1 a2] ((vec a1) a2))","user":"54d37e4ce4b0e8a36923e608"},{"problem":21,"code":"(fn [l c] (if (> c 0) (recur (rest l) (- c 1)) (first l)))","user":"5b5f2566e4b0c6492753e6e9"},{"problem":21,"code":"(fn \n  [lst n] \n  (first (drop n lst)))","user":"56df7440e4b0ca2494a095fb"},{"problem":21,"code":"(fn[x y] (if (zero? y) (first x) (recur (rest x) (- y 1))))","user":"5e5fd500e4b0fd0acd15867f"},{"code":"( fn[x y](last( take (+ 1 y) x)))","problem":21,"user":"53830109e4b06839e8705ed8"},{"problem":21,"code":"(fn [col index]\n  (loop [col col \n         index index]\n    (if (= index 0) (first col) (recur (rest col) (dec index)))))","user":"5bc09791e4b07a9b28b10003"},{"problem":21,"code":"(fn [s n] (if (not (= n 0)) (recur (rest s) (dec n)) (first s)))","user":"550b128ce4b06e50f9beb139"},{"code":"(fn [sq idx] \n  (loop [i idx s sq]\n    (if (pos? i)\n       (recur (dec i) (rest s))\n       (first s)\n    )  \n  )\n)","problem":21,"user":"533ea7e8e4b085b17e897d94"},{"code":"(fn [list eln] \n      (if (= eln 0) \n        (first list) \n        (recur (rest list) (dec eln))))","problem":21,"user":"5311b367e4b08068f379eced"},{"problem":21,"code":"#(loop [x % n %2]\n  (if (zero? n) \n    (first x) \n    (recur (rest x) (dec n))))","user":"5e959d08e4b0fbed045a380d"},{"code":"(fn [l i]\n  (if (= i 0)\n    (first l)\n    (recur (rest l) (dec i))))","problem":21,"user":"4ed7b617535d10e5ff6f52f3"},{"problem":21,"code":";#(first (drop %2 %1))\n\n\n(fn \n  [collection position]\n  \"Solves 4Clojure Problem 21\"\n  (-> \n   (drop position collection)\n   (first)))","user":"60b2f7a0e4b0e0fa5f1b422c"},{"code":"(fn [lst k]\n  (loop [item lst\n    \tx 0]\n    (if (= x k)\n      (first item)\n      (recur (rest item) (inc x)))\n   )\n  )","problem":21,"user":"51f7fbf7e4b06ff1c25c52e0"},{"problem":21,"code":"(fn func [lst i] (if (= i 0) (first lst) (func (rest lst) (- i 1))))","user":"55216b7ee4b0882d96d09193"},{"problem":21,"code":"(fn nth-child [s i]\n  (get (into [] s) i))","user":"60323240e4b0d5df2af222b3"},{"problem":21,"code":"(fn f [s n](case n 0(first s)(f (rest s)(- n 1))))","user":"5d9ccf36e4b0eb781811cdb0"},{"problem":21,"code":"(fn foo [x y] (if (= y 0) (first x) (foo (rest x) (- y 1))))","user":"57501c83e4b02ea11479926b"},{"problem":21,"code":"(fn enth\n  [list n]\n  (if (= n 0) \n    (first list)\n    (enth (rest list) (dec n))))","user":"577154ffe4b0979f896515b1"},{"code":"(fn n-th [x n]\n  ((fn nnth [x cn]\n    (if (= cn n)\n        (first x)\n        (nnth (rest x) (+ 1 cn))\n      )    \n    ) x 0)\n  )","problem":21,"user":"4f0df199535d0136e6c2231e"},{"code":"(fn [x n]\r\n   (last (take (+ n 1) x)))","problem":21,"user":"510a6bece4b06956752d35af"},{"code":"(fn [l x]\n  (loop [l l, n x]\n    (if (= 0 n)\n      (first l)\n      (recur (rest l) (dec n)))))","problem":21,"user":"538be6afe4b0640c7a9a58c9"},{"problem":21,"code":"(fn [s l] (last (take (inc l) s)))","user":"56e37659e4b03a7c14b85a44"},{"code":"(fn\n  [es n]\n  (loop [i n\n         ys es]         ;;Destructuring syntax uses nth behind\n    ;;the scenes\n    (let [x (first ys)\n          xs (rest ys)]\n      (if (= 0 i)\n        x\n        (recur (dec i) xs)))))","problem":21,"user":"52e8ee9ae4b09f7907dd14a1"},{"problem":21,"code":"(fn i [s n] (if (= 0 n)\n              (first s)\n              (i (rest s)\n                 (- n 1))))","user":"5740f821e4b05c31a32c085e"},{"problem":21,"code":"(fn[x n] (loop [i n, rx x]\n           (if (= i 0) \n             (first rx)\n             (recur (dec i) (rest rx)))))","user":"5667d8eee4b04acd4f672ddc"},{"code":"(fn asdf [coll n]\n  (first (nthnext coll n)))","problem":21,"user":"4f0c76f9535d0136e6c2230d"},{"problem":21,"code":"(fn [s n] \n  (if (= n 0)\n    (first s)\n    (recur (rest s) (- n 1))))","user":"53e634ede4b036ad0777e470"},{"problem":21,"code":"(fn [coll n]\n  (if (= n 0)\n    (first coll)\n    (recur (rest coll), (- n 1))))","user":"569ed695e4b0542e1f8d1488"},{"problem":21,"code":"(fn [x,y] (first(drop y x)))","user":"568967cde4b0dcc4269f407c"},{"problem":21,"code":"#(\n  (fn [n idx lst]\n    (if (= n idx) (first lst)\n\t\t(recur n (inc idx) (rest lst))))\n %2 0 %1)","user":"52b7e163e4b0c58976d9ad54"},{"problem":21,"code":"(fn my-nth[n i]\n  (if (= i 0)\n    (first n)\n  (my-nth (rest n) (dec i))))","user":"5bf50e76e4b0b326c961d8a0"},{"problem":21,"code":"(fn [v, n] (get (vec v) n))","user":"5665fca4e4b0e91d5f5c5667"},{"problem":21,"code":"(fn [xs n]\n  (if (zero? n)\n  \t(first xs)\n  \t(recur (rest xs) (dec n))))","user":"5f2d6787e4b033932238a66d"},{"problem":21,"code":"(fn [s n]\n  (let [y (take (inc n) s)]\n    (first (reverse y))))","user":"55d3aec8e4b0e31453f64a6a"},{"problem":21,"code":"(fn [arr index] \n  (loop [counter 0 array arr]\n    (if (= counter index)\n      \t(first array)\n      \t(recur (+ counter 1) (rest array))\n     )\n    )\n  )","user":"55300ea8e4b076ab5578f80b"},{"code":"(fn [n i] (if (zero? i) (first n)(recur (rest n) (dec i))) )","problem":21,"user":"4eb80ce6535d7eef3080737d"},{"code":"(fn [x y] (if (= y 0) (first x) (recur (rest x) (dec y))))","problem":21,"user":"4e84bb7e535db62dc21a62e3"},{"code":"(fn [ col, n ] ( first ( nthnext col n ) ) )","problem":21,"user":"5026916fe4b0c969f0b056e1"},{"problem":21,"code":"(fn [data k] (if (= k 0) (first data) (recur (rest data)(dec k)) ))","user":"5af20ce0e4b0cc2b61a3bc69"},{"code":"(fn [s n]\n    (loop [s s\n         n n]\n    (let [head (first s)]\n      (if (and (not (nil? head))\n               (pos? n))\n        (recur (rest s) (dec n))\n        head))))","problem":21,"user":"500e6ddee4b04a05d36fcc06"},{"problem":21,"code":"(fn my-nth [s n]\n  (if (= n 0)\n      (first s)\n      (my-nth (rest s) (dec n))))","user":"56cbb98ae4b0ea9b8538f739"},{"code":"(fn [sq n] (first (nthnext sq n)))","problem":21,"user":"4f148418535d64f60314643a"},{"problem":21,"code":"(fn test [arg index] (if (zero? index) (first arg) (recur (rest arg) (dec index))))","user":"54e10605e4b024c67c0cf7bf"},{"code":"(fn func [xs i] (if (= i 0)\n             (first xs)\n             (func (next xs) (- i 1))))","problem":21,"user":"521392bce4b0d32679a5065e"},{"problem":21,"code":"(fn get-n [s n]\n  (if (= n 0)\n    (first s)\n    (get-n (rest s) (dec n))))","user":"544e6b7fe4b0e39780006986"},{"problem":21,"code":"(fn [ar n] (last (take (inc n) ar)))","user":"568e2b41e4b0dcc4269f40cd"},{"problem":21,"code":"(fn [x y]\n      (loop [accum x\n             cnt 0]\n        (if (= cnt y)\n         (first accum)\n         (recur (rest accum) (inc cnt)))))","user":"589c8fa6e4b00487982d5365"},{"code":"(fn [collection index] (first (drop index collection)))","problem":21,"user":"4f251302e4b0d66497709ff0"},{"code":"(fn[x y] \n  (first (drop y x))\n)","problem":21,"user":"4f47f670e4b0d56e7bb92bca"},{"code":"(fn [lst nm]((apply\n             comp \n              (cons first (repeat nm rest)))\n             lst\n             )\n  )","problem":21,"user":"524c72dce4b09eba1c022407"},{"problem":21,"code":"#(loop [l %1 n 0]\n   (if (= n %2) (first l) (recur (rest l) (+ 1 n))))","user":"56c89c2ce4b0ed865f9758d4"},{"code":"#(loop [n %2 s %1]\n  (if (zero? n) \n    (first s) \n    (recur (dec n) (rest s))))","problem":21,"user":"4f06dcad535dcb61093f6c16"},{"problem":21,"code":"(fn\n  [sq n]\n  (if (zero? n)\n    (first sq)\n    (recur (rest sq) (- n 1))))","user":"57ee82b1e4b0bfb2137f5bbd"},{"problem":21,"code":"(fn my_nth [l n] (if (<= n 0) (first l) (my_nth (rest l) (- n 1))))","user":"56058d64e4b08b23635d3169"},{"code":"(fn my_nth [s n] (if (= n 0) (first s) (my_nth (rest s) (- n 1))))","problem":21,"user":"530c8848e4b02e82168697de"},{"problem":21,"code":"(fn Nth \n  [collection n] \n  (last (take (inc n) (seq collection))))","user":"55cd95b4e4b0e31453f64a1e"},{"code":"(fn [ls th] (if (= 0 th) (first ls) (recur (rest ls) (dec th))))","problem":21,"user":"4f03ba9c535dcb61093f6b58"},{"problem":21,"code":"(fn m_nth [coll,p]\n    (if (> p 0)\n      (recur  (next coll) (dec p)) \n      (first coll)))","user":"6022429be4b0d5df2af22200"},{"problem":21,"code":"( fn retNth [S n]\n   ( if (< (dec n) 0)\n     (first S)\n     (retNth (rest S) (dec n))\n   )\n)","user":"55d3cfafe4b0e31453f64a6c"},{"code":"(fn mynth [seq n]\n  (if (<= n 0)\n    (first seq)\n    (mynth (rest seq) (- n 1))))","problem":21,"user":"4e8f5eba535d65386fec214c"},{"code":"(fn [c n] (.get c n))","problem":21,"user":"503e4138e4b06c4e0e1fa263"},{"problem":21,"code":"(fn [arr n] (.get arr n))","user":"5eee9352e4b07c55ae4a0512"},{"problem":21,"code":"(fn myfn \n  [li n] (last (take (+ 1 n) li)))","user":"5ef4677ce4b07c55ae4a0542"},{"code":"(fn [seq index] (last (take (+ 1 index) seq)))","problem":21,"user":"537ca19be4b06839e8705e7a"},{"problem":21,"code":"(fn [x i]\n  (loop [counter 0 elements x]\n    (if (= counter i)\n      (first elements)\n      (recur (+ counter 1) (rest elements)))))","user":"5936a67de4b02506e01a2982"},{"problem":21,"code":"(fn teste\n  [x el]\n  (last (take (inc el) x)))","user":"5eec2f79e4b07c55ae4a0504"},{"problem":21,"code":"(fn [seq index] (last (take (inc index) seq)))","user":"602b90c1e4b0d5df2af22266"},{"problem":21,"code":"(fn [coll index]\n  (first (reverse (take (+ index 1) coll))))","user":"57d41589e4b0bd073c202399"},{"problem":21,"code":"(fn [coll index] (first (reverse (subvec (vec coll) 0 (inc index)))))","user":"5c0abe1ae4b0bdcf453d1711"},{"problem":21,"code":"#( first (drop %2 %1) )","user":"53a8fba9e4b047364c04442e"},{"code":"(fn n-th [ls n]\r\n  (if (zero? n)\r\n    (first ls)\r\n    (n-th (rest ls) (dec n))))","problem":21,"user":"4dd62278535d2dad7130b5c7"},{"code":"(fn [l n]\n  (cond\n   (= n 0) (first l)\n   (> n 0) (recur (rest l) (- n 1))))","problem":21,"user":"52e4361fe4b09f7907dd144d"},{"problem":21,"code":"(fn my-nth [seq n]\n  (if (= n 0)\n    (first seq)\n    (recur (rest seq) (dec n))))","user":"5e94e759e4b0fbed045a37fd"},{"problem":21,"code":"(fn [a n] (last(take (+ n 1) a)))","user":"565d57d7e4b068f2fe63dc22"},{"code":"(fn [c n] (loop [n n c c] (if (zero? n) (first c) (recur (dec n) (next c)))))","problem":21,"user":"50f69a3ce4b0035e89151844"},{"problem":21,"code":"(fn [s, n] (first (first (drop n (iterate rest s)))))","user":"56205609e4b064ca9f4b16df"},{"code":"(fn [x y] (last (drop-last (- (count x) (+ y 1)) x)))","problem":21,"user":"4f4fd593e4b03ad3f0c10cec"},{"code":"#(loop [coll %1 idx 0] \n   (if (= idx %2) \n     (first coll) \n     (recur (rest coll) (inc idx))))","problem":21,"user":"536c99c5e4b0fc7073fd6e46"},{"code":"(fn [coll n]\n   (first (nthnext coll n)))","problem":21,"user":"514e4ae4e4b019235f6c0594"},{"code":"#(last ( take ( inc %2) %1))","problem":21,"user":"51d9eb05e4b02ceefd947755"},{"code":"(fn [l n] (loop [l l n n] (if (= 0 n) (first l) (recur (rest l) (- n 1)))))","problem":21,"user":"5081561ae4b0946d0443855a"},{"problem":21,"code":"(fn [input-list, x] (first (drop x input-list)))","user":"5529904be4b0ffed3738f94d"},{"problem":21,"code":"(fn get-nth [xs n]\n  (first (drop n xs)))","user":"569dd6e8e4b0542e1f8d1480"},{"problem":21,"code":"(fn elem [l i] (if (= 0 i) (first l) (elem (rest l) (- i 1))))","user":"5800bbd5e4b0a837a8b30c44"},{"problem":21,"code":"(fn nthh[lst n]\n  (loop [a lst\n         cont 0]\n    (if (= cont n)\n      (first a)\n      (recur (rest a)(inc cont)))))","user":"57f814fbe4b0d3187e900911"},{"problem":21,"code":"(fn [col i] (last (take (inc i) col)))","user":"5dcfdf23e4b0948ae9d9ad43"},{"problem":21,"code":"#( get (to-array %1) %2)","user":"5bef02ede4b0a6d31fed2138"},{"code":"(fn mynth [xs n] (if (zero? n) (first xs) (mynth (rest xs) (dec n))))","problem":21,"user":"50e1168be4b084616e11c665"},{"problem":21,"code":"(fn [x y] \r\n  (if (== y 0)\r\n    (first x)\r\n    (recur (rest x) (- y 1))\r\n  )\r\n)","user":"55cde227e4b0e31453f64a22"},{"code":"(fn r [xs i] (cond (= i 0) (first xs) :else (recur (rest xs) (- i 1))))","problem":21,"user":"50a025a9e4b08df8156e9e49"},{"code":"(fn myNth [list n](\n  if (= n 0) \n    (first list)\n    (myNth (rest list) (- n 1))\n  )\n)","problem":21,"user":"4f718ce5e4b07046d9f4f00d"},{"code":"(fn [list index]\n  (if (= index 0)\n    (first list)\n    (recur (rest list) (dec index))))","problem":21,"user":"53548944e4b084c2834f4b08"},{"code":"(fn [l i] (.get l i))","problem":21,"user":"519e70d5e4b0acf32bc6a42c"},{"code":"(fn getn [xs, n] (if (= n 0) (first xs) (getn (rest xs) (- n 1))))","problem":21,"user":"501ffbb1e4b0cb6ebc0a42f2"},{"problem":21,"code":"(fn [seq index]\n  (loop [x 0 s seq]\n    (if (= x index)\n      (first s)\n      (recur (inc x) (rest s))\n      ))\n  )","user":"5dd84170e4b0948ae9d9ad93"},{"problem":21,"code":"(fn get-nth [x y] (if (= y 0) (first x) (get-nth (rest x) (- y 1))))","user":"546ddf95e4b00cfc9eacc195"},{"code":"(fn f [seq n] (if (= n 0) (first seq) (f (next seq) (- n 1))))","problem":21,"user":"4fb4099be4b081705acca2a9"},{"problem":21,"code":"(fn mynth [s n] (if (= 0 n) (first s) (mynth (rest s) (- n 1))))","user":"59804b60e4b021a7a535fdcf"},{"problem":21,"code":"(fn [coll n] (if (zero? n) (first coll) (recur (rest coll) (- n 1) ) ) )","user":"5833455ee4b089d5ab817c95"},{"problem":21,"code":"(fn [lst n] (case n\n              0 (first lst)\n              (recur (rest lst) (- n 1))))","user":"596caee3e4b069c0a1a19837"},{"code":"(fn foo [l n] \n  (if (zero? n) \n    (first l) \n    (foo (next l) (dec n))))","problem":21,"user":"4ea76541535d7eef308072eb"},{"problem":21,"code":"(fn [collection index] \n  (get (vec collection) index)\n)","user":"5818001ce4b0c0e9c07b83a0"},{"code":"#(-> (drop %2 %1) first)","problem":21,"user":"4eb13d60535d7eef3080733f"},{"problem":21,"code":"(fn [s n]\n  (loop [seq s count n]\n      (if (<= count 0) (first seq) (recur (rest seq) (dec count)))\n     )\n )","user":"58c7131be4b021aa9917ed6d"},{"code":"(fn [s x] (.get s x ))","problem":21,"user":"51fb4a9be4b0f1313d4689ff"},{"code":"(fn [lst n]\n  (if (= n 0) (first lst) (recur (rest lst) (dec n))))","problem":21,"user":"4f032cb1535dcb61093f6a70"},{"problem":21,"code":"(fn nth-element [lista pos] \n  ((apply comp (cons first (repeat pos rest))) lista)\n)","user":"5f22e8c9e4b0f565ad99828b"},{"problem":21,"code":"(fn [arr ind] (last (take (inc ind) arr)))","user":"55e2d527e4b050e68259b43a"},{"problem":21,"code":"(fn [lst index] (first (take-last (- (count lst) index) lst)))","user":"5f9567cce4b0715f5002d7c7"},{"problem":21,"code":"#(get (zipmap (range) %1) %2)","user":"5675eaaee4b05957ce8c6150"},{"problem":21,"code":"(fn my-nth [lst n]\n  (if (empty? lst)\n    lst\n    (loop [lst lst\n           count 0\n           currVal (first lst)]\n      (if  (= n count)\n        currVal\n        (recur (rest lst) (inc count) (first (rest lst)))))))","user":"59e12c94e4b08badc2a0c509"},{"problem":21,"code":"(fn getn [x cnt] \n  (if (= cnt 0)\n    (first x)\n    (getn (rest x) (dec cnt))))","user":"57fe836ee4b0d3187e9009d2"},{"code":"(fn f [coll n] (if (zero? n) (first coll) (f (rest coll) (dec n))))","problem":21,"user":"51cfc616e4b0e42293a22578"},{"code":"(fn mth [seq m]\n  (if (= 0 m)\n    (first seq)\n    (mth (rest seq) (- m 1))\n))","problem":21,"user":"4f0a2ed1535d0136e6c222f3"},{"code":"(fn i-th [xs i]\n  (if (= 0 i)\n    (first xs)\n    (i-th (rest xs) (- i 1))))","problem":21,"user":"4ee63d8d535d93acb0a66859"},{"code":"(fn getnth [s n] \n  (if (= n 0)\n    (first s)\n    (getnth (rest s) (- n 1))))","problem":21,"user":"536e56dbe4b0fc7073fd6e6c"},{"code":"(fn [x i] (last (first (split-at (inc i) x))))","problem":21,"user":"51248aa1e4b0ef56ecb14195"},{"problem":21,"code":"(fn[col n] (first(nthnext col n)))","user":"53e2381ce4b036ad0777e3ee"},{"problem":21,"code":"(fn [xs n]\n  (if (= 0 n)\n    (first xs)\n    (recur (next xs) (dec n))))","user":"5bea3177e4b0f319e2d7ec81"},{"code":"(fn [coll index] (if (< index 1) (first coll) (recur (rest coll) (dec index))))","problem":21,"user":"5393a2e1e4b0b51d73faaebf"},{"problem":21,"code":"(fn get-elem [s i]\n  (cond\n   (= i 0) (first s)\n   :else (get-elem (rest s) (dec i))))","user":"5dd60c58e4b0948ae9d9ad7c"},{"code":"(fn [x n] (if (zero? n) (first x) (recur (rest x) (- n 1))))","problem":21,"user":"514c2e78e4b02b8cbb2a9279"},{"code":"(fn f[s n]\n  (if (= n 0)\n    (first s)\n    (f (rest s) (- n 1))\n  )\n)","problem":21,"user":"50512f61e4b0b30bd8f4f83f"},{"problem":21,"code":"#(loop [current (first %1)\n         remaining (rest %1)\n         index %2]\n    (if (= index 0)\n      current\n      (recur (first remaining)\n             (rest remaining)\n             (dec index))))","user":"58a55694e4b01a0c0b23290b"},{"code":"(fn nthe [col num] (if (= num 0)(first col)(nthe (rest col)(- num 1))))","problem":21,"user":"4e18c553535d04ed9115e7f4"},{"code":"#(loop [col %1 pos %2]\n       (if (zero? pos)\n         (first col)\n         (recur (rest col) (dec pos))))","problem":21,"user":"51d5af00e4b01da06753aa93"},{"problem":21,"code":"(fn [sq n] (if (= 0 n) (first sq) (recur (rest sq) (- n 1))))","user":"54e4ef4de4b024c67c0cf7f4"},{"problem":21,"code":"(fn [coll i] (first (keep-indexed (fn [index item] (when (= i index) item)) coll)))","user":"59d3eb2fe4b0ef0a1e9b5bd7"},{"problem":21,"code":"(fn solution [sq n]\n  (if (= n 0)\n    (first sq)\n    (solution (rest sq) (- n 1))\n    )\n  )","user":"5d73fb31e4b02e6b30c93516"},{"problem":21,"code":"(fn n-th [s n]\n  (if (= n 0) \n    (first s)\n    (recur (rest s) (dec n))))","user":"57606cfde4b08062f99a4e95"},{"code":"(fn enth [lst n]\n  (if (= n 0)\n      (first lst)\n      (enth (rest lst) (- n 1))))","problem":21,"user":"4f07ad89535dcb61093f6c2a"},{"code":"(\n fn [array n] \n  (first (take-last (- (.count array) n) array))\n)","problem":21,"user":"50feb0e1e4b03cd852b4e851"},{"problem":21,"code":"(fn [x y] (first(nthrest x y)))","user":"582f63e5e4b051871117bfef"},{"problem":21,"code":"(fn [random-seq n]\n  (loop [new-seq random-seq\n         count 0]\n    (if (= count n)\n      (first new-seq)\n      (recur (rest new-seq) (+ count 1)))))","user":"607d6bc1e4b03d835a6eaecc"},{"problem":21,"code":";#(first (subvec (vec %) %2 (+ %2 1)))\n#(first (second (split-at %2 %)))","user":"54e3bd3fe4b024c67c0cf7e0"},{"code":"(fn [xs i]\n\t(if (zero? i)\n\t\t(first xs)\n\t\t(recur (rest xs) (dec i))))","problem":21,"user":"51ba4482e4b0fe3ecfb4642b"},{"problem":21,"code":"(fn\n  [coll index]\n  (first (drop index coll)))","user":"53cb5559e4b00fb29b2212d2"},{"problem":21,"code":"(fn mynth\n  [list n]\n  (loop [x n temp-list list]\n    (if (zero? x)\n      (first temp-list)\n      (recur (dec x) (rest temp-list)))))","user":"55e9494ae4b0121d4835fd9e"},{"problem":21,"code":"(fn [coll n]\n  (if (= n 0)\n  \t(first coll)\n    (recur (rest coll) (dec n))))","user":"5821160de4b04b46fc4b0f6c"},{"problem":21,"code":"(fn getn [x n] \n  (if (= n 0) \n    (first x) \n    (getn (rest x) (dec n))\n    )\n  )","user":"54cfb5abe4b018d918be98d3"},{"code":"(fn [x n] \n  (if (= n 0) \n      (first x) \n      (recur (rest x) (dec n))))","problem":21,"user":"502421ebe4b09f7ee7fb4377"},{"code":"(fn [collection index] \n  ( if(= 0 index)\n    (first collection)\n    (recur (rest collection) (dec index) ) \n  ) \n)","problem":21,"user":"4f044e44535dcb61093f6bb9"},{"code":"(fn[x y] (loop[z x w y]\n(if(= w 0)\n(first z)\n(recur(rest z)(- w 1))\n)))","problem":21,"user":"4fe1279fe4b0dd6cd5ce3630"},{"code":"(fn [collection index]\n     (if (zero? index)\n       (first collection)\n       (recur (rest collection) (- index 1))))","problem":21,"user":"51b9f5a6e4b0e871ca49590e"},{"code":"(fn [sq ndx]\n   (first (drop ndx sq)))","problem":21,"user":"523bd9c0e4b07becd5be2201"},{"code":"(fn [list n]\n  (loop [i 0 xs list] \n    (if (= i n)\n      (first xs)\n      (recur (inc i) (rest xs))\n      )))","problem":21,"user":"52667ecfe4b03e8d9a4a713e"},{"problem":21,"code":"(fn on[l n]\n  (if (zero? n)\n    (first l)\n    (on (rest l) (- n 1))))","user":"5aaf8305e4b073f177442599"},{"code":"(fn [seq ind]\n  (if (= ind 0)\n    (first seq)\n    (recur (rest seq) (dec ind))))","problem":21,"user":"4feded14e4b0d2a5fc2962ec"},{"code":"(fn my-nth [s n]\n  (if (= n 0)\n    (first s)\n    (my-nth (rest s) (- n 1))))","problem":21,"user":"50ef77a4e4b0bdaecbb47d99"},{"problem":21,"code":"(fn [coll n]\n  (loop [nn n\n         c coll]\n    (if (zero? nn)\n      (first c)\n      (recur (dec nn) (rest c)))))","user":"5ad4c3d2e4b0ea6055cfabe1"},{"problem":21,"code":"(fn [target n] (first (drop n target)))","user":"55f95b47e4b03cbcff9738c0"},{"code":"(fn [s index] \n  (if (= index 0)\n    (first s)\n    (recur (next s) (- index 1))))","problem":21,"user":"51516f35e4b03e678e393acd"},{"code":"(fn f [seq i]\n  (if (= i 0)\n      (first seq)\n      (f (rest seq) (dec i))))","problem":21,"user":"4ff07229e4b0678c553fc323"},{"code":"(fn asdf [s n] \n  (if (= n 0) \n    (first s)\n    (recur (rest s) (dec n))))","problem":21,"user":"4fd93c42e4b05e33b9224f35"},{"problem":21,"code":"(fn [in n]\n  (loop [cnt n tmp in]\n   (if (zero? cnt)\n     (first tmp)\n     (recur (dec cnt) (rest tmp)))))","user":"5b8085b4e4b047b03b20377e"},{"problem":21,"code":"(fn\n   [list n]\n   (if (zero? n)\n     (first list)\n     (recur (rest list) (dec n))))","user":"60396c95e4b0d5df2af222f4"},{"problem":21,"code":"(fn [x s] (last (take (inc s) x) ) )","user":"562777f5e4b00e49c7cb47d0"},{"code":"(fn my-nth [coll n]\n  (loop [index 0 coll coll]\n    (if (= index n)\n      (first coll)\n      (recur (inc index) (rest coll)))))","problem":21,"user":"5357b241e4b04ce2eb3ed282"},{"code":"(fn f [l x] (if (< x 1) (first l) (f (next l) (- x 1))))","problem":21,"user":"508c33ece4b0f17d83ea26b1"},{"problem":21,"code":"(fn f [list n]\n  (if (= 0 n) (first list) (f (rest list) (- n 1))))","user":"5798d151e4b039eba2ecb120"},{"problem":21,"code":"(fn take-nth  [l n] (if (= n 0) (first l) ( take-nth (rest l) (- n 1 ))))","user":"55f04526e4b06e875b46ce20"},{"problem":21,"code":"(fn [sec n]\n   (if (zero? n) \n     (first sec)\n     (recur (rest sec) (dec n))))","user":"5b20cd02e4b03cfeda66ed37"},{"problem":21,"code":"(fn [col n]\n  (loop [remaining col\n         idx n]\n    (if (= idx 0)\n      (first remaining)\n      (recur (rest remaining) (- idx 1)))))","user":"60b1add0e4b0e0fa5f1b4227"},{"problem":21,"code":"(fn [x n]\n  (if (= 0 n)\n    (first x)\n    (recur (rest x) (dec n))))","user":"57be086ae4b05aa3c4741c62"},{"problem":21,"code":"; generic recursion\n;(fn nthf [xs i]\n;  (if (> i 0)\n;    (nthf (rest xs) (- i 1))\n;    (first xs)))\n\n; using drop\n; #(first (drop %2 %))\n\n#(->> %1 (drop %2) first)","user":"541e2ff8e4b01498b1a71a8a"},{"problem":21,"code":"#(loop [li %1 i 0]\n   (if (= i %2) (first li)\n     (recur (rest li) (inc i))))","user":"53e76bb2e4b036ad0777e47d"},{"problem":21,"code":"(fn fff [xs n] (if (= n 0) (first xs) (fff (rest xs) (- n 1 )) ))","user":"55805a2ee4b05c286339e0ea"},{"code":"(fn\n  [s n]\n  (if (zero? n)\n    (first s)\n    (when (seq s)\n      (recur (next s) (dec n)))))","problem":21,"user":"511b233ae4b07ab9ec456180"},{"code":"(fn [lst n]\n  (if (zero? n) \n    (first lst)\n    (recur (rest lst) (- n 1))))","problem":21,"user":"4ebf11bc535dfed6da9c6d9c"},{"code":"(fn [s i]\r\n  (if (zero? i)\r\n    (first s)\r\n    (recur (rest s) (dec i))))","problem":21,"user":"4dd6d6a0535d2dad7130b5ca"},{"problem":21,"code":"(fn [col idx] (last (take (+ 1 idx) col)))","user":"5316ade5e4b08068f379ed4a"},{"code":"(fn mynth [L n]\n  (if (= n 0)\n    (first L)\n    (mynth (rest L) (- n 1))))","problem":21,"user":"51f67858e4b06ff1c25c52c5"},{"code":"(fn nth-elem [s n]\n  (if (= n 0)\n    (first s)\n    (nth-elem (rest s) (- n 1))))","problem":21,"user":"4ff89ae0e4b0678c553fc39a"},{"code":"(fn  [s cnt]\n  (loop [s s, cnt cnt]\n    (if (zero? cnt)\n        (first s)\n        (recur (rest s), (dec cnt)))))","problem":21,"user":"5156e767e4b04360f2428e6b"},{"code":"(fn enth [seq pos]\n  (if (= pos 0)\n    (first seq)\n    (enth (next seq) (- pos 1))))","problem":21,"user":"4e98a6d0535dbda64a6f6b5e"},{"code":"(fn nt [x, n] (if (= 0 n) (first x) (nt (rest x) (- n 1))))","problem":21,"user":"4ded582d535d08e6dec9fe0c"},{"problem":21,"code":"(fn [xs x] (get (vec xs) x))","user":"55e3924ae4b050e68259b445"},{"problem":21,"code":"#(.get (pop (conj %1 %2)) %2)","user":"5dcd0f14e4b0b296f82db5a8"},{"code":"(fn my-nth [coll index]\n  (if (= index 0) \n      (first coll) \n      (my-nth (rest coll) (- index 1)))\n)","problem":21,"user":"52ec233ce4b0705949c4444d"},{"code":"(fn [col, pos]\n  (let [tail (rest col)\n        decr (- pos 1)]\n    (if (= pos 0)\n      (.get col 0)\n      (recur tail decr))))","problem":21,"user":"53334cb2e4b019098a6f8b81"},{"problem":21,"code":"(fn [s n] (loop [ss s i n] (if (= i 0) (first ss) (recur (rest ss) (dec i)))))","user":"584948fce4b089d5ab817ecc"},{"problem":21,"code":"(fn\n  [nums pos]\n  (last (reverse (drop pos nums)))\n  )","user":"5bbbce99e4b0a20761a23610"},{"code":"(fn n-th [lst idx]\n  (if (= idx 0)\n    (first lst)\n    (n-th (rest lst) (- idx 1))))","problem":21,"user":"4eccb190535d23f0362276fe"},{"problem":21,"code":"(fn Nth [l n] (first (drop n l)))","user":"58f000a3e4b056aecfd47ddb"},{"problem":21,"code":"(fn [coll idx] (last (take (+ idx 1) coll)))","user":"54fe5523e4b07d26eda61d41"},{"code":"(fn [l, n] (first (drop n l)))","problem":21,"user":"4ffb3c50e4b0678c553fc3c8"},{"problem":21,"code":"(fn [l n] \n  (last \n    (take (+ n 1) l)))","user":"55ad2d97e4b03311e7b732a2"},{"code":"(fn [c n]\n  (first (drop n c)))","problem":21,"user":"5225a0f5e4b01819a2de430e"},{"problem":21,"code":"(fn nthkw [foo idx]\n\t(if (= idx 0)\n\t\t(first foo)\n\t\t(nthkw (rest foo) (dec idx))))","user":"54296802e4b01498b1a71b38"},{"code":"(fn\n  [coll index]\n  (loop [c coll i 0]\n    (if (= i index)\n      (first c)\n      (recur (rest c) (inc i)))))","problem":21,"user":"525fffb8e4b03e8d9a4a702b"},{"code":"(fn [sequ cnt] (loop [s sequ c cnt] (if (= c 0) (first s) (recur (rest s) (dec c)))))","problem":21,"user":"52e18024e4b09f7907dd1424"},{"code":"#(-> (drop %2 %) first)","problem":21,"user":"51c8f1d8e4b07ef393169e5d"},{"code":"(fn [s m]  \n  ((fn f [x n i]\n    (if (= i n) (first x)\n      (f (rest x) n (+ 1 i)))) s m 0))","problem":21,"user":"4f3242bae4b0d6649770a08f"},{"code":"(fn en [l n]\n  (if (= n 0) (first l) (en (rest l) (- n 1))))","problem":21,"user":"537cd1dce4b06839e8705e7e"},{"code":"(fn xth [list x] (if (= x 0) (first list) (xth (rest list) (- x 1))))","problem":21,"user":"4f0f8010535d0136e6c22340"},{"problem":21,"code":"(fn nth-custom [sq n]\n  (if (not= n 0)\n    (nth-custom (rest sq) (dec n))\n    (first sq)))","user":"5e18c885e4b0dc95940084fc"},{"problem":21,"code":"(fn [xs index] (last (take (+ index 1) xs)))","user":"5f462b23e4b0955706451fbe"},{"code":"#(if (= 0 %2) (first %) (recur (rest %) (dec %2)))","problem":21,"user":"4f6511eee4b07046d9f4ef3a"},{"code":"(fn [l n] (if (= n 0) (first l) (recur (next l) (- n 1))))","problem":21,"user":"4f03b102535dcb61093f6b4e"},{"code":"(fn [c n]\n  (if (< n (count c))\n    (first (drop n c))))","problem":21,"user":"50d4c626e4b09cc622d65a70"},{"code":"(fn [x y] (first (reverse (take (inc y) x))))","problem":21,"user":"4e584cf2535d8a8b8723a28f"},{"code":"(fn [a x] (if (= 0 x) \n    (first a) (recur (rest a) (- x 1)))\n)","problem":21,"user":"504f3f13e4b0a02f9cffde60"},{"code":"(fn [x n] (if (= (- n 1) -1) (first x) (recur (rest x) (- n 1))))","problem":21,"user":"4e71c2ca535d5021c1a89651"},{"problem":21,"code":"(fn nth_ [l n]\n  (if (> n 0) (nth_ (rest l) (- n 1)) (first l)))","user":"5a5f4938e4b0512ff01cd945"},{"code":"(fn go\n  [list n] \n    (if (> n 0) (go (rest list) (dec n))\n    (first list)))","problem":21,"user":"4fc5a693e4b0ee37620e17fc"},{"problem":21,"code":"(fn [l i]\n  (loop [ll l ii i]\n         (if (= 0 ii)\n           (first ll)\n           (recur (rest ll) (dec ii)))))","user":"589561bce4b00487982d5282"},{"problem":21,"code":"#(loop [items %1\n        index %2\n        dist  0]\n   (if (= index dist)\n     (first items)\n     (recur (rest items)\n            index\n            (inc dist))))","user":"5dcc4b4ae4b02b31cc3da3c6"},{"code":"(fn n_element [seq n]\n  (last (take (+ n 1) seq)))","problem":21,"user":"51e6786ae4b0ab43cc26c216"},{"problem":21,"code":"(fn nthElement [array index] (first (drop index array)))","user":"56525c0ee4b0f9d632dd8465"},{"code":"(fn [s x] (last (take (inc x) s)))","problem":21,"user":"4e6ac593535d8ccf87e9ff02"},{"code":"#(loop [x 0 result %1] (if (= x %2)\n    (first result)\n    (recur (inc x) (rest result))))","problem":21,"user":"538b6326e4b0640c7a9a58c2"},{"code":"(fn getIndex [arg n] (if (= n 0) (first arg) (getIndex (rest arg) (dec n))))","problem":21,"user":"52ed7458e4b0a18b0f5dd9ed"},{"code":"(fn [seq pos]\n  (loop [s seq n 0]\n    (cond (empty? s) nil\n          (= n pos) (first s)\n          :else (recur (rest s) (inc n)))))","problem":21,"user":"526f9715e4b03e8d9a4a7372"},{"code":"(fn [s ix] (get (vec s) ix))","problem":21,"user":"53981cbce4b0b51d73faaef5"},{"problem":21,"code":"(fn [x n] (loop [index 0 currentColl x] (let [targetIndex n] (if (= index targetIndex) (first currentColl) (recur (+ 1 index) (rest currentColl))))))","user":"5924009ce4b072a2710fce45"},{"code":"(fn [s n] (cond (empty? s) nil (<= n 0) (first s) :default (recur (next s) (dec n))))","problem":21,"user":"4e39fb68535deb9a81d77f47"},{"problem":21,"code":"(fn [list n] (if (= n 0) (first list) (recur (rest list) (dec n) )))","user":"55c13e73e4b01b9910ae2a2f"},{"problem":21,"code":"(fn [seq_ n] (\n         loop [x 0 map_thing seq_] (\n                     if (= x n)\n                                    (first map_thing)\n                                    (recur (inc x) (rest map_thing)))))","user":"5bd9eac4e4b0ed4b8aab4bfc"},{"problem":21,"code":"(fn [x, n] (\n            loop [sequ x\n                  iteration 0] (\n                          if (= iteration n)\n                          \t(first sequ)\n                            (when (next sequ)\n                             (recur (next sequ) (+ iteration 1))\n                            )\n)))","user":"59b2d51be4b0e1f4e384c902"},{"problem":21,"code":"(fn [xs n] \n (loop [iter 0 acc xs]\n    (if (= iter n)\n       (first acc)\n       (recur (inc iter) (rest acc)))))","user":"5ab8037ae4b073f177442678"},{"problem":21,"code":"(fn [coll key]\n  (loop [n 0 coll coll]\n    (if (= n key)\n      (first coll)\n      (recur (inc n) (next coll)))))","user":"562cb7cfe4b0a45d2ff83009"},{"problem":21,"code":"(fn ! [coll ct] \n  (if (zero? ct) (first coll) \n    (! (rest coll) (dec ct))\n    )\n)","user":"548f7bf1e4b0e286459a123b"},{"problem":21,"code":"(fn [s, n] (first (drop n s)) )\n;#(first(drop %2 %1))","user":"56436194e4b0018b46ad8bf2"},{"problem":21,"code":"(fn [seqc idx]\n  (if (zero? idx)\n    (first seqc)\n    (recur (rest seqc) (- idx 1))))","user":"60cc2d58e4b0e0fa5f1b4323"},{"code":"(fn nth-element [s n]\n  (if (= n 0)\n    (first s)\n    (recur (rest s) (- n 1))))","problem":21,"user":"526e1bd0e4b03e8d9a4a730b"},{"problem":21,"code":"#(if (zero? %2)\n\t(first %1)\n\t(recur (rest %1) (dec %2))\n)","user":"5589a941e4b059ccff29b207"},{"problem":21,"code":"(fn [array, t] (first (drop t array)))","user":"54efdf03e4b024c67c0cf88c"},{"code":"(fn [sequen index] \n  (if (= 0 index)\n    (first sequen)\n    (recur (rest sequen) (dec index))\n    )\n  )","problem":21,"user":"4fafd067e4b081705acca259"},{"code":"(fn [s n] (second (first (filter #(= (first %) n) (map-indexed vector s)))))","problem":21,"user":"526d6968e4b03e8d9a4a72d9"},{"problem":21,"code":"(fn [s n]\n  (loop [f (first s)\n         r (rest s)\n         n n\n         i 0]\n    (if (= i n)\n      f\n      (recur (first r)\n             (rest r)\n             n\n             (inc i)))))","user":"5705f569e4b0b0fb43fd0677"},{"code":"(fn [ts n]\n  (loop [s ts\n         n n]\n    (if (> n 0)\n      (recur (rest s) (dec n))\n      (first s))))","problem":21,"user":"511a5328e4b09045b2b16946"},{"code":"(fn nth-elem [s n]\n  (if (= 0 n)\n    (first s)\n    (nth-elem (rest s) (dec n))))","problem":21,"user":"4e6a2503535d8ccf87e9fea2"},{"code":"(fn [list index]\n  (if (= 0 index)\n    (first list)\n    (recur (rest list) (- index 1))))","problem":21,"user":"50b53b6ae4b0c464d223d1c4"},{"problem":21,"code":"(fn [col n]\n  (loop [f (first col)\n         r (rest col)\n         n n]\n    (if (or (empty? r) (zero? n))\n      f\n      (recur (first r) (rest r) (dec n)))))","user":"5a188be3e4b0ff51aa4b31ec"},{"problem":21,"code":"(fn [c n] \n  (->> c\n       (drop n)\n       (first)))","user":"5800ab1ee4b0a837a8b30c41"},{"problem":21,"code":"(fn [xs n] \n  (first \n   (drop n xs)))","user":"552aebc1e4b0ffed3738f959"},{"problem":21,"code":"(fn [col n]\n  (if (= 0 n)\n    (first col)\n    (recur (rest col) (dec n))))","user":"584181c0e4b089d5ab817e04"},{"problem":21,"code":"(fn [s i]\n  (if (zero? i)\n    (first s)\n    (recur (rest s)\n           (dec i))))","user":"5777c3d6e4b0979f8965164f"},{"problem":21,"code":"(fn myfun [arr n] (if (= n 0) (first arr) (myfun (rest arr) (dec n))))","user":"5d2f5ba5e4b01671435dbcbf"},{"problem":21,"code":"(fn [x y] \n  (if (zero? y) \n    (first x) \n    (recur (next x) (dec y))\n  )\n)","user":"55f95de6e4b03cbcff9738c1"},{"problem":21,"code":"(fn [s index] (first (nthnext s index)))","user":"58a16387e4b02bd94d917eb1"},{"problem":21,"code":"(fn [s n] (if (zero? n)\n            (first s)\n            (recur (rest s)\n                   (dec n))))","user":"5c1fe56ae4b07e362c23056e"},{"code":"(fn get-pos [col pos]\n  (first (drop pos col)))","problem":21,"user":"4fc8769be4b0ee37620e1833"},{"problem":21,"code":"(fn [x i] \n  (if (= i 0) (first x) (recur (rest x) (- i 1))))","user":"590e588ce4b047aa04b19a23"},{"code":"(fn [x, pos]\n  \t(if (> pos 0) \n      (recur (rest x) (- pos 1))\n      (first x)\n    )\n)","problem":21,"user":"52b66bbae4b0c58976d9ad45"},{"problem":21,"code":"(fn x [els n]\n  (if (= n 0)\n    (first els)\n    (x (rest els) (- n 1))))","user":"56c792ace4b0ed865f9758c4"},{"problem":21,"code":"(fn [coll n-th] (second (take-nth n-th coll)))","user":"563a79e5e4b0bfe05bf117fe"},{"problem":21,"code":"(fn qw [l n]\n  (if (= n 0)\n    (first l)\n    (qw (rest l) (- n 1))))","user":"57a7a437e4b0a96607956216"},{"code":"(fn my-nth [coll x] (get (vec coll) x))","problem":21,"user":"4f49bca5e4b0d56e7bb92bfb"},{"code":"(fn [array index]\n  (last (take (inc index) array)))","problem":21,"user":"4f90b562e4b0dcca54ed6c91"},{"code":"(fn [seq idx] (last (take (+ idx 1) seq)))","problem":21,"user":"4e6a4ab9535d8ccf87e9fec2"},{"problem":21,"code":"(fn [lst cnt] (loop [llst lst cnt cnt] (if (> cnt 0) (recur (rest llst) (- cnt 1)) (first llst))))","user":"56f070fee4b04a395b9a0478"},{"code":"(fn elt [xs n] \n    (if (= n 0) \n    (first xs) \n    (elt (rest xs) (- n 1))))","problem":21,"user":"5055e7f4e4b0ce54f56f0401"},{"problem":21,"code":"(fn myfunc [seq n] (last (take (+ n 1) seq)))","user":"5cc1f975e4b0ccb0619627c8"},{"code":"(fn [s n]\n    (if (zero? n)\n      (first s)\n      (recur (rest s) (dec n))))","problem":21,"user":"52d6a9c2e4b09f7907dd1365"},{"problem":21,"code":"(fn [s n]\n  \t(last(take (inc n) s)))","user":"5db1e852e4b010eb3c36cd0a"},{"code":"(fn [x p] (last (take (+ p 1) x)))","problem":21,"user":"5315b53ee4b08068f379ed31"},{"problem":21,"code":"(comp first second #(split-at %2 %1))","user":"6004c750e4b074f607df6645"},{"problem":21,"code":"(fn [_list, _elem] (.get _list _elem))","user":"571614d7e4b07c98581c3aed"},{"problem":21,"code":"(fn [c n]\n  (get (apply assoc {} (interleave (into [] (range (count c))) c)) n))","user":"54a6cdc3e4b09f271ff37c8c"},{"code":"(fn my_nth [s n]\n  (if (= 0 n)\n    (first s)\n  (my_nth (rest s) (- n 1))))","problem":21,"user":"504e24e2e4b0f6ff3350c46d"},{"problem":21,"code":"(fn  [s n]\n  (let [c (range (count s))\n        m (map #(assoc nil %1 %2) c s)]\n    (get (into {} m) n)))","user":"5f816cc6e4b0c071e6c840f1"},{"problem":21,"code":"#(loop [x %2\n        coll %1]\n   (if (= x 0)\n     (first coll)\n     (recur (dec x) (rest coll))))","user":"5f5abf29e4b0a0bc16850aa8"},{"code":"(fn [l n] (if (zero? n) (first l) (recur (rest l) (dec n))) )","problem":21,"user":"51729002e4b044b2ef48a850"},{"code":"(fn nth2 \n    ([l num]\n       (if (= num 0)\n         (first l)\n         (recur (rest l) (dec num))\n       )\n     )\n  )","problem":21,"user":"5191045ee4b0f8ef0be96bf3"},{"code":"(fn [x, y] \n  (first \n   (reverse \n    (take (+ y 1) x))))","problem":21,"user":"52fbbadde4b047fd5583700f"},{"problem":21,"code":"(fn [xs ix]\n  (loop [x 0 xs xs]\n    (if (= x ix) (first xs) (recur (inc x) (rest xs)))))","user":"5bc664a2e4b07a9b28b10093"},{"code":"(fn [aseq n]\n  (first (drop n aseq)))","problem":21,"user":"5235493ee4b05e80434a5064"},{"problem":21,"code":"(fn\n  [coll idx]\n  (if (pos? idx)\n    (recur (next coll) (dec idx))\n    (first coll)))","user":"5cdc17d0e4b05ee0cb31173c"},{"problem":21,"code":"(fn [input-list n]\n  (loop [cnt n temp-list input-list]\n    (if (zero? cnt)\n      \t(first temp-list)\n      \t(recur (dec cnt) (rest temp-list))\n    )\n  )\n)","user":"5909b3f8e4b047aa04b199a4"},{"problem":21,"code":"(fn [data counter]\n  (if (zero? counter)\n    (first data)\n    (recur (rest data) (dec counter))))","user":"595e8728e4b066ee0a44b047"},{"code":"(fn [col n] ((apply comp first (take n (repeat rest))) col))","problem":21,"user":"4fab31a8e4b081705acca215"},{"code":"(fn [a b] (last (map #(identity %2) (range (inc b)) a)))","problem":21,"user":"4f32a7f1e4b0d6649770a095"},{"problem":21,"code":"(fn [x, n]\n  (if (= n 0)\n    (first x)\n    (recur (rest x) (dec n))\n    )\n  )","user":"6093b56ce4b00e9e6653c3e0"},{"code":"(fn [l n]\n  (loop [ll l c 0]\n    (if (= c n)\n      (first ll)\n      (recur (rest ll) (inc c)))))","problem":21,"user":"509331d9e4b097f48cc38580"},{"problem":21,"code":"(fn n-th\n  [items n]\n  (last (take (inc n) items)))","user":"5bc4f266e4b07a9b28b10066"},{"problem":21,"code":"(fn [coll pos]\n  (first (drop pos coll)))","user":"5db012e3e4b0f8c104ccfc95"},{"problem":21,"code":"(fn\n  [l i]\n  (last (take (+ i 1) l)))","user":"5a087907e4b01bb0ae8afdf7"},{"code":"(fn [s x] \n  (loop [i x\n          n s]\n    (if (zero? i)\n      (first n)\n      (recur (dec i) (rest n) ))))","problem":21,"user":"4f0378eb535dcb61093f6ae1"},{"problem":21,"code":"(fn [coll n]\n (loop [cl coll x n]\n   (if (= x 0)\n     (first cl)\n     (recur (rest cl) (- x 1))))\n)","user":"565e21e0e4b068f2fe63dc32"},{"problem":21,"code":"((fn [f] (f f))\n    (fn [f]\n        (fn [xs n]\n            (if\n                (= 0 n)\n                (first xs)\n                ((f f)\n                    (rest xs)\n                    (dec n))))))","user":"60cd8e8ee4b0e0fa5f1b432a"},{"problem":21,"code":";#(get (vec %1) %2)\n#(get (into [] %1) %2)","user":"585c16c3e4b0f14aab7c877d"},{"code":"(fn lastitem [x n]\n\t(if (= 0 n) (first x) (lastitem (rest x) (dec n))))","problem":21,"user":"510130d4e4b0bef64c30e268"},{"problem":21,"code":"(fn [xs n] (if (= n 0) ( first xs ) (recur (rest xs) (- n 1))))","user":"58852b53e4b0f1effa3b76b0"},{"code":"(fn [lst n] \n  \t(loop [l lst\n           i 0]\n      \t(if (= i n)\n          \t(first l)\n          \t(recur (rest l) (inc i)))))","problem":21,"user":"538828cfe4b0640c7a9a5899"},{"problem":21,"code":"(fn [lista n]\n  (last (take (inc n) lista))\n )","user":"5e6b891ee4b04a83ad7cd27a"},{"problem":21,"code":"(fn my-nth\n  [col index]\n  (let [x (next col)]\n    (if (= index 0) (first col) (my-nth x (dec index)))))","user":"551c594de4b07993ea3788dc"},{"code":"(fn mynth[s n] (if (nil? s) nil (if (= n 0) (first s) (mynth (rest s) (- n 1)))))","problem":21,"user":"51937eb3e4b04df54c098022"},{"problem":21,"code":"(fn [x y]\n  (if (zero? y)\n    (first x)\n    (recur (rest x) (dec y))))","user":"53a7dc5be4b047364c044422"},{"code":"(fn [x y] \n  (first \n    (drop y \n      (take (+ y 1) x)\n)\n))","problem":21,"user":"4eae2f9e535d7eef30807324"},{"problem":21,"code":"(fn [coll index]\n  (if (= index 0)\n    (first coll)\n    (recur (rest coll)(dec index))))","user":"57ff8770e4b0a837a8b30c21"},{"problem":21,"code":"(fn xth[x n] (if (= n 0)(first x)(xth (rest x)(- n 1))))","user":"58480fa9e4b089d5ab817eb1"},{"code":"#(loop [x %1 t %2] (if (= t 0)\n                (first x) \n                (recur (next x) (dec t))))","problem":21,"user":"52f28593e4b05e3f0be25ef9"},{"problem":21,"code":"(fn index [s x]\n  (last (take (+ x 1) s)))","user":"55352aa3e4b09218d5f44fac"},{"problem":21,"code":"(fn [x, pos] (first (reverse (take (+ pos 1) x))))","user":"55454bfbe4b0a04f79299532"},{"problem":21,"code":"(fn get-element [coll index]\n  (if (= index 0)\n      (first coll)\n      (get-element (rest coll) (- index 1))))","user":"547f8736e4b0c51c1f4d731d"},{"code":"(fn nthh [l, n] (if (= n 0) (first l) (nthh (rest l) (- n 1))))","problem":21,"user":"53217912e4b09d4e7a9b54b3"},{"problem":21,"code":"(fn my-nth [x n]\n  (if (= n 0) \n    (first x)\n    (recur (rest x) (dec n))\n    ))","user":"585a7b05e4b0f14aab7c874d"},{"code":"#(loop [result 0 col %1 th 0]\n   (if (> th %2)\n     result\n     (recur (first col) (rest col) (+ 1 th))))","problem":21,"user":"518ccf6be4b05e6c8537e386"},{"problem":21,"code":"(fn [l i] (loop [lst l idx i] (if (zero? idx) (first lst) (recur (rest lst) (dec idx)))))","user":"5d03c351e4b0cc9c915881cc"},{"code":"#(loop [c % i %2]\n    (if (= 0 i) (first c)\n        (recur (rest c) (dec i))))","problem":21,"user":"519dbf26e4b037b32803f9bd"},{"problem":21,"code":"#(first (drop %2, %1))","user":"56887bcbe4b0dcc4269f406a"},{"code":"(fn element [sqnce position] (\n                 if (= 0 position)\n                 \t(first sqnce)\n                    (element (rest sqnce) (- position 1))\n                 )\n)","problem":21,"user":"51f6af4fe4b06ff1c25c52ce"},{"problem":21,"code":"(fn mth [coll n] (if (= n 0) (first coll) (mth (rest coll) (dec n))))","user":"53ed6befe4b0d648e757f4c5"},{"problem":21,"code":"(fn [x n]\n  (loop [x x\n         n n]\n    (cond (= n 0) (first x)\n          :else (recur (rest x) (- n 1)))))","user":"564f5774e4b0284900eef6ac"},{"problem":21,"code":"(fn  [lis n]\n  (loop [ctr 0 nlis lis]\n    (if (= n ctr)\n      (first nlis)\n      (recur (inc ctr) (rest nlis)))))","user":"543cd93ce4b032a45b869342"},{"code":"(fn [coll n] (first (reverse (take (inc n) coll))))","problem":21,"user":"51424028e4b0b50abeb46b31"},{"code":"(fn [s n]\n  ((apply comp (cons first (repeat n rest))) s))","problem":21,"user":"534815bde4b084c2834f4a53"},{"problem":21,"code":"(fn thh [arg liko]\n  (if (= liko 0)\n    (first arg)\n    (thh (rest arg)(dec liko))))","user":"5cc092d1e4b0ccb061962790"},{"problem":21,"code":"(fn [col i]\n  (loop [list col index i]\n    (if (zero? index)\n      (first list)\n      (recur (rest list) (dec index)))))","user":"5360578ee4b0243289761e35"},{"problem":21,"code":"(fn nthelement [list index]\n  (loop [x (first list)\n         my-list list\n         i index]\n    (if (> i -1)\n      (do\n        (recur (first my-list)\n               (rest my-list)\n               (dec i))\n        )\n\n      x)\n    ))","user":"55f6d4fce4b06e875b46ce9b"},{"problem":21,"code":"(fn nth-element [list n] (if (= 0 n)\n                   (first list)\n                   (nth-element (rest list) (- n 1))\n                   )\n  )","user":"5759cd46e4b02ea11479932e"},{"problem":21,"code":"(fn myNth [x n] \n\t(if (= n 0)\n        (first x)\n        (myNth (rest x) (- n 1))))","user":"5aa5951ae4b0d174b936c899"},{"problem":21,"code":"(fn [args n]\n  (loop [values args\n         i 0]\n    (if (= i n)\n      (first values)\n      (recur (rest values) (inc i)))))","user":"55d06bcbe4b0e31453f64a3a"},{"problem":21,"code":"(fn [xs cnt] (if (= cnt 0) (first xs) (recur (next xs) (- cnt 1))))","user":"548c574ae4b0e286459a1207"},{"problem":21,"code":"(fn x[v i]\n  (if (== i 0)\n  (first v)\n  (recur (rest v) (dec i))\n  ))","user":"55188c5de4b06a49daca83cc"},{"code":"(fn [set counter]\r\n      (if (= counter 0)\r\n        (first set)\r\n        (recur (rest set) (- counter 1))\r\n      )\r\n    )","problem":21,"user":"4dd6fa3a535d2dad7130b5ce"},{"code":"#(second (take-nth %2 %1))","problem":21,"user":"4e0cdc6f535d04ed9115e7b4"},{"problem":21,"code":"(fn my-nth [li n]\n  (if (zero? n)\n    (first li)\n    (my-nth (rest li) (dec n))))","user":"59f2af64e4b0966464fe6a87"},{"code":"(fn nth' [coll inx] (if (= inx 0) (first coll) (nth' (rest coll) (- inx 1))))","problem":21,"user":"532be28ae4b09d4e7a9b5539"},{"problem":21,"code":"(fn [arr needle]\n  (loop [values arr\n         index 0]\n    (if (= index needle)\n      (first values)\n      (recur (rest values) (+ 1 index)))))","user":"5d51216ae4b0776584bd6f5b"},{"code":"(fn f[x y] (last (take (+ y 1) x)))","problem":21,"user":"4fe88cc1e4b07c9f6fd12c42"},{"problem":21,"code":"(fn my-nth [coll idx] ((vec coll) idx))","user":"5ce56455e4b0a17bb84e2b71"},{"problem":21,"code":"(fn my-nth [xs, n]\n  (if (= 0 n)\n    (first xs)\n    (my-nth (rest xs) (dec n))))","user":"57006957e4b08d47c97781c8"},{"code":"(fn \n  [seq index] \n  (loop [chunk seq i index]\n    (if (> i 0)\n      (recur (rest chunk) (dec i))\n      (first chunk)\n    )\n  )\n)","problem":21,"user":"4f039a8b535dcb61093f6b36"},{"problem":21,"code":"(fn [v n]\n  (loop [w v, i 0]\n    (if (= i n)\n      (first w)\n      (recur (next w) (inc i))\n    )\n  )\n)","user":"549ffeade4b0f3d1d8e70fb2"},{"problem":21,"code":"(fn [coll indx] \n  (if (= indx 0)\n    (first coll)\n    (recur (rest coll) (dec indx))))","user":"54393c3fe4b032a45b86931a"},{"problem":21,"code":"(fn nth-seq [array n]\n  (if (= n 0)\n    (first array)\n    (nth-seq (rest array) (dec n))))","user":"5e839edde4b09a7a73c8bbba"},{"code":"(fn [x y]\n  (loop [count 0\n    x x]\n    (if (= count y) (first x)\n    (recur (inc count) (rest x)))))","problem":21,"user":"4f748b54e4b044e54cd9a8fa"},{"problem":21,"code":"(fn [s n]\n  (loop [i n sr s]\n    (if (= i 0)\n      (first sr)\n      (recur (dec i) (rest sr)))))","user":"55bbd179e4b01b9910ae29eb"},{"problem":21,"code":"(fn my-nth [xs, n] (if (= n 0) (first xs) (my-nth (rest xs) (- n 1))))","user":"58b7e825e4b0ebc645576d85"},{"problem":21,"code":"(fn foo\n [x n]\n (if (zero? n)\n   (first x)\n   (foo (rest x) (- n 1))))","user":"59077d7be4b047aa04b1995b"},{"problem":21,"code":"(fn getNth [array index] \n  (if (= 0 index) \n    (first array) \n    (getNth (rest array) (dec index) )))","user":"576d4791e4b0979f8965155f"},{"code":"(fn yarp [x y]\n  (if (= (first x) 4)\n    6\n    (if (= (first x) :a)\n      :a\n      (if (= (first x) 1)\n        2\n        [5 6]))))","problem":21,"user":"52d95ba3e4b09f7907dd13a6"},{"code":"#(loop [l %1\n        n %2]\n   (if (= n 0)\n       (first l)\n       (recur (rest l) (dec n))))","problem":21,"user":"50015be1e4b0678c553fc41a"},{"code":"(fn [l pos]\n  (if (zero? pos) \n      (first l)\n    (recur (rest l) (dec pos))))","problem":21,"user":"532cb870e4b019098a6f8b34"},{"code":"(fn foo [x num] (if (pos? num) (foo (rest x) (- num 1)) (first x)))","problem":21,"user":"4e4c64a1535dc968683fc4dd"},{"code":"(fn nt\n               [v n]\n               (if (<= n 0)\n                 (first v)\n                 (nt (rest v) (- n 1))))","problem":21,"user":"50b09833e4b009df37c708bd"},{"problem":21,"code":"(fn [l n]\n  (first (reverse (take (+ n 1) l))))","user":"58663964e4b0f14aab7c885c"},{"problem":21,"code":"(fn [items item]\n  (if\n    (= item 0) \n    (first items)\n    (recur (rest items) (- item 1))))","user":"56497a73e4b0284900eef642"},{"code":"(fn [coll n]\n  (loop [coll coll n n]\n    (if (zero? n)\n      (first coll)\n      (recur (rest coll) (dec n)))))","problem":21,"user":"4e68c434535d8ccf87e9fe89"},{"code":"( fn[x y] (first (nthnext x y)))","problem":21,"user":"513a1d33e4b067e25a345ec4"},{"problem":21,"code":"(fn my-nth [l n] (if (= n 0) (first l) (my-nth (rest l) (- n 1))))","user":"59258aa7e4b072a2710fce74"},{"code":"(fn [s index] (get (vec s) index))","problem":21,"user":"4f046d70535dcb61093f6bc5"},{"problem":21,"code":"(fn [seq index]\n  (last (take (+ 1 index) seq)))","user":"57a5da5ee4b0a966079561fe"},{"problem":21,"code":"(fn [coll i]\n    (if (zero? i)\n      (first coll)\n      (recur (rest coll) (dec i))))","user":"5cec049ce4b0a17bb84e2bef"},{"problem":21,"code":"(fn [l n] (loop [li l cnt 0] (if (= n cnt) (first li) (recur (rest li) (inc cnt)))))","user":"5bcf95ace4b0e9689409ee2e"},{"problem":21,"code":"(fn [l n]\n  (loop [ll l\n         c n]\n    (if (= c 0)\n      (first ll)\n      (recur (rest ll) (- c 1)))))","user":"5d3ae729e4b01671435dbd5d"},{"problem":21,"code":"(fn [coll n] \n  (if (= n 0) (first coll) (recur (rest coll) (dec n))))","user":"553e3260e4b0a04f792994eb"},{"problem":21,"code":"(fn nth-2 [xs, n]\n  (loop [xs xs i 0]\n    (if (= i n)\n      (first xs)\n      (recur (rest xs) (inc i)))))","user":"5689fd03e4b0dcc4269f4088"},{"problem":21,"code":";#(get (into-array %1) %2)\n#(first(drop %2 %1))","user":"580d7e53e4b0849f6811b73e"},{"code":"(fn at [aList n] (if (= n 0) (first aList) (at (rest aList) (- n 1))))","problem":21,"user":"511ec160e4b03e81d390ac2b"},{"code":"(fn [sec indx]\n  (get (into-array sec) indx))","problem":21,"user":"537cb3ade4b06839e8705e7d"},{"problem":21,"code":"#((apply comp (conj (repeat %2 rest) first)) %)","user":"54b448f2e4b05787c3b1638e"},{"problem":21,"code":"(fn [li n]\n  (first (filter (fn [x] x) (map (fn [x y] (if (= x n) y nil)) (range (count li)) li))))","user":"589974aee4b00487982d52f1"},{"problem":21,"code":"(fn [s n]\n  (loop [i n\n         items s]\n    (cond\n      (zero? i)\n      (first items)\n       :else\n       (recur (dec i) (rest items))\n    )\n  )\n)","user":"53c5976be4b00fb29b221290"},{"code":"#(loop [remainder %1, acc %2] (if (> acc 0) (recur (rest remainder) (- acc 1)) (first remainder)))","problem":21,"user":"519d66d2e4b037b32803f9b2"},{"problem":21,"code":"#(loop [i %2 l %1] (if (zero? i) (first l) (recur (dec i) (rest l))))","user":"53d28800e4b00fb29b22131e"},{"problem":21,"code":"(fn my-nth [lst n]\n  (last (take (inc n) lst)))","user":"5a1ef1abe4b0ff51aa4b327c"},{"code":"(fn my-nth [c n] (cond (= 0 n) (first c)\r\n              :else (my-nth (rest c) (- n 1))))","problem":21,"user":"4eb44d78535d7eef30807360"},{"code":"(fn [coll n] \r\n  ((apply comp (cons first (repeat n rest))) coll))\r\n;(fn [coll n]\r\n;  (last (take (inc n) coll)))\r\n\r\n;(comp first nthnext)","problem":21,"user":"4e1248b1535d04ed9115e7cf"},{"code":"#(last (take (+ 1 %2) %1 ) )","problem":21,"user":"502ed81ee4b06efe12e8cc7b"},{"problem":21,"code":";#(get (into [] %1) %2)\n#(get (vec %1) %2)","user":"597af3f7e4b02382a38ad1f0"},{"code":"(fn hugo [x n] \n  ((fn ins [x y n] (\n    if (= y n) (first x) (ins (rest x) (+ y 1) n)  \n    )) x 0 n)\n)","problem":21,"user":"4fcf5292e4b03432b189f40e"},{"code":"(fn [l n] ((apply comp (cons first (repeat n rest))) l))","problem":21,"user":"5351c1fee4b084c2834f4ae8"},{"problem":21,"code":"(fn [input, n] (first ((apply comp (repeat n rest)) input)))","user":"566713e0e4b04acd4f672dc7"},{"code":"(fn [col, index] (first (drop index col)))","problem":21,"user":"5288e51de4b0239c8a67ae59"},{"code":"#( loop[cindex 0 index %2 source %1 ] ( if (= index cindex) (first source) (recur (inc cindex) index (rest source))))","problem":21,"user":"5042cb29e4b034ff00315d18"},{"problem":21,"code":"(fn [l n]\n  (if (= n 0)\n    (first l)\n    (recur (rest l) (dec n))\n    ))","user":"5433a07be4b0b6b47310fce0"},{"code":"(fn [l, n] (if (= 0 n) (first l) (recur (rest l) (- n 1))))","problem":21,"user":"52d81990e4b09f7907dd1388"},{"problem":21,"code":"(fn [x cnt]\n  (if (= cnt 0) (first x)\n    (recur (rest x) (- cnt 1))))","user":"563130e4e4b0bfe05bf1178d"},{"problem":21,"code":"(fn chop [x y] (if (= y 0) (first x) (chop (rest x) (dec y))))","user":"54651faee4b01be26fd746d6"},{"code":"(fn [nums index]\n  (loop [nums nums index index]\n    (if (== index 0) (first nums) (recur (rest nums) (- index 1)))))","problem":21,"user":"50a635bbe4b0aa96157e2621"},{"code":"(fn [sq n]\n  (if (= n 0)\n    (first sq)\n    (recur (rest sq) (- n 1))))","problem":21,"user":"50775a7de4b0fc74642bff60"},{"code":"( fn [list, n]\n  ( if (= n 0) \n       (first list)\n       (recur (rest list) (- n 1)) ) )","problem":21,"user":"4f6d09c5e4b07046d9f4efc3"},{"problem":21,"code":"#(cond (empty? %1) %1 (= 0 %2) (first %1) :else (recur (rest %1) (dec %2)))","user":"55e26417e4b050e68259b433"},{"problem":21,"code":"(fn [coll idx]\n  (if (zero? idx)\n    (first coll)\n    (recur (rest coll) (dec idx))))","user":"54125eeee4b01498b1a719d3"},{"code":"(fn [s n] \r\n  (if (zero? n)\r\n    (first s)\r\n  (recur (rest s) (dec n))))","problem":21,"user":"4eb6d3ab535d7eef30807370"},{"problem":21,"code":";(fn my-nth [s n] (if (= 0 n) (first s) (my-nth (rest s) (dec n))))\n(fn my-nth [s n] ((vec s) n))","user":"60325627e4b0d5df2af222b5"},{"problem":21,"code":"(fn [col pos]\n  (loop [elements [] others col]\n    (if (= (count elements) (+ 1 pos))\n      (last elements)\n      (recur (conj elements (first others)) (rest others)))))","user":"5d7b90ede4b02e6b30c93552"},{"problem":21,"code":"(fn [s n] \n   (first (drop n s)))","user":"5458c74de4b01be26fd74623"},{"code":"(fn h [x c] (if (= c 0) (first x) (h (rest x) (- c 1))))","problem":21,"user":"4e9d6a65535dbda64a6f6b87"},{"code":"#(loop [lst %1\n        i %2]\n   (if (= i 0)\n     (first lst)\n     (recur (rest lst)\n            (- i 1))))","problem":21,"user":"512e8f5ce4b0b740abc59829"},{"code":"(fn mynth [l x] (if (= x 0)\n                     (first l)\n                   (mynth (rest l) (- x 1))))","problem":21,"user":"536b5feee4b0243289761eba"},{"problem":21,"code":"(fn my-nth [input n] (last (take (+ n 1) input)))","user":"5a86eccde4b05369db4d24a1"},{"problem":21,"code":"(fn [coll index] \n  (if (= index 0)\n    (first coll)\n    (recur (rest coll)\n           (dec index))))","user":"55a4047ce4b0acc240e31541"},{"problem":21,"code":"(fn [l i] ((vec (drop i l)) 0))","user":"53e76728e4b036ad0777e47c"},{"problem":21,"code":"(fn nth_element [elements number] (first (drop number elements)))","user":"55ca3983e4b0e31453f649f8"},{"problem":21,"code":"#(last (take (inc %2) %1)) \n\n;; function takes 2 args - x first is a seq, y second is the element num we want\n;; sequence zipmap first seq is x and second is [0 1 ... count-1]\n;; get the value of the key equal to y","user":"60c8e662e4b0e0fa5f1b4300"},{"problem":21,"code":"(fn test [x n] (if (= n 0) (first x) (test (rest x) (- n 1))))","user":"541475afe4b01498b1a719eb"},{"problem":21,"code":"(fn get_pos\n  ([x pos] (get_pos x 0 pos))\n  ([x n pos]\n  (if (= n pos)\n    (first x)\n    (get_pos (rest x) (inc n) pos)\n  ))\n)","user":"5564709ee4b0c656e3ff1807"},{"problem":21,"code":"(fn [coll n] (first ((apply comp (repeat n rest)) coll)))","user":"5630fd6fe4b0bfe05bf1178b"},{"code":"(fn [col n] \n  (let [nfinder #(apply comp (conj (repeat % rest) first))]\n    ((nfinder n) col)))","problem":21,"user":"4ed418b8535d10e5ff6f52c5"},{"problem":21,"code":"(fn [s n]\n  (when s\n    (if (zero? n)\n      (first s)\n      (recur (rest s) (- n 1)))))","user":"571d063ee4b0145328a76272"},{"code":"(fn n [l i] (if (= i 0) (first l) (n (rest l) (- i 1))))","problem":21,"user":"4e5af6d7535d8a8b8723a2b2"},{"problem":21,"code":"#(if (> %2 0)\n    (recur (next %1) (- %2 1))\n    (first %1)\n    )","user":"5cead199e4b0a17bb84e2bd4"},{"problem":21,"code":"#(loop [l %1 n %2] (if (< n 1) (first l) (recur  (rest l) (- n 1))))","user":"542edb4ae4b0dad94371f2c8"},{"code":"(fn my-nth [lst n]\n  (if (= n 0)\n    (first lst)\n    (my-nth (rest lst)\n            (- n 1))))","problem":21,"user":"4f9a0064e4b0dcca54ed6d03"},{"code":"#(if (= %2 0) (first %1) (recur (next %1) (dec %2)))","problem":21,"user":"4e46ac46535dc968683fc4b5"},{"code":"(fn [s n] (first (nthrest s n)))","problem":21,"user":"523a657be4b081681ca7adc1"},{"problem":21,"code":"(fn [array n] (last (take (inc  n) array)))","user":"599abf68e4b07157cc8dab12"},{"problem":21,"code":"#(if (zero? %2)\n    (first %1)\n    (recur (rest %1) (- %2 1)))","user":"5dca8cede4b02b31cc3da3b0"},{"problem":21,"code":"(fn me [xs i]\n  (if (= i 0)\n    (first xs)\n    (me (rest xs) (- i 1))))","user":"596296e9e4b066ee0a44b0b6"},{"code":"(fn [list n] (last (take (+ n 1) list)))","problem":21,"user":"4eaf1342535d7eef30807330"},{"code":"(fn derp\n  [s i]\n  (if (= i 0)\n    (first s)\n    (derp (rest s) (dec i))))","problem":21,"user":"52bb4be0e4b07a9af57922e2"},{"code":"(fn [sequence index]\n  (loop [s (rest sequence), x (first sequence), i 0]\n    (cond (= index i) x\n          :else (recur (rest s) (first s) (inc i)))))","problem":21,"user":"538e36c7e4b0b51d73faae81"},{"code":"(fn nth_[l x] (last (take (inc x) l)))","problem":21,"user":"50d20c28e4b05a71a896ef5d"},{"problem":21,"code":"(fn\n  [x n]\n  (if (seq? x)\n    (get (into [] x) n)\n    (get x n))\n)","user":"56451201e4b0284900eef600"},{"problem":21,"code":"(fn NthElement\n  [coll idx]\n  (if (= idx 0)\n    (first coll)\n    (NthElement (rest coll) (dec idx))))","user":"5b02a170e4b0cc2b61a3bd52"},{"code":"(fn [seq i]\n  (loop [pos 0\n         s seq]\n    (if (= pos i)\n        (first s)\n        (recur (inc pos) (rest s)))))","problem":21,"user":"4fd0d058e4b04c3a95aa0408"},{"problem":21,"code":"(fn [coll idx]\n  (if (> idx 0)\n    (recur (rest coll) (dec idx))\n    (first coll)\n  ))","user":"56f188e9e4b04a395b9a0494"},{"code":"(\n  fn [coll n]\n    (last \n      (take (inc n) coll)\n    )\n)","problem":21,"user":"4f71ac00e4b07046d9f4f010"},{"problem":21,"code":"(fn [elems n] (last (take (+ n 1) elems)))","user":"55ce8cfee4b0e31453f64a29"},{"problem":21,"code":"(fn [xs n] \n  (loop [xs xs n n] \n      (if (zero? n) \n        (first xs) \n        (recur (rest xs) (dec n)))))","user":"552d9b31e4b076ab5578f7eb"},{"code":"(fn nelem [l e] \n  (if (= 0 e) \n    (first l)\n    (nelem (rest l) (dec e))\n  )\n)","problem":21,"user":"51ab1718e4b04e3dc0c27b2f"},{"code":";(fn myfunction[coll n]\n;  (if (= n 0) \n;    (first coll)\n;    (myfunction (rest coll) (- n 1))));cheated\n\n#(if (= %2 0) (first %1)\n    (recur (rest %1) (- %2 1)))","problem":21,"user":"5032cf63e4b0e4096af89716"},{"code":"(fn mynth [x n] \n  (if (= n 0) \n    (first x) \n    (mynth (rest x) (- n 1))))","problem":21,"user":"4f073003535dcb61093f6c22"},{"problem":21,"code":"(fn [lst n]\n  (loop [lst1 lst\n         n1 n]\n   (if (= n1 0)\n     (first lst1)\n     (recur (rest lst1)\n            (- n1 1)))))","user":"547de0cbe4b0c51c1f4d72ff"},{"code":"(fn [coll n]\n  (loop [untilzero n\n         check-this coll]\n    (if (zero? untilzero)\n      (first check-this)\n      (recur (dec untilzero) (next check-this)))))","problem":21,"user":"5213cd45e4b0a98dd8fc4bd6"},{"problem":21,"code":"(fn get-nth [x n] (if (= 0 n) (first x) (recur (rest x) (dec n))) )","user":"5560293de4b0c656e3ff17bf"},{"problem":21,"code":"(fn nthel [coll n]\n  (loop [xs coll i n]\n    (if (zero? i)\n      (first xs)\n      (recur (next xs) (dec i)))))","user":"5bc833a5e4b07a9b28b100bb"},{"problem":21,"code":"#(loop [q % n %2]\n   (if (<= n 0) \n     (first q)\n     (recur (rest q) (dec n))))","user":"54d89deae4b0a52adc2e203a"},{"code":"(fn [l n] \n  (if \n    (= n 0)\n    (first l)\n    (recur (rest l) (dec n))\n    )\n  )","problem":21,"user":"523f0bbfe4b01c266ffa7f91"},{"problem":21,"code":"(fn enth [lst index]\n  (if (> index 0) (enth (rest lst) (- index 1)) (first lst)))","user":"5441d720e4b032a45b869374"},{"problem":21,"code":"(fn [args i] (if (= 0 i) (first args) (recur (rest args) (- i 1))))","user":"5597cc26e4b031d6649c9b93"},{"problem":21,"code":"(fn [_list, _n]\n  (if (= 0 _n)\n    (first _list)\n    (recur (rest _list) (dec _n))))","user":"5bc50870e4b07a9b28b10069"},{"problem":21,"code":"(fn [ls n]\n  (if (= n 0)\n    (first ls)\n    (recur (rest ls) (- n 1))))","user":"56d7f340e4b0ea9b8538f7df"},{"problem":21,"code":"( fn [c n] (->> (drop n c) (first)))","user":"56fe665be4b08d47c97781af"},{"code":"(fn [list index]\n  (first (filter  #(not (nil? %1)) (map-indexed #(if (= %1 index) %2 nil) list))))","problem":21,"user":"506afdafe4b0a2a5463de37e"},{"problem":21,"code":"(fn [coll n]\n  (loop [i n c coll]\n    (if (= i 0)\n      (first c)\n      (recur (dec i) (rest c)))))","user":"5745b884e4b009280f9f2b53"},{"code":"#(last (take (+ %2 1) %1 ))","problem":21,"user":"4faa7185e4b081705acca1f3"},{"problem":21,"code":"(fn [xs i](if (zero? i) (first xs) (recur (rest xs) (dec i))))","user":"55597b84e4b0deb715856e36"},{"problem":21,"code":"(fn nth_ele\n  [lst n] \n  \n  (last (take (+ n 1) lst)))","user":"5a99ae99e4b0d174b936c7a4"},{"problem":21,"code":"(fn [seq-value index]\n  (first(nthrest seq-value index)))","user":"5b3e0c7be4b02d533a91bbf7"},{"problem":21,"code":"(fn n-th [coll th]\n  (loop [times 0\n         v (first coll)\n         r (rest coll)]\n    (if (= times th)\n      v\n      (recur (inc times) (first r) (rest r)))))","user":"561d8936e4b064ca9f4b16b2"},{"problem":21,"code":"#(loop [result %1 i %2]\n  (if (zero? i)\n    (first result)\n    (recur (rest result) (dec i))))","user":"5cbc1ee7e4b026601754b9e1"},{"code":"(fn [s index]\n  (if (= index 0)\n    (first s)\n    (recur (rest s) (- index 1))))","problem":21,"user":"4f604bdee4b0defedf855fa7"},{"code":"(fn mynth [xs n]\n  (if (= n 0)\n     (first xs)\n     (mynth (rest xs) (dec n))))","problem":21,"user":"4f2a35ace4b0d6649770a03a"},{"code":"(fn [l n]\n  (if (zero? n) \n    (first l) \n    (recur (rest l) (dec n))\n  )\n)","problem":21,"user":"516a9dbee4b081287f204e9c"},{"problem":21,"code":"(fn myFN [lst iPos]\n  (loop [fLst (first lst)\n         rLst (rest lst)\n         cPos 0]\n    (if (= cPos iPos)\n      fLst\n      (recur (first rLst)\n             (rest rLst)\n             (inc cPos) ))))","user":"5b33050ee4b025bcb146f32d"},{"code":"#(first ( reverse ( take ( + %2 1 ) %1 ) ) )","problem":21,"user":"504ea40ee4b069badc5a33bf"},{"problem":21,"code":"(fn n-element [coll index]\n  (if (= index 0)\n    (first coll)\n    (n-element (next coll) (dec index))))","user":"60e89572e4b0fbed2fe3123e"},{"code":"#(if (= 0 %2) (first %) (recur (rest %)(dec %2)))","problem":21,"user":"5281a445e4b0757a1b17143a"},{"problem":21,"code":"(fn mth [xs n] \n  (if (= n 0) \n    (first xs) \n    (mth (rest xs) (dec n))))","user":"57ed8315e4b0bfb2137f5b9a"},{"problem":21,"code":"(fn my-nth [sequence index] \n  (if (= index 0) \n    (first sequence) \n    (my-nth (rest sequence) (- index 1))))","user":"58637f03e4b0f14aab7c881e"},{"problem":21,"code":"(fn nthCopy [ seq1 index ]\n  (if (= index 0) (first seq1) (recur (rest seq1) (dec index))))","user":"59f90e6ae4b0ca45a743a337"},{"code":"(fn recSpot [x c] (if (= 0 c) (first x) (recSpot (rest x) (dec c))))","problem":21,"user":"50e915eae4b033b0e80d11e9"},{"code":"#(get (apply vector %1) %2)","problem":21,"user":"4efb2fd7535dced4c769f274"},{"code":"(fn give-nth [target n] \n  (if (> n 0) \n    (give-nth (rest target) (- n 1))\n    (first target)\n  )\n)","problem":21,"user":"4f28eb85e4b0d6649770a01d"},{"problem":21,"code":"(fn [xs n]\n  (loop [xs xs\n         i 0]\n    (if (= i n)\n      (first xs)\n      (recur (rest xs) (inc i)))))","user":"543c39e0e4b032a45b86933d"},{"code":"(fn [l i] (if (> i 0) (recur (rest l) (dec i)) (first l)))","problem":21,"user":"51bd8c53e4b0ff155d51d2b2"},{"problem":21,"code":"(fn mynth [a b]\n  (if (= 0 b)\n    (first a)\n    (mynth (rest a) (dec b))))","user":"55b738cfe4b01b9910ae29a1"},{"code":"(fn [x,y] ( (vec x) y ) )","problem":21,"user":"52628bb0e4b03e8d9a4a7089"},{"problem":21,"code":"(fn [s n]\n  (first (last (take (inc n) (iterate rest s)))))","user":"564583f0e4b0284900eef607"},{"problem":21,"code":"(fn tk\n  [list ind]\n  (last (take (+ ind 1) list)))","user":"5c936567e4b048ec896c5a1b"},{"problem":21,"code":"(fn getElementByIndex\n ([coll index]\n   (let [x (first coll) y (rest coll)]\n   (cond\n    (= index 0) x\n    :else (getElementByIndex y index 1))))\n ([coll index trackingIndex]\n   (let [x (first coll) y (rest coll)]\n   (cond\n     (= index trackingIndex) x\n     :else (recur y index (inc trackingIndex))))))","user":"5bc232b7e4b07a9b28b10026"},{"problem":21,"code":"(fn [x n] (last (first (split-at (+ 1 n) x))))","user":"54a634abe4b09f271ff37c84"},{"problem":21,"code":"(fn nth-element\n  [collection index]\n  (if (zero? index)\n    (first collection)\n    (nth-element (rest collection) (dec index))))","user":"5f898166e4b0169f6814c41a"},{"code":"(fn [list x]\n  (if (= x 0)\n    (first list)\n    (recur (rest list) (- x 1))))","problem":21,"user":"4f8c6bf6e4b02e764a0a519b"},{"problem":21,"code":"(fn getnth [c n]\n  (if (= n 0) \n     (first c) \n     (getnth (rest c) (- n 1) ) \n  )\n)","user":"571aae1fe4b07c98581c3b5a"},{"code":"(fn reccc [x i] (if (= i 0) (first x) (reccc (rest x) (- i 1))))","problem":21,"user":"50df6dd0e4b061dbdced7225"},{"problem":21,"code":"(fn [a b]\n  (loop [x a\n         y b]\n    (if (= 0 y)\n      (first x)\n      (recur (rest x)\n             (dec y)))))","user":"59df2b8ee4b01968742fed87"},{"code":"(fn [s i]\n  (if (zero? i) (first s) \n    (recur (next s) (dec i))))","problem":21,"user":"4e47f4f3535dc968683fc4bb"},{"problem":21,"code":"(fn [liste i]\n     (first (last (take (+ i 1) (iterate rest liste)))))","user":"583c8bd4e4b089d5ab817d81"},{"code":"(fn mylast [input number] (if (= 0 number)\n                     (first input)\n                     (mylast (rest input) (- number 1))))","problem":21,"user":"5186571de4b0da5a5be3bad1"},{"problem":21,"code":"(fn [l n]\n  (loop [remainder l i n]\n    (if (zero? i)\n      (first remainder)\n      (recur (rest remainder) (- i 1)))))","user":"5647dc44e4b0284900eef624"},{"code":"(fn n\n  [l x]\n  \t(if (= x 0)\n      (first l)\n      (n (rest l) (- x 1))))","problem":21,"user":"519ec569e4b0acf32bc6a434"},{"problem":21,"code":"(fn my-nth [sq n]\n  (if (zero? n)\n    (first sq)\n    (my-nth (rest sq) (dec n))))","user":"54ae541ae4b09f271ff37cef"},{"code":"(fn [the-subject wanted-index]\n  (if (= 0 wanted-index)\n    (first the-subject)\n    (recur (rest the-subject) (- wanted-index 1))))","problem":21,"user":"52f3f536e4b05e3f0be25f1a"},{"problem":21,"code":"(fn [coll, idx] (last (take (+ idx 1) coll)))","user":"58b4898de4b0ebc645576d3d"},{"code":"(fn my-nth [coll n] (if (= n 0) (first coll) (recur (next coll) (dec n))))","problem":21,"user":"5197f674e4b068aa333628f6"},{"problem":21,"code":"(fn loop [lst x]\n  (if (= x 0)\n    (first lst)\n    (recur (rest lst) (- x 1))))","user":"56f1469de4b04a395b9a048c"},{"problem":21,"code":"(fn [l pos] (get (into [] l) pos))","user":"5797d3d2e4b039eba2ecb106"},{"problem":21,"code":"(fn nt [ls n]\n  (if (= n 0)\n    (first ls)\n    (nt \n     (rest ls) \n     (- n 1)\n    )\n   )\n )","user":"5efcee8fe4b0cf489e8d7efd"},{"code":"(fn [col pos] (if (zero? pos) (first col) (recur (rest col) (dec pos))))","problem":21,"user":"539c64cde4b0b51d73faaf2a"},{"code":"(fn [x y](first (nthnext x y)))","problem":21,"user":"52d6f326e4b09f7907dd136b"},{"code":"(fn nth1 [lst n]\n  \n  ((fn nth1 [l i]\n    (let [h (first l)\n          t (rest l)]\n    \t(if (= i n)\n            h\n          \t(nth1 t (+ i 1))))) lst 0))","problem":21,"user":"515c03c6e4b0388ca8ca1527"},{"code":"#(loop [pos %2 current %1] (if(zero? pos) (first current) (recur (- pos 1) (rest current))))","problem":21,"user":"534c1c64e4b084c2834f4a8a"},{"code":"(fn [els n] ((vec els) n))","problem":21,"user":"4e6a4541535d8ccf87e9feb8"},{"code":"(fn hey [x y] (if (= y 0) (first x) (hey (rest x) (- y 1))))","problem":21,"user":"52e17e66e4b09f7907dd1423"},{"problem":21,"code":"(fn [theList n] (#(.get theList n)))","user":"548026d8e4b0e286459a1155"},{"problem":21,"code":"(fn [x y] \n  (if (= y 0) \n    (first x)\n    (recur (rest x) (- y 1))))","user":"585cf2dee4b0f14aab7c8792"},{"problem":21,"code":"(fn enth\n  ([xs n] (enth xs n 0))\n  ([xs n acc]\n    (if (< acc n)\n      (enth (rest xs) n (+ acc 1))\n      (first xs))))","user":"595c3782e4b066ee0a44aff2"},{"problem":21,"code":"(fn enth [x i] (if (= 0 i) (first x) (enth (rest x) (dec i))))","user":"53dadf1de4b0e771c30254ad"},{"problem":21,"code":"(fn [list n]\n   (first (drop n list)))","user":"58543a59e4b07779d46863f5"},{"code":"#(first (nthnext (seq %) (- %2 0)))","problem":21,"user":"4f23e1cde4b0d66497709fe4"},{"code":"(fn thing [x n] (if (= n 0) (first x) (thing (rest x) (- n 1))))","problem":21,"user":"50f89404e4b0aafb827eb204"},{"problem":21,"code":"(fn [x i]\n  (first (nthnext x i)))","user":"56500332e4b0284900eef6b6"},{"code":"(fn nth-in-seq [s n]\n  (if\n    (= n 0)\n    (first s)\n    (nth-in-seq (rest s) (dec n))))","problem":21,"user":"4f16dbf3535d64f603146450"},{"problem":21,"code":"(fn nel [l n]\n  (if (> n 0)\n    (nel (rest l) (dec n))\n    (first l)))","user":"5d41f428e4b05dd059a5437b"},{"problem":21,"code":"(fn nthele [x y]\n  (last (take (inc y) x)))","user":"5f8795d4e4b020286baa5e96"},{"problem":21,"code":"(fn([coll n] (loop [coll coll count 0] (if (= count n) (first coll) (recur (rest coll) (inc count))))))","user":"5e5a269be4b0fd0acd15864d"},{"problem":21,"code":"(fn [xs idx] (first (drop idx xs)))","user":"59279a89e4b072a2710fced3"},{"code":"(fn NTH [s x] (if (= x 0) (first s) (NTH (rest s) (dec x))))","problem":21,"user":"5277fb07e4b03e8d9a4a7518"},{"code":"(fn my-nth [l,n]\n  (if (= n 0)\n    (first l)\n    (my-nth (rest l) (- n 1))))","problem":21,"user":"5356e04fe4b04ce2eb3ed271"},{"problem":21,"code":"(fn [xs n] (if (= n 0)\n             (first xs)\n             (recur (rest xs) (dec n))))","user":"54bf99c8e4b0ed20f4ff6f05"},{"code":"(fn [xs n] (first (nthrest  xs n)))","problem":21,"user":"517d755ce4b0f5e87c18f263"},{"problem":21,"code":"(fn [ls n] (loop [i 0 l ls] (if (= i n) (first l) (recur (inc i) (rest l)))))","user":"549b84a9e4b0f3d1d8e70f7e"},{"problem":21,"code":"(fn [lst i] (last (take (+ i 1) lst)))","user":"55ec0aa8e4b0121d4835fdc2"},{"problem":21,"code":"(fn [col idx] (->> col\n                     (map-indexed vector)\n                     (filter #(= idx (first %)))\n                     first\n                     second))","user":"5f0e8312e4b0f30dddfb5d5b"},{"problem":21,"code":"(fn nthele [col, n]\n  (first (nthnext col n)))","user":"58e67955e4b056aecfd47cb5"},{"code":"(comp last #(take (+ 1 %2) %1))","problem":21,"user":"4f3a979de4b0e243712b1f10"},{"problem":21,"code":"(fn [l n] (first (drop n l)) )","user":"54d6f22de4b0a52adc2e2023"},{"problem":21,"code":"(fn[array, n]\n  (first (drop n array))\n  )","user":"55240916e4b0882d96d091b6"},{"problem":21,"code":"(fn nth-element[elements n-th]  first (first (drop n-th elements)))","user":"5c7d6cb6e4b0d597f478caae"},{"problem":21,"code":"(fn y [s, i] (if (= i 0) (first s) (y (rest s) (- i 1))))","user":"55c60e03e4b0e31453f649ba"},{"code":"(fn [x y] (first(nthnext x y)))","problem":21,"user":"4edbbc6c535d10e5ff6f531d"},{"problem":21,"code":"(fn [x y]\n \t(if (= y 0)\n      (first x)\n      (recur (rest x) (dec y)))\n  )","user":"5530b827e4b076ab5578f818"},{"problem":21,"code":"(fn [urcol urcnt]  \n   (loop [col  urcol cnt (inc urcnt)]\n     (if (<= cnt 1) ;; should not be <  1! infinite loop safeguard\n       (first col)\n       (recur (rest col) (dec cnt))\n     ) \n   )\n  )","user":"572ac718e4b0f4d77e651242"},{"problem":21,"code":"(fn reduct [x y] (if (= 0 y) (first x) (reduct (rest x) (- y 1))))","user":"579b24d0e4b05b1deef9adee"},{"problem":21,"code":"(fn my-nth [arr, n]\n  (if (= n 0) (first arr) (my-nth (rest arr) (dec n)))  \n)","user":"570578aae4b0b0fb43fd0673"},{"problem":21,"code":"(fn[l n](first(drop n l)))","user":"5d60ea3ae4b0c9e5857d500a"},{"code":"#(first (drop %2 %) )","problem":21,"user":"4e952463535dbda64a6f6b31"},{"problem":21,"code":"(fn foo [coll i]\n  (if (< i 1)\n    (first coll)\n    (foo (rest coll)\n         (- i 1))))","user":"4e8385d8535db62dc21a62db"},{"problem":21,"code":"(fn\n  [seq n]\n  (get\n    (into [] seq)  \n    n \n  )\n)","user":"5bdb0b4ce4b0ed4b8aab4c10"},{"problem":21,"code":"(fn f [co in]\n  (if (= in 0)\n    (first co)\n    (f (rest co) (dec in))))","user":"5570d5a4e4b09a3098a52533"},{"code":"(fn get-nth \n  ([l n] (get-nth l n 0))\n  ([l n i] (if (= n i) \n            (first l) \n            (get-nth (rest l) n (inc i))\n          )))","problem":21,"user":"51aee76ce4b09397d5109796"},{"code":"#(if (= 0 %2) (first %1) (recur (rest %1)  (- %2 1)))","problem":21,"user":"50086dafe4b028e089d3518d"},{"problem":21,"code":"(fn [coll n]\n  (first(nthrest coll n)))","user":"585a7cb2e4b0f14aab7c874e"},{"problem":21,"code":"(fn mynth\n  [l n]\n  (cond\n   (>= 0 n) (first l)\n   :else (mynth (rest l) (- n 1))\n   )\n  )","user":"5cd5ac3ae4b0ccb061962937"},{"problem":21,"code":"(fn at [col n] (let [lst (apply list col)]\n  (if (= n 0) (first lst) (at (rest lst) (- n 1))    \n      )))","user":"5cc880b3e4b0ccb06196284b"},{"code":"(fn last [list n]\n  (if (= n 0)\n    (first list)\n    (last (rest list) (- n 1))))","problem":21,"user":"5228b015e4b0186687e23a8a"},{"problem":21,"code":"(fn p21 [l n]\n  (if (zero? n)\n    (first l)\n    (p21 (rest l) (dec n))\n    ))","user":"598ab445e4b02b9968b84ce0"},{"problem":21,"code":"(fn [adata pos] (loop [data (if (vector? adata) (reverse (into '() adata)) adata) counter pos] (if (zero? counter) (peek data) (recur (pop data) (dec counter)))))","user":"5414dccbe4b01498b1a719f1"},{"code":"(fn [x y] ((comp first drop) y x))","problem":21,"user":"4f9ff06ce4b0dcca54ed6d41"},{"problem":21,"code":"(fn foo [xs n] (cond (= n 0) (first xs) :else (foo (rest xs) (dec n))))","user":"53ae79f3e4b047364c044475"},{"problem":21,"code":"(fn rec [a b] \n  (if (= b 0)\n    (first a)\n    (rec (rest a) (dec b)))\n  )","user":"58db7ae7e4b0a4d5acaab67f"},{"problem":21,"code":"(fn [xs n]\n  (loop [i 0 ys xs]\n    (if (= i n)\n      (first ys)\n      (recur (inc i) (next ys)))))","user":"5426a59ee4b01498b1a71b1b"},{"code":"(fn [lst n]\n  (if (= n 0)\n      (first lst)\n      (recur (rest lst) (- n 1))))","problem":21,"user":"4f4e978ae4b03ad3f0c10ccb"},{"problem":21,"code":"(fn [x i] (loop [xx x ii i] (if (zero? ii) (first xx) (recur (rest xx) (dec ii)))))","user":"589f2cefe4b02bd94d917e75"},{"problem":21,"code":"(fn [x n] (last (take(inc n) x)))","user":"5faaab00e4b0fa27300f3dff"},{"code":"(fn ! [x n]\n  (if (= n 0)\n    (first x)\n    (! (rest x) (- n 1))))","problem":21,"user":"4fc9cba3e4b0ee37620e1849"},{"problem":21,"code":"(fn poop [s i]\n  (if (> i 0)\n    (poop (rest s) (dec i))\n    (first s)\n    )\n  )","user":"551a64cde4b091ff45eda996"},{"problem":21,"code":"(fn nth-new [list_nums n] (last (take (inc n) list_nums)))","user":"5e44023fe4b01d43a70e8e78"},{"problem":21,"code":"(fn [arr x]\n  (loop [n 0 prod arr]\n    (if (= n x)\n      (first prod)\n      (recur (inc n) (rest prod)))))","user":"5dcbd629e4b02b31cc3da3bd"},{"problem":21,"code":"(fn [coll n]\n  (loop [c coll i 0]\n    (let [head (first c) remaining (rest c)]\n\t (if (= i n)\n       head\n       (recur remaining (inc i))))))","user":"5883920ee4b0f1effa3b767e"},{"problem":21,"code":"#(loop [list_ %1 n %2]\n   (if (= 0 n)\n     (first list_)\n     (recur (rest list_) (dec n))\n     ))","user":"57a497e8e4b0a966079561e4"},{"problem":21,"code":"(fn x[a n]\n  (if (zero? n)\n    (first a)\n    (x (rest a) (dec n))))","user":"57bd960fe4b05aa3c4741c52"},{"code":"(fn [coll index]\n  (loop [in-coll coll\n         n index]\n    (if (zero? n)\n      (first in-coll)\n      (recur (rest in-coll) (dec n)))))","problem":21,"user":"511b9017e4b00c2a1fa7ff6b"},{"problem":21,"code":"(comp first (fn [lst n] (drop n lst)))","user":"551747e0e4b06a49daca83c1"},{"problem":21,"code":"(fn [ls x] (first (drop x ls)))","user":"56de0100e4b0ea9b8538f839"},{"code":"(fn [x pos] \n  (loop [s []\n         i -1\n         resto x]\n    (if (= i pos)\n      (last s)\n      (recur (conj s (first resto))\n             (inc i)\n             (rest resto)))\n    ))","problem":21,"user":"522048b3e4b0e6c71e0c0c16"},{"code":"(fn [liste nummer] (\n  first (rest \n  (take-nth nummer liste))))","problem":21,"user":"4e307511535deb9a81d77f15"},{"code":"(fn [l i] \n  (if (zero? i)\n    (first l)\n    (recur (rest l) (- i 1))))","problem":21,"user":"4f189b42535d64f60314645d"},{"problem":21,"code":"(fn [x n]\n      (loop [cnt n acc x]\n        (if (zero? cnt)\n          (first acc)\n          (recur (dec cnt) (rest acc)))))","user":"53c1b787e4b00fb29b221266"},{"problem":21,"code":"(fn my-nth [collection element]\n  (if (= element 0)\n    (first collection)\n    (my-nth (rest collection) (dec element))))","user":"568aa458e4b0dcc4269f4092"},{"problem":21,"code":"(fn[sq n]\n  (if (seq? sq)\n    (get (into [] sq) n)\n    (get sq n)))","user":"600d9808e4b074f607df669c"},{"problem":21,"code":"(fn [sq idx] (loop [s sq i 0] (let [h (first s) t (rest s)] (if (= idx i) h (recur t (inc i))))))","user":"4ee7c6dd535d93acb0a6686c"},{"code":"#(loop [l %1 n %2]\r\n     (if (= n 0)\r\n       (first l)\r\n       (recur (rest l) (dec n))))","problem":21,"user":"4e897fc5535de4250bdfe493"},{"code":"(fn [s n] \n  (last (take (+ 1 n) s))\n  )","problem":21,"user":"5174ade2e4b07031762f2edf"},{"code":"(fn\n  [col n]\n  ((fn ene [lst i] \n     (if (= n i) \n       (first lst) \n       (ene (rest lst) (inc i)))) col 0))","problem":21,"user":"50c7431ae4b00bb60fe0c531"},{"code":"#(loop [seq %1 idx %2] \n  (if (= 0 idx) \n    (first seq) (recur (rest seq) (- idx 1))))","problem":21,"user":"4eabb245535d7eef30807319"},{"problem":21,"code":"(fn get_nth \n  [data, index]\n  (let [data-vec (vec data)]\n   (get data-vec index)\n  )\n )","user":"5714c718e4b07c98581c3ac7"},{"code":"#(first(drop%2%1))","problem":21,"user":"4e39b020535deb9a81d77f44"},{"problem":21,"code":"(fn [col index]\n    (if (zero? index)\n      (first col)\n      (recur (rest col) (dec index))))","user":"53dd37aee4b0d874e779ae28"},{"problem":21,"code":"(fn [l n] \n  (if (= n 0)\n    (first l)\n    (recur (rest l) (dec n))))","user":"5475d755e4b0c51c1f4d72a0"},{"problem":21,"code":"(fn [s n]\n  (cond (< n 0) nil\n        (= n 0) (first s)\n        :else (recur (rest s) (dec n))))","user":"5eee7311e4b07c55ae4a0510"},{"code":"(fn [s n] \n  (first (drop n s)))","problem":21,"user":"4f91fd31e4b0dcca54ed6ca8"},{"code":"(fn [list index]\n  (get (vec list) index))","problem":21,"user":"5098f5d6e4b0cae2931060a4"},{"problem":21,"code":"#(loop [iteration %2 x %1]\n  (if (< iteration 1)\n    (first x)\n    (recur (dec iteration) (rest x))))","user":"54d4ec31e4b0a52adc2e2007"},{"problem":21,"code":"(fn  [seq n] (if (<= n 0) (first seq) (recur (rest seq) (dec n))))","user":"5406eaf3e4b0addc1aec66ad"},{"code":"(fn nth-element [seq n]\n  (first (drop n seq)))","problem":21,"user":"520446d5e4b0c283853240b8"},{"problem":21,"code":"(fn [coll n] (first (filter identity (map-indexed #(when (= n %1) %2) coll))))","user":"5468d932e4b00cfc9eacc13e"},{"problem":21,"code":"(fn getnth [coll n] (cond (= n 0) (first coll)\n                          :else (getnth (next coll) (- n 1))))","user":"598760aae4b021a7a535fea7"},{"code":"(fn nth-elem [x, n]\n  (loop [work x \n         z (first work)\n         y n       \n         ]\n    \n    (if (> y 0)\n      (recur  (drop 1 work) \n              (second work)\n              (- y 1)\n              )\n      ;else\n      z\n      )\n    )\n  )","problem":21,"user":"50fb084ee4b0d10d794c19dd"},{"code":"(fn nth-el [sqn idx]\r\n  (if (zero? idx)\r\n    (first sqn)\r\n    (recur (rest sqn) (dec idx))))","problem":21,"user":"4f20c040e4b0d66497709fcb"},{"problem":21,"code":"(fn nther \n    ([my-list n]\n        (nther my-list n 0)\n    )\n    ([my-list n i]\n        (if (= n i)\n            (first my-list)\n            (nther (rest my-list) n (inc i))\n        )\n    )\n)","user":"5531c9c0e4b076ab5578f82a"},{"problem":21,"code":"(fn [collection number]\n   (-> number\n       (drop collection)\n       (first)))","user":"5ffd255be4b074f607df65f6"},{"problem":21,"code":"(fn [coll idx] (first (second (split-at idx coll))))","user":"5da975b9e4b000c986472c32"},{"code":"(fn [coll n]\n  (if (<= n 0)\n    (first coll)\n    (recur (rest coll) (- n 1))\n    )\n  )","problem":21,"user":"4db03885838c48654951d9bd"},{"problem":21,"code":"#(loop [iter 0\n        poz %1]\n   (if (= iter %2)\n     (first poz)\n     (recur (+ 1 iter) (rest poz))\n     )\n   )","user":"5a89ef87e4b05369db4d24ca"},{"problem":21,"code":"(fn [s n]\n     (last (take (inc n) s)))","user":"594ea2a4e4b07ddc2dafaeb6"},{"problem":21,"code":"(fn [l n]\n  (loop [numbers l\n         index 0]\n    (if (= index n)\n      (first numbers)\n      (recur (rest numbers) (inc index)))))","user":"5f209ad3e4b0f565ad99827f"},{"problem":21,"code":"(fn [x n] (first (filter (fn [y] (= (.indexOf x y) n)) x)))","user":"54c120d7e4b0ed20f4ff6f1c"},{"problem":21,"code":"(fn [collection index] \n  (first \n   (nthnext collection index)))","user":"5690221ce4b0dcc4269f40e9"},{"problem":21,"code":"(fn xElement [coll x] ((vec coll) x))","user":"582d51b6e4b051871117bfb8"},{"code":"(fn [col n]\n  (if (= n 0)\n    (first col)\n  (recur (rest col) (dec n))))","problem":21,"user":"4f82f9f7e4b033992c121c10"},{"problem":21,"code":"(fn enth [l n] (if (= 0 n) (first l) (enth (rest l) (- n 1))))","user":"5536cbefe4b09218d5f44fc2"},{"problem":21,"code":"(fn [sw el] (.get sw el))","user":"570006f1e4b08d47c97781c5"},{"code":"(fn n-th [x n]\n  (if (= n 0)\n    (first x)\n    (n-th (rest x) (- n 1))))","problem":21,"user":"527268a5e4b03e8d9a4a7431"},{"code":"(fn ! [lst n](if(= n 0) (first lst) (! (rest lst) (- n 1))))","problem":21,"user":"52481875e4b05ef8e38e63c3"},{"problem":21,"code":"(fn mynth [sq n] \n    (if (zero? n) \n      (first sq) \n      (mynth (rest sq) (dec n))))","user":"574e7be7e4b02ea114799242"},{"problem":21,"code":"(fn [x n] \n  (if (= 0 n)\n    (first x)\n    (recur (rest x) (- n 1))\n  )\n)","user":"577aacf2e4b0d3393e5deb03"},{"code":"(fn [x,lim] ((apply vector x) lim))","problem":21,"user":"521b3f2fe4b0c4ef0be83034"},{"code":"(fn [coll idx] (first (nthnext coll idx )))","problem":21,"user":"4eb8ec4a535dfed6da9c6d4b"},{"code":"(fn getLast [coll x] (first (drop x coll)))","problem":21,"user":"50afdfc0e4b0c3f5ed5c29a6"},{"code":"(fn [col0 pos0] \n  (loop [col col0 pos pos0] \n    (if (= pos 0 ) \n        (first col) \n        (recur (rest col) (- pos 1) )\n     )\n))","problem":21,"user":"4ec5bec6535d6d7199dd36b3"},{"code":"(fn [x y](last (take(+ y 1) x)))\n\n;#(last (take(+ %2 1) %1)\n;)","problem":21,"user":"4e94b4f7535dbda64a6f6b27"},{"problem":21,"code":"(fn [coll n]\n  (->\n   (range 0 (count coll))\n   (zipmap coll)\n   (get n)))","user":"5aabd34fe4b073f177442565"},{"problem":21,"code":"(fn [lst n]  (last (take (+ 1 n) lst)))","user":"55aa67eae4b0988bba2ad94c"},{"problem":21,"code":"#(last  (take (+ %2 1) %1))","user":"568ab45ae4b0dcc4269f4095"},{"code":"(fn [lst n]\n  (let [map1 (into {} (map-indexed vector lst))]\n    (map1 n)))","problem":21,"user":"5240512ee4b0ad64fa010319"},{"problem":21,"code":"(fn foo [s n]\n  (if (= 0 n)\n    (first s)\n    (foo (rest s) (dec n))))","user":"54d753ebe4b0a52adc2e2029"},{"code":"(fn [l n]\r\n  (if (= n 0) (first l)\r\n    (recur (rest l) (- n 1))))","problem":21,"user":"4defdf31535d08e6dec9fe14"},{"problem":21,"code":"#(->> %1 ( drop %2) first)","user":"55953978e4b0c79f6e1db964"},{"code":"(fn [s n] \n  (if (= n 0)\n    (first s)\n    (recur (rest s) (- n 1))\n  )\n)","problem":21,"user":"50678be5e4b03d366d7cb2c0"},{"code":"(fn mynth [x n](if(= n 0)\n                    (first x)\n                    (mynth (rest x)(dec n))))","problem":21,"user":"533078b5e4b019098a6f8b5c"},{"code":"#((into {} (map-indexed vector %1)) %2)","problem":21,"user":"5081566ce4b0946d0443855b"},{"problem":21,"code":"(fn mynth [x cnt] (if (= cnt 0) (first x) (mynth (rest x) (- cnt 1))))","user":"562d869be4b0a45d2ff8301f"},{"problem":21,"code":"(fn xth [lst x]\n  (if (= 0 x)\n    (first lst)\n    (xth (rest lst) (dec x))))","user":"52c048a5e4b07a9af5792349"},{"problem":21,"code":"#(loop [data %1 n %2]\n   (if (zero? n)\n     (first data)\n     (recur (rest data) (dec n))))","user":"55362a5fe4b09218d5f44fb8"},{"problem":21,"code":"(fn nthr [lst n]\n(if (= n 0) \n    (first lst)\n    (nthr (rest lst) (dec n))\n    ))","user":"57614c20e4b0994c1922fb86"},{"problem":21,"code":"(fn getn [ls n]\n  (if (= n 0)\n    (first ls)\n    (getn (rest ls) (- n 1))\n  )\n)","user":"564716e6e4b0284900eef616"},{"problem":21,"code":"(fn my-nth [coll x]\n  (cond\n    (= x 0) (first coll)\n    :else (my-nth (rest coll) (- x 1)))\n)","user":"59ba2ea0e4b0a024fb6ae3e1"},{"problem":21,"code":"(fn NTH [x y]\n  (if (= y 0)\n    (first x)\n    (NTH (rest x) (- y 1))\n    )\n  )","user":"546146d6e4b01be26fd7469c"},{"problem":21,"code":"(fn nn [s n] (if (= n 0) (first s) (nn (rest s) (dec n))))","user":"5aeec90fe4b0cc2b61a3bc31"},{"code":"(fn [l n] (second (take-nth n l)))","problem":21,"user":"53512b55e4b084c2834f4ae0"},{"code":"(fn get-nth[s index]\n   (last (take (+ index 1) s))\n)","problem":21,"user":"4e6ac49d535d8ccf87e9ff01"},{"code":"(fn [xs n]\n  (loop [ys xs m n]\n    (if (zero? m)\n      (first ys)\n      (recur (rest ys) (dec m)))))","problem":21,"user":"5097b556e4b00ad8bab4e970"},{"problem":21,"code":"(fn [coll count]\n  (first\n   (drop count coll)))","user":"56826ebce4b0945ebc182a93"},{"problem":21,"code":"(fn [col,n] (first(drop n col)))","user":"50406519e4b0ff5d2cc40db2"},{"code":"(fn nther [coll index](first (filter (fn [x] (= (.indexOf coll x) index ))coll )))","problem":21,"user":"530e0e4ee4b08068f379ecb4"},{"code":"(fn [x y]\n  (loop [i 0 liste x]\n    (if (= i y)\n      (first liste)\n      (recur (inc i) (rest liste)))))","problem":21,"user":"50d8de3fe4b01f0871336e72"},{"code":"; Worst case runtime is in the ballpark of the get/vec solution (10% worse), but best case (n is 1) is extremely fast.\n(fn xnth\n  ([xs n] (xnth xs n 0))\n  ([xs n i]\n    (cond\n      (= i n)\n      (first xs)\n      :default\n      (recur (rest xs) n (inc i)))))","problem":21,"user":"52244a77e4b01819a2de42d1"},{"problem":21,"code":"(fn[fctn nval] (last(take(inc nval)fctn)) )","user":"5a534241e4b05d388ecb6c0a"},{"problem":21,"code":"#(loop [x %1 y %2]\n   (if (= 0 y)\n     (first x)\n     (recur (rest x) (dec y))))","user":"5c478ba2e4b0e06e1360a3b2"},{"code":"(fn [col want] \n  (first (filter \n    #(not (= % nil))\n    (map-indexed\n      #(if (= %1 want) %2)\n      col))))","problem":21,"user":"4f7cbf4ae4b06e829148e1b7"},{"code":"(fn [list num]\n  (first (nthrest list num)))","problem":21,"user":"527ced14e4b0757a1b171376"},{"code":"(fn cut[x n]\n  (if (= n 0)\n   (first x)\n    (cut (rest x) (dec n))\n   )\n  )","problem":21,"user":"52a1edd6e4b04e0c58e87be4"},{"code":"(fn get-nth [s x]\n  (if (= 0 x)\n    (first s)\n    (get-nth (next s) (dec x))))","problem":21,"user":"4f39f902e4b0e243712b1efe"},{"problem":21,"code":"(fn [coll n] \n  (\n   \t\t(apply comp \n        \t(cons first \n                 (repeat n rest)\n           \t)\n    \t)\n   \tcoll\n   )\n)","user":"591da291e4b09b4ee5954c1e"},{"problem":21,"code":"(fn foo[x y] (if (= y 0) (first x) (foo (rest x) (dec y))))","user":"58a38d37e4b02bd94d917ef9"},{"problem":21,"code":"(fn myNth [coll n] \n  (if (= 0 n)\n    (first coll)\n    (myNth (rest coll) (dec n))\n  )\n)","user":"58a3c6aae4b02bd94d917f00"},{"problem":21,"code":"(fn [x y]\n  (loop [a x b y]\n    (if (< b 1) (first a) (recur (rest a) (dec b)))))","user":"52626564e4b03e8d9a4a7086"},{"problem":21,"code":"(fn [l n]\n  (if ( = n 0)\n    (first l)\n    (recur (rest l) (- n 1))))","user":"51c30558e4b0d204dbe2ca2f"},{"problem":21,"code":"(fn n-th [sq, n]\n  (if (= n 0)\n     (first sq)\n     (n-th (rest sq) (- n 1))))","user":"5d6523ace4b0db5d338d15cd"},{"problem":21,"code":"(fn pos\n  \t[your-list index]\n  \t(if (= index\n           0)\n      \t(first your-list)\n      \t(pos (rest your-list)\n             (- index 1))))","user":"53cfd3c5e4b00fb29b221302"},{"code":"(fn [seq num]\r\n  (if (zero? num)\r\n    (first seq)\r\n    (recur (rest seq) (dec num))))","problem":21,"user":"4f8aa1c1e4b02e764a0a516e"},{"code":"#(first (reverse (take (+ %2 1) %)))","problem":21,"user":"514a762ae4b00c7db5067428"},{"code":"(fn[x n] ((apply comp first (repeat n rest)) x) )","problem":21,"user":"52ca720fe4b071a8d36bd3e2"},{"code":"(fn [s n]\n  (loop [s s\n         i 0]\n    (if (< i n)\n    (recur (rest s)(inc i))\n    (first s))))","problem":21,"user":"515a2a39e4b0394f658fe23e"},{"problem":21,"code":"(fn mifct [l,n]\n  (if (= n 0) \n    (first l)\n    (recur (rest l) (- n 1))\n    )\n  )","user":"5ed30cb6e4b016b56eae05c2"},{"problem":21,"code":"(fn [sequence index] (if (= index 0) (first sequence) (recur (rest sequence) (- index 1))))","user":"54a27b05e4b09f271ff37c5c"},{"problem":21,"code":"(fn[c, n] (\n         last (take (inc n) c)\n         ))","user":"54cf977fe4b018d918be98d1"},{"problem":21,"code":"(fn nthrecur [l n] \n  (if (= n 0) \n    (first l) \n    (nthrecur (rest l) (- n 1))\n  )\n )","user":"600777a3e4b074f607df6667"},{"code":"(fn f [s n] \n    (if (zero? n)\n      (first s)\n    (f (rest s) (dec n))))","problem":21,"user":"4e7a5395535db169f9c796ab"},{"problem":21,"code":"(fn[x n] (last (take (inc n) x)))","user":"555c5e04e4b0b056612e224b"},{"code":"x","problem":21,"user":"52e635b3e4b09f7907dd146f"},{"problem":21,"code":"(fn getn [l n] (if (= n 0) (first l) (getn (rest l) (dec n))))","user":"553c05b7e4b09218d5f45011"},{"problem":21,"code":"(fn [dat ind]\n  (if (= ind 0)\n    (first dat)\n    (recur (rest dat) (- ind 1))))","user":"58730484e4b01531a375ea26"},{"code":"(fn getNth [s x] (if (= 0 x) (first s) (recur (rest s) (dec x))))","problem":21,"user":"5053d193e4b0b1b9d1860ea5"},{"problem":21,"code":"(fn nth-ele [li idx]\n  (cond (empty? li) nil\n        (zero? idx) (first li)\n        :else (nth-ele (rest li) (dec idx))))","user":"5786c182e4b0ebec4cfb74fd"},{"problem":21,"code":"(fn [l n] (if (zero? n) (first l) (recur (rest l) (- n 1))))","user":"554ae65de4b0a04f7929957b"},{"problem":21,"code":"(fn [coll n]\n  (if (= n 0)\n    (first coll)\n    (recur (rest coll) (dec n))\n    )\n  )","user":"5899c54de4b00487982d52fa"},{"problem":21,"code":"(fn [coll n] \n  (if (zero? n)\n    (first coll)\n    (recur (rest coll) (dec n))))","user":"5f21d172e4b0f565ad998286"},{"problem":21,"code":"(fn my-ith[xs ith] \n  (if (= ith 0) (first xs) (my-ith (rest xs) (dec ith))))","user":"57be03cce4b05aa3c4741c60"},{"problem":21,"code":"(fn nt [lt x]\n  (if (= x 0)\n    (do (first lt))\n    (do (nt (rest lt) (- x 1)))))","user":"571a31e3e4b07c98581c3b47"},{"code":"(fn [coll n]\n  (loop [coll coll\n         n n]\n    (if (> n 0)\n      (recur (rest coll) (dec n))\n      (first coll))))","problem":21,"user":"4f2b6f89e4b0d6649770a049"},{"problem":21,"code":"(fn [x, y] (last (first (split-at (+ y 1) x))))","user":"542aed70e4b0dad94371f284"},{"problem":21,"code":"(fn [L N]\n  (loop [x L n N]\n    (if (= n 0)\n      (first x)\n      (recur (rest x) (dec n)))))","user":"53d60f57e4b0e771c3025451"},{"problem":21,"code":"(fn a [s n]\n  (if (= 0 n)\n    (first s)\n    (a (rest s) (- n 1))))","user":"5f9491cbe4b0715f5002d7bf"},{"problem":21,"code":"(fn [seq pos] (last (take (inc pos) seq)))","user":"5ba27267e4b0a20761a233c2"},{"problem":21,"code":"(fn [ls place] (first (drop place ls)))","user":"59c20641e4b0a024fb6ae49a"},{"problem":21,"code":"(fn [seq idx] (last (take (inc idx) seq)))","user":"595b00f4e4b066ee0a44afd2"},{"problem":21,"code":"(fn boo\n  [x x1]\n  (loop [i x1 tmp x]\n    (if (zero? i)\n      (first tmp)\n      (recur (dec i) (rest tmp)))))","user":"601bb40de4b0bf4ca6b1092f"},{"problem":21,"code":"(fn [xs k]\n  (if (= k 0)\n    (first xs)\n    (recur (rest xs) (- k 1))))","user":"55eb1410e4b0121d4835fdb8"},{"code":"(fn [input n]\n  (if (= n 0)\n    (first input)\n    (recur (rest input) (- n 1))))","problem":21,"user":"528bba38e4b0239c8a67aea9"},{"problem":21,"code":"(fn [coll n]\n  (if (zero? n) (first coll)\n    (recur (rest coll) (dec n))\n    )\n  )","user":"57ca95f2e4b05aa3c4741d3b"},{"code":"(fn[x y](last(take (+ y 1) x)))","problem":21,"user":"4eeff8ba535d305ff5cb7f23"},{"problem":21,"code":"(fn [coll n] (last(take (inc n) coll)))","user":"5fc61b45e4b06010e5ea651a"},{"problem":21,"code":"#(->> %1 (take (+ 1 %2)) (last))","user":"547c84b5e4b0c51c1f4d72e8"},{"code":"(fn f [coll n]\n          (if (zero? n)\n            (first coll)\n            (recur (rest coll) (dec n))))","problem":21,"user":"50dca54ce4b02e6ac9592c90"},{"problem":21,"code":"(fn [xs n]\n  (loop [xs xs n n]\n    (cond\n       (= 0 n) (first xs)\n       :else (recur (rest xs) (- n 1)))))","user":"55955c0be4b0c79f6e1db967"},{"code":"(fn [seq x]\n    ((apply hash-map (interleave (range (count seq)) seq)) x))","problem":21,"user":"4fe89297e4b07c9f6fd12c4c"},{"problem":21,"code":"(fn my-nth [coll i]\n  (if (= i 0)\n    (first coll)\n    (recur (rest coll) (dec i))))","user":"53e76363e4b036ad0777e47b"},{"problem":21,"code":"(fn ok [a b]\n  (first (drop b a)))","user":"5ca26d3be4b048ec896c5b98"},{"problem":21,"code":"#((fn foo [i t x] (if (= i t) (first x) (foo (inc i) t (rest x)))) 0 %2 %1)","user":"57fd414de4b0d3187e9009b1"},{"code":"(fn [l index]\n  (loop [my-l l n index current 0]\n    (if (= n current)\n      (first my-l)\n      (recur (rest my-l) n (inc current)))))","problem":21,"user":"52277ab9e4b0186687e23a4f"},{"problem":21,"code":"(fn find-it [collection x] (first (keep-indexed (fn [index item] (if (= index x) item nil)) collection)))","user":"5f274aeee4b0857314092c92"},{"problem":21,"code":"(fn nth2 [sequence, n] \n  (if \n    (or (= n 0) (nil? n)) \n                          (first sequence)\n                          (nth2 (rest sequence) (- n 1)\n                                )\n    ))","user":"586f3f7ee4b01531a375e9c1"},{"code":"(fn neth [xs n] (if (< n 1) (first xs) (neth (rest xs) (- n 1))))","problem":21,"user":"515fb48fe4b0e2be8aa20bd5"},{"problem":21,"code":"(fn [x y] \n  (if (= y 0)\n      (first x)\n      (recur (rest x) (dec y))))","user":"5e850761e4b09a7a73c8bbcf"},{"problem":21,"code":"(fn [s n] \n  (->>\n  (map vector (range (count s)) s)\n  (drop-while #(< (first %) n))\n  (first)\n  (second)))","user":"566b57e9e4b0a866af6896ad"},{"code":"(fn [list index] (get (vec list) index))","problem":21,"user":"4e75334b535d7a570dd295be"},{"problem":21,"code":"(fn mynth\n  [s n]\n  (if (= n 0)\n    (first s)\n    (mynth (rest s) (- n 1))))","user":"60b7e2c5e4b0e0fa5f1b4252"},{"code":"(fn [elems n]\n  (loop [i 0\n         curr (first elems)\n         remain (rest elems)]\n    (if (= i n)\n      curr\n      (recur (inc i) (first remain) (rest remain)))))","problem":21,"user":"536f871de4b0fc7073fd6e7f"},{"code":"#(peek(subvec(vec %1) 0 (+ %2 1)))","problem":21,"user":"504e4035e4b0f6ff3350c490"},{"problem":21,"code":"(fn sdsu-nth\n [input-list n]\n\n          (last (take (+ n 1) input-list)))","user":"582625d3e4b051871117bef2"},{"code":"(fn [xs n] (first (reduce #(%2 %1) xs (repeat n rest))))","problem":21,"user":"4e96557d535dbda64a6f6b43"},{"code":"(fn my-nth [coll n]\n  (if (= n 0)\n    (first coll)\n    (my-nth (rest coll) (- n 1))))","problem":21,"user":"4f03d4dc535dcb61093f6b6e"},{"problem":21,"code":"(fn [xs i] (first (reverse (take (+ 1 i) xs))))","user":"5a8e9fb5e4b05369db4d2529"},{"problem":21,"code":"(fn[l n] (last (take (+ n 1) l)))","user":"5c4c64cee4b0f9f7a8770e75"},{"code":"(fn [x n] \n  ((fn [y m] \n     (if (= n m)\n       (first y)\n       (recur (rest y) (+ 1 m))))\n   x 0))","problem":21,"user":"4f93afd0e4b0dcca54ed6cbd"},{"problem":21,"code":"(fn [x cnt] (loop [x x\n               \t   cnt cnt]\n          (if (= cnt 0) (first x) (recur (rest x) (dec cnt)))))","user":"558075c6e4b05c286339e0ec"},{"problem":21,"code":"#(let[indexval (atom 0)\n       newseq (atom %1)]\n(while (< @indexval %2)\n  (swap! newseq rest)\n  (swap! indexval inc)\n  )\n(first @newseq)\n)","user":"5d3e8c3de4b01671435dbd73"},{"code":"(fn f [x i] (if (= i 0) (first x) (f (rest x) (- i 1))))","problem":21,"user":"5030ece2e4b05b7df5a0b84a"},{"problem":21,"code":"(fn [coll idx]\n  (loop [current-idx 0\n         collection coll]\n    (if (= current-idx idx)\n      (first collection)\n      (recur (inc current-idx)\n             (rest collection)))))","user":"60a7104be4b00e9e6653c465"},{"problem":21,"code":"(fn my-nth [xs n] \n  (loop [n n xs xs]\n    (if (zero? n)\n      (first xs)\n      (recur (dec n) (rest xs)))))","user":"5f82cfcce4b0c071e6c840fb"},{"code":"#((apply hash-map\n  (interleave\n    (range (count %1)) %1)) %2)","problem":21,"user":"50223ee2e4b0846bc458ae48"},{"problem":21,"code":"(fn n [c x] \n   (if (= x 0)\n     (first c)\n     (n (rest c) (dec x))))","user":"5bc0eca4e4b07a9b28b1000b"},{"code":"(fn mynth[coll n](first (keep-indexed (fn [i v] (if (= n i) v)) coll)))","problem":21,"user":"4e6d92da535d5021c1a895ee"},{"code":"(fn myn [s c] (if (> c 0) (myn (rest s) (dec c)) (first s)))","problem":21,"user":"4e8a5d1c535d65386fec210a"},{"problem":21,"code":"#(loop [c    %2\n        coll %1]\n   (if (= c 0)\n     (first coll)\n     (recur (dec c) (rest coll))))","user":"595c02a9e4b066ee0a44afeb"},{"problem":21,"code":"; (fn [seq pos] (let [[_ second-group] (split-at pos seq)] (first second-group)))\n(fn [seq pos] (first (drop pos seq)))","user":"58791973e4b01531a375eac5"},{"problem":21,"code":"(fn ne\n  [col n]\n  (if (= n 0) (first col)\n              (ne  (rest col) (dec n))))","user":"5c36d110e4b0d62ef62d9f6a"},{"problem":21,"code":"(fn [seq x] (get (into [] seq) x))","user":"560f9b99e4b05f002753df5e"},{"code":"(fn [s n] (last (drop-last (- (count s) n 1) s)))","problem":21,"user":"5235976fe4b0a643f2dcb74f"},{"problem":21,"code":"(fn [l, i]\n  (if (= i 0)\n  \t(first l)\n    (recur (rest l) (dec i))\n))","user":"57b55290e4b0fbc9809a27a9"},{"problem":21,"code":"(fn [col x]\n  (last\n  (take (+ x 1) col)))","user":"5999648ce4b07157cc8daaf3"},{"code":"(fn [s i] (first(drop i s)))","problem":21,"user":"50e448bae4b0463d3207248d"},{"problem":21,"code":"(fn [s index]\n  (let [myseq s]\n    (first (drop index myseq))))","user":"5ad76df9e4b0ea6055cfac18"},{"code":"(fn le [x counter] (if (= counter 0) (first x) (le (rest x) (- counter 1))))","problem":21,"user":"4ea5adeb535d7eef308072d6"},{"code":"(fn f [n c]\n  (if (= c 0)\n    (first n)\n    (f (rest n) (- c 1))))","problem":21,"user":"50d08810e4b00b15ecee975d"},{"problem":21,"code":"(fn [my-list n]\n  (loop [\n         mmy-list my-list\n         nn n\n         ]\n    (if (zero? nn)\n      (first mmy-list)\n      (recur  (rest mmy-list) (dec nn)))))","user":"5d520cabe4b0776584bd6f66"},{"problem":21,"code":"(fn kth [xs k] (\n    if (= k 0)\n      (first xs)\n      (kth (rest xs) (dec k))\n  )\n)","user":"5cc9031ee4b0ccb061962859"},{"problem":21,"code":"(fn [dataSet num] (last (take (+ 1 num) dataSet)))","user":"606c87aae4b069485764de0d"},{"problem":21,"code":"(fn find-el [seq num]\n  (loop [seq seq num num]\n    (if (= 0 num)\n      (first seq)\n      (recur (rest seq) (- num 1))\n    )\n  )\n)","user":"54ab04f1e4b09f271ff37cc0"},{"problem":21,"code":"#(loop [x %1 y %2] (if (= y 0) (first x) (recur (rest x) (- y 1))))","user":"5596af34e4b04c1e5c31d758"},{"problem":21,"code":"(fn [items target-index]\n  (loop [item-index 0 items-seq items]\n    (if (= item-index target-index)\n      (first items-seq)\n      (recur\n       (inc item-index)\n       (rest items-seq)))))","user":"5c839a4de4b0c8042a70ce53"},{"code":"(fn [x c] \n  (if (= c 0) (first x) (recur (rest x) (dec c))))","problem":21,"user":"50956c2be4b087f34d351ab2"},{"problem":21,"code":"(fn my-nth\n  [coll n]\n  (if (< (count coll) (inc n))\n    nil\n    (loop [icoll coll\n           in     n]\n      (if (= in 0)\n        (first icoll)\n        (recur (next icoll) (dec in))))))","user":"5a798ac5e4b03baeef9276c0"},{"code":"(fn a [s i] (if (zero? i) (first s) (a (rest s) (dec i))))","problem":21,"user":"4f569218e4b0a7574ea71826"},{"code":"(fn [col n] (last (take (inc n) col)))","problem":21,"user":"500aa15ee4b03d00572d2d76"},{"code":"(fn pos-of [coll index] (first (drop index coll)))","problem":21,"user":"4ffdaa85e4b0678c553fc3e6"},{"problem":21,"code":"(fn blah [x y]\n  (cond\n   (= y 0) (first x)\n   :else (blah (rest x) (- y 1))))","user":"569db01de4b0542e1f8d147f"},{"problem":21,"code":"(fn [v n]\n (loop [ve v \n        no n \n        i 0]\n   (if (= i no)\n     (first ve)\n     (recur (rest ve)\n            no\n            (inc i)))))","user":"587f8393e4b0f1effa3b75f2"},{"code":"(fn [col x]\n  (first (drop x col)))","problem":21,"user":"50031772e4b0678c553fc434"},{"problem":21,"code":"(fn \n  [c i]\n  ((vec c) i))","user":"56a36f76e4b0542e1f8d14ca"},{"code":"#(loop [n %2 coll %1]\n   (if (> n 0) (recur (dec n) (next coll)) \n       (first coll)))","problem":21,"user":"507c7c8be4b0b083f3ff82ef"},{"code":"(fn [coll n] (if  (= n 0) (first coll) (recur (rest coll) (dec n))))","problem":21,"user":"532347dde4b09d4e7a9b54cc"},{"problem":21,"code":"(fn [lista pos]\n  (if (= pos 0)\n    (first lista)\n    (recur (rest lista) (dec pos))))","user":"5256dcc0e4b0541d1855ba3c"},{"problem":21,"code":"(fn [coll idx] (loop [i idx coll coll]\n                 (if (zero? i)\n                   (first coll)\n                   (recur (dec i) (rest coll)))))","user":"59932dc1e4b0b211ea3aaaad"},{"problem":21,"code":"(fn [s n]\n   (if (> n 0)\n     (recur (rest s) (dec n))\n     (first s)))","user":"5e2bea53e4b05b4b015161d2"},{"problem":21,"code":"(fn my-nth [list n]\n  (if (zero? n)\n    (first list)\n    (recur (rest list) (dec n))))","user":"55580ef1e4b0deb715856e28"},{"problem":21,"code":"(fn get-n [sequence n]\n    (loop [sequence sequence, n n]\n        (if-not (zero? n)\n          \t (recur (rest sequence) (dec n))\n             (first sequence))))","user":"587bead1e4b01531a375eb0d"},{"code":"(fn [xs n]\n  (loop [xs xs n n]\n    (if (zero? n)\n        (first xs)\n        (recur (rest xs) (dec n)))))","problem":21,"user":"4e5d0e96535d8a8b8723a2c8"},{"code":"(fn[ n seq ](first (drop seq n)))","problem":21,"user":"52867936e4b0239c8a67ae16"},{"problem":21,"code":"(fn [list pos]\n   (loop [list list\n          pos pos]\n     (if (= 0 pos)\n       (first list)\n       (recur (drop 1 list) (dec pos))\n     )\n   )\n)","user":"4df73d64535d04ed9115e775"},{"problem":21,"code":"(fn [arr index]\n  (loop [x 0\n         arr arr]\n    (if (= index x)\n      (first arr)\n      (recur (inc x) (rest arr)))))","user":"5b162d8ce4b0cc2b61a3be78"},{"problem":21,"code":"(fn getEl [ls c] (if (= c 0) (first ls) (getEl (rest ls) (- c 1))))","user":"5c35acffe4b0d62ef62d9f62"},{"code":"#(loop [xs %\n              n %2]\n             (if (zero? n)\n                 (first xs)\n               (recur (rest xs) (dec n))))","problem":21,"user":"51a8f0c6e4b08d8ec191b821"},{"problem":21,"code":"(fn [list indee] (loop [x list y 0 idx indee] (if (= y indee) (first x)(when (< y indee) (recur (rest x) (inc y) idx)))))","user":"58e6a2c5e4b056aecfd47cba"},{"problem":21,"code":"(fn[s n] (first (nthnext s n)))","user":"5587cd86e4b059ccff29b1e6"},{"problem":21,"code":"#(.get %(- (count %1) (- (count %1) %2)))","user":"5a9137d6e4b002d099cae6ee"},{"problem":21,"code":"(fn [coll index]\n  (loop [coll1 coll\n         index1 index]\n     (if (>= 0 index1)\n       (first coll1)\n       (recur (rest coll1) (- index1 1)))))","user":"5b7aaa3ce4b047b03b203716"},{"code":"(fn [listvar index] (first (nthnext listvar index)))","problem":21,"user":"503c2cb7e4b06c4e0e1fa248"},{"code":"#(loop [i 0 ms %1]\n               (if (= i %2)\n                 (first ms)\n                 (recur (inc i) (rest ms))\n                 )\n               )","problem":21,"user":"4ec4d723535dcc7ae8597d65"},{"code":"(fn [coll n] (first (reduce #(%2 %) coll (repeat n rest))))","problem":21,"user":"51a768e0e4b0da5f497bde84"},{"code":"(fn mynth [l n] (if (= n 0) (first l)\n                  (mynth (rest l) (- n 1))))","problem":21,"user":"531bad96e4b08068f379ed93"},{"problem":21,"code":"(fn [s n] \n  (if (= n 0) \n    (first s) \n    (recur (rest s) (- n 1))))","user":"559454f2e4b0c79f6e1db952"},{"code":"(fn [seq n]\n  (first ( drop n seq ) ) )","problem":21,"user":"4fe899a6e4b07c9f6fd12c54"},{"problem":21,"code":"(fn myNth [x n]\n  (cond\n   (> n 0) (myNth (rest x) (- n 1))\n   :else (first x)\n  )\n)","user":"57ea2c91e4b0bfb2137f5b42"},{"problem":21,"code":";; Not elegant at all, but didn't know about drop\n(fn nthelem [l n]\n  (if (= l []) nil\n    (if (= n 0) (first l)\n      (recur (rest l) (- n 1)))))","user":"54227fc6e4b01498b1a71ac0"},{"problem":21,"code":"(fn [seq n] (loop [suffix seq counter 0] (if (= counter n) (first suffix) (recur (rest suffix) (inc counter)))))","user":"5e1cc888e4b0dc959400853d"},{"problem":21,"code":"(fn [a b] ((into [] a) b))","user":"5806bce6e4b0a837a8b30ce5"},{"problem":21,"code":"(fn my-nth [coll n] (if (= n 0) (first coll) (my-nth (rest coll) (- n 1))))","user":"57c0917be4b05aa3c4741c95"},{"problem":21,"code":"(fn [l n] \n  (loop [l l\n         n n]\n      (if (= n 0)\n        (first l)\n        (recur (rest l) (- n 1)))))","user":"589ac991e4b00487982d5319"},{"problem":21,"code":"(fn [s n] \n  (loop [seq s, c 0] \n    (if (= c n) (first seq) (recur (rest seq) (inc c)))))","user":"5e4fae60e4b027a2e10ac0b9"},{"problem":21,"code":"(fn [sq idx]\n    (if (= idx 0) (first sq) (recur (rest sq) (- idx 1))))","user":"54908806e4b0b312c081ff30"},{"problem":21,"code":"(fn [arr_var i_var ]  (first (drop i_var arr_var )) )","user":"5a075e73e4b01bb0ae8afdd9"},{"problem":21,"code":"(fn [col n]\n  (if (= n 0)\n    (first col)\n    (recur (rest col) (dec n))\n  )\n)","user":"57e396cde4b0bfb2137f5a9e"},{"code":"(fn[ col n](first (drop n col)))","problem":21,"user":"4f030775535dcb61093f6a43"},{"problem":21,"code":"(fn [lst n]\n  (loop [my-nth 0\n         res lst]\n    (if (= my-nth n)\n      \t(first res)\n      \t(recur (inc my-nth)\n               (rest res)))))","user":"57f8151ce4b0d3187e900912"},{"code":"(fn [coll n] (last (take (+ n 1) coll)))","problem":21,"user":"4e50ee51535dc968683fc4f0"},{"problem":21,"code":"(fn [nums x] (last (take (inc x) nums)))","user":"5f9816c9e4b0715f5002d7fa"},{"problem":21,"code":"(fn [input counter]\n  (loop [a input n (- (count input) counter)]\n    (if (> (count a) n)\n      (recur (rest a) n)\n      (first a))))","user":"5dc9c070e4b02f9375f4e1ee"},{"code":"(fn [lst n]\n  (if (= n 0)\n    (first lst)\n    (recur (next lst) (- n 1))))","problem":21,"user":"4e6ac7a8535d8ccf87e9ff03"},{"code":"(fn get-nth[coll n] (if (= n 0) (first coll) (get-nth (rest coll) (- n 1))))","problem":21,"user":"512ec712e4b029b11c040781"},{"problem":21,"code":"(fn motherfucker [x y]\n  (last \n  \t(take (inc y) (seq x))\n  )\n)","user":"57f02543e4b0bfb2137f5beb"},{"problem":21,"code":"(fn [lst j]\n  (loop [i 0]\n    (if (= i j) (.get lst i) (recur (+ i 1)))))","user":"53dfe311e4b0d874e779ae47"},{"code":"(fn mynth [l, n] \n  (if (= n 0)\n    (first l)\n    (mynth (rest l) (- n 1))))","problem":21,"user":"50c84ba2e4b00bb60fe0c53e"},{"code":"(fn foo [x n] (if (= n 0) (first x) (foo (rest x) (- n 1))))","problem":21,"user":"4e4ca885535dc968683fc4df"},{"problem":21,"code":"(fn mynth [x, y] (if (= y 0) (first x) (mynth (rest x) (- y 1))))","user":"56f258d3e4b04a395b9a04a1"},{"code":"(fn [L, n] (first (drop n L)))","problem":21,"user":"5085bfdae4b004985b776e53"},{"problem":21,"code":"(fn [coll n]\n  (if (zero? n)\n         (first coll)\n         (recur (rest coll) (- n 1))))","user":"59902fede4b0fcebec4de86d"},{"problem":21,"code":"(fn getnth [mylist n]\n  (if (= 0 n)\n  (first mylist)\n  (getnth (rest mylist) (dec n))\n))","user":"59690e79e4b069c0a1a197e0"},{"problem":21,"code":"(fn [arr idx]\n  (let [v (apply vector arr)] \n    (get v idx)))","user":"5f3abd21e4b004f08c61c52c"},{"code":"(fn nick-nth [seq index] \n  ((zipmap (range) seq) index))","problem":21,"user":"5095a8c7e4b0ba05ca7aebfb"},{"code":"#(first(reverse (take (+ %2 1) %1)))","problem":21,"user":"4f9b3532e4b0dcca54ed6d13"},{"code":"(fn [c n]\n  (loop [my-count 0 my-coll c]\n    (if (= my-count n)\n      (first my-coll)\n      (recur (+ my-count 1) (rest my-coll)))))","problem":21,"user":"51991a89e4b068aa333628fd"},{"problem":21,"code":"#(loop [sa %1 step 0 lim %2] (\n                              \n                             if(<= lim step)\n                              (first sa)\n                              (recur (rest sa) (inc step) lim)\n                              ))","user":"54f6f00fe4b01ecee9d88814"},{"problem":21,"code":"(fn [arr idx] (get (vec arr) idx))","user":"5ca03402e4b048ec896c5b68"},{"problem":21,"code":"#(loop [col %1 n_th %2]\n   (if (> n_th 0)\n     (recur (rest col) (dec n_th))\n     (first col)))","user":"54b67463e4b05787c3b163bc"},{"code":"(\n  fn my_nth [seq idx] (\n    if (= idx 0) (\n      first seq\n    ) (\n      my_nth (rest seq) (- idx 1)\n    )\n  )\n)","problem":21,"user":"4e932f38535dbda64a6f6b0c"},{"problem":21,"code":"(fn [x n]\n  (letfn [(th [y m]\n              (if (or (<= m 0) (nil? y))\n                (first y)\n                (recur (rest y) (- m 1))))]\n    (th x n)))","user":"5688a01be4b0dcc4269f406d"},{"code":"(fn [coll n] \n  (last (take (+ 1 n) coll))\n)","problem":21,"user":"510c01bae4b078ea7192110a"},{"problem":21,"code":"(fn [col pos]\n  ((vec col) pos))","user":"53b05a75e4b047364c044482"},{"problem":21,"code":"(fn [x i] (first (nthnext x i)))","user":"552bab7fe4b0ffed3738f966"},{"problem":21,"code":"(fn f [xs n]\n  (if (> n 0)\n    (f (rest xs) (dec n))\n    (first xs)))","user":"58efe689e4b056aecfd47dd5"},{"problem":21,"code":"(fn [col x] (-> (drop x col)\n                (first)))","user":"5f2ab452e4b033932238a656"},{"code":"(fn [coll x] (last (take (inc x) coll)))","problem":21,"user":"4db86aee535d1e037afb2193"},{"problem":21,"code":"#(loop [i 0 theList %1]\n    \t\t(if (< i %2)\n    \t\t\t(recur (inc i) (next theList))\n    \t\t\t(first theList)\n    \t\t)\n    \t)","user":"55fc8f1fe4b0f488688e0675"},{"code":"#(if (= %2 0)\n  (first %1)\n\t(recur (next %1)\n\t       (dec %2)))","problem":21,"user":"4ec6157b535d6d7199dd36c2"},{"problem":21,"code":"(fn [xs elem] (-> (drop elem xs) first))","user":"589c7c8ce4b00487982d5361"},{"problem":21,"code":"(fn test2 [coll x] \n  (or (and (> x 0) (test2 (rest coll) (- x 1))) (first coll)))","user":"598612f9e4b021a7a535fe7e"},{"problem":21,"code":"(fn [coll idx] (reduce (fn [acc {:keys [v i]}] (if (= i idx) v acc)) nil (map (fn [v i] {:v v :i i}) coll (range))))","user":"5f7600ffe4b02876ed9fd0ac"},{"problem":21,"code":"(fn [x idx] ( if (= idx 0) (first x) (recur (rest x) (dec idx)) ))","user":"58ac513fe4b0005cfeb1a746"},{"problem":21,"code":"(fn [xs n] (if (= n 0)\n             (first xs)\n             (recur (rest xs) (- n 1))))","user":"5907a736e4b047aa04b1995e"},{"problem":21,"code":"(fn return-nth [s n] (last (take (inc n) s)))","user":"5fda0f46e4b05ac5b16ea126"},{"code":"(fn [s x] (last (take (+ 1 x) s)))","problem":21,"user":"51857e64e4b0da5a5be3babe"},{"code":"(fn [seq n] (-> n (drop seq) first))","problem":21,"user":"4ff6aea8e4b0678c553fc381"},{"problem":21,"code":"(fn [a b] \n  (first (drop b a))\n  \n  \n  )","user":"56f2611fe4b04a395b9a04a2"},{"problem":21,"code":"(fn n_element [list n] (first (drop n list)))","user":"5c55f6eee4b0fb8c5ffd9a2d"},{"code":"(fn n-th [l i]\n  (cond\n   (nil? l) nil\n   (= i 0) (first l)\n   :else (recur (next l) (dec i))))","problem":21,"user":"50414e3ce4b06d8231e4facd"},{"problem":21,"code":"(fn [x y]\n   (get (into [] x) y)\n   )","user":"5f815db6e4b0c071e6c840f0"},{"problem":21,"code":"(fn [list n]\n  (cond\n    (<= n (- (count list) 1)) (.get list n)\n    :else nil))","user":"5b6962c1e4b0c6492753e787"},{"problem":21,"code":"(fn [col1 n] (first(drop n col1)))","user":"57132c92e4b07c98581c3a9a"},{"problem":21,"code":"(fn [x y] (let [x x y y] (if (= y 0) (first x) (recur (rest x) (dec y)))))","user":"53abd414e4b047364c044452"},{"problem":21,"code":"(fn [col n]\n  ((apply comp (cons first (repeat n rest))) col))","user":"55d073ece4b0e31453f64a3b"},{"code":"(fn [c i] (first (nthnext c i)))","problem":21,"user":"4e1a312a535d04ed9115e7f9"},{"problem":21,"code":"(fn [s i] (->> s (drop i) first))","user":"57fdcdbfe4b0d3187e9009bd"},{"problem":21,"code":"(fn [coll index]\n  (if (= index 0)\n    (first coll)\n    (recur (rest coll) (- index 1))))","user":"5e84b48ee4b09a7a73c8bbc8"},{"problem":21,"code":"(fn [lista elem]\n  (loop [l lista\n        e elem]\n   (if (= 0 e)\n     (first l)\n     (recur (rest l) (dec e)))))","user":"5775659ae4b0979f8965161b"},{"code":"#(loop [seq %1\n         n %2]\n    (if (= n 0)\n      (first seq)\n      (recur (rest seq) (dec n))))","problem":21,"user":"533d2ea5e4b085b17e897d7a"},{"code":"(fn [x y] (-> (split-at y x) second first))","problem":21,"user":"5014779ce4b094324338f8e6"},{"problem":21,"code":";#(last(take (inc %2) %1))\n;#(first(drop %2 %1))\n.get","user":"562f2985e4b0ab312c17ebc5"},{"problem":21,"code":"(fn [array, index] (first \n (\n  (apply comp (repeat index rest)) array\n )\n                    \n)\n  \n)","user":"55893b09e4b059ccff29b1fe"},{"problem":21,"code":"(fn n [xs i] (if (= 0 i)\n               (first xs)\n               (n (next xs) (- i 1))))","user":"5e17f787e4b00200644e3d5e"},{"problem":21,"code":"(fn [elements n]\n  (loop [index 0 data elements]\n    (if (= index n)\n      (first data)\n      (recur (inc index) (rest data)))))","user":"58ee2c14e4b056aecfd47d9e"},{"problem":21,"code":"(fn [l pos]\n  (first (drop pos l)))","user":"5e501de1e4b027a2e10ac0bf"},{"problem":21,"code":"(fn [input n]\n  (loop [in input counter n]\n    (if (= counter 0)\n      (first in)\n      (recur (rest in) (dec counter)))))","user":"55614f6ce4b0c656e3ff17c5"},{"problem":21,"code":"(fn get_n [coll n]\n    (if (== (count coll) (+ n 1))\n       (last coll)\n       (get_n (drop-last coll) n)\n     )                    \n)","user":"53ee83f9e4b0d648e757f4d0"},{"code":"(fn f [let n] \n  (if (= n 0) \n(first let) \n(f (rest let) (- n 1))))","problem":21,"user":"501b1efee4b0b12d9c5f4d82"},{"code":"(fn [items index] \n  (if \n    (> index 0) \n    (recur (rest items) (- index 1))\n    (first items)\n  )\n)","problem":21,"user":"4e749e84535d7a570dd295b9"},{"code":"#(loop [l %1 n %2]\n   (if (pos? n)\n     (recur (rest l) (dec n))\n     (first l)))","problem":21,"user":"52b35a6ee4b0c58976d9ad07"},{"problem":21,"code":"(fn [col elem] ( first( drop elem  col)))","user":"581cb81ae4b04b46fc4b0efe"},{"problem":21,"code":"(fn [s n]\n  (if (> n 0)\n    (recur (rest s) (dec n))\n    (first s)\n    )\n  )","user":"58eba423e4b056aecfd47d40"},{"problem":21,"code":"(fn my-nth\n  ([xs index]\n   (my-nth xs index 0))\n  ([xs index count]\n   (if (= index count)\n     (first xs)\n     (recur (rest xs) index (inc count)))))","user":"58db097fe4b0a4d5acaab66f"},{"problem":21,"code":"(fn [seq n] (if (= n 0)  (first seq) (recur (rest seq) (dec n))))","user":"5a426a3fe4b0447ef91cc5f2"},{"code":"(fn [coll index] (last (take (+ 1 index) coll)))","problem":21,"user":"5331b0e7e4b019098a6f8b6b"},{"problem":21,"code":"(fn [c i] (first (filter #(= i (.indexOf c %)) c)))","user":"52e16face4b09f7907dd1421"},{"problem":21,"code":"(fn [col ind] (last (take (+ ind 1) col)))","user":"5db2763de4b010eb3c36cd16"},{"problem":21,"code":"(fn [seq n] (first ((apply comp (map (fn [list] rest) (range n))) seq)))","user":"55f7c873e4b06e875b46ceb0"},{"code":"(fn [coll n]\n  (loop [xs coll i n]\n    (if (= 0 i)\n      (first xs)\n      (recur (rest xs) (dec i)))))","problem":21,"user":"4e36425c535deb9a81d77f33"},{"problem":21,"code":"(fn [s-in, index-in]\n  (loop [s s-in\n         index index-in]\n    (if (zero? index)\n      (first s)\n      (recur (next s) (dec index))\n      ) ;if\n    ) ;loop\n  ) ;fn","user":"5739fa01e4b0cd1946bd1082"},{"problem":21,"code":"(fn [coll n] (->> coll (drop n) first))","user":"5aa4f7dae4b0d174b936c88c"},{"problem":21,"code":"(fn nofseq [s n]\n  (if (= n 0)\n    (first s)\n    (nofseq (rest s) (- n 1))\n  )\n)","user":"563758e3e4b0bfe05bf117d5"},{"problem":21,"code":"(fn [coll n] \n    (loop [i 0 coll coll] \n          (if (= i n) \n            (first coll) \n            (recur (+ i 1) (rest coll)))))","user":"58b0bbc5e4b0ebc645576ce6"},{"problem":21,"code":"#(loop\n   [l %1\n    n %2]\n   (if (= n 0)\n     (first l)\n     (recur (rest l) (dec n))))","user":"550fa523e4b06e50f9beb17a"},{"problem":21,"code":"(fn [coll n] (first (subvec (vec coll) n)))","user":"60511ccfe4b056659d6341ff"},{"problem":21,"code":"(fn [x n]\n  (loop [cnt n tmp-list x]\n    (if (zero? cnt)\n      (first tmp-list)\n      (recur (dec cnt) (rest tmp-list)))))","user":"5fb9cffee4b03f550f44822c"},{"problem":21,"code":"#(loop [cnt %2 li %1] (if (= cnt 0) (first li) (recur (dec cnt) (rest li))))","user":"5a45aaece4b05d388ecb6b3f"},{"problem":21,"code":"(fn [s n]\n  (first (nthrest s n)))","user":"579b785ae4b05b1deef9adf2"},{"problem":21,"code":"(fn [seq n] ((into [] seq) n))","user":"56dcd173e4b0ea9b8538f824"},{"problem":21,"code":"(fn [col pos] (get (vec col) pos))","user":"5e4f4617e4b027a2e10ac0b7"},{"problem":21,"code":"(fn [s n] (loop [ss s nn n] (if (= 0 nn) (first ss) (recur (rest ss) (- nn 1)))))","user":"5466199ce4b01be26fd746e2"},{"problem":21,"code":"#(loop [index 0 lst %1] (if (= index %2) (first lst) (recur (inc index) (rest lst))))","user":"5c4c74efe4b0f9f7a8770e76"},{"problem":21,"code":"(fn [alist kth]\n  (loop [ x alist i kth]\n    (if (= 0 i) (first x) (recur (rest x) (dec i))  ) ))","user":"581f82e2e4b04b46fc4b0f41"},{"code":"#(loop [items %1 n %2]\n    (if (= n 0) \n       (first items)\n       (recur (rest items) (dec n))))","problem":21,"user":"4f0d093b535d0136e6c22313"},{"code":"(fn [lst indx]\n  (if (= indx 0)\n      (first lst)\n      (recur (rest lst) (dec indx))))","problem":21,"user":"50618c62e4b0a30dc9a35d33"},{"problem":21,"code":"(fn [list index]\n  (loop [iteration index temp-list list]\n    (if (zero? iteration)\n      (first temp-list)\n      (recur (dec iteration) (rest temp-list)))))","user":"55c5bdffe4b0e31453f649b6"},{"code":"(fn [x n ] \r\n          (if ( = n 0)\r\n            (first x)\r\n            (recur (rest x ) ( - n 1))))","problem":21,"user":"4dd67f10535d2dad7130b5c9"},{"problem":21,"code":"(fn ne [x n]\n  (if (zero? n) (first x) (ne (rest x) (- n 1))))","user":"5897dda4e4b00487982d52c8"},{"problem":21,"code":"(fn [s elem] (first (drop elem s)))","user":"5cb39440e4b026601754b903"},{"problem":21,"code":"(fn ele [lista pozicija]\n  (loop [poz 0\n         ostatak lista]\n    (if (= pozicija poz) (first ostatak) (recur (+ poz 1) (rest ostatak)))))","user":"5be0b916e4b0ed4b8aab4c8f"},{"code":"(fn [se i]\n  (loop [idx 0 sequ se]\n    (if (not= idx i)\n      (recur (inc idx) (rest sequ))\n      (first sequ)\n             )))","problem":21,"user":"52e7d3d7e4b09f7907dd148e"},{"problem":21,"code":"#(loop [coll % index %2]\n    (if (= index 0)\n      (first coll)\n      (recur (rest coll) (dec index))))","user":"57861b0ce4b0ebec4cfb74ef"},{"problem":21,"code":"(fn [seq n]\n  (if (zero? n) (first seq)\n    (recur (rest seq) (dec n))))","user":"552a793ee4b0ffed3738f955"},{"code":"(fn[c x] \n          (if (= 0 x) \n           \t\t(first c)\n           \t\t(recur (rest c) (dec x))))","problem":21,"user":"5276aa0de4b03e8d9a4a74ea"},{"problem":21,"code":"(fn [arr n] \n\t(last (take (inc n) arr)))","user":"578b9978e4b0ebec4cfb754c"},{"code":"(fn [s n]\n  (let [v (vec s)]\n    (get v n)))","problem":21,"user":"536eb396e4b0fc7073fd6e74"},{"problem":21,"code":"(fn\n  my-nth\n  [x n]\n  (if (< n 0)\n    nil\n  \t(if (= 0 n)\n    \t(first x)\n    \t(my-nth (rest x) (dec n)))))","user":"54dcb632e4b024c67c0cf786"},{"code":"(fn ntn [s n] (if (= n 0)(first s) (ntn (rest s)(dec n))))","problem":21,"user":"51c20b14e4b0d204dbe2ca1b"},{"code":"(fn nnth [coll n]\n  (if (zero? n)\n    (first coll)\n    (nnth (rest coll) (dec n))))","problem":21,"user":"506b8242e4b0eda3100c090a"},{"problem":21,"code":"(fn my [a n] \n  (if (zero? n) \n    (first a) \n    (my (rest a) (dec n))))","user":"53d612cbe4b0e771c3025452"},{"problem":21,"code":"(fn xth [x y] \n  (if (= y 0) \n    (first x) \n    (xth (rest x) (dec y))))","user":"5c97b621e4b048ec896c5a74"},{"problem":21,"code":"(fn ff [l i]\n  (if (= i 0)\n    (first l)\n    (ff (rest l) (- i 1))))","user":"5f30296fe4b0574c87022c22"},{"problem":21,"code":"(fn n-th\n  ([s] (first s))\n  ([s c] (if (> c 0) \n          (n-th (rest s) (dec c))\n          (n-th s))))","user":"5ef9ea69e4b09b61f08553d1"},{"problem":21,"code":"(fn [l y]((fn t [x c] (if (>= c y) (first x) (t (rest x) (+ c 1)) ) ) l 0) )","user":"55bedd93e4b01b9910ae2a0d"},{"problem":21,"code":"(fn adadsf [items n]\n  (get (into [] items) n))","user":"53a7637de4b047364c044419"},{"problem":21,"code":"(fn [l x] (last (take (+ x 1) l)))","user":"54377355e4b032a45b869305"},{"code":"(fn f[b a] (if (= 0 a) (first b) (f (rest b) (dec a))))","problem":21,"user":"533b1611e4b0e30313ee6cc6"},{"problem":21,"code":"; for a given index, create a new array that includes the items up to that index (using 'take')\n; then grab the last item from the list (the item at the provided index)\n(fn [s x] (last (take (inc x) s)))","user":"5c5b7f51e4b01df32ab7328f"},{"problem":21,"code":"(fn nth2\n  [lst pos]\n  (let [cont    (range 0 (+ (count lst) 1))\n        vect    (map (fn [x y] (vector x y)) lst cont)\n        result  (first (remove nil? (map (fn [x] (if (= (second x) pos) (first x))) vect)))]\n    result))","user":"5c7dad57e4b0d597f478caba"},{"code":"(fn my-nth [c n] (if (= n 0) (first c) (my-nth (rest c) (dec n))))","problem":21,"user":"507e68abe4b085af06e3afd2"},{"code":"(fn my-nth [x n]\n  (if (= n 0)\n    (first x)\n    (recur (rest x) (dec n))))","problem":21,"user":"4e9937f9535dbda64a6f6b63"},{"problem":21,"code":"(fn tk-nth [s n] (if (= n 0) (first s) (tk-nth (rest s) (dec n))))","user":"552281cae4b0882d96d0919f"},{"problem":21,"code":"(fn [lst pos] (if (zero? pos) \n\t\t\t\t\t(first lst) \n\t\t\t\t\t(recur (rest lst) (dec pos))\n\t\t\t))","user":"55d0a3c4e4b0e31453f64a3e"},{"problem":21,"code":"(fn nthe [input elem] \n                       (if (= elem 0 ) (first input) (nthe (rest input) (- elem 1)))\n)","user":"5e4920d6e4b043cd24807a4b"},{"problem":21,"code":"(fn [l n]\n  (loop [l1 l i n]\n    (if (= i 0)\n      (first l1)\n      (recur (rest l1) (dec i)))))","user":"5b8eb68fe4b0c0b3ffbd49ee"},{"problem":21,"code":"(fn [c n] (->> c (drop n) (take 1) first))","user":"5313b4b6e4b08068f379ed0c"},{"problem":21,"code":"(fn tmp [coll n] (loop [cnt 0 col coll]\n                     (if (= n cnt)\n                       (first col)\n                       (if (not-empty col)\n                         (recur (inc cnt) (rest col))))))","user":"57b7de74e4b0fbc9809a27d4"},{"problem":21,"code":"(fn [coll,n] (first (nthrest coll n)))","user":"59a9214be4b0bcf4e9a43b02"},{"code":"(fn [coll n]\n  (if (= n 0)\n    (first coll)\n    (recur (next coll) (dec n))))","problem":21,"user":"4ed9fe5f535d10e5ff6f5308"},{"problem":21,"code":"(fn [s n] (if (> n 0) (recur (rest s) (- n 1)) (first s)))","user":"57539e04e4b02ea1147992ab"},{"problem":21,"code":"(fn [seq idx]\n  ((fn [seq index current] \n      (if (= current idx)\n        (first seq)\n        (recur (rest seq) idx (inc current)))\n     ) seq idx 0))","user":"53403f42e4b085b17e897da8"},{"problem":21,"code":"(fn my-nth\n   ([list index] (my-nth list index 0))\n   ([list index iter ] (if (= index iter)\n                         (first list)\n                         (my-nth (rest list) index (inc iter))\n                         )\n    )\n   )","user":"6060bebfe4b03746e80ebf68"},{"problem":21,"code":"(fn return_nth\n  [myseq element]\n  (get (vec myseq) element))","user":"5e1c24f4e4b0dc959400852d"},{"code":"#(if (= 0 %2)\n   (first %1)\n   (recur (rest %1) (dec %2)))","problem":21,"user":"4ec5510d535d6d7199dd3694"},{"problem":21,"code":"(fn [coll n] (loop [c coll i n](cond\n                                  (< i 0) nil\n                                  (= i 0) (first c)\n                                  :else (recur (rest c) (dec i)))))","user":"55f8b32ae4b03cbcff9738ba"},{"code":"(fn nth'\n  [s n]\n  (if (= n 0) (first s) (nth' (rest s) (- n 1))))","problem":21,"user":"509c200be4b085ae113522aa"},{"problem":21,"code":"#(-> (take (inc %2) %1) reverse first)","user":"57c94c6ee4b05aa3c4741d2d"},{"problem":21,"code":"(fn [coll n]\n  (->> coll\n       (drop n)\n       first))","user":"59f43ca3e4b0966464fe6aaa"},{"problem":21,"code":"(fn [lst x] \n  (loop [i 0 nls lst]\n    (if (= x i) \n      (first nls)\n      (recur (inc i) (rest nls)))))","user":"5c7d5463e4b0d597f478caa9"},{"code":"(fn nth-elem [x n] \n  ( if (zero? n)\n    (first x)\n    (recur (rest x) (dec n))))","problem":21,"user":"4f065217535dcb61093f6c0c"},{"problem":21,"code":"(fn mynth [coll n]\n (loop [index 0 res coll]\n\t(if (< index n) \n\t (recur (inc index) (rest res))\n\t\t(first res))))","user":"579601c8e4b0e215f87e8492"},{"code":"(fn nt [s n]\n  (first (drop n s)))","problem":21,"user":"512148dae4b05ae5a5823c0f"},{"code":"(fn [xs n] (if (= n 0)\n               (first xs)\n               (recur (rest xs) (dec n))))","problem":21,"user":"4f8345c6e4b033992c121c1b"},{"problem":21,"code":"(fn [l p] (first (drop p l)))","user":"56ff7ffee4b08d47c97781be"},{"code":"(fn get-index [mylist index] (.get mylist index))","problem":21,"user":"50ed7023e4b06330c1f87c39"},{"code":"(fn [a-list position] \n  (first \n    (letfn [(list-iter [_list _position]\n                      (if (= 0 _position) \n                          _list\n                          (list-iter (rest _list) (dec _position))))]\n      (list-iter a-list position))))","problem":21,"user":"4e7e8ea5535db169f9c79719"},{"code":"(fn [lst n]\n  (first (drop n lst)))","problem":21,"user":"4eed6b32535d93acb0a668bc"},{"problem":21,"code":"(fn _nth [s n] \n  (if (= n 0) \n    (first s) \n    (_nth (rest s) (dec n))))","user":"5f6796d2e4b02876ed9fd036"},{"problem":21,"code":"(fn [se co]\n   (let [x (first se)\n         xs (rest se)]\n     (if (= co 0)\n       x\n       (recur xs (dec co)))))","user":"5473efc3e4b0c51c1f4d7285"},{"code":"#((comp last (partial take (+ 1 %2))) %1)","problem":21,"user":"506b0a9ce4b0a2a5463de380"},{"code":"(fn my-nth [coll n]\n  (last (take (+ n 1) coll)))","problem":21,"user":"4ec34578535dcc7ae8597d51"},{"code":"(fn [x, y] ((into [] x) y))","problem":21,"user":"512a5c89e4b0ff5c4bc1f99c"},{"code":"#( first ( reverse ( take (+ 1 %2) %1 ) ) )","problem":21,"user":"4fbb7010e4b081705acca2e7"},{"code":"(fn [xs n] (->> xs (drop n) first))","problem":21,"user":"4fadbb17e4b081705acca23e"},{"code":"(fn [a, i] ( (zipmap (range (count a)) a) i) )\n\n;; #(first (drop %2 %1))","problem":21,"user":"52af0fd3e4b0c58976d9acb5"},{"code":"(fn geter [x y]\n  (.get x y ))","problem":21,"user":"537e8bc4e4b06839e8705ea8"},{"code":"(fn [x y]\n  (last (take (+ y 1) x)\n  )\n)","problem":21,"user":"4e94aa18535dbda64a6f6b1e"},{"code":"(fn [xs n] (last (take (+ n 1) xs)))","problem":21,"user":"4e88e103535d8b9bb0147ca6"},{"code":"(fn [l, n] (last (take (+ n 1) l)))","problem":21,"user":"512117f1e4b0ca414459ae94"},{"code":"#(loop [lst %1 cnt %2]\n    (if (= cnt 0)\n      (first lst)\n      (recur (rest lst) (dec cnt))))","problem":21,"user":"51929214e4b08962174cf74c"},{"code":"(fn [l i] (first (drop i l)))","problem":21,"user":"4ed72e51535d10e5ff6f52ee"},{"code":"(fn [c i]\n  ( first (drop i c)))","problem":21,"user":"530f2a4fe4b08068f379ecc5"},{"problem":21,"code":"#(first (loop [se %1 n %2] (if (= n 0) se (recur (rest se) (dec n)))))","user":"57b59d77e4b0fbc9809a27ae"},{"code":"(fn\t[coll m]\r\n\t\t(first (reverse\r\n\t\t\t(take (inc m) coll))))","problem":21,"user":"4ecf1f51535d1f5ad70dba3a"},{"problem":21,"code":"#((comp last take) (inc %2) %)","user":"57986b76e4b039eba2ecb116"},{"problem":21,"code":"(fn [alist, ntH] (get (vec alist) ntH))","user":"548018dbe4b0c51c1f4d732b"},{"code":"(fn n [x y] (last (take (inc y) x)))","problem":21,"user":"4e8d5911535d65386fec2133"},{"problem":21,"code":"(fn ([c n]\n     ((vec c) n)))","user":"56689295e4b04acd4f672df1"},{"code":"(fn my-version [theSeq element] \n  (if (= element 0)\n    (first theSeq)\n      (my-version (rest theSeq) (- element 1))))","problem":21,"user":"4f1c2336535d64f60314647f"},{"code":"(comp last #(take (inc %2) %))","problem":21,"user":"4fa5ddfde4b081705acca1b1"},{"problem":21,"code":"(fn [ls n] (last (take (inc n) ls)))","user":"5cec2b79e4b0a17bb84e2bf4"},{"problem":21,"code":"(fn nth-elem [lst idx] (first (reverse (take (+ idx 1) lst))))","user":"56f94ff7e4b07572ad1a88ae"},{"problem":21,"code":"(fn mynt [lst n] (if (= 0 n) (first lst) (mynt (rest lst) (- n 1))))","user":"54c47620e4b045293a27f61c"},{"problem":21,"code":"(fn [x y]\n  (loop [z 0\n         els x]\n    (if (< z y)\n      (recur (inc z) (rest els))\n      (first els))))","user":"56491d05e4b0284900eef63a"},{"problem":21,"code":"(fn mynth [lst n] (if (= 0 n) (first lst) (mynth (rest lst) (- n 1))))","user":"53c58d31e4b00fb29b22128f"},{"problem":21,"code":"(fn [coll n]\n  (loop [counter n\n         colle coll]\n    (if (= counter 0)\n      (first colle)\n      (recur (dec counter) (drop 1 colle)))))","user":"5ec91154e4b08d0ec38692ed"},{"code":"(fn get_nth [x,i] (if (= i 0) (first x) (get_nth (rest x) (- i 1))))","problem":21,"user":"4f84f6c3e4b033992c121c3d"},{"problem":21,"code":"(fn [list-of-numbers n] (last (take (inc n) list-of-numbers)))","user":"603e063ae4b0d5df2af2230f"},{"problem":21,"code":"(fn foo [s n]\n  (if (= n 0)\n    (first s)\n    (foo (rest s) (- n 1))))","user":"57f7c74ee4b0d3187e900902"},{"problem":21,"code":"(fn [a-seq n]\n  (if (= n 0)\n    (first a-seq)\n    (recur (rest a-seq) (dec n))))","user":"5680104ae4b0966858e4d8ea"},{"code":"(fn [x y]\n  (.get x y))","problem":21,"user":"5171069be4b0d70c8bbbf238"},{"code":"(fn getn [s n]\r\n  (if (= n 0) (first s)\r\n      (getn (rest s) (dec n))))","problem":21,"user":"4dbf07dd535d020aff1edf71"},{"problem":21,"code":"(fn [coll n] (if \n               (zero? n)(first coll)\n               (recur (rest coll)(- n 1))))","user":"59648ce1e4b069c0a1a19769"},{"code":"(fn nTh [seq, n] (if (= n 0) (first seq) (nTh (rest seq) (- n 1))))","problem":21,"user":"4fc4fe59e4b081705acca36a"},{"problem":21,"code":"(fn [coll, n]\n (loop [coll-remaining coll counter 0]\n   (if (= counter n)\n     (first coll-remaining)\n     (recur (drop 1 coll-remaining) (inc counter))\n   )))","user":"5dc9c4f2e4b02f9375f4e1f0"},{"code":"(fn [lst i]\r\n  (loop [local-list lst index i]\r\n    (if (zero? index)\r\n      (first local-list)\r\n      (recur (rest local-list) (dec index)))))","problem":21,"user":"4e7dec83535db169f9c796f3"},{"code":"(fn self [xs n] (if (= n 0) (first xs) (self (rest xs) (- n 1))))","problem":21,"user":"5091945ee4b0742c82730af0"},{"code":"(fn mynth [s i] (if (> i 0) (mynth (rest s) (- i 1)) (first s)))","problem":21,"user":"516ed04ee4b06aac486e5b30"},{"code":"(fn [coll idx]\n  (get (vec coll) idx))","problem":21,"user":"4db85c8e535d1e037afb218f"},{"code":"#(loop [item %1, i 0]\n\t(if (= i %2)\n      (first item)\n      (recur (rest item) (inc i))))","problem":21,"user":"52b71bd2e4b0c58976d9ad4d"},{"code":"(fn [s i]\n  (first (drop i s))\n)","problem":21,"user":"5104203be4b0432126ba9bb5"},{"code":"(fn [li n]\n\t(if (= n 0)\n\t\t(first li)\n\t\t(recur (rest li) (dec n))\n\t)\n)","problem":21,"user":"51b10ebde4b0c53cf2e68a74"},{"problem":21,"code":"(fn [seq n]\n  (loop [l seq\n         i 0]\n    (if (= i n)\n      (first l)\n      (recur (rest l) (inc i)))))","user":"58ff5898e4b0438e51c2cfec"},{"problem":21,"code":"(fn myth [l n] (if (= 0 n) (first l) (myth (rest l) (dec n))))","user":"5510aa92e4b06e50f9beb188"},{"problem":21,"code":"(fn return-nth [coll n]\n  (if (= n 0)\n    (first coll)\n    (recur (rest coll) (dec n))))","user":"5783c505e4b0ebec4cfb74bc"},{"code":"#(first (reverse (take (inc %2) %1)))","problem":21,"user":"4e9c3648535dbda64a6f6b7d"},{"code":"(fn nthe [coll n]\n  (if (== n 0) (first coll) (nthe (rest coll) (dec n))))","problem":21,"user":"4ed4798f535d10e5ff6f52cc"},{"code":"(fn xth \n  ([sequ n c] (if (= n c) (first sequ) (xth (rest sequ) n (+ c 1))))\n  ([sequ n] (xth sequ n 0))\n)","problem":21,"user":"5239caa6e4b0d705d026ef27"},{"problem":21,"code":"(fn [col index] (if (= index 0) (first col) (recur (rest col) (- index 1))))","user":"59a180b3e4b0871e7608b852"},{"problem":21,"code":"(fn [coll idx] \n  (if (= idx 0) (first coll) (recur (rest coll) (dec idx)))\n)","user":"5576c2e6e4b05c286339e073"},{"code":"#(loop [s %1\n        n %2]\n   (if (= 0 n) \n     (first s)\n     (recur (rest s) (- n 1))))","problem":21,"user":"4f55ab5ee4b0a7574ea71809"},{"code":"(fn [lst n]\r\n  (loop [lst lst\r\n         n n]\r\n    (if (= n 0)\r\n      (first lst)\r\n      (recur (rest lst) (- n 1)))))","problem":21,"user":"4de2f44f535d08e6dec9fdec"},{"problem":21,"code":"(fn nthh [l i]  (if (= 0 i) (first l)  (nthh (rest l) (- i 1))))","user":"560e8a4ae4b05f002753df4f"},{"problem":21,"code":"(fn lisel [lis el]\n  (if (== el 0)\n    (first lis)\n    (lisel (rest lis)\n           (- el 1))\n    ))","user":"5e1d01b5e4b0dc9594008542"},{"code":"#(first ( nthrest %1 %2))","problem":21,"user":"506ee0f4e4b09350ab4199f2"},{"problem":21,"code":"(fn [vs n] (first (drop n vs)))","user":"5e41a67be4b01d43a70e8e56"},{"problem":21,"code":"(fn loc [s pos]\n  (if (< pos 0)\n    nil\n    (if (= pos 0)\n      (first s)\n      (recur (rest s) (dec pos)))))","user":"5779556de4b0979f8965166e"},{"problem":21,"code":"(fn [x n] \n  (if (= n 0) \n      (first x) \n      (recur (rest x) (- n 1))))","user":"543496e1e4b0b6b47310fcf2"},{"problem":21,"code":"(fn get-element-at\n  [l i]\n  (get (into [] l) i))","user":"5f6dee74e4b02876ed9fd05f"},{"problem":21,"code":"(fn [coll n]\n  (loop [remaining coll\n         idx 0]\n    (if (= idx n) (first remaining) (recur (rest remaining) (inc idx)))))","user":"55d332f5e4b0e31453f64a5f"},{"code":"(fn th [alist nvalue] ((fn movenlist [lfrom lto n] \n                   (if \n                              (or (= (count lto) n) (nil? lfrom)) \n                              (first lfrom)\n                              (movenlist (rest lfrom) (cons (first lfrom) lto) n)\n                   )\n               ) alist '() nvalue)\n)","problem":21,"user":"51340abbe4b0915833951877"},{"problem":21,"code":"(fn [seq n]\n        (loop [r seq\n               i 0]\n          (if (= i n)\n            (first r)\n            (recur (rest r) (inc i)))))","user":"52b065dbe4b0c58976d9acc9"},{"problem":21,"code":"(fn [a n] (if (= 0 n) (first a) (recur (next a) (dec n))))","user":"574727bce4b009280f9f2b70"},{"code":"(fn mynth [seq num] (if (<= num 0) (first seq) (mynth (rest seq) (dec num))))","problem":21,"user":"511d5d8ee4b022853b0e07a3"},{"code":"(fn [xs x] (last (take (inc x) xs)))","problem":21,"user":"4db653f6535d1e037afb217c"},{"code":"(fn [s, n] (get (vec s) n))","problem":21,"user":"5149f383e4b0829bd132edb2"},{"problem":21,"code":"(fn mynth\n  ([s ix current]\n  (if (= ix current) (first s) (mynth (rest s) ix (+ current 1))))\n  ([s ix] (mynth s ix 0)))","user":"59be62d5e4b0a024fb6ae435"},{"problem":21,"code":"(fn [l n] \n  (first (nthrest l n)))","user":"541c1e46e4b01498b1a71a70"},{"code":"(fn [x n] \n  (loop [a x i n]\n    (if (= 0 i)\n      (first a)\n      (recur (rest a) (- i 1)))))","problem":21,"user":"51a4b5dee4b0def3c5c58697"},{"code":"(fn mynth\n  [xs n]\n  (if (= n 0)\n    (first xs)\n    (mynth (rest xs) (dec n))))","problem":21,"user":"52c58561e4b0c2d177d620f8"},{"problem":21,"code":"(fn [x y] (if (= y 0)\n            (first x)\n            (recur (rest x) (dec y))))","user":"5f3567d6e4b0574c87022c44"},{"problem":21,"code":"(fn mynth \n  ([lst finditem]\n   (mynth lst finditem 0))\n  ([lst finditem counter]\n  (if (or (= (first lst) nil) (= finditem counter))\n    (first lst)\n    (mynth (rest lst) finditem (inc counter)))))","user":"5499e052e4b03163384f4705"},{"problem":21,"code":"(fn [coll n] (-> coll vec (get n)))","user":"55756d34e4b05c286339e062"},{"problem":21,"code":"(fn nth1 [coll index] (if (> index 0)\n                         (nth1 (rest coll) (dec index))\n                         (first coll)))","user":"594cf4f1e4b07ddc2dafae77"},{"code":"(fn [x n] (first (second (split-at n x))))","problem":21,"user":"51b6f4f9e4b04fc00976d479"},{"problem":21,"code":"#(loop [values %1\n         counter 0]\n         (if (= counter %2)\n           (first values)\n           (recur (rest values) (inc counter))\n         )\n  )","user":"556523fce4b0c656e3ff1815"},{"problem":21,"code":"#(loop [x %1 y %2] \n       (if (zero? y) \n           (first x) \n           (recur (rest x) (dec y))))","user":"5a7c5de3e4b03baeef9276e9"},{"code":"(fn my-nth [s x] (if (= x 0) (first s) (my-nth (rest s) (- x 1))))","problem":21,"user":"5382668fe4b06839e8705ed3"},{"code":"(fn [se, i] (get (vec se) i))","problem":21,"user":"5339db61e4b0e30313ee6cb0"},{"code":"(fn [xs n] (if (<= n 0) (first xs) (recur (rest xs) (- n 1))))","problem":21,"user":"530e74c9e4b08068f379ecb9"},{"problem":21,"code":"(fn reccs [seqe n] (if (= 0 n) (first seqe) (reccs (rest seqe) (dec n) )))","user":"57d5a74de4b0bd073c2023ba"},{"code":"(fn\n  [coll n]\n  (first (keep-indexed\n          (fn [index item]\n            (if (= index n)\n              item\n              nil))\n          coll)))","problem":21,"user":"5234f716e4b05e80434a505f"},{"problem":21,"code":"(fn [col idx] \n\t(first (reverse (take (+ idx 1) col))))","user":"5b67d634e4b0c6492753e76b"},{"code":"(fn [col n] \n  (loop [m n s col] \n    (if (= m 0) \n      (first s) \n      (recur \n        (- m 1) (rest s)))))","problem":21,"user":"50127fbfe4b030d97e4db70f"},{"code":"(fn nth-elem [s x]\n\t(last (take (inc x) s)))","problem":21,"user":"51ba59e4e4b0fe3ecfb4642d"},{"problem":21,"code":"(fn [s n] \n  (loop [s s n n]\n    (if (= n 0) \n      (first s)\n      (recur (rest s) (- n 1)))))","user":"54d8cc38e4b0a52adc2e203e"},{"problem":21,"code":"(fn my-nth [lyst n]\n  (cond\n   (empty? lyst) ()\n   (zero? n) (first lyst)\n   :else (recur (rest lyst) (dec n))\n   ))","user":"53e27bf1e4b036ad0777e3f2"},{"problem":21,"code":"(fn getNth [arr, pos]\n  (if (= pos 0)\n    (first arr)\n    (getNth (rest arr) (- pos 1))\n    )\n  )","user":"5b7f381ae4b047b03b203769"},{"problem":21,"code":"(fn counter [x, y]\n  (if (= y 0)\n    (first x)\n    (counter (rest x) (- y 1))))","user":"5d5c6675e4b09db18d4482ec"},{"problem":21,"code":"(fn [incoming-list, index]\n  (if (< index (count incoming-list))\n    (->> incoming-list (drop index) (first))\n    (println \"Index exceeds list size.\")\n  ) \n)","user":"5a4dbc97e4b05d388ecb6bae"},{"code":"#(loop [lst %1 idx %2] (if (= 0 idx) (first lst) (recur (rest lst) (dec idx))))","problem":21,"user":"52655949e4b03e8d9a4a710b"},{"problem":21,"code":"(fn [s n]\n  (if (= n 0)\n    (first s)\n    (recur (rest s) (- n 1))\n    )\n  )","user":"55c4cd8de4b0e31453f649a4"},{"problem":21,"code":"(fn [col n]\n  (loop [x 0 remaing col]\n  \t(if (= x n) (first remaing)\n      (recur (inc x) (rest remaing))\n      ))\n  )","user":"5c7bb8c0e4b0fca0c1622864"},{"problem":21,"code":"(fn nth-el [xs idx]\n  (if (= 0 idx)\n    (first xs)\n    (nth-el (rest xs) (dec idx))))","user":"5bddead6e4b0ed4b8aab4c57"},{"problem":21,"code":"(fn myNth [coll ind]\n  (if (== ind 0)\n    (first coll)\n    (myNth (drop 1 coll) (- ind 1)))\n  )","user":"5fe85417e4b05ac5b16ea194"},{"code":"(fn [coll index]\n\t(let [counter\n      (fn [coll cnt]\n        (if (= cnt index)\n          (first coll)\n          (recur (rest coll) (+ 1 cnt))))]\n          (counter coll 0)))","problem":21,"user":"5132c6f0e4b021281ec7b6d3"},{"problem":21,"code":"(fn [s x] (last (take (+ x 1) s) ) )","user":"5b4dde95e4b02d533a91bcbe"},{"problem":21,"code":"(fn [sq n] (first(drop n sq)))","user":"5e3933c5e4b01d43a70e8dcc"},{"problem":21,"code":"(fn [alist index] (first (nthnext alist index))\n  )","user":"58fc4963e4b0438e51c2cf91"},{"code":"(fn myth [x y](if (= y 0)(first x)(myth (rest x)(- y 1))))","problem":21,"user":"4fad157ce4b081705acca232"},{"problem":21,"code":"(fn [array n] \n  (if (= 0 n) \n    (first array)\n    (recur (rest array) (dec n))))","user":"5769fc98e4b0a07e8fc18103"},{"code":"(fn [x y]\n  (if\n    (= 0 y) (first x)\n    (recur (rest x) (dec y))))","problem":21,"user":"4f045aad535dcb61093f6bbb"},{"code":"#(loop [i %2, w %1]\n(if (> i 0) \n  (recur (dec i) (rest w))\n  (first w)))","problem":21,"user":"533b36c0e4b0e30313ee6ccb"},{"code":"(fn [myseq ind] (if (= ind 0)\n        (first myseq)\n        (recur (rest myseq) (dec ind))))","problem":21,"user":"4f9fd450e4b0dcca54ed6d3d"},{"problem":21,"code":"(fn [coll idx]\n  (loop [i idx c coll]\n    (if (= 0 i)\n      (first c)\n      (recur (- i 1) (rest c)))))","user":"5cbb0436e4b026601754b9cc"},{"code":"#(loop [items %1 index %2]\n  (if (= index 0)\n    (first items)\n    (recur (rest items) (dec index))))","problem":21,"user":"4fbd6210e4b081705acca303"},{"problem":21,"code":"(fn my-nth\n  [collection position]\n   (if (zero? position)\n     (first collection)\n     (my-nth (rest collection) (- position 1))))","user":"5712418fe4b09c608db70455"},{"problem":21,"code":"(fn nth-element [s n]\n  (get (vec s) n))","user":"577526e0e4b0979f89651611"},{"code":"(fn my-n [list n] (if (= n 0) (first list) (my-n (rest list) (- n 1))))","problem":21,"user":"4ee6ca15535d93acb0a66862"},{"problem":21,"code":"(fn retnth [l n]\n  (if (zero? n)\n    (first l)\n    (retnth (rest l) (dec n))))","user":"604810c0e4b02d28681c77cf"},{"code":"(fn foo [x y] \r\n   (loop [lst x n y] \r\n     (if (> n 0)\r\n       (recur (rest lst) (dec n))\r\n     \t (first lst))))","problem":21,"user":"4ec3072a535dcc7ae8597d50"},{"problem":21,"code":"#(if (list? %1)\n           (let [v (into [] %1)] (get v %2))\n           (get %1 %2))","user":"59438419e4b060784b3b7929"},{"problem":21,"code":"(fn [collection index]\n  (last (take (+ 1 index) collection)))","user":"54f32614e4b050824f58f5ba"},{"problem":21,"code":"(fn test \n  [data n] \n  (if \n    (= n 0) \n    (first data) \n    (test (rest data) (- n 1))\n   )\n  )","user":"548166b3e4b0e286459a116d"},{"code":"(fn [sequence n]\n  (last (take (+ n 1) sequence)))","problem":21,"user":"4eef62ad535d305ff5cb7f1f"},{"problem":21,"code":"(comp first (partial (fn [f x y] (f y x)) drop))","user":"5414b7c4e4b01498b1a719ed"},{"problem":21,"code":"(fn [li i] (first (drop i li)))","user":"5fa7c574e4b0fa27300f3ddf"},{"code":"(fn [list, n] (first (drop n list)))","problem":21,"user":"505885c4e4b06522596eba7b"},{"problem":21,"code":"(fn [seq1 n] (last (take (+ n 1) seq1)))","user":"53e92f82e4b036ad0777e49d"},{"code":"(fn [seq n]\n  (if (= 0 n) \n    (first seq)\n    (recur (rest seq)(- n 1))))","problem":21,"user":"4eda8d7c535d10e5ff6f530f"},{"problem":21,"code":"(fn[col,n] (first (drop n col)))","user":"57e3d30be4b0bfb2137f5aab"},{"problem":21,"code":"(fn [col index]\n  (if  (= 0 index)\n    (first col)\n    (recur (rest col) (- index 1))\n    )\n  )","user":"525873e8e4b0cb4875a45cb2"},{"problem":21,"code":"(fn [coll idx]\n\t\t    (if (< (dec idx) 0)\n\t\t      (first coll)\n\t\t      (recur (next coll) (dec idx))))","user":"54b5ce67e4b05787c3b163ac"},{"code":"(fn nthelem [seq index]\n  ((vec seq) index)\n)","problem":21,"user":"537610eee4b06839e8705e1a"},{"problem":21,"code":"(fn[x y] (last(take (inc y) x)))","user":"54f3e216e4b050824f58f5cc"},{"code":"(fn n [lst arg]\n  (if (= arg 0)\n    (first lst)\n    (n (rest lst) (- arg 1))))","problem":21,"user":"512a7c70e4b0ff5c4bc1f99d"},{"code":"(fn nthItem [acoll n] (if (= 0 n) (first acoll) (nthItem (rest acoll) (- n 1))))","problem":21,"user":"4e6a79ca535d8ccf87e9feeb"},{"code":"#(-> (inc %2) (take %1) (last))","problem":21,"user":"52761edae4b03e8d9a4a74d4"},{"problem":21,"code":"(fn [s n]\n  (if (= n 0)\n    (first s)\n    (recur (next s) (- n 1))))","user":"5935b010e4b04f87174def55"},{"problem":21,"code":"(fn [ll, x] (last (take (inc x) ll)))","user":"543b12cce4b032a45b86932a"},{"code":"(fn [s, i] (first (nthrest s i)))","problem":21,"user":"52d1a29fe4b0d9f9285948e0"},{"code":"(fn foo [x n] (if (= 0 n) (first x) (recur (rest x) (dec n))))","problem":21,"user":"4ef19836535dced4c769f217"},{"problem":21,"code":"#(\n  if (zero? %2) \n  \t(first %1)\n  (recur (rest %1) (dec %2)))","user":"5e7f075ee4b085ba37836e36"},{"code":"(fn [coll index] (first (drop index coll)))","problem":21,"user":"4fe84c74e4b07c9f6fd12c3c"},{"problem":21,"code":"#(loop [ve %1 i %2] (if (= i 0) \n                      (first ve) \n                      (recur (rest ve) (dec i ))\n                      ))","user":"589dd2cce4b02bd94d917e48"},{"code":"(fn [s n]\n  (if (<= n 0) (first s)\n      (first (reverse (take n (rest s))))))","problem":21,"user":"50c336dde4b00e537d002542"},{"code":"(fn xth [i x] (if (= 0 x) (first i) (xth (rest i) (- x 1))))","problem":21,"user":"5338c965e4b0e30313ee6ca0"},{"problem":21,"code":"(fn [x y]\n  (if (= 0 y)\n    (first x)\n    (recur (rest x) (- y 1))))","user":"5490a24be4b0b312c081ff33"},{"problem":21,"code":"(fn nth-el [l index] (if (= index 0) (first l) (recur (rest l) (- index 1))))","user":"5f838122e4b01aacbe7a2715"},{"code":"#(first (last (take (inc %2) (iterate next %1))))","problem":21,"user":"4e690ace535d8ccf87e9fe95"},{"problem":21,"code":"(fn [coll number]\r\n  (last (take (inc number) coll)))","user":"60c06c14e4b0e0fa5f1b42a1"},{"problem":21,"code":"#(get(vec %1) %2)","user":"5655d264e4b0f9d632dd8499"},{"code":"(fn [l index] \n  ((fn mynth [items index current]\n    (if (= index current)\n      (first items)\n      (mynth (rest items) \n             index \n             (+ current 1))))\n  l index 0))","problem":21,"user":"53401430e4b085b17e897da4"},{"code":"(fn [x y] (loop [mx x my y]\n             (if (= 0 my)\n               (first mx)\n               (recur \n                (rest mx)\n                (- my 1)))))","problem":21,"user":"53410c24e4b00652c8746eca"},{"problem":21,"code":"(fn myNth [collection n]\n  (if (= n 0)\n   \t(first collection)\n    (myNth (rest collection) (- n 1))))","user":"5ba167bfe4b0a20761a233a0"},{"code":"(fn [coll n]\n  (first (reverse (take (inc n) coll))))","problem":21,"user":"4f4ba29ae4b03ad3f0c10c7a"},{"code":"(fn [seqn n] (first (nthnext seqn n)))","problem":21,"user":"52c0e3d1e4b07a9af5792358"},{"code":"(fn [s p]\n        (loop [t s, cnt p]\n          (if (zero? cnt)\n         \t(first t)\n            (recur (next t) (dec cnt))\n           )))","problem":21,"user":"51eb0374e4b0f1f103a0d156"},{"problem":21,"code":"(fn [sequ n] (last (take (+ n 1) sequ)))","user":"5b102ab8e4b0cc2b61a3be19"},{"code":"(fn [coll index]\n\t(first (drop index coll)))","problem":21,"user":"51205867e4b0e88f5a20c40f"},{"problem":21,"code":"(fn [xs n]\n   (if (zero? n)\n     (first xs)\n     (recur (next xs) (dec n))))","user":"56dc34a3e4b0ea9b8538f816"},{"code":"#( if (= 0 %2) (first %1) (recur (rest %1) (- %2 1)))","problem":21,"user":"539c9e26e4b0b51d73faaf2e"},{"code":"(fn [m x] (second (take-nth x m)))","problem":21,"user":"4f280b9ae4b0d6649770a011"},{"problem":21,"code":"(fn asdf [x y] (if (= y 0) (first x) (asdf (rest x) (- y 1))))","user":"5a3c2a08e4b001c08efc0cdf"},{"problem":21,"code":"(fn f [x n] (get (vec x) n))","user":"5778ccf7e4b0979f89651669"},{"problem":21,"code":"(fn [ myseq index ] (last (take (+ index 1) myseq)))","user":"5a781494e4b013a48d399766"},{"code":"(fn nth-item [l nthi] (if (= nthi 0) (first l) (nth-item (rest l) (- nthi 1))))","problem":21,"user":"52d6889ae4b09f7907dd1361"},{"problem":21,"code":"(fn\n  [coll n]\n  (loop [new-coll coll\n         limit n]\n    (if (= 0 limit)\n      (first new-coll)\n      (recur (rest new-coll) (dec limit)))))","user":"5dd65ea4e4b0948ae9d9ad7f"},{"problem":21,"code":"(fn [col n]\n\t(\n     cond\n      (= n 0) (first col)\n      (= (count col) (+ n 1)) (last col)\n  \t  :else (recur (drop-last col) n)\n    )\n)","user":"55f7a03de4b06e875b46ceae"},{"problem":21,"code":"(fn[& args](first (last (apply split-at (reverse args)))))","user":"564f3af6e4b0284900eef6a9"},{"code":"(fn [coll index] \r\n  (loop [h (first coll) t (rest coll) i 0] \r\n    (if (= i index)\r\n      h \r\n      (recur (first t) (rest t) (inc i)))))","problem":21,"user":"5033a1fbe4b062bc5d7ae155"},{"code":"(comp first (partial apply drop) reverse list)","problem":21,"user":"4ece7617535d23f03622770c"},{"problem":21,"code":"(fn \n  [given-list given-integer]   \n  (if (= 0 given-integer)\n      (first given-list)\n      (recur (rest given-list) (dec given-integer))))","user":"5c34f7efe4b0d62ef62d9f5b"},{"problem":21,"code":"(fn [ls ind]\n  (cond\n   (or (empty? ls) (< ind 0)) false\n   (= ind 0) (first ls)\n    :else (recur (rest ls) (- ind 1))))","user":"59643a21e4b066ee0a44b0df"},{"problem":21,"code":"(fn\n  [xs n]\n  (if (> n 0)\n    (recur (rest xs) (dec n))\n    (first xs)))","user":"550ccb18e4b06e50f9beb157"},{"code":"(fn mynth [l n] (if-not (= n 0) (mynth (rest l) (- n 1)) (first l)))","problem":21,"user":"4fb3fec7e4b081705acca2a7"},{"problem":21,"code":"(fn [coll nth-elem]\n  (loop [stack coll\n         index 0]\n    (if (= index nth-elem)\n      (first stack)\n      (recur (rest stack) (+ 1 index)))))","user":"562c2fc2e4b058fa18c5a6d7"},{"code":"(fn [a b] (first (nthnext a b)))","problem":21,"user":"4dcc024e535d5973398f928f"},{"problem":21,"code":"(fn htn [coll n]\n  (loop [h (first coll)\n         t (rest coll)\n         i n]\n    (if (= i 0)\n      h\n      (recur (first t) (rest t) (- i 1)))))","user":"5947c6a6e4b07ddc2dafada7"},{"problem":21,"code":"(fn [c, n] (if (zero? n) (first c) (recur (rest c) (dec n))))","user":"51e8736ae4b006d205356a4f"},{"code":"(fn n([a b](if(= b 0)(first a)(n(rest a)(- b 1)))))","problem":21,"user":"4ee908ae535d93acb0a66889"},{"problem":21,"code":"(fn [x n]\n  (if (= n 0)\n    (first x)\n    (recur (next x) (dec n))))","user":"568f0db0e4b0dcc4269f40dd"},{"code":"(fn [lst n]\r\n  (if (= n 0)\r\n    (first lst)\r\n    (recur (rest lst) (- n 1))))","problem":21,"user":"4db342d7535df7e46ed9b6cd"},{"problem":21,"code":"(fn [xx n] (if (= n 0) (first xx) (recur (rest xx) (- n 1))))","user":"564cc055e4b0284900eef676"},{"problem":21,"code":"(fn [li n]\n  \t(if (= 0 n)\n      (first li)\n      (recur (rest li) (dec n))))","user":"5a0c3546e4b04bbd27e6d9a5"},{"problem":21,"code":"#(cond\n   (= % '()) nil\n   (= %2 0) (first %)\n   :else (recur (rest %) (- %2 1))\n  )","user":"5de707a5e4b0986d99407f73"},{"code":"(fn [coll n]\n  (get (vec coll) n))","problem":21,"user":"4f165655535d64f60314644a"},{"code":"(fn my-nth [s, n]\n  (if (= 0 n)\n    (first s)\n    (my-nth (rest s) (- n 1))))","problem":21,"user":"51b89503e4b050a1176cd69a"},{"problem":21,"code":"(fn [seq n] (loop [coll seq num n] (if (= 0 num) (first coll) (recur (rest coll) (dec num)))))","user":"586d2f5be4b01531a375e98c"},{"problem":21,"code":"(fn [x y] (first (drop y x ) ))","user":"53b33217e4b047364c0444a4"},{"problem":21,"code":"(fn [s n]\n  (loop [sequence s\n         number n]\n\t(if (= 0 number)\n      (first sequence)\n      (recur (rest sequence) (- number 1)))))","user":"5a21a5ace4b0ff51aa4b32b4"},{"problem":21,"code":"(fn [seq n]\n  (loop [i n \n         s seq]\n    (if (zero? i)\n      (first s)\n      (recur (- i 1)\n             (rest s)))))","user":"53b88e6ee4b047364c0444de"},{"problem":21,"code":"(fn get [xs i]\n  (if (<= i 0) (first xs) (get (rest xs) (dec i))))","user":"5a74c344e4b0512ff01cdabe"},{"code":"(fn [lst n] (loop [cnt n rng lst]\n            (if (= cnt 0) (first rng)\n              (recur (dec cnt) (rest rng)))))","problem":21,"user":"52e59ca5e4b09f7907dd1464"},{"problem":21,"code":"(fn mynth [s n]\n  (if (= n 0)\n    (first s)\n    (mynth (rest s) (dec n))))","user":"5b4ca13ce4b02d533a91bcac"},{"problem":21,"code":"(fn nt [xs n] \n  (if (zero? n)\n    (first xs)\n    (nt (rest xs) (- n 1))))","user":"5cd7cac9e4b0ccb06196294f"},{"code":"(fn [collection position]\n  \t(.get collection position))","problem":21,"user":"50f87a67e4b0aafb827eb202"},{"problem":21,"code":"#(loop [cnt %2 lst %] (if (zero? cnt) (first lst) (recur (dec cnt) (rest lst))))","user":"555881f5e4b0deb715856e2c"},{"problem":21,"code":"(fn [col idx] (first (drop idx col)))\n\n\n; old (fn [col idx] (first (last (split-at idx col))))","user":"5852fb64e4b0b7285a6f4ebd"},{"code":"(fn [lst, el] (.get lst el))","problem":21,"user":"52278430e4b0186687e23a50"},{"problem":21,"code":"(fn[li n] (loop[i 0\n                 l li] (if (>= i n)\n                       (first l)\n                       (recur (inc i) (rest l))\n                       )))","user":"5e4375e7e4b01d43a70e8e73"},{"problem":21,"code":"(fn [xs n]\n  (last (take (+ n 1) xs)))","user":"54288375e4b01498b1a71b32"},{"problem":21,"code":"(fn myrest[x n] \n  (if (= n 0)\n    (first x)\n    (myrest (rest x) (- n 1))\n    )\n  )","user":"53ca23e3e4b00fb29b2212c6"},{"problem":21,"code":"(fn [l n]\n  (loop [l- l n- n]\n    (if (= n- 0)\n      (first l-)\n      (recur (rest l-) (- n- 1)))))","user":"558b50d5e4b027778923762b"},{"code":"(fn [x n] (if (= 0 n) \n  (first x) \n  (recur (rest x) (dec n))))","problem":21,"user":"4f040bbf535dcb61093f6b95"},{"problem":21,"code":"(fn get-n [the-list n]\n  (if (= n 0) (first the-list)\n    (get-n (rest the-list) (dec n))))","user":"56278266e4b00e49c7cb47d3"},{"code":"(fn [x y]\n  (if (= y 0)\n    (first x)\n    (recur (rest x) (dec y))))","problem":21,"user":"51f13b80e4b06a20a2523f38"},{"problem":21,"code":"(fn my-nth [coll n]\n  (loop [loop-coll coll\n         i 0\n         loop-n n]\n    (if (< i n)\n      (recur (rest loop-coll) (inc i) loop-n)\n      (first loop-coll))))","user":"5b2c76c8e4b025bcb146f2b6"},{"code":"(fn nth-el [x n]\n                 (if (= n 0)\n                   (first x)\n                   (recur (rest x) (dec n))))","problem":21,"user":"4e6a11ee535d8ccf87e9fe9f"},{"code":"(fn [lst n]\n  (if (= 0 n)\n    (first lst)\n    (recur (rest lst) (- n 1))))","problem":21,"user":"50b11fbce4b009df37c708cb"},{"code":"(fn [list index] (first (drop index list)))","problem":21,"user":"5156ead4e4b04360f2428e6c"},{"code":"(fn [lelist n] (last (take (+ n 1) lelist)   ))","problem":21,"user":"5242d5c3e4b076204b44fa95"},{"problem":21,"code":"(fn [list n]\n  \t(if (= 0 n)\n      (first list)\n      (recur (rest list) (- n 1))\n      )\n  )","user":"5736b126e4b0cd1946bd1037"},{"code":"#(loop [n %2 coll %]\n  (if (zero? n)\n      (first coll)\n      (recur (dec n) (next coll))))","problem":21,"user":"4fd96694e4b05e33b9224f37"},{"problem":21,"code":"(fn [el i] (get (vec el) i))","user":"5489dd4de4b0e286459a11ef"},{"code":"(fn [x N] (if (<= N 0) (first x) (recur (rest x) (- N 1))))","problem":21,"user":"51ac61c8e4b09397d510976b"},{"problem":21,"code":"(fn my-nth [coll n]\n  (loop [tail coll\n         index 0]\n    (cond\n      (empty? tail) nil\n      (= index n) (first tail)\n      :else (recur (rest tail) (inc index)))))","user":"5ddc2ba7e4b0948ae9d9adba"},{"problem":21,"code":"(fn nt[s n] (if (= 0 n)\n             (first s)\n             (nt (next s) (- n 1))\n              ))","user":"5731e36be4b0cd1946bd0fc9"},{"code":"#(loop [counter 0\n        coll %1]\n    (if (= counter %2)\n      (first coll)\n      (recur (inc counter) (next coll))))","problem":21,"user":"5187dd2ce4b057e3860ab7e3"},{"code":"(fn give-nth [x monesko] \n  (first (nthnext x monesko))\n)","problem":21,"user":"50b32252e4b03ea880433568"},{"problem":21,"code":"(fn nthelement [coll n] (first (drop n coll)))","user":"58866b4fe4b0f1effa3b76d4"},{"code":"(fn [s n] (if (= 0 n) (first s) (recur (next s) (dec n)\n)))","problem":21,"user":"50b24a2fe4b03ea88043355c"},{"problem":21,"code":"(fn ene-elem [x y] (first (drop y x)))","user":"55ca27b9e4b0e31453f649f7"},{"code":"(fn [coll, x] (first (drop x coll)))","problem":21,"user":"504dff92e4b078edc5f5938a"},{"problem":21,"code":"(fn([s e] (get (vec s) e)))","user":"560d2b53e4b05f002753df37"},{"code":"(fn [list x] (last (take (+ x 1) list)))","problem":21,"user":"4dadc6f2c9a9d6ed4099dc57"},{"problem":21,"code":"(fn f\n  [s n]\n  (if (zero? n) (first s)\n    (f (rest s) (dec n))))","user":"56df636ae4b0ca2494a095f4"},{"problem":21,"code":"(fn\n  [xs n]\n  (if (= 0 n)\n    (first xs)\n    (recur (rest xs) (dec n))))","user":"54d2892fe4b0e8a36923e5f7"},{"code":"(fn [x y] (loop [lista x ind 0] (if (= ind y) (first lista) (recur (rest lista) (inc ind)))))","problem":21,"user":"5233564ae4b0f0b72fabf403"},{"code":"(fn [col n]\n  (first (drop n col)))","problem":21,"user":"4ecc8dea535d23f0362276fd"},{"problem":21,"code":"(fn get-nth [coll n] \n  (if (= n 0) \n    (first coll)\n    (get-nth (rest coll) (dec n))))\n\n; Great!\n;\n; #(first (drop %2 %1))","user":"5eccc5c2e4b016b56eae058f"},{"problem":21,"code":"(fn\n  [x n]\n  (loop [cn 0 cx x]\n    (if (= cn n)\n      (first cx)\n      (recur (inc cn) (rest cx))\n      )\n    )\n  )","user":"57f55632e4b0903ccab3dcf1"},{"code":"(fn a [v n] (if-not (= n 0) (a (rest v) (- n 1)) (first v)))","problem":21,"user":"4e8dbab3535d65386fec2139"},{"problem":21,"code":"(fn [coll n]\n  (loop [c coll cur 0]\n    (if (= cur n)\n      (first c)\n      (recur (rest c) (inc cur)))))","user":"55d3780ee4b0e31453f64a66"},{"problem":21,"code":"(fn [s n]\n  (if (= n 0)\n    (first s)\n    (recur (next s) (- n 1))\n  ))","user":"56c9970ce4b0ed865f9758de"},{"problem":21,"code":"(fn snd-nth [lst n]\n  (if (= n 0)\n    (first lst)\n    (recur (rest lst) (dec n))))","user":"5e47e1eee4b043cd24807a35"},{"problem":21,"code":"(fn thing [lists n] (if (= n 0 ) (first lists) (thing (rest lists) (dec n))))","user":"55625903e4b0c656e3ff17d7"},{"code":"(fn indexn [x y] (get (vec x) y))","problem":21,"user":"532727bae4b09d4e7a9b54fa"},{"code":"(fn [c index] (first (nthnext c index)))","problem":21,"user":"527b8ed7e4b03e8d9a4a758f"},{"problem":21,"code":"(fn getNth [inputseq N]\n   (if (= 0 N)\n     (first inputseq)\n     (getNth (rest inputseq) (dec N))))","user":"5db9fb8ae4b010eb3c36cd5a"},{"problem":21,"code":"(fn gn ([lst idx] (if (= idx 0) (first lst) (gn (rest lst) (dec idx)))))","user":"550fd845e4b06e50f9beb17c"},{"problem":21,"code":"(fn [lst n] \n  (loop [counter 0 lst-iter lst]\n    (if (= counter n) \n      (first lst-iter)\n      (recur (inc counter) (rest lst-iter)))))","user":"5965a773e4b069c0a1a1978a"},{"code":"(fn [x i] \n  (if (zero? i)\n    (first x)\n    (recur (rest x) (dec i))))","problem":21,"user":"4f6b9d0ae4b07046d9f4efad"},{"code":"(fn [ls n]\n  ((fn rec [ls-rec counter]\n    (cond\n     \t(= counter n) (first ls-rec)\n     \t:else (rec (next ls-rec) (+ 1 counter))\n     )\n  ) ls 0)\n)","problem":21,"user":"516fc530e4b0b86e66597f00"},{"problem":21,"code":"(fn\n  [sq n]\n  (first (drop n sq)))","user":"570243e2e4b08d47c97781dd"},{"problem":21,"code":"(fn [s n]\n  (let [l (count s)]\n    (loop [s s]\n      (if (= (- l n 1) (count (rest s)))\n        (first s)\n        (recur (rest s))))))","user":"5bc09ebae4b07a9b28b10005"},{"problem":21,"code":"(fn enth\n  ([xs n] (if (= 0 n) (first xs) (enth (rest xs) n 1)))\n  ([xs n i] (if (= i n) (first xs) (enth (rest xs) n (+ i 1)))))","user":"59d9e66ae4b0ef0a1e9b5c60"},{"problem":21,"code":"(fn [seq idx]\n  (loop [idx idx\n         seq seq]\n    (if (= idx 0)\n      (first seq)\n      (recur\n       (dec idx)\n       (rest seq)))))","user":"576c2ecae4b07c67f59d1fbb"},{"code":"(fn my-nth [coll n]\n  (if (= 0 n)\n    (first coll)\n    (my-nth (rest coll) (- n 1))))","problem":21,"user":"5101b52ce4b0a79bcc8c0e0f"},{"code":"(fn\n  [coll i]\n  (cond \n    (zero? i) (first coll)\n    (= 1 i) (second coll)\n    :else (recur (rest coll) (dec i))))","problem":21,"user":"4fea7594e4b0140c20fb9c06"},{"problem":21,"code":"(fn nieme[x y] (last (take(+ y 1) x)))\n;(fn [list idx] (last (take (+ idx 1) list)))","user":"5fbf8a86e4b0edf42a5593bf"},{"code":"(fn nth-element\n  [seq idx]\n  (loop [s (rest seq) index idx el (first seq)]\n    (if (= index 0) el\n      (recur (rest s) (dec index) (first s)))))","problem":21,"user":"50651de3e4b0b1b6c8b1d85f"},{"code":"(fn eat [col n]\n  (if (= n 0)\n(first col)\n(eat (rest col) (- n 1)))\n)","problem":21,"user":"4e8a1bd8535d3e98b8023291"},{"code":"(fn [l n]\n  (loop [l l n n]\n    (cond (empty? l) ()\n          (> n 0) (recur (rest l) (- n 1))\n          :else (first l))))","problem":21,"user":"4e5a66d3535d8a8b8723a2ad"},{"problem":21,"code":"(fn [x n] (last (first (split-at (+ n 1) x))))","user":"55807091e4b05c286339e0eb"},{"code":"(fn [col x]\n  (first (nthnext col x))\n  )","problem":21,"user":"51eb3aace4b0f1f103a0d159"},{"problem":21,"code":"(fn a [li n] (first (reverse (take (+ n 1) li) )))","user":"5439bd25e4b032a45b869322"},{"problem":21,"code":"(fn mth [arr m]\n  (if (zero? m)\n    (first arr)\n  \t(mth (rest arr) (- m 1))))","user":"545801f6e4b01be26fd74615"},{"problem":21,"code":"(fn [lst, n] (last (take (+ n 1) lst)))","user":"54361d92e4b032a45b8692f7"},{"code":"(fn my-nth[coll n]\n  (cond \n    (> n (count coll)) nil\n    (= 0 n) (first coll)\n    :default (my-nth (rest coll) (dec n))))","problem":21,"user":"529a73bde4b02ebb4ef75096"},{"problem":21,"code":"(fn [l p] (if (= p 0)\n            (first l)\n            (recur (rest l) (- p 1))))","user":"55ee894de4b0121d4835fdf1"},{"code":"(fn\n  [string i]\n    (loop\n      [s string\n        i i]\n        (if (= 0 i) \n(first s) (recur (rest s) (dec i)))))","problem":21,"user":"50989786e4b04e098a4c7274"},{"problem":21,"code":"(fn nth-element [list n]\n  (if (= n 0)\n    (first list)\n    (recur (rest list) (dec n))))","user":"55fb5b89e4b0f488688e0662"},{"problem":21,"code":"(fn nth_[l n]\n  (if (= n 0)\n    (first l)\n    (recur (next l) (- n 1))))","user":"5929a5f2e4b072a2710fcf09"},{"problem":21,"code":"(fn [list idx](last(take (+ idx 1) list)))","user":"540f8bcfe4b01498b1a71996"},{"problem":21,"code":"(fn my-nth\n  ([coll idx]\n   (my-nth coll idx 0))\n  ([coll idx curr] (if (= curr idx) (first coll) (my-nth (rest coll) idx (+ curr 1)))))","user":"5dcbe1d7e4b02b31cc3da3bf"},{"problem":21,"code":"(fn [count sequence index] (if (= count index) (first sequence) (recur (inc count) (rest sequence) index))) 0","user":"5f184a46e4b091ba50b4dbd4"},{"problem":21,"code":"(fn get-nth [l n] (let [s (seq l)] (cond\n                   (< n 1) (first s)\n                   (> n 0) (get-nth (rest s) (- n 1))\n                                      )))","user":"58f7264be4b0438e51c2cf0c"},{"problem":21,"code":"(fn [c n] (last (take (+  n 1) c )) )","user":"55a31c66e4b0acc240e31530"},{"code":"(fn f [col n] (cond (= 0 n) (first col) :else (f (rest col) (- n 1))))","problem":21,"user":"506aa040e4b05d3b7762c749"},{"problem":21,"code":"(fn n1 [xs n] \n  \t(if (= n 0) \n      (first xs) \n      (last (take (+ n 1) (cycle xs)))))","user":"54bfd0dee4b0ed20f4ff6f0a"},{"code":"(fn enth [s n] (loop [cnt n sq s] (if (zero? cnt) (first sq) (recur (dec cnt) (rest sq)))))","problem":21,"user":"4f856171e4b033992c121c42"},{"code":"(fn [items\n     n]\n  (loop [my-seq items\n         index 0]\n    (if (= index n)\n      (first my-seq)\n      (recur (rest my-seq) (inc index)))))","problem":21,"user":"51508efce4b0c51f0585bbb4"},{"problem":21,"code":"(fn [sq n] (-> n,(+ 1),(take sq), last))","user":"5c395c65e4b0d62ef62d9f8a"},{"problem":21,"code":"(fn\n  [l x]\n  (loop\n    [l l\n     x x]\n    (if (= x 0)\n      (first l)\n      (recur (rest l) (- x 1)))))","user":"56b09f9ce4b0982f16b37ddc"},{"problem":21,"code":"#(loop [n %2 l %] (if (zero? n) (first l) (recur (dec n) (rest l))))","user":"54349368e4b0b6b47310fcf1"},{"problem":21,"code":"(fn f [lst n] \n  (if (= n 0)\n    (first lst)\n    (f (rest lst) (- n 1))))","user":"5a74bf3ae4b0512ff01cdabd"},{"problem":21,"code":"(fn _nth[s n] (if (= 0 n) (first s) (_nth (rest s) (- n 1))))","user":"55fb58b2e4b0f488688e0661"},{"code":"(fn [x n] (first (drop n x )))","problem":21,"user":"4eeccfc0535d93acb0a668b5"},{"code":"#(last\n  (take\n   (+ 1 %2) %1))","problem":21,"user":"5356069be4b04ce2eb3ed260"},{"code":"(fn [x y] (first (last (split-at y x))))","problem":21,"user":"4ff10dd2e4b0678c553fc32a"},{"code":"(fn [v n] (get (into [] v) n \"unknown\") )","problem":21,"user":"508e20b3e4b0f17d83ea26c8"},{"problem":21,"code":"(fn f [l i] (if (<= i 0) (first l) (f (rest l) (- i 1))))","user":"5ee2b376e4b029a2061bbe81"},{"code":"(fn mynth [sq i] (if (= 0 i) (first sq) (mynth (rest sq) (- i 1))))","problem":21,"user":"4e663855535d8ccf87e9fe76"},{"code":"#(aget (to-array %1) %2)","problem":21,"user":"512547a3e4b05d10e3e395f4"},{"problem":21,"code":"(fn [xs index] (first (take 1 (drop index xs))))","user":"5920c191e4b09b4ee5954c61"},{"problem":21,"code":"(fn my_nth [data index]\n  (if (= index 0)\n    (first data)\n    (my_nth (rest data) (- index 1))\n  )\n)","user":"580e2941e4b0849f6811b74e"},{"code":"(fn mynth [coll n]\n  (loop [my-coll (seq coll)\n         my-n n]\n    (if (> my-n 0)\n      (recur (next my-coll) (- my-n 1))\n      (first my-coll))))","problem":21,"user":"4e4e5b91535dc968683fc4e5"},{"problem":21,"code":"(fn nth-element [s i]\r\n  (if (= i 0)\r\n    (first s)\r\n    (nth-element (rest s) (- i 1))))","user":"56602649e4b068f2fe63dc47"},{"code":"(fn [coll idx]\n  (if (= idx 0)\n    (first coll)\n    (recur (rest coll) (dec idx))))","problem":21,"user":"51b965dde4b0e871ca495905"},{"code":"(fn [seq idx] (if (= idx 0) (first seq) (recur (rest seq) (- idx 1))))","problem":21,"user":"4e580746535d8a8b8723a28c"},{"problem":21,"code":"(fn [seq ele] (last (take (+ 1 ele) seq)))","user":"56cfcb5be4b0ea9b8538f770"},{"code":"(fn my-nth [list ind]\n  (cond\n   (empty? list) nil\n   (= ind 0) (first list)\n   :else (my-nth (rest list) (dec ind))))","problem":21,"user":"5170643ee4b004f79986ad89"},{"problem":21,"code":"(fn \n  [arr x] \n  (first (drop x arr)))","user":"5f72f144e4b02876ed9fd093"},{"code":"(fn[c p]\n  (loop [coll c pos p]\n    (if (zero? pos)\n        (first coll)\n        (recur (rest coll) (dec pos)))))","problem":21,"user":"4fc18846e4b081705acca331"},{"code":"(fn ([coll n] (if ( = (- (count coll) 1) n) (last coll) (recur (butlast coll) n))))","problem":21,"user":"4de8fb73535d08e6dec9fdff"},{"code":"(fn [c i] \n  (loop [j i\n         res c]\n         (if (> j 0)\n            (recur (dec j) (rest res))\n            (first res))))","problem":21,"user":"4e8a0d5d535d3e98b802328e"},{"problem":21,"code":"(fn [s n]                                    \n  (loop [c s                                                                   \n         i 0]                                                                  \n    (if (= i n)                                                                \n      (first c)                                                                \n      (recur (rest c) (inc i)))))","user":"593dde1be4b069cdc2982baf"},{"problem":21,"code":"(fn nth-elt [x y]\n  (if (= y 0)\n    (first x)\n    (nth-elt (next x) (- y 1))))","user":"566e3af2e4b0a866af6896d5"},{"code":"(fn f [s n]\n  (if (= n 0)\n    (first s)\n    (f (rest s) (- n 1))))","problem":21,"user":"4f038484535dcb61093f6b07"},{"problem":21,"code":"(fn [l n]\n  (loop [ll l i 0]\n    (if (= i n)\n      (first ll)\n      (recur (rest ll) (inc i))\n      )\n    )\n  )","user":"578b140be4b0ebec4cfb7545"},{"problem":21,"code":"(fn [x y] (first ((fn gn [l i] \n             (if (= i 0) l (rest  (gn l (- i 1))))) x y)))","user":"5be22881e4b0ed4b8aab4cb2"},{"problem":21,"code":"(fn [some-list index] (last (take (inc index) some-list)))","user":"5bd71aefe4b0ed4b8aab4bb5"},{"code":"(fn f [l n] (cond (> n 0) (f (rest l) (- n 1)) :else (first l)))","problem":21,"user":"51b903b8e4b050a1176cd6a1"},{"code":"#(get(vec %)%2)","problem":21,"user":"520cc6b6e4b0b022ef140c9c"},{"problem":21,"code":"(fn func [x n] (if (= 0 n) (first x) (func (rest x) (- n 1))))","user":"5512967ee4b06e50f9beb1ae"},{"problem":21,"code":"#(loop [lst %1\n        idx %2]\n    ; If count reaches 0 then exit the loop and return sum\n    (if (= idx 0)\n      (first lst)\n      (recur (rest lst) (dec idx))))","user":"6076fd1ae4b069485764de67"},{"problem":21,"code":"(fn [coll n] \n               (first(drop n coll))\n               \n               )","user":"567c48e6e4b05957ce8c61b8"},{"code":"(fn blah[coll n] (first (drop n coll)))","problem":21,"user":"4fa2b650e4b0dcca54ed6d6a"},{"code":"(fn [coll idx] (first (last (take (inc idx) (iterate rest coll)))))","problem":21,"user":"52d885afe4b09f7907dd1398"},{"problem":21,"code":"(fn [l n] (loop [li l i 0]\n            (if (= i n)\n              (first li)\n              (recur (rest li) (inc i)))))","user":"55f2b42be4b06e875b46ce4a"},{"code":"(fn [lst x]\n  (first (drop x lst)))","problem":21,"user":"52f2b450e4b05e3f0be25efd"},{"code":"(fn [array input] \n  (if (= input 0)\n    (first array)\n    (recur (rest array) (dec input))))","problem":21,"user":"53438d3ee4b084c2834f4a20"},{"problem":21,"code":"(fn [vs n]\n       (if (= 0 n)\n         (first vs)\n         (recur (rest vs) (dec n))))","user":"54ef4a1ee4b024c67c0cf883"},{"problem":21,"code":"(fn [l,n] (loop [ll l, nn n] (if (zero? nn) (first ll) (recur (rest ll) (dec nn)))))","user":"56c50599e4b05cc29241ee9e"},{"code":"(fn rec [ls n]\n  (if (= n 0 )\n    (first ls)\n    (rec (rest ls) (dec n))))","problem":21,"user":"521a4ff5e4b0c4ef0be83004"},{"code":"#(loop [index 0\n        current-list %1]\n   (if (= index %2)\n     (first current-list)\n     (recur (inc index) (rest current-list))))","problem":21,"user":"531c7f0de4b08068f379eda4"},{"code":"(fn [l, n] (get (vec l) n))","problem":21,"user":"528ae11fe4b0239c8a67ae87"},{"problem":21,"code":"(fn en [l i] (if (= i 0) (first l) (en (rest l) (- i 1))))","user":"5fab7ea6e4b08cb800c85ad8"},{"problem":21,"code":"(fn [li index] ((vec li) index))","user":"59175adde4b09b4ee5954b9a"},{"code":"(fn [a x] (if (= 0 x) (first a) (recur (rest a) (- x 1))))","problem":21,"user":"524c746ee4b09eba1c022408"},{"code":"(fn [seq, n] (get (vec seq) n))","problem":21,"user":"538c3424e4b0b51d73faae58"},{"problem":21,"code":"(fn [aSeq, value] (#(.get aSeq value)))","user":"548018e3e4b0c51c1f4d7331"},{"code":"(fn [l n]\r\n  (if (zero? n)\r\n    (first l)\r\n    (recur (rest l) (dec n))))","problem":21,"user":"4dd29ede535dae65d5c462da"},{"problem":21,"code":"#(loop [col %1 n %2]\n    (if (zero? n) \n      (first col)\n      (recur (rest col) (dec n))) \n    )","user":"5e44c804e4b01d43a70e8e89"},{"code":"(fn [coll n]\n  (loop [lst coll m n]\n    (if (= m 0)\n      (first lst)\n      (recur (rest lst) (dec m)))))","problem":21,"user":"523f1245e4b01c266ffa7f95"},{"problem":21,"code":"(fn [coll idx]\n  (->> coll\n    (map-indexed vector)\n    (filter #(= idx (first %))) \n    first\n    second))","user":"5a065388e4b01bb0ae8afdcb"},{"problem":21,"code":"(fn toto [x n] (if (= n 0) (first x) (toto (rest x) (- n 1))))","user":"57d55f87e4b0bd073c2023b1"},{"code":"(fn [coll, n]\n (loop [i 0, v coll]\n   (if (= i n)\n     (first v)\n     (recur (inc i) (rest v)))))","problem":21,"user":"51583ee4e4b0a069fd272c72"},{"code":"(fn [x y]\n    (peek (vec (take (+ y 1) x)))\n)","problem":21,"user":"4e94a9e7535dbda64a6f6b1d"},{"problem":21,"code":"#( (comp first (partial drop %2)) %1 )","user":"54e51c7be4b024c67c0cf7f7"},{"code":"(fn [l index]\n  (let [v (vec l)]\n    (get v index)))","problem":21,"user":"5152ceeee4b001f44f99bff1"},{"code":"(fn[a-seq idx] (first (drop idx a-seq)))","problem":21,"user":"4e58bcd4535d8a8b8723a296"},{"problem":21,"code":"(fn [coll i]\n   (loop [k 0 c coll]\n     (if (< k i)\n       (recur (inc k)\n              (rest c))\n       (first c))))","user":"569f4dabe4b0542e1f8d1491"},{"problem":21,"code":"(fn myNth [l n] (if (= n 0) (first l) (myNth (rest l) (- n 1))))","user":"54d95ce8e4b024c67c0cf74a"},{"problem":21,"code":"(fn mynth [list index]\n  (if (= 0 index)\n    (first list)\n    (mynth (rest list) (- index 1)))\n)","user":"5586f091e4b059ccff29b1dc"},{"problem":21,"code":"(fn foo\n  [arg n]\n  (if (zero? n) (first arg) (recur (rest arg) (dec n))))","user":"597f8c93e4b0dbe32238d0c1"},{"code":"#(second (take-nth %2 %))","problem":21,"user":"4f973fb9e4b0dcca54ed6ce8"},{"code":"(fn \n  [slist pos]\n  (if (= pos 0) (first slist) (recur (rest slist) (dec pos))))","problem":21,"user":"4eee3e6a535d93acb0a668c3"},{"problem":21,"code":"#( loop  [ x 0 lst %1 ]\n   ( if\n       ( = x %2 )\n          ( first lst )\n          ( recur ( inc x ) ( rest lst ) ) ) )","user":"575ec102e4b08062f99a4e71"},{"code":"(fn [c n] (first (nthnext c n)))","problem":21,"user":"4e21d76a535d04ed9115e81a"},{"problem":21,"code":"(fn [arr n]\n  (if (= n 0)\n    (first arr)\n    (recur (rest arr) (dec n))))","user":"524e9079e4b0541d1855b7e3"},{"code":"(fn [coll idx]\r\n  (loop [x 0 colx coll]\r\n    (if (< x idx)\r\n      (recur (inc x) (next colx))\r\n      (first colx))))","problem":21,"user":"4dbd72d0535d020aff1edf43"},{"code":"(fn nnth [seq n] (if (zero? n) (first seq) (nnth (rest seq) (dec n))))","problem":21,"user":"517d03dee4b0f5e87c18f25d"},{"code":"(fn [lst, n] (get (vec lst) n))","problem":21,"user":"519a5880e4b022efe2b3ba93"},{"problem":21,"code":"(fn getNth [s x]\n  (if (= x 0)\n    (first s)\n    (getNth (rest s) (- x 1))))","user":"555f6215e4b0a2eb076a39c4"},{"problem":21,"code":"#( loop [seqs %1 index %2]\n   (if (= index 0)\n     (first seqs)\n     (recur (rest seqs) (dec index))))","user":"56c7d8dee4b0ed865f9758c9"},{"code":"(fn [x y] (.get x y)  )","problem":21,"user":"50e49d03e4b0cb9ec68fbca1"},{"problem":21,"code":"(fn [l d] (if (= d 0)\n                  (first l)\n                  (recur (rest l) (dec d))))","user":"56c6a3c3e4b05cc29241eeb3"},{"problem":21,"code":"(fn enth [l, n]\n  (if (= n 0)\n    (first l)\n    (enth (rest l) (- n 1))))","user":"5796d3ebe4b039eba2ecb0ee"},{"code":"#(loop [seq %1 n %2]\n  (if (zero? n)\n    (first seq)\n    (recur (rest seq) (dec n))))","problem":21,"user":"505a2f3be4b03d2efce48c5b"},{"problem":21,"code":"(fn [lat i]\n  (if (zero? i)\n    (first lat)\n    (recur (rest lat) (dec i))))","user":"57f7d381e4b0d3187e900906"},{"problem":21,"code":"(fn [x s]\n  (last (take (inc s) x)))","user":"5988f69fe4b021a7a535fec8"},{"problem":21,"code":"(fn [s n]\n  (loop [i n ss s]\n    (if (= i 0)\n      (first ss)\n      (recur (dec i) (rest ss)))))","user":"54ef51bde4b024c67c0cf884"},{"code":"(fn [col x] (last (take (+ x 1) col)))","problem":21,"user":"4f847bf2e4b033992c121c32"},{"problem":21,"code":"(fn number-at-index [coll index]\n  (if (= index 0)\n    (first coll)\n    (number-at-index (rest coll) (- index 1))))","user":"593870e6e4b02506e01a29d6"},{"code":"(fn toto [x y] (if (= y 0) (first x) (toto (rest x) (- y 1))))","problem":21,"user":"511ba290e4b00c2a1fa7ff70"},{"code":"(fn [l n] (loop [i n k l] (if (= i 0) (first k) (recur (- i 1) (rest k)))))","problem":21,"user":"511907a4e4b046de85f62a4d"},{"problem":21,"code":"#(->> %\n     (drop %2)\n      first)\n\n;#(loop [thing % index %2]\n;   (if (= index 0)\n;     (first thing)\n;     (recur (rest thing) (dec index))))","user":"56677192e4b04acd4f672dd5"},{"code":"(fn [alist index]\n  \n  (last (take (+ index 1) alist))\n  \n  )","problem":21,"user":"5388a55de4b0640c7a9a58a1"},{"problem":21,"code":"(fn nth2\n  [coll th] \n  (loop [ittr 0 col coll] \n    (if (>= ittr th)\n      (first col)\n      (recur (inc ittr) (rest col))\n      )\n    ))","user":"5c75a30ee4b0fca0c16227df"},{"code":"#(loop [s % i %2]\n\t(if (= i 0)\n\t\t(first s)\n\t\t(recur (rest s) (dec i))\n\t)\n)","problem":21,"user":"53858d5be4b06839e8705f06"},{"problem":21,"code":"(fn nt [s n] (if (= n 0) (first s) (nt (rest s) (- n 1))))","user":"5245e320e4b09dbe66b56177"},{"code":"(fn [x n]\n  (loop [x x n n]\n    (if (= n 0)\n        (first x)\n        (recur (rest x) (dec n)))))","problem":21,"user":"50ce09e6e4b0ffc302be4bc6"},{"code":"(fn [items n] (first (drop n items)))","problem":21,"user":"50bf6f93e4b0ffd967a66cbf"},{"code":"(fn [coll n]\n  (loop [c coll i n]\n    (if (zero? i)\n      (first c)\n      (recur (rest c) (dec i)))))","problem":21,"user":"4f043bbd535dcb61093f6bb2"},{"problem":21,"code":"(fn getnth [coll n] \n  (if (= n 0)\n    (first coll)\n  (getnth (rest coll) (- n 1))\n  )\n  )","user":"55a2bc36e4b0acc240e31528"},{"problem":21,"code":";; (fn [s n] (get (vec s) n))\n\n#(get (vec %1) %2)","user":"562ae733e4b00e49c7cb4836"},{"problem":21,"code":"(fn [coll item] \n  (last (take (inc item) coll)))","user":"53ea144ee4b036ad0777e4d1"},{"problem":21,"code":"(fn [li n] (get (into [] li) n))","user":"56040b64e4b0c80df0ca2653"},{"problem":21,"code":"(fn [x, n] ((vec x) n))","user":"56f6e096e4b08e7d20b96829"},{"problem":21,"code":"(fn [xs x]\n  (first ((apply comp (take x (repeat rest))) xs)))","user":"59644d2ae4b069c0a1a19764"},{"problem":21,"code":"(fn [li index]\n  (loop [li li\n         i 0]\n    (if (= i index)\n      (first li)\n      (recur (rest li) (+ 1 i)))))","user":"5d8211a6e4b0915913b1d37e"},{"code":"(fn [x n] ( (fn [x n i] (if (= n i) (first x) (recur (next x) n (inc i)))) x n 0))","problem":21,"user":"52abd555e4b0c58976d9ac7e"},{"problem":21,"code":"(fn   [col n]\n  (loop [current-index 0\n         curr-col col]\n    (cond\n      (= n current-index) (first curr-col)\n      :else\n      (recur (inc current-index) (rest curr-col))))\n  )","user":"5e300655e4b05b4b01516209"},{"problem":21,"code":"(fn [lst index]\n  (get (into [] lst) index))","user":"59a0235de4b0871e7608b82b"},{"code":"(fn [s n]\n (if (= 0 n)\n  (first s)\n  (recur (rest s) (- n 1))))","problem":21,"user":"4f584064e4b0a7574ea71846"},{"problem":21,"code":"; sequence index started at 0 \n; first solution : use first and drop\n; second solution : use last and take + (+1)\n\n;(fn [_seq index]\n; \t(first (drop index _seq)))\n           \n(fn [_seq index]\n \t(last (take (inc index) _seq)))","user":"5aa4bcc3e4b0d174b936c889"},{"problem":21,"code":"(fn mynth [x i] (if (= i 0) \n            \t(first x)\n            \t(mynth (rest x) (- i 1))))","user":"54d8a251e4b0a52adc2e203b"},{"problem":21,"code":"(fn en\n\t[arr n]\n\t(let [x (first arr) xs (rest arr) c n] \n\t\t(if (= c 0)\n\t\t\tx\n\t\t\t(en xs (dec c)))))","user":"5545477fe4b0a04f79299531"},{"problem":21,"code":"(fn [coll pos] (get (vec coll) pos))","user":"54860972e4b0e286459a11b7"},{"problem":21,"code":"(fn [s n]\n  (loop [es s\n         en n]\n    (if (= en 0)\n      (first es)\n      (recur (next es) (dec en)))))","user":"58ef93ece4b056aecfd47dca"},{"problem":21,"code":"(fn NTW [x y] (get (into [] x) y))","user":"5b69baf9e4b0c6492753e78f"},{"problem":21,"code":"#(loop [cnt 0 lst %1] (if (= cnt %2) (first lst) (recur (inc cnt) (if (vector? lst) (vec (rest lst)) (pop lst)))))","user":"5592bf46e4b0c79f6e1db932"},{"code":"#(loop [s %1 n %2]\n   (if (zero? n)\n     (first s)\n     (recur (rest s) (dec n))))","problem":21,"user":"5245fbbbe4b09dbe66b56183"},{"problem":21,"code":"(fn [S i] (->> S (take (inc i)) last))","user":"55f6fe09e4b06e875b46cea2"},{"problem":21,"code":"(fn n[s,e] (last ( take (inc e) s )))","user":"54ca582be4b057c6fda3a259"},{"problem":21,"code":"(fn [seq i] ((vec seq) i))","user":"608b20a3e4b0adce4b61c441"},{"problem":21,"code":"(fn ith [x i] (if (> i 0) (ith (rest x) (- i 1)) (first x)))","user":"4dd5fdb0535d2dad7130b5c5"},{"problem":21,"code":"(fn [arr number]\n  (loop [remaining arr\n         n 0]\n    (if (= n number)\n      (first remaining)\n      (recur (rest remaining) (inc n)))))","user":"59771fdee4b01722bebd4ce7"},{"code":"(fn [s i]\n     (loop [parser s index i]\n       (if (= index 0)\n        (first parser)\n        (recur (rest parser) (dec index)))))","problem":21,"user":"500afb25e4b03d00572d2d7e"},{"problem":21,"code":"#(loop [remaining %1, counter %2]\n   (if (= counter 0)\n     (first remaining)\n     (recur (rest remaining) (- counter 1))\n    )\n )","user":"53bf899fe4b0c98a41f5cca3"},{"problem":21,"code":"#(loop [coll %\n        sparecoll '()]\n  (if (= (count sparecoll) %2)\n    (first coll)\n    (recur (rest coll) (cons (first coll) sparecoll))))","user":"55eeeb81e4b0121d4835fdf7"},{"problem":21,"code":"(fn [seq n]\n  ((fn inner [remaining i]\n       (if (= i n)\n         (first remaining)\n         (inner (rest remaining) (+ i 1))))\n   seq 0))","user":"5d126814e4b02c15ef02199b"},{"code":"(fn [xs n]\n  (loop [ys xs i n]\n    (if (> i 0)\n      (recur (rest ys) (- i 1))\n      (first ys))))","problem":21,"user":"51b920bfe4b0e871ca4958f9"},{"problem":21,"code":"(fn rec [lst pos]\n  (loop [n pos\n         res lst]\n    (if (= n 0)\n      (first res)\n      (recur (dec n) (rest res)))))","user":"5d64013ce4b0c9e5857d502d"},{"problem":21,"code":"(fn x [sequ n] (if (= n 0) (first sequ) (recur (rest sequ) (- n 1))))","user":"55158345e4b055c2f668d4e8"},{"code":"(fn my-nth [coll n] (if (= 0 n) (first coll) (my-nth (rest coll) (- n 1))))","problem":21,"user":"4e5eb843535d8a8b8723a2d4"},{"code":"#( first  ( drop %2 %1))","problem":21,"user":"5225b16de4b0d2f5d1e2c0ed"},{"problem":21,"code":"(fn enth[l n] ((vec l) n))","user":"5550e966e4b00713264bd9b3"},{"problem":21,"code":"#(loop [seq1 %1 n %2]\n   (if (zero? n) \n       (first seq1)\n       (recur (rest seq1) (dec n))))","user":"56be8649e4b0f26550335983"},{"problem":21,"code":"(fn [col n]\t\t\n  (if (zero? n)\n    (first col)\n    (recur (rest col) (- n 1))))","user":"546db2fbe4b00cfc9eacc190"},{"code":"(fn [my-list n]\n  (first (reverse (take (inc n) my-list))))","problem":21,"user":"5282c03be4b0757a1b171461"},{"code":"(fn[xs n] (if (or (= 0 n) (= (count xs) n)) (first xs) (recur (rest xs) (dec n))))","problem":21,"user":"525493bbe4b0541d1855b991"},{"problem":21,"code":"(fn [seq n]\n  (loop [i 0\n         out seq]\n    (if (= i n)\n      (first out)\n      (recur (inc i)\n             (rest out)))))","user":"5a14959de4b0ff51aa4b31a0"},{"problem":21,"code":"(fn [s i ] (if (= i 0 ) (first s ) ( recur (next s) (- i 1) )))","user":"55d44dd6e4b0e31453f64a75"},{"code":"(fn [col x] (.get col x))","problem":21,"user":"500388dde4b0678c553fc43d"},{"code":"(fn [col idx] (if (zero? idx) (first col) (recur (rest col) (dec idx))))","problem":21,"user":"526f6b3fe4b03e8d9a4a7366"},{"problem":21,"code":"(fn [coll pos] \n   (first (keep-indexed (fn [idx val] (if (= idx pos) val)) coll)\n))","user":"5e99cbd4e4b0157ca96647e6"},{"problem":21,"code":"(fn nth2 [l n]\n  (if (= n 0) \n    (first l)\n    (recur (rest l) (dec n))))","user":"5b9263ece4b0c0b3ffbd4a37"},{"problem":21,"code":"(fn mth [ s i ] \n\t(if ( = i 0 )\n      (first s)\n      (mth (rest s) (- i 1 ))\n    )\n)","user":"564633a1e4b0284900eef60f"},{"code":"(fn mynth [args n] (if (= 0 n) (first args) (mynth (rest args) (- n 1))))","problem":21,"user":"524469dee4b0d8acf9ed6a9d"},{"problem":21,"code":"(fn [seq index]\n  (loop [counter 0 seqRest seq]\n    (if (= counter index)\n      (first seqRest)\n      (recur (inc counter) (rest seqRest))\n      )\n    )\n  )","user":"5b98e5a7e4b0c0b3ffbd4abf"},{"problem":21,"code":"#(loop [s %1 n %2]\n   (if\n     (= n 0) (first s)\n     (recur (rest s) (dec n))\n     )\n   )","user":"559fefb4e4b0acc240e314ec"},{"problem":21,"code":"(fn[myList item] (first (drop item myList)))","user":"5f0824c5e4b0cf489e8d7f5b"},{"code":"(\n  fn[x n]\n    (first (nthnext x n))\n)","problem":21,"user":"4ee18201535d10e5ff6f535b"},{"code":"#((comp first second split-at) %2 %1)","problem":21,"user":"4fd3bd14e4b0d4de60cee363"},{"code":"#(if (= %2 0) (first %1) (recur (rest %1) (- %2 1)))","problem":21,"user":"4e74ff6d535d7a570dd295bd"},{"code":"(fn foo [l n] (if (zero? n) (first l) (foo (next l) (dec n))))","problem":21,"user":"50427899e4b0add3005c0fc2"},{"problem":21,"code":"(fn nnn [list index] (if (= index 0) (first list) (nnn (rest list) (dec index))))","user":"5b081ff2e4b0cc2b61a3bdb3"},{"problem":21,"code":"#(first (take 1 (drop %2 (seq %1))))","user":"5734d751e4b0cd1946bd1018"},{"problem":21,"code":"#(loop [x %1 y %2] \n   (if (zero? y) \n     (first x) \n     (recur (rest x) (dec y))))","user":"57d21102e4b0bd073c202375"},{"problem":21,"code":"#(loop [seq1 %1, n %2]\n   (if (> n 0)\n     (recur (rest seq1) (dec n))\n            (first seq1)))\n     \n;(fn [coll n] (first (drop n coll)))","user":"5487eb1de4b0e286459a11ca"},{"problem":21,"code":"(fn [s order ] (first (drop order s)))","user":"590c449ae4b047aa04b199ea"},{"problem":21,"code":"(fn [coll n]\n        (loop [cnt n\n               tmp coll]\n              (if (zero? cnt)\n                (first tmp)\n                (recur (dec cnt) (rest tmp)))))","user":"5ee6187fe4b029a2061bbe97"},{"problem":21,"code":"(fn [c x]\n  (-> (+ 1 x)\n      (take c)\n      reverse\n      first))","user":"574c3d4ee4b02ea11479921a"},{"problem":21,"code":"(fn foo [c i]\n  (if (> i 0)\n    (foo (rest c) (dec i))\n    (first c))\n  )","user":"55b1c2f8e4b0da326a65cf71"},{"problem":21,"code":"(fn takenth [s x] (first (rest (take-nth x s))))","user":"5a79ce7fe4b03baeef9276c8"},{"code":"#(first (reverse (take (+ %2 1) %1)))","problem":21,"user":"4e84836a535db62dc21a62e1"},{"problem":21,"code":"(fn findn [x n]\n  (if (= n 0)\n    (first x)\n    (findn (rest x) (- n 1))))","user":"549c8bbde4b0f3d1d8e70f8c"},{"code":"(fn nth-p [l n]\n    (cond \n      (= n 0) (first l)\n      true (nth-p (rest l) (- n 1))))","problem":21,"user":"50c4e6dfe4b0210b849018b5"},{"problem":21,"code":"(fn [xs n]\n  ((comp first drop) n xs))","user":"561bf9d7e4b064ca9f4b1690"},{"code":"(fn nth' [seq index]\n  (loop [counter index\n         list seq]\n    (if (= counter 0)\n      (first list)\n      (recur (dec counter) (rest list)))))","problem":21,"user":"50b61e7ae4b0e3a8b79a9a68"},{"problem":21,"code":"(fn newNth [s p] \n  (if (= p 0)\n    (first s)\n    (newNth (rest s) (dec p))\n  )\n)","user":"567debb5e4b05957ce8c61ce"},{"problem":21,"code":"(fn [s n]\n  (first\n   ((apply comp (repeat n rest)) s)))","user":"551ebcd7e4b08d5046aa8a4a"},{"code":"(fn n-th [coll index]\n  (if (= 0 index)\n    (first coll)\n    (n-th (rest coll) (- index 1))))","problem":21,"user":"53023bf3e4b0d8b024fd3726"},{"problem":21,"code":"(fn this\n  ([l] \n    (first l))\n  ([l n] \n    (if (> n 0)\n      (this (rest l) (- n 1)) \n      (this l))))","user":"5bff87fbe4b0bdcf453d162c"},{"problem":21,"code":"(fn [coll position] (last (take (+ position 1) coll)))","user":"58f37ddae4b0438e51c2cea7"},{"problem":21,"code":"(fn nth-element-solution\n  [coll item]\n  (get (vec coll) item))","user":"58445c3ce4b089d5ab817e49"},{"code":"(fn [my-list n]\n  (if (= n 0)\n    (first my-list)\n    (recur (rest my-list) (- n 1))\n  )\n)","problem":21,"user":"51effd77e4b0249c592fbdf3"},{"code":"(fn f [s i]\r\n  (if (= 0 i)\r\n    (first s)\r\n    (f (rest s) (- i 1))))","problem":21,"user":"509e8da7e4b08df8156e9e2f"},{"problem":21,"code":"#(loop [aseq %1 i %2]\n   (if (zero? i)\n       (first aseq)\n       (recur (rest aseq) (dec i))))","user":"5eff588ae4b0cf489e8d7f10"},{"problem":21,"code":"#(first (nthrest %1  %2))","user":"548e81fae4b0e286459a1223"},{"problem":21,"code":"(fn get-n [x n] (if (= n 0) (first x) (get-n (rest x) (- n 1))))","user":"574b008ce4b02ea114799203"},{"code":"(fn find-nth [s n]\n  (if (< n 1)\n    (first s)\n    (find-nth (rest s) (- n 1))\n  )\n)","problem":21,"user":"52b12804e4b0c58976d9acd7"},{"code":"(fn [x y](first(drop y x)))","problem":21,"user":"4ee9ff32535d93acb0a66897"},{"problem":21,"code":"(fn my-nth\n  [lst n]\n  (->>\n    (count lst)\n    (+ 1)\n    (range 1)\n    (interleave lst)\n    (partition 2)\n    (map (fn [x] (if (= (+ 1 n) (second x)) (first x) 0)))\n    (remove (fn [x] (if (= x 0) true false)))\n    first))","user":"59e8fef3e4b0249b72820743"},{"problem":21,"code":"(fn [lst n] \n   (loop [l lst t n]\n     (if (= t 0)\n       (first l)\n       (recur (rest l) (- t 1)))))","user":"5516a874e4b06a49daca83b5"},{"code":"(fn [coll ind] (if (zero? ind) (first coll) (recur (rest coll) (dec ind))))","problem":21,"user":"4f985527e4b0dcca54ed6cf1"},{"code":"(fn a [l n] (if (= n 0) (first l) (a (next l) (dec n))))","problem":21,"user":"4ddbd934535d02782fcbe9fc"},{"code":"(fn my-nth [l i]\r\n  (if (= i 0) \r\n    (first l)\r\n    (my-nth (rest l) (- i 1))))","problem":21,"user":"4f831dd2e4b033992c121c16"},{"code":"(fn nth-element [s i]\n  (if (= 0 i)\n      (first s)\n      (nth-element (rest s) (- i 1))))","problem":21,"user":"506a1985e4b01dc6af13f83e"},{"code":"(fn [x y] (first (filter #(= (.indexOf x %) y) x)))","problem":21,"user":"504e6971e4b0f6ff3350c4b0"},{"code":"(fn mynth [x n] (if (= n 0) (first x) (recur (rest x) (- n 1))))","problem":21,"user":"4f03810c535dcb61093f6afd"},{"problem":21,"code":"#((fn ith [xs i]\n    (if (= 0 i)\n      (first xs)\n      (ith (rest xs) (- i 1)))) %1 %2)","user":"55453f8ee4b0a04f79299530"},{"problem":21,"code":"(fn [xs n]\n  (loop [xs xs, n n]\n     (if (= 0 n)\n         (first xs)\n       (recur (next xs) (dec n)))))","user":"5488872ee4b0e286459a11d3"},{"problem":21,"code":"(fn [x1 x2] (first (drop x2 x1) )  )","user":"59f6ce5de4b0966464fe6adc"},{"code":"(fn [s n]\n  (if \n    (zero? n)\n    (first s)\n    (recur (rest s) (dec n))))","problem":21,"user":"53813189e4b06839e8705ec9"},{"problem":21,"code":"(fn [xs n]\n    (if (-> n (= 0))\n      (first xs)\n      (recur (rest xs) (dec n))))","user":"56bcc2b2e4b0f26550335965"},{"problem":21,"code":"(fn get-nth-element [array index] (if (= index 0) (first array) (get-nth-element (rest array) (- index 1))))","user":"5abe41bce4b073f177442720"},{"code":"(fn [s n]\n  (if\n    (= n 0)\n    (first s)\n    (recur (rest s) (- n 1))\n  )\n)","problem":21,"user":"538de1ede4b0b51d73faae77"},{"problem":21,"code":"(fn [coll idx] (last(take (+ idx 1) coll)))","user":"504e1c31e4b0f6ff3350c461"},{"code":"(fn [x index] (loop [x x i 0] (if (= i index) (first x) (recur (rest x) (+ i 1)))))","problem":21,"user":"530394b4e4b0d8b024fd3743"},{"problem":21,"code":"(fn my-nth [coll n]\n  (let [{x n} (into [] coll)]\n    x))","user":"5c5d2e90e4b01df32ab732af"},{"code":"(fn [s n] (->> s (drop n) first))","problem":21,"user":"500ea957e4b00fff93030f9b"},{"problem":21,"code":"(fn my-nth [xs n]\n  (if (= n 0)\n    (first xs)\n    (recur (rest xs) (- n 1))))","user":"5a6af351e4b0512ff01cda2e"},{"code":"(fn [s n]\n  (if (= n 0)\n      (first s)\n      (recur (next s) (dec n))))","problem":21,"user":"50555c06e4b0ce54f56f03fa"},{"problem":21,"code":"#(loop [x  %1 y %2]\n   (if (= y 0) (first x)\n     (recur (rest x) (dec y))))","user":"5e81f009e4b09a7a73c8bbaf"},{"code":";#(loop [x %1 n %2]\n;  (if (= n 0)\n;      (first x)\n;      (recur (rest x) (dec n))))\n\n;#(-> %2 (drop %1) first)\n\n;#( (vec %1) %2 )\n\n#(first (drop %2 %1))","problem":21,"user":"4db1b5841254ad5b4805fa70"},{"problem":21,"code":"(fn [vec n] ((reduce (fn [memo x] (let [i (inc (:i memo))] (assoc memo :i i i x))) {:i -1} vec) n))","user":"551589cee4b055c2f668d4e9"},{"code":"(fn neme [l n] (if (= n 0) \n                    (first l)\n                    (neme (rest l) (- n 1) )))","problem":21,"user":"504ffa26e4b0a02f9cffdead"},{"problem":21,"code":"(fn [list index] (last (take (inc index) list)))","user":"54180369e4b01498b1a71a13"},{"code":"(fn [lst ind] ((vec lst) ind))","problem":21,"user":"51f04e89e4b0274c496158cd"},{"problem":21,"code":"(fn\n  [col n]\n  (last (take (inc n) col)))","user":"55bccbc6e4b01b9910ae29f5"},{"problem":21,"code":"(fn [ls n]\n  (first\n   (keep-indexed #(if (= %1 n) %2) ls)))","user":"5dbdf847e4b09f47823971c2"},{"problem":21,"code":"#(loop [s %1 i 0]\n   (if (< i %2)\n       (recur (rest s) (inc i))\n       (first s)))","user":"5434b344e4b0b6b47310fcf3"},{"problem":21,"code":"(fn nth_new [l n]\n  (if (= n 0)\n    (first l)\n    (nth_new (rest l) (- n 1))))","user":"5e7374ace4b085ba37836dd0"},{"code":"(fn [coll x] (first (take 1 (drop x coll))))","problem":21,"user":"53a69398e4b0ef122a8689ca"},{"problem":21,"code":"(fn [lst n]\n  ((fn [lst n cur_n]\n    (if (= cur_n n)\n      (first lst)\n      (recur (rest lst) n (+ cur_n 1)))) lst n 0))","user":"50997306e4b0cae2931060b5"},{"code":"(fn [arr n] (last (take (+ 1 n) arr)))","problem":21,"user":"522600cfe4b0f4c7e20d29c8"},{"problem":21,"code":"(fn [lst n]\n   (loop [remaining lst\n          i 0]\n     (if (= i n)\n       (first remaining)\n       (recur (rest remaining) (inc i)))))","user":"5f7ea492e4b0c071e6c840d9"},{"problem":21,"code":"(fn [se index]\n   (letfn [(f [l i]\n             (if (= index i)\n               (first l)\n               (recur (rest l) (inc i))))]\n     (f se 0)))","user":"53214efbe4b09d4e7a9b54b2"},{"problem":21,"code":"(fn [x n]\n  (if (= n 0)\n      (first x)\n      (recur (rest x) (- n 1))))","user":"59c2b463e4b0a024fb6ae4bf"},{"problem":21,"code":"(fn [mysequence n] \n   (get (vec mysequence) n )\n   )","user":"546a70bae4b00cfc9eacc159"},{"code":"(fn [lst num]\n  (cond (= num 0) (first lst)\n        :else (recur (rest lst) (dec num))))","problem":21,"user":"4f0eeff3535d0136e6c22327"},{"code":"(fn [l c] (last (take (+ c 1) l)))","problem":21,"user":"516f00e1e4b06aac486e5b38"},{"code":"(fn [s n] \n  (loop [s s n n i 0]\n    (cond (= i n) (first s)\n          (not (seq s)) ()\n          :else (recur (rest s) n (inc i)))))","problem":21,"user":"509ecefde4b08df8156e9e35"},{"problem":21,"code":"(fn get-nth\n  [s n]\n  (if (= n 0) \n    (first s)\n    (get-nth (rest s) (- n 1))\n  )\n)","user":"542e8011e4b0dad94371f2c4"},{"problem":21,"code":"(fn [x y] (if (= y 0) (first x)\n            (recur (rest x) (dec y))))","user":"5bd648d9e4b0ed4b8aab4ba5"},{"problem":21,"code":"#(last( take (+ 1 %2) %1))","user":"5e85fa2ce4b09a7a73c8bbd9"},{"code":"(fn [seq ind] (first (drop ind seq)))","problem":21,"user":"51ed4ee2e4b0bb5070431594"},{"code":"#(loop [xs %1 n %2]\r\n    (if (= n 0)\r\n      (first xs)\r\n      (recur (rest xs) (dec n))))","problem":21,"user":"4ddbfb8a535d02782fcbea00"},{"problem":21,"code":"(fn [coll n]\n  (loop [n n\n         coll coll]\n    (if (= n 0)\n      (first coll)\n      (recur (- n 1) (rest coll)))))","user":"55a12cb1e4b0acc240e3150d"},{"problem":21,"code":"(fn [x n]\n  (if (zero? n)\n    (first x)\n    (recur (rest x) (dec n) )\n    )\n  )","user":"55c4e30be4b0e31453f649a6"},{"code":"(fn [lst which] (if (= which 0) (first lst) (recur (rest lst) (- which 1))))","problem":21,"user":"4ec1b090535dfed6da9c6db5"},{"problem":21,"code":"(fn [x n] (loop [x x n n] (if (<= n 0) (first x) (recur (rest x) (- n 1)))))","user":"5b507222e4b02d533a91bce7"},{"problem":21,"code":"(fn [x n] (last (take (+ 1 n) (seq x))))","user":"53b3abd6e4b047364c0444a7"},{"problem":21,"code":"(fn [list index ]\n  (\n    loop [cur-index index\n          return list]\n    (if (> cur-index 0)\n      (recur (dec cur-index) (rest return))\n      (first return)\n      )\n    ))","user":"5cada3b8e4b026601754b872"},{"problem":21,"code":"(fn Nth [xs n] (if (= n 0) (first xs) (Nth (rest xs) (dec n))))","user":"58334d18e4b089d5ab817c97"},{"problem":21,"code":"(fn [xs x] (first (nthnext xs x)))","user":"5d84fccae4b0915913b1d390"},{"problem":21,"code":"(fn [x k]\n  (loop [i 0\n         v x]\n    (if (= i k)\n      (first v)\n      (recur (inc i) (rest v))\n    )\n  )\n)","user":"55252392e4b0882d96d091cc"},{"problem":21,"code":"(fn[s n] (->  (take (+ 1 n) s) last))","user":"579783c9e4b039eba2ecb0fd"},{"code":"(fn boo [l n] \n  (if (= n 0)\n    (first l)\n    (boo (rest l) (- n 1))))","problem":21,"user":"4f03850b535dcb61093f6b0a"},{"code":"(fn [s n] (first (nthnext s n)))","problem":21,"user":"52bad920e4b07a9af57922d7"},{"code":"(fn [s index]\n\t(loop [new-s s\n           i index]\n      (if (<= i 0)\n        (first new-s)\n        (recur (rest new-s) (dec i)))))","problem":21,"user":"53658ce7e4b0243289761e6e"},{"problem":21,"code":"(fn [x, y] (if (= y 0) (first x) (if (= y 0) (first x) (recur (rest x) (dec y)))))","user":"53e150e5e4b0d874e779ae53"},{"problem":21,"code":"(fn [lst index] (last (take (inc index) lst)))","user":"59e63a2ce4b08badc2a0c569"},{"problem":21,"code":"(fn [se n]\n                   ( if ( > n ( count se))\n                        nil\n                        (if (= n 0)\n                           (first se)\n                           (recur (rest se ) (dec n)))  )\n\n)","user":"56a257e7e4b0542e1f8d14bb"},{"code":"#(.get (list* %1) %2)","problem":21,"user":"4f1a87d2535d64f60314646c"},{"problem":21,"code":"(fn foo [x i] (if (< 0 i) (foo (rest x) (- i 1)) (first x)) )","user":"557bc06ae4b05c286339e0b8"},{"code":"(fn [seq n]\n  (if (zero? n)\n    (first seq)\n    (recur (rest seq) (dec n))))","problem":21,"user":"4ef3f5b0535dced4c769f22f"},{"problem":21,"code":"(fn take-nth-element\n  [xs n] (if (= n 0)\n           (first xs)\n           (recur (rest xs) (dec n))))","user":"5e035de0e4b0a607a9a45d5a"},{"code":"(fn [seqs left]\n  (if(= left 0)\n    (first seqs)\n    (recur (rest seqs) (- left 1))))","problem":21,"user":"521dad9be4b050d5da0427f9"},{"code":"(fn [xs pos] (if (= pos 0)\n    (first xs)\n    (recur (rest xs) (- pos 1))\n))","problem":21,"user":"4e971a86535dbda64a6f6b4f"},{"problem":21,"code":"(fn foo [seq n] (if (zero? n) (first seq) (foo (rest seq) (- n 1))))","user":"5b3f2ba9e4b02d533a91bc09"},{"code":"(fn f [s n] (\n  if (= n 0)\n    (first s)\n    (f (rest s) (- n 1))\n))","problem":21,"user":"4f72e09de4b07046d9f4f03b"},{"code":"(fn [lst x] (first (take 1 (drop x lst))))","problem":21,"user":"5008a61ee4b0144d4f561e3b"},{"code":"(fn nth-elem [s x]  (last (take (inc x) s)))","problem":21,"user":"529c87efe4b04e0c58e87b66"},{"problem":21,"code":"(fn countdown\n  [randomseq stopper]\n  (if (= stopper 0)\n    (first randomseq)\n    (countdown (rest randomseq) (dec stopper))\n    )\n  )","user":"5f7a6354e4b02876ed9fd0d0"},{"problem":21,"code":"(fn getnth [l d] \n  (if (= d 0)\n   (first l)\n   (getnth (rest l) (- d 1))\n  )\n)","user":"5caf99abe4b026601754b898"},{"problem":21,"code":";(fn [ls times] \n;  (first \n;   \t(dotimes [n times] \n;      (rest ls))))\n\n(fn [list2 n] (first(drop n list2)))","user":"5996ecabe4b07157cc8daabd"},{"problem":21,"code":"(fn [eles n] (first (drop n eles)))","user":"573946b6e4b0cd1946bd106d"},{"problem":21,"code":"(fn myfunc [se n] \n  (last (take (+ n 1) se))\n )","user":"56405959e4b08d4f616f5ee1"},{"problem":21,"code":"(fn umph [xs n]\n  (if (= 0 n)\n      (first xs)\n      (umph (rest xs) (dec n))))","user":"5542011fe4b0a04f79299516"},{"problem":21,"code":"(fn [so no] \n  (let[ f\n\t(fn mynth [s n c]\n\t\t(if (< c n)\n\t\t  (mynth (rest s) n (+ c 1))\n\t\t  (first s)\n\t\t)  \n\t)] \n\t(f so no 0)\n)\n)","user":"592018d2e4b09b4ee5954c55"},{"code":"(fn [_v _n]\n  (first (subvec (vec _v) _n)))","problem":21,"user":"507bb3ece4b09034bfeeb720"},{"code":"#(peek (reverse (take (+ 1 %2) %1)))","problem":21,"user":"533b1138e4b0e30313ee6cc5"},{"problem":21,"code":"(fn mynth[s n] (loop [s s n n] (if (== n 0) (first s) (recur (rest s) (- n 1)))))","user":"5457e5f1e4b01be26fd74613"},{"problem":21,"code":"(fn delve [seqn n] (if (= n 0) (first seqn) (delve (rest seqn) (- n 1))))","user":"55a0e139e4b0acc240e31504"},{"problem":21,"code":"(fn [a i] (first (drop i a)))","user":"5522cd9ae4b0882d96d091ab"},{"code":"(fn my-nth \n  ([list n] (my-nth list n 0))\n\t([list n i] (if (= n i) (first list) (recur (rest list) n (inc i)))))","problem":21,"user":"4e75d6b6535d7a570dd295c6"},{"code":"(fn [thelist position] \n  (loop [x position nthoflist thelist] \n    (if (zero? x)\n      (first nthoflist)\n      (recur (dec x) (rest nthoflist))\n     )\n    )\n  )","problem":21,"user":"52cc7c40e4b07d0d72b27364"},{"problem":21,"code":"(fn [s times] (first((apply comp (repeat times rest)) s)))","user":"5978b4c9e4b01722bebd4d13"},{"problem":21,"code":"(fn function\n  [s idx]\n  (if (zero? idx)\n    (first s)\n    (function (rest s) (dec idx))))","user":"60b7ef35e4b0e0fa5f1b4254"},{"code":"(fn [seq n]\n  (if (= n 0) \n    (first seq) \n    (recur (rest seq) (- n 1))))","problem":21,"user":"4fb01e53e4b081705acca260"},{"problem":21,"code":"(fn enth [xs i]\n  (if (= i 0)\n    (first xs)\n    (enth (rest xs) (- i 1))))","user":"5c11812ee4b01240ff56717b"},{"problem":21,"code":"(fn fnd [sq n] (first (drop n sq)))","user":"53ea72b6e4b036ad0777e4e5"},{"problem":21,"code":"(fn [coll n]\n  (loop [in coll elem 0]\n    (if (= elem n)\n      (first in)\n      (recur (rest in) (inc elem)))))","user":"5fc51d88e4b0ad564c76812a"},{"problem":21,"code":"(fn [lst i]\n  (loop [x lst acc 0]\n    (if (= acc i)\n      (first x)\n      (recur (rest x) (inc acc)))))","user":"57a7f7d8e4b0a96607956218"},{"problem":21,"code":"(fn [c i] ((vec c) i) )","user":"5a8bdd0ce4b05369db4d24f2"},{"problem":21,"code":"(fn nthel [l n]\n  (if (= n 0)\n    (first l)\n    (nthel (rest l) (- n 1))))","user":"5487517ee4b0e286459a11c5"},{"code":"#(-> (split-at %2 %1) rest first first)","problem":21,"user":"4ecab3b7535d6d7199dd3709"},{"problem":21,"code":"(fn [lst n]\n  (loop [i 0\n         f (first lst)\n         r (rest lst)]\n    (if (= i n)\n      f\n      (recur (+ i 1) (first r) (rest r)))))","user":"57f8627ee4b0d3187e900926"},{"code":"(fn nt [s c] (if (= c 0) (first s) (nt (rest s) (dec c))))","problem":21,"user":"50189302e4b029375d2a5057"},{"code":"#(loop [sekv %1 indeks %2]\n   (if (= 0 indeks)\n     (first sekv)\n   (recur (rest sekv) (dec indeks))))","problem":21,"user":"4e410033535dc968683fc49c"},{"code":"(fn n-esimo [s n]\n     (if (= 0 n) \n       (first s)\n       (n-esimo (rest s) (dec n))))","problem":21,"user":"52c8758be4b0c2d177d62135"},{"code":"(fn [coll n] \n  (loop [coll coll n n]\n    (if (zero? n) (first coll)\n        (recur (rest coll) (dec n)))))","problem":21,"user":"4e47c558535dc968683fc4ba"},{"problem":21,"code":"(fn nth-eleme [col idx]\n  ((into [] col) idx))","user":"558ffb4be4b0277789237667"},{"code":"(fn zz [l n]  \n    (if (= 0 n)\n      (first l)\n      (zz (rest l) (- n 1))))","problem":21,"user":"51cdec45e4b0e42293a2254f"},{"problem":21,"code":"(fn[s n] (last (take (inc n) s)))","user":"54240d89e4b01498b1a71ad8"},{"code":"(fn aa [s n]\n  (case n\n    0 (first s)\n    (aa (rest s) (dec n))))","problem":21,"user":"52b63875e4b0c58976d9ad41"},{"problem":21,"code":"(fn[s n] (first (nthrest s n)))","user":"53d0f7bbe4b00fb29b22130e"},{"problem":21,"code":"#(loop\n   [i 0 seq %1]\n   (if (= i %2)\n     (first seq)\n     (recur (inc i) (rest seq)))\n   )","user":"594be2cae4b07ddc2dafae48"},{"code":"(fn news\n  [l n]\n  (if (= n 0)\n    (first l)\n    (news (rest l) (dec n))))","problem":21,"user":"5338be2be4b0e30313ee6c9d"},{"problem":21,"code":";(fn [arr,n] \n;\t\t(get (vec arr) n)\n;\t)\n\n\n(fn [coll n] (first (drop n coll)))","user":"5d1cf237e4b02ea6f0fb6992"},{"problem":21,"code":"#(get \n  (vec %1) %2)","user":"5ac04101e4b073f177442737"},{"problem":21,"code":"(fn [items nt](last(take (+ 1 nt) items)))","user":"55350bdae4b09218d5f44fa8"},{"problem":21,"code":"(fn\n  [seqn index]\n  (if (= index 0)\n    (first seqn)\n    (recur (rest seqn)(- index 1))))","user":"5ed6e0eee4b016b56eae05e4"},{"code":"(fn [l index]\n  (last (take (inc index) l)))","problem":21,"user":"4ed47f1e535d10e5ff6f52cd"},{"problem":21,"code":"(fn nele [xs n]\n  (if (<= n 0)\n    (first xs)\n    (nele (rest xs) (- n 1))))","user":"55f335f4e4b06e875b46ce57"},{"problem":21,"code":"(fn mynth[myvec index] (get (vec myvec) index ))","user":"58a17511e4b02bd94d917eb4"},{"code":"(fn get [x y] (.get x y))","problem":21,"user":"4fa32388e4b081705acca189"},{"problem":21,"code":"(fn [x y]\n      (last (take (+ 1 y) x))\n      )","user":"55092319e4b06e50f9beb113"},{"problem":21,"code":"(fn [col n-th]\n  (loop [x n-th\n         col col]\n    (if (= 0 x)\n      (first col)\n      (recur (dec x) (rest col)))))","user":"54f14aa6e4b024c67c0cf8af"},{"problem":21,"code":"(fn my-nth [coll n]\n  (if (== 0 n)\n    (first coll)\n\t(recur (rest coll) (dec n))))","user":"5cc7342be4b0ccb061962830"},{"code":"(fn [col n]\n  (if (zero? n)\n    (first col)\n    (recur (rest col) (- n 1))\n    ))","problem":21,"user":"52d18b86e4b0d9f9285948de"},{"code":"#(loop [coll %1 \n        x %2]\n  (if (= 0 x)\n      (first coll)\n   (recur (rest coll) (dec x))))","problem":21,"user":"4e6aba11535d8ccf87e9feff"},{"problem":21,"code":"(fn get-n-th [lt n] (if (= n 0) (first lt) (get-n-th  (rest lt) (- n 1))))","user":"54db48f6e4b024c67c0cf760"},{"problem":21,"code":"(fn kala [y x]\n  (first (reverse (first (split-at (+ x 1) y)))))","user":"5f520556e4b0a0bc16850a6d"},{"code":"(fn [xs n]\n  (first\n    (drop n xs)))","problem":21,"user":"512e31e9e4b0b740abc59823"},{"problem":21,"code":"(fn [c n] \n  (first (nthrest c n)))","user":"54630cdae4b01be26fd746bb"},{"problem":21,"code":"(fn retaval [coll n] (get (vec coll) n))","user":"58f602afe4b0438e51c2cee5"},{"code":"(fn fnth [s x]\n  (if (= x 0)\n      (first s) \n      (fnth (rest s) (- x 1))))","problem":21,"user":"525aa499e4b0cb4875a45cf7"},{"problem":21,"code":"#(loop [arr %1\n        count 0]\n   (if (= count %2)\n     (first arr)\n     (recur (rest arr)\n            (inc count))))","user":"5d40c893e4b05dd059a5436c"},{"problem":21,"code":"(fn my-nth [x, n] (cond\n                      (= n 0) (first x)\n                      :else (my-nth (rest x) (- n 1))\n               )\n)","user":"58f92297e4b0438e51c2cf43"},{"problem":21,"code":"(fn [seq idx]\r\n    (loop\r\n    [here idx\r\n     there seq]\r\n      (if  (= 0 here)\t\r\n       (first there)\r\n       (recur (- here 1) (rest there)))))","user":"4ddc5d0a535d02782fcbea05"},{"problem":21,"code":"(fn nth' [xs i] (if (zero? i) (first xs) (nth' (next xs) (dec i))))","user":"5f300f28e4b033932238a682"},{"problem":21,"code":"(fn [s n]\n    (last (take (inc n) s)))","user":"5d6d76ffe4b04d129b00f2be"},{"code":"(fn get-nth-element[l, n]\n  (if (= 0 n)\n    (first l)\n    (get-nth-element (rest l) (dec n))\n  )\n)","problem":21,"user":"530b8ce1e4b02e82168697cd"},{"problem":21,"code":"(fn fun [lista ind]\n  (if (= ind 0)\n    (first lista)\n    (fun (rest lista) (dec ind))))","user":"560ff632e4b05f002753df66"},{"code":"(fn [a b]\n  (if (= b 0) \n    (first a)\n    (recur (rest a) (dec b))))","problem":21,"user":"4fe89c81e4b07c9f6fd12c57"},{"code":"(fn[x y] (if(== y 0) (first x) (second (pop x))))","problem":21,"user":"51c4690fe4b06b70b3e207e1"},{"code":"(fn lolnth [seq n]\n  (if (pos? n)\n    (recur (rest seq) (dec n))\n    (first seq)))","problem":21,"user":"4e55958a535d8a8b8723a27e"},{"code":"(fn [xs, n]\n  (last (take (+ n 1) xs))\n)","problem":21,"user":"504e96f0e4b069badc5a33ba"},{"code":"(fn n-th [xs, n]\n  (if (= n 0) (first xs)\n\t\t\t   (n-th (rest xs) (- n 1))))","problem":21,"user":"500ec491e4b00fff93030f9e"},{"code":"(fn my-nth [col index]\n        (loop [col col\n               n 0]\n          (if (= n index)\n            (first col)\n            (recur (rest col) (inc n)))))","problem":21,"user":"5369d072e4b0243289761ea1"},{"problem":21,"code":"(fn [l n] (first ((apply comp (repeat n rest)) l)))","user":"5d47f4dbe4b07c84aa5ae6b5"},{"problem":21,"code":"(fn [coll n] (loop [coll coll n n]\n             (if (= n 0) (first coll)\n               (recur (rest coll) (dec n)))))","user":"56885c32e4b0dcc4269f4068"},{"code":"(fn [s n]\n  (cond\n    (empty? s) nil\n    (= 0 n) (first s)\n    :else (recur (rest s) (dec n))))","problem":21,"user":"4fa4ef2ee4b081705acca1a9"},{"code":"#(loop [x %1 y %2]\n  (cond (= y 0) (first x)\n  :else (recur (rest x) (dec y))))","problem":21,"user":"50868795e4b004985b776e5e"},{"problem":21,"code":"(fn [seq x] \n  (loop [cnt 0 tmp-seq seq]\n    (if (= cnt x)\n      (first tmp-seq)\n      (recur (inc cnt) (rest tmp-seq)))))","user":"57aa2b97e4b0b8559636fc66"},{"problem":21,"code":"(fn[x y](get (into[] x) y))","user":"55679198e4b0c656e3ff1843"},{"problem":21,"code":"(fn n-th [s n]\n  (if (= 0 n)\n    (first s)\n    (n-th (rest s) (- n 1))\n    )\n  \n  )","user":"55f8fd70e4b03cbcff9738bc"},{"problem":21,"code":"(fn [l n]\n  (loop [pos n ll l]\n  \t(if (zero? pos)\n    \t(first ll)\n      \t(recur (dec pos)\n               (rest ll)))))","user":"4fa67274e4b081705acca1b8"},{"code":"#(loop [i 0 ls %1]\r\n  (if (= i %2)\r\n    (first ls)\r\n    (recur (inc i) (rest ls))))","problem":21,"user":"4df7278a535d04ed9115e774"},{"problem":21,"code":"(fn nth-elem\n  ([coll index] (nth-elem coll index 0))\n  ([coll index count]\n   (if (= index count)\n     (first coll)\n     (nth-elem (rest coll) index (inc count)))))","user":"57ff7d88e4b0a837a8b30c20"},{"code":"(fn [inseq el] (last (take (+ 1 el) inseq)))","problem":21,"user":"529735cbe4b02ebb4ef7503c"},{"problem":21,"code":"#(loop [coll %\n        index %2]\n   (if (= index 0)\n     (first coll)\n     (recur (rest coll) (dec index) )\n     ))","user":"58524875e4b0b7285a6f4ead"},{"problem":21,"code":"(fn [seq pos]\n  (loop [cnt 0 remain seq]\n    (if (= cnt pos)\n      (first remain)\n      (recur (inc cnt) (rest remain)))))","user":"5746061ae4b009280f9f2b5b"},{"problem":21,"code":"(fn [s i] \n              (loop [ii i ss s] \n                (if (= ii 0) \n                  (first ss) \n                  (recur (dec ii) (rest ss)))))","user":"53f592b7e4b0db01ade6f9d0"},{"problem":21,"code":"(fn [s pos]\n  (loop [position 0\n         l s]\n    (if (= position pos)\n      (first l)\n      (recur (inc position) (rest l)))))","user":"571b900ae4b07c98581c3b69"},{"problem":21,"code":"(fn [xs i]\n  (if (= i 0)\n    (first xs)\n    (recur (rest xs) (- i 1))))","user":"5f5e7158e4b02876ed9fcff0"},{"code":"(fn mynth [coll n]\n  (if (= n 0)\n    (first coll)\n    (mynth (rest coll) (- n 1))))","problem":21,"user":"5362a936e4b0243289761e55"},{"problem":21,"code":"#(loop [s %1 n %2] (if (= n 0) (first s) (recur (rest s) (dec n))))","user":"589771f9e4b00487982d52bd"},{"code":"(fn [col,n]\n  (if (zero? n)\n    (first col)\n    (recur (rest col) (dec n))))","problem":21,"user":"53067bede4b02e8216869797"},{"code":"(fn [coll n] (loop [pos n c coll] (if (zero? pos) (first c) (recur (dec pos) (rest c)))))","problem":21,"user":"4f037bb5535dcb61093f6aec"},{"problem":21,"code":"(fn [s n]\n    (if (= n 0)\n      (first s)\n      (recur (next s) (- n 1))))","user":"56a1fce9e4b0542e1f8d14b7"},{"problem":21,"code":"(fn [coll loc]\n  (loop [coll coll loc loc]\n   (if (< loc 1)\n     (first coll)\n     (recur (rest coll) (dec loc)))))","user":"4f847f0ee4b033992c121c33"},{"problem":21,"code":"(fn [x y] (first (subvec (vec x) y)))","user":"59444377e4b0b03edd0057a1"},{"code":"(fn [coll idx]\n    (if (pos? idx)\n      (recur (rest coll) (dec idx))\n      (first coll)))","problem":21,"user":"4faa5735e4b081705acca1ee"},{"problem":21,"code":"(fn [aseq idx]\n  (last (take (inc idx) aseq)))","user":"557e2eafe4b05c286339e0d2"},{"code":"(fn [lst idx] \r\n  (loop [tlst lst tidx 0]\r\n    (if (= tidx idx) (first tlst) \r\n      (recur (rest tlst)(inc tidx)))))","problem":21,"user":"4e0359e8535d04ed9115e792"},{"code":"(fn[x, y] (first (filter #(= y (.indexOf x %)) x)))","problem":21,"user":"539d4cdae4b0b51d73faaf33"},{"problem":21,"code":"(fn [l idx] (get (vec l) idx))","user":"5be909bae4b0f319e2d7ec6d"},{"code":"(fn foo [l n] (if (= n 0) (first l) (foo (rest l) (- n 1))))","problem":21,"user":"4dbecb06535d020aff1edf6a"},{"code":"(fn [x v] ((vec x) v))","problem":21,"user":"53212063e4b09d4e7a9b54ae"},{"code":"(fn mynth [xs n]\n  (if (<= n 0)\n    (first xs)\n    (mynth (next xs) (dec n))))","problem":21,"user":"522b922ee4b0d34ee08e71c3"},{"problem":21,"code":"(fn [coll n]\n  (if (zero? n) (first coll) (recur (rest coll) (dec n))))","user":"53b7c21ae4b047364c0444d4"},{"problem":21,"code":"(fn mth [coll index]\n    (first (drop index coll)))","user":"500d3160e4b05f7c30cfa6a1"},{"problem":21,"code":"(fn get-nth [lst n] (if (= n 0) (first lst) (get-nth (rest lst) (- n 1))))","user":"5e010c58e4b0a607a9a45d33"},{"code":"(fn f [c n]  (if (< n 1) (first c) (f (drop 1 c) (dec n))))","problem":21,"user":"4fc7b079e4b0ee37620e1827"},{"problem":21,"code":"#(loop [xs %1 cnt %2] (if (zero? cnt) (first xs) (recur (rest xs) (dec cnt))))","user":"5a69be17e4b0512ff01cda14"},{"code":"(fn nth_elem [coll, n]\n  (last (take (inc n) coll)))","problem":21,"user":"4fdce986e4b05e33b9224f74"},{"problem":21,"code":"(fn fff \n  [xs b] \n  (if (= b 0) \n    (first xs) \n    (recur (rest xs) (- b 1))\n  )\n)","user":"55f5625de4b06e875b46ce86"},{"problem":21,"code":"(fn get_nth_elem [x n]\n  (if (= n 0)\n    (first x)\n    (get_nth_elem (rest x) (dec n))))","user":"53a94b63e4b047364c044434"},{"code":"(fn inner [lst n]\n    (if (= n 0) (first lst) (inner (rest lst) (- n 1))))","problem":21,"user":"4ff73b7ae4b0678c553fc38c"},{"code":"(fn ntth [li n]\n  (if (= 0 n)\n    (first li)\n    (ntth (rest li) (dec n))))","problem":21,"user":"50c95c4fe4b0bed41a12298f"},{"problem":21,"code":"#(if\n     (= %2 0)\n     (first %1)\n     (recur (rest %1) (- %2 1)))","user":"53daca15e4b0e771c30254a9"},{"code":"(fn get-n [x n]\n  (if (= n 0)\n    (first x)\n    (get-n (rest x) (- n 1))))","problem":21,"user":"4ff2430ae4b0678c553fc336"},{"problem":21,"code":"(fn [value position] \n  (if (= position 0) \n    (first value) \n    (recur (rest value) (dec position))))","user":"5894b298e4b00487982d5261"},{"problem":21,"code":"(fn n-th [col idx] \n  (loop [remaining col i 0]\n    (if (= i idx)\n      (first remaining)\n      (recur\n       (rest remaining)\n       (inc i)))))","user":"5d13c5d2e4b0902706380dbf"},{"problem":21,"code":"(fn _nth [s, n] (if (zero? n)\n                  (first s)\n                  (_nth (rest s) (- n 1))))","user":"5b13f482e4b0cc2b61a3be58"},{"problem":21,"code":"(fn [a b] (first(reverse(take(+ 1 b) a))))","user":"59f043d0e4b0966464fe6a3d"},{"problem":21,"code":"(fn [vect index] \n     (loop [v vect i index]\n       (if (= i 0) (first v) (recur(rest v) (dec i)))))","user":"5ebaa4a3e4b00a66d4a95258"},{"problem":21,"code":"(fn [s i]\n  (loop [s s i i]\n    (if (= i 0)\n      (first s)\n      (recur (rest s) (dec i)))))","user":"5a29ee57e4b09cafd31c7f2b"},{"problem":21,"code":"(fn [s x] (last(take(inc x) s)))","user":"550f70bee4b06e50f9beb177"},{"problem":21,"code":"(fn funcs [x, n] \n  (if (= n 0) \n    (first x) (funcs (rest x) (- n 1))) )","user":"5ab184c9e4b073f1774425ce"},{"problem":21,"code":"(fn [a b](get (vec a) b))","user":"5b445421e4b02d533a91bc40"},{"problem":21,"code":"(fn [s n] \n  (loop [idx 0 cur (seq s)] \n    (if (= idx n)\n      (first cur)\n      (recur (+ 1 idx) (rest cur)))))","user":"5f2e6d97e4b033932238a677"},{"problem":21,"code":"(fn [s index]\n  (loop [s s\n         count 0]\n    (if (= count index)\n      (first s)\n      (recur (rest s) (inc count)))))","user":"5ab93449e4b073f177442692"},{"code":"#(.get %1 %2)","problem":21,"user":"4ef8f78f535dced4c769f262"},{"problem":21,"code":"(fn [a b] println ((vec a) b))","user":"5dd47f7ce4b0948ae9d9ad6d"},{"code":"(fn mynth [xs n] (if (= n 0)\r\n                     (first xs)\r\n                     (mynth (rest xs)\r\n                            (- n 1))))","problem":21,"user":"502d30b1e4b013c13c6a99f0"},{"problem":21,"code":"(fn [seq index]\n   (loop [i index\n          s seq]\n     (if (= 0 i)\n       (first s)\n       (recur (dec i) (next s)))))","user":"542b764ae4b0dad94371f28d"},{"code":"(fn [x, y] (last (drop-last  (- (count x) (+ y 1)) x)))","problem":21,"user":"5346bb5be4b084c2834f4a43"},{"code":"(fn [li index]\n  (loop [li li index index]\n   (if (= 0 index)\n     (first li)\n     (recur (rest li) (dec index))\n   )\n  )\n)","problem":21,"user":"513caa36e4b0b86ece9f3229"},{"code":"(fn [lst n] \n  (first (nthnext lst n)))","problem":21,"user":"537d4a69e4b06839e8705e8a"},{"problem":21,"code":"(fn[x y]\n         (let [v (vec x)]\n         (get v y)))","user":"564d21cae4b0284900eef67a"},{"problem":21,"code":"#(-> (nthnext %1 %2) first)","user":"5551bddae4b0deb715856def"},{"problem":21,"code":"(fn [x y]\n  (last \n   (take \n    (+ 1 y)\n    x)\n  ))","user":"5dea7d1de4b0986d99407f9b"},{"problem":21,"code":"(fn [input-loop n]\n  (loop [cnt n tl input-loop]\n    (if (zero? cnt)\n      (first tl)\n      (recur (dec cnt) (rest tl))\n      )\n    )\n  )","user":"5bdf651ee4b0ed4b8aab4c6d"},{"problem":21,"code":"(fn[ seql index ] (  last (take (inc index) seql )))","user":"57af249fe4b0fbc9809a272b"},{"problem":21,"code":"(fn xth [coll x]\n  (if (= x 0) (first coll)\n    (xth (rest coll) (- x 1))))","user":"565b818ce4b068f2fe63dc05"},{"problem":21,"code":"(fn seq-nth-elem [ls index]\n  (first\n    (reverse\n      (take (+ index 1) ls))))","user":"59ece650e4b0249b72820795"},{"problem":21,"code":"(fn [seq i] (get (vec seq) i))","user":"5bc352abe4b07a9b28b10041"},{"problem":21,"code":"(fn [list index]\n              (loop [list list\n                     current 0]\n                (if (= current index)\n                  (first list)\n                  (recur (rest list) (inc current)))))","user":"5e491182e4b043cd24807a46"},{"code":"(fn my-nth [coll n]\n  (if (= n 0)\n    (first coll)\n    (recur (rest coll) (dec n))))","problem":21,"user":"4e8dc25f535d65386fec213a"},{"problem":21,"code":"(fn [arg1 arg2]\n  (loop [x arg1 y 0]\n    (if (= y arg2)\n     \t(first x)\n      \t(recur (rest x) (+ y 1))\n     )\n  )\n)","user":"588b1eb5e4b05c141a256071"},{"code":"(fn xth [col pos] (if (> pos 0) (xth (rest col) (dec pos)) (first col)))","problem":21,"user":"533b2937e4b0e30313ee6cc9"},{"code":"(fn self[l x]\n (if (= 0 x)\n  (first l)\n  (self (rest l) (dec x))\n )\n )","problem":21,"user":"52ba447ee4b07a9af57922ce"},{"code":"(fn [coll, n] (last (take (+ n 1) coll)))","problem":21,"user":"52ab51c4e4b0c58976d9ac73"},{"code":"(fn nth-elem [s x] (last (take (inc x) s)))","problem":21,"user":"5021eb15e4b00bba4502f7ab"},{"problem":21,"code":"(fn [c i]\n  (loop [m 0 ls c]\n   (cond\n    (= m i) (first ls)\n    :else (recur (inc m) (rest ls)))))","user":"57213df6e4b0c5bde472c0ab"},{"problem":21,"code":"(fn [a b] (if (zero? b)\n(first a)\n(recur (rest a) (- b 1))))","user":"54ca5709e4b057c6fda3a258"},{"code":"(fn take_nth [x n] (first (drop n x)))","problem":21,"user":"53123e3fe4b08068f379ecf7"},{"problem":21,"code":"(fn mynth [l c]\n  (loop [lst l ct 0]\n    (cond\n      (= c ct) (first lst)\n      :else (recur (rest lst) (inc ct)))))","user":"5fb8fe30e4b03f550f448223"},{"problem":21,"code":"(fn [s n] \n  (loop [x 0 l s] \n    (if (= x n)\n      (first l)\n      (recur (inc x) (rest l)\n             )\n      )\n    )\n  )","user":"5146cac9e4b04ef915e3731c"},{"code":"(fn pick[thing n] (if (= n 0) (first thing) (pick (rest thing) (- n 1))))","problem":21,"user":"53570034e4b04ce2eb3ed273"},{"problem":21,"code":"(fn [xs idx]\n  (first (drop idx xs))\n  )","user":"54cec2a9e4b018d918be98c1"},{"code":"(fn [x n] (\n           (zipmap (range (count x))\n                    x\n           )\n           n\n          )\n)","problem":21,"user":"52ecb1efe4b0705949c44454"},{"code":"(fn [x y] (let [k #(reverse (map (fn [x y] x) %1 (range %2)))]\n(first(map (fn [x y] x) (k x (inc y)) [1]))))","problem":21,"user":"51e3cf8ee4b0efabf93c02a3"},{"code":"(fn getnth [x y] (first (drop y x)))","problem":21,"user":"4e697e41535d8ccf87e9fe9c"},{"problem":21,"code":"(fn find-nth [l count] (if (pos? count) (find-nth (rest l) (dec count)) (first l)))","user":"557e6b73e4b05c286339e0d6"},{"problem":21,"code":"(fn sl [x s]\n  (if (= s 0)\n    (first x)\n    (sl (rest x) (- s 1))\n      ))","user":"5b6473eee4b0c6492753e73f"},{"code":"(fn [a-seq pos] \n  (second \n    (first \n      (filter #(= pos (first %)) \n                   (map #(list %1 %2) (iterate inc 0) a-seq)\n))))","problem":21,"user":"4e6dc95a535d5021c1a895f1"},{"problem":21,"code":"(fn my-nth [s n]\n\t(get (into [] s) n)  \n)","user":"5c2e6309e4b0d62ef62d9f03"},{"problem":21,"code":"(fn [array index] (first (keep-indexed (fn [in el] (if (= in index) el)) array)) )","user":"53e4bc2ee4b036ad0777e44d"},{"problem":21,"code":"(fn [col n]                                                                                   \n  (loop [col col                                                                          \n         n   n]                                                                                \n    (cond                                                                                     \n      (<= n 0) (first col)                                                                        \n      (>  n 0) (recur (drop 1 col) (dec n)))))","user":"524b827ce4b09eba1c0223d7"},{"problem":21,"code":"(fn nth_ [s n] (if (= 0 n) (first s) (nth_ (rest s) (dec n))))","user":"5e5b8d92e4b0fd0acd158658"},{"code":"(fn [col indx]\n    (get (apply array-map (interleave (range (count col)) col)) indx))","problem":21,"user":"5262efade4b03e8d9a4a709f"},{"code":"(fn kth [l n]\n  (if (zero? n)\n    (first l)\n  (recur (rest l) (dec n))))","problem":21,"user":"50812debe4b01a93d3f38e4c"},{"problem":21,"code":"#(loop [coll %1\n        n %2]\n   (if (> n 0)\n     (recur (rest coll) (dec n))\n     (first coll)))","user":"5db19599e4b010eb3c36cd05"},{"problem":21,"code":"(fn my-nth [lst n]\n  \"Return nth element of a collection\"\n  (loop [lst lst cnt n]\n    (if (zero? cnt)\n      (first lst)\n      (recur (next lst) (dec cnt) ))))","user":"5d614059e4b0c9e5857d500e"},{"problem":21,"code":";;#(first (reverse (take (+ 1 %2) %1)))\n\n#(first (drop %2 %1))","user":"59dcbfe8e4b0ef0a1e9b5ca5"},{"code":"(fn myiterate [list number]\n  (loop [coll list n number]\n    (if (zero? n)\n      (first coll)\n      (recur (next coll) (dec n))\n    \n    )))","problem":21,"user":"524e9918e4b0541d1855b7e6"},{"code":"(fn foo [list n]\n  (if (= n 0)\n    (first list)\n    (foo (rest list) (- n 1))))","problem":21,"user":"500850f4e4b028e089d3518b"},{"problem":21,"code":"(fn apna-n [coll x] (first(first(filter #(= (- (count coll) x) (count %)) (take (count coll) (iterate rest coll))))))","user":"59c12c50e4b0a024fb6ae47a"},{"problem":21,"code":"(fn [s n] (loop [x 0\n                 y s]\n            (if (= x n)\n              (first y)\n              (recur (+ 1 x) (rest y)))))","user":"5d2371c1e4b02ea6f0fb6a0a"},{"problem":21,"code":"(fn get_nth [x n] \n  (if (or (empty? x) (< n 0)) nil\n    (if (= n 0) (first x) (get_nth (rest x) (dec n)))\n  )\n)","user":"55293c48e4b0ffed3738f946"},{"code":"(fn [l k]\n  (if (= k 0)\n    (first l)\n    (recur (rest l) (dec k))))","problem":21,"user":"4f7e29dde4b06e829148e1ca"},{"code":"(fn [coll n]\n  (first ((apply comp (repeat n rest)) coll)))","problem":21,"user":"51269362e4b083bb8f88cf09"},{"problem":21,"code":"#((comp first reverse) (take (+ 1 %2) %1))","user":"54d61052e4b0a52adc2e2016"},{"problem":21,"code":"(fn get-nth [lst n]\n  (if (= 0 n)\n    (first lst)\n    (get-nth\n     (rest lst)\n     (dec n))))","user":"53ac2d45e4b047364c04445b"},{"problem":21,"code":"(fn [ar num]\n  (let [start 0]\n    (if (= start num)\n      (first ar)\n      (recur (rest ar) (- num 1)))))","user":"5512969ce4b06e50f9beb1af"},{"problem":21,"code":"(fn get-nth\n  [list n]\n  (loop [i 0 list list]\n    (if (= i n)\n      (first list)\n      (recur (inc i) (rest list))\n      )))","user":"581fe550e4b04b46fc4b0f4c"},{"code":"(fn [coll i]\n  (if (= i 0) (first coll) (recur (rest coll) (dec i))))","problem":21,"user":"4e7bc07c535db169f9c796b9"},{"problem":21,"code":"(fn [coll index]\n   (first (remove nil? (map #(when (= %2 index) %) coll (range)))))","user":"58a34442e4b02bd94d917ef2"},{"problem":21,"code":"(let [flip (fn [f x y] (f y x))]\n  (comp first (partial flip drop)))","user":"55e274b4e4b050e68259b436"},{"problem":21,"code":"(fn find-nth [coll n]\n  (loop [i 0\n         coll coll]\n    (if (= i n)\n      (first coll)\n      (recur (inc i)\n             (rest coll)))))","user":"5cec07fce4b0a17bb84e2bf0"},{"problem":21,"code":"(fn [lst i] (first (drop i lst)))","user":"56603e5fe4b068f2fe63dc4a"},{"code":"(fn ennt [x y] (if (= 0 y) (first x) (ennt (rest x) (- y 1))))","problem":21,"user":"50a00725e4b08df8156e9e46"},{"code":"(fn [coll idx]\n  (let [easy (if (vector? coll)\n                coll\n                (vec coll))]\n    (easy idx)))","problem":21,"user":"4ea3826c535d7eef308072c6"},{"code":"(fn [s n]\n  (last (take (+ n 1) s)))","problem":21,"user":"4f934325e4b0dcca54ed6cb8"},{"code":"(fn my-nth [seq n]\n  (if (= n 0)\n      (first seq)\n      (my-nth (rest seq) (- n 1))))","problem":21,"user":"5097ea89e4b087ccf61a7af4"},{"code":"(fn [col n] \n  (if (zero? n) (first col) (recur (rest col) (- n 1))))","problem":21,"user":"505dee52e4b0b06147a37273"},{"code":"(fn foo [my_list n]\n  (if (= n 0)\n    (first my_list)\n    (foo (rest my_list) (dec n))))","problem":21,"user":"51c2fc7de4b0d204dbe2ca2e"},{"code":"(fn [l n]\n    (if \n      (> n 0)\n      (recur (rest l) (- n 1))\n      (first l)))","problem":21,"user":"4e7e8684535db169f9c79717"},{"problem":21,"code":"(fn n-ele \n  [sequencia n]\n  (get (vec sequencia) n))","user":"59273d74e4b072a2710fcec4"},{"code":"(fn [coll index] (last (take (inc index) coll)))","problem":21,"user":"4f03ba15535dcb61093f6b56"},{"code":"(fn get-nth [s n]\n  (first (loop [my-coll s n-left n]\n    (if (= 0 n-left)\n      my-coll\n      (recur (next my-coll) (- n-left 1))))))","problem":21,"user":"4f0324d2535dcb61093f6a69"},{"code":"(fn getat [coll n]\n  (if (= n 0)\n    (first coll)\n    (getat (rest coll) (- n 1))\n  )\n)","problem":21,"user":"503614e5e4b0fbe0a74d26bd"},{"code":"(fn[n lst] (.get n lst))","problem":21,"user":"5228f870e4b0186687e23a98"},{"problem":21,"code":"(fn [xs n]\n\t(if (zero? n)\n      (first xs)\n      (recur (rest xs) (dec n))))","user":"58d2bfc8e4b03c36ff7e5909"},{"problem":21,"code":"(fn [xs n] ( last (take (inc n) xs)))","user":"549c181ce4b0f3d1d8e70f83"},{"code":"(fn [xx x] (first (drop x xx)))","problem":21,"user":"4fec550de4b0681fd128dca6"},{"problem":21,"code":"(fn getNth [x y] \n  (loop [seqe x cnt 0 numb y]\n  (if (= cnt numb)\n  (first seqe)\n  (recur (rest seqe) (inc cnt) (+ numb 0)))\n))","user":"55b1ab40e4b0da326a65cf6e"},{"problem":21,"code":"; recursive\n(fn nth_el [list n]\n  (if (= n 0)\n    (first list)\n    (nth_el (rest list) (- n 1))\n  ))","user":"54060ae8e4b0addc1aec668e"},{"problem":21,"code":"(fn my-nth [s n] (loop [s s n n] (if (= n 0) (first s) (recur (rest s) (dec n)))))","user":"562110f6e4b064ca9f4b16ec"},{"problem":21,"code":"(fn ynth [x y] (first (nthrest x y)))","user":"54caaa48e4b057c6fda3a267"},{"problem":21,"code":"(fn foo[x y] (if (> y 0)(foo (rest x)(dec y))(first x)))","user":"5d1ef23ee4b02ea6f0fb69bb"},{"code":"(fn getn [x, y] (get (vec x) y))","problem":21,"user":"525636dfe4b0541d1855ba0d"},{"code":"#(get (zipmap (range (inc %2)) %1) %2)","problem":21,"user":"51e1a1fae4b06a68e693eaf6"},{"problem":21,"code":"(fn [s i] (loop [s2 s i2 i] (if (= i2 0) (first s2) (recur (rest s2) (dec i2)))))","user":"5bfbf75ee4b0bdcf453d15df"},{"problem":21,"code":"(fn xth [inp x] ((vec inp) x))","user":"5747e22ce4b009280f9f2b7c"},{"code":"(fn get-nth [coll index]\r\n  (let [indexed (fn [s] (map vector (iterate inc 0) s))]\r\n    (last (first (filter #(= (first %) index) (indexed coll))))))","problem":21,"user":"4dd7c1da535d2dad7130b5d4"},{"code":"(fn [s i] \n\t(loop [index 0, ss s]\n\t\t(if (< index i)\n\t\t\t(recur (inc index) (next ss) )\n\t\t\t(first ss)\n\t\t)\n\t)\n)","problem":21,"user":"519126d5e4b0f8ef0be96bff"},{"problem":21,"code":"(fn Nth [l n] (if (= n 0) (first l) (Nth (rest l) (- n 1))))","user":"5ec7550ce4b08d0ec38692dd"},{"code":"(fn [l n]\n  (if (<= n 0)\n    (first l)\n    (recur (rest l) (- n 1))))","problem":21,"user":"4ff69377e4b0678c553fc37f"},{"problem":21,"code":"(fn my-nth\n    ([s n] (my-nth s n 0))\n    ([s n current]\n       (if (= n current)\n         (first s)\n         (recur (rest s) n (+ 1 current)))))","user":"51803613e4b04f45bde7d8fd"},{"problem":21,"code":"(fn [inlist n]\n  (loop [cnt n remainder inlist]\n    (if (zero? cnt)\n        (first remainder)\n        (recur (dec cnt) (rest remainder)))))","user":"5a744c2ae4b0512ff01cdaae"},{"code":"(fn [x y] (\n  (vec x) y))","problem":21,"user":"4ffd8aa3e4b0678c553fc3e2"},{"code":"(fn [x y] (get (zipmap (range (count x))x) y ))","problem":21,"user":"536a52f1e4b0243289761eac"},{"problem":21,"code":"#(\n  last\n   (take (+ %2 1)  %1)\n   \n  )","user":"566648e6e4b0e91d5f5c566c"},{"problem":21,"code":"(fn [in n]\n  (loop [s in\n         c 0]\n    (if (= c n)\n      (first s)\n      (recur (rest s) (inc c)))))","user":"5f6f461ae4b02876ed9fd06f"},{"problem":21,"code":"(fn clj21 [list e] (if (= e 0) (first list) (clj21 (rest list) (- e 1))))","user":"547884d7e4b0c51c1f4d72bd"},{"problem":21,"code":"#(loop [coll %1 current-n 0]\n    (if (= %2 current-n)\n      (first coll)\n      (recur (next coll) (inc current-n))))","user":"55a22634e4b0acc240e31520"},{"problem":21,"code":"(fn [x y]\n  ((vec x) y))","user":"566d71b1e4b0a866af6896ca"},{"problem":21,"code":"(fn [xs n]                                                                             \n     (if (= n 0)                                                                          \n       (first xs)                                                                         \n       (recur (rest xs) (dec n))))","user":"60460876e4b02d28681c77bd"},{"code":"(fn [seq pos]\n  (last (take (+ pos 1) seq)))","problem":21,"user":"52eb400ee4b0705949c4443b"},{"problem":21,"code":"(fn mNth [xs n] (first (drop n xs)))","user":"550e0373e4b06e50f9beb162"},{"problem":21,"code":"(fn\n  [list num]\n  ((fn [list num iteration]\n     (if (> iteration num)\n       (first list)\n       (recur (rest list) num (inc iteration))\n       )\n    )list num 1))","user":"544fb010e4b0e39780006997"},{"code":"(fn [lst cnt]\n   (cond (nil? lst) nil\n         (zero? cnt) (first lst)\n         :else (recur (rest lst) (dec cnt))))","problem":21,"user":"4f409e29e4b0e243712b1fb6"},{"problem":21,"code":"(fn my-nth [xs n] (if (= 0 n) (first xs) (recur (rest xs) (dec n))))","user":"5d25578de4b02ea6f0fb6a33"},{"code":"(fn [coll n] (first(nthnext coll n)))","problem":21,"user":"5090c8e2e4b0742c82730ad9"},{"code":"(fn [sq n]\n  (loop [s sq\n         place n]\n    (if (= place 0)\n        (first s)\n        (recur (rest s) (dec place)))))","problem":21,"user":"4f038cee535dcb61093f6b20"},{"problem":21,"code":"(fn [col x]\n  (if (< x 1)\n    (first col)\n    (recur (rest col) (dec x))))","user":"58a822e4e4b01a0c0b232950"},{"problem":21,"code":"(fn ntheist [s x]\n  (last (take (+ x 1) s)))","user":"5c9b848fe4b048ec896c5acf"},{"code":"(fn [x y] (first (take-last (- (count x) y) x)))","problem":21,"user":"4fde0365e4b05e33b9224f7f"},{"problem":21,"code":"(fn [col el] (last (take (inc el) col)))","user":"56ce20ffe4b0ea9b8538f75d"},{"code":"(fn [coll i] (last (take (inc i) coll)))","problem":21,"user":"507ddf55e4b0a03698d01ca8"},{"code":"(fn [my-seq n] (last (take (+ n 1) my-seq)))","problem":21,"user":"528f96b8e4b0239c8a67aef7"},{"problem":21,"code":"(fn [xs n]\n  (if (= 0 n)\n    (first xs)\n    (recur (drop 1 xs) (- n 1))))","user":"5a08053fe4b01bb0ae8afde7"},{"problem":21,"code":"(fn [seq-list index]\n  (loop [seq-list seq-list counter 0]\n    (if (= counter index) (first seq-list)\n      \t(recur (rest seq-list) (inc counter)))))","user":"596aaeefe4b069c0a1a19808"},{"problem":21,"code":"(fn [l i] (loop [cnt i lst l] (if (= 0 cnt) (first lst) (recur (dec cnt) (rest lst)))))","user":"575f6a80e4b08062f99a4e80"},{"code":"(fn [L n]\n  (loop [lst L pos n]\n    (if (= pos 0) (first lst)\n      (recur (rest lst) (- pos 1)))))","problem":21,"user":"50afa883e4b0c3f5ed5c29a2"},{"code":"(fn [x y] (.get (comp x) y))","problem":21,"user":"50db2c47e4b02e6ac9592c74"},{"problem":21,"code":"(fn [l c] (if (= (count l) (- (count l) c)) (first l) (recur (rest l) (- c 1))))","user":"56a946bbe4b07966d5a8a075"},{"problem":21,"code":"(fn [s n]\n  (if (<= n 0)\n    (first s)\n    (recur (rest s) (dec n))))","user":"5b799354e4b047b03b203706"},{"problem":21,"code":"(fn _nth [ls n] (get (vec ls) n))","user":"546d41bde4b00cfc9eacc18c"},{"code":"(fn [l n] (get (vec l) n))","problem":21,"user":"4e3ae7cd535deb9a81d77f4e"},{"code":"(fn [s n]\n  (if (= 0 n)\n     (first s)\n    (recur (next s) (dec n))))","problem":21,"user":"50d4909ce4b09cc622d65a6c"},{"problem":21,"code":"(fn f [s n] (last (take (+ n 1) s)))","user":"52df9e8de4b09f7907dd1403"},{"problem":21,"code":"(fn [collection x]\n    (loop [ collection collection\n            x x\n            idx 0\n          ]\n      (if (first collection)\n        (if (= idx x)\n          (first collection)\n          (recur (rest collection) \n            x\n            (inc idx)\n          )\n        )\n      )\n    )\n  )","user":"598c9564e4b02b9968b84d09"},{"problem":21,"code":"(fn [lst n]\n  (loop [i 0 l lst]\n    (if (= i n)\n      (first l)\n      (recur (inc i) (rest l)))))","user":"60e2aca7e4b002d5a55d5f3b"},{"problem":21,"code":"(fn f [ls i] ((fn f2 [ls i pos] (if (= pos i) (first ls) (f2 (rest ls) i (inc pos)))) ls i 0))","user":"5675f2f4e4b05957ce8c6153"},{"code":"(fn notnth\n    [v n]\n    (if (zero? n)\n        (first v)\n        (notnth (rest v)\n                (dec n))))","problem":21,"user":"5140b7bae4b076604f1aa55b"},{"problem":21,"code":"(fn kth [l k]\n  (if (= k 0) (first l)\n    (kth (rest l) (dec k))))","user":"589f4387e4b02bd94d917e7b"},{"problem":21,"code":"(fn enth [col n] (if (= 0 n) (first col) (enth (rest col) (dec n) )))","user":"551e8627e4b08d5046aa8a45"},{"problem":21,"code":"(fn dosia [xs count] (if (= count 0) (first xs) (dosia (rest xs) (- count 1))))","user":"567d132ee4b05957ce8c61c3"},{"problem":21,"code":"(fn get_nth [col n]\n  (if (= n 0) (first col) (get_nth (rest col) (dec n))))","user":"5af4446de4b0cc2b61a3bc93"},{"problem":21,"code":"(fn my-nth\n  [coll n]\n  (if (zero? n)\n    (first coll)\n    (recur (next coll) (- n 1))))","user":"6062e1bde4b03746e80ebf75"},{"code":"(fn [s n]\n  (letfn [(iter [ss cnt]\n           (if (= n cnt)\n             (first ss)\n             (recur (rest ss) (inc cnt))))]\n    (iter s 0)))","problem":21,"user":"5125745ae4b05d10e3e395f9"},{"problem":21,"code":"(fn my-nth [lst n]\n  (let [x (first lst)\n        xs (next lst)]\n    (if (= n 0)\n      x\n      (my-nth xs (- n 1)))))\n\n;; destructuring collections in the parameter list evaluates to a call to (nth) which is why you can destructure in this challenge","user":"5a1c94dee4b0ff51aa4b3249"},{"code":"(fn [L n] (if (zero? n) (first L) (recur (rest L) (dec n))))","problem":21,"user":"535bf08fe4b04ce2eb3ed2af"},{"problem":21,"code":"(fn [l, n]\n  (loop [lst l elm n]\n    (if (= 0 elm)\n      (first lst)\n      (recur (rest lst) (- elm 1)))))","user":"5739cbe4e4b0cd1946bd107c"},{"problem":21,"code":"(fn [seq,target] (loop [s seq\n                 \t     pos 0]\n                   (if (< pos target)\n                     (recur (rest s) (+ pos 1))\n                     (first s))))","user":"56018dd4e4b04bb52996e18f"},{"code":"#(first(nthrest%1 %2))","problem":21,"user":"4ff5cffce4b0678c553fc371"},{"problem":21,"code":"(fn bremen [coll index] \n  (if (< index 1)\n    (first coll)\n    (recur\n     (rest coll)\n     (- index 1))))","user":"596c1f25e4b069c0a1a19825"},{"code":"(fn [cols i]\n         (loop [cols cols\n                idx 0\n                ]\n           (if (= idx i)\n             (first cols)\n             (recur (rest cols) (+ idx 1))\n             )\n           )\n         )","problem":21,"user":"533e7f63e4b085b17e897d8e"},{"problem":21,"code":"(fn [elements n]\n  (if (zero? n)\n    (first elements)\n    (recur (rest elements) (dec n))))","user":"5455510fe4b0e397800069df"},{"problem":21,"code":"(fn [x y] (first (take 1 (reverse (take (+ y 1) x )))))","user":"57dd5545e4b0bd073c20243f"},{"code":"(fn [l i]\n  (if (= i 0) (first l) (recur (rest l) (dec i)))\n)","problem":21,"user":"534adc16e4b084c2834f4a73"},{"code":"(fn [elem num] (first (drop num elem)))","problem":21,"user":"5048f98ee4b06e644c63f1af"},{"code":"(fn [x y]\n  (last (take (+ y 1) x ) )\n )","problem":21,"user":"4e9dd9ab535dbda64a6f6b8d"},{"problem":21,"code":"(fn [s n]\n  (if (and (next s) (< 0 n))\n    (recur (next s) (dec n))\n    (first s)))","user":"5f520098e4b0a0bc16850a6c"},{"code":"(fn [x n]\n  (loop [index 0\n         x x]\n    (if (= index n)\n      (first x)\n      (recur (inc index) (rest x)))))","problem":21,"user":"538d464ee4b0b51d73faae69"},{"problem":21,"code":"(fn [l n] (first (keep-indexed (fn [idx v] (if (= idx n) v)) l) ))","user":"5454b84ce4b0e397800069d9"},{"problem":21,"code":"(fn func [col n] \n  (cond\n   (= n 0) (first col)\n   :else (func (rest col) (dec n) )))","user":"53bf0587e4b0c98a41f5cc98"},{"problem":21,"code":"(fn penultimate [x y]\n  (if (= 0 y)\n    (first x)\n    (penultimate (rest x) (- y 1)\n    )\n  )\n  )","user":"5710b136e4b09c608db70437"},{"code":"(fn [s n]\n  (loop [s s n n i 0]\n    (if (= n i)\n      (first s)\n      (recur (rest s) n (inc i)))))","problem":21,"user":"4f5d5d59e4b0030a34fb2b39"},{"code":"(fn get-nth [col n]\n  (->> col (take (+ n 1)) (last)))","problem":21,"user":"51f8e057e4b09be9c177e53d"},{"code":"(fn nth2 [col index] (if (= index 0) (first col) (nth2 (rest col) (dec index))))","problem":21,"user":"52b9b86ee4b07a9af57922c1"},{"code":"#(loop [x %1 y %2] ( if (> y 0) (recur (next x) (dec y)) (first x)))","problem":21,"user":"52808897e4b0757a1b171404"},{"problem":21,"code":"(fn [x coll] (first (drop coll x)))","user":"59c190c3e4b0a024fb6ae48b"},{"code":"(fn [coll i]\n  ((fn step [coll i]\n     (if (> i 0)\n       (step (rest coll) (dec i))\n       (first coll)))\n   coll i))","problem":21,"user":"52cda397e4b07d0d72b2737a"},{"code":"(fn [sequence i]\n      (loop [s sequence cnt 0]\n            (if (= cnt i)\n                (first s)\n              (recur (rest s) (inc cnt)))))","problem":21,"user":"5238ca2de4b0d705d026eef6"},{"problem":21,"code":"(fn [c i] (first (filter #(not= % nil) (map-indexed #(if (= %1 i) %2 nil) c))\n         ))","user":"578151ade4b0d36ec5835e83"},{"code":"(fn [l, n](first (drop n l)))","problem":21,"user":"52f818a6e4b047fd55836fcc"},{"problem":21,"code":"(fn [s n] (first (drop n s)) )","user":"560b483ee4b05f002753df16"},{"problem":21,"code":"(fn [list num] (first (subvec (vec list)num)))","user":"568ad4d8e4b0dcc4269f409b"},{"code":"(fn [coll index]\n  ((vec coll) index))","problem":21,"user":"5392500ae4b0b51d73faaeaf"},{"problem":21,"code":"#(loop [ my-seq %1 pos %2 index 0]\n   (if (= pos index)\n     (first my-seq)\n     (recur (rest my-seq) pos (inc index))))","user":"608335a4e4b0736b099e42e3"},{"code":"(fn [coll idx] \n  (if (= idx 0) \n    (first coll) \n    (recur (next coll) (dec idx))))","problem":21,"user":"4fd7962ee4b0dab7d829f385"},{"code":"(\n    fn foo[n, b] (\n      if (= b 0)\n        (first n)\n        (foo (rest n) (- b 1))\n      \n    )\n  )","problem":21,"user":"50be6de4e4b00fb48fed2ef5"},{"code":"(fn enth [xs i]\n  (if (= i 0)\n    (first xs)\n    (enth (rest xs) (- i 1))\n  )\n)","problem":21,"user":"5136f659e4b04059df19f2fd"},{"problem":21,"code":"(fn t[x n] (if (= n 0) (first x) (t (rest x) (- n 1))))","user":"583019b8e4b051871117bfff"},{"code":"(fn [x n]\n  (loop [s x curr 0]\n    (if (= curr n)\n      (first s)\n      (recur (rest s) (inc curr)))))","problem":21,"user":"5226f8e9e4b04e78ff2e199a"},{"code":"(fn [s n]\n  (if (zero? n)\n    (first s)\n    (recur (next s) (- n 1))))","problem":21,"user":"52b955f8e4b07a9af57922bc"},{"problem":21,"code":"(fn [vals n]\n   (if (= 0 n)\n     (first vals)\n     (recur (rest vals) (dec n))))","user":"563e1c0ee4b0da801c4e4665"},{"problem":21,"code":"(fn [seqs nelem] (get (vec seqs) nelem))","user":"5643aed5e4b0018b46ad8bfd"},{"code":"(fn [x y]\n      (loop [coll x\n             n y]\n        (if (= n 0)\n          (first coll)\n          (recur (rest coll) (- n 1))))\n      )","problem":21,"user":"52f512eee4b05e3f0be25f29"},{"problem":21,"code":"(fn f [l i] (if (= 0 i) (first l) (f (rest l) (- i 1))))","user":"505106fee4b05ab4c7e07d38"},{"code":"(fn myfn [seq, key] (last (take (+ 1 key) seq)))","problem":21,"user":"4fb1d7ace4b081705acca281"},{"problem":21,"code":"(fn [elements index]\n  (get (into [] elements) index))","user":"5cca7132e4b0ccb06196286f"},{"problem":21,"code":"#(loop [i 0 coll %1]\n   (if (= %2 i)\n     (first coll)\n     (recur (inc i) (rest coll))))","user":"5f265bd9e4b0857314092c8c"},{"problem":21,"code":"(fn [x pos]\n  (if (= pos 0)\n    (first x)\n    (recur(rest x) (dec pos))))","user":"5a401a7de4b0447ef91cc5c5"},{"code":"(fn nth-iter [l n] (if (= 0 n) (first l) (nth-iter (rest l) (- n 1))))","problem":21,"user":"517531c6e4b07031762f2eea"},{"code":"(fn [x y] \n  (loop [elem x i y]\n  (if (= i 0) (first elem) (recur (rest elem) (- i 1))))\n)\n;#(get (vec %1) %2)","problem":21,"user":"527c0513e4b03e8d9a4a75ab"},{"problem":21,"code":"#(\n  (into [] %1)\n  %2\n  )","user":"57ee4909e4b0bfb2137f5bb4"},{"code":"(fn[s n] (first(reverse(take (+ n 1) s))))","problem":21,"user":"4ed8b598535d10e5ff6f52fc"},{"problem":21,"code":"(fn [data n] (last (take (+ n 1) data)))","user":"5470b955e4b00cfc9eacc1bc"},{"code":"(fn  [x n]\n  (if (zero? n)\n    (first x)\n    (recur (rest x) (dec n))\n  )\n)","problem":21,"user":"533e8b54e4b085b17e897d8f"},{"code":"(fn [list n]\n  (if (= 0 n) (first list)\n    (recur (rest list) (dec n))))","problem":21,"user":"4e4aceff535dc968683fc4d0"},{"code":"(fn nth-elem [lst n]\n  (first \n   (drop n lst)))","problem":21,"user":"50e4b066e4b0cb9ec68fbca6"},{"problem":21,"code":"(fn [args index] (get (reduce conj [] args) index))","user":"5791ae28e4b0ebec4cfb75be"},{"problem":21,"code":"(fn [x n] \n  (last \n   (take (+ n 1) x)\n   \n  )\n  )","user":"55a21be1e4b0acc240e3151e"},{"problem":21,"code":"(fn [xs n] \n  (if (= n 0) \n    (first xs)\n    (recur (rest xs) (- n 1))))","user":"5799cae4e4b05b1deef9adcb"},{"problem":21,"code":"(fn [col place]\n  ((apply vector col) place))","user":"5eeeaf56e4b07c55ae4a0514"},{"problem":21,"code":"(fn [seq at] \n  (first (keep-indexed #(if (= at %1) %2) seq))\n)","user":"54d63357e4b0a52adc2e2018"},{"code":"(fn [l n]\n    (if (zero? n)\n      (first l)\n      (recur (rest l) (dec n))))","problem":21,"user":"519a6f80e4b022efe2b3ba97"},{"problem":21,"code":"(fn myn\n  ([s n] (myn s n 0))\n  ([s n i]\n   (if (= n i)\n     (first s)\n     (recur (rest s) n (inc i)))))","user":"5f5df0bfe4b02876ed9fcfeb"},{"problem":21,"code":"(fn [xs n]\n  (loop [xs xs\n         n n]\n    (if (= n 0)\n      (first xs)\n      (recur (rest xs) (- n 1)))))","user":"59cc8d8de4b0a024fb6ae5d5"},{"problem":21,"code":"#(get (vec %) %2) ; turns collection into vector so that we can explore!","user":"53cdbad1e4b00fb29b2212e6"},{"problem":21,"code":"(fn [collection nth_position] (last (take (inc nth_position) collection)))","user":"5d42c88ae4b05dd059a5437e"},{"problem":21,"code":"(fn nth-element [l n]\n   (if (= 0 n)\n     (first l)\n     (nth-element (rest l) (dec n))))","user":"5670ef43e4b0a866af6896fc"},{"problem":21,"code":"#(first (subvec (vec %1) %2 (+ 1 %2)))","user":"5640b135e4b08d4f616f5ee8"},{"problem":21,"code":"(fn [nums, n]\n  (->> nums (drop n) (first)))","user":"548f37c7e4b0e286459a1234"},{"problem":21,"code":"(fn [y n]\n\t(loop [val y cnt n]\n (if (= cnt 0)\n (first val)\n (recur (rest val) (dec cnt)))))","user":"562f45e6e4b0ab312c17ebc8"},{"code":"(fn [s n]\n  (last (take (inc n) s))\n)","problem":21,"user":"4fa792ebe4b081705acca1c5"},{"problem":21,"code":"(fn [sq n] (first (second (split-at n sq))))","user":"54aad6c0e4b09f271ff37cbc"},{"problem":21,"code":"(fn my-nth [ds idx]\n  (loop [rs ds cnt 0]\n    (if (< cnt idx)\n      (recur (rest rs) (inc cnt))\n      (first rs)\n    )\n  )\n)","user":"569e3175e4b0542e1f8d1484"},{"code":"(fn [xs i] ((zipmap (range) xs) i))","problem":21,"user":"4f8c3697e4b02e764a0a518d"},{"code":"(fn [x y]\n  (last (take (+ y 1) x))\n)","problem":21,"user":"4f0f7f2d535d0136e6c2233f"},{"code":"(fn my-nth [list acc]\r\n  (cond\r\n    (= 0 acc) (first list)\r\n    :else (recur (rest list) (- acc 1))))","problem":21,"user":"4fb18b0be4b081705acca27c"},{"code":"(fn [seq ind] (first (rest (take-nth ind seq))))","problem":21,"user":"4e0febe6535d04ed9115e7be"},{"problem":21,"code":"(fn [args count] (first (drop count args)))","user":"57d13683e4b0bd073c202368"},{"problem":21,"code":"(fn f [l i](if (= i 0)\n             (first l)\n             (f (rest l) (- i 1))\n            ))","user":"595930f6e4b066ee0a44af9c"},{"problem":21,"code":"(fn [seqs n]\n  (let [x (vec seqs)]\n  (get x n)))","user":"5db9a6c3e4b010eb3c36cd56"},{"code":"#(if (= 0 %2) (first %) (recur (rest %) (- %2 1)))","problem":21,"user":"4efb87f7535dced4c769f279"},{"problem":21,"code":"(fn el\n  [arr i]\n  (loop\n    [sq arr\n     idx i\n     n 0]\n    (if (= n idx)\n      (first sq)\n      (recur (rest sq) idx (inc n)))))","user":"5ed5a0dce4b016b56eae05d7"},{"code":"#(if (> %2 0)\n    (recur (rest %1) (dec %2))\n    (first %1))","problem":21,"user":"4ede88cb535d10e5ff6f5338"},{"code":"(fn [coll n] (if (= n 0) (first coll) (recur (rest coll) (- n 1))))","problem":21,"user":"4ebbc2dd535dfed6da9c6d73"},{"code":"(fn takenth [l, n] (last (take (+ n 1) l)))","problem":21,"user":"52df586ee4b09f7907dd13ff"},{"problem":21,"code":"(fn [xs index]\n  (loop [x xs\n         y 0]\n    (if (= y index)\n      (first x)\n      (recur (rest x) (inc y))\n      )\n    )\n  )","user":"59fab2f7e4b0ca45a743a36a"},{"problem":21,"code":"(fn [nums x] (first (nthnext nums x)))","user":"5433a9c5e4b0b6b47310fce1"},{"code":"(fn [x y] \n  (loop [lc 0 li x]\n    (if (= lc y)\n      (first li)\n      (recur (+ lc 1) (rest li)))))","problem":21,"user":"4ea0a7c7535d7eef308072ab"},{"code":"(fn [seqs n]\n  (.get seqs n))","problem":21,"user":"5153316ce4b0252ac4b16611"},{"problem":21,"code":"(fn [coll, n] (\n\tfirst (drop n coll)\n))","user":"58cea645e4b03c36ff7e58a6"},{"problem":21,"code":"(fn my-count [xs n]\n  (if (= 0 n)\n    (first xs)\n    (my-count (rest xs) (dec n))))","user":"55f7ebeae4b06e875b46ceb7"},{"problem":21,"code":"(fn[x, y] (get (into {} (map-indexed hash-map x)) y))","user":"5ac9057fe4b0e27600da77bb"},{"problem":21,"code":"(fn mth\n  ([xs m] (if (zero? m) (first xs) (mth (rest xs) (dec m)))))","user":"549dd591e4b0f3d1d8e70f98"},{"code":"(fn [coll x]\n  (loop [sub coll i x]\n    (if (= i 0)\n      (first sub)\n      (recur (rest sub) (dec i))\n    )\n  )\n)","problem":21,"user":"4eeb2b3c535d93acb0a668a7"},{"code":"(fn foo [list n] \r\n  (if (> n 0) \r\n    (foo (rest list) (dec n))\r\n    (first list)))","problem":21,"user":"4dca56b6535d5973398f9287"},{"code":"(fn [v n]\n  (loop [f (first v), coll v, i -1]\n    (if (= n i)\n      f\n      (recur (first coll) (rest coll) (inc i)))))","problem":21,"user":"4edb6822535d10e5ff6f531b"},{"code":"(fn [li n] (last (take (+ n 1) li)))","problem":21,"user":"4fe9700fe4b0547ebccb245c"},{"code":"(fn my-nth [s n] (first (nthnext s n)))","problem":21,"user":"4f0f40d3535d0136e6c2233b"},{"code":"(fn my-nth [coll index] \n  (if (= index 0)\n    (first coll)\n    (my-nth (rest coll) (dec index))))","problem":21,"user":"52d3dd37e4b00ebca2f8465c"},{"problem":21,"code":"(fn [x v] (get (vec x) v))","user":"53baa9c0e4b047364c0444fa"},{"problem":21,"code":"(fn [col x]\n  (if (= 0 x)\n    (first col)\n    (recur (rest col) (dec x))))","user":"55d702aae4b0e31453f64a9b"},{"code":"(fn [x y] (first (drop y (take (+ y 1) x))))","problem":21,"user":"52e73b36e4b09f7907dd1483"},{"problem":21,"code":"(fn [coll i] \n  (if (zero? i)\n    (first coll)\n    (recur (rest coll) (dec i))\n  )\n)","user":"57780dd8e4b0979f89651656"},{"code":"(fn [my-seq n]\n  (if (zero? n)\n    (first my-seq)\n    (recur (rest my-seq) (- n 1))))","problem":21,"user":"511d9a24e4b0a5c68a34840b"},{"problem":21,"code":"(fn [ss n] (if (= n 0) (first ss) (recur (rest ss) (dec n))))","user":"5679a4d0e4b05957ce8c618d"},{"problem":21,"code":"(fn foo [x n] (if (zero? n) (first x) (foo (rest x) (dec n))))","user":"5a1bec89e4b0ff51aa4b322f"},{"code":"(fn [coll n]\n  (if (pos? n)\n    (recur (rest coll) (dec n))\n    (first coll)))","problem":21,"user":"4f4fbed7e4b03ad3f0c10ce8"},{"code":"(fn thenth [lst n] \n  (if (= n 0) (first lst) (thenth (rest lst) (- n 1))))","problem":21,"user":"4f88f729e4b033992c121c74"},{"problem":21,"code":"#(->> %1\n      (drop %2)\n      (first))","user":"60ab1536e4b00e9e6653c47e"},{"code":"(fn mynth [coll pos]\n  (if (= pos 0)\n    (first coll)\n    (recur (rest coll) (dec pos))))","problem":21,"user":"53322cece4b019098a6f8b73"},{"problem":21,"code":"(fn [c n] \n  (if (zero?  n )\n    (first c )\n    (recur \n     (rest c )\n     (- n 1))))","user":"562807dfe4b00e49c7cb47dd"},{"code":"(fn my-nth [s n]\n  (if (= 0 n)\n    (first s)\n    (my-nth (rest s) (- n 1))))","problem":21,"user":"508923d5e4b06d8254e936e8"},{"problem":21,"code":"(fn [s n]\n  ((comp first drop) n s))","user":"592be28ae4b072a2710fcf49"},{"problem":21,"code":"(fn a [coll n] (first (drop n coll)))","user":"57599ed3e4b02ea114799323"},{"code":"(fn [s n]\n  (loop [se s i 0]\n    (if (= n i) (first se) (recur (rest se) (inc i)))))","problem":21,"user":"51c342e9e4b0851ac09658f3"},{"problem":21,"code":"(fn [args, seq]\n  (loop [remain args,\n         cnt 0]\n    (if (= seq cnt)\n      (first remain)\n      (recur (rest remain)\n             (inc cnt)))))","user":"55f54e31e4b06e875b46ce84"},{"problem":21,"code":"(fn lst [x n] (first (drop n x)))","user":"563b559ee4b0bfe05bf1180d"},{"code":"#(first (reverse (take (+ 1 %2)  %1)))","problem":21,"user":"5097a95fe4b00ad8bab4e96e"},{"code":"#(-> (vec %1) (get %2))","problem":21,"user":"4fad33e8e4b081705acca236"},{"code":"(fn [s n]\r\n  (when-not (empty? s)\r\n    (if (= n 0)\r\n      (first s)\r\n      (recur (rest s) (dec n)))))","problem":21,"user":"4e0d8c27535d04ed9115e7b7"},{"problem":21,"code":"#_(fn [s x]\n  (.get s x)\n)\n\n#_(.get % %2)\n\n#_(first (drop %2 %))\n\n#_(loop [s % x %2]\n   (if (= x 0) (first s)\n     (recur (next s) (dec x))))\n\n#(loop [s % x %2]\n   (if (= x 0) (first s)\n     (recur (rest s) (dec x))))","user":"57ba55c1e4b0fbc9809a2801"},{"problem":21,"code":"(fn get-nth [seq n]\n  \t(if (= n 0)\n      (first seq)\n      (get-nth (rest seq) (- n 1))))","user":"56cf9d4fe4b0ea9b8538f76c"},{"problem":21,"code":"#(get (into [] %1)\n      %2)","user":"56366f73e4b0bfe05bf117cc"},{"problem":21,"code":"(fn [lst n] (if (zero? n)\n              (first lst)\n              (recur (rest lst) (- n 1))))","user":"5800edaae4b0a837a8b30c48"},{"code":"(fn [arg n] \n  (loop [c n\n         ls (reverse (into '() arg))]\n    (if (= c 0)\n      (first ls)\n  (recur (- c 1) (rest ls)))))","problem":21,"user":"530b9714e4b02e82168697cf"},{"problem":21,"code":"#(loop [iteration 0 liste %]\n  (if (= iteration %2)\n    (first liste)\n    (recur (inc iteration) (rest liste))))","user":"561d6467e4b064ca9f4b16ad"},{"problem":21,"code":"(fn get-n [x i] (if (= i 0)\n            (first x)\n            (get-n (rest x) (- i 1))))","user":"57294e90e4b0c6e51e0d2b19"},{"problem":21,"code":"(fn [ lst n ]\n  (loop [ rst lst i 0 ]\n    (if (= i n)\n      (first rst)\n      (recur (rest rst) (+ i 1)))))","user":"57bbdf98e4b05aa3c4741c33"},{"problem":21,"code":"(fn [l,n] (last (take (inc n) l)))","user":"56a221aee4b0542e1f8d14b8"},{"code":"#(loop [coll %1 pos %2]\n    (if (zero? pos)\n      (first coll)\n      (recur (rest coll) (dec pos))))","problem":21,"user":"4fab259ae4b081705acca212"},{"problem":21,"code":"(fn  bef[arr num] (let [ g (.get arr num)] g))","user":"548e171be4b0e286459a121e"},{"problem":21,"code":"#(loop [l %1 r %2]\n   (if (<= r 0)\n     (first l)\n     (recur (rest l) (- r 1))\n     ))","user":"5674607ae4b05957ce8c6137"},{"code":"(fn l [s n]\n  (if (= n 0)\n    (first s)\n    (l (rest s) (- n 1))))","problem":21,"user":"5100d7dbe4b04f1d96d946df"},{"code":"(fn [x n]\n   (first (reverse (take (+ n 1) x )  ) )\n)","problem":21,"user":"4eb9b1aa535dfed6da9c6d5a"},{"code":"#(loop [counter %2 coll %1]\n  (if (zero? counter) \n    (first coll)\n    (recur (dec counter) (rest coll))))","problem":21,"user":"5071b614e4b0e3170b5a867d"},{"problem":21,"code":"(fn [a-seq n] \n  (loop [acc 0\n         seqs a-seq]\n    (if (= acc n)\n      (first seqs)\n      (recur (inc acc) (next seqs)))))","user":"595fd77ce4b066ee0a44b06f"},{"problem":21,"code":"(fn nth2 [xs n]\n  (if (= 0 n) \n    (first xs)  \n    (nth2 (rest xs) (- n 1))))","user":"5f3adcf4e4b004f08c61c531"},{"problem":21,"code":"(fn getIndex [coll index] (if (= index 0) (first coll) (getIndex (rest coll) (dec index))))","user":"560d98cee4b05f002753df43"},{"problem":21,"code":"(fn getval [list idx] (if (= 0 idx) (first list) (getval (rest list) (dec idx))))","user":"58d1c1b1e4b03c36ff7e58ef"},{"code":"(fn [l n ] (if (= n 0) (first l) (recur (rest l) (- n 1))))","problem":21,"user":"4ed2b168535d44c135fd68dd"},{"code":"(fn [s n] (if (zero? n) (first s) (recur (next s) (dec n))))","problem":21,"user":"503e7f06e4b06c4e0e1fa268"},{"problem":21,"code":"(fn [se nu]\n  (loop [s se\n         n nu]\n    (if (= n 0)\n      (first s)\n      (recur (rest s) (dec n)))))","user":"5d24e49be4b02ea6f0fb6a2a"},{"problem":21,"code":"(fn [col pos] (last (take (+ pos 1) col)))","user":"54b55a2ae4b05787c3b163a0"},{"problem":21,"code":"(fn [c,n] (let [c (vec c)] (get c n)))","user":"5856cdd6e4b0f14aab7c86fa"},{"code":"(fn [list x] (get (vec list) x))","problem":21,"user":"536dcc51e4b0fc7073fd6e62"},{"code":"(fn nth-element [xs n]\n  (if (= 0 n)\n    (first xs)\n    (nth-element (rest xs) (- n 1))))","problem":21,"user":"524a3003e4b05ef8e38e6496"},{"problem":21,"code":"(fn [my-seq n]\n  (first (drop n my-seq)))","user":"546ff701e4b00cfc9eacc1b3"},{"code":"#(loop [sequ %1, n 0] (if (= n %2) (first sequ) (recur (rest sequ) (inc n))))","problem":21,"user":"52d340ebe4b099d49816f0c1"},{"code":"#(loop [l % i %2]\n    (if (< i 1) (first l)\n        (recur (rest l) (dec i))))","problem":21,"user":"5080d6e3e4b01a93d3f38e4b"},{"code":"(fn [coll n] \n  (if (zero? n) (first coll) \n    (recur (rest coll) (dec n))))","problem":21,"user":"50fec710e4b0219f3bc8bd97"},{"code":"(fn [coll n]\n  ((zipmap (iterate inc 0) coll) n))","problem":21,"user":"4fb73af2e4b081705acca2d0"},{"problem":21,"code":"(fn mynth [arg1 arg2] (if (= arg2 0) (first arg1) (mynth (rest arg1) (dec arg2))))","user":"54b2ec84e4b09f271ff37d33"},{"problem":21,"code":"(fn [coll n]\n  (loop [x 0\n         my-vals coll]\n    (if (< x n)\n      (recur (inc x) (rest my-vals))\n      (first my-vals))))","user":"59c180e4e4b0a024fb6ae489"},{"code":"(fn [lst i]\n  (when lst\n    (if (= i 0)\n      (first lst)\n      (recur (rest lst) (dec i)))))","problem":21,"user":"5055899de4b0ce54f56f03fd"},{"code":"(fn nxt [coll i]\n  (if (= 0 i)\n    (first coll)\n    (nxt (rest coll) (dec i))))","problem":21,"user":"4ff0e01fe4b0678c553fc328"},{"code":"(fn [s n]\n  (loop [seq- s, n- n]\n    (if (= n- 0)\n      (first seq-)\n      (recur (rest seq-) (dec n-)))))","problem":21,"user":"52e27304e4b09f7907dd1434"},{"code":"(fn my-nth [l n]\n  (if (zero? n)\n    (first l)\n    (my-nth (rest l) (dec n))))","problem":21,"user":"4dadbcdac9a9d6ed3999dc57"},{"problem":21,"code":"(fn [liste n] (if (= n 0) (first liste) (recur (rest liste)(dec n))))","user":"556f2009e4b09a3098a52519"},{"code":"(fn mynth[a no](->> a (drop no)first))","problem":21,"user":"52cbf89ee4b07d0d72b27354"},{"problem":21,"code":"(fn [col n]\n  (loop [col col\n         i 0]\n    (if (= i n)\n      (first col)\n      (recur (rest col) (inc i))\n    )\n  )\n )","user":"5d78d680e4b02e6b30c9353c"},{"problem":21,"code":"(fn xth [xs m]\n  (if (= 0 m)\n    (first xs)\n    (xth (rest xs) (dec m))))","user":"5ca14eb1e4b048ec896c5b7d"},{"code":"(fn [x n]\n  (let [v (vec x)] (get v n)))","problem":21,"user":"4e707714535d5021c1a89638"},{"problem":21,"code":"(fn [a, idx] (first (drop idx a)))","user":"5f686436e4b02876ed9fd03c"},{"problem":21,"code":"(fn [xs n]\n  ((fn [ys remaining]\n    (if (= 0 remaining)\n      (first ys)\n      (recur (rest ys) (- remaining 1)))) xs n))","user":"56be350ce4b0f26550335981"},{"problem":21,"code":"(fn foo [x n] (first (drop n x)))","user":"55c779f8e4b0e31453f649d2"},{"problem":21,"code":"(fn [my-seq ind] \n  (loop [counter 0 rem-seq my-seq]\n    (if (= counter ind)\n      (first rem-seq)\n      (recur (inc counter) (rest rem-seq)))))","user":"58cbdc3be4b03c36ff7e5856"},{"code":"(fn [x k] (if (= k 0) (first x) (recur (rest x) (- k 1))))","problem":21,"user":"52b49aebe4b0c58976d9ad2b"},{"code":"(fn [s,c] (if (and (next s) (> c 0)) (recur (next s) (dec c)) (first s)))","problem":21,"user":"502ad2cae4b0614b5299611f"},{"problem":21,"code":"(fn get_nth [x y] (if (> (count x) (+ y 1)) (get_nth (butlast x) y) (last x)))","user":"59e696c5e4b0249b728206fd"},{"code":"(fn [arr i] (\n  \t(\n     \tfn [a index currentIndex]\n  \t\t\t(if (= index currentIndex) (first a) (recur (rest a) index (+ currentIndex 1)))\n      )\n   \n   \t\tarr i 0\n  )\n  )","problem":21,"user":"52500c9ae4b0541d1855b825"},{"problem":21,"code":"(fn [l n]\n  (loop [c l\n         i 0]\n    (if (= i n)\n      (first c)\n      (recur (rest c)\n             (inc i)))))","user":"56156feee4b05f002753dfc5"},{"code":"(fn [l n]\n   (if (= n 0)\n      (first l)\n    (recur (rest l) (dec n) ) ) )","problem":21,"user":"530c15f7e4b02e82168697d6"},{"code":"(fn f [v n] (if (> n 0) (f (rest v) (dec n)) (first v)))","problem":21,"user":"524fafdfe4b0541d1855b818"},{"code":"(fn\n  [l n]\n  (loop [list l pos n]\n    (if (zero? pos)\n      (first list)\n      (recur (next list) (- pos 1)))))","problem":21,"user":"523b10dfe4b02f719975bdb8"},{"code":"(fn [lst idx] \n  (first\n    (drop idx lst)))","problem":21,"user":"4f60ed88e4b0defedf855fb2"},{"problem":21,"code":"#(first(reverse(take (+ 1 %2) %1)))","user":"538d70abe4b0b51d73faae6e"},{"problem":21,"code":"(fn [c n]  (first  (take-last (-  (count c) n)  c ))  )","user":"597236fde4b01722bebd4c7f"},{"problem":21,"code":"(fn [x n] (loop [a x k n] (if (zero? k) (first a) (recur (rest a) (dec k)))))","user":"5799ff45e4b05b1deef9add1"},{"problem":21,"code":"(fn [s n]\n  (loop \n    [i 0 se s]\n    (if (= i n)\n      (first se)\n      (recur (inc i) (rest se))\n      )\n    )\n  )","user":"6074f5ede4b069485764de52"},{"code":"(fn [x n]\r\n    (loop [theseq (seq x) thecounter n]\r\n      (if (and (> thecounter 0) theseq) \r\n        (recur (next theseq) (dec thecounter))\r\n        (first theseq))))","problem":21,"user":"4e1f9bb5535d04ed9115e80d"},{"problem":21,"code":"(fn my-nth [x n]\n  (if (= 0 n)\n    (first x)\n    (my-nth (rest x) (dec n))))","user":"53ca213fe4b00fb29b2212c5"},{"problem":21,"code":"(fn my-nth\n  ([sq idx]\n   (if (= idx 0)\n     (first sq)\n     (my-nth (rest sq) idx 1)))\n  ([sq idx counter]\n   (if (= idx counter)\n     (first sq)\n     (my-nth (rest sq) idx (inc counter)))))","user":"5537f30fe4b09218d5f44fd8"},{"problem":21,"code":"(fn [seq pos] (let [take-count (+ pos 1)] (-> (take take-count seq) last)))","user":"5ba24b59e4b0a20761a233bf"},{"problem":21,"code":"(fn\n  [coll index]\n  (loop [cnt index\n        items coll]\n  (if (zero? cnt)\n    (first items)\n    (recur (dec cnt) (rest items)))))","user":"56a79421e4b07966d5a8a05c"},{"code":"(fn [s n] (if (vector? s) (s n) ((into [] s) n)))","problem":21,"user":"50e54fe4e4b049a9877538a0"},{"problem":21,"code":"(fn [sequ n] \n  (last (take (inc n) sequ)))","user":"57d0679ee4b0bd073c202359"},{"problem":21,"code":";;(fn [my-list n]\n;;  \"Return nth element from my-list\"\n;;  (loop [remaining my-list\n;;         current-count 0]\n;;    (if (= current-count n)\n;;\t  (first remaining)\n;;      (recur (rest remaining) (+ 1 current-count)))))\n\n;; Easy way to do it!\n#(first (drop %2 %1))","user":"50c385a8e4b00e537d00254d"},{"code":"(fn [x n]\n  (loop [x x n n]\n    (if (zero? n) (first x)\n      (recur (rest x) (dec n)))))","problem":21,"user":"526f2e16e4b03e8d9a4a7353"},{"problem":21,"code":"(fn [coll elem] (get (vec coll) elem))","user":"567d18c9e4b05957ce8c61c4"},{"code":"(fn [x y] (first (drop y x )) )","problem":21,"user":"52aa40bde4b0c58976d9ac60"},{"problem":21,"code":"(fn [seq n]\n  (-> seq\n      vec\n      (get n)))","user":"5f10fb99e4b091ba50b4dba8"},{"problem":21,"code":"(fn [a b] (last (take (+ b 1) a)) )","user":"58021b0be4b0a837a8b30c6a"},{"code":"(fn [s n] (first (last (take (inc n) (iterate rest s)))))","problem":21,"user":"4f9b5a1ce4b0dcca54ed6d16"},{"problem":21,"code":"#(->> %1 (take (inc %2)) reverse first)","user":"543115a0e4b0dad94371f2e1"},{"code":"(fn [l i] (last (take (inc i) l)))","problem":21,"user":"50a4cbbee4b0344e360f3bc2"},{"code":"(fn ([x y] (last (take (+ y 1)x))))","problem":21,"user":"531395ece4b08068f379ed0a"},{"code":"(fn [a b] (first (drop b  a)))","problem":21,"user":"4f1044af535d64f603146415"},{"code":"(fn [seq idx]\n  (if (= idx 0) (first seq) \n  (recur (rest seq) (dec idx))))","problem":21,"user":"4f45c72be4b0d56e7bb92b8a"},{"problem":21,"code":"(fn [in_s in_index]\n  (if (= in_index 0)\n    (first in_s)\n    (recur (rest in_s) (- in_index 1))))","user":"566899f4e4b04acd4f672df4"},{"code":"#(loop [xs %, i %2]\n   (if (and xs (> i 0)) (recur (rest xs) (- i 1))\n       (first xs)))","problem":21,"user":"4fe98ddae4b0547ebccb2463"},{"code":"(fn [s n]\n  (if (= 0 n)\n    (first s)\n    (recur (rest s) (- n 1))))","problem":21,"user":"5370d152e4b0fc7073fd6e9d"},{"code":"(fn mynth\n  [l i]\n  (if(= 0 i)\n   (first l)\n   (recur (rest l) (dec i))))","problem":21,"user":"51ca15bfe4b09ce160bef5b8"},{"problem":21,"code":"(fn [s i] (if (= i 0) (first s) (recur (rest s) (dec i))))","user":"54e2a779e4b024c67c0cf7d3"},{"code":"(fn [x n] (first (last (split-at n x))))","problem":21,"user":"4fb6918ae4b081705acca2c9"},{"problem":21,"code":"(fn get-nth [coll n]\n  (if (= n 0)\n    (first coll)\n    (recur (rest coll) (dec n))))","user":"53dc94c8e4b094d41abdfefc"},{"problem":21,"code":"(fn \n\t[s n]\n\t(if (zero? n)\n\t  (first s)\n\t  (recur (rest s)(dec n))))","user":"5412b531e4b01498b1a719d7"},{"problem":21,"code":"(fn nth-p [s i] (if (= (inc i) 1) (first s) (nth-p (rest s) (dec i))))","user":"565dcec9e4b068f2fe63dc29"},{"code":"(fn my-nth [lst n]\r\n        (if (= 0 n)\r\n            (first lst)\r\n            (my-nth (rest lst) (- n 1))))","problem":21,"user":"4e68fe94535d8ccf87e9fe94"},{"problem":21,"code":"(fn nth-stuff\n  [coll n]\n  (if (zero? n)\n    (first coll)\n    (recur (rest coll) (dec n))))","user":"57b5dc52e4b0fbc9809a27b3"},{"problem":21,"code":"(fn f [coll i] \n  (if (= i 0) \n    (first coll) \n    (f (rest coll) (dec i)) \n    )\n  )","user":"5680fff3e4b0966858e4d8f6"},{"problem":21,"code":"(fn [coll n]\n  (loop [remaining coll\n         iter 0]\n    (if (= iter n)\n      \t(first remaining)\n      \t(recur (next remaining) (inc iter)))))","user":"573b440ce4b0cd1946bd10a0"},{"problem":21,"code":"#(loop [lista %1 c 0 s %2] (if (= c s) (first lista) (recur (rest lista) (inc c) s)))","user":"53dc05d4e4b094d41abdfefa"},{"problem":21,"code":"(fn [f-xs f-n]\n  (loop [xs f-xs\n         n f-n]\n    (if (= 0 n)\n      (first xs)\n      (recur (next xs) (dec n)))))","user":"55c4b23de4b0e31453f649a3"},{"code":"(fn getnth [l n] \n  (if (= 0 n)\n    (first l)\n    (getnth (rest l) (- n 1))))","problem":21,"user":"4ede716e535d10e5ff6f5336"},{"code":"(fn [x y] (last (take (inc y)  x)))","problem":21,"user":"50c6068fe4b0c9dc10d15c58"},{"code":"(fn [s,n] (first (drop n s)))","problem":21,"user":"4e910e36535d65386fec2159"},{"problem":21,"code":"(fn my-nth [coll n]\n  (loop [i 0\n         cur (first coll)\n         rs (rest coll)]\n    (if (= i n)\n      cur\n      (recur (inc i) (first rs) (rest rs)))))","user":"55a2d5c2e4b0acc240e3152c"},{"problem":21,"code":"#(last (take (inc %2) %1))\n; #(get %1 %2)","user":"5f01952fe4b0cf489e8d7f22"},{"code":"#(->> %1 (drop %2) first)","problem":21,"user":"4db4c93f535dc0f10411755c"},{"problem":21,"code":"(fn [arg1 arg2]\n      (loop [iter arg1 index 0]\n            (if ( = index arg2 )\n              (first iter)\n              (recur (rest iter) (inc index)))))","user":"5cb6256ce4b026601754b947"},{"code":"(fn nel [x n]\n  (if (= n 0)\n    (first x)\n    (nel (rest x) (- n 1))))","problem":21,"user":"4fedb2cce4b0198f34b063b8"},{"code":"(fn \n  ([s n] (if (= n 0) (first s) (recur (rest s) (- n 1))))\n)","problem":21,"user":"5337a020e4b0e30313ee6c8b"},{"problem":21,"code":"(fn nt [s n]\n  (->> s (drop n) first))","user":"53b39d82e4b047364c0444a6"},{"code":"(fn [s idx]\n  (loop [ item 0\n          l s]\n    (if (= item idx)\n      (first l)\n      (recur (inc item) (rest l)))))","problem":21,"user":"4f0de19b535d0136e6c2231c"},{"code":"(fn my-nth [x n]\n  (if (= n 0)\n    (first x)\n    (my-nth (rest x) (- n 1))))","problem":21,"user":"4f04d312535dcb61093f6be7"},{"problem":21,"code":"(fn [arr, n] (last (take (+ 1 n) arr)))","user":"5a718453e4b0512ff01cda91"},{"problem":21,"code":"(fn \n   [coll n]\n   \t\t(first(drop n coll)))","user":"57604a87e4b08062f99a4e91"},{"problem":21,"code":"(fn [col v] (first (nthnext col v)))","user":"57e7da9fe4b0bfb2137f5b04"},{"code":"(fn [coll n]\r\n  (loop [f (first coll), c (next coll), n n]\r\n    (if (zero? n)\r\n      f\r\n      (recur (first c), (next c), (- n 1)))))","problem":21,"user":"4ddbdc1b535d02782fcbe9fd"},{"problem":21,"code":"(fn [xs n]\n  (if (= n 0) (first xs) (recur (next xs) (dec n))))","user":"59abd1d8e4b08cbb53654da4"},{"problem":21,"code":"(fn myNth\n  [sequence index]\n  (last (take (inc index) sequence)))","user":"54e009dce4b024c67c0cf7b2"},{"problem":21,"code":"(fn nth-elem\n  [coll n]\n  (let [head (first coll)\n        tail (rest coll)]\n\t  (if (zero? n)\n    \thead\n    \t(nth-elem tail (dec n)))))","user":"53e6550de4b036ad0777e471"},{"code":"(fn [coll index] (\n  first (nthnext coll index)))","problem":21,"user":"4f7e33a6e4b06e829148e1cb"},{"problem":21,"code":"(fn [some-coll idx]\n  ((vec some-coll) idx))","user":"5f5a57dee4b0a0bc16850aa5"},{"problem":21,"code":"(fn custom-nth [seq n]\n  (if (= 0 n)\n    (first seq)\n    (custom-nth (rest seq) (dec n))))","user":"5a058d6be4b01bb0ae8afdb4"},{"problem":21,"code":"#(if (= %2 0)\n  (first %1)\n  (recur (rest %1) (dec %2)))","user":"5ac834f4e4b0e27600da77ab"},{"problem":21,"code":"(fn [coll n]\n  (first (last (split-at n coll))))","user":"562db4d1e4b0a45d2ff83021"},{"problem":21,"code":"(fn seek [lst n] (->> lst (take (+ 1 n)) last))","user":"5a5894d9e4b05d388ecb6c81"},{"problem":21,"code":"(fn noth [x n] (if (= 0 n) (first x) (noth (rest x) (- n 1))))","user":"5eb59ec4e4b00a66d4a95228"},{"problem":21,"code":"(fn [coll x]\n  (if (= x 0)\n    (first coll)\n    (recur (rest coll) (dec x))))","user":"5f65bdfde4b02876ed9fd025"},{"problem":21,"code":"(fn [l n] \n  (if (= n 0)\n    (first l)\n    (recur (rest l) (- n 1) )))","user":"54468fd3e4b032a45b8693b2"},{"code":"(fn nth_el [l n] (if (= n 0) (first l) (nth_el (next l) (- n 1))))","problem":21,"user":"4e351b47535deb9a81d77f2b"},{"code":"(fn [x n]\n  ((vec x) n))","problem":21,"user":"51750cd4e4b07031762f2ee5"},{"code":"(fn [c i]\n    (let [x (first c)\n         xrest (rest c)]\n    (if (zero? i)\n      x\n      (recur xrest (dec i)))))","problem":21,"user":"4fa27e18e4b0dcca54ed6d68"},{"code":"#(loop [s % i 0]\n   (if (= %2 i)\n     (first s)\n     (recur (rest s) (inc i))))","problem":21,"user":"5394c45de4b0b51d73faaed2"},{"problem":21,"code":"(fn [sek n]\n  (if (= n 0)\n    (first sek)\n    (recur (rest sek) (- n 1))))","user":"53dd43d1e4b0d874e779ae29"},{"code":"(fn [v,x] (first (drop x v)))","problem":21,"user":"4eb80331535d7eef3080737b"},{"code":"(fn [c x] (loop [c c x x] (if (= x 0) (first c) (recur (next c) (dec x)))))","problem":21,"user":"52e25beee4b09f7907dd1433"},{"problem":21,"code":"(fn [arr, i] (get (reduce conj [] arr) i))","user":"5d5b3711e4b06a698e928ee3"},{"code":"(fn nthElem [ls n] ((fn nthHelper [accum xs nk] (if (= accum nk) (first xs) (nthHelper (+ accum 1) (rest xs) nk))\n                                         ) 0 ls n))","problem":21,"user":"51a75902e4b0da5f497bde82"},{"code":"(fn [coll n] (when (seq coll) (if (zero? n) (first coll) (recur (rest coll) (dec n)))))","problem":21,"user":"4e4be570535dc968683fc4d8"},{"code":"(fn [s n] ((vec s) n))","problem":21,"user":"4ded56bb535d08e6dec9fe0b"},{"problem":21,"code":"(fn my-nth\n  [arr n]\n  (if (= n 0) (first arr) (my-nth (rest arr) (- n 1))))","user":"569f7bc2e4b0542e1f8d1494"},{"problem":21,"code":"(fn [stuff which] (if (zero? which) (first stuff) (recur (rest stuff) (dec which))))","user":"5833a6d8e4b089d5ab817ca2"},{"code":"(fn [coll n]\r\n  (first (drop n coll)))","problem":21,"user":"523aa92ae4b081681ca7adcd"},{"code":"(comp first nthnext)","problem":21,"user":"4e5867d1535d8a8b8723a291"},{"problem":21,"code":"(fn x [l n] (if (> n 0) (x (rest l) (- n 1)) (first l) ) )","user":"553b8fdbe4b09218d5f45004"},{"code":"(fn [collection nth-item] (first (nthnext collection nth-item)))","problem":21,"user":"50e1bdd8e4b019fc399ce17f"},{"problem":21,"code":"(fn [x i] (first (take 1 (drop i x))))","user":"5b5afe87e4b0c6492753e6a4"},{"problem":21,"code":"(fn tnn [l n]\n  (if (= 0 n)\n    (first l)\n    (tnn (rest l) (- n 1))\n  ))","user":"59736b0de4b01722bebd4c9e"},{"code":"(fn [s x]\n  (last \n    (take (inc x) s)))","problem":21,"user":"4e705aac535d5021c1a89636"},{"problem":21,"code":"(fn [s n]\n  (loop [se s\n         i n]\n    (if (pos? i)\n      (recur (rest se) (dec i))\n      (first se))))\n\n\n;;(fn [xs n] (first (drop n xs)))","user":"594db24ce4b07ddc2dafae98"},{"problem":21,"code":"(fn [arr idx] (get (vec arr) idx ))","user":"5b7ed20fe4b047b03b203760"},{"code":"(fn [x,y]\n  (last (take (+ y 1) x) )\n)","problem":21,"user":"4e8b742a535d65386fec2123"},{"code":"(fn [l n]\n  (if (= n 0) (first l)\n  (recur (rest l) (- n 1))))","problem":21,"user":"4e73a9dc535dff18050a9c77"},{"code":"(fn kth [coll k]\n  (if (= 0 k) (first coll)\n      (kth (rest coll) (dec k)))\n)","problem":21,"user":"52d8eb78e4b09f7907dd139d"},{"problem":21,"code":"(fn [coll x](if (zero? x)(first coll)(recur (next coll) (dec x))))","user":"56163cc1e4b06b1bb21829ff"},{"problem":21,"code":"(fn sol [things, i]\n  (if (= i 0)\n    (first things)\n    (sol (rest things) (dec i))))","user":"587fb546e4b0f1effa3b75f9"},{"code":"(fn my-nth [seq n] \n  (if (= n 0) \n    (first seq) \n    (my-nth (rest seq) (- n 1))))","problem":21,"user":"52b6365de4b0c58976d9ad40"},{"code":"#(cond (= %2 0) (first %1)\n       :else (recur (rest %1) (- %2 1)))","problem":21,"user":"52f5eefbe4b09b582c12c9cb"},{"code":"(fn \n  [x y]\n  ((vec x) y)\n  )","problem":21,"user":"52f7dc80e4b047fd55836fc9"},{"code":"(fn [l n]\n  (if (zero? n)\n    (first l)\n    (recur (rest l) (dec n))\n    ))","problem":21,"user":"512339fce4b03b44edbed434"},{"code":"#((zipmap (range 0 (count %1)) %1) %2)","problem":21,"user":"4f06f1db535dcb61093f6c19"},{"problem":21,"code":"(fn [l n] \n  (loop [list l num n]\n  \t(if (= 0 num)\n  \t(first list)\n  \t(recur (rest list) (dec num)))\n  )\n)","user":"58a72f71e4b01a0c0b23293f"},{"problem":21,"code":"(fn [sequence n] n\n  (loop [sequence sequence\n         index 0]\n    (if (= n index)\n      (first sequence)\n      (recur (rest sequence) (inc index)))))","user":"540c6a8ae4b0addc1aec6702"},{"code":"(fn[col n] (apply second \n   (filter #(= (first %) n) \n   (map-indexed vector col))))","problem":21,"user":"4f3e2fbbe4b0e243712b1f7e"},{"code":"(fn [x n] (second (take-nth n x)))","problem":21,"user":"4e503aea535dc968683fc4ea"},{"code":"(fn x [s,e] (if (= e 0) (first s) (x (rest s) (- e 1))))","problem":21,"user":"50bddea1e4b0594b91591c85"},{"code":"(fn [s n] (let [nt (inc n)] (last (take nt s))))","problem":21,"user":"523ea111e4b057c4b7cd0a65"},{"problem":21,"code":"(fn [seq el] \r\n  (last \r\n    (take (+ el 1) seq)))","user":"53b9c614e4b047364c0444ee"},{"code":"(fn [coll idx]\n  (first\n   (reverse\n    (take (+ idx 1) coll))))","problem":21,"user":"52987041e4b02ebb4ef75059"},{"problem":21,"code":"(fn [l p]\n   (second (take-nth p l)))","user":"55a3d7c7e4b0acc240e3153d"},{"problem":21,"code":"(fn d [seq n] \n  (if (= n 0)\n    (first seq)\n    (d (rest seq) (- n 1))\n    ))","user":"5ea67a5ae4b00a66d4a951ae"},{"code":"(fn [col index]\n  (loop [c col i 0]\n    (if (= i index)\n      (first c)\n    (recur (rest c) (inc i)))))","problem":21,"user":"4df3c9e4535d08e6dec9fe2a"},{"problem":21,"code":"#(loop [s %1 n %2] (if (zero? n) (first s) (recur (next s) (dec n))))","user":"576cd1fae4b0979f89651554"},{"problem":21,"code":"(fn nth-element [s index]\n  (get (vec s) index))\n;(fn nth-element [col idx]\n;  (get (vec col) idx))","user":"5c87217de4b0c8042a70cea1"},{"code":"#(first (last (map vector %1 (range (+ 1 %2)))))","problem":21,"user":"513b43ede4b067e25a345ed3"},{"problem":21,"code":"#(loop [s %1 \n        i 0]\n  (if (= %2 i)\n    (first s)\n    (recur (rest s) (+ i 1))))","user":"550f2333e4b06e50f9beb173"},{"code":"(fn penultimate [s n] (if (= 0 n) (first s) (penultimate (rest s) (- n 1))))","problem":21,"user":"52c10ad2e4b07a9af579235c"},{"problem":21,"code":"(fn [my-seq n] \n  (last (take (+ n 1) my-seq))\n)","user":"570f41f8e4b0b0fb43fd0702"},{"code":"#(loop [index %2\n        s %1]\n   (cond (<= index 0) (first s)\n         :else (recur (dec index) (rest s))))","problem":21,"user":"51d67516e4b0154f82ab92f0"},{"code":"(fn [sq n] \n  (loop [sq sq\n         n n]\n    (if (= n 0) \n      (first sq)\n      (recur (rest sq) (- n 1)))))","problem":21,"user":"527cd633e4b0757a1b17136f"},{"code":"(fn [x n]\n  (if (zero? n) \n    (first x)\n    (recur (rest x) (dec n))))","problem":21,"user":"51dd634ee4b0c33a4e1da407"},{"problem":21,"code":"(fn [coll idx]\n  (if (>= 0 idx)\n    (first coll)\n    (recur (rest coll) (dec idx))))","user":"55db7e15e4b0e31453f64ae8"},{"code":"(fn [l i] (last (take (+ i 1) l)))","problem":21,"user":"4f1569bb535d64f603146441"},{"problem":21,"code":"(fn n [x i]\n  (if (= i 0)\n    (first x)\n    (n (rest x) (- i 1))))","user":"552d2e5ae4b076ab5578f7e2"},{"problem":21,"code":"(fn [in ind] (last (take (+ ind 1) in)))","user":"5918db70e4b09b4ee5954bbb"},{"problem":21,"code":"(fn [col n]\n  (last (take (inc n) col))\n)","user":"5e41c371e4b01d43a70e8e59"},{"code":"(fn my-nth [xs n]\n  (if (= 0 n)\n    (first xs)\n    (my-nth (rest xs) (- n 1))))","problem":21,"user":"4e691c79535d8ccf87e9fe97"},{"code":"(fn n-th [s n]\r\n  (last (take (inc n) s)))","problem":21,"user":"4e2110c7535d04ed9115e813"},{"code":"(fn [l n] (aget (to-array l) n))","problem":21,"user":"4e7f4147535db966e863cc3d"},{"problem":21,"code":"#(loop [iter 0 values %1]\n   (if (= iter  %2)\n     (first values)\n     (recur (inc iter) (rest values))))","user":"58d27bcae4b03c36ff7e58fe"},{"problem":21,"code":"(fn my-nth [arr index]\n       (if (= index 0) (first arr) (my-nth (rest arr) (- index 1)))\n       )","user":"56530a1ce4b0f9d632dd846c"},{"code":"(fn tl [x n] (last (take (+ 1 n) x)))","problem":21,"user":"514daf79e4b019235f6c058b"},{"code":";(fn [coll n]\n;  (if (= 0 n)\n;    (first coll)\n;    (recur (rest coll) (dec n))))\n\n\n; below not good if index > size of seq\n#(last (take (inc %2)  %1))","problem":21,"user":"4fd22e70e4b04c3a95aa041c"},{"problem":21,"code":"(fn [xs,n]\n  (if (= n 0)\n    (first xs)\n    (recur (rest xs) (dec n))))","user":"60ca4bf9e4b0e0fa5f1b430e"},{"code":"#(first(drop%2 %))","problem":21,"user":"4ea5e794535d7eef308072df"},{"code":"(fn [f l] (if (> l 0) (recur (rest f) (dec l)) (first f)))","problem":21,"user":"52bf29fde4b07a9af579232e"},{"code":"#(loop\n  [s %1 x %2]\n   (if (= x 0)\n     (first s)\n     (recur (rest s) (dec x))))","problem":21,"user":"515896f2e4b059418b97f0a8"},{"code":"(fn nth2 [xs n]\n  (if (= n 0) (first xs)\n      (nth2 (rest xs) (- n 1))))","problem":21,"user":"4f0381db535dcb61093f6b02"},{"code":"(fn [li n] (last (take (inc n) li)))","problem":21,"user":"523d9b8de4b06956f8342c93"},{"code":"(fn nth-el [coll, idx] (if (= idx 0) (first coll) (nth-el (rest coll) (- idx 1))))","problem":21,"user":"52e32906e4b09f7907dd143d"},{"problem":21,"code":"#(loop [l %1\n        cur 0]\n   (if (= cur %2)\n     (first l)\n     (recur (rest l) (inc cur))))","user":"5e066185e4b0978307768fa4"},{"code":"(fn mynth [lst n] (if (= n 0) (first lst) (mynth (rest lst) (- n 1))))","problem":21,"user":"4e836a16535db62dc21a62d6"},{"problem":21,"code":"#(loop [coll %1 i %2] (if (> i 0) (recur (rest coll) (dec i)) (first coll)))","user":"5c33bdf3e4b0d62ef62d9f49"},{"code":"#((apply comp (conj (repeat %2 rest) first)) %1)","problem":21,"user":"4f036e00535dcb61093f6ac3"},{"problem":21,"code":"(fn my-nth [items n]\n  (first (drop n items)))","user":"56fbe0cce4b07572ad1a88d8"},{"code":"(fn [s, n] (loop [i 0 h (first s) t (rest s)] (if (= i n)  h (recur (+ 1 i) (first t) (rest t)))))","problem":21,"user":"50bd9194e4b0594b91591c67"},{"problem":21,"code":"(fn [lst n]\n  (loop [n n\n         lst lst]\n    (if (= n 0)\n      (first lst)\n      (recur (dec n) (rest lst)))))","user":"59e8cd8be4b0249b72820739"},{"problem":21,"code":"(fn [l n]\n  (loop [l l\n         n n]\n    (if (zero? n)\n      (first l)\n      (recur (rest l) (dec n)))))","user":"54638c8fe4b01be26fd746c2"},{"code":"(fn [col, i] (first (drop i col)))","problem":21,"user":"503f872ee4b00d1a725ff2ac"},{"problem":21,"code":"(fn my-nth [xs n] (if (= n 0) (first xs) (my-nth (rest xs) (dec n) ) ) )","user":"54ce6eede4b057c6fda3a2ad"},{"code":"#(loop [coll (rest %) idx %2 r (first %)]\r\n   (if (= idx 0)\r\n     r\r\n     (recur (rest coll) (dec idx) (first coll))))","problem":21,"user":"4facff22e4b081705acca230"},{"problem":21,"code":"(fn [s i]\n  (->>\n    s\n    (take (inc i))\n    last))","user":"5d0eed51e4b0cc9c91588262"},{"problem":21,"code":"(fn my-nth [list n] \n  (if (= n 0) \n    (first list)\n    (recur (rest list) (- n 1))))","user":"5be9ad9be4b0f319e2d7ec76"},{"problem":21,"code":"(fn [coll idx]\n  (first(second(split-at idx coll))))","user":"53ae0c50e4b047364c044471"},{"problem":21,"code":"(fn [se n] (last (take (inc n) se)))","user":"5fbf6fe7e4b0ad6fc3476147"},{"problem":21,"code":"(fn[data index]\n  (first (drop index data))\n  )","user":"57309d7ee4b0cd1946bd0fb2"},{"problem":21,"code":"(fn [xs n]\n  (if (zero? n)\n    (first xs)\n    (recur (next xs) (dec n))))","user":"60b57acee4b0e0fa5f1b4238"},{"problem":21,"code":"(fn [mySeq x] (get (vec mySeq) x))","user":"56a1f7ede4b0542e1f8d14b4"},{"code":"(fn [x y] \n  (if (> y 0)\n    (recur (next x) (- y 1))\n    (first x)))","problem":21,"user":"52cdc539e4b07d0d72b2737e"},{"code":"(fn nth2 [x, n]\n  (if (= n 0)\n    (first x)\n    (nth2 (next x) (- n 1))))","problem":21,"user":"4f2acd70e4b0d6649770a041"},{"problem":21,"code":"(fn f\n   [s n]\n   (if (zero? n) (first s) (recur (rest s) (dec n))))","user":"5e3ef7d4e4b01d43a70e8e2d"},{"code":"(fn [items n]\n  (loop [whats-left items cnt n]\n    (println whats-left \"-\" cnt)\n    (if (= 0 cnt)\n      (first whats-left)\n      (recur (rest whats-left) (dec cnt)))))","problem":21,"user":"534d6524e4b084c2834f4a9f"},{"problem":21,"code":";; make a map that ties each field to its index, then call the index. List is l, index is n\n;; 1) figure out length of l. n\n;(count l)\n;; 2) make list of from 0 to n\n; (range (count l )))\n;; 3) combine two vectors into a hashmap\n;;(interleave (range (count l)) l)\n;; 4) run function on nth index and list to get value\n(fn [l n] ((apply array-map (interleave (range (count l)) l )) n))","user":"593744abe4b02506e01a299b"},{"code":"(fn [list, mth]\n  (loop [l list n mth i 0]\n    (if (= i n) (first l) (recur (rest l) n (inc i)))))","problem":21,"user":"4dbac43b535d1e037afb21ac"},{"problem":21,"code":"(fn [lst n] \n  (loop [a lst\n         b 0]\n    (if (= b n)\n      (first a)\n      (recur (rest a) (inc b))\n      )\n    )\n  )","user":"57f81045e4b0d3187e90090f"},{"problem":21,"code":"(fn nth-el [xs n]\n  (if (= n 0)\n    (first xs)\n    (nth-el (rest xs) (dec n))))","user":"56ae6776e4b03c432f18735e"},{"problem":21,"code":"(fn [s n]\n  (if (= 0 n) (first s) (recur (rest s) (dec n))))","user":"58cfb517e4b03c36ff7e58b9"},{"code":"(fn [xs n]\n  (if (= n 0)\n    (first xs)\n    (recur (rest xs) (dec n))))","problem":21,"user":"50a3fbc4e4b08bbd0eb4ed31"},{"problem":21,"code":"(fn [coll n] (first (drop n coll )))","user":"56a92329e4b07966d5a8a070"},{"code":"(fn [coll ix]\n  (first (drop ix coll)))","problem":21,"user":"4e5fda32535d8ccf87e9fe4e"},{"code":"(fn [seq idx]\n  (if (> idx 0)\n    (recur (rest seq) (dec idx))\n    (first seq)))","problem":21,"user":"4ec21058535dfed6da9c6dba"},{"problem":21,"code":"(fn [arr n]\n  (loop [sl arr\n         i 0]\n    (if (= i n)\n      (first sl)\n      (recur (rest sl) (+ i 1)))))","user":"5c62f1cde4b0fca0c1622655"},{"problem":21,"code":"(fn [lst ind] (first (drop ind lst)))","user":"53ef5c13e4b0742d9025b0cb"},{"code":"(fn nt [s n]\n  (if (= 0 n)\n    (first s)\n    (recur (rest s) (dec n))))","problem":21,"user":"52d83c2ce4b09f7907dd138d"},{"code":"(comp last #(take (inc %2) %1))","problem":21,"user":"5141fafbe4b0b50abeb46b28"},{"code":"(fn ret-nth-el [s n] \n  (if (> 1 n) (first s) (ret-nth-el (rest s) (- n 1))))","problem":21,"user":"509dc716e4b08df8156e9e27"},{"code":"(fn my-nth [seq n]\n  (if (zero? n) (first seq)\n      (my-nth (rest seq) (- n 1))))","problem":21,"user":"4e7542b5535d7a570dd295c0"},{"code":"(fn [coll n]\n    (if (zero? n)\n      (first coll)\n      (recur (rest coll) (dec n))))","problem":21,"user":"4e8e0a62535d65386fec213f"},{"problem":21,"code":"(fn my-nth [sq n]\n  (if (= n 0)\n    (first sq)\n    (my-nth (rest sq) (dec n))))","user":"5751eb97e4b02ea11479928e"},{"problem":21,"code":"(fn nth-ele\n  ([coll index]\n   (last (first (partition (inc index) coll)))))","user":"5900d5cde4b0438e51c2d02e"},{"problem":21,"code":"(fn [from a]\n  (if-not (zero? a)\n    (recur (rest from) (dec a))\n    (first from)))","user":"57b09d41e4b0fbc9809a2746"},{"code":"#(loop\n             [coll %1\n              i %2]\n             (if (> i 0)\n               (recur (rest coll) (dec i))\n               (first coll)))","problem":21,"user":"4ebb20c0535dfed6da9c6d6f"},{"code":"(fn [elem n]\n  (if (= 0 n)\n      (first elem)\n      (recur (rest elem) (- n 1))))","problem":21,"user":"4fd9cc7ee4b05e33b9224f3a"},{"problem":21,"code":"(fn [coll n] (first (drop n coll) ) )","user":"57c8d89ee4b05aa3c4741d23"},{"problem":21,"code":"(fn [xs x] (first (keep-indexed (fn [idx itm] (when (= idx x) itm)) xs)))","user":"59445ff2e4b0b03edd0057a8"},{"problem":21,"code":"#(peek (vec (take (+ 1 %2) %1)))","user":"58f1e70fe4b08e1cf3471cf2"},{"problem":21,"code":"#(get (into (vector) %1) %2)","user":"54ca9311e4b057c6fda3a263"},{"problem":21,"code":"(fn [thing number] (first (drop number thing)))","user":"6033c42ce4b0d5df2af222c3"},{"problem":21,"code":"(fn [parm1 parm2] (get (vec parm1) parm2))","user":"598d0dc3e4b02b9968b84d18"},{"problem":21,"code":"(fn [ aList ind ] (get (zipmap (range) aList ) ind))","user":"5b8aa478e4b0c0b3ffbd49b2"},{"problem":21,"code":"(fn [x i] (if (> i 0) (recur (rest x) (dec i)) (first x)))","user":"598f6e3fe4b0fcebec4de863"},{"problem":21,"code":"(fn [l pos]\n  (if (= pos 0)\n    (first l)\n    (recur (rest l) (dec pos))))","user":"53f67bcfe4b0db01ade6f9e1"},{"code":"(fn [s n] (-> (drop n s) first))","problem":21,"user":"5370f8ede4b0fc7073fd6ea2"},{"problem":21,"code":"(fn [x y] (loop[i 0 q x] (if(< i y) (recur (inc i)(drop 1 q)) (first q))))","user":"561be724e4b064ca9f4b168c"},{"problem":21,"code":"(fn [seq' n]\n  (loop [xs seq'\n         n' n]\n    (if\n      (zero? n') \n      (first xs)\n      (recur (rest xs) (dec n')))))","user":"567bf820e4b05957ce8c61ad"},{"problem":21,"code":"(fn [x, index] (get (vec x) index))","user":"5c35046fe4b0d62ef62d9f5f"},{"problem":21,"code":"(fn [l n]\n  (loop [li l\n         ni n]\n    (if (= 0 ni) \n      (first li)\n      (recur (rest li) (- ni 1)))))","user":"52c2106fe4b07a9af5792374"},{"problem":21,"code":"(fn fun [x y] (if (> y 0) (fun (rest x) (dec y)) (first x)) )","user":"58c99858e4b021aa9917eda7"},{"problem":21,"code":"(fn nthE [lst cnt] (if (= cnt 0) (first lst) (nthE (rest lst) (- cnt 1))))","user":"5694290fe4b0dcc4269f4110"},{"code":"(fn [s n]\n  (if (= 0 n)\n    (first s)\n    (recur (rest s)\n           (dec n))))","problem":21,"user":"4e773be8535d324fb2983d6e"},{"problem":21,"code":"(fn [x, y] (if (= y 0) (first x) (recur (rest x) (dec y))))","user":"592ac550e4b072a2710fcf27"},{"code":"(fn numth [col n]\n  (get (vec col) n))","problem":21,"user":"510fd798e4b04c71fce993dc"},{"code":"(fn [x y] \n  (if (zero? y) (first x) (recur (rest x) (dec y))))","problem":21,"user":"531488f3e4b08068f379ed16"},{"problem":21,"code":"(fn [x index] (get (vec x)\n         index\n         ))","user":"56fee925e4b08d47c97781b7"},{"code":"#(first (nthrest %1 %2))","problem":21,"user":"504498cde4b01f6c9a8b2361"},{"problem":21,"code":"#((into [] %1)%2)","user":"5fb4da96e4b08cb800c85b47"},{"problem":21,"code":"(fn [c n] (last (first (partition (+ n 1) c))))","user":"562b1a7be4b058fa18c5a6cb"},{"code":"(fn nn [s n] (if (= n 0) (first s) (recur (rest s) (- n 1)) ) )","problem":21,"user":"50066c83e4b0678c553fc484"},{"problem":21,"code":"(fn my-nth [xs n]\n    (loop\n        [ys xs\n         k 0]\n        (if (empty? ys)\n            nil\n            (if (= k n)\n                (first ys)\n                (recur (rest ys) (inc k))))))","user":"5a8c12dfe4b05369db4d24f7"},{"problem":21,"code":"(fn [s n]\n  (cond\n   (== n 0) (first s)\n   :else (recur (rest s) (dec n))))","user":"53edb464e4b0d648e757f4c7"},{"problem":21,"code":"(fn pick [s n]\n  (if (= n 0)\n    (first s)\n    (pick (rest s) (- n 1))))","user":"5ca9b920e4b048ec896c5c29"},{"problem":21,"code":"(fn [seq index] (if (= index 0) (first seq) (recur (rest seq) (- index 1))))","user":"591ed05de4b09b4ee5954c3a"},{"problem":21,"code":"(fn nthh [a n] (if (= n 0) (first a) (nthh (rest a) (dec n))))","user":"5707da27e4b0b0fb43fd0692"},{"problem":21,"code":"(fn ntn2 [s n] \n  (if (zero? n)\n    (first s)\n    (ntn2 (rest s) (dec n))))","user":"58d63b99e4b03c36ff7e596b"},{"problem":21,"code":"(fn n-element [coll n]\n  (loop [iter 0\n         remaining coll]\n    (if (= iter n)\n      (first remaining)\n      (recur (inc iter) (rest remaining)))))","user":"545f0046e4b01be26fd74685"},{"problem":21,"code":"(fn get-nth [lst n] (if (== n 0) (first lst) (get-nth (rest lst) (- n 1))))","user":"55c20bd0e4b0e31453f64972"},{"code":"(fn [cl n] (if (zero? n) (first cl) (recur (next cl) (dec n)) ))","problem":21,"user":"4f1ff504535d64f6031464a6"},{"code":"(fn [coll n] ( last (take (inc n) coll)))","problem":21,"user":"52dced9de4b09f7907dd13d7"},{"code":"(fn [a m] (first (nthnext a m)))","problem":21,"user":"52ec4322e4b0705949c44451"},{"code":"(fn getnth [s n] (cond (= n 0) (first s)\n                       :else (getnth (rest s) (- n 1))))","problem":21,"user":"50dfb660e4b061dbdced7228"},{"code":"(fn[m n]\n  (loop[mm m] \n    (if(vector? mm)\n      (mm n)\n      (recur (vec mm)))))","problem":21,"user":"4f2046b7535d64f6031464ab"},{"problem":21,"code":"(fn [l, x] (first (nthrest l x)))","user":"543a5af8e4b032a45b869325"},{"code":"(fn [s n] (if (= 0 n) (first s) (recur (next s) (- n 1))))","problem":21,"user":"51ab8589e4b04e3dc0c27b37"},{"problem":21,"code":"(fn [s n] (loop [i 0 tail s] (if (= i n) (first tail) (recur (+ i 1) (rest tail)))))","user":"587e43d2e4b052da650a633f"},{"code":"#(first (drop %2 %1))\n#_(fn [x y]\n  (if (= 0 y)\n      (first x)\n      (recur (rest x) (dec y))))","problem":21,"user":"51e5a627e4b0efabf93c02db"},{"problem":21,"code":"(fn  [input-list n]\n        (loop [cnt n tmp-list input-list]\n              (if (zero? cnt)\n                  (first tmp-list)\n                (recur (dec cnt) (rest tmp-list)))))","user":"5b8d73b3e4b0c0b3ffbd49d6"},{"problem":21,"code":"(fn\n  jnth\n  [x n]\n  (cond (= 0 n)\n        (first x)\n        :else\n        (jnth (rest x) (- n 1))))","user":"4e6aacad535d8ccf87e9fefa"},{"code":"(fn [s n] \n  (if (= n 0)\n    (first s)\n    (recur (rest s) (dec n))))","problem":21,"user":"4ef667c4535dced4c769f24c"},{"problem":21,"code":"(fn my-nth\n  [collection index]\n  (if (= index 0)\n    (first collection)\n    (my-nth (rest collection) (dec index))))","user":"5645a7d6e4b0284900eef608"},{"code":"(fn [sequence num] (first (nthnext sequence num)))","problem":21,"user":"5089860de4b037578f03c8b5"},{"problem":21,"code":"(fn\n  [list index]\n  ((vec list) index))","user":"5deeb6fde4b093ff7172759f"},{"code":"(fn [array x]\n  (if (= x 0)\n    (first array)\n    (recur (rest array) (- x 1))))","problem":21,"user":"51f12cc5e4b06a20a2523f37"},{"problem":21,"code":"(fn \n  [coll n]\n  (if (= n 0)\n    (first coll)\n    (recur (rest coll) (dec n))))","user":"5db59d4ce4b010eb3c36cd30"},{"problem":21,"code":"(fn [sq pos]\n   (loop [items sq\n          idx 0]\n     (if (= pos idx)\n       (first items)\n       (recur (rest items) (inc idx)))))","user":"56f949fae4b07572ad1a88ad"},{"problem":21,"code":"#(loop [v %1 n %2] (if (zero? n)\n(first v)\n(recur (rest v) (- n 1))))","user":"5a6b8a9ae4b0512ff01cda3f"},{"problem":21,"code":"(fn [col i] ((apply vector col) i))","user":"593fba55e4b069cdc2982be7"},{"code":"(fn nth-element [xs n] \n  (cond (= n 0) (first xs)\n        :else   (nth-element (rest xs) (- n 1))))","problem":21,"user":"4ec53eaf535d6d7199dd3688"},{"code":"(fn\n  [coll n]\n  (if (> n 0)\n  \t(recur (rest coll) (- n 1))\n    (first coll)))","problem":21,"user":"51d0b46ee4b067c365486353"},{"problem":21,"code":"(fn mynth [xs n] (if (= 0 n) (first xs) (mynth (rest xs) (- n 1))))","user":"56902dfae4b0dcc4269f40ea"},{"problem":21,"code":"(fn self [xs i] (cond (= i 0) (first xs) true (self (rest xs) (- i 1))))","user":"54db5d73e4b024c67c0cf763"},{"problem":21,"code":"(fn [s n]\n  (last (take (+ n 1) s))\n)","user":"566b8946e4b0a866af6896b0"},{"code":"((fn [f]\n  ((fn [mk] (mk mk))\n   (fn [mk] (f (fn [x y] ((mk mk) x y))))))\n (fn [elt]\n  (fn [seq n]\n    (if (= n 0)\n        (first seq)\n        (elt (rest seq) (- n 1))))))","problem":21,"user":"4fcc6cb3e4b0ee37620e1861"},{"problem":21,"code":"(fn nnth [xs n]\n  (if (zero? n)\n    (first xs)\n    (nnth (rest xs) (- n 1))\n    )\n  )","user":"58aa8083e4b01a0c0b232985"},{"problem":21,"code":"#(if (= %2 0) (first %1) (if (= %2 1) (first (rest %1)) (first (rest (rest %1)))))","user":"5654e8ade4b0f9d632dd848e"},{"code":"(fn [y x] (last (take (+ x 1) y)))","problem":21,"user":"525f66c6e4b03e8d9a4a7007"},{"problem":21,"code":"(fn\n  ([xs n] \n    (if (zero? n)\n      (first xs)\n      (recur (rest xs) (dec n)))))","user":"53a6e646e4b0ef122a8689cd"},{"problem":21,"code":"#(first (rest (take-nth %2 %1)))","user":"553bda0de4b09218d5f4500b"},{"problem":21,"code":"(fn f [l i] (if (= i 0) (first l) (f (rest l) (dec i))))","user":"5bc39d2be4b07a9b28b10045"},{"problem":21,"code":"(fn nth-element [xs n] (last (take (+ n 1) xs)))","user":"54f06aede4b024c67c0cf896"},{"problem":21,"code":"(fn [coll index]\n  (let [a (split-at (inc index) coll)]\n   (or (last (first a)) (first (last a)) )))","user":"54af220ce4b09f271ff37d02"},{"problem":21,"code":"(fn [ori-seq num] \n         (loop [seq ori-seq\n               n 0]\n          (if (= n num)\n            (first seq)\n            (recur (rest seq) (inc n)))))","user":"57ca338de4b05aa3c4741d37"},{"problem":21,"code":"(fn mynth [s n]\n (first (drop n s))\n)","user":"5c0d0537e4b0bdcf453d173d"},{"problem":21,"code":"(comp first vec nthrest)","user":"53f035c2e4b0742d9025b0d2"},{"code":"(fn [x n]\r\n  (first (nthnext x n)))","problem":21,"user":"4ee17ecc535d10e5ff6f535a"},{"problem":21,"code":"(letfn [(inth [xs n]\n  (if (= n 0)\n    (first xs)\n    (inth (rest xs) (dec n ))))]\n  inth)","user":"5675a817e4b05957ce8c614a"},{"code":"(fn [collection n] (first(nthnext collection n)))","problem":21,"user":"4e9c0552535dbda64a6f6b7b"},{"code":"(fn [x y]\n  (cond (= y 0) (first x)\n        :else (recur (rest x) (dec y))))","problem":21,"user":"515b28b6e4b0a102a3e5262c"},{"problem":21,"code":"(fn [x y] (get (into-array x) y))","user":"56b07cdae4b0982f16b37dda"},{"code":"(fn get-index [ls i]\n  (if (= i 0) (first ls) (get-index (rest ls) (- i 1))))","problem":21,"user":"52ec1dfbe4b0705949c4444b"},{"code":"(fn mynth [list index]\n  (if (= index 0)\n    (first list)\n    (mynth (rest list) (- index 1))))","problem":21,"user":"4fe89efae4b07c9f6fd12c5b"},{"problem":21,"code":"(fn element [x, y]\n  \t(get (vec x) y)\n)","user":"5c14ce29e4b01240ff5671b6"},{"problem":21,"code":"(fn nieme [liste i]\n      (if (= i 0)\n        (first liste)\n        (recur (rest liste) (- i 1))))","user":"56e05622e4b0ca2494a09605"},{"code":"(fn [inputSeq index]\n  (first (drop index inputSeq))\n)","problem":21,"user":"5227eacee4b0186687e23a5e"},{"problem":21,"code":"(fn [collection position]\n         (loop [index 0\n              new-col collection]\n    (if (= index position)\n      (first new-col)\n      (recur (inc index) (rest new-col))))\n   )","user":"53ac1992e4b047364c04445a"},{"code":"(fn my-nth [list item]\n  (if (zero? item)\n    (first list)\n    (my-nth (rest list) (- item 1))))","problem":21,"user":"52f772e2e4b047fd55836fc3"},{"problem":21,"code":"(fn [coll n] ((comp first reverse) (take (inc n) coll)))","user":"5a12f669e4b04bbd27e6da47"},{"code":"(fn [s n]\n    (first (drop n s)))","problem":21,"user":"4f849f76e4b033992c121c36"},{"code":"(fn [l n] \n   (loop [el l cnt n]\n     (if (zero? cnt)\n       (first el)\n       (recur (rest el) (- cnt 1))\n     )\n   )\n)","problem":21,"user":"517a2d37e4b01aacecbecbec"},{"code":"(fn [lst pos]\n  (if (zero? pos)\n      (first lst)\n      (recur (rest lst) (- pos 1))))","problem":21,"user":"52c2ff59e4b07a9af5792389"},{"code":"(fn [x n] (first(drop n x)))","problem":21,"user":"50054b5ce4b0678c553fc45f"},{"code":"(fn t[s n] (first (last (split-at n s))))","problem":21,"user":"52010af0e4b0d7096e99ddae"},{"code":"(fn [s n]\n  (cond\n    (nil? 2) nil\n    (= n 0) (first s)\n    true (recur (rest s) (dec n))))","problem":21,"user":"4e89f46c535d3e98b8023288"},{"problem":21,"code":"(fn [items nth-item]\n  (loop [remaining-items items\n         it 0]\n    (if (= nth-item it)\n      (first remaining-items)\n      (recur (rest remaining-items) (inc it)))))","user":"560c2e7ce4b05f002753df2b"},{"code":"(fn [coll ind]\n    (if (< ind 1) (first coll)\n        (recur (rest coll) (- ind 1))\n     )\n )","problem":21,"user":"5307cd97e4b02e82168697a7"},{"code":"(fn [seq x]\n  (if (= x 0)\n    (first seq)\n    (recur (rest seq)(- x 1))))","problem":21,"user":"5007416de4b0f0797316e2fe"},{"problem":21,"code":"(fn\n    [list n]\n    (loop [ourlist list\n           counter n]\n      (if (> counter 0)\n        (recur (rest ourlist) (dec counter))\n        (first ourlist))))","user":"55ae1b68e4b03311e7b732b4"},{"problem":21,"code":"(fn my-nth [some-seq number]\n  (loop [iteration 0\n         remain some-seq]\n    (if (= iteration number)\n      (first remain)\n      (recur (inc iteration) (rest remain)))))","user":"5d6e5ec6e4b04d129b00f2c7"},{"code":"(fn [l n]\n  (loop [l l n n]\n    (if (zero? n)\n      (first l)\n      (recur (rest l) (dec n)))))","problem":21,"user":"5087d0e4e4b0198722bd9851"},{"code":"(fn foo\n  [x pos] \n    (if (= pos 0)\n      (first x)\n      (recur (rest x) (- pos 1))))","problem":21,"user":"4e6fe3a6535d5021c1a89629"},{"problem":21,"code":"(fn [coll number]\n  (loop [coll coll, acc 0]\n    (if (= acc number)\n      (first coll)\n      (recur (next coll) (+ acc 1)))))","user":"58c45e23e4b021aa9917ed28"},{"code":"(fn [sequence n]\n  (.get sequence n))","problem":21,"user":"4fca0376e4b0ee37620e184a"},{"code":"(fn [s n]\n  (if (= n 0)\n    (first s)\n    (recur (next s) (dec n))))","problem":21,"user":"4f0374a0535dcb61093f6ad9"},{"problem":21,"code":"(fn valc [coll n]\n     (\n       if(= n 0)\n        (first coll)\n        (valc (rest coll) (dec n))\n       )\n     )","user":"5d6d3182e4b04d129b00f2bb"},{"problem":21,"code":"(fn [seq idx] \n  (loop [current 0 sub seq]\n    (if (= current idx)\n      (first sub)\n      (recur (inc current) (rest sub))\n      )\n  )\n  )","user":"5a244240e4b0ff51aa4b32e9"},{"problem":21,"code":"#(->> %\n      (drop %2)\n      first)","user":"56677cb6e4b04acd4f672dd7"},{"problem":21,"code":"(fn [a b] (if (= b 0)\n            (first a)\n            (recur (rest a) (- b 1))))","user":"58a20a62e4b02bd94d917ecf"},{"problem":21,"code":"(fn [coll n]\n  (loop [coll coll\n         n    n]\n    (cond\n      (empty? coll) '()\n      (= n 0) (first coll)\n      :else (recur (rest coll) (dec n)))))","user":"5600dccee4b04bb52996e175"},{"problem":21,"code":"(fn Nth [L n] (if (= n 0) (first L) (Nth (rest L) (- n 1))  ) )","user":"54a8dcdde4b09f271ff37ca8"},{"code":"(fn [col i] ((vec col) i))","problem":21,"user":"4f0e4ebd535d0136e6c22322"},{"code":"(fn [xs, n] (first (drop n xs)))","problem":21,"user":"4e9c66e2535dbda64a6f6b7f"},{"problem":21,"code":"(fn [x i] (if (= i 0) (first x) (recur (rest x) (- i 1))))","user":"596cdd85e4b069c0a1a1983b"},{"problem":21,"code":"(fn mynth [x y] (if (= y 0) \n                  (first x) \n                  (mynth (rest x) (dec y))))","user":"5632b0a9e4b0bfe05bf117a8"},{"problem":21,"code":"(fn [alst i]\n     (if (= 0 i) \n       (first alst)\n       (recur (rest alst) (- i 1))))","user":"58ef0b8ce4b056aecfd47dbf"},{"code":"#(loop [l %1\n        n %2]\n  (if (= n 0)\n      (first l)\n      (recur (rest l) (- n 1))))","problem":21,"user":"50add9d8e4b0a40c9cfb08cc"},{"problem":21,"code":"(fn [s n]\n  (->> s\n       (take (inc n))\n       last))","user":"60a39b80e4b00e9e6653c450"},{"code":"(fn xth [vals x] (get (vec vals) x))","problem":21,"user":"524fafb3e4b0541d1855b817"},{"code":"(fn [l i] (last (take (+ i 1)  l)))","problem":21,"user":"50a4b6a7e4b0344e360f3bb8"},{"code":"(fn[l n](if(zero? n) (first l) (recur (rest l) (- n 1))))","problem":21,"user":"4e889643535d8b9bb0147ca5"},{"problem":21,"code":"(fn [coll n]\n  (loop [c coll\n         n n]\n    (if (= n 0)\n      (first c)\n      (recur (rest c) (- n 1)))))","user":"5a250b86e4b07f18be40aa19"},{"code":"(fn [numbers index] ((vec numbers) index))","problem":21,"user":"5218a2a8e4b0a6757ad5adf3"},{"problem":21,"code":"(fn \n  [s i]\n  (loop [lst s c 0] \n    (if (= i c) \n      (first lst)\n    (recur (rest lst) (inc c)) )))","user":"599ed08fe4b0871e7608b812"},{"code":"(fn _nth [lst n] (if (= n 0) (first lst)  (_nth (rest lst) (dec n))))","problem":21,"user":"4e49fc29535dc968683fc4cb"},{"code":"(fn f [p n] \r\n  (if (= n 0) \r\n    (first p) \r\n    (f (rest p) (- n 1))))","problem":21,"user":"5006b46fe4b0678c553fc48b"},{"code":"(fn n-element [y x] (first (drop x y)))","problem":21,"user":"4f05c087535dcb61093f6c00"},{"problem":21,"code":"(fn [nums n] (last (take (+ 1 n) nums)))","user":"57b084ece4b0fbc9809a2745"},{"problem":21,"code":"(fn [x i]\n  (loop [c 0\n        m x]\n    (if (= c i)\n      (first m)\n      (recur (inc c) (rest m)))))","user":"5baa1b58e4b0a20761a2344e"},{"code":"(fn [coll n]\n  (loop [c coll i n]\n    (cond\n     (< (count c) i) nil\n     (zero? i) (first c)\n     :else (recur (rest c) (dec i))\n     )))","problem":21,"user":"52f69565e4b047fd55836fb9"},{"problem":21,"code":"(fn iarenaza-nth [x pos]\n  (if (= 0 pos)\n    (first x)\n    (iarenaza-nth (rest x) (dec pos))))","user":"5a2e638be4b09cafd31c7f7a"},{"problem":21,"code":"(fn [maps keyy]\n  (loop [cnt keyy ayri maps]\n    (if (zero? cnt)\n      (first ayri)\n      (recur (dec cnt) (rest ayri)))))","user":"5c5d9510e4b01df32ab732b5"},{"problem":21,"code":"(fn nth-element [s i] (if (= i 0) (first s) (nth-element (rest s) (- i 1))))","user":"561223e5e4b05f002753df8b"},{"problem":21,"code":"(fn aaa [l n] \n  (if (= n 0)\n    (first l)\n    (aaa (rest l) (dec n))))","user":"57bfb321e4b05aa3c4741c83"},{"code":"(fn [coll n] ((apply comp (cons first (repeat n rest))) coll))","problem":21,"user":"4ea55757535d7eef308072d3"},{"problem":21,"code":"(fn [lst, n] (.get lst n))","user":"571de0a2e4b0145328a76284"},{"code":"(fn [a,i] (first (drop i a)))","problem":21,"user":"5241069ce4b076e5d3121ee1"},{"code":"(fn foo [vals n]\n  (if (= 0 n)\n    (first vals)\n    (foo (rest vals) (- n 1))))","problem":21,"user":"4f037faf535dcb61093f6af8"},{"problem":21,"code":"(fn [collection n]\n  (loop [remaining-collection collection index 0]\n    (if (= index n)\n      (first remaining-collection)\n      (recur (rest remaining-collection) (inc index)))))","user":"60481f3ce4b02d28681c77d1"},{"problem":21,"code":"(fn [list, index] (if (zero? index) (first list) (recur (rest list) (- index 1))))","user":"57f3f2bee4b07bbd65c32b1a"},{"problem":21,"code":"(fn [items which]\n  (loop [idx 0\n         items (seq items)]\n    (cond (nil? items) nil\n          (= idx which) (first items)\n          :default (recur (inc idx) (rest items)))))","user":"574e069fe4b02ea11479923d"},{"problem":21,"code":"(fn [me n] (first (drop n me)))","user":"57090dffe4b0b0fb43fd06a6"},{"problem":21,"code":"(fn [sequencia ind]\n  (->> sequencia\n       (take (inc ind))\n       last\n       )\n)","user":"5f7981d9e4b02876ed9fd0c8"},{"code":"(fn [x y] (last (first (partition (+ y 1) x))))","problem":21,"user":"50023489e4b0678c553fc425"},{"code":"(fn [f n] (if (zero? n) (first f) (recur (rest f) (dec n))))","problem":21,"user":"50b32f0fe4b03ea880433569"},{"code":"(fn [l n] (loop [ll l nn n] (if (= 0 nn) (first ll) (recur (rest ll) (dec nn)))))","problem":21,"user":"4ff2ff7ce4b0678c553fc342"},{"code":"(fn [s n] (if (<= n 0) (first s) (recur (rest s) (- n 1))))","problem":21,"user":"4e9b230c535dbda64a6f6b75"},{"code":"(fn [s n]\n  (loop [ss s cnt n]\n  \t(if (zero? cnt)\n      (first ss)\n      (recur (rest ss) (dec cnt)))))","problem":21,"user":"523de50de4b06956f8342ca9"},{"code":"#(loop [l %1 n %2]\n\t(if (= n 0)\n\t    (first l)\n\t  (recur (rest l) (dec n))))","problem":21,"user":"52aa16d1e4b0c58976d9ac5a"},{"code":"(fn a[lst x]\n  (if (= x 0) (first lst)\n  (a (rest lst) (- x 1))\n  ))","problem":21,"user":"4f1b9c11535d64f60314647c"},{"code":"#(last (first (partition (+ %2 1) %)))","problem":21,"user":"51fa1375e4b0f1313d4689c9"},{"problem":21,"code":"#(loop [x %2\n        y %]\n   (if (= x 0)\n     (first y)\n     (recur (- x 1) (rest y))))","user":"53c74cfce4b00fb29b2212a7"},{"code":"#(loop [coll %1\n        i 0]\n   (if (= %2 i)\n     (first coll)\n     (recur (rest coll) (inc i))))","problem":21,"user":"51d9f321e4b02ceefd947758"},{"problem":21,"code":"#(loop [n %1 l %2]\n   (let [j (first n) k (next n)]\n     (if (or (nil? k) (< l 1))\n       j\n       (recur k (dec l))\n     )\n   )\n )","user":"5bb23cf1e4b0a20761a2350a"},{"code":"(fn [lst n]\n  (let [size (count lst)]\n      (first (take-last (- size n) lst))))","problem":21,"user":"4f629697e4b0defedf855fd6"},{"problem":21,"code":"(fn [coll x] \n  (loop [c coll i x]\n    (if (= 0 i)\n      (first c)\n      (recur (rest c) (- i 1)))))","user":"598876fee4b021a7a535feb7"},{"code":"(fn \n  [stuff n]\n  (if (= n 0)\n    (first stuff)\n    (recur (rest stuff) (dec n))))","problem":21,"user":"51118901e4b03f43822243d2"},{"code":"(fn thefunc [lst x] \n  (if (= x 0) \n    (first lst)\n    (thefunc (next lst) (dec x))))","problem":21,"user":"502ac40ee4b0614b52996119"},{"problem":21,"code":"#(let [index %2]\n    (loop [coll %1 i 0]\n   \t\t(if (= i index)\n     \t\t(first coll)\n     \t\t(recur (rest coll) (inc i)))))","user":"56c5db15e4b05cc29241eeac"},{"problem":21,"code":"(fn [xs n]\n         (loop [xs xs n n]\n           (if (= n 0) (first xs) (recur (rest xs) (- n 1)))))","user":"604b072ae4b0a426fc8b43d2"},{"problem":21,"code":";(fn _nth [seq n] \n;  (if (= n 0) \n;   (first seq)\n;   (_nth (rest seq) (dec n))))\n\n#(first (drop %2 %1))","user":"6059f25de4b07e92fa001ad1"},{"code":"(fn mynth [coll n] (first (drop n coll)))","problem":21,"user":"4fee1574e4b0678c553fc309"},{"problem":21,"code":"(fn [arr idx] (first(drop idx arr)))","user":"57ecf8b2e4b0bfb2137f5b8b"},{"code":"(fn [xs idx]\n  (if (zero? idx)\n    (first xs)\n    (recur (rest xs) (dec idx))))","problem":21,"user":"5264383be4b03e8d9a4a70cb"},{"problem":21,"code":";(fn [coll n] \n;  ((apply comp (cons first (repeat n rest))) coll))\n\n;#(loop [coll %1 cnt %2]\n;   (if (zero? cnt) (first coll)  (recur (rest coll) (dec cnt)))\n;   ) \n\n(fn dosia [xs count]\n  (if (= count 0) (first xs)  (dosia (rest xs) (- count 1)))\n  \n  )","user":"5ce91641e4b0a17bb84e2bb6"},{"problem":21,"code":"(fn [co n] (if (zero? n) (first co) (recur (rest co) (- n 1))))","user":"56bb7132e4b0f26550335955"},{"problem":21,"code":"(fn [collection index]\n  (loop [coll collection\n         count 0]\n    (if (= index count)\n      (first coll)\n      (recur (rest coll) (inc count)))))","user":"56478a82e4b0284900eef61e"},{"code":"(fn\r\n [L n]\r\n (loop [cnt 0 alist L]\r\n  ( if (= cnt n) \r\n    (first alist)\r\n    (recur  (inc cnt) (rest alist)  ) ) ) )","problem":21,"user":"4e6ff01e535d5021c1a8962b"},{"problem":21,"code":"#(first (last (split-at %2 %)))","user":"5ee7274ce4b029a2061bbea0"},{"code":"(fn elt [lst x]\n  (if (= 0 x)\n    (first lst)\n    (elt (rest lst)\n      (- x 1))))","problem":21,"user":"4e505bec535dc968683fc4eb"},{"code":"(fn [lst n] \n  (loop [lst lst n n] \n    (if (= n 0) \n      (first lst) \n      (recur (rest lst) (dec n)))))","problem":21,"user":"527236d4e4b03e8d9a4a741f"},{"problem":21,"code":"(fn [data index] (if (= index 0) (first data) (recur (rest data) (dec index))))","user":"5c69bf86e4b0fca0c16226fd"},{"problem":21,"code":"(fn [elements index] (last (take (+ 1 index) elements)))","user":"561311f0e4b05f002753df9c"},{"problem":21,"code":"(fn my-nth [s n]\n  (if (zero? n)\n    (first s)\n    (recur (rest s) (dec n))))","user":"548ade6de4b0e286459a11f6"},{"code":"(fn [x, pos] \n   (first (drop pos (seq x))))","problem":21,"user":"520ed237e4b0101e4be6fcd9"},{"code":"(fn mynth [xs n] (last (take (+ 1 n) xs)))","problem":21,"user":"4ef6f5ea535dced4c769f250"},{"problem":21,"code":"(fn [in-list n]\n  (loop [tmp-list in-list cnt n]\n    (if (= cnt 0) \n        (first tmp-list)\n        (recur (rest tmp-list) (- cnt 1)))))","user":"58b985e0e4b0888cdc949ccc"},{"code":"(fn [coll n]\n  (if (= n 0)\n      (first coll)\n      (recur (rest coll) (dec n))))","problem":21,"user":"4e7e4d5c535db169f9c7970f"},{"code":"(fn blah [l, n] (if (<= n 0) (first l) (blah (rest l) (dec n))))","problem":21,"user":"4f17aa97535d64f603146456"},{"problem":21,"code":"(fn hoi [li, n] \n  (if (= n 0) \n    (first li)\n    (hoi (rest li) (dec n))))","user":"5a90395ce4b05369db4d254a"},{"code":"(fn [coll x] ((vec coll) x))","problem":21,"user":"52ea4b23e4b09f7907dd14b8"},{"code":"#(first (nthnext %1 %2))","problem":21,"user":"4dd6d7ee535d2dad7130b5cb"},{"problem":21,"code":"(fn [l n] (if (zero? n) (first l) (recur (next l) (dec n))))","user":"57177d3ae4b07c98581c3b0f"},{"code":"(fn n [l, i] \n  ((vec l) i)\n  )","problem":21,"user":"528149fbe4b0757a1b171426"},{"problem":21,"code":"#(loop [c 0\n         t %2\n         ll %1]\n    (if (= c t)\n      (first ll)\n      (recur (+ c 1) t (rest ll))\n    )\n  )","user":"5bfcdc52e4b0bdcf453d15f4"},{"problem":21,"code":"(fn [s n]\n   (if (= n 0)\n     (first s)\n     (recur (next s) (- n 1))))","user":"5808ee16e4b0a837a8b30d16"},{"problem":21,"code":"(fn [s i]\n  (if (= 0 i)\n    (first s)\n    (recur (rest s) (dec i))\n  )\n)","user":"5a78cd9ee4b013a48d399777"},{"problem":21,"code":"(fn [coll n]\n  (if (empty? coll)\n  \tnil\n    (if  (= 0 n)\n    \t(first coll)\n      \t(recur (rest coll)(- n 1))\n    )\n  )\n  \n)","user":"54100c73e4b01498b1a7199e"},{"problem":21,"code":"(fn [col n]\n  (last (take (inc n) col)))","user":"570466e6e4b0b0fb43fd0663"},{"code":"(fn blah\n  [v n]\n  (if (= n 0)\n      (first v)\n      (blah (rest v) (- n 1))))","problem":21,"user":"51bc99afe4b0fe3ecfb4645e"},{"problem":21,"code":"(fn [l i] (get (into [] l) i))","user":"549c3e0ce4b0f3d1d8e70f87"},{"code":"(fn [sq n]\n  (loop [i 0 lst sq]\n    (if (= i n)\n      (first lst)\n      (recur (inc i) (rest lst)))))","problem":21,"user":"4edb314d535d10e5ff6f5317"},{"code":"(fn nth-item [a, i] (last (take (+ i 1) a)))","problem":21,"user":"4f91cca8e4b0dcca54ed6ca3"},{"code":"(fn [coll index] (if (pos? index) (recur (rest coll) (dec index)) (first coll)))","problem":21,"user":"4ec2f192535dcc7ae8597d4c"},{"problem":21,"code":"#(last (take  (+ %2 1)  %1 ))","user":"57b8f784e4b0fbc9809a27ea"},{"code":"(fn [my-seq n]  \n  (loop [c n s my-seq]\n   (if (= c 0)\n      (first s)\n      (recur (dec c) (rest s)))))","problem":21,"user":"500e9d2fe4b00fff93030f9a"},{"code":"(fn [lst idx]\n  (first (keep-indexed #(if (= %1 idx) %2) lst)))","problem":21,"user":"503ac764e4b07a1917cc34d8"},{"code":"#(get (vec (seq %1)) %2)","problem":21,"user":"5217b461e4b0ea2f1c31c8d6"},{"code":"(fn me [l n] (if (= 0 n) (first l) (me (rest l) (- n 1)) ))","problem":21,"user":"5349ac2be4b084c2834f4a67"},{"problem":21,"code":"(fn [data n] (get (vec data) n))","user":"5a4d8a04e4b05d388ecb6bac"},{"problem":21,"code":"(fn foo [coll ix] \n   (if (= ix 0) \n     (first coll) \n     (foo (next coll) (dec ix))))","user":"560fec6ae4b05f002753df64"},{"code":"(fn sandretto\n  [x y]\n    (if (= y 0)\n      (first x)\n      (sandretto (rest x) (- y 1))))","problem":21,"user":"520ea61ae4b0101e4be6fcd7"},{"problem":21,"code":"(fn\n  [col n]\n  (if (zero? n)\n    (first col)\n    (recur (rest col) (- n 1))))","user":"556e3b73e4b09a3098a52514"},{"code":"(fn get_nth[x n] (if (= n 0) (first x) (get_nth (rest x) (- n 1))))","problem":21,"user":"4f03bd9d535dcb61093f6b5b"},{"problem":21,"code":"(fn   [s n]\n  (loop [i 0\n         head (first s)\n         tail (rest s)]\n    (if (= i n)\n      head\n      (recur (inc i) (first tail) (rest tail)))))","user":"58ec1e63e4b056aecfd47d54"},{"code":"(fn [s n] (get (vec s) n)) ; nth","problem":21,"user":"4f0376a5535dcb61093f6add"},{"code":"(fn myfn[list, num] (if (> num 0) (myfn (rest list) (- num 1)) (first list)))","problem":21,"user":"51a16b08e4b00957e520db74"},{"problem":21,"code":"(fn [list nr]\n  (first \n   (drop nr list)))","user":"56128c54e4b05f002753df93"},{"code":"(fn [col n] (->> col (take (inc n)) last))","problem":21,"user":"4e15f248535d04ed9115e7e6"},{"problem":21,"code":"(fn gn [xs n]\n  (if (= n 0)\n    (first xs)\n    (gn (rest xs) (dec n))))","user":"5c7d2b9be4b0d597f478caa1"},{"problem":21,"code":"(fn recursion [input-list n] \n  (if (= n 0) \n  \t(first input-list)\n  \t(recursion (rest input-list) (dec n))))","user":"5c547943e4b0fb8c5ffd9a0a"},{"code":"(fn [s i] (first (reverse (take (inc i) s))))","problem":21,"user":"500e3238e4b068062f6e8d8f"},{"problem":21,"code":"(fn [sq n]\n  (loop [s sq\n         idx 0]\n    (if (= idx n)\n      (first s)\n    (recur (rest s) (inc idx)))))","user":"5630cff7e4b0bfe05bf11787"},{"problem":21,"code":"(fn nth-elem [s i] (last (take (+ i 1) s)))","user":"5863f986e4b0f14aab7c8838"},{"problem":21,"code":"(fn xth [seq x] (if (= x 0) (first seq) (xth (rest seq) (dec x))))","user":"54b45938e4b05787c3b1638f"},{"problem":21,"code":"(fn [coll index] (.get coll index))","user":"55e5f97de4b050e68259b47e"},{"problem":21,"code":"(fn nt [v idx] (if (= idx 0)(first v)(nt (rest v) (- idx 1))))","user":"5c454ee2e4b0e06e1360a388"},{"problem":21,"code":"#((reduce merge (map-indexed hash-map %1)) %2)","user":"5e63ffa0e4b0fd0acd1586a6"},{"code":"#(first ((fn [l e] (loop [i 0 j l] (if (< i e) (recur (inc i) (next j)) j))) %1 %2))","problem":21,"user":"4f28d266e4b0d6649770a01c"},{"problem":21,"code":"(fn [s n] \n  (if (= n 0)\n    (first s)\n    (recur (rest s) (dec n) ) ) )","user":"57c7cf2be4b05aa3c4741d0e"},{"problem":21,"code":"(fn enth [col n] (if (= n 0) (first col) (enth (rest col) (dec n))))","user":"58e6e624e4b056aecfd47cc1"},{"code":"(fn foo[x, index] (get (vec x) index))","problem":21,"user":"4e78c2ba535db95036265723"},{"code":"(fn ([arg cnt] (last (take (+ 1 cnt) arg))))","problem":21,"user":"4f7d065ce4b06e829148e1b9"},{"problem":21,"code":"(fn[lst n] (if (= n 0) \n             (first lst) \n             (recur (rest lst) (- n 1))\n             ))","user":"575ddfd1e4b02ea11479938d"},{"problem":21,"code":"(fn f [l n]\n  (if (= n 0)\n    (first l)\n    (f (rest l) (- n 1))\n    )\n  )","user":"5743578fe4b0c285004e8aa2"},{"code":"(fn [xs, n] (first (nthnext xs n)))","problem":21,"user":"51251e1fe4b08c6d99a12b87"},{"code":"(fn [s n] (if (= n 0)\n             (first s)\n             (recur (next s) (- n 1))))","problem":21,"user":"50d2e74ae4b03c62ef244480"},{"code":"(fn [x n](first (drop n x)))","problem":21,"user":"4ef51f8c535dced4c769f245"},{"code":"(fn [seq n] (last (take (+ n 1) seq)))","problem":21,"user":"4e7f3891535db966e863cc3b"},{"problem":21,"code":"(fn [s n]\n  (loop [number 0\n         sqvn s]\n    (if (= n number)\n      (first sqvn)\n      (recur (inc number) (rest sqvn)))))","user":"5dcc152ae4b02b31cc3da3c3"},{"code":"(fn [lst n]\n  (loop [i 0 lst lst]\n    (if (= i n) (first lst)\n      (recur (inc i) (rest lst)))))","problem":21,"user":"52718620e4b03e8d9a4a73f5"},{"problem":21,"code":"(fn get_n [x n] (if (= n 0) (first x) (get_n (rest x) (dec n))))","user":"5a533cc0e4b05d388ecb6c09"},{"code":"(fn [c x] (first (nthnext c x)))","problem":21,"user":"5387580de4b06839e8705f1d"},{"problem":21,"code":"#((fn [items index current]\n  (cond (= current index) (first items)\n        :else (recur (rest items) index (inc current))))\n  %1 %2 0)","user":"602bfcefe4b0d5df2af22268"},{"code":"(fn [s i] (if (zero? i) (first s) (recur (rest s) (dec i))))","problem":21,"user":"511f1434e4b0cf8688794046"},{"problem":21,"code":"(fn n [x y]\n  (if (= y 0) (first x) (n (rest x) (- y 1))))","user":"55244734e4b0882d96d091bf"},{"code":"(fn [l n] ((zipmap (range (count l)) l) n))","problem":21,"user":"502cff22e4b0b2ab8d5c7e72"},{"code":"(fn [seq n]\n  (first (drop n seq)))","problem":21,"user":"4eac5bc1535d7eef3080731b"},{"problem":21,"code":"(fn [lst n] (->> lst (drop n) first))","user":"51c116d4e4b0c9c822882942"},{"code":"(fn [coll n] \n  (loop [c 0 cl coll] \n               (if (= c n) (first cl) \n                 (recur (inc c) (rest cl)))))","problem":21,"user":"52d7a930e4b09f7907dd1379"},{"problem":21,"code":"(fn [lista, indice]\n  (first\n    (drop indice\n      (take (+ indice 1) lista))))","user":"5c493046e4b0e06e1360a3cb"},{"code":"(fn [s n]\n    (if (zero? n)\n      (first s)\n      (recur (rest s) (dec n))\n      ))","problem":21,"user":"51b8e0dce4b050a1176cd69f"},{"problem":21,"code":"(fn [list-seq x]\n  (loop [ls list-seq n x]\n    (if (= n 0)\n      (first ls)\n      (recur (rest ls) (dec n)))))","user":"55f73078e4b06e875b46cea4"},{"code":"(fn something [x y] (.get x y))","problem":21,"user":"5259c698e4b0cb4875a45ce4"},{"problem":21,"code":"(fn [coll n] (get (into [] coll) n))","user":"552ac48ee4b0ffed3738f957"},{"problem":21,"code":"(fn [s n]\n    (get (vec s) n)\n  )","user":"55e038fee4b050e68259b409"},{"code":"(fn nnth [l n]\n  (if (= n 0)\n    (first l)\n    (nnth (rest l) (- n 1))))","problem":21,"user":"51684318e4b03f62cda68cd6"},{"code":"(fn [list pos] (first (drop pos list)))","problem":21,"user":"4faea959e4b081705acca24d"},{"code":"(fn [collection index]\n  (loop [coll collection\n         current 0]\n    (if (= index current)\n      (first coll)\n      (recur (rest coll) (inc current)))))","problem":21,"user":"528b01a0e4b0239c8a67ae89"},{"problem":21,"code":"(fn [index obj] \n    ((apply comp (cons first (repeat obj rest))) index))","user":"5c4e2b82e4b0f9f7a8770e93"},{"code":"(fn [seq n]\n  (loop [i 0\n         r seq]\n    (if (= i n)\n      (first r)\n      (recur (inc i) (rest r)))))","problem":21,"user":"4ec46e77535dcc7ae8597d62"},{"code":"(fn [l x] \n    (if (= x 0) (first l) (recur (rest l) (- x 1)))\n)","problem":21,"user":"4fcd0990e4b0ee37620e1874"},{"problem":21,"code":"(fn [ls n] (first (nthnext ls n)))","user":"56826c2fe4b0945ebc182a92"},{"problem":21,"code":"(fn [col index]\n  (if (= 0 index)\n    (first col)\n    (recur (rest col) (dec index))\n    ))","user":"56083383e4b046a4fc0ac00a"},{"problem":21,"code":"(fn foo\n   ([array pos] (foo array pos '()) )\n   ([array pos new_array] \n   (if (= pos (dec (count new_array))) \n     (first new_array) \n     (recur (rest array) pos \n            (conj new_array \n                  (first array))))))","user":"56f4976ce4b046a417f9205f"},{"code":"(fn mynth [x y]\n  (\n    if (= y 0)\n      (first x)\n      (mynth (rest x) (dec y))\n  )\n)","problem":21,"user":"4fb7b80ae4b081705acca2d4"},{"problem":21,"code":"#(loop [items %1 n %2] (if (= n 0) (first items) (recur (rest items) (dec n))))","user":"569ef93de4b0542e1f8d148b"},{"code":"(fn [roll e]\n    (letfn [(nt\n              [c n e]\n              (if (zero? e)\n                (first c)\n                (recur n (next n) (dec e))))]\n      (nt roll (next roll) e)))","problem":21,"user":"50a991dce4b07e35d68b27b3"},{"code":"(fn [l idx]\n            (cond\n              (= 0 idx) (first l)\n              :else (recur (next l) (- idx 1))\n              )\n            )","problem":21,"user":"4daf4d2fedd6309eace4d178"},{"problem":21,"code":"(fn ret-elem [x n] (if(= n 0) (first x) (ret-elem (next x) (dec n)) ))","user":"5559b443e4b0deb715856e3c"},{"problem":21,"code":"#(loop [lst %1, n %2]\n   (if (zero? n)\n     (first lst)\n     (recur (rest lst) (dec n))))","user":"563afd5ae4b0bfe05bf11809"},{"problem":21,"code":"(fn getNth [coll x]\n  (first (drop x coll))\n)","user":"57758671e4b0979f8965161f"},{"code":"(fn dropper [x y]\n (if (= (count x) (+ y 1))\n  (last x)\n    (dropper (drop-last x) y)))","problem":21,"user":"4ebe066a535dfed6da9c6d91"},{"code":"(fn [coll n] \n((apply comp (cons first (repeat n rest))) coll))","problem":21,"user":"527b856fe4b03e8d9a4a758d"},{"problem":21,"code":"(fn mynth [lst n]\n  (if (= n 0)\n    (first lst)\n    (mynth (rest lst) (dec n))))","user":"586c5a34e4b01531a375e97a"},{"code":"(fn get-nth  [items count]\n  (if (> count 0)    \n    (get-nth (rest items) (- count 1))\n  (first items)))","problem":21,"user":"4fd9d162e4b05e33b9224f3c"},{"problem":21,"code":"(fn [lst a] \n  (if\n   (= a 0)\n   (first lst)\n   (recur (rest lst) (- a 1))\n  )\n)","user":"55916764e4b0604b3f94d57b"},{"problem":21,"code":"(fn [col n] (if (zero? n) (first col) (recur (rest col) (dec n) )))","user":"557ed664e4b05c286339e0d9"},{"code":"(fn [lst indx]\n  (cond\n   (= nil lst) nil\n   (= 0 indx) (first lst)\n   :else (recur (rest lst) (dec indx))))","problem":21,"user":"51eff50fe4b0249c592fbdf0"},{"code":"(fn [xs n]\n  (if (zero? n) (first xs) (recur (rest xs) (dec n))))","problem":21,"user":"4f2e0369e4b0d6649770a064"},{"problem":21,"code":"(fn [coll num] \n  (loop [col coll nu num] \n    (if (= nu 0) (first col) (recur (rest col) (dec nu)))))","user":"5c597b42e4b01df32ab7325b"},{"code":"(fn mynth [lst n]\n  (if (= n 0)\n    (first lst)\n    (mynth (rest lst) (- n 1))))","problem":21,"user":"52158e69e4b0bf4bffd29c9f"},{"problem":21,"code":"(fn [x y] \n  (first (drop y x)))","user":"5630a51de4b0bfe05bf11781"},{"code":"(fn mynth [coll n] (last (take (+ n 1) coll)))","problem":21,"user":"534eecaee4b084c2834f4abf"},{"code":"(fn [l c]\n    (loop [l l count 0]\n    (if (= c count)\n        (first l)\n        (recur (rest l) (inc count)))))","problem":21,"user":"4f98b69ae4b0dcca54ed6cf4"},{"code":"(fn return-nth [x n] (if (= n 0) (first x) (recur (rest x) (- n 1))))","problem":21,"user":"52c0101fe4b07a9af5792343"},{"problem":21,"code":"(fn [inputList index]\n  (first\n    (drop index inputList)\n  )\n)","user":"56012afde4b04bb52996e17c"},{"problem":21,"code":"(fn [x y] ((fn [n cur _rest] (if (= n 0) cur (recur (- n 1) (first _rest) (rest _rest)))) y (first x) (rest x)))","user":"59cf6fbce4b0ef0a1e9b5b6c"},{"problem":21,"code":"(fn aux [col n]\n  (if (= n 0)\n    (first col)\n    (aux (rest col) (dec n))))","user":"5e47bc6fe4b043cd24807a34"},{"code":"(fn [c i]\n  (if-not (zero? i) (recur (rest c) (dec i)) (first c)))","problem":21,"user":"51eadb98e4b0f1f103a0d153"},{"problem":21,"code":"(fn [v n]\n  (loop [v v\n         n n]\n    (cond\n      (empty? v) nil\n      (= 0 n) (first v)\n      :else (recur (rest v) (- n 1)))))","user":"55fbc657e4b0f488688e0666"},{"problem":21,"code":"(fn [%1 %2]\n  (if (= %2 0)\n    (first %1)\n    (recur (rest %1) (dec %2))))","user":"5b31712de4b025bcb146f305"},{"problem":21,"code":";(fn my-func [x y] (if (= y 0) (first x) (my-func (rest x) (- y 1))))\n(fn [x y] (if (= y 0) (first x) (recur (rest x) (- y 1))))","user":"54d0ceb5e4b0e8a36923e5d1"},{"code":"(fn [s i]\n  (if (zero? i)\n    (first s)\n    (recur (next s) (dec i))))","problem":21,"user":"50e1b933e4b019fc399ce17e"},{"code":"(fn mynth [x n]\n  (if (> n 0)\n(mynth (rest x) (- n 1))\n(first x)))","problem":21,"user":"4f954c6be4b0dcca54ed6ccb"},{"problem":21,"code":"(fn[xs i] (if (<= i 0) (first xs) (recur (rest xs) (- i 1))) )","user":"5af0c1ede4b0cc2b61a3bc57"},{"code":"(fn [s n] (last (take (+ n 1) s)))","problem":21,"user":"4e8bc8d8535d65386fec2125"},{"code":"(fn [s n] \n  (if (= n 0) \n      (first s) \n      (recur (rest s) (dec n))))","problem":21,"user":"5245e25ae4b09dbe66b56176"},{"problem":21,"code":"(fn [lista n] (get (vec lista) n))","user":"553e2da3e4b0a04f792994ea"},{"code":"(fn [l i] (last (take (inc i) l) ))","problem":21,"user":"52fc9b94e4b047fd5583701d"},{"code":"(fn [seq n]  \n  ((zipmap (iterate inc 0) seq) n))","problem":21,"user":"4e7f32ee535db966e863cc3a"},{"problem":21,"code":"(fn [s n]\n  (loop [s s cnt 0]\n    (if (= cnt n)\n      (first s)\n      (recur (next s) (inc cnt)))))","user":"588d3952e4b00487982d516e"},{"code":"(fn [lst n]\n  (let [enough (+ n 1) \n        selection (take enough lst)]\n    (if (= enough (count selection)) ; make sure we got enough enough elements (list is long enough to return value)\n      (last selection))))","problem":21,"user":"50a90241e4b0a9a42786e8dc"},{"problem":21,"code":"(fn [s, n]\n  (if (= 0 n)\n    (first s)\n    (recur (rest s) (- n 1))\n  )\n)","user":"52f1bd89e4b05e3f0be25ef0"},{"problem":21,"code":"(fn item [x n] (if (= n 0) (first x) (item (rest x) (dec n))))","user":"59a0a23ce4b0871e7608b83b"},{"problem":21,"code":"(fn [coll n]\n  (loop [i 0\n         tail coll]\n    (if (= i n) (first tail) (recur (inc i) (rest tail)))))","user":"56054d8fe4b08b23635d3165"},{"problem":21,"code":"(fn\n  [param n]\n  (loop [index 0 ans param]\n    (if (= index n)\n      (first ans)\n      (recur (inc index) (rest ans)))))","user":"556ff203e4b09a3098a52526"},{"problem":21,"code":"(fn [seq i] \n  (.get seq i))","user":"56781f16e4b05957ce8c6173"},{"code":"(fn [ls n] (last (take (+ n 1) ls)))","problem":21,"user":"52229bbbe4b0e6a83c892602"},{"code":"(fn mynth[list n] \n  (if (= n 0) (first list) \n    (mynth (rest list) (- n 1))))","problem":21,"user":"4e525840535d302ef430da72"},{"problem":21,"code":"(fn f [x n] (if (= 0 n) (first x) (f (rest x) (dec n))))","user":"54be7772e4b0ed20f4ff6eea"},{"problem":21,"code":"; #(nth % %2)\n#((vec %) %2)\n; ((vec '(4 5 6 7)) 2)","user":"558d6beae4b0277789237643"},{"problem":21,"code":"(fn [a b] (loop [lst a n b] (if (zero? n) (first lst) (recur (rest lst) (dec n)))))","user":"563249dee4b0bfe05bf1179f"},{"problem":21,"code":"#(if (pos? %2)\n   (recur (next %1) (dec %2))\n   (first %1))","user":"54320353e4b0dad94371f2eb"},{"code":"(fn [s n]\n  (if (zero? n)\n    (first s)\n    (recur (rest s) (dec n)))) ; or (when s (recur (rest s) (dec n)))\n                               ; (not an optimization for most use cases)","problem":21,"user":"53576356e4b04ce2eb3ed27a"},{"code":"(partial  \n(fn lost [i x n] ( \n  if(= i n)\n    (first x)\n    (recur  (+ i 1) (rest x) n))) 0)","problem":21,"user":"4ed38714535d44c135fd68f1"},{"code":"(fn [x,n]\n  (first (first  (reverse (split-at n x) ) ) ) )","problem":21,"user":"535056a7e4b084c2834f4adb"},{"code":"(fn [my-list idx] (first \n                   (drop idx my-list)))","problem":21,"user":"52aab153e4b0c58976d9ac69"},{"code":"(fn [x c]  (loop [l x\n                  i c]\n                  (if (= i 0)\n                    (first l)\n            (recur (rest l) (dec i)))))","problem":21,"user":"4f2673d7e4b0d6649770a002"},{"code":"(fn [l n]\r\n(loop [curr l num n]\r\n(if (= num 0) (first curr) (recur (rest curr) (- num 1)))))","problem":21,"user":"523dd963e4b06956f8342ca1"},{"problem":21,"code":"(fn [elements item] (first (drop item elements)))","user":"5975ed26e4b01722bebd4cd0"},{"problem":21,"code":"(fn my_nth [s n] (if (= n 0) (first s) (my_nth (rest s) (- n 1) )))","user":"5651de3ee4b0f9d632dd845b"},{"problem":21,"code":"(fn [a-seq n] (first (drop n a-seq)))","user":"5394c2dfe4b0b51d73faaed1"},{"problem":21,"code":"(fn step [xs n]\n    (if (zero? n)\n     \t(first xs)\n     \t(step (next xs) (dec n))))","user":"5e15cb00e4b0a047bd49f709"},{"code":"(fn [l i]\n  (if (= i 0)\n      (first l)\n      (recur (rest l) (dec i))))","problem":21,"user":"4e6f8d36535d5021c1a89621"},{"problem":21,"code":"(fn my-nth [coll n]\n  (if (= n 0) \n    (first coll)\n    (my-nth (rest coll) (dec n))))","user":"5777cffae4b0979f89651651"},{"problem":21,"code":"(fn f [l e] (if (= 0 e) (first l) (f (rest l) (- e 1))))","user":"568a9a6fe4b0dcc4269f4091"},{"code":"(fn mynth \n  [list idx] \n  (if (= idx 0) \n    (first list) \n    (mynth (rest list) (- idx 1))))","problem":21,"user":"5226ab21e4b04e78ff2e198a"},{"problem":21,"code":"(fn [xs n]\n  (if (= n 0)\n    (first xs)\n    (recur (rest xs)(dec n))))","user":"5f77568de4b02876ed9fd0b6"},{"code":"(fn [l, n] (.get l n))","problem":21,"user":"51cec7b1e4b0e42293a2255b"},{"problem":21,"code":"(fn [xs n]\n\t(if (<= n 0)\n\t  (first xs)\n\t  (recur (next xs) (dec n))))","user":"549eb44fe4b0f3d1d8e70fa6"},{"problem":21,"code":"(fn [my-coll my-plc]\n    (if (= my-plc 0)\n      (first my-coll)\n      (recur (rest my-coll) (- my-plc 1))))","user":"56d5fd24e4b0ea9b8538f7c5"},{"problem":21,"code":"(fn [seq1 n]\n   (first (drop n seq1)))","user":"5ef99e93e4b09b61f08553ce"},{"code":"(fn my-nth [xs, n]\n  ((fn my-nth-helper [xs, level]\n     (if (= n level)\n       (first xs)\n       (my-nth-helper\n        (rest xs)\n        (+ 1 level))))\n   xs 0))","problem":21,"user":"533ce38ce4b085b17e897d77"},{"problem":21,"code":"(fn [sequ n]\n (if (> n 0) \n    (recur (rest sequ) (dec n)) \n    (first sequ)) )\n;      '(1 2 3 4) 2)","user":"58566b42e4b0f14aab7c86f4"},{"code":"#(cond\n    (zero? %2) (first %)\n    :else (recur (rest %) (dec %2)))","problem":21,"user":"4e89559c535d4ef0aa30db9a"},{"problem":21,"code":"(fn ret-n [list n] \n  (cond \n   (= n 0) (first list)\n   :else (ret-n (rest list) (dec n))\n   )\n  )","user":"5a39e36ce4b001c08efc0cbc"},{"code":"(fn mynth [l n] (if (= n 0) (first l) (mynth (rest l) (- n 1))))","problem":21,"user":"52af0136e4b0c58976d9acb3"},{"code":"(fn [x y] (if (not (= 0 y)) (recur (rest x) (dec y)) (first x)))","problem":21,"user":"501fed56e4b0cb6ebc0a42f0"},{"problem":21,"code":"(fn [listv nposition]\n(loop [listrest listv x nposition ]\n(if (= x 0)\n(first listrest)\n(recur (rest listrest) (dec x)))))","user":"603baf04e4b0d5df2af22302"},{"problem":21,"code":"(fn [seq n] (first (drop n seq) ))","user":"55ddc5cbe4b050e68259b3d0"},{"problem":21,"code":"(fn mynth [l n] (if (= 0 n) (first l) (mynth (rest l) (dec n))))","user":"5749ce09e4b009280f9f2ba0"},{"problem":21,"code":"#(loop [x %2\n        y %]\n  (if (< x 1) (first y) (recur (dec x) (rest y))))","user":"56c560ede4b05cc29241eea6"},{"problem":21,"code":"#(if (= %2 0)\n    (first %1)\n    (if (< %2 0)\n      nil\n      (recur (rest %1) (dec %2)))\n    )","user":"5eb41273e4b00a66d4a9521b"},{"problem":21,"code":"(fn [xs n] (loop [xs xs\n                  n n]\n             (if (= n 0)\n               (first xs)\n               (recur (rest xs) (- n 1)))))","user":"547ad587e4b0c51c1f4d72ce"},{"problem":21,"code":"(fn [l n]\n  (if (zero? n) (first l) (recur (next l) (dec n))))","user":"58e0376ce4b0a4d5acaab732"},{"code":"(fn n[s i]\n  (if (= 0 i) (first s)\n  (n (rest s) (- i 1))))","problem":21,"user":"52247d56e4b01819a2de42db"},{"code":"(fn [s i]\n  (last (take (+ 1 i) s)))","problem":21,"user":"52c884a2e4b0c2d177d62136"},{"problem":21,"code":"(fn[coll n](get (vec coll) n))","user":"53f1d5d4e4b0742d9025b0e2"},{"code":"(fn nth-by-trick [myseq myn] (if (= 0 myn) (first myseq) (nth-by-trick (rest myseq) (- myn 1))))","problem":21,"user":"511a9fc2e4b0c87c59c96709"},{"code":"(fn ntH [l n] (if (> n 0)\n            \t(ntH (rest l) (- n 1))\n                (first l)))","problem":21,"user":"537bbe08e4b06839e8705e6f"},{"problem":21,"code":"(fn [collection nomer]\n  (loop [coll collection\n         n nomer]\n     (if (> n 0)\n     (recur (rest coll) (dec n))\n     (first coll))))","user":"59ea07c9e4b0249b72820756"},{"code":"(fn [l n] (first (last (take (inc n) (iterate rest l)))))","problem":21,"user":"539eb153e4b0ca733b97448e"},{"problem":21,"code":"(fn [sequence index] (get (vec sequence) index))","user":"5d704f7ee4b04d129b00f2d7"},{"problem":21,"code":"(fn xx[xs n]\n   (if (= n 0)\n     (first xs)\n     (xx (rest xs) (dec n))))","user":"5f3f6570e4b004f08c61c563"},{"problem":21,"code":"(fn [x pos] (get (into [] x) pos))","user":"59637028e4b066ee0a44b0ca"},{"problem":21,"code":"#(first (last (take (inc %2)  (iterate rest %1))))","user":"5707abfce4b0b0fb43fd068d"},{"code":"(fn my-nth [list n] \n  (if (= n 0) \n    (first list)\n    (my-nth (rest list) (- n 1))))","problem":21,"user":"4fbe2cfbe4b081705acca30c"},{"code":"(fn nthElem [xs n]  (if (= n 0)\n                      (first xs)\n                      (nthElem (rest xs) (- n 1))\n                     )\n )","problem":21,"user":"5027a13de4b01614d1633fed"},{"code":"(fn getnth [collection index] \n  (if (= 0 index)\n      (first (seq collection))\n      (getnth (rest collection) (- index 1))))","problem":21,"user":"503a5623e4b07a1917cc34d3"},{"code":"#((fn iter [xs i] (if (= i %2) (first xs) (iter (rest xs) (+ i 1)))) %1 0)","problem":21,"user":"4fe8f5e3e4b0547ebccb2436"},{"code":"(fn nth' [ns i] \n  (if (= 0 i)\n    (first ns)\n    (nth' (rest ns) (- i 1))))","problem":21,"user":"4ffb59f6e4b0678c553fc3cf"},{"problem":21,"code":"(fn [s n] (loop [i 0 seq s]\n\t(if (= i n) \n      \t(first seq) \n      \t(recur (inc i) (rest seq))\n      )\n  )\n)","user":"5595a88ee4b0c79f6e1db96e"},{"problem":21,"code":"(fn[coll n] (last(take (+ 1 n) coll)))","user":"5537b2c7e4b09218d5f44fce"},{"problem":21,"code":"(fn foo [lst i]\n  (if (= i 0)\n    (first lst)\n    (foo (rest lst) (dec i))\n  )\n)","user":"543d245be4b032a45b869348"},{"code":"(fn [array offset] (get (to-array array) offset))","problem":21,"user":"4e50fb2c535dc968683fc4f1"},{"problem":21,"code":"(fn ff [s n] \n  (if (= 0 n)\n    (first s)\n    (ff (rest s) (dec n))))","user":"56df6301e4b0ca2494a095f1"},{"problem":21,"code":"(fn [col e] (last (take (+ 1 e) col)))","user":"5de8f7cee4b0986d99407f82"},{"code":"(fn [s p]\n  (loop [curseq s curpos p]\n    (if (= curpos 0)\n      (first curseq)\n      (recur (rest curseq) (dec curpos)))))","problem":21,"user":"51a3cc45e4b0e77c4ca60bfb"},{"problem":21,"code":"(fn [coll index] \n   (loop [i 0\n          x (first coll)\n          y (next coll)]\n     (if (= i index)\n       x\n       (recur (inc i) (first y) (next y)))))","user":"553cd680e4b0a04f792994d4"},{"code":"(fn\n  [xs n]\n  (loop [xs xs\n         n n]\n    (if (zero? n)\n      (first xs)\n      (recur (rest xs) (dec n)))))","problem":21,"user":"539f45dce4b0ca733b974497"},{"code":"#( if(= %2 0) (first %1) (recur (rest %1) (dec %2) ) )","problem":21,"user":"5007cdb9e4b0b17c647f5227"},{"problem":21,"code":"(fn xth [coll n] (if (= n  0) (first coll) (xth (rest coll) (dec n))))","user":"52e5f810e4b09f7907dd1468"},{"problem":21,"code":"(fn nth'\n  [l n]\n  (if (= n 0) \n    (first l)\n    (nth' (rest l) (- n 1))))","user":"56e8ef93e4b04a395b9a03f4"},{"code":"#(loop [n %2 l %1]\n       (cond (= n 0) (first l)\n             true    (recur (- n 1) (rest l))))","problem":21,"user":"4f84a4a4e4b033992c121c39"},{"problem":21,"code":"(fn[c,i] (get (apply vector c) i))","user":"54e32090e4b024c67c0cf7d9"},{"problem":21,"code":"(fn \n\t[l n]\n\t(last (take (inc n) l)))","user":"59b62f8de4b05c620303ca1f"},{"problem":21,"code":"(partial (fn [i xs n] (if (= i n) (first xs) (recur (+ i 1) (rest xs) n))) 0)","user":"574c5f34e4b02ea11479921c"},{"code":"(fn  [coll n]\n  (loop [coll coll\n         n n]\n    (if (= n 0)\n      (first coll)\n      (recur (rest coll) (dec n)))))","problem":21,"user":"52d7f9a8e4b09f7907dd1381"},{"problem":21,"code":"#(loop [s %1 n %2] (if (= 0 n) (first s) (recur (rest s) (dec n))))","user":"58aa3f02e4b01a0c0b23297d"},{"problem":21,"code":"(fn recrec\n  [ls n] \n  (if (= n 0)\n    (first ls)\n    (recrec (rest ls) (dec n))))","user":"539da224e4b0b51d73faaf39"},{"code":"(fn [x n] (last (take (+ 1 n) x)))","problem":21,"user":"4f946be7e4b0dcca54ed6cc3"},{"code":"(fn getnth [l n] (if (= n 0) (first l) (getnth (next l) (- n 1))))","problem":21,"user":"5335f378e4b0e30313ee6c73"},{"problem":21,"code":"(fn [arr index]\n  (get (vec arr) index))","user":"563dfeffe4b0da801c4e4663"},{"problem":21,"code":"(fn [my-list n]\n  (get (vec my-list) n)\n  )","user":"551e7267e4b030e6a24d00e9"},{"code":"(fn [coll pos] (first (drop pos coll)))","problem":21,"user":"539b4268e4b0b51d73faaf1c"},{"problem":21,"code":"(fn [l n](last (take (+ n 1) l)))","user":"5a950d9fe4b0d174b936c745"},{"code":"(fn [x n]\n  (loop [rem x cnt 0]\n    (if (= cnt n) (first rem) (recur (rest rem) (inc cnt)))))","problem":21,"user":"4fdbef2fe4b05e33b9224f66"},{"problem":21,"code":"#(first (take-last  (- (count %1) %2) %1))","user":"5fabe67be4b08cb800c85ade"},{"problem":21,"code":"(fn\n  [coll i]\n  (loop [cnt i tmp-list coll]\n    (if (zero? cnt)\n      (first tmp-list)\n      (recur (dec cnt) (rest tmp-list)))))","user":"58954c47e4b00487982d527e"},{"problem":21,"code":"(fn [col n] \n  (loop [i 0\n         x col]\n    (if (= i n)\n      (first x)\n      (recur (inc i) (rest x))\n      )\n    )\n  )","user":"5b2fcac6e4b025bcb146f2e6"},{"code":"(fn _ [coll n]\n  (if (< n 1)\n  \t(first coll)\n  \t( _ (rest coll) (- n 1) ) ) )","problem":21,"user":"51d0977fe4b067c365486352"},{"code":"(fn [col n]\r\n  (if (zero? n)\r\n   (first col)\r\n   (recur (rest col) (- n 1))))","problem":21,"user":"505aa653e4b021387fb89857"},{"problem":21,"code":"#(if (<= %2 (count %1))\n    (loop [i 0 s %1]\n      (if (= i %2)\n        (first s)\n        (recur (inc i) (rest s))))\n    nil)","user":"5901731ae4b0438e51c2d03d"},{"problem":21,"code":"(fn [stack needle]\n    (loop\n      [x stack cnt 0 at needle]\n      (if (= at cnt)\n        ((vec x) at)\n        (recur x (inc cnt) at)))\n  )","user":"53275758e4b09d4e7a9b54fc"},{"code":"(fn [args y] (loop [args args\n                    myCount y]\n                (println myCount)\n               (if (= myCount 0)\n                 (first args)\n                 (recur (rest args) (- myCount 1)))))","problem":21,"user":"525cc912e4b0cb4875a45d48"},{"problem":21,"code":"(fn ne\n  [col n]\n  (if (= n 0) (first col)\n              (ne (rest col) (dec n))))","user":"5c3ac091e4b0d62ef62d9f95"},{"problem":21,"code":"(fn [s n]\n  (loop [iteration 0\n         s s]\n    (if (= iteration n)\n      (first s)\n      (recur (inc iteration) (rest s)))))","user":"54636b05e4b01be26fd746c0"},{"problem":21,"code":"(fn my[x y] (if (> y 0) (my (next x) (dec y)) (first x)))","user":"53f64f38e4b0db01ade6f9dc"},{"code":"(fn [x, y] ((apply vector x) y))","problem":21,"user":"506c0a02e4b0eda3100c090d"},{"problem":21,"code":"(fn foo [l idx]\n  (if (== idx 0)\n      (first l)\n      (foo (rest l) (- idx 1))\n  )\n)","user":"54acd7f9e4b09f271ff37cda"},{"problem":21,"code":"(fn [sequene n] (last (take (inc n) sequene)))","user":"57e697e1e4b0bfb2137f5aef"},{"code":"(fn [sequ n] ((vec sequ) n))","problem":21,"user":"4ee84038535d93acb0a6687b"},{"code":"(fn [x n] ( first (last (take (+ n 1) (iterate rest x)))))","problem":21,"user":"51cc2d84e4b02254fc79486c"},{"problem":21,"code":"(fn nthelem [x n] (if (= n 0)(first x) (nthelem (rest x) (- n 1))))","user":"56e71333e4b02e7e935eb6d2"},{"problem":21,"code":"(fn [coll x] (loop [lst coll u 0] (if (= u x) (first lst) (recur (rest lst) (inc u)))))","user":"5df08767e4b093ff717275bf"},{"problem":21,"code":"(fn ! [x y] \n    (if (= y 0) (first x)  (! (rest x) (dec y) )  )\n  )","user":"59a34ec9e4b066c664927d37"},{"problem":21,"code":"(fn enth [coll pos]\n  (loop [p 0 cl coll]\n    (if (= p pos)\n      (first cl)\n      (recur (inc p) (rest cl))\n      )))","user":"5eeaaa2be4b029a2061bbec5"},{"problem":21,"code":"(fn [xs n]\n  (if (> n 0)\n    (recur (rest xs) (dec n))\n    (first xs)))","user":"51b8d3d5e4b050a1176cd69d"},{"code":"(fn [coll n] (if (zero? n) (first coll) (recur (rest coll) (- n 1))))","problem":21,"user":"530af62ee4b02e82168697c4"},{"problem":21,"code":"(fn nthelement [x y] (if (= y 0) (first x) (nthelement (rest x) (- y 1))))","user":"5fdb51fae4b05ac5b16ea12f"},{"problem":21,"code":"#(loop [i %2\n        l %1]\n   (if (= i 0) (first l)\n     (recur (dec i)\n            (rest l))))","user":"5d4b2155e4b0776584bd6f28"},{"problem":21,"code":"(fn mynth [l n]\n  (cond \n   (= n 0)\n   (first l)\n   :else\n   (mynth (rest l) (- n 1))))","user":"602049b8e4b0bf4ca6b10961"},{"problem":21,"code":"(fn [lst el]\n  (loop [l lst\n         n 0]\n    (if (= n el)\n      (first l)\n      (recur (rest l) (inc n)))))","user":"5ac9c737e4b0e27600da77d2"},{"problem":21,"code":"(fn f [x n] (if (== 0 n) (first x) (f (rest x) (- n 1))))","user":"5c51f60be4b0fb8c5ffd99d4"},{"problem":21,"code":"(fn [s n]\n  (get (vec s) n))","user":"5865c8f0e4b0f14aab7c884e"},{"code":"(fn [lst val]\n  (first (filter #(not (nil? %)) (map-indexed (fn [index valist] \n    (if (= index val) valist nil)) lst))))","problem":21,"user":"4eab1a08535d7eef30807311"},{"problem":21,"code":"(fn [l n]\n  (loop [items l iterations n]\n    (if (zero? iterations)\n      (first items)\n      (recur (rest items) (dec iterations)))))","user":"56972819e4b0e0b3d3318caa"},{"problem":21,"code":"#(last(map (fn[x y] x) %1 (range (+ %2 1))))","user":"5555b454e4b0deb715856e17"},{"problem":21,"code":"(fn [m k] (.get m k))","user":"55a9fe1ce4b0988bba2ad947"},{"problem":21,"code":"(fn [coll nt] (if (= nt 0) (first coll) (recur (rest coll) (dec nt))))","user":"5fcf86c2e4b07e53c2f3f00d"},{"problem":21,"code":"(fn [n x] (first(drop x n)))","user":"5f92a726e4b0715f5002d7b9"},{"code":"(fn [xs n] \n  (loop [xs xs \n         n n \n         acc 0] \n    (if (= n acc) \n      (first xs) \n      (recur (rest xs) n (+ acc 1)))\n    )\n  )","problem":21,"user":"524cd06ae4b0752c4cb68cca"},{"problem":21,"code":"(fn lst [x n] (if (= n 0) (first x) (lst (rest x) (- n 1))))","user":"5f9dd3fee4b0715f5002d831"},{"problem":21,"code":"(fn walk [x, n] (if (= n 0) (first x) (walk (rest x) (- n 1) ) ) )","user":"59fa1b05e4b0ca45a743a356"},{"problem":21,"code":"(fn [list count] (if (= 0 count) (first list) (recur (rest list) (dec count))))","user":"4dce9252535d5973398f92a3"},{"code":"(fn [sequence n] \n  (loop [reductions n seq sequence]\n    (if (zero? reductions) \n      (first seq)\n      (recur (dec reductions) (rest seq)))))","problem":21,"user":"4fb266a5e4b081705acca28c"},{"code":"(fn [coll index] (get (into [] coll) index))","problem":21,"user":"527634d1e4b03e8d9a4a74d6"},{"problem":21,"code":"#(loop [l %1 idx %2] \n   (if (= 0 idx) \n     (first l)\n     (recur (rest l) (dec idx))))","user":"5e96c662e4b0157ca96647ca"},{"problem":21,"code":"(fn [s n] \n  (\n   if (= n 0)\n   (first s)\n   (recur (rest s) (dec n))))","user":"5c371f5be4b0d62ef62d9f72"},{"problem":21,"code":"(fn myFun [collection index] (if (= index 0) (first collection) (recur (rest collection) (dec index))))","user":"60263f9fe4b0d5df2af2222c"},{"code":"(fn [l n] (first(drop n l)))","problem":21,"user":"4eeabd62535d93acb0a668a0"},{"problem":21,"code":"(fn [x, n] (if (= n 0) (first x) (recur (rest x) (- n 1))))","user":"5b7bc82ce4b047b03b203726"},{"problem":21,"code":"(fn [%1 %2]\n   (loop [i 0\n          head (first %1)\n          tail (rest %1)]\n     (if (= i %2)\n       head\n       (recur (inc i)\n               (first tail)\n               (rest tail)))))","user":"57e13e52e4b0bfb2137f5a6d"},{"problem":21,"code":"(fn\n  [coll n] \n  (if (zero? n)\n    (first coll)\n    (recur (rest coll) (dec n))))","user":"5acd235ae4b0e27600da7824"},{"code":"(fn pluck [x n] (first (drop n x)))","problem":21,"user":"5194960fe4b044d99c15f69b"},{"problem":21,"code":"(fn myNth [xs idx]\n  (->> xs  \n  (drop idx)\n  (first)\n  )\n)","user":"5d4bd9a7e4b0776584bd6f2a"},{"code":"(fn [xs n]\n  (if (= n 0)\n    (first xs)\n    (recur (next xs) (- n 1))))","problem":21,"user":"4f3d83b5e4b0e243712b1f69"},{"code":"(fn nest[l, n]\n  (if (= n 0) \n      (first l) \n      (nest (rest l) (- n 1))\n))","problem":21,"user":"4fa67030e4b081705acca1b7"},{"problem":21,"code":"(fn [sq n] (first (drop n sq) ) )","user":"5db16084e4b010eb3c36cd01"},{"problem":21,"code":"(fn ayy [l n] (if (= n 0) (first l) (ayy (rest l) (dec n))))","user":"557af43ae4b05c286339e0a8"},{"code":"(fn my-nth [coll n]\n  (if (zero? n) (first coll) (recur (rest coll) (dec n))))","problem":21,"user":"500574d9e4b0678c553fc463"},{"code":"(fn [s i] (.get s i))","problem":21,"user":"5142e808e4b0c172af7558c9"},{"code":"(fn [l i] (cond (empty? l) nil (= i 0) (first l) :else (recur (rest l) (dec i))))","problem":21,"user":"539c54b3e4b0b51d73faaf27"},{"problem":21,"code":"( fn [l i] (first (drop i l)))","user":"5a5511a0e4b05d388ecb6c39"},{"problem":21,"code":"(fn f [xs n]\n  (if (= n 0)\n    (first xs)\n  \t(f (rest xs) (dec n))))","user":"5594721de4b0c79f6e1db955"},{"code":"(fn enth [s n] (if (= 0 n) (first s) (enth (rest s) (dec n))))","problem":21,"user":"50a8cc97e4b0a9a42786e8db"},{"code":"(fn [arr index] (aget (to-array arr) index))","problem":21,"user":"5036eba7e4b0af0658af77a5"},{"problem":21,"code":"(fn [lst index] (if (zero? index) (first lst) (recur (rest lst) (dec index))))","user":"572722c4e4b0c5bde472c134"},{"code":"#(loop [l %1 n %2] (if (= 0 n) (first l) (recur (next l) (dec n))))","problem":21,"user":"5137c3b0e4b0509a8b470482"},{"code":"#(if (= %2 0)\n   (first %)\n   (recur (rest %) (- %2 1)))","problem":21,"user":"504ec2a1e4b069badc5a33c7"},{"code":"(fn ! [coll i] (if (= i 0) (first coll) (! (rest coll) (dec i))))","problem":21,"user":"4fecebe1e4b0681fd128dcac"},{"code":"(fn [l i]\n  (if (= 0 i)\n    (first l)\n    (recur (rest l) (dec i))))","problem":21,"user":"530bae80e4b02e82168697d0"},{"code":"(fn [l n] ((vec l) n))","problem":21,"user":"4f942227e4b0dcca54ed6cbe"},{"code":"(fn [coll idx]\n  (loop [lloc coll nn 0]\n    (if (= nn idx)\n      (first lloc)\n      (recur (rest lloc) (inc nn)))))","problem":21,"user":"4ec65a6e535d6d7199dd36cb"},{"problem":21,"code":"(fn [lst n]\n  (loop [list lst\n         i 0]\n    (if (= n i) (first list)\n      (recur (rest list) (inc i)))))","user":"55ed37ebe4b0121d4835fdd6"},{"code":"(fn [l n] ( last (drop-last n (reverse l)) ))","problem":21,"user":"4ef5e06d535dced4c769f24a"},{"problem":21,"code":"(fn [alist idx] (last (take (inc idx) alist)))","user":"5aef6084e4b0cc2b61a3bc34"},{"problem":21,"code":"#(if (= 0 %2) (first %1) (recur (rest %1)(dec %2)))","user":"57e6f90de4b0bfb2137f5af6"},{"code":"(fn [s n] \n  (if (zero? n)\n    (first s)\n    (recur (rest s) (dec n))))","problem":21,"user":"51830c7ae4b0353c468deb78"},{"problem":21,"code":"(fn [coll idx] ((into [] coll) idx))","user":"58e5180ae4b056aecfd47c82"},{"code":"(fn [s n]\n  (.get s n))","problem":21,"user":"504545bae4b01f6c9a8b2369"},{"problem":21,"code":"(fn\n  [l n]\n  (loop\n    [xs l\n     n n]\n    (if (= n 0)\n      (first xs)\n      (recur (rest xs) (- n 1)))))","user":"5638b88de4b0bfe05bf117e9"},{"problem":21,"code":"(fn getn [ary n]\n  (if (= n 0)\n    (first ary)\n    (getn (rest ary) (dec n))))","user":"57de5f0ee4b0bd073c202450"},{"code":"(fn [coll index]\n  (if (= 0 index)\n    (first coll)\n    (recur (next coll) (- index 1))))","problem":21,"user":"4f856248e4b033992c121c43"},{"problem":21,"code":"(fn   \n  [xs n]\n    (if (= n 0)\n      (first xs)\n      (recur (rest xs) (dec n))))","user":"56c21eafe4b05cc29241ee7e"},{"problem":21,"code":"#(if (= %2 0) \n    (first %1)\n    (recur (rest %1) (- %2 1)))","user":"55f344afe4b06e875b46ce5a"},{"code":"(fn [s,i] (last (take (+ 1 i) s)))","problem":21,"user":"4fd73610e4b0dab7d829f37e"},{"problem":21,"code":"(fn\n  [col n]\n  (first (drop n col)))","user":"56e87a9ce4b04a395b9a03f0"},{"problem":21,"code":"(fn [sq i] (get (zipmap (range (count sq)) sq) i))","user":"54c93589e4b045293a27f65e"},{"code":"(fn [mylist n]\n(cond\n(= (count mylist) (inc n)) \n  (last mylist)\n(< (count mylist) (inc n)) \n  nil\n(> (count mylist) (inc n))\n  (recur (butlast mylist) n)))","problem":21,"user":"4e9a3a03535dbda64a6f6b70"},{"code":"(fn [l n]\n  (loop [list l\n        num n\n        nb 0]\n  (if (= nb n) \n    (first list)\n    (recur (rest list) n (inc nb))\n   )\n    )\n)","problem":21,"user":"51d59859e4b01da06753aa92"},{"problem":21,"code":"(fn doit [x y] (if (= y 0) (first x) (doit (rest x) (- y 1))))","user":"57716e11e4b0979f896515b2"},{"problem":21,"code":"(fn [xs n]\n  (get (zipmap (range) xs) n))","user":"5d11618de4b02c15ef021985"},{"problem":21,"code":"(fn [l,i] (last (take (+ i 1) l)))","user":"57280b92e4b0c5bde472c14e"},{"problem":21,"code":"(fn [l n] (loop [ml l mn n] (if (= 0 mn) (first ml) (recur (next ml) (dec mn)))))","user":"55bb6a19e4b01b9910ae29e5"},{"code":"(fn [col n]\n  (loop [x col i n]\n    (if (= 0 i)\n      (first x)\n      (recur (next x) (dec i)))))","problem":21,"user":"4e399009535deb9a81d77f3f"},{"code":"(fn f [x y]\n  (if (= y 0)\n    (first x)\n    (f (rest x) (- y 1))))","problem":21,"user":"5037f7b0e4b0803468ea2c65"},{"problem":21,"code":"(fn [list-input nthh] (last (take (inc nthh) list-input)))","user":"5f8f1d18e4b0715f5002d779"},{"code":"(fn func [x y] (if (= y 0) (first x) (func (rest x) (- y 1))))","problem":21,"user":"52e253fce4b09f7907dd1432"},{"problem":21,"code":"(fn [s x] \n  (if (pos? x) \n    (recur (rest s) (dec x))\n    (first s) ))","user":"57c4e8dce4b05aa3c4741cd7"},{"code":"(fn nthx[x y](first (nthnext x y)))","problem":21,"user":"5052f4fce4b0a561d07d8f26"},{"problem":21,"code":"(fn [x idx]\n  (loop [f x i 0]\n    (if (< i idx)\n      (recur (rest f) (inc i))\n      (first f))))","user":"5b38d771e4b02d533a91bbb0"},{"problem":21,"code":"(fn [lst ind] (if (= 0 ind) (first lst) (recur (rest lst) (dec ind))))","user":"60410d46e4b0d5df2af22335"},{"problem":21,"code":"(fn [xs idx]\n  (->> xs\n      (drop idx)\n      (first)))","user":"52df1d62e4b09f7907dd13fb"},{"problem":21,"code":"(fn [list n]\n  (loop [i n tail list]\n    (if (> i 0)\n      (recur (dec i) (rest tail))\n      (first tail)\n     )\n   )\n )","user":"5b91a343e4b0c0b3ffbd4a25"},{"code":"(fn [ls i]\n  (let [r (fn this [ls i]\n            (if (zero? i)\n              (first ls)\n              (this (rest ls) (- i 1))))]\n    (r ls i)))","problem":21,"user":"4ffee245e4b0678c553fc3f8"},{"problem":21,"code":"(fn [coll idx]\n   (last (take (inc idx) coll)))","user":"54edc818e4b024c67c0cf865"},{"problem":21,"code":"(fn nthelement \n  [x y] \n  (if (= y 0) \n    (first x)\n    (nthelement (rest x) (- y 1))))","user":"54c568cde4b045293a27f623"},{"code":"(fn k [l n] (if (= n 0) (first l) (k (rest l) (dec n))))","problem":21,"user":"5301d41ae4b0d8b024fd3720"},{"code":"(fn [col n] (let [{x n} (vec col)] x))","problem":21,"user":"4fd755cde4b0dab7d829f381"},{"code":"(fn [coll n]\n  (loop [s coll i n]\n    (if (= i 0)\n      (first s)\n      (recur (rest s) (dec i)))))","problem":21,"user":"50800e49e4b089ade05efbda"},{"code":"(fn nxt [x y]\n  (if (zero? y)\n    (first x)\n    (nxt (rest x) (- y 1))))","problem":21,"user":"51f2851fe4b0210f90e7454b"},{"problem":21,"code":"(fn nthh [l count]\n  (if (= count 0)\n    (first l)\n    (nthh (next l) (dec count))))","user":"574f1c24e4b02ea114799255"},{"problem":21,"code":"(fn [coll n]\n  (if (> n 2)\n  (first (take (+ n 1) coll))\n    (last (take (+ n 1) coll))))","user":"5b04662ce4b0cc2b61a3bd75"},{"problem":21,"code":"(fn mynth [ss n]\n  (if (> n 0)\n    (mynth (rest ss) (- n 1))\n    (first ss)))","user":"6063c4fae4b069485764ddc0"},{"code":"(fn [sq n] (last (take (+ 1 n) sq)))","problem":21,"user":"4fdf2b50e4b05e33b9224f93"},{"problem":21,"code":"(fn [col x](last (take (+ 1 x) col)))","user":"52ca7711e4b071a8d36bd3e3"},{"code":"#(loop [idx %2 ll %1] \n   (if(zero? idx)\n     (first ll)\n     (recur (dec idx) (rest ll))\n     )\n   )","problem":21,"user":"5183abf6e4b028ec5fd2f2a6"},{"problem":21,"code":"(fn [array index] (get (vec array) index))","user":"555bbd8be4b0b056612e2243"},{"code":"(fn [xs x] \n  (second (first \n    (filter \n      (fn [y] (= (first y) x)) (map vector (range (count xs)) xs)))))","problem":21,"user":"4fb1325de4b081705acca276"},{"code":"(fn nnth [li co]\n  (if (= 0 co) (first li)\n     (nnth (rest li) (dec co))))","problem":21,"user":"510deddbe4b07438aa321457"},{"code":"(fn [origl, origi]\n  (loop [l origl\n         i  0]\n    (if (= i origi) (first l) (recur (next l) (inc i)))\n    )\n  )","problem":21,"user":"5356a324e4b04ce2eb3ed269"},{"code":"(fn [l, n] (first (nthnext l n)))","problem":21,"user":"53a0acebe4b0ca733b9744b4"},{"code":"(fn myNth [s n]\n  (loop [mySequence s myIndex n]\n    (if (zero? myIndex)\n      (first mySequence)\n      (recur (rest mySequence) (dec myIndex))\n    )\n  )\n)","problem":21,"user":"507eddf4e4b06ce648bcdbfa"},{"problem":21,"code":"(fn my-nth [coll n]\n  (cond\n    (empty? coll) nil\n    (zero? n) (first coll)\n    :else (my-nth (rest coll) (dec n))))","user":"55d06492e4b0e31453f64a39"},{"code":"(fn [seq n] (if (or (< n 0) (empty? seq)) nil (if (= n 0) (first seq) (recur (rest seq) (dec n)))))","problem":21,"user":"524eebb0e4b0541d1855b7f7"},{"problem":21,"code":"(fn [lister n]\n  (first (drop n lister)))","user":"54196d63e4b01498b1a71a34"},{"problem":21,"code":";;#((vec %1) %2)\n(fn [items n]\n  (if (zero? n)\n    (first items)\n    (recur (rest items) (dec n))))","user":"59944e73e4b0b211ea3aaac2"},{"problem":21,"code":"(fn [l n]\n  (if (= 0 n)\n    (first l)\n    (recur (rest l) (- n 1))))","user":"5310a7e3e4b08068f379ecd8"},{"problem":21,"code":"(fn nt [s x]\n  (if (= x 0)\n    (first s)\n    (nt (rest s) (dec x))))","user":"540ed3a7e4b0addc1aec6722"},{"problem":21,"code":"(fn [lst n]\n    (if (empty? lst)\n      nil\n      (if (< (- (count lst) 1) n)\n        nil\n        (loop [new-lst lst\n               i        0]\n          (if (= i n)\n            (first new-lst)\n            (recur \n              (rest new-lst)\n              (inc i)\n            )\n          )\n        )\n      )\n    )\n  )","user":"579a3f3be4b05b1deef9add9"},{"problem":21,"code":"(fn ntha [list n] (first (drop n list)))","user":"53c96d9fe4b00fb29b2212bf"},{"code":"(fn my-nth [list n]\n  (if (= n 0) \n    (first list)\n    (my-nth (rest list) (- n 1))))","problem":21,"user":"4fad77a6e4b081705acca23a"},{"problem":21,"code":"(fn [seq idx]\n(loop [i 0, a seq]\n  (if (= i idx)\n    (first a)\n    (recur (inc i) (rest a))\n    ))\n)","user":"5d94753de4b0d3f9b434ad24"},{"problem":21,"code":"(fn [li idx] (last (take (+ idx 1) li)) )","user":"5bc2df19e4b07a9b28b10038"},{"code":"(fn n [lst idx] \r\n  (if (pos? idx) \r\n    (n (rest lst) (- idx 1)) \r\n    (first lst)))","problem":21,"user":"4fd7a223e4b0dab7d829f387"},{"code":"(fn [x pos] (last (take (inc pos) x)))","problem":21,"user":"537e0394e4b06839e8705e97"},{"problem":21,"code":"(fn [a-seq n]\n  (loop [s a-seq n-count 0]\n    (if (= n-count n)\n      (first s)\n      (recur (rest s) (inc n-count)))))","user":"5443bbe9e4b032a45b869389"},{"problem":21,"code":"(fn get-nth [seq n] (get (vec seq) n))","user":"5b0f0974e4b0cc2b61a3be0e"},{"problem":21,"code":"(fn [n x] (-> x (drop n) (first)))","user":"5530baa5e4b076ab5578f81a"},{"problem":21,"code":"(fn [coll n]\n  (loop [i\tn\n         c\tcoll]\n    (if (= 0 i) (first c) (recur (dec i) (rest c))))\n  )","user":"56a94562e4b07966d5a8a074"},{"code":"(comp first (fn[list, n] (nthnext list n)))","problem":21,"user":"4e5fdd68535d8ccf87e9fe4f"},{"problem":21,"code":"(fn nval [items n] (first (drop n items)))","user":"5d714979e4b04d129b00f2df"},{"problem":21,"code":"(fn [seq n] (loop [x n\n                   s seq]\n             (if (= x 0)\n               (first s)\n               (recur (- x 1) (rest s)))))","user":"558753d8e4b059ccff29b1e1"},{"problem":21,"code":"(fn\n  [coll n]\n  (loop [cnt 0 seq coll]\n    (if (= cnt n)\n      (first seq)\n      (recur (inc cnt) (rest seq)))))","user":"5484143de4b0e286459a1197"},{"code":"(fn [l i] (if (zero? i) (first l) (recur (rest l) (dec i))))","problem":21,"user":"4fb3c249e4b081705acca2a3"},{"problem":21,"code":"(fn [x el]\n\t(first (drop el x))  \n)","user":"5c549f38e4b0fb8c5ffd9a0e"},{"problem":21,"code":"(fn [xs n]\n  (loop [i 0 r xs]\n    (if (= i n)\n      (first r)\n      (recur (inc i) (rest r)))))","user":"57433675e4b0c285004e8a9d"},{"code":"(fn get-nth-shanzhai[sequance index]\n  (get (vec sequance ) index)\n  )","problem":21,"user":"5306bceee4b02e821686979b"},{"problem":21,"code":"(fn nth-element [seq n] \n  (if (zero? n) (first seq) (recur (rest seq) (dec n)))\n)","user":"56c3aca0e4b05cc29241ee90"},{"problem":21,"code":"(fn idx [x n]\n  (if (= n 0)\n    (first x)\n    (idx (rest x) (- n 1))))","user":"54b07c1ee4b09f271ff37d16"},{"problem":21,"code":"(fn neme [l n] (if (= n 0) (first l) (neme (rest l) (- n 1))))","user":"5b446fbae4b02d533a91bc43"},{"code":"#(first (drop %2 %1 ))","problem":21,"user":"4ecbafbf535df97575fdabde"},{"problem":21,"code":"(letfn [(mynth [xs n]\n         (if (= n 0)\n          (first xs)\n          (mynth (rest xs) (dec n))\n         ))]\n       mynth)","user":"54e85a7fe4b024c67c0cf823"},{"problem":21,"code":"(fn [l x]\n        (loop [cnt x ll l]\n          (if (= 0 cnt) (first ll)\n          (recur (- cnt 1) (rest ll)))))","user":"5be05ea7e4b0ed4b8aab4c83"},{"problem":21,"code":"(fn [l n]\n  (if (zero? n)\n    (first l)\n    (recur (next l) (dec n))))","user":"56aca340e4b03c432f187349"},{"problem":21,"code":"(fn mth [data m] \n  (if (= m 0) \n    (first data)\n    (mth (rest data) (dec m))))","user":"55d53255e4b0e31453f64a81"},{"problem":21,"code":"(fn [s idx]\n  (loop [x s i 0]\n       (if (= i idx)\n         (first x) \n         (recur (next x) (inc i)))))","user":"59203996e4b09b4ee5954c5b"},{"code":"(fn xn\n  ([xs n] (xn xs n 0))\n  ([xs n curr]\n    (if (= n curr)\n      (first xs)\n      (xn (rest xs) n (+ 1 curr)))))","problem":21,"user":"4edecdae535d10e5ff6f533c"},{"code":"(fn [l n] (loop [i n s l] (if (= i 0) (first s) (recur (dec i) (rest s)))))","problem":21,"user":"535d66bbe4b04ce2eb3ed2c1"},{"problem":21,"code":"#( loop [sequ %1 counter %2] (if (= counter 0) (first sequ) (recur (rest sequ) (dec counter))))","user":"5f2c94b4e4b033932238a669"},{"problem":21,"code":"(fn [s n] ((apply comp (cons first (repeat n rest))) s))","user":"57097b9de4b0b0fb43fd06ae"},{"problem":21,"code":"(fn my-n-el\n   [coll index]\n   (loop [coll coll\n          index index]\n     (if (= index 0)\n       (first coll)\n       (recur (rest coll) (dec index)))))","user":"542098afe4b01498b1a71aa7"},{"problem":21,"code":"(fn return-nth [x y] (if (= y 0) (first x) (return-nth (rest x) (dec y))))","user":"5e244003e4b05b4b0151614d"},{"code":"(fn rth [from index] (if (= index 0) \n                             (first from) \n                             (rth (rest from) (- index 1))\n                        )\n)","problem":21,"user":"51f7dd27e4b06ff1c25c52dc"},{"problem":21,"code":"(fn [s n](first (reverse (take (inc n) s))))","user":"5dc9b2c7e4b02f9375f4e1eb"},{"code":"#(loop [i 0\n         l %1]\n    (if (>= i %2)\n      (first l)\n      (recur (inc i) \n             (rest l))))","problem":21,"user":"535f9a5ce4b04ce2eb3ed2de"},{"problem":21,"code":"(fn foo [arr n]\n  (if (> n 0)\n    (foo (rest arr) (dec n))\n    (first arr)))","user":"5527be83e4b0ffed3738f936"},{"code":"(fn my-nth [s n]\n  (if (= n 0) (first s) (my-nth (rest s) (dec n))))","problem":21,"user":"509a5ca8e4b0efbae1fbc0ab"},{"code":"(fn my-nth \n  ([col n i] \n    (if (= i n) \n      (first col)\n      (my-nth (rest col) n (+ i 1))))\n  ([col n] (my-nth col n 0)))","problem":21,"user":"4e73debb535d7a570dd295b7"},{"problem":21,"code":"(fn [custom-list x]\n  (if (=  x 0)\n    (first custom-list)\n  (recur (rest custom-list) (dec x))))","user":"5d8c8175e4b0915913b1d3e1"},{"problem":21,"code":"(fn [list n] ((zipmap (range (inc n)) list) n))","user":"59613e4ce4b066ee0a44b09b"},{"code":"(fn get-nth [x n]\n  (if (= n 0)\n    (first x)\n    (get-nth (rest x) (dec n))))","problem":21,"user":"501dd61de4b051153f3b5b7d"},{"problem":21,"code":"#(if (> %2 0) (recur (rest %1) (- %2 1)) (first %1))","user":"563a81a2e4b0bfe05bf117ff"},{"code":"(fn [seq, n] (.get seq n))","problem":21,"user":"5139ec21e4b067e25a345ebe"},{"problem":21,"code":"(fn [s idx]\n  (loop [ls s\n    lidx idx]\n    (if (= lidx 0) \n      (do\n        (println (str \"returning \" (first ls)))\n        (first ls)\n      )\n      (do \n        (println (str \"recurring \" (rest ls) (- idx 1)))\n        (recur (rest ls) (- lidx 1)))\n      )\n    ))","user":"5cc82af4e4b0ccb061962843"},{"problem":21,"code":"(fn [l, c] \n  (if (== 0 c)\n    (first l)\n    (recur (rest l) (dec c))))","user":"51d55795e4b01da06753aa8f"},{"code":"#(loop [xs % n %2]\n  (if (zero? n) (first xs)\n      (recur (rest xs) (dec n))))","problem":21,"user":"50996a38e4b0cae2931060b3"},{"problem":21,"code":"(fn [coll i]\n  (loop [col coll idx 0]\n    (if (seq col)\n      (if (= i idx)\n        (first col)\n        (recur (rest col) (inc idx))))))","user":"53342e21e4b019098a6f8b8c"},{"code":"(fn [c n]\n  (second (take-nth n c)))","problem":21,"user":"531a3914e4b08068f379ed88"},{"code":"#(last(take (inc %2) %1))","problem":21,"user":"4f00ac07535dcb61093f6a30"},{"code":"(fn ([lst n-th]\n        (loop [l lst n n-th]\n          (cond \n           (= n 0) (first l)\n           :else (recur (rest l) (dec n))))))","problem":21,"user":"51a2569ee4b00957e520db7d"},{"problem":21,"code":"(\n  fn nthn [seq, n] (\n               if (= n 0) (first seq) (nthn (rest seq) (- n 1))\n  )\n)","user":"5f70b752e4b02876ed9fd080"},{"problem":21,"code":"(fn\n  [coll n]\n  ((apply comp (cons first (repeat n rest))) coll))","user":"5401aefbe4b0df28a13c62c7"},{"problem":21,"code":"(fn getn [x y] (get (vec x) y))","user":"56b53fbce4b0982f16b37e30"},{"code":"#(if (zero? %2)\n(first %1)\n(recur (rest %1) (dec %2)))","problem":21,"user":"4ffbb1c7e4b0678c553fc3d3"},{"problem":21,"code":"(fn [s i] (cond (= i 0) (first s) :else (recur (rest s) (- i 1))))","user":"5cd26163e4b0ccb0619628fe"},{"problem":21,"code":";;#((zipmap (range (inc %2)) %1) %2)\n#(first (drop %2 %1))","user":"57407ab3e4b05c31a32c0854"},{"problem":21,"code":"(fn [col x] (get (vec col) x))","user":"5c8002cde4b0c8042a70ce09"},{"problem":21,"code":"(fn [lst n] ((into (hash-map) (map-indexed vector lst)) n))","user":"5ded402ae4b093ff71727585"},{"code":"(fn [a n]\n  (first (drop n a)))","problem":21,"user":"52c7f036e4b0c2d177d62126"},{"problem":21,"code":"#(loop [x 0 list %1]\n  (if (= %2 x)\n    (first list)\n    (recur (inc x) (drop 1 list))))","user":"5dea3c0de4b0986d99407f95"},{"code":"(fn f [s n] (if (= n 0) (first s) (f (rest s) (- n 1))))","problem":21,"user":"4e8b5cb8535d65386fec211b"},{"problem":21,"code":"(fn [seqpar nump]\n  (get (vec seqpar) nump))","user":"5795acb5e4b0e215f87e8486"},{"problem":21,"code":"(fn [a b]\n    (if (= b 0) (first a)\n        (recur (rest a) (dec b))))","user":"57d0e185e4b0bd073c202360"},{"problem":21,"code":"(fn nnth \n  ([p n] (nnth p n 0))\n  ([p n curr](if\n    (= n curr)\n    (first p)\n    (nnth (rest p) n (inc curr))\n  ))\n)","user":"547e478fe4b0c51c1f4d7303"},{"code":"(fn [x n]\n  (if (= n 0)\n    (first x)\n    (recur (rest x)(- n 1))\n    )\n  )","problem":21,"user":"4f4a34b2e4b0d56e7bb92c09"},{"code":"(fn nth-element [l n]\n  (if\n    (= n 0)\n    (first l)\n    (nth-element (rest l) (- n 1))\n    )\n  )","problem":21,"user":"5070c132e4b0e3170b5a8676"},{"code":"(fn [xs n]\n  (first\n    (reverse\n      (take (+ n 1) xs))))","problem":21,"user":"4fb2244ee4b081705acca288"},{"code":"(fn [list n] (if (zero? n) (first list) (recur (rest list) (dec n))))","problem":21,"user":"4f030bb4535dcb61093f6a4a"},{"problem":21,"code":"(fn [se, idx] (first (drop idx se)))","user":"5b12f5b6e4b0cc2b61a3be49"},{"code":"(fn r [q n] (\n               if \n               (= n 0)\n               (first q)\n               (r (rest q) (- n 1))\n             )\n )","problem":21,"user":"4f5100cfe4b03ad3f0c10d15"},{"code":"(fn find-n [collection n]\r\n    (loop [col collection c n]\r\n      (if (= c 0)\r\n        (first col)\r\n        (recur (rest col) (- c 1))\r\n      )\r\n    )\r\n)","problem":21,"user":"50845d3ee4b0fb8f40674bf3"},{"problem":21,"code":"(fn getNth [list element]\n  (if (= element 0)\n    (first list)\n    (recur (rest list) (dec element))))","user":"5f081f6de4b0cf489e8d7f5a"},{"code":"(fn [lst n] (last (take (+ n 1) lst)))","problem":21,"user":"51422945e4b0b50abeb46b2e"},{"code":"(fn [x idx]\n  (if (= idx 0)\n    (first x)\n    (recur (rest x) (dec idx))))","problem":21,"user":"5289714de4b0239c8a67ae64"},{"code":"(fn mynth [s n]\n  (if (= n 0)\n      (first s)\n      (mynth (rest s) (dec n))))","problem":21,"user":"4ff35e60e4b0678c553fc350"},{"problem":21,"code":"(fn foo [l n] (if (zero? n) (first l) (foo (rest l) (dec n))))","user":"53cd1a9be4b00fb29b2212dc"},{"code":"(fn [seq idx]\n    (loop [i 0\n           s seq]\n      (if (= i idx)\n        (first s)\n        (recur (inc i) (rest s)))))","problem":21,"user":"4ea3c875535d7eef308072c9"},{"code":"(fn [seq x]\n  (if (zero? x)\n    (first seq)\n    (recur (rest seq) (dec x))))","problem":21,"user":"4ee446b1535d10e5ff6f5376"},{"code":"(fn [l, n]\n  (if (= n 0) (first l) (recur (rest l) (- n 1)))\n)","problem":21,"user":"4e6e10d8535d5021c1a895fd"},{"problem":21,"code":"#(loop [s %1 i 0] (if (= i %2) (first s) (recur (rest s) (inc i))))","user":"57235dc4e4b0c5bde472c0e2"},{"problem":21,"code":"(fn nth_element\n  [coll n]\n  (loop [x n\n         cur_coll coll]\n    (if (zero? x)\n      (first cur_coll)\n      (recur (dec x) (rest cur_coll))\n    )\n  )\n)","user":"5b7163f8e4b047b03b203695"},{"code":"(fn foo [x n] (if (= n 0)\n              (first x)\n              (foo (rest x) (dec n))))","problem":21,"user":"5168d4ebe4b03f62cda68cdf"},{"code":"(fn [seq n](last (take (+ n 1) seq)))","problem":21,"user":"4ed9508f535d10e5ff6f5304"},{"code":"(fn down [v n] \n  (if (= n 0) \n    (first v)\n    (down (rest v) (- n 1)))\n)","problem":21,"user":"4fa68ed4e4b081705acca1bb"},{"code":"(fn my-nth [s n]\n  (if (= n 0)\n  (first s)\n  (my-nth (rest s) (dec n))))","problem":21,"user":"50aab057e4b056ee0193586b"},{"code":"(fn [x y] \n  (if (= y 0) \n    (first x) \n    (recur (rest x) (dec y))\n    )\n  )","problem":21,"user":"5338558de4b0e30313ee6c96"},{"problem":21,"code":"(fn [coll idx] (get (vec coll) idx))","user":"53f10bffe4b0742d9025b0d7"},{"problem":21,"code":"(fn my-nth [coll n]\n  (second\n   (first\n    (filter #(= (first %) n)\n            (map-indexed vector coll)))))","user":"53fd66a4e4b0de5c418485e3"},{"problem":21,"code":"(fn\n  [collection index]\n  (get (into [] collection) index))","user":"580beb40e4b0849f6811b713"},{"code":"(fn [l c] (if (= 0 c) (first l) (recur (rest l) (- c 1))))","problem":21,"user":"5293a603e4b0239c8a67af42"},{"code":"(fn nth2 [x n] (if (= n 0) (first x) (nth2 (rest x) (- n 1))))","problem":21,"user":"524b90fae4b09eba1c0223df"},{"problem":21,"code":"(fn f [lst n] ( if (= n 0)\n                (first lst)\n                (f (rest lst) (- n 1))))","user":"55a21f1ce4b0acc240e3151f"},{"code":"(fn [l n] (if (= n 0) (first l) (recur (rest l) (dec n))))","problem":21,"user":"504ed350e4b069badc5a33d1"},{"problem":21,"code":"(fn mynth [sq n]\n  (->> sq\n      (drop n)\n       first))","user":"5fee18f2e4b05ac5b16ea1d2"},{"code":"(fn [coll idx]\n  (last (take (+ idx 1) coll)))","problem":21,"user":"4fab336be4b081705acca216"},{"problem":21,"code":"(fn [coll ix]\n  (loop [i 0 loop-coll coll]\n    (if (= i ix)\n      (first loop-coll)\n      (recur (inc i) (rest loop-coll)))))","user":"55231800e4b0882d96d091ad"},{"code":"(fn [s n] (if (= 0 n) (first s) (recur (rest s) (dec n))))","problem":21,"user":"4e6a4950535d8ccf87e9febf"},{"problem":21,"code":"(fn mynth [s n] (first (drop n s)))","user":"54a30320e4b09f271ff37c62"},{"code":"(fn z [l n]\n  (if (zero? n) (first l) (z (rest l) (- n 1))))","problem":21,"user":"52bb27fee4b07a9af57922df"},{"code":"(fn [arg1 arg3]\n  (get  (into []  arg1) arg3))","problem":21,"user":"53862316e4b06839e8705f0e"},{"code":"(fn nelem [x n] (first (drop n x)))","problem":21,"user":"52375c4ce4b0fae3832e99d8"},{"problem":21,"code":"(fn [l n] (case n\n            0 (first l)\n            (recur (rest l) (- n 1))\n            ))","user":"57e6997ee4b0bfb2137f5af0"},{"problem":21,"code":"(fn [col n] \n  (first (drop n col)))","user":"567abc97e4b05957ce8c619d"},{"problem":21,"code":"(fn reccall\n ([x y pointer]\n  (if (= x pointer)\n    (first y)\n    (reccall x (rest y) (+ pointer 1) )\n    )\n )\n  ([y x]\n  (reccall x y 0 )\n  )\n)","user":"5550929ee4b00713264bd9aa"},{"problem":21,"code":"#(last (take (inc %2) %1))\n\n#_(fn [col n]\n  (last (take (inc n) col)))","user":"5db4bd07e4b010eb3c36cd2c"},{"problem":21,"code":"(fn nthEl [s, n]\n  (if (= n 0)\n    (first s)\n    (nthEl (rest s) (- n 1))))","user":"5638f61ce4b0bfe05bf117ed"},{"problem":21,"code":"(fn nElement\n  [s n]\n  (first (drop n s)))","user":"59dd3930e4b0a0ac046f2504"},{"code":"(fn[coll n] (first (drop n coll)))","problem":21,"user":"4ed4e991535d10e5ff6f52d1"},{"problem":21,"code":"(fn f [seq cnt] (if (= cnt 0) (first seq) (f (rest seq) (dec cnt))))","user":"57a22c85e4b0c3d858beb8f6"},{"problem":21,"code":"(fn [coll idx]\n   (if (<= idx 0)\n     (first coll)\n     (recur (rest coll) (dec idx))))","user":"50666699e4b03d366d7cb2b0"},{"code":"(fn nt [items i] (if (zero? i)\n                      (first items)\n                      (nt (rest items) (dec i))             \n              ))","problem":21,"user":"5368fedee4b0243289761e93"},{"code":"(fn [list n] \n  (let [v (vec list)]\n\t (get v n)))","problem":21,"user":"529ca7dae4b04e0c58e87b67"},{"problem":21,"code":"#(loop [x %\n         c 0]\n   (if (= c %2)\n     (first x)\n     (recur (rest x) (inc c))))","user":"5454bb07e4b0e397800069da"},{"problem":21,"code":"(comp first #(drop %2 %1) )","user":"5c45e703e4b0e06e1360a391"},{"problem":21,"code":"(fn recurnth [s x]  \n  (if (= 0 x) (first s) (recurnth (rest s) (- x 1)))\n)","user":"54b4f9cee4b05787c3b16397"},{"problem":21,"code":"(fn [inputList index] \n    (if (= 0 index) (first inputList) (recur (next inputList) (dec index))))","user":"55e5c453e4b050e68259b473"},{"problem":21,"code":"(fn lupe [lst cnt] (if (= cnt 0) (first lst) (lupe (rest lst) (dec cnt))))","user":"58a61231e4b01a0c0b232923"},{"problem":21,"code":"(fn foo [a i] (if (= i 0) (first a) (foo (rest a) (- i 1))))","user":"579d8947e4b05b1deef9ae17"},{"code":"#(if (list? %1)\r\n    (loop [\r\n        zeq %1\r\n        index 0\r\n        ]\r\n\r\n        (if (not= index %2)\r\n\r\n            (recur\r\n\r\n                (pop zeq)\r\n                (inc index)\r\n\r\n            )\r\n\r\n        (peek zeq)))\r\n    (get %1 %2)\r\n)","problem":21,"user":"4faa8479e4b081705acca1f7"},{"problem":21,"code":"(fn [l n] (loop [ll l, nn n]\n                  (if (= nn 0)\n                    (first ll)\n                    (recur (rest ll) (- nn 1)))\n                  ))","user":"54e84d1ee4b024c67c0cf822"},{"code":"#(get  (vec %1) %2)","problem":21,"user":"5112931be4b0350614f07a7a"},{"problem":21,"code":"(fn [lox n] (last (take (+ n 1) lox)))","user":"55e357dae4b050e68259b442"},{"code":"(fn [s n]\r\n  (cond (= n 0) (first s)\r\n        :else (recur (rest s) (- n 1))))","problem":21,"user":"4de26537535d08e6dec9fde9"},{"problem":21,"code":"(fn [x y]\n   (first (drop y x)))","user":"53b293d3e4b047364c04449b"},{"problem":21,"code":"(fn [coll index]\n\t(last (take (+ index 1) coll)))","user":"580eef63e4b0849f6811b75c"},{"problem":21,"code":"(fn [l k] (loop [ll l\n        kk k]\n   (if (> kk 0)\n     (recur (rest ll) (- kk 1))\n     (first ll))))","user":"55ec4d30e4b0121d4835fdc6"},{"problem":21,"code":"(fn [l i]\n  (if (= i 0)\n    (first l)\n    (recur (rest l) (- i 1))))","user":"514872f5e4b05514c84b7cbe"},{"code":"(fn [x y] ((vec x) y))","problem":21,"user":"4e89ff3d535d3e98b802328a"},{"code":"(fn [x n] \n  (first (drop n x)))","problem":21,"user":"5375d846e4b06839e8705e18"},{"problem":21,"code":"(fn [seq,n] (first (reverse (take (+ n 1) seq))))","user":"5492afc1e4b0b312c081ff45"},{"code":"(fn [x y]\n  (loop [s x i y]\n    (if (= i 0)\n      (first s)\n      (recur (next s) (dec i)))))","problem":21,"user":"518c5236e4b087e178201de0"},{"code":"(fn l [x y] (\n  if (= y 0)\n  (first x)\n  (l (rest x) (- y 1))\n))","problem":21,"user":"4f73054fe4b07046d9f4f03e"},{"problem":21,"code":"(fn [coll n]\n  (loop [coll coll\n         acc (list)]\n    (if (= (count acc) n)\n      (first coll)\n      (recur (rest coll) (conj acc (first coll))))))","user":"58ffac9de4b0438e51c2cffd"},{"code":"(fn newnth [v n]\n           (if (= n 0)\n               (first v)\n               (recur (rest v) (dec n))))","problem":21,"user":"4ea3863b535d7eef308072c7"},{"code":"(fn [coll cnt] (if (= 0 cnt)\n                   (first coll)\n                 (recur (rest coll) (dec cnt))))","problem":21,"user":"535eaa73e4b04ce2eb3ed2d4"},{"code":"(fn enth ([x y] (enth x y 0))\n  ([x y s]\n   \t  (cond (= y s) (first x)\n            :else (enth (rest x) y (inc s)))))","problem":21,"user":"5325cf91e4b09d4e7a9b54e8"},{"code":"(fn [list index]\n(first (filter #(= (.indexOf list %) index) list)))","problem":21,"user":"4fea1f9ee4b0547ebccb248b"},{"problem":21,"code":"(fn [s n] (if (= n 0)\n            (first s)\n            (recur (rest s) (- n 1))))","user":"5a962c09e4b0d174b936c765"},{"problem":21,"code":"(fn getNth [input n]\n    (if(> n 0)\n        (recur (rest input) (dec n))\n        (first input)))","user":"578e8192e4b0ebec4cfb7585"},{"problem":21,"code":"(fn my-nth [coll index] (if (= index 0) (first coll) (my-nth (rest coll) (dec index))))","user":"56e53d2fe4b02e7e935eb6bc"},{"code":"(fn [s n]\n  (if (zero? n)\n(first s)\n(recur (next s) (dec n))))","problem":21,"user":"4e6a0667535d8ccf87e9fe9e"},{"code":"(fn [c,n] (first(drop n c)))","problem":21,"user":"52382d91e4b0fae3832e99f0"},{"code":"(fn [l n]\n  (loop [h (first l) i 0 t (rest l)]\n    (if (= n i)\n      h\n      (recur (first t) (inc i) (rest t)))))","problem":21,"user":"50af3393e4b0a40c9cfb08d7"},{"code":"(fn enth [xs n] \n  (if (> n 0) \n    (enth (rest xs) (dec n)) \n    (first xs)))","problem":21,"user":"4ed6238d535d10e5ff6f52de"},{"code":"(fn [n a] (if (> (- (count n) 1) a) (recur (butlast n) a) (last n)))","problem":21,"user":"4e36e647535deb9a81d77f36"},{"problem":21,"code":"(fn [l index]\n  (loop [c 0 s l]\n    (if (= c index)\n      (first s)\n      (recur (inc c) (rest s)))))","user":"539043e7e4b0b51d73faae97"},{"problem":21,"code":"(fn [se x] (loop [s se n x]\n             (if (= 0 n)\n               (first s)\n               (recur (rest s) (dec n)))))","user":"557dbc9de4b05c286339e0cd"},{"code":"(fn [s n] (if (<= n 0) (first s) (recur (rest s) (dec n))))","problem":21,"user":"4ec75077535d6d7199dd36e0"},{"problem":21,"code":"(fn [ilst n]\n  (loop [lst ilst x n]\n    (if (= x 0)\n      (first lst)\n      (recur (rest lst) (dec x)))))","user":"5e619496e4b0fd0acd158690"},{"problem":21,"code":"(fn n[l i]\n  (if(= i 0) (first l)\n  (n (rest l) (- i 1))))","user":"5dc80f78e4b02f9375f4e1d5"},{"code":"(fn [l n]\n  (if (= n 0)\n      (first l)\n      (recur (rest l) (- n 1))))","problem":21,"user":"4ede8e1d535d10e5ff6f5339"},{"problem":21,"code":"(fn _nth [s,n]\n  (if (= n 0)\n    (first s)\n    (_nth (rest s) (dec n))))","user":"57008afae4b08d47c97781ca"},{"problem":21,"code":"#( get (vec %1 ) %2)","user":"5c0bb51be4b0bdcf453d1722"},{"problem":21,"code":"(fn nth-element [input-seq index] (let [counter 0]\n                                    (if (> index counter)\n                                      (do (inc counter) (nth-element (rest input-seq) (dec index)))\n                                      (first input-seq))\n                                    ))","user":"5c723f4be4b0fca0c16227a0"},{"problem":21,"code":"(fn f1 [v i]\n  \t(.get v i))","user":"5ebb4751e4b00a66d4a95262"},{"problem":21,"code":"(fn ! [%1 %2]\n  (if (= %2 0)\n    (first %1)\n    (! (rest %1) (- %2 1))))","user":"55933c7ae4b0c79f6e1db938"},{"code":"(fn [coll position] (loop [collection coll pos position] (if (= pos 0) (first collection) (recur (rest collection) (- pos 1)))))","problem":21,"user":"53a55de5e4b0b62ce3005739"},{"problem":21,"code":"#((vec %1) %2)\n\n;#(get (vec %1) %2)\n\n;#(first (drop %2 %1))\n\n;(fn nth-temp [coll n]\n;  (if (zero? n)\n;    (first coll)\n;    (recur (rest coll) (dec n))))","user":"572830e6e4b0c5bde472c152"},{"problem":21,"code":"(fn [list-arg n]\n  (if (= n 0)\n    (first list-arg)\n    (recur (rest list-arg) (- n 1))))","user":"571107b3e4b09c608db7043f"},{"problem":21,"code":"(fn [sek, n](first (drop n sek)))","user":"5587cd80e4b059ccff29b1e5"},{"problem":21,"code":"(fn [array index]\n  (first (reverse (take (+ index 1) array))))","user":"54f9b253e4b01ecee9d88840"},{"code":"(fn solve\n       [ seqx n ]\n       (if (< n (count seqx))\n         (if (> n 0)\n          (solve (next seqx) (dec n))\n          (first seqx)); if\n       ); if\n    ); solve","problem":21,"user":"4f601623e4b0defedf855fa3"},{"code":"(fn [s i] (last (take (+ 1 i) s)))","problem":21,"user":"4eb3fcba535d7eef30807359"},{"problem":21,"code":"(fn [items n]\n  (loop [i 0\n         items items]\n    (if (= i n)\n      (first items)\n      (recur (inc i) (next items)))))","user":"5515b138e4b055c2f668d4ed"},{"problem":21,"code":"(fn [s n]\n  (loop [s s nn 0]\n    (cond (empty? s) nil\n          (= n nn) (first s)\n          :default (recur (rest s) (inc nn)))))","user":"57aa053fe4b0b8559636fc61"},{"code":"(fn [l i] ((into [] l) i))","problem":21,"user":"5127aca5e4b08a1940e725b8"},{"problem":21,"code":"(fn hello [lst n] \n  (if (= 0 n)\n    (first lst)\n    (hello (rest lst) (- n 1))\n  )\n  )","user":"543b7456e4b032a45b86932f"},{"problem":21,"code":"#(get (into-array %1 ) %2)","user":"5822e082e4b04b46fc4b0fa9"},{"code":"#(if (= %2 0) (first %1)\n      (recur (rest %1) (dec %2)))","problem":21,"user":"4ff6354fe4b0678c553fc376"},{"code":"(fn x [l i]\n  (if (= i 0)\n    (first l)\n    (x (rest l) (- i 1))))","problem":21,"user":"523f407ae4b01c266ffa7fa3"},{"problem":21,"code":"(fn nth2 [lst index]\n  (if (= 0 index)\n    (first lst)\n    (nth2 (rest lst) (dec index))))","user":"5afb3426e4b0cc2b61a3bcf5"},{"code":"(fn rec [l n] (if (= n 0) (first l) (rec (rest l) (- n 1))))","problem":21,"user":"52d1e364e4b0d9f9285948e7"},{"problem":21,"code":"(fn\n  [coll idx]\n  (if (zero? idx)\n    (first coll)\n    (recur (rest coll) (dec idx))))","user":"56e22366e4b03a7c14b85a30"},{"code":"(fn [col n]\n  (loop [cur col index 0]\n    (if (> n index)\n      (recur (rest cur) (+ 1 index))\n      (first cur))))","problem":21,"user":"4e7e8485535db169f9c79716"},{"code":";(fn\n;  [se n]\n;    (if (zero? n)\n;      (first se)\n;      (recur (rest se) (dec n))))\n    \n\n(fn\n  [se x]\n (loop [s se\n        i x]\n    (if (zero? i)\n      (first s)\n      (recur (rest s) (dec i)))))","problem":21,"user":"52d469c8e4b09f7907dd1330"},{"code":"(fn [l p](last(take (inc p) l)))","problem":21,"user":"528e471fe4b0239c8a67aed9"},{"problem":21,"code":"#(loop [ len %2 i 0 arr %1]\n        (if (= i len)\n            (first arr)\n            (do (recur len (+ 1 i) (pop (reverse (reverse arr)))))\n        )\n    )","user":"53c39a9ae4b00fb29b22127d"},{"code":"(fn lol [xs n]\n  (cond (empty? xs) nil\n        (zero? n) (first xs)\n        :else (lol (rest xs) (dec n))))","problem":21,"user":"4fb04ee2e4b081705acca264"},{"problem":21,"code":"(fn eneth [x n]\n    (if\n        (= 0 n) \n        (first x)\n        (eneth (rest x) (- n 1))   \n    )                \n)","user":"57493f35e4b009280f9f2b97"},{"problem":21,"code":"(fn [aList n] (first (drop n aList)))","user":"5d59c3d0e4b02ba5928a682e"},{"problem":21,"code":"(fn l [xs n]\n  (if (= 0 n)\n    (first xs)\n    (l (rest xs) (- n 1))))","user":"59f9b9fce4b0ca45a743a347"},{"problem":21,"code":"(fn nfn [l, x] (if (> x 0) (nfn (rest l) (dec x)) (first l) ))","user":"56cb3c71e4b0ea9b8538f729"},{"problem":21,"code":"(fn [l x] (last (first (partition (+ x 1) l))))","user":"59b1a1b2e4b0e1f4e384c8eb"},{"problem":21,"code":"(fn [x n]\n   (last (drop-last (- (count x) (+ n 1)) x)))","user":"5d8a832ce4b0915913b1d3ca"},{"problem":21,"code":"(fn [coll n] (->> coll\n                  (take (inc n))\n                  (last)))","user":"5d9c9446e4b0eb781811cdae"},{"problem":21,"code":"(fn foo \n  [l n]\n  (if (zero? n)\n    (first l)\n    (foo (next l) (dec n))))","user":"5426bd40e4b01498b1a71b1c"},{"problem":21,"code":"(fn aaa [xs n]\n  (if (zero? n)\n    (first xs)\n    (aaa (rest xs) (dec n))))","user":"5fad65bfe4b08cb800c85af1"},{"code":"(fn foo [lst i] (if (= 0 i) (first lst) (foo (rest lst) (- i 1))))","problem":21,"user":"50ae5659e4b0a40c9cfb08d2"},{"code":"(fn [xs n]\n  (loop [ys xs m n]\n    (if (= m 0)\n      (first ys)\n      (recur (rest ys) (- m 1)))))","problem":21,"user":"51715f0ce4b0d70c8bbbf23d"},{"problem":21,"code":"#(loop [remaining-seq %1\n       remaining-pos %2]\n  (if (= remaining-pos 0)\n    (first remaining-seq)\n    (recur (rest remaining-seq) (dec remaining-pos))\n    )\n  )","user":"5e0e836fe4b099d064962fa8"},{"problem":21,"code":"(fn [a-seq idx]\n  (loop [sx a-seq\n         i  0]\n    (if (== i idx)\n      \t(first sx)\n      \t(recur (rest sx) (inc i)))))","user":"56795625e4b05957ce8c6186"},{"problem":21,"code":"(fn [s n] (loop [s s,\n                 i 0]\n            (if (= i n)\n              (first s)\n              (recur (next s) (+ i 1)))))","user":"5ece3d25e4b016b56eae059b"},{"problem":21,"code":"(fn [l ind] (get (vec l) ind))","user":"5a6a2515e4b0512ff01cda21"},{"problem":21,"code":"(fn [seq, n]\n  (loop [lst seq, cnt 0] \n    (if (= cnt n)\n  \t(first lst)\n    (recur (rest lst) (inc cnt)))))","user":"555c78abe4b0b056612e224f"},{"problem":21,"code":"(fn [thelist idx]\n  (loop [mylist thelist counter idx]\n    (if (= 0 counter) (first mylist)\n      (recur (rest mylist) (- counter 1 ))\n    )\n  )\n)","user":"562d6385e4b0a45d2ff8301b"},{"problem":21,"code":"#((zipmap (range 0 (inc (count %1))) %1)%2)","user":"57bbc9bde4b05aa3c4741c31"},{"code":"(fn [x n]\n    (loop [seq x cnt 0]\n      (cond\n       (empty? x) nil\n       (= cnt n) (first seq)\n       true (recur (drop 1 seq) (inc cnt)))))","problem":21,"user":"538c4e52e4b0b51d73faae59"},{"code":"(fn [x, y] (first (drop y, x)))","problem":21,"user":"4f066916535dcb61093f6c10"},{"problem":21,"code":"(fn [c x] (last (take (+ x 1) c)))","user":"57c7a8b5e4b05aa3c4741d09"},{"code":"(fn [coll n]\r\n  (loop [c coll idx 0]\r\n    (if (= idx n)\r\n        (first c)\r\n        (recur (rest c) (inc idx)))))","problem":21,"user":"4f378631e4b0e243712b1ed3"},{"code":"(fn [l n] (get (into [] l)  n))","problem":21,"user":"5262e9a2e4b03e8d9a4a709e"},{"problem":21,"code":"(fn [coll index]\n  (first (first (filter #(= index (second %)) (map #(list %1 %2) coll (range (count coll)))))))","user":"5abbb524e4b073f1774426da"},{"code":"(fn [s n]\n  (loop [i 0, r s]\n    (if (= i n)\n      (first r)\n      (recur (inc i) (next r)))))","problem":21,"user":"4e7dcdb5535db169f9c796e9"},{"problem":21,"code":"#((comp first last split-at) %2 %1)","user":"53ff7d15e4b0de5c41848602"},{"code":"(fn [coll n] \n  \t(if (> n 0)\n      (recur (rest coll) (dec n))\n      (first coll)\n      )\n  )","problem":21,"user":"51aab611e4b04e3dc0c27b2d"},{"problem":21,"code":"(fn nElement\n  [lst pos]\n  (if (< pos 1)\n    (first lst)\n    (nElement (rest lst) (dec pos))))","user":"5e9636fee4b0fbed045a3816"},{"problem":21,"code":"(fn [set x] (last (take (inc x) set)))","user":"5e30533ee4b05b4b0151620f"},{"code":"(fn [sq n]\n  (if (zero? n)\n    (first sq)\n    (recur (rest sq) (dec n))))","problem":21,"user":"50f1dedbe4b0897c4366dcd8"},{"code":"(fn get-nth [x i]\n  ((vec x) i))","problem":21,"user":"515bbcd9e4b0388ca8ca1521"},{"code":"(fn diego\n  ([x n]\n   (diego x n 0))\n  \n  ([x n i]\n   (if (= n i)\n     (first x)\n     (diego (rest x) n (+ 1 i)))))","problem":21,"user":"5212a062e4b0d32679a50641"},{"problem":21,"code":"(fn [coll index]\n  (loop [remaining coll\n         current-index 0]\n    (if (= current-index index)\n      (first remaining)\n      (recur (rest remaining) (inc current-index)))))","user":"55bf461be4b01b9910ae2a11"},{"problem":21,"code":"(fn [a-seq n]\n  ((vec a-seq) n))","user":"53fd0a22e4b0de5c418485e1"},{"problem":21,"code":"(fn [col n]\n        (loop [collection col count n]\n          (if (= count 0)\n          (first collection)\n          (recur (rest collection) (- count 1)))))","user":"5bfc82cfe4b0bdcf453d15f0"},{"problem":21,"code":"(fn nth' [x y]\n  (if (= y 0)\n    (first x)\n    (nth' (rest x) (- y 1))))","user":"56d36e7ae4b0ea9b8538f7ad"},{"code":"(fn[x y] (first (nthnext x y)))","problem":21,"user":"4f8843aae4b033992c121c61"},{"problem":21,"code":"(fn enth ([elems n] (enth elems n 0))\n  \t\t([elems n i] (if (= i n) (first elems) (enth (rest elems) n (inc i)))))","user":"5d8a3b3ee4b0915913b1d3c8"},{"problem":21,"code":"(fn nn [items n]\n   (if (= n 0)\n     (first items)\n     (nn (rest items) (dec n))\n   )\n )","user":"5a424954e4b0447ef91cc5f0"},{"problem":21,"code":"(fn [lst index]\n  (if (= index 0)\n    (first lst)\n    (recur (rest lst) (- index 1))))","user":"51bc3e7fe4b0fe3ecfb46455"},{"problem":21,"code":"(fn\n [coll i]\n (let [mymap (zipmap (range) coll)]\n  (get mymap i)))","user":"57eaf869e4b0bfb2137f5b56"},{"problem":21,"code":"(fn [ss idx] (get (vec ss) idx))","user":"555e10fee4b0a2eb076a39b4"},{"problem":21,"code":"(fn [s n] (first (last (split-at n s))))","user":"53a7bc10e4b047364c044420"},{"code":"(fn mynth [col pos]\n  \t(first (drop pos col))\n    ;(if (> pos 0)\n    ;  (recur (rest col) (dec pos))\n    ;  (first col)\n    ;  )\n  )","problem":21,"user":"5255324be4b0541d1855b9d0"},{"problem":21,"code":"(fn get-n[xs n] (get (vec xs) n ) )","user":"6096e2d4e4b00e9e6653c3f1"},{"code":"(comp first #(drop %2 %1))","problem":21,"user":"4f426a7ae4b0d7d3c9f3fcff"},{"problem":21,"code":"(fn [f s]\n  (loop [ctr s\n         se f]\n  (if (= ctr 0)\n    (first se)\n    (recur (dec ctr) (next se)))))","user":"5594523be4b0c79f6e1db951"},{"problem":21,"code":"#(loop [l %1 counter %2]\n\t(if (zero? counter)\n\t\t(first l)\n\t\t(recur (rest l) (dec counter))\n\t))","user":"542d95f0e4b0dad94371f2b9"},{"code":"(fn [list element] (if (zero? element) (first list)(recur (rest list)(dec element))))","problem":21,"user":"4ecddbc6535d23f03622770a"},{"problem":21,"code":"(fn xth [coll n]\n  (if (zero? n)\n    (first coll)\n    (xth (next coll) (dec n))))","user":"598601f9e4b021a7a535fe79"},{"problem":21,"code":"(fn[x y] (aget (into-array x) y))","user":"54a11042e4b09f271ff37c49"},{"problem":21,"code":"(fn my-nth [coll n] \n  (if (= n 0) \n    (first coll)\n    (my-nth (rest coll) (- n 1))))","user":"55c3ebe7e4b0e31453f6498e"},{"problem":21,"code":"(fn [data i] (first (drop i data)))","user":"55c461d3e4b0e31453f64999"},{"code":"(fn f [array p]\n  (if (= p 0)\n    (first array)\n    (f (rest array) (- p 1))\n  )\n)","problem":21,"user":"5272d7b4e4b03e8d9a4a7456"},{"problem":21,"code":"#(loop [i 0 to-find %2 lst %1] (if (= i to-find) (first lst) (recur (inc i) to-find (rest lst))))","user":"5f727cb0e4b02876ed9fd08e"},{"problem":21,"code":"(fn( [s n] \n     (if (= n 0)\n       (first s)\n       (recur (rest s) (- n 1)))))","user":"54c9571ee4b045293a27f66b"},{"code":"(fn foo\n  ([items idx]\n    (if (> idx 0)\n      (foo (rest items) (- idx 1))\n      (first items)\n    )\n  )\n)","problem":21,"user":"4f611e0ee4b0defedf855fb8"},{"problem":21,"code":"#(->(+ %2 1)\n    (take %1)\n    (reverse)\n    (first))","user":"5e502842e4b027a2e10ac0c0"},{"code":"#((vec %) %2)","problem":21,"user":"4de77a0a535d08e6dec9fdfa"},{"code":"(fn nth-elem [lst n] (if (= n 0) (first lst) (nth-elem (rest lst) (dec n))))","problem":21,"user":"4f1684c7535d64f60314644b"},{"problem":21,"code":"(fn [myseq index]\n  ((vec myseq) index))","user":"5b7ef8e6e4b047b03b203765"},{"problem":21,"code":"(fn [myseq idx] (first (subvec (vec myseq) idx)))","user":"5ac53be2e4b0e27600da7740"},{"problem":21,"code":"(fn seqth\n  ([seq index] (seqth seq index 0))\n  ([seq index cnt] \n   (println cnt)\n   (if (= cnt index)\n     (first seq) \n     (seqth (rest seq) index (inc cnt))\n     )\n   )\n)","user":"5e309d65e4b05b4b01516217"},{"problem":21,"code":"(fn nth-element\n  [sequence index]\n  (.get sequence index))","user":"5f1b6e88e4b0f565ad998259"},{"problem":21,"code":"(fn self [col n] (if (> n 0) (self (rest col) (dec n)) (first col)))","user":"5533527de4b09218d5f44f8b"},{"problem":21,"code":"(fn  [l e] \n  (loop [w l k 0] \n    (if (= k e)\n       (first w)\n       (recur (rest w)(inc k))\n     )\n    )\n)","user":"5a44e514e4b0447ef91cc614"},{"code":"#(loop [ls %1 n %2]\n   (if (= n 0) (first ls) (recur (rest ls) (dec n))))","problem":21,"user":"52b405e1e4b0c58976d9ad15"},{"problem":21,"code":"(fn [x b] (get (vec x) b))","user":"58b849bee4b0ebc645576d93"},{"problem":21,"code":"(fn [a, b] (first (drop b a)))","user":"5a5ad949e4b05d388ecb6cb4"},{"code":"(fn nth-el [xs n] (if (= 0 n)\n                    (first xs)\n                    (nth-el (rest xs) (- n 1))\n                   ))","problem":21,"user":"51ad20eee4b09397d510977e"},{"problem":21,"code":"(fn my-nth [s n]\n  (if (= n 0)\n    (first s)\n    (my-nth (rest s) (- n 1))\n  ))","user":"60ad8af3e4b00e9e6653c490"},{"problem":21,"code":"(fn [l num]\n  (let [target (first l)]\n    (if (= 0 num)\n      target\n      (recur (rest l) (- num 1)))))","user":"58628c9be4b0f14aab7c880c"},{"code":"(fn [s offset] \n  (first (drop offset s)))","problem":21,"user":"4ff31e13e4b0678c553fc346"},{"problem":21,"code":"(fn[s n]((vec s) n))","user":"5b29c33ee4b063e2438bcc64"},{"problem":21,"code":"#(->> %1 (take (+ %2 1)) (last))","user":"54c4c96ae4b045293a27f61f"},{"problem":21,"code":"(fn [items idx]\n  (if (zero? idx)\n    (first items)\n    (recur (rest items) (- idx 1))))","user":"57084634e4b0b0fb43fd069b"},{"problem":21,"code":"(fn [l x] (get (into [] l) x))","user":"5ef78fdae4b09b61f08553c4"},{"code":"(fn [s n & counter]\r\n (let [c (or counter 0)]\r\n(if \r\n    (== n c) (first s)\r\n(recur (rest s) n \r\n(inc c)))))","problem":21,"user":"508a6775e4b016a2107004a9"},{"problem":21,"code":"(fn [x y] \n  (if (zero? y) (first x)\n    (recur (rest x) (- y 1))))","user":"54b567eee4b05787c3b163a2"},{"problem":21,"code":"(fn [l n] \n  (->> l\n   \t(drop n)\n    (first)\n  )\n)","user":"59d02bfbe4b0ef0a1e9b5b7b"},{"problem":21,"code":"(fn f [coll idx]\n  (if (= 0 idx)\n    (first coll)\n    (f (rest coll) (- idx 1))))","user":"5cc80598e4b0ccb061962840"},{"code":"#(loop [r (seq %1) idx 0] (if (= idx %2) (first r) (recur (rest r) (inc idx))))","problem":21,"user":"51f805b0e4b06ff1c25c52e2"},{"problem":21,"code":"(fn my-nth [coll n]\n  (if (== 0 n)\n    (first coll)\n    (my-nth (rest coll) (- n 1))))","user":"54e3e09fe4b024c67c0cf7e4"},{"code":"(fn my_nth [l n] (\n  if (= n 0) (first l) (my_nth (rest l) (- n 1))           \n))","problem":21,"user":"53979a87e4b0b51d73faaef0"},{"problem":21,"code":"#(loop [x %1 r 0] (if (= r %2) (first x) (recur (rest x) (inc r))))","user":"58e6b788e4b056aecfd47cbd"},{"problem":21,"code":"(fn nth-element\n  [xs n]\n  (first (drop n xs)))","user":"5ea0d417e4b00a66d4a9518a"},{"code":"(fn moo [s n]\n  (cond\n    (= n 0) (first s)\n    :else (moo (rest s) (- n 1))))","problem":21,"user":"504e48ace4b0f6ff3350c498"},{"code":"(fn[x,y] (first (reverse (take (+ y 1) x))))","problem":21,"user":"4eef3afe535d305ff5cb7f1d"},{"problem":21,"code":"(fn [l n]\n  (if (seq l)\n    (if (= n 0)\n      (first l)\n      (recur (rest l) (- n 1)))))","user":"55cb7fe2e4b0e31453f64a04"},{"code":"(fn [lst indx] (if (zero? indx) (first lst) (recur (rest lst) (dec indx))))","problem":21,"user":"4e14aebd535d04ed9115e7de"},{"problem":21,"code":"(fn [ls num]       \n           (loop [n num,res ls]\n             (if(zero? n)\n               (first res)\n               (recur (dec n) (rest res))\n               )))","user":"56f4e181e4b046a417f92065"},{"problem":21,"code":"(fn [coll i] (second (first (filter (fn [x] (= i (first x))) (map-indexed list coll)))))","user":"6045582fe4b02d28681c77b6"},{"problem":21,"code":"(fn\n  [input n]\n  (loop [subseeq input i 0]\n     (if (>= i n)\n       (first subseeq)\n       (recur (rest subseeq) (inc i))))\n)","user":"53b9a779e4b047364c0444eb"},{"problem":21,"code":"(fn ix [xs n] (if (= n 0) (first xs) (recur (rest xs) (- n 1))))","user":"54c641f8e4b045293a27f628"},{"problem":21,"code":"(fn [lst n] \n  (->> lst (drop n) (first))\n  )","user":"53bd6fcfe4b0d9a98559a6d0"},{"problem":21,"code":"(fn [xs n] (first (drop n xs\n                       )))","user":"58f04569e4b056aecfd47de4"},{"problem":21,"code":"(fn [ls n]\n  (if (= n 0) (first ls) (recur (rest ls) (- n 1))))","user":"59b05f0ee4b0e1f4e384c8cc"},{"problem":21,"code":"(fn [seq index] \n  (if (> index (count seq))\n    nil)\n  (loop [n 0\n         seq seq]\n    (cond (zero? (count seq)) nil\n          (= n index) (first seq)\n          :else (recur (inc n) (rest seq)))))","user":"56002c2de4b04bb52996e161"},{"problem":21,"code":"(fn [nums n] (loop [xs nums i 0] (if (= i n) (first xs) (recur (rest xs) (inc i)))))","user":"5315ba94e4b08068f379ed34"},{"code":"(fn f [l n]\n  (if (= n 0)\n    (first l)\n    (f (rest l) (dec n))))","problem":21,"user":"50784ae5e4b0fc74642bff68"},{"problem":21,"code":"(fn nthElem [xs n] \n  (if(= n 0)\n    (first xs)\n    (nthElem (rest xs) (- n 1))\n   )\n)","user":"56c76162e4b0ed865f9758bb"},{"code":"(fn [list n]\n  (first (drop n list)))","problem":21,"user":"4fb804f7e4b081705acca2d6"},{"code":"(fn f [mylist index] ( cond  (pos? index) (f (rest mylist) (- index 1)) :else (first mylist)))","problem":21,"user":"510e3640e4b07438aa32145a"},{"problem":21,"code":"(fn [coll pos]\n  (get (vec coll) pos))","user":"5e34318be4b0650de70e2b15"},{"code":"(fn [c i] (if (= i 0) (first c) (recur (rest c) (dec\ni))))","problem":21,"user":"4ea9b80c535d7eef30807306"},{"code":"; recursive solution\n;(fn [coll idx]\n;  (loop [s (seq coll), currentidx idx]\n;    (if (> currentidx 0)\n;      (recur (next s) (dec currentidx))\n;      (first s))))\n\n; convert to a vector and get\n#(get (vec %1) %2)","problem":21,"user":"51d46747e4b013d740b70de3"},{"problem":21,"code":"(fn my-nth [coll index] (if (= index 0)\n                          (first coll)\n                          (my-nth (rest coll) (- index 1))))","user":"54e4e14ce4b024c67c0cf7f1"},{"code":"(fn f [lst n]\n  (if (= n 0)\n      (first lst)\n      (f (rest lst) (- n 1))))","problem":21,"user":"4e68dbd5535d8ccf87e9fe8f"},{"problem":21,"code":"(fn [coll idx] (->> coll (drop idx) first))","user":"530ec239e4b08068f379ecc1"},{"code":"(fn [seq pos] (last (take (+ 1 pos) seq)))","problem":21,"user":"529f82b3e4b04e0c58e87baf"},{"code":"(fn [xs n] \n  (if (= n 0) (first xs)\n              (recur (rest xs) (dec n))))","problem":21,"user":"514767ace4b0541f4bec05cb"},{"code":"(fn [seqn n]\n  (first (drop n seqn)))","problem":21,"user":"53889587e4b0640c7a9a589e"},{"problem":21,"code":"(fn [numbers el]\n  (first (drop el numbers)))","user":"60b62f2fe4b0e0fa5f1b4246"},{"code":"(fn [l i]\n  (last (take (+ i 1) l))\n  )","problem":21,"user":"51baa1cae4b0fe3ecfb46438"},{"code":"(fn [s, n] (last (take (+ 1 n) s)))","problem":21,"user":"4f030d65535dcb61093f6a4e"},{"code":"(fn ith [c i] (if (= 0 i) (first c) (ith (rest c) (- i 1))))","problem":21,"user":"4f5eda39e4b0030a34fb2b56"},{"problem":21,"code":"#(if (not= %2 0) (recur (next %1) (- %2 1)) (first %1))","user":"58edaa3be4b056aecfd47d89"},{"problem":21,"code":"(fn [x y] (loop [lis x cnt y] (if (= cnt 0) (first lis) (recur (rest lis) (dec cnt)))))","user":"52457931e4b08ba239308107"},{"problem":21,"code":"(fn [col n] (second (take-nth n col)))","user":"56a28726e4b0542e1f8d14c2"},{"code":"(fn [x y] (\n         (comp peek vec)\n           (take (inc y) x)\n           ))","problem":21,"user":"50ed5d1be4b06330c1f87c37"},{"code":"(fn [l i] (get (vec l) i))","problem":21,"user":"5132961ee4b039bac947cbb9"},{"problem":21,"code":"(fn f [list n]\n  (if (= n 0)\n    (first list)\n    (f (rest list) (dec n))))","user":"589f37e0e4b02bd94d917e79"},{"code":"(fn mynth[s n]\n  (cond\n    (> n 0) (mynth (rest s) (- n 1))\n    :else (first s)))","problem":21,"user":"52713288e4b03e8d9a4a73e7"},{"problem":21,"code":"(fn nt [l n](if (= 0 n)\n    (first l)\n    (nt (rest l) (- n 1))\n  )\n)","user":"57a89ae9e4b0a96607956221"},{"problem":21,"code":"(fn [x z] (first (filter (fn [y] (= (.indexOf x y) z)) x)))","user":"60d091f3e4b02520c611a6d7"},{"problem":21,"code":"(fn n-th \n  [seq n]\n  (loop [i n tmp-seq seq]\n      (if (zero? i)\n        (first tmp-seq)\n        (recur (dec i) (rest tmp-seq)))))","user":"5ae9d09de4b0cc2b61a3bbda"},{"problem":21,"code":"(fn rec [seq n]\n  (if (= n 0)\n    (first seq)\n    (rec (rest seq) (dec n))))","user":"5ec8293ee4b08d0ec38692e4"},{"problem":21,"code":"(fn [xs n]\n  (if (zero? n)\n    (first xs)\n    (recur (rest xs)\n           (dec n)\n           )))","user":"56dc09f8e4b0ea9b8538f815"},{"problem":21,"code":"(fn [xs, n]\n  \t(loop [xs xs\n          i 0]\n  \t\t(if (= i n)\n          \t(first xs)\n          \t(recur (rest xs) (inc i)))))","user":"5821dbb9e4b04b46fc4b0f86"},{"problem":21,"code":"(fn nth-element [l n]\n  (if (= n 0) \n    (first l) \n    (nth-element (rest l) (- n 1))\n  )\n)","user":"5adcefa5e4b0837691e92c07"},{"code":"(fn n-th\n  [col n]\n  ((into [] col) n))","problem":21,"user":"4ead1bb3535d7eef3080731d"},{"problem":21,"code":"(fn [ Coll n ] (first (drop n Coll)))","user":"5e83696ce4b09a7a73c8bbb7"},{"problem":21,"code":"(fn [lst i]\n  (first (second (split-at i lst))))","user":"55048182e4b086ebe8a79c7c"},{"problem":21,"code":"(fn nthNumber [x y]\n  (loop [i y\n         listOfItems x]\n    (if (> i 0)\n      (recur (dec i) (rest listOfItems))\n      (first listOfItems))))","user":"5d741ebce4b02e6b30c93517"},{"problem":21,"code":"(fn [coll index]\n  (loop [c coll i 0]\n    (if (empty? c) nil\n      (if (= i index)\n        (first c)\n        (recur (rest c) (inc i))))))","user":"55f6e7ece4b06e875b46ce9e"},{"problem":21,"code":"(fn my-nth4\n  [collection index]\n  (first (drop index collection))\n  )","user":"5e9d99f9e4b0157ca9664806"},{"code":"(fn [s n] (->> s (take (+ n 1)) reverse first))","problem":21,"user":"4e7e032b535db169f9c796fc"},{"code":"(fn [list idx] (last (take (+ 1 idx) list)))","problem":21,"user":"504e2011e4b0f6ff3350c469"},{"problem":21,"code":"(fn mth [s n] (if (= 0 n) (first s) (mth (rest s) (- n 1))))","user":"5778694fe4b0979f89651660"},{"code":"(fn myn [col n]\n  (if (zero? n) (first col) (myn (rest col) (- n 1))))","problem":21,"user":"52dcd378e4b09f7907dd13d6"},{"problem":21,"code":"(fn nth'\n  [xs x]\n  (first (reverse (take (+ x 1) xs))))","user":"52f3a2afe4b05e3f0be25f13"},{"code":"(fn [lst p] (first (nthnext lst p)))","problem":21,"user":"527a5b84e4b03e8d9a4a7558"},{"problem":21,"code":"#(loop [i 0 j %1]\n  (if (= i %2)\n    (first j)\n    (recur (inc i) (rest j))\n      )\n  )","user":"550a3fa4e4b06e50f9beb12d"},{"code":"(fn [coll idx]\n  (if (= idx 0)\n\t\t(first coll)\n\t\t(recur (rest coll) (- idx 1))))","problem":21,"user":"4e40d306535dc968683fc49b"},{"problem":21,"code":"(fn [colecao indice]\n  (let [vetor (vec colecao)]\n    (first (subvec vetor indice))))","user":"5d797deee4b02e6b30c93541"},{"problem":21,"code":"(fn numth [lis, number] (if (= number 0) (first lis) (numth (rest lis) (- number 1))))","user":"568f2059e4b0dcc4269f40df"},{"code":"(fn my-last [coll x] (if (= 0 x)\n                        (first coll)\n                        (my-last (rest coll) (- x 1))))","problem":21,"user":"5296aa9be4b02ebb4ef75034"},{"code":"(fn [col n] \n  (if (zero? n)\n    (first col)\n    (recur (rest col)(- n 1))\n  ))","problem":21,"user":"5390110de4b0b51d73faae94"},{"problem":21,"code":"(fn [seq num] (first(drop num seq)))","user":"56eeed2ee4b04a395b9a0456"},{"problem":21,"code":"#(first (drop %2 % ))","user":"5367bc60e4b0243289761e81"},{"problem":21,"code":"(fn [l n] (loop [remaining l\n                 c 0]\n            (if (= c n)\n              (first remaining)\n              (recur (rest remaining) (inc c)))))","user":"55bfd68ae4b01b9910ae2a1e"},{"code":"(fn [s n]\n  (cond\n    (zero? n) (first s)\n    :else\n    (recur (rest s) (dec n))))","problem":21,"user":"5080a697e4b01a93d3f38e49"},{"problem":21,"code":"(fn [input-list n]\n  (loop [cnt n, tmp-list input-list]\n    (if (zero? cnt)\n      (first tmp-list)\n      (recur (dec cnt) (rest tmp-list)))))","user":"594bc912e4b07ddc2dafae3e"},{"code":"(fn nth-element [li in]\n  (cond (= in 0) (first li)\n        :else (nth-element (rest li) (- in 1))))","problem":21,"user":"5313a2bfe4b08068f379ed0b"},{"problem":21,"code":"(fn [v i] (get (vec v) i))","user":"558bdcefe4b0277789237633"},{"code":"(fn my-nth [xs n]\n  (if (zero? n)\n    (first xs)\n    (my-nth (rest xs) (dec n))))","problem":21,"user":"51b91b08e4b0e871ca4958f8"},{"code":"(fn [s n]\n  (loop [x 0\n         se s]\n    (if (< x n)\n      (recur (+ x 1) (rest se))\n      (first se))))","problem":21,"user":"4ffa52fbe4b0678c553fc3bb"},{"code":"(fn [l n] (loop [xs l N n] (if (> N 0) (recur (rest xs) (dec N)) (first xs))))","problem":21,"user":"5245f167e4b09dbe66b5617e"},{"code":"(fn [stuff x] \n  (if (= x 0) \n    (first stuff) \n    (recur (rest stuff) (- x 1))))","problem":21,"user":"510ce3cbe4b078ea71921127"},{"problem":21,"code":"#(if (zero? %2)\n   (first %1)\n   (recur (rest %1) (dec %2))\n  )","user":"54903056e4b0b312c081ff2e"},{"problem":21,"code":"(fn [col index] (last (take (+ 1 index) col)))","user":"5e68994ee4b04a83ad7cd266"},{"problem":21,"code":"(fn mynth [x i] (if (= i 0) (first x) (mynth (rest x) (dec i))))","user":"5df8e717e4b0a607a9a45cae"},{"problem":21,"code":"#(loop [in %1\n        p 0]\n   (if (= p %2)\n     (first in)\n     (recur (rest in)\n            (+ p 1))))","user":"57c33eeae4b05aa3c4741cbc"},{"problem":21,"code":"(fn nieme [lst index] (if (= index 0) (first lst) (nieme (rest lst) (- index 1))))","user":"5a6e145ee4b0512ff01cda68"},{"problem":21,"code":"(fn [col x]\n  (if (= x 0) (first col)\n    (recur (rest col) (- x 1))))","user":"5c678b6ee4b0fca0c16226bc"},{"code":"(fn [s n]\n  (peek (vec (take (+ n 1) s))))","problem":21,"user":"524d9297e4b0a16e35cf6def"},{"problem":21,"code":"(fn nel [s n] (first (drop n s)))","user":"5a487d9ce4b05d388ecb6b67"},{"problem":21,"code":"(fn my-nth [seq n]\n    (if (zero? n)\n      (first seq)\n      (my-nth (next seq) (dec n))))","user":"52b2f9cae4b0c58976d9acfb"},{"code":"(fn my-nth [values index]\n  (first\n   (reverse\n    (take (+ index 1) values))))","problem":21,"user":"50fe0e62e4b033b9c38d78d8"},{"problem":21,"code":"(fn mynth [s n] (if (= n 0)(first s) (mynth (rest s) (- n 1))))","user":"560368a6e4b04bb52996e1bb"},{"code":"(fn [lst n] (first(take-last (- (count lst) n) lst)))","problem":21,"user":"4f299ad8e4b0d6649770a02c"},{"code":"(fn [x n](if(> n 0)\n               (recur (next x) (- n 1))\n                (first x)))","problem":21,"user":"4eb2f89a535d7eef30807353"},{"problem":21,"code":"(fn [s n] (if (<= n 0)\n            (first s)\n            (recur (rest s) (dec n))))","user":"53ae3e01e4b047364c044474"},{"code":"#(loop [alist %1 pos %2]\n    (if (zero? pos)\n      (first alist)\n    (recur (rest alist) (dec pos))))","problem":21,"user":"4ea85846535d7eef308072f9"},{"problem":21,"code":"#(-> (split-at %2 %1) (last) (first))","user":"5b118b7be4b0cc2b61a3be34"},{"code":"(fn [s n] ((apply comp first (repeat n rest)) s))","problem":21,"user":"51170b49e4b0063b4e3e16d9"},{"code":"(fn[x y]\n  (if (= y 0)\n    (first x)\n    (recur (rest x) (- y 1))))","problem":21,"user":"52077e37e4b03bd50ef5466c"},{"problem":21,"code":"(fn [l n]\n  (->\n   (drop n l)\n   first))","user":"55a1683ce4b0acc240e31513"},{"problem":21,"code":"(fn [sequence n] (loop [count n remaining sequence]\n                   (if (zero? count)\n                     (first remaining)\n                     (recur (dec count) (next remaining)))))","user":"54c199eee4b0ed20f4ff6f27"},{"problem":21,"code":"(fn [elements n]\n  (loop [cnt 0\n         els elements]\n    (if (= cnt n)\n      (first els)\n      (recur (inc cnt) (rest els)))))","user":"5ba28f36e4b0a20761a233c4"},{"problem":21,"code":"(fn [se n] \n  (loop [i 0 arr se]\n    (if (= i n)\n      (first arr)\n      (recur (inc i) (rest arr)))\n    )\n  )","user":"5adcc688e4b0837691e92c05"},{"code":"(fn\n[lst number]\n  (loop [l lst\n         n number]\n    (if (= n 0)\n      (first l)\n      (recur (rest l) (dec n))\n    )\n  )\n)","problem":21,"user":"530c462ae4b02e82168697d9"},{"code":"(fn [lst n] (if (= n 0) (first lst) (recur (next lst) (dec n))))","problem":21,"user":"4ec18451535dfed6da9c6db0"},{"problem":21,"code":"(fn [lis n]\n  (loop [lis lis\n         n n]\n    (if (= n 0)\n         (first lis)\n      \t (recur (rest lis) (- n 1)))))","user":"55a6b7b6e4b09e57187da29c"},{"code":"(fn Nth[sq,n]( last (take (+ n 1) sq)))","problem":21,"user":"513f53c6e4b051389b345b40"},{"problem":21,"code":"(fn my-nth [l i] (if (= i 0) (first l) (my-nth (rest l) (- i 1))))","user":"557954aae4b05c286339e092"},{"code":"(fn myfn [xs, n]\n  (if (= 0 n)\n    (first xs)\n    (myfn (rest xs) (- n 1))))","problem":21,"user":"4e6a559e535d8ccf87e9fecd"},{"code":"(fn enth [seq elem] \n    (if (= elem 0)\n        (first seq)\n        (enth (rest seq) (dec elem))))","problem":21,"user":"50b06b3ae4b009df37c708b9"},{"problem":21,"code":"(fn [lista n] (last (take (+ n 1) lista)))","user":"54530382e4b0e397800069cc"},{"problem":21,"code":"(fn [x y] \n    (loop [x x \n           y y]\n      (if (= y 0)\n \t\t(first x)\n\t\t(recur (rest x) (dec y))\n \t))\n )","user":"5e1429afe4b0a047bd49f6e6"},{"problem":21,"code":"(fn [coll index] (loop [coll coll index index] (if (= 0 index) (first coll) (recur (rest coll) (dec index)))))","user":"4e268c6e535deb9a81d77ef4"},{"problem":21,"code":"(fn [a b] (if (zero? b) (first a) (recur (rest a) (dec b ))))","user":"567c994fe4b05957ce8c61be"},{"problem":21,"code":"(fn [x n] \n  ;; If n has decreased to zero, we're at the target element at the head of the list.\n  (if (zero? n)\n    ;; Return the first element\n    (first x)\n    ;; Otherwise, recursively call with the rest of the list and decrease n\n    (recur (rest x) (- n 1)\n           )\n    )\n  )","user":"5457a6bfe4b01be26fd7460f"},{"problem":21,"code":"(fn [x a] (.get x a))","user":"57ad8f78e4b0b8559636fc9f"},{"code":"(fn [s i] (first (nthnext s i)))","problem":21,"user":"4f6016d5e4b0defedf855fa4"},{"problem":21,"code":"#(if (= 0 %2) (first %1) (recur (next %1) (dec %2)))","user":"56ebe773e4b04a395b9a042a"},{"code":"(fn [coll n] (if (< n (count coll)) (loop [c coll i 0] (if (= i n) (first c) (recur (rest c) (inc i)))) nil))","problem":21,"user":"4f99bf3ee4b0dcca54ed6d01"},{"problem":21,"code":"#(first (drop %2 %))\n\n;#(if (or (empty? %1) (> 1 %2))\n;    (first %1)\n;    (recur (rest %1) (dec %2))\n;)\n\n\n;(fn get-nth [remaining-list remaining-position]\n;    (if \n;       (or \n;         (empty? remaining-list) \n;         (> 1 remaining-position)\n;       )\n;      (first remaining-list)\n;      (recur \n;        (rest remaining-list) \n;        (dec remaining-position)\n;      )\n;    )\n;  )","user":"55c387e4e4b0e31453f6498b"},{"problem":21,"code":"(fn [xs n] (-> (take (inc n) xs) last))","user":"55d8740ee4b0e31453f64ab5"},{"problem":21,"code":"(fn [l n] (last (take (- (count l) n) (reverse l))))","user":"551e3a3de4b030e6a24d00e6"},{"problem":21,"code":"(fn fnth [s e] (if (= e 0) (first s) (fnth (rest s) (- e 1))))","user":"554c5affe4b0a04f792995a3"},{"code":"(fn nth2 [col n] \n  (if (zero? n) (first col)\n    (nth2 (rest col) (dec n))))","problem":21,"user":"52aea49ce4b0c58976d9acad"},{"code":"(fn get [cs, idx] \n  (if (<= idx 0) (first cs)\n    (get (rest cs) (dec idx))))","problem":21,"user":"507a396be4b08327cd804a69"},{"problem":21,"code":"(fn [col n]\n  ( if (zero? n)\n   \t(first col)\n   \t(recur (rest col) (- n 1))))","user":"546280d8e4b01be26fd746b0"},{"problem":21,"code":"(fn [ss nn]\n  (loop [s ss n nn]\n    (if (= 0 n)\n    \t(first s)\n    \t(recur (rest s) (dec n)))))","user":"5f9c4113e4b0715f5002d821"},{"code":"(fn my-nth [x, n]\n  (if (> n 0) (my-nth (rest x) (- n 1)) (first x)))","problem":21,"user":"51a16660e4b00957e520db73"},{"problem":21,"code":"(fn [cols x] \n  (loop [arr cols cnt x]\n    (let [f (first arr) r (rest arr)]\n      (if (zero? cnt)\n      \tf\n        (recur r (dec cnt))))))","user":"539aac0ae4b0b51d73faaf14"},{"code":"(fn [a b] (second (first (filter #(= b (first %)) (map-indexed vector a)))))","problem":21,"user":"523aff14e4b02f719975bdb5"},{"problem":21,"code":"(fn [e i] (get (vec e) i))","user":"5686e811e4b0dcc4269f405a"},{"code":"#(last \n  (take (+ %2 1) \n        %1)\n  )","problem":21,"user":"53a697a8e4b0ef122a8689cb"},{"problem":21,"code":"#(get (vec %1 ) %2)","user":"59135c11e4b0163c97b36f02"},{"problem":21,"code":"(fn [l n] (if (= n 0) (first l) (recur (rest l) (dec n)\n                                       )))","user":"577202d2e4b0979f896515c0"},{"problem":21,"code":"(fn [seqn index] \n  (last \n  \t(take (+ index 1) seqn)\n  )\n)","user":"53d5e45ae4b0e771c302544e"},{"code":"(fn [q n] (last (take (inc n) q)))","problem":21,"user":"533cd2e2e4b085b17e897d75"},{"code":"(fn [s n]\n  (if (= n 0)\n    (first s)\n    (recur (rest s) (- n 1)) ))","problem":21,"user":"527361b3e4b03e8d9a4a747c"},{"problem":21,"code":"(fn [c i] \n  (if (> i 0) \n     (recur (rest c) (dec i))\n     (first c)))","user":"5da71a00e4b000c986472c14"},{"code":"(fn\n  [seq n]\n  (get (vec seq) n))","problem":21,"user":"535d2e21e4b04ce2eb3ed2bd"},{"code":"#(loop [i %2 r %] \n  (if (== i 0) (first r)\n    (recur (dec i) (rest r))))","problem":21,"user":"4ea4e98a535d7eef308072ce"},{"code":"(fn mynth [s n]\n  (if (= n 0)\n     (first s)\n     (mynth \n        (rest s) \n        (- n 1))))","problem":21,"user":"517f5db1e4b09104ecebe7ef"},{"problem":21,"code":"(fn [coll n]\n   (first (reverse (take (inc n) coll))))","user":"570dd7ece4b0b0fb43fd06e1"},{"code":"(fn [l n]\n  (last\n    (take (+ n 1) l)))","problem":21,"user":"522a1248e4b0590a43906cf3"},{"problem":21,"code":"(fn [x y]\n  (first(drop y x)))","user":"591f5124e4b09b4ee5954c45"},{"code":"(fn [list index] (last (take (+ index 1) list)))","problem":21,"user":"4febddc9e4b0681fd128dc9a"},{"code":"(fn nth-element-of [seq n]\n  (if (= n 0)\n    (first seq)\n    (recur (next seq) (- n 1))\n    ))","problem":21,"user":"509aea3de4b050a581d3d580"},{"problem":21,"code":"(fn [array i] (first (last (take (inc i) (iterate rest array))) ))","user":"5a9306dfe4b0d174b936c716"},{"problem":21,"code":"(fn my-nth [xs n]\n  (if (= 0 n)\n    (first xs)\n    (my-nth (rest xs) (dec n))))","user":"54c8d4a8e4b045293a27f654"},{"code":"(fn my-nth [lst n]\n  (if (= n 0)\n    (first lst)\n    (recur (rest lst) (- n 1))))","problem":21,"user":"4f06f953535dcb61093f6c1c"},{"code":"(fn[x,y] (first (nthnext x, y)))","problem":21,"user":"4f49202ce4b0d56e7bb92be6"},{"problem":21,"code":"(fn mth [lst idx] (if (= idx 0) (first lst) (mth (rest lst) (- idx 1))))","user":"57e404a3e4b0bfb2137f5ab1"},{"code":"(fn f [s n]\n  (if (= 0 n)\n      (first s)\n      (f (rest s) (- n 1))))","problem":21,"user":"4feef09ae4b0678c553fc30e"},{"code":"(fn [coll index]\n  (first\n    (subvec\n        (vec coll) index (+ index 1)\n    )\n  ) \n)","problem":21,"user":"4f5cff62e4b0030a34fb2b32"},{"code":"(fn nth_element [x, n] (if(= n 0) (first x) (nth_element (rest x) (- n 1))))","problem":21,"user":"50a3f23ae4b08bbd0eb4ed2f"},{"problem":21,"code":"(fn [c p] (get (vec c) p))","user":"5f24671fe4b0f565ad998291"},{"problem":21,"code":"#(get (zipmap (range) %) %2)","user":"5a0e9a54e4b04bbd27e6d9ef"},{"problem":21,"code":"(fn [coll i] \n  (loop [acc coll, cnt 0] \n    (if (= cnt i) \n        (first acc) \n        (recur (rest acc) \n               (inc cnt)))))","user":"5c13da47e4b01240ff5671a6"},{"problem":21,"code":"#(first\n  (first\n  (filter (fn [z] (= (second z) %2))\n   (map (fn [x y] (list x y))\n              %1\n              (range)))))","user":"55a2b008e4b0acc240e31526"},{"code":"(fn [xx ii] ((fn [f x i] (f f x i)) (fn [f x i] (if (= i 0) (first x) (f f (rest x) (- i 1)))) xx ii))","problem":21,"user":"50d04a92e4b00b15ecee975a"},{"problem":21,"code":"(fn[coll v] (first( second(split-at v coll))) )","user":"555c6344e4b0b056612e224c"},{"problem":21,"code":"#(letfn [( get-n [a-seq n]\n            (if (= 0 n)\n              (first a-seq)\n              (recur (rest a-seq) (dec n))))]\n\n    (get-n %1 %2) \n    )","user":"53e3e353e4b036ad0777e406"},{"problem":21,"code":"(fn newNth [x n] (if (= n 0) (first x) (newNth (rest x) (- n 1))))","user":"54f64e99e4b0f2f3c5226ea4"},{"problem":21,"code":"(fn [col n]\n  (.get col n))","user":"5d28c6dce4b092dab7f59c85"},{"code":"(fn [x y]\n      (loop [v x cnt 0]\n        (if (= cnt y)\n          (first v)\n          (recur (pop (reverse (into () v))) (inc cnt)))))","problem":21,"user":"50cf2267e4b0e61f11ddcd8c"},{"code":"(fn\n my-nth\n [items index]\n  (if (= 0 index)\n    (first items)\n    (my-nth (rest items) (dec index))))","problem":21,"user":"52e94348e4b09f7907dd14a9"},{"problem":21,"code":"(fn n-th [x, i] (.get x i))","user":"538d067ee4b0b51d73faae65"},{"problem":21,"code":"(fn [sequ x]\n  (get (vec sequ) x))","user":"56548fd3e4b0f9d632dd8485"},{"problem":21,"code":"(fn get-n [data n]\n  (if (= n 0)\n    (first data)\n    (recur (rest data) (- n 1))))","user":"5c68f931e4b0fca0c16226ea"},{"problem":21,"code":"(fn \n  [s n]\n  (when (not (empty? s))\n    (if (= n 0)\n      (first s)\n      (recur (rest s) (dec n)))))","user":"5af1e1b1e4b0cc2b61a3bc67"},{"code":"(fn [%1 %2]\r\n(loop [x %2 l %1]\r\n   (if (> x 0)\r\n     (recur (- x 1) (rest l))\r\n     (first l))))","problem":21,"user":"4e10a14d535d04ed9115e7c1"},{"problem":21,"code":"(fn  [coll index]\n  (loop [i 0\n         remaining coll]\n    (println (format \"%d %d %s\" i index remaining))\n    (if (= i index)\n      (first remaining)\n      (recur (+ i 1) (rest remaining)))))","user":"5537c5b3e4b09218d5f44fd1"},{"problem":21,"code":"(fn [coll n]\n    (if (= n 0)\n      (first coll)\n      (recur (rest coll) (dec n)\n      )))","user":"5c8fd8f3e4b048ec896c59c7"},{"problem":21,"code":"(fn[mySeq nthItem]\n  (loop [myInnerSeq mySeq iter 0]\n        (if (>= iter nthItem)\n            (first myInnerSeq) \n            (recur (rest myInnerSeq) (inc iter))\n        )\n  )\n)","user":"506af7d8e4b0a2a5463de37d"},{"problem":21,"code":"(fn [x y] (get (into [] x ) y) )","user":"5b754a5ae4b047b03b2036c8"},{"code":"(fn nn [col i]\n  (if (= i 0)\n    (first col)\n    (recur (rest col) (dec i))))","problem":21,"user":"51efd397e4b0249c592fbdeb"},{"code":"(fn [x idx] (first (drop idx x)))","problem":21,"user":"52e1be17e4b09f7907dd142a"},{"problem":21,"code":"(fn foo [m n]\n  (if (> n 0)\n  (foo (rest m) (- n 1))\n  (first m)\n  )\n)","user":"5f1aade6e4b091ba50b4dbe4"},{"code":"(fn [seq idx] (.get seq idx))","problem":21,"user":"5377a23ce4b06839e8705e39"},{"problem":21,"code":"(fn [a-seq n]\n\t(loop [a-s a-seq\n\t\t   nn 0]\n\t\t   (if (= nn n)\n\t\t   \t(first a-s)\n\t\t   \t(recur (rest a-s)\n\t\t   \t\t(inc nn)))))","user":"573eb8f2e4b05c31a32c082f"},{"problem":21,"code":"#(loop [li %1\n        pos %2]\n   (if (= pos 0) (first li)\n     (recur (rest li) (- pos 1))))","user":"561b04e8e4b053970a773b0f"},{"code":"(fn [l, n] \n  (loop [list l remaining n]\n    (if (zero? remaining)\n      (first list)\n      (recur (rest list) (- remaining 1)))))","problem":21,"user":"50112acee4b0d82cfac69f4c"},{"problem":21,"code":"#(last (take (+ %2 1) (cycle %1)))","user":"539f6f1de4b0ca733b97449a"},{"problem":21,"code":"(fn mnth [list at]\n  (if (= 0 at)\n    (first list)\n    (mnth\n     (rest list)\n     (dec at))))","user":"540c8f3fe4b0addc1aec6705"},{"problem":21,"code":"(fn [s n]\n    (let [finder (fn [s i]\n                   (if (= n i)\n                     (first s)\n                     (recur (rest s) (inc i))))]\n      (finder s 0)))","user":"55ac07afe4b03311e7b7328f"},{"code":"(fn blah [l i] (if (= i 0) (first l) (blah (rest l) (- i 1))))","problem":21,"user":"505f5d8ae4b08f2a82ad10b1"},{"problem":21,"code":"(fn [input-list n]\n  (if (zero? n)\n    (first input-list)\n    (recur (rest input-list) (dec n))))","user":"5a09f205e4b0eab8c0448933"},{"code":"(fn f[p n]\n  (if (= n 0)\n    (first p)\n    (f (rest p) (- n 1))))","problem":21,"user":"50d18d00e4b05a71a896ef57"},{"code":"(fn hello [coll n] (if (= n 0) (first coll) (hello (rest coll) (dec n))))","problem":21,"user":"52a5f1e6e4b0c58976d9abf4"},{"code":"(fn m_nth[xs n] (if (= n 0) (first xs) (m_nth (rest xs) (- n 1)) ))","problem":21,"user":"5271b940e4b03e8d9a4a73fb"},{"problem":21,"code":"(fn f [x n]\n  (let [k (reverse x)]\n    (if (= (count k) (+ n 1)) (first k) (f (reverse (rest k)) n))))","user":"54d8a85ee4b0a52adc2e203c"},{"code":"(fn [coll n]\r\n  (loop [c coll cnt n]\r\n    (if (= cnt 0)\r\n      (first c)\r\n      (recur (rest c) (dec cnt)))))","problem":21,"user":"4e117dea535d04ed9115e7c9"},{"problem":21,"code":"(fn [coll n]\n\n  \n(loop [coll coll\n       i 0]\n  \n  (if (= n i)\n    (first coll)\n    (recur (rest coll)  (inc i) )\n    \n    )))","user":"598085e6e4b021a7a535fdd3"},{"problem":21,"code":"(fn nelem[lst idx]\n  (if (= idx 0)\n    (first lst)\n    (nelem (rest lst) (dec idx))))","user":"57f5346de4b0903ccab3dcea"},{"code":"(fn fun\n  ([L n] (fun n 0 (first L) (rest L)))\n  ([n c x xs]\n    (if (= c n) x \n      (if (= xs ()) () (fun n (inc c) (first xs) (rest xs))))))","problem":21,"user":"533e45a7e4b085b17e897d8c"},{"problem":21,"code":"(fn [vec index] (last (take (+ 1 index) vec)))","user":"5722b2b5e4b0c5bde472c0d3"},{"problem":21,"code":"#(loop [i 0 l %1]\n   (if (= %2 i)\n     (first l)\n     (recur (inc i) (rest l))))","user":"5d439775e4b07c84aa5ae696"},{"problem":21,"code":"(fn [x i] (if (= i 0) (first x) (recur (rest x) (dec i))))","user":"543897e7e4b032a45b869314"},{"code":"(fn[seq index] \n  (loop [sequence seq count 0]\n    (if (= count index) (first sequence) \n      (recur (rest sequence) (inc count)))))","problem":21,"user":"507da5a7e4b03c76e5499e03"},{"code":"(fn nt [x n] (if (= n 0) (first x) (nt (rest x) (- n 1))))","problem":21,"user":"504e42e0e4b0f6ff3350c493"},{"code":"(fn [c i]\n  (first \n   (last \n    (take (+ i 1) (iterate rest c))))\n )","problem":21,"user":"51ade59ae4b09397d510978a"},{"problem":21,"code":"(fn [coll n] \n             ((apply comp (cons first (repeat n rest))) coll))","user":"562033d9e4b064ca9f4b16de"},{"problem":21,"code":"(fn nnth [x t] \n  (if (> t 0)\n    (nnth (rest x)(- t 1))\n    (first x)\n  ))","user":"5c4a08c5e4b0f9f7a8770e4f"},{"problem":21,"code":"(fn my-nth [coll idx] \n  (if (> idx 0) (recur (rest coll) (- idx 1))\n    \t(first coll)\n    )\n  )","user":"56586acae4b0f9d632dd84b4"},{"code":"(fn [x y] (first (rest (take-nth y (vec x)))))","problem":21,"user":"529d2abce4b04e0c58e87b75"},{"problem":21,"code":"#(loop [li %1\n         idx 0]\n    (if (= idx %2) \n      \n      (first li)\n      (recur (next li) (inc idx)))\n   )","user":"5a40235fe4b0447ef91cc5c6"},{"code":"#(loop [c %1 idx 0]\n  (if (= idx %2)\n    (first c)\n    (recur (rest c) (inc idx))))","problem":21,"user":"4e6dc5f5535d5021c1a895f0"},{"code":"#(last (take (+ %2 1) (seq %1)))","problem":21,"user":"4fa9c945e4b081705acca1e5"},{"code":"(fn f [coll n]\n  (if (or (empty? coll) (== n 0))\n    (first coll)\n    (f (rest coll) (dec n))))","problem":21,"user":"52826315e4b0757a1b171459"},{"code":"(fn [x i] (first (reverse(take (inc i) x))))","problem":21,"user":"52b666bfe4b0c58976d9ad44"},{"problem":21,"code":"(fn nth_ [x, n]\n    (if \n        (or \n            (> n (- (count x) 1))\n            (< n 0))\n        nil\n        (loop [col x\n                _n n]\n            (if (= _n 0)\n                (first col)\n                (recur (rest col) (- _n 1))\n            ))))","user":"54213a8fe4b01498b1a71aaf"},{"problem":21,"code":"(fn [lst idx] (if (= 0 idx) (first lst) (recur (rest lst) (dec idx))))","user":"5d97b602e4b0d3f9b434ad3a"},{"problem":21,"code":"(fn recursive-nth [x y] (if (< y 1) (first x) (recursive-nth (rest x) (- y 1))))","user":"577feed1e4b0d36ec5835e71"},{"problem":21,"code":"#(loop [l %1\n        n %2]\n   (if (= n 0)\n     (first l)\n     (recur (rest l) (dec n))))","user":"5e38a9cbe4b01d43a70e8dc2"},{"problem":21,"code":"(fn [aList n] (last ( take (+ n 1) aList)))","user":"5860e5ffe4b0f14aab7c87e0"},{"code":"(fn [list n]\n  (first (reverse (take (+ n 1) list))))","problem":21,"user":"50456747e4b01f6c9a8b236c"},{"problem":21,"code":"(fn n2 [x y] (\n              if (= y 0)\n              \t(first x)\n              (n2 (rest x)\n                  (- y 1)\n                  ))\n              \t)","user":"563aa090e4b0bfe05bf11801"},{"problem":21,"code":"(fn [lst pos] (.get lst pos))","user":"595a2ab5e4b066ee0a44afb2"},{"code":"(fn [c n]\n  (if (zero? n)\n    (first c)\n    (recur (rest c) (- n 1))))","problem":21,"user":"50acdd8ce4b07e6f5f367748"},{"problem":21,"code":"#(get (into {} (map-indexed hash-map %1)) %2)","user":"4f925791e4b0dcca54ed6cac"},{"problem":21,"code":"(fn myNth\n  [sequenza i]\n  (if (= i 0)\n    (first sequenza)\n    (myNth (rest sequenza) (- i 1))))","user":"5b250c93e4b063e2438bcc22"},{"problem":21,"code":"#(loop [x 0\n       tempblock %1]\n  (if (= x %2)\n  \t(first tempblock)\n  \t(recur (inc x)(rest tempblock))\n  )\n  )","user":"55592deae4b0deb715856e32"},{"code":"(fn _ [seq index] (last (take (+ 1 index) seq)))","problem":21,"user":"5115c7e4e4b0ce5098ee73c2"},{"code":"(fn [els index]\n  (loop [els els\n         index index\n         cnt 0]\n  \t(if (= index cnt)\n      (first els)\n      (recur (rest els) index (inc (or cnt 1))))))","problem":21,"user":"5256cd77e4b0541d1855ba39"},{"problem":21,"code":"(fn rec [x y] (if (= y 0) (first x) (rec (rest x) (dec y))))","user":"5cbd5b42e4b026601754b9f6"},{"problem":21,"code":"(fn pickN [l n] (if (= n 0) (first l) (pickN (rest l) (- n 1))))","user":"5664b81de4b0e91d5f5c5659"},{"code":"(fn my-nth [coll index]\n  (first (drop index coll)))","problem":21,"user":"53713ed9e4b0fc7073fd6eaf"},{"code":"(fn [sq item]\n  (last (take (inc item) sq)))","problem":21,"user":"515737f0e4b0b0b4b87062d0"},{"code":"(fn [s i]\n  (if (<= i 0)\n    (first s)\n    (recur (rest s) (dec i))))","problem":21,"user":"4f991ec1e4b0dcca54ed6cfb"},{"code":"(fn nth-element [x n] (first\n  (filter #(= (.indexOf x %) n) x)))","problem":21,"user":"4fa2495ee4b0dcca54ed6d67"},{"code":"(fn n [sequence index]\n  (loop [e sequence\n         i index]\n    (if (> i 0)\n      (recur (rest e) (dec i))\n      (first e))))","problem":21,"user":"4eb99b3d535dfed6da9c6d57"},{"problem":21,"code":"(fn [a n] (loop [i n x a] (if (= i 0) (first x) (recur (dec i) (rest x)))))","user":"5595071ae4b0c79f6e1db95d"},{"problem":21,"code":"(fn enesimo [coll index]\n  (\n    (fn enesimo-recursive [coll index]\n      (if (= 0 index) (first coll) (enesimo-recursive (rest coll) (- index 1)))\n    )\n    coll index\n  )\n)","user":"574d0574e4b02ea114799227"},{"problem":21,"code":"(fn getN [sequ idx] (if (= idx 0) (first sequ) (getN (rest sequ) (dec idx))))","user":"577e1d14e4b0c8d87281f6e2"},{"code":"(fn [x n] \n (if (> n 0) (recur (rest x) (dec n)) (first x)) \n)","problem":21,"user":"4ec79cac535d6d7199dd36e3"},{"problem":21,"code":"(fn [data_struct n]\n    (loop [cnt n tmp-list data_struct]\n        (if (zero? cnt)\n            (first tmp-list)\n        (recur (dec cnt) (rest tmp-list)))))","user":"5c852e3ae4b0c8042a70ce78"},{"code":"(fn [list index] (first (nthnext list index)))","problem":21,"user":"4f96e47ae4b0dcca54ed6ce1"},{"problem":21,"code":"(fn r [c i]\n\t(if (= i 0) \n\t\t(first c)\n\t\t(r (rest c) (- i 1))            \n\t) \n)","user":"552e92d3e4b076ab5578f7f2"},{"problem":21,"code":"(fn [lst idx] \n  (first \n   (drop idx lst)))","user":"5daed892e4b0f8c104ccfc8f"},{"problem":21,"code":"(fn [arr, i] (first (reverse (take (+ i 1) arr))))","user":"55ad1221e4b03311e7b7329d"},{"problem":21,"code":"(fn greet [x n] (last (take (inc n) x)))","user":"5860d82de4b0f14aab7c87de"},{"code":"(fn foo[x y] (if (= 0 y) (first x) (foo (rest x) (- y 1))))","problem":21,"user":"4fc565e3e4b0ee37620e17f4"},{"problem":21,"code":"#_(fn [[x & xs] n] (if (zero? n) x (recur xs (dec n)))) ; trips nth for no reason\n(fn [xs n] (->> (map vector xs (range)) (filter #(= n (second %))) ffirst))","user":"5821b018e4b04b46fc4b0f80"},{"code":"#(first(nthnext % %2))","problem":21,"user":"4f33afb7e4b0d6649770a09f"},{"code":"(fn [coll n] (first (drop n coll)))\n;(fn [coll index]\n;  (let [[a b c]\n;   (reduce\n;    (fn [[cur desired oldel] el]\n;      (if (= cur desired)\n;        (list (inc cur) desired el)\n;        (list (inc cur) desired oldel)))\n;    (list 0 index nil)\n;    coll)]\n;    c))","problem":21,"user":"50cd0fd5e4b0f7a459302aad"},{"problem":21,"code":"(fn [sequ n]\n  (if (= n 0)\n    (first sequ)\n    (recur (rest sequ) (dec n))\n    )\n  \n  )","user":"5af39788e4b0cc2b61a3bc8a"},{"problem":21,"code":"(fn \n  [list n]\n  (if (= 0 n)\n    (first list)\n    (recur (rest list) (dec n))))","user":"59f88123e4b0ca45a743a31e"},{"problem":21,"code":"(fn [s n]\n  (loop [s s i 0]\n    (if (= i n)\n      (first s)\n      (recur (rest s) (inc i))\n      )\n    )\n  )","user":"57d7c894e4b0bd073c2023de"},{"code":"(fn [col n]\n    (loop [c col, i 0]\n      (if (< i n)\n        (recur (next c) (+ i 1))\n        (first c))))","problem":21,"user":"4ef4acf8535dced4c769f23c"},{"code":"(fn [v n] (if (= n 0) (first v) (recur (rest v) (- n 1))))","problem":21,"user":"52b43468e4b0c58976d9ad1b"},{"problem":21,"code":"(fn [items n]\n  (if (= n 0)\n    (first items)\n    (recur (rest items) (- n 1))))","user":"54d87b54e4b0a52adc2e2038"},{"problem":21,"code":"(fn [x y] (loop [iter 0 result x] (if (= iter y) (first result) (recur (inc iter)(rest result)))))","user":"57750460e4b0979f8965160c"},{"problem":21,"code":"(fn [lst idx] \n  (if (= idx 0)\n    (first lst)\n    (recur (rest lst) \n           (dec idx))))","user":"56b9c644e4b0f2655033593a"},{"problem":21,"code":"#(  (case %2 0 (comp first ) 1 (comp first rest) 2 (comp first rest rest)) %1 )","user":"5bae9475e4b0a20761a234c6"},{"code":"(fn nth-elem [s n] \n  (if (= n 0)\n    (first s)\n    (nth-elem (rest s) (dec n))\n  )\n)","problem":21,"user":"4e8f5ca4535d65386fec214a"},{"code":"(fn [coll n]\n  (loop [data coll\n         i n]\n    (if (zero? i)\n        (first data)\n        (recur (next data) (dec i)))))","problem":21,"user":"4e7e1483535db169f9c79702"},{"code":"(fn [col i]\n  ((fn [c i col]\n    (if (= c i)\n      (first col)\n      (recur (inc c) i (next col)))) 0 i col))","problem":21,"user":"5011ae8fe4b00ad656b9d982"},{"problem":21,"code":"(fn mynth [seq, n] (if (or (= n 0) (empty? (rest seq))) (first seq) (mynth (rest seq) (- n 1))))","user":"5681afaae4b0945ebc182a87"},{"problem":21,"code":"(fn [l n] \n  (loop [l l n n]\n  (cond\n   (= n 0) (first l)\n   :else (recur (rest l)(- n 1)))))","user":"5831846ae4b051871117c02c"},{"problem":21,"code":"(fn [s n] \n  (if (= 0 n)\n  \t(first s)\n    (recur (rest s) (dec n))))","user":"550615c0e4b021ccfedb9696"},{"code":"(fn [coll n] (first (reverse (take (+ n 1) coll))))","problem":21,"user":"503255d0e4b0e78df07b092b"},{"problem":21,"code":"(fn findele [l ele] (if (< ele 1)\n                        (first l) \n                        (findele (rest l) (- ele 1))\n                        ))","user":"59129074e4b0163c97b36ef1"},{"problem":21,"code":"(fn\n  [seq n]\n  (loop [vals seq\n         i n]\n    (if (= i 0)\n        (first vals)\n        (recur (rest vals) (dec i)))))","user":"54d21e6de4b0e8a36923e5ee"},{"code":"(fn [s n]\n  (if (= n 0) (first s)\n    (recur (rest s) (dec n))))","problem":21,"user":"5029fccee4b023940c84aa47"},{"problem":21,"code":"(fn nth-e [seqe place] (if (= place 0) (first seqe) (nth-e (rest seqe) (- place 1))))","user":"5beeb182e4b0a6d31fed212f"},{"code":"(fn my-nth [lst n]\n  (if (= n 0)\n    (first lst)\n    (recur (rest lst) (dec n))))","problem":21,"user":"5220a770e4b0e6a83c8925a3"},{"problem":21,"code":"(fn [lst nb]\n  (if (> nb 0)\n    (recur (rest lst) (dec nb))\n    (first lst)))","user":"570708fce4b0b0fb43fd0687"},{"code":"(fn nth-1 [coll n]\n  (if (= n 0)\n    (first coll)\n    (nth-1 (rest coll) (- n 1))\n  )\n)","problem":21,"user":"52dbd423e4b09f7907dd13c6"},{"problem":21,"code":"(fn [lst idx] (get (vec lst) idx))","user":"5873dbcee4b01531a375ea41"},{"problem":21,"code":"(fn [l n]\n   (loop [i n lst l]\n     (if (> i 0)\n       (recur (dec i) (rest lst))\n       (first lst))))","user":"5711ca24e4b09c608db7044b"},{"code":"(fn [collection n] (if (= n 0) (first collection) (recur (rest collection) (- n 1))))","problem":21,"user":"50b28f67e4b03ea880433562"},{"problem":21,"code":"(fn [coll n]\n  (cond\n     (nil? coll)\n     nil\n   \n     (= n 0)\n     (first coll)\n   \n     :else\n     (recur (rest coll) (dec n))))","user":"5c032eaee4b0bdcf453d1671"},{"problem":21,"code":"(fn [sq n]\n  (loop [cnt n seq sq]\n    (if (zero? cnt) (first seq) (recur (dec cnt) (rest seq)))))","user":"58ca613de4b021aa9917edb7"},{"code":"(fn [l idx]\n  (last\n    (take (+ idx 1) l)))","problem":21,"user":"4e7b6e49535db169f9c796b1"},{"problem":21,"code":"(fn myNth [coll i]\n     (if (= i 0)\n       (first coll)\n       (recur (rest coll) (dec i))))","user":"5d887d27e4b0915913b1d3a8"},{"code":"(fn [coll n]\n  (when (< n (count coll))\n    (last (take (inc n) coll))))","problem":21,"user":"5346f409e4b084c2834f4a46"},{"code":"(fn [seq n] (first (reverse (take (+ n 1) seq))))","problem":21,"user":"4f8ca81ce4b02e764a0a51a4"},{"code":"(fn [x n] (first (rest (take-nth n x))))","problem":21,"user":"4e84f77c535db62dc21a62e5"},{"code":"(fn myfunc [l n] (if (<= n 0) (first l) (myfunc (rest l) (- n 1))))","problem":21,"user":"4e919b43535dbda64a6f6afb"},{"code":"#(loop [current %1\n        index   0]\n   (if (= index %2)\n     (first current)\n     (recur (rest current) (inc index))))","problem":21,"user":"5325a66ae4b09d4e7a9b54e3"},{"code":"(fn hallo [li a] \n  (if  (= 0 a)\n(first li) \n(hallo (rest li) (dec a))))","problem":21,"user":"4e7217c5535d5021c1a89659"},{"problem":21,"code":"(fn nth-it [x n] (if (= n 0) (first x) (nth-it (rest x) (- n 1))))","user":"55993deee4b031d6649c9ba5"},{"code":"(fn ok[x y] (get (vec x) y) )","problem":21,"user":"52c70127e4b0c2d177d6211a"},{"problem":21,"code":"(fn [elems n] (loop  [remaining elems\n                                         count 0]\n                                   (if (= count n)\n                                     (first remaining)\n                                     (recur (rest remaining) (inc count)))))","user":"53f49dfae4b0db01ade6f9c2"},{"problem":21,"code":"(fn me [s n]\n  (if (= n 0)\n    (first s)\n    (me (rest s) (- n 1))))","user":"58a5a099e4b01a0c0b232918"},{"code":"(fn [s n] (if (= n 0) (first s) (recur (rest s) (dec n))))","problem":21,"user":"4e4a94a9535dc968683fc4cd"},{"code":"#(loop [xs %1 i %2] (if (== i 0) (first xs) (recur (rest xs) (dec i))))","problem":21,"user":"52ee0de4e4b05e3f0be25ec1"},{"problem":21,"code":"(fn [x el]\n  (last (take (inc el) x)))","user":"54f4b638e4b0f2f3c5226e88"},{"problem":21,"code":"(fn get-nth [coll n]\n  (if (= n 0) (first coll) (recur (rest coll) (dec n)) ))","user":"563772a9e4b0bfe05bf117d7"},{"problem":21,"code":"(fn [seq n]\n  (loop [s seq i 0]\n    (if (= i n) \n      (first s)\n      (recur (rest s) (+ i 1)))))","user":"56081222e4b046a4fc0ac004"},{"problem":21,"code":"#(let [result (drop %2 %)]\n   (first result))","user":"5d3f50d7e4b09d9322bc20a6"},{"problem":21,"code":"(fn [lst index]\n  (if (> index (count lst))\n    nil\n    (loop [temp-lst lst\n           temp-index 0]\n      (if (= index temp-index)\n        (first temp-lst)\n        (recur (rest temp-lst) (inc temp-index))))))","user":"5b1ec003e4b03cfeda66ed13"},{"problem":21,"code":"(fn nth_ [s n] (last (take (+ n 1) s)))","user":"5eea5c98e4b029a2061bbebf"},{"code":"(fn [sequ x] (first ((apply comp (repeat x rest)) sequ)))","problem":21,"user":"51dfb9e2e4b01188f0627531"},{"code":"(fn [lst i]\n  (if (= 0 i) (first lst) (recur (rest lst) (- i 1)\n                                 )\n    )\n  )","problem":21,"user":"5268a013e4b03e8d9a4a71b0"},{"problem":21,"code":"(fn [args n]\n          (if (empty? args)\n            nil\n            (if (zero? n)\n              (first args)\n              (recur (rest args) (dec n)))))","user":"5a082ce4e4b01bb0ae8afdec"},{"problem":21,"code":"(fn hh [sec ind] (if  (not= ind 0) (hh (rest sec) (dec ind)) (first sec)) )","user":"5ac7c3e8e4b0e27600da7792"},{"problem":21,"code":"(fn [c i] ((comp second first)\n           (filter \n            #(= (first %) i) \n            (map-indexed #(-> [%1 %2]) c)\n            )))","user":"53f49f9be4b0db01ade6f9c3"},{"problem":21,"code":"(fn [xs n] (first (reverse (take (+ n 1) xs))))","user":"589037b4e4b00487982d51d0"},{"problem":21,"code":"(fn [coll n]\n  (first (let [{item n} (vec coll)]\n           [item])))","user":"543823f1e4b032a45b869311"},{"problem":21,"code":"(fn [col n]\n  (if (= n 0) (first col) (recur (rest col) (dec n))))","user":"541131f0e4b01498b1a719c1"},{"code":"(fn [x y]\n  (loop [col x acc y]\n    (if (= acc 0)\n      (first col)\n      (recur (rest col) (dec acc))\n    )\n  )\n)","problem":21,"user":"5252ed18e4b0541d1855b8d9"},{"code":"(fn [col n]\n  (loop [tcol col pos 0]\n    (if (= n pos)\n      (first tcol)\n      (recur (rest tcol) (inc pos)))))","problem":21,"user":"517cc671e4b0bbbf1f12af0a"},{"code":"(fn f [lst index]\n  (if (zero? index)\n    (first lst)\n    (f (next lst) (dec index))\n  )\n  )","problem":21,"user":"512a8ef7e4b0ff5c4bc1f99e"},{"problem":21,"code":"(fn oops [xs, idx] \n                   ((fn get-nth [xs, i]\n                     (if (= i idx)\n                       (first xs)\n                       (recur (rest xs) (inc i))\n                       )) xs 0 ))","user":"57bf2aace4b05aa3c4741c73"},{"problem":21,"code":"(fn nThElement [s n] (first (drop n s)))","user":"55e7e598e4b050e68259b498"},{"problem":21,"code":"(fn m \n  ([l i]\n  \t(if (= i 0) (first l)\n    \t(m (rest l) (- i 1)))))","user":"540187ace4b0de5c41848622"},{"code":"(fn [s n]\n  (if (zero? n)\n    (first s)\n    (recur (next s) (dec n))))","problem":21,"user":"50a7f2a8e4b090657f4a5ce1"},{"code":"(fn[lis nu](first (drop nu lis)))","problem":21,"user":"529952a4e4b02ebb4ef75081"},{"problem":21,"code":"(fn f [s n] (if (zero? n) (first s) (f (rest s) (- n 1))))","user":"5bf8b5a5e4b0bdcf453d15bb"},{"problem":21,"code":"(fn [coll value]\n  (get (vec coll) value))","user":"5885eb2de4b0f1effa3b76c6"},{"problem":21,"code":"(fn mones [x n]\n  (if (= n 0)\n    (first x)\n    (mones (rest x) (- n 1))\n  )\n)","user":"5d77a828e4b02e6b30c93531"},{"problem":21,"code":"(fn [s i]\n  \t(if (= i 0)\n    \t(first s)\n    \t(recur (rest s) (dec i))))","user":"55495318e4b0a04f79299566"},{"code":"(fn nth-elem [s x]\n  (last (take (inc x) s)))","problem":21,"user":"4f1e0b39535d64f603146492"},{"code":"(fn foo [x y] (if (= y 0) (first x) (foo (rest x) (dec y))))","problem":21,"user":"4f2acb29e4b0d6649770a040"},{"code":"(fn myre [x y]\n  (if (= y 0)\n    (first x)\n    (myre (rest x) (- y 1))))","problem":21,"user":"51d5f2bee4b01da06753aa97"},{"code":"#(get (vec %)%2)","problem":21,"user":"50a168dfe4b08df8156e9e66"},{"problem":21,"code":"(fn [data pos] (.get data pos))","user":"553a74ede4b09218d5f44ff7"},{"code":"(fn [l index] (if (list? l) ((vec l) index) (l index)))","problem":21,"user":"501dfd54e4b051153f3b5b80"},{"code":"(fn my-nth [lst n] \n  (if (= n 0)\n    (first lst)\n    (recur (rest lst) (- n 1))))","problem":21,"user":"4e4870d1535dc968683fc4bc"},{"problem":21,"code":"(fn n-th-element [li n]\n  (if (= n 0)\n    (first li)\n    (n-th-element (rest li) (dec n))\n  )\n)","user":"551c02fbe4b07993ea3788d8"},{"code":"(fn [items n]\n      (loop [nitems items\n             i 0]\n       (if (= i n)\n         (first nitems)\n         (recur\n          (rest nitems)\n          (inc i)))))","problem":21,"user":"5383c054e4b06839e8705ee8"},{"code":"(fn take-nth [xs n]\n    (if (= n 0) \n      (first xs)\n      (recur (rest xs) (- n 1))))","problem":21,"user":"521e0b80e4b0dd19981ad069"},{"problem":21,"code":"(fn [l n] (if (= n 0) (first l)  (recur (rest l) (- n 1))))","user":"5549394fe4b0a04f79299565"},{"code":"#(loop [x %1 y %2] (if (= y 0) (first x) (recur (rest x) (dec y))))","problem":21,"user":"5251d3c1e4b0541d1855b87f"},{"problem":21,"code":"(fn kth [xs n]\n  (if (= n 0)\n    (first xs)\n    (kth (rest xs) (dec n))))","user":"5b1bde2ce4b03cfeda66ece6"},{"problem":21,"code":"#(first (drop %2 %1))\n\n;#(get (reduce conj [] %1) %2)","user":"55b42706e4b01b9910ae297b"},{"problem":21,"code":"(fn [sequence n] (loop [cur sequence n n cntr 0] (println \"cur \" cur \" cntr \" cntr) (if (= cntr n)\n                                                    (first cur)\n                                                    (recur (rest cur)\n                                                           n\n                                                           (inc cntr)))))","user":"58447708e4b089d5ab817e4b"},{"code":"(fn mynth [s n] (if (<= n 0) (first s) (mynth (rest s) (- n 1))))","problem":21,"user":"4dd14bd6535da60f04a96e59"},{"code":"(fn my-nth [coll n] (if (zero? n) (first coll) (my-nth (rest coll) (dec n))))","problem":21,"user":"4f149e0f535d64f60314643d"},{"code":"(fn mynth \n  ([l i] \n    (mynth l i 0))\n  ([l i c]\n    (if (= i c)\n        (first l)\n        (mynth (rest l) i (inc c)))))","problem":21,"user":"50c32086e4b00e537d00253d"},{"problem":21,"code":"(fn f [s n] \n  (loop [x 0 \n         y s] \n    (if (and \n         (> (count y) 0)\n         (< x n))\n             (recur (+ x 1)\n                    (rest y))\n             (first y))))","user":"536db108e4b0fc7073fd6e61"},{"problem":21,"code":"(fn my-nth [some-seq n] (last (take (inc n) some-seq)))","user":"56c0756de4b060a8e693e3a9"},{"problem":21,"code":"(fn [col n] (if (zero? n)\n              (first col)\n              (recur (rest col) (dec n))))","user":"5706d8dfe4b0b0fb43fd0685"},{"code":"(fn [x,y] (last (take (+ 1 y) x)))","problem":21,"user":"4f037d9e535dcb61093f6af2"},{"code":"(fn[getitem x ](first (drop x getitem)))","problem":21,"user":"50f897a4e4b0aafb827eb205"},{"code":"(fn [orig, i] \n (if (zero? i)\n   (first orig)\n   (recur (rest orig) (dec i))))","problem":21,"user":"52745629e4b03e8d9a4a74a0"},{"code":"(fn [x ,y] (first(nthnext x y)))","problem":21,"user":"526ab39ee4b03e8d9a4a7236"},{"code":"(fn [s n]\r\n  (loop [ls s\r\n   pos 0]\r\n    (if (= n pos)\r\n      (first ls)\r\n      (recur (rest ls) (inc pos)))))","problem":21,"user":"4f044285535dcb61093f6bb5"},{"problem":21,"code":"#(-> (drop %2 %1)\n     (first))","user":"60549e69e4b069ae89ce6ac8"},{"problem":21,"code":"(fn [my-seq n]\n    (if (zero? n)\n        (first my-seq)\n        (recur\n            (rest my-seq)\n            (dec n))))","user":"5784ff88e4b0ebec4cfb74d4"},{"problem":21,"code":"(fn [coll i]\n  (if (zero? i)\n    (first coll)\n    (recur\n     (rest coll)\n     (dec i))))","user":"4f086d45535dcb61093f6c39"},{"problem":21,"code":"(fn [coll index] \n  (loop [c coll i 0]\n    (if (= index i)\n      (first c)\n      (recur (rest c) (inc i)))))","user":"5895fd90e4b00487982d528f"},{"problem":21,"code":"(fn [coll, index] (let [coll (vec coll)]\n          (coll index)))","user":"559c4236e4b066d22e731f67"},{"problem":21,"code":"#(first (drop %2 %1));#(.get %1 %2)","user":"57ee41a6e4b0bfb2137f5baf"},{"problem":21,"code":"#((apply comp (cons first (take %2 (repeat rest)))) %1)","user":"545ddac3e4b01be26fd74676"},{"code":"#((fn getnth [l i]\r\n  (if (= (- (count l) 1) i)\r\n    (first l)\r\n    (getnth (rest l) i))) (reverse %1) %2)","problem":21,"user":"4e9e12b2535dbda64a6f6b92"},{"code":"#(loop [coll %1 index %2 current 0]\n  (if (== index current)\n    (first coll)\n    (recur (rest coll) index (+ 1 current))))","problem":21,"user":"4fcba3f9e4b0ee37620e185b"},{"problem":21,"code":"(fn [ls ind] (get (vec ls) ind))","user":"565418cde4b0f9d632dd847c"},{"problem":21,"code":"(fn [a-seq elem]\n  (if (= elem 0)\n    (first a-seq)\n    (recur (rest a-seq) (dec elem))))","user":"5cea0d52e4b0a17bb84e2bca"},{"problem":21,"code":"(fn n [lst num]\n  (loop [c 0 l lst]\n    (if (= c num) \n      (first l)\n      (recur (+ 1 c) (rest l)))))","user":"580b79e4e4b0a837a8b30d4a"},{"problem":21,"code":"(fn get-nth [xs n]\n  (if (zero? n)\n    (first xs)\n    (get-nth (rest xs) (dec n))))","user":"55f9acade4b03cbcff9738c7"},{"code":"(fn\n  [list index]\n  (loop\n    [list list\n     loopindex 0]\n    (if (= loopindex index)\n      (first list)\n      (recur (rest list) (+ loopindex 1)))))","problem":21,"user":"52d39acce4b099d49816f0c7"},{"problem":21,"code":"(fn [xs n]\n  (if (= n 0)\n      (first xs)\n       (recur (rest xs) (- n 1))))","user":"54485749e4b032a45b8693c7"},{"code":"(fn [input n] (last (take (+ 1 n) input)))","problem":21,"user":"53838742e4b06839e8705ee0"},{"problem":21,"code":"(fn [l c] (.get l c) )","user":"56dcb5ade4b0ea9b8538f821"},{"problem":21,"code":"(fn [coll n]\n  (loop [i 0, remaining coll]\n    (if (= n i)\n      (first remaining)\n      (recur (inc i) (rest remaining)))))","user":"594783bee4b07ddc2dafada1"},{"problem":21,"code":"(fn nth2\n                     [n x]\n                     (last (take (inc x) n)))","user":"55fb04e0e4b0f488688e0657"},{"problem":21,"code":"(fn my-nth [l,n] (if (= 0 n) (first l) (my-nth (rest l) (dec n))))","user":"55041b5ee4b086ebe8a79c78"},{"code":"(fn [col idx] \n    (loop [c col i idx]\n      (if (zero? i) (first c) (recur (rest c) (- i 1))\n      )))","problem":21,"user":"510b704ee4b078ea71921100"},{"code":"(fn my-nth [xs n]\n  (if (= n 0)\n    (first xs)\n    (my-nth (rest xs) (- n 1))))","problem":21,"user":"4f7251eee4b07046d9f4f02e"},{"problem":21,"code":"(fn [lst n-th] (->> lst (take (+ 1 n-th)) last ))","user":"5ce102b0e4b0a17bb84e2b10"},{"code":"(fn [s i] ((vec s) i))","problem":21,"user":"4e9be708535dbda64a6f6b79"},{"problem":21,"code":"#(if (< %2 1)\n   (first %1)\n   (recur (rest %1) (dec %2)))","user":"53a46c4ae4b0b62ce300572f"},{"code":"#(last(take (inc %2) %1))\n;(take 3 '(1 2 3 4 5 6))","problem":21,"user":"52c1ef8fe4b07a9af579236e"},{"problem":21,"code":"(fn [sequ index]\n  (get\n   (reduce(\n            fn [pairs element] (\n                                conj\n                                pairs {(count pairs)\n                                       element}))\n     {}\n     sequ)\n   index))","user":"5e7fb908e4b085ba37836e3f"},{"code":"(fn [v i]\n  (if (= i 0)\n    (first v)\n    (recur (rest v) (dec i))))","problem":21,"user":"4f128865535d64f603146428"},{"problem":21,"code":"(fn a [coll idx] \n    (if (zero? idx)\n      (first coll)\n      (recur (rest coll) (dec idx))\n      )\n  )","user":"55f06183e4b06e875b46ce23"},{"code":"(fn ith [x i]\n  (if (= i 0)\n    (first x)\n    (ith (rest x)(- i 1))\n  )  \n)","problem":21,"user":"4fe491f9e4b0e8f79898feb6"},{"code":"(fn [coll n]\n  (if (= n 0)\n  (first coll)\n  (recur (rest coll) (- n 1) )))","problem":21,"user":"4e3bcccd535deb9a81d77f56"},{"problem":21,"code":"(fn\n  [coll idx]\n  (if (= idx 0)\n    (first coll)\n    (recur (rest coll) (dec idx))))","user":"5cf48f04e4b087f62be35a86"},{"problem":21,"code":"(fn [col, n] (first(drop n col)))","user":"554b8b7ae4b0a04f7929958e"},{"problem":21,"code":"#(loop [i %2\n        coll %1]\n   (if (= i 0)\n     (first coll)\n     (recur (dec i) (rest coll))))","user":"5c1aadcde4b01240ff567209"},{"code":"(fn [x idx]\n  (last\n    (take (+ idx 1) x)))","problem":21,"user":"50992197e4b0cae2931060ae"},{"code":"(fn [coll n]\n  (last (map (fn [m n] m) coll (repeat (inc n) 1)))\n  )","problem":21,"user":"526698c9e4b03e8d9a4a7144"},{"problem":21,"code":"(fn nthelement [y x] (first (reverse (take (inc x) y))))","user":"5a6f3162e4b0512ff01cda7a"},{"code":"(fn [collection n] (first (nthnext collection n)))","problem":21,"user":"4f9f135be4b0dcca54ed6d34"},{"code":"(fn [x y] (first \n  (loop [a y b x] (if (= a 0) b (recur (dec a) (rest b))))))","problem":21,"user":"4ed6b05c535d10e5ff6f52e5"},{"problem":21,"code":"(fn [items n] (get (vec items) n))","user":"5e5f75a0e4b0fd0acd15867a"},{"code":"(fn [x n] \r\n  (if (= n 0)\r\n    (first x)\r\n    (recur (rest x) (dec n))))","problem":21,"user":"4f0f01c0535d0136e6c22329"},{"code":"(fn [col n]\n  \n(loop [c 0 col col]\n  \n   (if (= c n) (first col) (recur (inc c) (rest col)))))","problem":21,"user":"504e71cbe4b0f6ff3350c4b3"},{"problem":21,"code":"(fn [my-list, my-n]\n  (loop [temp-list my-list\n         i my-n]\n    (if (= i 0)\n      (first temp-list)\n      (recur (rest temp-list) (- i 1)))))","user":"5944bd7fe4b0b03edd0057b0"},{"problem":21,"code":"(fn [items x]\n  (if (= x 0)\n    (first items)\n    (recur (rest items) (dec x))))","user":"547fbe01e4b0c51c1f4d7321"},{"problem":21,"code":"(fn[x y] (first (reverse (take (inc y) x))))","user":"51a61074e4b0740bfd1afd1d"},{"problem":21,"code":"#(if (> %2 0)\n   (recur (rest %) (dec %2))\n   (first %)\n)","user":"54107c96e4b01498b1a719ae"},{"code":"(fn [seq n](first(take-last (- (count seq) n) seq)))","problem":21,"user":"528cc69fe4b0239c8a67aeb7"},{"problem":21,"code":"(fn [item index] (get (into [] item) index))","user":"59a5cb6ae4b066c664927d6c"},{"code":"(fn [x, y] \n\t(let [pos 0] \n\t\t((fn counter[x pos] \n\t\t\t(if (= pos y)(first x)\n\t\t\t (counter (rest x) (inc pos)))\n\t\t) x pos)\n\n\t)\n)","problem":21,"user":"5238ad7be4b0fae3832e9a12"},{"code":"(fn [l n] (if (pos? n)\n(recur (rest l) (dec n))\n(first l)))","problem":21,"user":"51b793d3e4b0d906fcd71d38"},{"problem":21,"code":"#(->> %1\n  (drop %2)\n  (first)\n)","user":"5bb905dce4b0a20761a235c7"},{"problem":21,"code":"(fn [s n] (get (into [] s) n))","user":"54f0aab1e4b024c67c0cf8a1"},{"problem":21,"code":"(fn [s i] (if (= i 0) (first s) (recur (rest s) (dec i) ) ))","user":"55809cb9e4b05c286339e0ef"},{"code":"(fn [a b] (if (= b 0) (first a) (recur (rest a) (- b 1))))","problem":21,"user":"4e4b911f535dc968683fc4d6"},{"problem":21,"code":"(fn my-nth [x y] (if (> y 0) (my-nth (rest x) (dec y)) (first x)))","user":"5a022949e4b01bb0ae8afd60"},{"problem":21,"code":"(fn nthelement [x y] (last (take (inc y) x)))","user":"58eba5cce4b056aecfd47d41"},{"problem":21,"code":"(fn my-nth [coll i] (if (zero? i) (first coll) (recur (rest coll) (dec i))))","user":"56487cf2e4b0284900eef631"},{"problem":21,"code":"(fn get-at [seq n] (last (take (inc n) seq)))","user":"59032c0fe4b022d14a2aaf9f"},{"code":"(fn [lst index] (last (take (+ 1 index) lst)))","problem":21,"user":"4ff50604e4b0678c553fc365"},{"code":"(fn [coll n] \n   (if (zero? n) \n     (first coll) \n     (recur (rest coll) (- n 1))))","problem":21,"user":"524ea587e4b0541d1855b7e9"},{"code":"(fn get-nth \n  [x n] \n  (if (== n 0) \n    (first x) \n    (get-nth (rest x) (dec n))))","problem":21,"user":"51585807e4b0a069fd272c75"},{"problem":21,"code":"(fn [coll n]\n  (loop [c 0\n         sq (seq coll)]\n    (if (empty? sq)\n      nil\n      (if (= c n)\n        (first sq)\n        (recur (inc c) (rest sq))\n        )\n      )\n    )\n  )","user":"553f70cae4b0a04f792994f8"},{"code":"(fn [a i] (last (take (+ i 1) a)))","problem":21,"user":"4f981f31e4b0dcca54ed6cef"},{"problem":21,"code":"(fn [stream n]\n  (if (= n 0)\n    (first stream)\n    (recur  (rest stream) (- n 1))\n  ))","user":"57dd3ae3e4b0bd073c20243d"},{"problem":21,"code":"(fn [lst n]\n  (loop [inlst lst ct 0]\n    (if (= ct n)\n      (first inlst)\n      (recur (rest inlst) (inc ct)))))","user":"5a6a7cc5e4b0512ff01cda27"},{"problem":21,"code":"(fn [sq idx]\n  (if (= idx 0)\n    (first sq)\n    (recur (rest sq) (dec idx))))","user":"5498e155e4b0b312c081ff86"},{"code":"(fn [xs n] (if (> n 0) (recur (next xs) (dec n)) (first xs)))","problem":21,"user":"4f159ea6535d64f603146445"},{"code":"(fn nnth [s n]\r\n  (if (zero? n)\r\n    (first s)\r\n    (nnth (rest s) (- n 1))))","problem":21,"user":"4f7f0827e4b06e829148e1d5"},{"code":"(fn pick[a b] (if (= 0 b) (first a) (pick (rest a) (- b 1)) ))","problem":21,"user":"4f8ea1f7e4b0d4e659cdde69"},{"code":"(fn [seq n]\n  (loop [seq seq n n]\n    (if (= n 0)\n      (first seq)\n      (recur (rest seq) (dec n)))))","problem":21,"user":"4f26d6d9e4b0d6649770a007"},{"code":"(fn n-th [seq n] \n  (if (= n 0) (first seq)\n    (n-th (rest seq) (- n 1)))\n  )","problem":21,"user":"503ca47fe4b06c4e0e1fa24f"},{"code":"(fn [xs n]\n  (if (= 0 n)\n    (first xs)\n    (recur (rest xs) (dec n))))","problem":21,"user":"50bd6033e4b0594b91591c66"},{"code":"(fn [s i] (last (take (inc i) s)))","problem":21,"user":"500e38a5e4b068062f6e8d90"},{"code":"(fn [x t] (get (vec x) t) )","problem":21,"user":"4f419f6fe4b0d7d3c9f3fceb"},{"code":"(fn my-nth\n  [lst n]\n  (if (zero? n)\n    (first lst)\n    (my-nth (rest lst) (- n 1))))","problem":21,"user":"5143c13ee4b0b4fb4ace5f3b"},{"problem":21,"code":"(fn [coll idx]\n  (if (zero? idx)\n    (first coll)\n    (recur (rest coll) (- idx 1))))","user":"5aed87a1e4b0cc2b61a3bc1a"},{"code":";; #(loop [s %] (if (= 1 (count s)) (first s) (recur (rest s))))\n#(first (drop %2 %1))","problem":21,"user":"5070e31ee4b0e3170b5a8678"},{"code":"(fn it [c i]\n  (if (zero? i)\n    (first c)\n    (it (rest c) (dec i))))","problem":21,"user":"5042bb9ae4b034ff00315d16"},{"problem":21,"code":"(fn [s n]\n  (if (= n 0)\n    (first s)\n    (recur (rest s) (dec n))\n    )\n  )","user":"539c88e1e4b0b51d73faaf2c"},{"code":"(fn ! [collec n] (if (= n 0) (first collec) (!(rest collec) (- n 1)) ))","problem":21,"user":"5318f85ae4b08068f379ed76"},{"code":"(fn [q, n] (first (drop n q)))","problem":21,"user":"4eba9ac1535dfed6da9c6d66"},{"code":"(fn [seq index]\n  (if list?\n    (get (vec seq) index)\n    (get seq index)))","problem":21,"user":"4e6a3985535d8ccf87e9feb1"},{"problem":21,"code":"#(loop [c (seq %1) i 0] (if (= i %2) (first c) (recur (rest c) (inc i))))","user":"51456858e4b0e88796073408"},{"code":"(fn get-nth[l i] (if (= i 0) (first l) (get-nth (rest l) (- i 1))))","problem":21,"user":"52ad821ae4b0c58976d9ac97"},{"code":"#(loop [x %1\n        i %2]\n   (if (= i 0)\n     (first x)\n     (recur (rest x) (dec i))))","problem":21,"user":"52f685eae4b047fd55836fb8"},{"problem":21,"code":"(fn [coll n]\n  (first(drop n coll)))","user":"54b65694e4b05787c3b163b9"},{"problem":21,"code":"(fn my-nth [coll n]\n  (if (= 0 n)\n    (first coll)\n    (my-nth (rest coll) (dec n))))","user":"584f1397e4b0b7285a6f4e5e"},{"code":"(fn n-element [coll n]\n  (first (drop n coll)))","problem":21,"user":"503bb73de4b07a1917cc34e2"},{"code":"#(let [{m-th %2} (vec %1)] m-th)","problem":21,"user":"52683aa4e4b03e8d9a4a719a"},{"problem":21,"code":"(fn [collection whichIndex]\n  (loop [currentCount whichIndex tempCollection collection]\n    (if (zero? currentCount)\n      (first tempCollection)\n      (recur (dec currentCount) (rest tempCollection)))))","user":"548f339ee4b0e286459a1233"},{"code":"#(loop [coll %1 n %2]\n   (if (zero? n)\n     (first coll)\n     (recur (rest coll) (dec n))))","problem":21,"user":"514da593e4b019235f6c058a"},{"code":"(fn xx [l n] (cond (= 0 n) (first l) :else (xx (rest l) (- n 1))))","problem":21,"user":"4ff9624ce4b0678c553fc3a8"},{"problem":21,"code":"(fn [sqs Nth] (get (vec sqs) Nth))","user":"5a291617e4b07f18be40aa76"},{"code":"(fn [xs n]\n  (->> xs (take (+ 1 n)) reverse first))","problem":21,"user":"51ac6360e4b09397d510976c"},{"problem":21,"code":"(fn [s n] \n (if (= n 0) (first s) (recur (rest s) (- n 1))))","user":"5413adfee4b01498b1a719e4"},{"code":"(fn [x,y] (last (take (inc y) x)))","problem":21,"user":"4f3a4502e4b0e243712b1f0b"},{"code":"(fn nthel [s n]\n  (if (= n 0)\n    (first s)\n    (recur (rest s) (- n 1))))","problem":21,"user":"534d1173e4b084c2834f4a98"},{"code":"(fn [list n] (first (drop n list)))","problem":21,"user":"50996376e4b0cae2931060b2"},{"problem":21,"code":"(fn [s n]\n  (loop [s s, n n]\n    (if (= 0 n)\n      (first s)\n      (recur (rest s) (dec n))\n      )))","user":"5a3d7afae4b0447ef91cc5a6"},{"problem":21,"code":"(fn fooNth [arr i]\n  (if (= i 0) (first arr) (recur (rest arr) (dec i))))","user":"56fc0601e4b07572ad1a88db"},{"code":"(fn f\n    ([l n]\n      (if (zero? n)\n          (first l)\n          (recur (rest l) (dec n))\n      )\n    )\n )","problem":21,"user":"51d28e15e4b0d13b04db0d9b"},{"code":"(fn [v n] (cond (= n 0) (first v) :else (recur (rest v) (dec n))))","problem":21,"user":"4eb83593535dd6025b394d1b"},{"problem":21,"code":"(fn getn [s i]\n  (if (= i 0)\n    (first s)\n    (getn (rest s) (dec i))))","user":"568c30d2e4b0dcc4269f40b1"},{"problem":21,"code":"(fn \n  [coll position]\n  (if (empty? coll)\n    nil\n    (first (drop position coll))))","user":"55ee7977e4b0121d4835fdee"},{"problem":21,"code":"(fn [seq i]\n  (last (take (+ i 1) seq))\n  )","user":"58775496e4b01531a375ea9a"},{"problem":21,"code":"(fn [coll n]\n       (loop [coll coll, cnt 0]\n         (if (= n cnt)\n           (first coll)\n           (recur (rest coll) (inc cnt)))))","user":"5e1cb653e4b0dc959400853b"},{"code":"(fn enth [collection index]\n  (loop [c collection i 0]\n    (if (= i index)\n      (first c)\n      (recur (rest c) (inc i)))))","problem":21,"user":"534b0598e4b084c2834f4a75"},{"problem":21,"code":"(fn nth-e [coll n] \n    (println coll n)\n  (if (= n 0)\n   (first coll)\n  (nth-e (rest coll) (- n 1))))","user":"60a6bbe5e4b00e9e6653c464"},{"code":"(fn [lst enth] (first (drop enth lst)))","problem":21,"user":"52a5e784e4b0c58976d9abf3"},{"problem":21,"code":"(fn [x y] (if (= 0 y)\n            (first x)\n            (recur (rest x) (dec y))))","user":"58a3ba31e4b02bd94d917eff"},{"problem":21,"code":"(fn [testseq nthel]\n  (loop [x testseq testlist '()]\n    (if (= (count testlist) nthel)\n      (first x)\n      (recur (rest x) (conj testlist (first x))))\n   )\n  )","user":"5425d65ce4b01498b1a71b14"},{"problem":21,"code":";;(fn [x y] (first (drop y x)))\n#(first (drop %2 %1))","user":"597614a3e4b01722bebd4cd5"},{"code":"(fn [x y] (if (= 0 y) (first x) (recur (rest x) (dec y))))","problem":21,"user":"524c7fcfe4b0752c4cb68cbd"},{"code":"(fn nth' [l i]\n  (let [fst (first l)\n        rst (rest l)]\n    (if (= i 0)\n      fst\n      (nth' rst (dec i)))))","problem":21,"user":"4dade9e9c9a9d6ed4799dc57"},{"code":"(fn f [p n] \n  (if (= n 0) \n    (first p) \n    (f (rest p) (- n 1))))","problem":21,"user":"5029131ae4b0b6c928ad61ff"},{"code":"#(first (drop %2  %1))","problem":21,"user":"53749782e4b06d7f452d9e24"},{"code":"(fn [coll n]\n  (last\n    (take (inc n) coll)))","problem":21,"user":"4f036c4b535dcb61093f6ab9"},{"problem":21,"code":"(fn [l n] \n  (loop [i n lst l]\n    (if (= 0 i)\n      (first lst)\n      (recur (dec i)(rest lst)))))","user":"550111d3e4b07d26eda61d6f"},{"code":"(fn [sec x] (first (drop x sec)))","problem":21,"user":"5266db2be4b03e8d9a4a714a"},{"code":"(fn [arg nb]\n  (if (= 0 nb)\n    (first arg)\n    (recur (rest arg) (dec nb))))","problem":21,"user":"537881a4e4b06839e8705e46"},{"code":"#(loop [x %1 y %2] (if (zero? y) (first x) (recur (rest x) (- y 1))))","problem":21,"user":"4f4bbda0e4b03ad3f0c10c7b"},{"problem":21,"code":"#(reduce (fn [x y] y) (take (inc %2) %1))","user":"580e4848e4b0849f6811b750"},{"problem":21,"code":"(fn nth-e [s n]\n  (if (zero? n)\n    (first s)\n    \n    (nth-e (rest s)(dec n))))","user":"5ee685ffe4b029a2061bbe99"},{"problem":21,"code":"(fn [xs x] (last (take (+ x 1) xs)))","user":"5562bd71e4b0c656e3ff17dc"},{"code":"(fn nnth [l n] (if (= n 0) (first l) (nnth (rest l) (- n 1))))","problem":21,"user":"5328febee4b09d4e7a9b550d"},{"problem":21,"code":"#(aget(to-array %) %2)","user":"565b371fe4b068f2fe63dbff"},{"problem":21,"code":"(fn [x y] \n  (let [a (first x)\n        b (rest x)]\n    (if (= y 0)\n      a\n      (recur b (dec y))\n      )\n    )\n  )","user":"53af41dce4b047364c04447d"},{"code":"(fn [coll n] (if (= 0 n) (first coll) (recur (rest coll) (dec n))))","problem":21,"user":"4e131443535d04ed9115e7d3"},{"code":"(fn [x pos]\n               (loop [seq x current-pos 0]\n                 (if (= pos current-pos)\n                   (first seq)\n                   (recur (rest seq) (+ 1 current-pos)))))","problem":21,"user":"4ebef65e535dfed6da9c6d9b"},{"code":"(fn mNth [items, itemsSkip] (\n  if (= itemsSkip 0) (\n    first items\n  ) (\n    mNth (next items) (dec itemsSkip)\n  )\n))","problem":21,"user":"4fe4cefce4b0e8f79898febd"},{"code":"#(first (reverse \n  (drop-last (- \n    (- (count %1) %2 1)\n        0)\n%1)))","problem":21,"user":"4eb2a89d535d7eef3080734c"},{"problem":21,"code":"(fn\n  [init N]\n  (loop [coll init\n         n N]\n    (if(= n 0)\n      (first coll)\n      (recur (rest coll)\n             (- n 1)))))","user":"53d6b266e4b0e771c3025459"},{"code":"(fn [s index]\n  (if (= index 0)\n    (first s)\n    (recur (rest s) (dec index))))","problem":21,"user":"4f790ad5e4b0fbe0118ec58d"},{"code":"(fn[collection n] (first(nthnext collection n)))","problem":21,"user":"52be404ee4b07a9af579231a"},{"problem":21,"code":"(fn my-nth\n  [coll n]\n  (if (zero? n)\n    (first coll)\n    (recur (rest coll) (dec n))))","user":"56180d83e4b06b1bb2182a18"},{"problem":21,"code":"(fn [s index]\n  (loop [_s s _index 0]\n    (if (= index _index)\n      (first _s)\n      (recur (rest _s) (inc _index))\n    )))","user":"56936547e4b0dcc4269f4101"},{"problem":21,"code":"(fn nth-elem \n  [lst x]\n  (first (drop x lst)))","user":"57f8153de4b0d3187e900916"},{"code":"(fn myFunc [s idx] \n  (if (= 0 idx)\n    (first s)\n    (myFunc (rest s) (dec idx))\n    ))","problem":21,"user":"534e0fdbe4b084c2834f4aac"},{"problem":21,"code":"(fn[a b] (let [c (into [] a)] (get c b)))","user":"59636b6de4b066ee0a44b0c6"},{"problem":21,"code":"(fn [arr idx]\n    (if (= idx 0)\n      (first arr)\n      (recur (rest arr) (dec idx))))","user":"5ef8e9e0e4b09b61f08553cb"},{"code":"(fn [seq index]\n  (first (drop index seq)))","problem":21,"user":"4fb045dfe4b081705acca263"},{"problem":21,"code":"#((zipmap (iterate inc 0) %1 ) %2)","user":"55c49394e4b0e31453f6499e"},{"problem":21,"code":"(fn nthh [l n]\n  (if (= n 0)\n    (first l)\n    (nthh (rest l) (- n 1))))","user":"55e4487ce4b050e68259b44c"},{"code":"(fn lst [v i] (get (into [] v) i))","problem":21,"user":"50d6d7eee4b0159555a1fc76"},{"problem":21,"code":"(fn [input-list n]\n  (loop [cnt n temp-list input-list]\n    (if (zero? cnt)\n      (first temp-list)\n      (recur (dec cnt) (rest temp-list)))))","user":"5a3a3824e4b001c08efc0cc2"},{"problem":21,"code":"(fn nieme [s index] \n  (cond\n   (nil? s) nil\n   (< index 0) nil\t\n   (= 0 index) (first s)\n   :else (nieme (rest s) (- index 1))))","user":"563b236ce4b0bfe05bf1180b"},{"problem":21,"code":"(fn get-nth [s n] (if (= 0 n) (first s) (get-nth (rest s) (- n 1))))","user":"60526f08e4b04c8f2157d14d"},{"code":"(fn mynth [xs n]\n  (if (= n 0) (first xs)\n              (mynth (rest xs) (- n 1))))","problem":21,"user":"5097cd83e4b00ad8bab4e974"},{"problem":21,"code":"(fn andrew [x y]\n  (get (vec x) y))","user":"5ec825eee4b08d0ec38692e3"},{"code":"(fn [list n] (first (nthrest list n)))","problem":21,"user":"50717d87e4b0e3170b5a867a"},{"problem":21,"code":"(fn [coll n] \n   (first (drop n coll)))","user":"5872935ce4b01531a375ea1d"},{"code":"(fn nnumber[x arg] (if ( = arg 0) (first x) (nnumber (rest x) (- arg 1))))","problem":21,"user":"52d74c2de4b09f7907dd1373"},{"problem":21,"code":"(fn my-nth [l n]\n  (if (zero? n)\n    (first l)\n    (my-nth (rest l) (- n 1))))","user":"5599abc9e4b031d6649c9bb0"},{"problem":21,"code":"(fn [xs n]\n  (last\n\t(take (inc n) xs)))","user":"586c122ae4b01531a375e96f"},{"code":"(fn[xs n] (first (drop n xs)))","problem":21,"user":"4dd76bf9535d2dad7130b5d1"},{"code":"(fn [s0 idx0]\n  (loop [s s0\n         idx idx0]\n    (if (= 0 idx)\n      (first s)\n      (recur (next s) (dec idx)))))","problem":21,"user":"5165a235e4b079ad97ec44ac"},{"problem":21,"code":"(fn [s n]\n  (if (zero? n) (first s)\n    (recur (rest s) (dec n))))","user":"578ce779e4b0ebec4cfb7561"},{"code":"(fn [a n] (get (vec a) n))","problem":21,"user":"4f8544e0e4b033992c121c40"},{"problem":21,"code":"(fn [l, n] (if (= n 0) (first l) (recur (rest l), (dec n))))","user":"54857657e4b0e286459a11ac"},{"problem":21,"code":"(fn [coll x]\n  (loop [y x z coll]\n    (if (= y 0)\n      (first z)\n      (recur (- y 1) (rest z)))))","user":"53d7a81ce4b0e771c3025467"},{"code":"(fn [coll i] ((vec coll) i))","problem":21,"user":"4f8dc9dce4b02e764a0a51b6"},{"problem":21,"code":"(fn mynth [lst n]\n  (if (> n 0)\n    (mynth (rest lst) (- n 1))\n    (first lst)))","user":"54f14538e4b024c67c0cf8ae"},{"problem":21,"code":"(fn [x n] (loop [i 0] (if (= i n) (.get x i) (recur (inc i)))))","user":"56cad309e4b0ea9b8538f720"},{"problem":21,"code":"(fn [s n]\n  (if (zero? n)\n    (first s)\n    (recur (rest s) \n           (dec n))))","user":"573df35ce4b05c31a32c081e"},{"problem":21,"code":"(fn my-nth \n  [el-list pos]\n  (loop [cnt pos temp-list el-list]\n    (if (zero? cnt)\n      (first temp-list)\n      (recur (dec cnt) (rest temp-list)))))","user":"60d655c7e4b0d60f5ea6f7e8"},{"code":"(fn [lst number] (loop [l lst n number]\n  (if (zero? n)\n  (first l)\n  (recur (next l) (dec n)))))","problem":21,"user":"4fd7f892e4b0dab7d829f38d"},{"code":"(fn indexval [s n]\n  (if (<= n 0)\n    (first s)\n    (indexval (rest s) (- n 1))))","problem":21,"user":"51430fd9e4b0c172af7558cf"},{"problem":21,"code":"(fn nth_ [xs n] (if (== n 0) (first xs) (nth_ (rest xs) (- n 1))))","user":"58110705e4b0f478707a05df"},{"problem":21,"code":"(fn [se n] \n  (loop [iter -1, current nil, not-checked se]\n    (if (= iter n)\n      current\n      (do\n        (println (str \"current=\" current \"\\tnot-checked=\" not-checked))\n      \t(recur (inc iter) (first not-checked) (rest not-checked))))))","user":"5b6756d9e4b0c6492753e764"},{"problem":21,"code":"(fn [coll n]\n  (if (= n 0)\n    (first coll)\n    (recur (next coll) (- n 1))))","user":"58ebae90e4b056aecfd47d44"},{"code":"(fn nget [coll n]\n  (if (= 0 n)\n    (first coll)\n    (recur (rest coll) (dec n))))","problem":21,"user":"4efec33f535dcb61093f6a2a"},{"problem":21,"code":"(fn my-nth \n  [my-seq n]\n  (first (filter #(= n (.indexOf my-seq %)) my-seq)))","user":"55acd080e4b03311e7b73298"},{"problem":21,"code":"(fn [s n]\n  \t(if (= n 0) \n      (first s)\n      (recur (next s) (dec n))))","user":"5a58ae01e4b05d388ecb6c82"},{"code":"(fn gg[x y] (if (= y 0) (first x) (gg (rest x) (- y 1))))","problem":21,"user":"52e0c195e4b09f7907dd1414"},{"code":"(fn my-n [coll n]\n  (if (= n 0)\n    (first coll)\n    (my-n (rest coll) (dec n))))","problem":21,"user":"5298c83de4b02ebb4ef75064"},{"problem":21,"code":"(fn [ lst n]\n  (last (take (+ 1 n) lst)))","user":"59dd387ae4b0a0ac046f2501"},{"code":"(fn [myList i] (if (= i 0) (first myList) (recur (rest myList) (- i 1))))","problem":21,"user":"4f3bfce2e4b0e243712b1f38"},{"code":"(fn [x y] (first (second (split-at y x))))","problem":21,"user":"4fd718cee4b0dab7d829f37d"},{"problem":21,"code":"(fn [l x]\n  (if (= x 0)\n    (first l)\n    (do (loop [l l x x]\n        (if (= x 0)\n          (first l)\n          (recur (rest l) (- x 1))\n          )))) )","user":"57dfea1ae4b0bd073c20246d"},{"code":"(fn [coll n] (first (take 1 (drop n coll))))","problem":21,"user":"4ef0a39b535dced4c769f20d"},{"code":"(fn nth-item [x, n]\n  (if (= n 0)\n    (first x)\n    (nth-item (rest x) (- n 1))))","problem":21,"user":"525805bbe4b0cb4875a45ca1"},{"problem":21,"code":"(fn [ls el]\n  (if (or (zero? el) (empty? ls))\n    (first ls)\n    (recur (rest ls) (- el 1))))","user":"59a512b7e4b066c664927d5e"},{"code":"(fn nth-element\n  [coll n]\n      (if coll\n        (cond\n          (zero? n) (first coll)\n          :else (nth-element (rest coll) (dec n)))\n        '()))","problem":21,"user":"4fd16778e4b04c3a95aa040f"},{"problem":21,"code":";#(first (drop %2 %1))\n\n#(loop [s %1 n %2] (if (= 0 n) (first s)(recur (rest s) (- n 1))))","user":"57c3808ce4b05aa3c4741cbf"},{"code":"(fn [list n]\n  (loop [x 0, s list]\n    (if (not= x n)\n      (recur (inc x) (rest s))\n      (first s))))","problem":21,"user":"4dae0e3cc9a9d6ed4c99dc57"},{"problem":21,"code":"(fn [l n]\n  (if \n    (= n 0) \n    (first l) \n    (recur (rest l) (- n 1))))","user":"541c47bbe4b01498b1a71a72"},{"problem":21,"code":"(fn [x y]\n  (first (drop y x))\n  )","user":"54c7b7c5e4b045293a27f63f"},{"problem":21,"code":"#(loop [sequ %1 count 0]\n    (if (= count %2)\n      (first sequ)\n      (recur (rest sequ) (inc count))))","user":"5842d06be4b089d5ab817e22"},{"code":"(fn [s i] \n  \t(if (= i 0) \n      \t(first s)\n      \t(recur (rest s) (dec i))))","problem":21,"user":"51662183e4b05e5ef6a5e807"},{"code":"(fn [seq index]\n  (loop [x seq i index] (\n    if (= i 0) (first x) (recur (rest x) (- i 1))\n  ))\n)","problem":21,"user":"4e7e05a6535db169f9c796fe"},{"code":"(fn [col n] (if (zero? n) (first col) (recur (rest col)(- n 1))))","problem":21,"user":"52d00a05e4b07d0d72b273b5"},{"problem":21,"code":"(fn [x n] \n  (if (= n 0) \n    (first x)\n    (recur (rest x) (dec n))))","user":"563ddefee4b0bfe05bf11857"},{"problem":21,"code":"(fn [lis n] (get (vec lis) n))","user":"54b7eebae4b0ed20f4ff6e8e"},{"problem":21,"code":"(fn [x,y] (if (= y 0)\n            (first x)\n           (recur (rest x) (- y 1))\n            )\n  )","user":"5434d921e4b0b6b47310fcf5"},{"problem":21,"code":"(fn ff [coll n] (if (<= n (dec (count coll))) (last (take (inc n) coll))  (throw (Exception. \"wrong n\"))))","user":"609980fce4b00e9e6653c408"},{"problem":21,"code":"(fn [a-list n] (get (into [] a-list) n))","user":"57d6c5cae4b0bd073c2023ce"},{"code":"(fn [coll, n] (first (drop n coll)))","problem":21,"user":"5286ee5ce4b0239c8a67ae28"},{"problem":21,"code":"#(last (drop-last (- (count %1) %2 1) %1))","user":"5aa8e841e4b0d174b936c8d5"},{"problem":21,"code":"(fn [haystack index]\n   (loop [xs (seq haystack)\n          i -1\n          result 0]\n     (if (not= index i)\n       (let [x (first xs)]\n         (recur (next xs) (inc i) x))\n       result)))","user":"5af361d4e4b0cc2b61a3bc83"},{"problem":21,"code":";; (fn [x y]\n;;   (loop [x x\n;;          y y]\n;;     (if (= y 0)\n;;       (first x)\n;;       (recur (rest x) (dec y))\n;;     )))\n(fn [xs n] (first (drop n xs)))","user":"57010394e4b08d47c97781cf"},{"code":"(fn [what where] (first (last (split-at where what))))","problem":21,"user":"51b0436ae4b0c53cf2e68a60"},{"problem":21,"code":"#(get (vec %1)  %2)","user":"53d5d24de4b0e771c302544a"},{"problem":21,"code":"#(loop [sequence % cursor %2]\n\n  (if (= cursor 0)\n\n    (first sequence)\n\n    (recur (rest sequence) (- cursor 1))))","user":"594a7ed1e4b07ddc2dafae02"},{"problem":21,"code":"(fn[iter n]\n  (if (= n 0)\n    (first iter)\n    (recur (rest iter) (dec n))))","user":"554f817ce4b00713264bd9a2"},{"code":"(fn [x i]\n  (if (= i 0) \n    (first x)\n    (recur (rest x) (- i 1))))","problem":21,"user":"4e80e0f2535db62dc21a62b8"},{"code":"(fn [xs , n] (if (= n 0) (first xs) (recur (rest xs) (- n 1))))","problem":21,"user":"5295ed30e4b02ebb4ef75028"},{"problem":21,"code":"(fn [seqn index] (last (take (inc index) seqn)))","user":"5da8e646e4b000c986472c2b"},{"problem":21,"code":"(fn [coll i] \n  (first (keep-indexed #(if (= %1 i) %2) coll)))","user":"52da4532e4b09f7907dd13b6"},{"problem":21,"code":"(fn mylast [l n] \n(if (= n 0) (first l) (mylast (rest l) (dec n)))\n)","user":"5c6748f0e4b0fca0c16226b6"},{"problem":21,"code":"(fn nlast [lst n]\n  (if (empty? lst)\n    nil\n    (loop [lst lst\n           n n\n           ]\n      (if (= n 0)\n        (first lst)\n        (recur (rest lst) (dec n))\n        )\n      )\n    )\n  )","user":"5c82db41e4b0c8042a70ce42"},{"problem":21,"code":"#(loop [acc 0 list %1 num %2]\n   (if (= num acc) (first list)\n     (recur (inc acc) (rest list) num)\n     )\n   )","user":"55e3ae2fe4b050e68259b447"},{"problem":21,"code":"(fn [col item] \n  (first (drop item col)))","user":"5e74ee53e4b085ba37836dde"},{"problem":21,"code":"(fn [x n]\n (if (= 0 n)\n   (first x)\n   (recur (rest x) (dec n))\n   )\n  )","user":"5984b9f3e4b021a7a535fe33"},{"code":"(fn [values n]\n  (first (drop n values)))","problem":21,"user":"521b339fe4b0c4ef0be83031"},{"code":"(fn ith-element [s i]\n  (if (= i 0)\n    (first s)\n    (ith-element (rest s) (- i 1))\n  )\n)","problem":21,"user":"4ffbc28ce4b0678c553fc3d4"},{"problem":21,"code":"(fn [coll y ] (if (= y 0) (first coll) (recur (rest coll) (dec y))))","user":"58de94e2e4b0a4d5acaab6f4"},{"problem":21,"code":"(fn [coll indx] ((vec coll) indx))","user":"58eff21ae4b056aecfd47dd9"},{"problem":21,"code":"(fn achar [lista p] (if (= p 0) (first lista) (recur (rest lista) (- p 1))))","user":"605f92bae4b03746e80ebf62"},{"code":"#((comp first last split-at ) %2 %1)","problem":21,"user":"4fc45c07e4b081705acca349"},{"problem":21,"code":"(fn [in-list n]\n  (loop [cnt n tmplist in-list]\n    (if (zero? cnt)\n      (first tmplist)\n      (recur (dec cnt) (rest tmplist))\n    )\n  )\n)","user":"57d9a1b0e4b0bd073c202403"},{"code":"#(loop [xs %1 n %2] (if (zero? n) (first xs) (recur (rest xs) (dec n))))","problem":21,"user":"53976599e4b0b51d73faaeea"},{"code":"(fn [elems n] (second (take-nth n elems)))","problem":21,"user":"4e03b010535d04ed9115e794"},{"code":"(fn get-nth [list n]\n  (first (nthnext list n))\n)","problem":21,"user":"4f77eb86e4b0fbe0118ec585"},{"problem":21,"code":"(fn [coll n] \n  (loop [col coll counter 0]\n    (if (= counter n)\n      (first col)\n      (recur (rest col) (inc counter)))))","user":"56877fcbe4b0dcc4269f405e"},{"code":"(fn return-nth [x, n] \n  (if (= n 0) \n    (first x) \n    (return-nth (rest x) (- n 1))))","problem":21,"user":"51f75836e4b06ff1c25c52d6"},{"code":"#( (vec %1) %2)","problem":21,"user":"4e5fb634535d8ccf87e9fe4a"},{"code":"(fn nnth [x, n] (if (= 0 n) (first x) (nnth (rest x) (- n 1))))","problem":21,"user":"4f03641a535dcb61093f6a9b"},{"problem":21,"code":"(fn [coll ind] (if (list? coll) (get (into [] coll) ind) (get coll ind)))","user":"546a9599e4b00cfc9eacc15d"},{"code":"(fn my-nth [l, n]\n  (if\n    (= 0 n) (first l)\n    (my-nth (rest l) (dec n))))","problem":21,"user":"534da51fe4b084c2834f4aa4"},{"code":"(fn [coll i] (last (take (+ i 1) coll)))","problem":21,"user":"4f0bba3d535d0136e6c22306"},{"problem":21,"code":";#((vec %1) %2)\n;#(first(drop %2 %1))\n#((apply comp (conj (repeat %2 rest) first)) %1)","user":"5eb4e4abe4b00a66d4a95222"},{"code":"#(last (first (split-at (+ %2 1) %1)))","problem":21,"user":"4df11fb2535d08e6dec9fe1a"},{"problem":21,"code":"(fn f [p n]\n  (if (= 0 n)\n  \t(first p)\n  \t(f (rest p) (- n 1))))","user":"554b0d42e4b0a04f7929957f"},{"problem":21,"code":"(fn nth-elem-in [list num]\n  (if (= num 0)\n    (first list)\n    (nth-elem-in (rest list) (dec num))))","user":"55fe9daee4b00f4cabc57654"},{"code":"(fn fbnth [s n]\n (if (= n 0)\n  (first s)\n(recur (rest s) (dec n))\n\n))","problem":21,"user":"4e70c0b1535d5021c1a89640"},{"problem":21,"code":"#(if (>= %2 0) (first (drop %2 %1)))","user":"5398d042e4b0b51d73faaf00"},{"code":"(fn [x  n] (first (drop n x)))","problem":21,"user":"52452225e4b0d8acf9ed6ae6"},{"problem":21,"code":"(fn [coll search-idx]\n  (loop [current-idx 0\n         search-coll coll]\n    (if (= current-idx search-idx)\n      (first search-coll)\n      (recur (inc current-idx) (rest search-coll)))))","user":"589b98fae4b00487982d533c"},{"code":"(fn [x y] (get (apply vector x) y))","problem":21,"user":"53703acde4b0fc7073fd6e91"},{"problem":21,"code":"(fn [lst n]\n  (cond \n   (zero? n) (first lst)\n   :else (first (second (split-at n lst)))))","user":"57fedf07e4b0d3187e9009dc"},{"code":"#(loop [count %2, coll %1]\n  (if (zero? count) (first coll)\n   (recur (dec count) (next coll))))","problem":21,"user":"4e89e939535d3e98b8023287"},{"problem":21,"code":"(fn nth-4c\n  [collection n]\n  (if (= n 0)\n    (first collection)\n    (nth-4c (next collection) (- n 1))))","user":"57d0cd58e4b0bd073c20235e"},{"problem":21,"code":"(fn [seq, ind] (second (find (into [] seq) ind)))","user":"582da1d5e4b051871117bfc7"},{"problem":21,"code":"(fn func [l n] (\n           if (= n 0) (first l) (func (rest l) (dec n))))","user":"59dfe78de4b08badc2a0c4df"},{"problem":21,"code":"(fn [s n] \n  (if (= 0 n) \n    (first s)\n    (recur (rest s) (- n 1))))","user":"565f9aece4b068f2fe63dc42"},{"problem":21,"code":"(fn bla [s p] (if (= p 0) (first s) (bla (rest s) (- p 1))))","user":"5a214798e4b0ff51aa4b32aa"},{"problem":21,"code":"(fn [sq p] \n\t(if (pos? p) \n      (recur (rest sq) (dec p))\n      (first sq) \n    )\n)","user":"55132a33e4b055c2f668d4c1"},{"code":"(fn [l idx]\n  (loop [newidx 0 nrest l]\n    (if (= newidx idx)\n      (first  nrest)\n      (recur (+ newidx 1) (rest nrest)))))","problem":21,"user":"51696bcde4b03f62cda68ce7"},{"problem":21,"code":"(fn [col, ind] (second (take-nth ind col)))","user":"57064231e4b0b0fb43fd067a"},{"problem":21,"code":"(fn my-nth [l n]\n  (assert (< n (count l)) \"Index out of bound\")\n  (assert (>= n 0) \"Negative n not allowed\")\n  (if (= n 0)\n    (first l)\n    (my-nth (rest l) (- n 1))))","user":"548c8115e4b0e286459a120c"},{"problem":21,"code":"(fn [arr n] (last (take (inc n) arr)))","user":"52f76053e4b047fd55836fc1"},{"code":"(fn [s i]\n  (get (vec s) i))","problem":21,"user":"50d2add9e4b06ad58337ed11"},{"code":"(fn a [v x]\n  (if (= 0 x) (first v) (a (rest v) (- x 1)))\n)","problem":21,"user":"4f8b2f79e4b02e764a0a517a"},{"problem":21,"code":"(fn foo [l n] (if (== n 0) (first l) (foo (rest l) (dec n))))","user":"57a9b2dbe4b0a96607956233"},{"code":"(fn [col n]\n  (loop [a-col col\n         a-n n]\n    (if (= 0 a-n)\n      (first a-col)\n      (recur (rest a-col) (dec a-n)))))","problem":21,"user":"5151c184e4b03e678e393add"},{"code":"(fn [xs n]\n  (loop [xs xs\n         n n]\n    (if (= 0 n)\n      (first xs)\n      (recur (rest xs) (dec n)))))","problem":21,"user":"53749bbbe4b06d7f452d9e25"},{"problem":21,"code":"(fn [x y](first(drop y x )))","user":"5cfa33eae4b0cc9c9158813b"},{"code":"(fn [lst n]\n  (if (= (count lst) (+ n 1))\n    (last lst)\n    (recur (butlast lst) n)\n    )\n  )","problem":21,"user":"517b4d8ae4b0925c997201cf"},{"code":"(fn index [s i] (if (= i 0) (first s) (index (rest s) (- i 1))))","problem":21,"user":"514457fbe4b0b4fb4ace5f43"},{"code":"(fn [lst idx] \n  (if (= 0 idx) (first lst) (recur (rest lst) (- idx 1)))\n  )","problem":21,"user":"524b1bf7e4b09eba1c0223c3"},{"problem":21,"code":"; My solution was\n(fn nth-element \n  [coll N]\n  (first (drop N coll)))\n\n; Found this one here: http://yyhh.org/blog/2011/05/my-solutions-first-50-problems-4clojure-com.\n; Very neat!\n;#((vec %) %2)\n; It works because the clojure vector is a function that returns the element of the vector at the given index","user":"555df9c8e4b0a2eb076a39b2"},{"code":"(fn [l n]\n    (if (zero? n)\n        (first l)\n        (recur (rest l) (dec n))))","problem":21,"user":"4e6a60cd535d8ccf87e9fed7"},{"problem":21,"code":"(fn n [a-seq pos]\n  (if (zero? pos) (first a-seq) (n (rest a-seq) (dec pos))))","user":"54f39ce3e4b050824f58f5c7"},{"problem":21,"code":"(fn [lst n]\n (get (first (filter #(= (get % 0) n) (map-indexed vector lst))) 1))","user":"57f81549e4b0d3187e900918"},{"problem":21,"code":"(fn [coll pos]\n  (if (zero? pos)\n    (first coll)\n    (recur (rest coll) (- pos 1))))","user":"59d9186be4b0ef0a1e9b5c50"},{"problem":21,"code":"(fn [seq n] (loop [acc seq counter 0]\n               (if (= counter n) (first acc) (recur (rest acc) (inc counter)))))","user":"55cfdfc9e4b0e31453f64a35"},{"code":"(fn find-nth [init-sq n]\n  (loop [ind 0 sq init-sq]\n    (if (= n ind)\n      (first sq)\n      (recur (inc ind) (rest sq)))))","problem":21,"user":"5084c43be4b0fb8f40674bfa"},{"code":"(fn new-nth [coll n]\n  (if (= 0 n)\n      (first coll)\n    (new-nth (rest coll) (dec n))))","problem":21,"user":"4ff2ee54e4b0678c553fc340"},{"problem":21,"code":"(let \n   [itemn (fn [self l n] \n            (if (zero? n) \n              (first l) \n              (self self (rest l) (dec n))))] \n  (partial itemn itemn))","user":"533975f0e4b0e30313ee6ca9"},{"problem":21,"code":"(fn [xs n] \n  (if (= n 0)\n    (first xs)\n    (recur (rest xs) (- n 1))\n    ))","user":"5b3b70c6e4b02d533a91bbd4"},{"problem":21,"code":"(fn r [x n] (if (= n 0) (first x) (r (rest x) (- n 1))))","user":"5445246ae4b032a45b869396"},{"code":"(fn [x, y] (last (take (inc y) x)))","problem":21,"user":"4f9b27d7e4b0dcca54ed6d12"},{"problem":21,"code":"#(->> %1 (take (+ 1 %2)) last)","user":"570a2357e4b0b0fb43fd06b5"},{"problem":21,"code":"(fn [col, n] (first(nthnext col n)))","user":"5a80ad4be4b00b71e582a058"},{"problem":21,"code":"(fn meow [xs elem] (if (= elem 0) (first xs) (meow (rest xs) (dec elem))))","user":"5d6a9b96e4b04d129b00f29d"},{"code":"(fn[x y](first(reverse (take (+ y 1) x))))","problem":21,"user":"50fc9f6fe4b0d10d794c19fa"},{"problem":21,"code":"(fn [coll d] \n  (if (= d 0)\n    (first coll)\n    (recur (rest coll) (dec d))))","user":"5c813b27e4b0c8042a70ce22"},{"problem":21,"code":"(fn nth-element\n  [s n]\n  (if (pos? n)\n    (nth-element (rest s) (dec n))\n    (first s)))","user":"5ec02e20e4b00a66d4a95288"},{"problem":21,"code":"(fn my-nth [li n]\n  (first (drop n li)))","user":"57082299e4b0b0fb43fd0698"},{"problem":21,"code":"(fn [x n] \n  (loop [x x c 0]\n    (if (= n c) \n      (first x)\n      (recur (rest x) (inc c)))))","user":"5839f079e4b089d5ab817d48"},{"problem":21,"code":";;(fn [iterable, index] ((zipmap (range (count iterable)) iterable) index))\n\n#((zipmap (range (count %)) %) %2)","user":"55e70606e4b050e68259b48f"},{"problem":21,"code":"(fn [coll i] (first (nthrest coll i)))","user":"543bd52be4b032a45b869336"},{"code":"(fn [l k] \n  (if (= k 0) (first l) (recur (rest l) (dec k) ) ))","problem":21,"user":"4fc43a8ee4b081705acca346"},{"problem":21,"code":"(fn [x y] \n  (loop [s x c y]\n(if (= c 0)\n(first s)\n(recur (rest s) (dec c)))))","user":"57af74aee4b0fbc9809a2736"},{"code":"(fn [coll index]\n  (if (> index 0)\n    (recur (rest coll) (- index 1))\n    (first coll)))","problem":21,"user":"502f6c56e4b0842eb223d8bb"},{"code":"(fn f[l n] (if (zero? n) (first l) (f (rest l) (dec n))))","problem":21,"user":"4f83e712e4b033992c121c25"},{"code":"(fn [li, n]\n  (loop [l li, nu n]\n    (if (pos? nu)\n      (recur (next l) (dec nu)) (first l))))","problem":21,"user":"52cf5450e4b07d0d72b273a4"},{"problem":21,"code":"(fn testfn\n  ([vals index] (if (= index 0)\n                  (first vals)\n                  (testfn (rest vals) (dec index))\n                  )\n                )\n  )","user":"563fb212e4b08d4f616f5ed5"},{"code":"(fn [coll n] (.get coll n))","problem":21,"user":"4eb59464535d7eef30807369"},{"problem":21,"code":"(fn nt [c n] (if (= n 0) (first c) (nt (rest c) (- n 1))))","user":"561e8b11e4b064ca9f4b16c0"},{"code":"#(loop [l %1\n        n %2]\n   (if (zero? n) (first l)\n     (recur (rest l) (dec n))))","problem":21,"user":"537e745ae4b06839e8705ea6"},{"problem":21,"code":"(fn [l acc]\n  (first (nthnext l acc)))","user":"54982522e4b0b312c081ff7c"},{"problem":21,"code":"(fn enth [x y] (last (take (+ 1 y) x)))","user":"59e66ac5e4b08badc2a0c570"},{"code":"(fn [list n] ( first (nthnext list n )) )","problem":21,"user":"5184df3ee4b02826a645f39b"},{"code":"(fn [seq num] (last (take (+ num 1) seq)))","problem":21,"user":"5269877de4b03e8d9a4a71f0"},{"code":"(fn [seq, n] (first (drop n seq)))","problem":21,"user":"4ec58aaa535d6d7199dd36a6"},{"problem":21,"code":"(\n fn n [l i] (\n             if (= i 0)\n             \t(first l)\n             \t(n (rest l) (- i 1))\n             )\n)","user":"5e958767e4b0fbed045a380b"},{"problem":21,"code":"(fn [s i]\n      (last (take (inc i) s)))","user":"570bd29be4b0b0fb43fd06c5"},{"code":"(fn [s n] (first (keep-indexed #(when (= n %1) %2) s)))","problem":21,"user":"4ea41fc2535d7eef308072cb"},{"code":"#(last (drop-last %2 (reverse %1)))","problem":21,"user":"4fc4dca8e4b081705acca350"},{"problem":21,"code":"(fn[xs n]\n  (if (= n 0) (first xs) (recur (rest xs) (dec n))))","user":"58d71ef5e4b03c36ff7e597f"},{"code":"(fn mynth [x n] (cond (= n 0) (first x) :else (mynth (rest x) (- n 1))))","problem":21,"user":"520ab586e4b01da9d47a99e8"},{"code":"(fn n-th [se x]\n  (loop [i 0 s se]\n    (if (= i x)\n      (first s)\n      (recur (inc i) (rest s)))))","problem":21,"user":"535afd76e4b04ce2eb3ed2ab"},{"problem":21,"code":"(fn nth' [coll n] \n  (if (> n 0)\n    (nth' (rest coll) (dec n))\n    (first coll)))\n\n;(fn nth'\n;  [coll n]\n;  (last (take n coll)))","user":"576a0ddbe4b0a07e8fc18106"},{"problem":21,"code":"(fn nth' [v idx]\n  (get (vec v) idx))","user":"59362afee4b0d6bb3c60df69"},{"code":"(fn myfunc [x y] \n  (if (= y 0) \n    (first x) \n    (myfunc (next x) (- y 1))))","problem":21,"user":"4f0d1cf3535d0136e6c22314"},{"code":"(fn enth [lst index] (if (= index 0) (first lst) (enth (rest lst) (dec index))))","problem":21,"user":"50d4dde8e4b09cc622d65a72"},{"code":"(fn nlast[x y] \n  (if (= y 0)\n    (first x)  \n    (nlast (rest x) (- y 1))     \n  )\n)","problem":21,"user":"50a628e3e4b0aa96157e2620"},{"problem":21,"code":"(fn [a b] (first (last (take (+ b 1) (iterate rest a)))))","user":"5643b67ae4b0018b46ad8bfe"},{"problem":21,"code":"(fn foo [lst n] \n  (cond \n   (<= n 0) (first lst)\n   :else (foo (rest lst) (- n 1))\n  )\n)","user":"5ff214e7e4b05ac5b16ea1fa"},{"problem":21,"code":"(fn nnth [li n]\n  (if (= n 0)\n    (first li)\n    (nnth (rest li) (- n 1))\n  )\n)","user":"545944a2e4b01be26fd74627"},{"code":"(fn [seq1 pos] (first (drop pos seq1)))","problem":21,"user":"5112bf27e4b0350614f07a7e"},{"code":"#(loop [a % n 0] (if (= n %2) (first a) (recur (rest a) (+ n 1))))","problem":21,"user":"4e588e84535d8a8b8723a294"},{"code":"(fn [list index] (if (pos? index) (recur (rest list) (dec index)) (first list)))","problem":21,"user":"4e717065535d5021c1a8964a"},{"code":"(fn n[l, i] (if (= 0 i) (first l) (n (next l) (dec i))))","problem":21,"user":"4f245d77e4b0d66497709feb"},{"code":"(fn nth-fn [sqs pos] (first (nthnext sqs pos)))","problem":21,"user":"4ef2eb4d535dced4c769f226"},{"code":"#(loop [coll %1 index %2]\n   (if (= index 0)\n     (first coll)\n     (recur (rest coll)\n            (dec index)\n            )\n     )\n   )","problem":21,"user":"5226f2a1e4b04e78ff2e1999"},{"problem":21,"code":";(fn [lst pos]\n;  (loop [l lst n pos]\n;    (if (zero? n)\n;      (first l)\n;      (recur (rest l) (- n 1)))))\n#(first (drop %2 %))","user":"57035ccfe4b08d47c97781ef"},{"problem":21,"code":"(fn [l n]\n  (if (= n 0)\n    (first l)\n    (recur (rest l)(dec n))))","user":"55f274b2e4b06e875b46ce44"},{"problem":21,"code":"#(loop [arr %1 n %2]\n   (if (= n 0)\n     (first arr)\n     (recur (rest arr) (dec n))))","user":"5d2cc16ee4b01671435dbc96"},{"code":"(fn [col n]\n  (if (= n 0)\n    (first col)\n    (recur (rest col) (dec n))))","problem":21,"user":"514b83b4e4b0bd81940b86ce"},{"problem":21,"code":"(fn[my-seq nth-ele]\n  (loop [x my-seq\n         rtn-ele nth-ele]\n    (if (= 0 rtn-ele)\n      (first x)\n      (recur (rest x) (dec rtn-ele))\n      )\n    )\n  )","user":"5b97c521e4b0c0b3ffbd4a9a"},{"problem":21,"code":"#(loop [n %2 col %]\n  (if (= n 0)\n    (first col)\n    (recur (dec n) (rest col))\n  )\n)","user":"58bb6f67e4b0888cdc949cf7"},{"code":"(fn mth [l m] \n  (if (= m 0)\n    (first l)\n    (recur (rest l) (dec m))  \n))","problem":21,"user":"529b0f84e4b02ebb4ef7509c"},{"problem":21,"code":"(fn custom-nth [coll index]\n   (if (= index 0)\n     (first coll)\n     (recur (rest coll) (dec index))))","user":"5508b405e4b06e50f9beb110"},{"code":"(fn [the-seq the-nth]\r\n  (loop [s the-seq n the-nth]\r\n    (if (zero? n)\r\n      (first s)\r\n      (recur (rest s) (dec n)))))","problem":21,"user":"4df3df8a535d08e6dec9fe2d"},{"problem":21,"code":"(fn [coll x] \n  (last (take (+ x 1) coll))\n  )","user":"60752ef6e4b069485764de55"},{"problem":21,"code":"(fn[x y] (last(take (+ y 1) x)))","user":"59300b0ee4b072a2710fcfd3"},{"code":"(fn [x n]\n  (first (reverse (take (+ n 1) x))))","problem":21,"user":"538e864ee4b0b51d73faae87"},{"code":"(fn new-nth [coll n]\n  (if (zero? n) \n    (first coll) \n    (new-nth (rest coll) (dec n))))","problem":21,"user":"4f50c414e4b03ad3f0c10d0d"},{"problem":21,"code":"(fn [coll idx]\n  (loop [c coll curr 0]\n    (if (= curr idx)\n      (first c)\n      (recur (rest c) (inc curr)))))","user":"59250d2be4b072a2710fce64"},{"problem":21,"code":"(fn [arr x] ((into [] arr) x))","user":"59884b32e4b021a7a535feb2"},{"code":"(fn [coll idx] (first (drop idx coll)))","problem":21,"user":"4faea420e4b081705acca24c"},{"code":"#(.get (vec %1) %2)","problem":21,"user":"51008b41e4b0700a7a02d6e3"},{"code":"(fn nths [xs n] (if (= n 0) (first xs) (nths (rest xs) (- n 1))))","problem":21,"user":"530b6ea2e4b02e82168697cb"},{"code":"(fn recr [s i] \n  (if (= 0 i) (first s) (recr (rest s) (- i 1))))","problem":21,"user":"51da261ce4b02ceefd94775d"},{"code":"(fn [coll idx]\n  (if (= idx 0)\n     (first coll)\n     (recur (rest coll) (- idx 1))))","problem":21,"user":"4fc7db47e4b0ee37620e182a"},{"code":"(fn [x n] (if (= n 0) (first x) (recur (rest x) (- n 1))))","problem":21,"user":"4e059278535d04ed9115e7a5"},{"code":"(fn  [x y]\n    (if (= y 0)\n      (first x)\n      (recur (rest x) (- y 1))\n    )   \n)","problem":21,"user":"4e5f17b5535d8a8b8723a2dd"},{"problem":21,"code":"(fn algo \n  [lst n]\n  (first (drop n lst))\n  )","user":"59e56c75e4b08badc2a0c556"},{"code":"(fn [coll index] (first (filter #(not (nil? %)) (keep-indexed (fn [x y] (if (= x index) y)) coll))))","problem":21,"user":"529e36b4e4b04e0c58e87b91"},{"problem":21,"code":"(fn mynth [lst cnt] \n  (if (= cnt 0) \n    (first lst) \n    (mynth (rest lst) (- cnt 1))))","user":"544285dde4b032a45b869380"},{"problem":21,"code":"#(loop [i %2 arr %]\n    (if (= i 0)\n      (first arr)\n      (recur (dec i) (rest arr))\n      )\n    )","user":"5ed92e8fe4b0c7845d86b0dd"},{"code":"(fn [seq n]\n  (letfn [(my-nth-rec [s num]\n            (if (= num n)\n              (first s)\n              ;else\n              (recur (rest s) (inc num))))]\n    (my-nth-rec seq 0)))","problem":21,"user":"51fe9d7ce4b0f1313d468a70"},{"code":"(fn [seq n]\n  (if (= n 0)\n    (first seq)\n    (recur (next seq) (- n 1))))","problem":21,"user":"4f8490fae4b033992c121c34"},{"code":"(fn n-th-element [x n]\n  (loop [r x i n]\n    (if (= i 0)\n      (first r)\n      (recur (rest r) (dec i)))))","problem":21,"user":"50602bc6e4b08f2a82ad10ba"},{"problem":21,"code":"(fn [coll numth] (last (take (+ 1 numth) coll)))","user":"5c504d8ae4b0f9f7a8770ec1"},{"code":"#(loop [list %1, n %2] (if (= n 0) (first list) (recur (rest list) (dec n))))","problem":21,"user":"5089a4e3e4b037578f03c8b8"},{"code":"(fn [l n] (if (= 0 n) (first l) (recur (rest l) (dec n))))","problem":21,"user":"50b8e9a4e4b0cba0e598b656"},{"problem":21,"code":"(fn [coll n]\n  (loop [xs coll\n         i n]\n    (if (= 0 i)\n      (first xs)\n      (recur (rest xs) (dec i)))))","user":"560124b0e4b04bb52996e17b"},{"problem":21,"code":"#(loop [cnt %2 tmp-list %1] (if (zero? cnt) (first tmp-list) (recur (dec cnt) (rest tmp-list))))","user":"5cc7692ce4b0ccb061962837"},{"problem":21,"code":"(fn a [col n] (last (take (+ n 1) col))  )","user":"55bb7546e4b01b9910ae29e7"},{"problem":21,"code":"(fn nth-element [list x] (if (= x 0) (first list) (nth-element (rest list) (- x 1))))","user":"5deab868e4b0986d99407fa1"},{"problem":21,"code":"#(loop [s %1 n %2]\n   (if (zero? n)\n     (first s)\n   (recur (rest s) (dec n))))","user":"5758bd91e4b02ea114799311"},{"code":"(fn nth-el [seq n] \n  (if (and (> (count seq) 0) (> n 0))\n    (nth-el (rest seq) (dec n))\n    (first seq)))","problem":21,"user":"5141bc82e4b02fd87f5064c5"},{"problem":21,"code":"(fn mth [coll position]\n  (get (vec coll) position))","user":"53d70f3be4b0e771c302545f"},{"code":"(fn f [list n] (\n  cond \n    (> n 0) (f (rest list) (- n 1))\n    :else (first list)\n  ))","problem":21,"user":"5051ed55e4b0a561d07d8f0e"},{"problem":21,"code":"#( ->> %1 (iterate rest) (take ( inc %2 )) last first )","user":"54fc7d89e4b07d26eda61d2b"},{"problem":21,"code":"(fn get-nth [x n] (if (= n 0) (first x) (get-nth (rest x) (- n 1))))","user":"57d1d6c8e4b0bd073c202370"},{"code":"(fn [list ndx] (first (drop (- ndx 0) list)))","problem":21,"user":"4fa8b87de4b081705acca1d7"},{"code":"(fn find-nth [input-seq n]\n  (loop [user-list input-seq count 0]\n    (if (= count n)\n      (first user-list)\n      (recur (rest user-list) (inc count)))))","problem":21,"user":"5029faf6e4b023940c84aa46"},{"problem":21,"code":"#(loop [i %1]\n   (if (< (- (count %1) (count i)) %2) (recur (rest i)) (first i)))","user":"5c481764e4b0e06e1360a3ba"},{"problem":21,"code":"#(loop [l (if (seq? %1) %1 (into '() (reverse %1))), c %2] (if (zero? c) (first l) (recur (pop l), (dec c)) ))","user":"5492164ee4b0b312c081ff3e"},{"code":"(fn\n  [l ith]\n  (last \n   (take (+ 1 ith) l)))","problem":21,"user":"50bdef33e4b0594b91591c86"},{"code":"(fn [s n] \n  (if (= n 0)\n      (first s)\n      (recur (rest s) (dec n))))","problem":21,"user":"4f951375e4b0dcca54ed6cc8"},{"code":"(fn [x n] (last(take (+ n 1)  x)))","problem":21,"user":"51ca0f39e4b09ce160bef5b7"},{"problem":21,"code":"(fn [l n]\n   (loop [l l\n          n n]\n     (if (= n 0)\n       (first l)\n       (recur (next l) (- n 1)))))","user":"55c66ffee4b0e31453f649c2"},{"code":"(fn [s i] (loop [s-prime s\n                 i-prime i]\n            (if (= i-prime 0)\n              (first s-prime)\n              (recur (rest s-prime) (dec i-prime)))))","problem":21,"user":"4f0b3c88535d0136e6c22301"},{"problem":21,"code":"(fn nnth [xs n] \n  (if \n    (= n 0) \n    (first xs) \n    (nnth \n      (rest xs) \n      (dec n))))","user":"5d6a7e92e4b04d129b00f299"},{"problem":21,"code":"(fn sel [l n]\n  (if (= n 0)\n    (first l)\n    (sel (rest l) (- n 1))))","user":"55b782c6e4b01b9910ae29a5"},{"problem":21,"code":"(fn [x y]\n  (first\n   (nthrest x y)))","user":"58376b71e4b089d5ab817d18"},{"code":"(fn [col n] \n  (if (= 0 n) \n    (first col) \n    (recur (rest col) (- n 1))))","problem":21,"user":"52108d97e4b080a8d9b9d63d"},{"problem":21,"code":"(fn [lst n]\n  (loop [i 0\n         l lst]\n      ; If count reaches 0 then exit the loop and return sum\n      (if (= i n)\n        (first l)\n      ; Otherwise add count to sum, decrease count and \n      ; use recur to feed the new values back into the loop\n      (recur (+ i 1) (rest l)))\n  )\n)","user":"5d6fae1ee4b04d129b00f2d4"},{"problem":21,"code":"(fn [v n](loop [v v, cpt 0](if(= cpt n) (first v) (recur (rest v) (inc cpt)))))","user":"5a786223e4b013a48d39976b"},{"problem":21,"code":"(fn [x y] (get (zipmap (range) x) y))","user":"5796adf3e4b039eba2ecb0ea"},{"problem":21,"code":"(fn [lst nb] (last (take (+ nb 1) lst)))","user":"570d4c30e4b0b0fb43fd06da"},{"problem":21,"code":"(fn f [s n] (if (= n 0)\n                (first s)\n                (f (rest s)(- n 1))))","user":"5578c67fe4b05c286339e08d"},{"problem":21,"code":"(fn [col indx] (last (take (inc indx) col)))","user":"5cdd7157e4b05ee0cb31175b"},{"problem":21,"code":"(fn nelem [coll n]\n  (first(drop n coll)))","user":"58e63de2e4b056aecfd47cad"},{"code":"(fn [vec n] (loop [vec vec\n                   n n] (if (= n 0) (first vec) (recur (rest vec) (- n 1)))))","problem":21,"user":"521f24ebe4b0e6c71e0c0bcd"},{"problem":21,"code":"(fn z [s i]\n  (if (= i 0)\n    (first s)\n    (recur (rest s) (dec i))))","user":"559279b7e4b0604b3f94d58c"},{"code":"(fn n-element [x n] \n            \t\t\t(if (= n 0)\n                            (first x)\n                       \n                            (n-element (rest x) (- n 1))\n                         )\n                     \n )","problem":21,"user":"5340ee60e4b00652c8746ec9"},{"code":"(fn nth-elem [x n] \n  (if (== n 0) (first x) (nth-elem (rest x) (- n 1))))","problem":21,"user":"4fe8b85be4b07c9f6fd12c77"},{"code":"(fn [l i] (last (first (split-at (+ 1 i) l))))","problem":21,"user":"5301a13ae4b0d8b024fd371e"},{"problem":21,"code":"(fn [x i]\n  (loop [tally 0\n         myseq x]\n    (if (or (= i tally)(empty? myseq))\n      (first myseq)\n      (recur (inc tally) (rest myseq)))))","user":"56646a7fe4b0e91d5f5c5657"},{"problem":21,"code":"(fn find [col idx]\n  (if (zero? idx)\n    (first col)\n    (recur (rest col) (- idx 1))))","user":"5d94816ce4b0d3f9b434ad28"},{"problem":21,"code":"#(get  (into [] %1) %2 )","user":"56ede653e4b04a395b9a0449"},{"problem":21,"code":"(fn [lst x] (first (drop x lst)))","user":"57758f5de4b0979f89651621"},{"code":"(fn nthElement[x n] (if (= n 0) (first x) (nthElement (rest x) (- n 1))))","problem":21,"user":"50ef311fe4b0a78662fa2651"},{"code":"(fn get-nth-element [collection index]\n  (if (= index 0)\n    (first collection)\n    (get-nth-element (rest collection) (dec index))))","problem":21,"user":"53713ebee4b0fc7073fd6ead"},{"problem":21,"code":"(fn [s n]\n  (loop [i 0\n         r s]\n    (if (= i n)\n      (first r)\n      (recur (inc i) (rest r)))))","user":"5de0b844e4b0948ae9d9adea"},{"code":"(fn [items n]\n  (if (zero? n)\n    (first items)\n    (recur (rest items) (- n 1))))","problem":21,"user":"511720eae4b0063b4e3e16da"},{"code":"(fn [s i]\n  (when (seq s)\n    (if (zero? i)\n      (first s)\n      (recur (next s) (dec i)))))","problem":21,"user":"4e71cc2e535d5021c1a89652"},{"code":"#(if (= %2 0)\n   (first %1)\n   (recur (rest %1) (dec %2)))","problem":21,"user":"5328e449e4b09d4e7a9b550c"},{"code":"(fn nth_ [xs n]\n  (if (= 0 n)\n     (first xs)\n     (nth_ (rest xs) (- n 1))))","problem":21,"user":"4f04d011535dcb61093f6be5"},{"problem":21,"code":"(fn [coll order] (first(drop order coll)))","user":"5673f804e4b05957ce8c6126"},{"problem":21,"code":"(fn nth-element\n  [x n]\n  (if (= n 0)\n    (first x)\n    (nth-element (rest x) (- n 1))))","user":"57109477e4b09c608db70435"},{"code":"(fn enth [list n]\n  \t(if (= 0 n)\n      (first list)\n      (enth (rest list) (- n 1))))","problem":21,"user":"51b01309e4b0c53cf2e68a57"},{"code":"(fn [seq pos] (loop [cur 0 seq seq] (if (< cur pos) (recur (inc cur) (rest seq)) (first seq))))","problem":21,"user":"52fa8f71e4b047fd55836ffb"},{"problem":21,"code":"(fn find-nth [xs n] (if (= n 0) (first xs) (find-nth (rest xs) (dec n))))","user":"587cbebbe4b01531a375eb24"},{"problem":21,"code":"#(-> %2 inc (take %1) reverse first)","user":"55ccd9d1e4b0e31453f64a17"},{"code":"(fn[s n] (last (take (+ n 1) s)))","problem":21,"user":"518de98fe4b0c929d50502e0"},{"code":"(fn [x y] (if (= 0 y) (first x) (recur (rest x) (- y 1)) ))","problem":21,"user":"51838e8be4b028ec5fd2f2a0"},{"problem":21,"code":"(fn [v spot] (first (drop spot v)))","user":"5a9373d5e4b0d174b936c722"},{"problem":21,"code":"(fn mynth [s n] (if (= n 0) (first s) (recur (next s) (- n 1))))","user":"5d444819e4b07c84aa5ae69c"},{"problem":21,"code":"(fn xnth [coll n]\n  (loop [count 0, s coll]\n    (if (seq s)\n      (if (= count n) \n        (first s)\n        (recur (inc count) (next s))\n      )\n      nil\n    )\n  )\n)","user":"564ecc9ee4b0284900eef6a1"},{"problem":21,"code":"(fn func [seq n]\n  (if (= n 0)\n    (first seq)\n    (func (rest seq) (- n 1))))","user":"5ef381a3e4b07c55ae4a053c"},{"problem":21,"code":"(fn a [x c] \n  (if (= 0 c ) (first x ) (a (rest x) (- c 1 ) ) )\n)","user":"53fbf9bce4b0de5c41848586"},{"code":"(fn [seq n]\n  (if (zero? n) (first seq) (recur (rest seq) (dec n))))","problem":21,"user":"4f03d0fe535dcb61093f6b6d"},{"code":"(fn my-nth\n  \t\t[item n] (if (not= 0 n) (my-nth (next item) (dec n)) (first item))\n\t\t\t)","problem":21,"user":"505f1305e4b08f2a82ad10ac"},{"code":"(fn[x n](first(drop n x)))","problem":21,"user":"51e6c413e4b0730ab87cf33b"},{"code":"(fn f [c x] (if (= x 0) (first c) (f (rest c) (dec x))))","problem":21,"user":"4fcf6abce4b03432b189f411"},{"problem":21,"code":"(fn [elements index]\n  (let [vec (into [] elements)]\n  (loop [cur-index 0]\n    (if (= cur-index index)\n      (get vec cur-index)\n      (recur (inc cur-index))))))","user":"55a5e2f7e4b0acc240e31550"},{"problem":21,"code":"(fn [s n] (loop [s s n n]\n                  (if (= 0 n)\n                    (first s)\n                    (recur (rest s) (dec n)))))","user":"56cc34aee4b0ea9b8538f73c"},{"problem":21,"code":"(fn[coll n]\n  (last(take(inc n) coll)))","user":"53e32cf7e4b036ad0777e3fd"},{"problem":21,"code":"(fn [seq, index] (first (reverse (take (inc index) seq))))","user":"5cb0e2fee4b026601754b8bf"},{"code":"(fn nelem [lst n] (if (= n 0) (first lst) (recur (rest lst) (- n 1))))","problem":21,"user":"50063098e4b0678c553fc47a"},{"code":"#(if (zero? %2) (first %) (recur (rest %) (dec %2)))","problem":21,"user":"4fab0b6be4b081705acca20c"},{"code":"(fn [x n] (if (= n 0) (first x) (recur (rest x) (dec n))))","problem":21,"user":"5012da69e4b0c8732600222d"},{"code":"#(loop [x %2 l %1]\n  (if (= 0 x) (first l)\n    (recur (dec x) (rest l))))","problem":21,"user":"4f3afdd0e4b0e243712b1f20"},{"problem":21,"code":"(fn [l n]\n  (loop [i 0 list_remaining l]\n    (if (= i n)\n      ;;true\n      (first list_remaining)\n      ;;false\n      (recur (inc i) (rest list_remaining)))))","user":"5ce56db6e4b0a17bb84e2b72"},{"code":"(fn [x y]\n\t(last (first (partition (inc y) x))))","problem":21,"user":"51a89081e4b08d8ec191b814"},{"code":"(fn [lst n]\n    (if (zero? n)\n      (first lst)\n      (recur (rest lst) (- n 1))))","problem":21,"user":"4e964f4a535dbda64a6f6b42"},{"problem":21,"code":"(fn [col n]\n  (if (zero? n)\n   (first col)\n   (recur (rest col) (dec n))))","user":"55729a78e4b09a3098a52547"},{"code":"(fn [alist anum] (last (take (inc anum) alist)))","problem":21,"user":"517d2ee8e4b0f5e87c18f260"},{"problem":21,"code":"(fn [coll th] (last (take (+ 1 th) coll)))","user":"574ff497e4b02ea114799266"},{"problem":21,"code":"(fn [sq n]\n  (assert (<= n (count sq)))\n  (loop [times 0\n         xs  sq]\n    (if (= times n)\n      (first xs)\n      (recur (inc times) (next xs)))))","user":"5e0ceca5e4b099d064962f91"},{"code":"(fn [x n] (last (take (+ n 1) (seq x))))","problem":21,"user":"528e64b7e4b0239c8a67aedd"},{"problem":21,"code":"(fn\n  [xs n]\n  (if (= n 0)\n    (first xs)\n    (recur (rest xs) (- n 1))))","user":"5a8b6d42e4b05369db4d24e6"},{"problem":21,"code":"(fn [s n]\n  (loop [items s]\n    (if (= (count items) (- (count s) n))\n      (first items)\n      (recur (rest items)))))","user":"5de4f858e4b0948ae9d9ae09"},{"code":"#( first (drop %2 %1))","problem":21,"user":"503c02e5e4b0fc0f99c2e54e"},{"code":"(fn [s n]\n  (if (zero? n) (first s)\n      (recur (rest s) (dec n))))","problem":21,"user":"4f58d92fe4b0a7574ea71858"},{"code":"(fn [x y](loop [s x, i y] (if (= i 0) (first s) (recur (rest s) (- i 1)))))","problem":21,"user":"51a7f74be4b08d8ec191b802"},{"code":"(partial (fn my-nth [i coll target]\n  (if (= i target)\n      (first coll)\n      (my-nth (+ 1 i) (rest coll) target))) 0)","problem":21,"user":"50a407fee4b08bbd0eb4ed32"},{"problem":21,"code":"#( get (vec %1)   %2)","user":"5577318ce4b05c286339e07c"},{"problem":21,"code":"(fn [mylist pos] (first (drop pos mylist)))","user":"5a26c828e4b07f18be40aa4b"},{"problem":21,"code":"(fn my-nth [coll pos]\n  (let [reversed (reverse coll)]\n    (first (loop \n      [i 0 \n      work-coll coll]\n             (if (< i pos)\n              (recur (inc i) (rest work-coll))\n              work-coll)))))","user":"59b8ee96e4b0a024fb6ae3c0"},{"code":"(fn [items n]\n  (loop [current 0 items items]\n    (if (= current n)\n      (first items)\n      (recur (inc current) (rest items)))))","problem":21,"user":"4f0ad254535d0136e6c222fa"},{"problem":21,"code":"(fn [list num] (last (take (inc num) list)))","user":"56499a5de4b0284900eef644"},{"problem":21,"code":"(fn [col n]\n\t(if (= n 0)\n  \t\t(first col)\n  \t\t(recur (rest col) (dec n))))","user":"547c2c6ce4b0c51c1f4d72e3"},{"problem":21,"code":"#(loop [li %1 n %2] \n    (if (zero? n)\n      (first li)\n      (recur (rest li) (dec n))))","user":"569b84f8e4b0542e1f8d1453"},{"code":"(fn [x c] (if (= 0 c) (first x) (recur (next x) (- c 1))))","problem":21,"user":"4fe5895be4b0e8f79898fec6"},{"problem":21,"code":"(fn f [x n] (cond (= 0 n) (first x) true (f (rest x) (- n 1))))","user":"5ae7ed7ce4b0837691e92cb0"},{"code":"#(loop [c % n %2]\n  (if (= 0 n)\n    (first c)\n  (recur (rest c) (- n 1))))","problem":21,"user":"4f7c4eb7e4b06e829148e1af"},{"problem":21,"code":"(fn [seqn n] (first (drop n seqn)))","user":"5e83b9f2e4b09a7a73c8bbbf"},{"code":"(fn [x y]\r\n  (if (zero? y)\r\n    (first x)\r\n    (recur (rest x) (dec y))))","problem":21,"user":"50521b1fe4b0a561d07d8f14"},{"code":"(fn [sq pos] (get (vec sq) pos))","problem":21,"user":"52efd3d9e4b05e3f0be25ed4"},{"code":"(fn [lst n] (if (= 0 n) (first lst) (recur (rest lst) (- n 1))))","problem":21,"user":"4e5206ec535d302ef430da6c"},{"code":"(fn [l n]                                                                                                                                                                \n  (if (= n 0)\n    (first l)\n    (recur (rest l) (- n 1))))","problem":21,"user":"4fbd292fe4b081705acca300"},{"code":"(fn nthz [seq n] (if (= n 0) (first seq) (nthz (rest seq) (dec n) ) ))","problem":21,"user":"4ebe8d65535dfed6da9c6d96"},{"problem":21,"code":"(fn [lst n] (if (= n 0)\n              (first lst)\n              (recur (rest lst) (- n 1))))","user":"55c4ae19e4b0e31453f649a1"},{"code":"(fn [ls in]\n(loop [i in l ls]\n  (if (zero? i)\n    (first l)\n    (recur (dec i) (rest l) )   \n  )\n))","problem":21,"user":"5242e1dae4b076204b44fa96"},{"problem":21,"code":"(fn [sq n] (get\n          (vec sq) n\n          ))","user":"5e7bc11be4b085ba37836e1e"},{"code":"#(.first (drop %2 %1))","problem":21,"user":"4f1595da535d64f603146444"},{"code":"(fn [x y] \n  (get (vec x) y)\n)","problem":21,"user":"5396c9a8e4b0b51d73faaee4"},{"problem":21,"code":"(fn [s0 n]\n  (loop [i n s s0]\n    (if (= i 0)\n      (first s)\n      (recur (dec i) (rest s)))))","user":"57458b82e4b009280f9f2b4e"},{"code":"(fn [xs n]\n  (if (= 0 n) \n    (first xs) \n    (recur (rest xs) (dec n))))","problem":21,"user":"523a6fd9e4b081681ca7adc3"},{"problem":21,"code":"(fn my-nth [ls n]\n  (if (= n 0) (first ls)\n    (my-nth (rest ls) (- n 1))))","user":"605f5c69e4b03746e80ebf5e"},{"problem":21,"code":"(fn nth_element [list, index]\n  (first (drop index list)))","user":"56e2d28ce4b03a7c14b85a39"},{"code":"(fn f [xs n]\n  (if (= n 0) (first xs)\n      (f (rest xs) (dec n))))","problem":21,"user":"4f0f9df7535d0136e6c22342"},{"code":"(fn enth [list n] (if (= n 0) (first list) (enth (rest list) (- n 1))))","problem":21,"user":"527675cbe4b03e8d9a4a74e2"},{"code":"(fn mynth [coll index] \n  (loop [n 0 col coll]\n       (if (= n index)\n            (first col)\n          (recur (inc n) (rest col))))\n  )","problem":21,"user":"4ec2f210535dcc7ae8597d4e"},{"problem":21,"code":"(fn my-nth [x n]\n  (if (neg? n) x (last (take (inc n) x )))\n)","user":"5ab81cc9e4b073f17744267a"},{"code":"(fn nth-element [cont n] \n  (let [x (into [] cont)] \n    (x n)\n    )\n  )","problem":21,"user":"5157d8bce4b0b0b4b87062d6"},{"problem":21,"code":"(fn enth [l n]\n  (if (= n 0)\n    (first l)\n    (recur (rest l) (- n 1))))","user":"53cafc64e4b00fb29b2212cf"},{"code":"(fn nth-element [items index] \n  (if (<= index 0) (first items)\n    (apply nth-element [(rest items) (- index 1)])\n  )\n)","problem":21,"user":"4f22ebb6e4b0d66497709fdc"},{"problem":21,"code":"(fn [coll tgt] \n  (loop [tail coll\n         index 0]\n    (if (= index tgt)\n     (first tail)\n     (recur (rest tail) (inc index)))))","user":"5b7608c9e4b047b03b2036da"},{"problem":21,"code":"(fn\n  [lst n]\n  (loop [lst lst\n         n n]\n    (if (zero? n)\n      (first lst)\n      (recur (rest lst) (dec n)))))","user":"5aa2f1dee4b0d174b936c865"},{"code":"(fn [sq i] (first (drop i sq)))","problem":21,"user":"52cfb277e4b07d0d72b273ac"},{"code":"(fn my-fun [l x]\n  (if (= x 0)\n    (first l)\n    (my-fun (rest l) (- x 1))\n    ))","problem":21,"user":"515ba2c2e4b0a102a3e52639"},{"problem":21,"code":"(fn [col n] (first (last (split-at n col))))","user":"587a5fcfe4b01531a375eaeb"},{"problem":21,"code":"(fn[li n]\n   (if (= n 0)(first li)\n       (recur (rest li)\n              (- n 1))))","user":"5627444fe4b00e49c7cb47cd"},{"problem":21,"code":"#(loop [coll %1 n %2]\n   (if (= 0 n)\n     (first coll)\n     (recur (rest coll) (dec n))))","user":"5a45aa14e4b05d388ecb6b3e"},{"problem":21,"code":"(fn [y x]\n   (loop [c 0 z (seq y)]\n     (if (= c x)\n       (first z)\n       (recur\n        (inc c)\n        (rest z)))))","user":"56d325ace4b0ea9b8538f7a9"},{"problem":21,"code":"(fn[x, y](last(first (partition (+ y 1) x))))","user":"5f77890ae4b02876ed9fd0b9"},{"problem":21,"code":"(fn [s ix] \n  (first (reverse (take (+ 1 ix) s))))","user":"540dbc11e4b0addc1aec6715"},{"problem":21,"code":"#(loop [l %1 n %2] (if (= 0 n) (first l) (recur (rest l) (- n 1))))","user":"5ccf2dc3e4b0ccb0619628c2"},{"code":"(fn [m n] (first (nthnext m n)))","problem":21,"user":"4ea84ff8535d7eef308072f7"},{"problem":21,"code":"(fn [seq n]\n  (loop [cnt 0\n         s seq]\n    (if (= cnt n)\n      (first s)\n      (recur (inc cnt) (rest s)))))","user":"543168f5e4b0dad94371f2e6"},{"code":"#(loop [m %2\n         xs %1]\n    (if (= m 0)\n      (first xs)\n        (recur (- m 1) (rest xs))))","problem":21,"user":"52fa250ee4b047fd55836ff3"},{"problem":21,"code":"(fn nelt\n  [xs n]\n  (if (< (- (count xs) 1) n)\n    \"error index too big br\"\n    (if (= n 0)\n      (first xs)\n      (nelt (rest xs) (- n 1)))))","user":"55355397e4b09218d5f44fae"},{"problem":21,"code":"(fn [collection, index] (get (vec collection) index))","user":"541bfcb4e4b01498b1a71a6e"},{"code":"(fn[coll n](last(take (inc n) coll)))","problem":21,"user":"525ef949e4b0cb4875a45dbc"},{"code":"#(loop [v %1 n %2]\n   (if (zero? n) (first v)\n   (recur (rest v) (- n 1))\n   ))","problem":21,"user":"534c469ee4b084c2834f4a8e"},{"problem":21,"code":"#(let [end-len (- (count %1) %2)]\n   (loop [c %1]\n     (if (= (count c) end-len)\n       (first c)\n       (let [rc (next c)]\n         (recur rc)))))","user":"55d50a38e4b0e31453f64a80"},{"problem":21,"code":"(fn [s, n] (.get s n))","user":"5473909be4b0c51c1f4d7281"},{"code":"(fn [coll index] ((vec coll) index))","problem":21,"user":"5146df5ae4b04ef915e3731d"},{"code":"(fn [elems n]\n  (first (drop n elems)))","problem":21,"user":"4e5c3612535d8a8b8723a2be"},{"code":"(fn [s n]\n  (first (drop n s)))","problem":21,"user":"4ebc08a8535dfed6da9c6d7c"},{"problem":21,"code":";;(fn my-nth[X, n] (if (= n 0) (first X) (my-nth (rest X) (dec n))))\n\n#((comp first drop) %2 %1)","user":"55429859e4b0a04f7929951f"},{"code":"(fn [l i] (loop [l l i i] (if (= i 0) (first l) \n  (recur (rest l) (- i 1)))))","problem":21,"user":"4f04165d535dcb61093f6b9c"},{"code":"(fn my-nth [xs, n]\n  (cond\n   (= n 0) (first xs)\n   true    (my-nth (rest xs) (- n 1))\n  )\n)","problem":21,"user":"51365524e4b04ac1f358dd52"},{"problem":21,"code":"(fn [arr ct] (if (= ct 0) (first arr) (recur (rest arr) (dec ct))))","user":"5c65bf7ce4b0fca0c162269a"},{"problem":21,"code":"(fn fun [l c]\n  (if (= c 0)\n    (first l)\n    (fun (rest l) (- c 1))))","user":"55a35ef4e4b0acc240e31535"},{"code":"(fn my-f [x nt]\n  (if (= 0 nt)\n    (first x)\n    (my-f (rest x) (- nt 1))))","problem":21,"user":"535a170ae4b04ce2eb3ed2a3"},{"problem":21,"code":"(fn [seqParam element]\n  (loop [initCount 0\n         toCount seqParam]\n    (if (= initCount element)\n      (first toCount)\n      (recur (inc initCount) (next toCount)))))","user":"5b69bf95e4b0c6492753e790"},{"code":"(fn element-n [seq n] \n  (if (= n 0) \n    (first seq)\n    (recur (rest seq) (- n 1))\n    )\n)","problem":21,"user":"4f294c48e4b0d6649770a023"},{"code":"#(loop [l %1 c %2] (if (zero? c) (first l) (recur (rest l) (dec c))))","problem":21,"user":"4f0ce26c535d0136e6c22312"},{"code":"(fn [list offset] (last (take (+ offset 1) list)))","problem":21,"user":"4e399d94535deb9a81d77f42"},{"code":"(fn [coll n]\n  (loop [i 0 xs coll]\n    (if (= n i)\n       (first xs)\n       (recur (inc i) (rest xs)))))","problem":21,"user":"4f32ef71e4b0d6649770a098"},{"problem":21,"code":"(fn n-th [coll n]\n  (if (= n 0) (first coll)\n    (n-th (rest coll) (dec n))))","user":"5a8d1eade4b05369db4d2511"},{"problem":21,"code":"(fn [lst inx] (last\n                 \t(take (inc inx) lst)\n                 \n               )\n  )","user":"5f08d0c5e4b0cf489e8d7f62"},{"code":"(fn r [x, y]\n  (if (= y 0)\n  \t(first x)\n    (r (rest x) (dec y))))","problem":21,"user":"52bdd135e4b07a9af579230a"},{"code":"#(loop [l %1 n %2]\n    (if (= n 0)\n      (first l)\n      (recur (rest l) (dec n))))","problem":21,"user":"513e8141e4b02b2a3d8235c1"},{"problem":21,"code":"(fn [v n]\n  (loop [v v\n         i 0]\n    (let [head (first v)\n          tail (rest v)]\n    \t(if (= i n)\n      \thead\n      \t(recur tail (inc i))))))","user":"54febf4be4b07d26eda61d45"},{"problem":21,"code":"(fn get-the-item [list index] ( if (= index 0) \n                   (first list)\n                   (get-the-item (rest list) (dec index))\n                   ) \n  )","user":"569d1a01e4b0542e1f8d1473"},{"code":"(fn [s n] (if (zero? n) (first s) (recur (rest s) (dec n))))","problem":21,"user":"4e3ac1b2535deb9a81d77f4c"},{"problem":21,"code":"(fn [array n] (first (last (split-at n array))))","user":"5ee4b2e6e4b029a2061bbe90"},{"problem":21,"code":"(fn getz [seqz n]\n  (if (= n 0)\n    (first seqz)\n    (getz (rest seqz) (- n 1))))","user":"59022c89e4b0438e51c2d052"},{"problem":21,"code":"(fn [l x] ((vec l) x))","user":"546c1375e4b00cfc9eacc173"},{"code":"(fn[a b]\r\n  (first (drop b a)))","problem":21,"user":"4ff990f4e4b0678c553fc3a9"},{"code":"(fn [l n]\n  (loop [l l\n         n n]\n    (if (zero? n)\n      (first l)\n      (recur (rest l) (- n 1)))))","problem":21,"user":"50435852e4b034ff00315d22"},{"code":"(fn filter [s p] (first (drop p s)))","problem":21,"user":"534e41b0e4b084c2834f4aaf"},{"problem":21,"code":"(fn cool [x y](first(drop y x)))","user":"551c4068e4b07993ea3788db"},{"code":"(fn [lst count] (if \n  (= count 0) \n     (first lst) \n    (recur (rest lst) (- count 1))))","problem":21,"user":"4f04972b535dcb61093f6bd6"},{"code":"(fn [x y] ( last( take ( + y 1) x )))","problem":21,"user":"4fe2c929e4b03a47b42452d0"},{"code":"(fn nth2 [arr n]\n  (if (= 0 n) \n    (first arr) \n    (nth2 (rest arr) (- n 1))\n  )\n)","problem":21,"user":"4e932a19535dbda64a6f6b0a"},{"code":"(fn [x,y] (aget (object-array x) y))","problem":21,"user":"53979319e4b0b51d73faaeec"},{"problem":21,"code":"(fn mynth [x n]\n  (if (= n 0)\n      (first x)\n      (mynth (rest x) (- n 1))\n  )\n)","user":"59f22f1be4b0966464fe6a77"},{"problem":21,"code":"#(loop [cnt %2 coll %1] \n   (if (zero? cnt)\n   \t(first coll)\n   \t(recur (dec cnt) (rest coll))))","user":"53d1ba22e4b00fb29b221317"},{"problem":21,"code":"(fn [x, y] (first (drop y x)) )","user":"56fb9f3ee4b07572ad1a88d0"},{"problem":21,"code":"(fn [coll elemidx]\n  (loop [curcoll coll\n        idx elemidx]\n    (if (= 0 idx)\n      (first curcoll)\n      (recur (rest curcoll) (- idx 1)))))","user":"60726211e4b069485764de36"},{"problem":21,"code":"(fn [x y] \n      (loop [eles x pos y] \n        (if(= pos 0)\n          (first eles)\n          (recur (rest eles) (dec pos)))))","user":"55097c25e4b06e50f9beb117"},{"code":"#( get (vec %1) %2)","problem":21,"user":"4e94addc535dbda64a6f6b21"},{"code":"(fn NTH [x n]\n  (if (= n 0)\n    (first x) (NTH (rest x) (- n 1))\n    ) )","problem":21,"user":"51735df9e4b00f4b6b0490d6"},{"problem":21,"code":"(fn [a n] (if (> n 0) (recur (rest a) (- n 1)) (first a)))","user":"53ee6e81e4b0d648e757f4cd"},{"problem":21,"code":"#(loop [coll % i %2]\n    (if (= 0 i) (first coll)\n        (recur (rest coll) (dec i))))","user":"550e8e04e4b06e50f9beb167"},{"problem":21,"code":"(fn get-nth \n  ([coll, numb]\n   (get-nth coll numb 0)\n   )\n  ([coll, numb, current]\n   (if (= numb current)\n     (first coll)\n     (get-nth (rest coll) numb (+ current 1)))\n   )\n  )","user":"56de0db0e4b0ea9b8538f83a"},{"code":"(fn n [list idx] (if (= idx 0) (first list) (recur (rest list) (dec idx))))","problem":21,"user":"5287f66be4b0239c8a67ae45"},{"problem":21,"code":"(fn my-nth[s n] \n(if (= 0 n)\n  (first s)\n  (my-nth (rest s) (dec n)))\n )","user":"57153c1ae4b07c98581c3ad3"},{"problem":21,"code":"(fn take-nth'\n  [xs p]\n  (if (zero? p) (first xs)\n    (take-nth' (rest xs) (dec p))))","user":"5c1ca3dbe4b0efcb0b05b23b"},{"problem":21,"code":"(fn [subj n]\n  (first (drop n subj)))","user":"52a85d20e4b0c58976d9ac2c"},{"code":"#((apply comp (cons first (repeat %2 rest))) %)","problem":21,"user":"5073e7fde4b054001656accb"},{"problem":21,"code":"(fn [pseq pnum] (loop [vseq pseq\n                       vnum pnum]\n                  (if (= 0 vnum)\n                    (first vseq)\n                    (recur (rest vseq) (- vnum 1))\n                   )\n                  )\n  )","user":"5766fbb7e4b0a07e8fc180b6"},{"code":"(fn loopy [x y] (if (= y 0) (first x) (loopy (rest x) (dec y)) ) )","problem":21,"user":"50cf3b8ce4b0e61f11ddcd8e"},{"problem":21,"code":"#(loop [cur %1\nprev nil\nvalue %2\nindex 0]\n(if (> index value)\nprev\n(recur (rest cur) (first cur) value\n(+ index 1))))","user":"5b044436e4b0cc2b61a3bd71"},{"code":"(fn [alist n] (first(nthnext alist n)))","problem":21,"user":"504e1ddae4b0f6ff3350c466"},{"problem":21,"code":"(fn [c idx]\n  (loop [c c idx idx]\n    (if (zero? idx)\n      (first c)\n      (recur (rest c) (dec idx)))))\n\n;(fn [c idx]\n;  (last (take (inc idx) c)))\n\n;(fn [c idx]\n;  (first (drop idx c)))","user":"54dce62be4b024c67c0cf78b"},{"code":"(fn [ l i]\n (loop [coll l\n        counter i]\n   (if (= 0 counter)\n     (first coll)\n     (recur (rest coll) (dec counter)))))","problem":21,"user":"505a3706e4b021387fb89855"},{"code":"#(loop [c %1, i %2] \n\t(if (== i 0) \n\t\t(first c) \n\t\t(recur (rest c) (- i 1))))","problem":21,"user":"53300924e4b019098a6f8b55"},{"problem":21,"code":"(fn nth-num [m n] (last (take (inc n) m)))","user":"57a14414e4b0c3d858beb8e4"},{"problem":21,"code":"(fn\n  [coll index]\n  (loop [collection coll counter 0]\n    (if (= counter index)\n      (first collection)\n      (recur (rest collection) (inc counter)))))","user":"603e8e3ae4b0d5df2af22316"},{"problem":21,"code":"(fn sdsu-nth\n        [input-list n]\n        (loop [cnt n tmp-list input-list]\n              (if (zero? cnt)\n                  (first tmp-list)\n                (recur (dec cnt) (rest tmp-list)))))","user":"56092a8de4b0053d1b86c7da"},{"problem":21,"code":"(fn n-th [s n]\n  (if (= n 0)\n    (first s)\n    (n-th (rest s) (- n 1))))","user":"5a9181c5e4b002d099cae6f6"},{"problem":21,"code":"#(cond (= 0 %2) (first %1) (not= 0 %2) (recur (rest %1) (dec %2)))","user":"549a1fede4b0f3d1d8e70f6a"},{"code":"(fn[x,y] (first (drop y x)))","problem":21,"user":"5240e8ebe4b0ad64fa010349"},{"problem":21,"code":"(fn [mylist-list n] (loop [mylist-list mylist-list n n]\n                   (if (= n 0)\n                     (first mylist-list)\n                    (recur (rest mylist-list) (dec n)))))","user":"5c0e3f86e4b01240ff56713d"},{"problem":21,"code":"(fn [s n]\n  (loop [i 0 seqs s number n]\n  \t(if (= i number) \n      (first seqs)\n      (recur (inc i) (rest seqs) number))))","user":"6038b6b4e4b0d5df2af222ef"},{"code":"(fn [i j] (first (reverse (take (inc j) i) ) ))","problem":21,"user":"4ea8f887535d7eef30807300"},{"problem":21,"code":"(fn [xs n]\n  (if (= n 0) \n    (first xs)\n    (recur (rest xs) (- n 1) )))","user":"570d0548e4b0b0fb43fd06d2"},{"problem":21,"code":"(fn enth [seq n] (if (= n 0) (first seq) (enth (rest seq) (- n 1))))","user":"54c9e00be4b045293a27f683"},{"code":"(fn [sec n] (last(first(partition (+ n 1) sec))))","problem":21,"user":"52767b2ce4b03e8d9a4a74e4"},{"code":"(fn nthlend[a n] (first (drop n a)))","problem":21,"user":"4f041af6535dcb61093f6ba3"},{"code":"(fn [coll n_th]\r\n  (loop [cs coll, n 0]\r\n    (if (= n n_th) (first cs)\r\n        (recur (rest cs) (inc n)))))","problem":21,"user":"4e131e61535d04ed9115e7d5"},{"code":"(fn getNth [s n]\n  (if (= n 0)\n  (first s)\n  (getNth (rest s) (dec n))))","problem":21,"user":"504dffe2e4b078edc5f5938b"},{"code":"(fn [s i]\n  (last (take (inc i) s)))","problem":21,"user":"4ee4f4a9535d1385b2869d85"},{"code":"(fn q [c n] (first (last (split-at n c))))","problem":21,"user":"5087f895e4b0198722bd9852"},{"problem":21,"code":"(fn nnth [s n] (or (and (= n 0) (first s)) (nnth (rest s) (- n 1))))","user":"554a3303e4b0a04f79299573"},{"problem":21,"code":"(fn [xs n] (if (= n 0) (first xs)\n                     (recur (rest xs) (- n 1))))","user":"5d631376e4b0c9e5857d5023"},{"problem":21,"code":"(fn func [x n]\n  (if (= n 0) (first x) (func (rest x) (- n 1))))","user":"54d902ece4b0a52adc2e2046"},{"code":"(fn[x y](last (take (+ 1 y) x)))","problem":21,"user":"4eddfb5c535d10e5ff6f532f"},{"problem":21,"code":"#(if (= %2 0)\n   \t(first %1)\n   (last (take (inc %2) %1)))","user":"58988cbbe4b00487982d52d7"},{"code":"(fn [seq n]\n  (if (= n 0)\n    (first seq)\n    (recur (rest seq) (- n 1))))","problem":21,"user":"51d9ec7de4b02ceefd947756"},{"problem":21,"code":"(fn foo\n  [nums n]\n  (if (= n 0)\n    (first nums)\n    (foo (rest nums) (dec n))))","user":"58e45a2ce4b056aecfd47c69"},{"problem":21,"code":"(fn [xs n]\n  (loop [x (first xs), xs (rest xs), N n, n 0]\n    (cond \n     (= N n) x\n     :else (recur (first xs) (rest xs) N (inc n))\n    )\n  )\n)","user":"56433d34e4b08d4f616f5f23"},{"code":"(fn n-th [xs n] (if (= n 0) (first xs) (n-th (rest xs) (- n 1))))","problem":21,"user":"519ca227e4b0a1d87b003460"},{"problem":21,"code":"(fn [inp-seq position]\n  (loop [inner-seq inp-seq\n         \t  i\t\t\t\t\t0]\n    (if (= i position)\n      (first inner-seq)\n      (recur (rest inner-seq)\n                   (inc i)))))","user":"53f5c402e4b0db01ade6f9d4"},{"problem":21,"code":"(fn nth-element [s n]\n  (if (> n 0)\n    (nth-element (rest s) (- n 1))\n    (first s)))","user":"541709b0e4b01498b1a71a06"},{"code":"#(loop [s %1 acc %2] (if (= acc 0) (first s) (recur (drop 1 s) (- acc 1))))","problem":21,"user":"4fbfe9a4e4b081705acca31f"},{"code":"(fn [seq n]\n  (if (= 0 n)\n    (first seq)\n    (recur (rest seq) (- n 1))))","problem":21,"user":"534803c0e4b084c2834f4a51"},{"code":"(fn [l cnt]\n  (if-not (= cnt 0)\n    (recur (next l) (dec cnt))\n    (first l)))","problem":21,"user":"4e68ed35535d8ccf87e9fe92"},{"problem":21,"code":"(fn [l n] \n  (if (= n 0) \n    (first l) \n    (recur (rest l) (- n 1))\n  ))","user":"5895385fe4b00487982d5279"},{"code":"(fn [data n]\n  (loop \n    [ s data \n      i 0 ]\n    (if (= i n)\n      (first s) \n      (recur (rest s) (inc i))\n)))","problem":21,"user":"4e70ef6f535d5021c1a89644"},{"code":"(fn [x,n] (if (< n (count x)) (.get x n)))","problem":21,"user":"50062f47e4b0678c553fc479"},{"problem":21,"code":"(fn [coll y] (get (vec coll) y))","user":"58173722e4b0c0e9c07b838a"},{"problem":21,"code":"(fn func [seq ind]\n  (if (= ind 0) \n    (first seq) \n    (func (rest seq) (dec ind)))\n  )\n\n\n;#(first (drop %2 %))\n\n\n;#((vec %1) %2)","user":"5f6c331ae4b02876ed9fd054"},{"code":"(fn [s n] (if (= n 0)\n      (first s)\n      (recur (rest s) (dec n))))","problem":21,"user":"5300f68de4b0d8b024fd3714"},{"problem":21,"code":"(fn [col n]\n  (loop [remaining col index 0]\n    (if (= index n)\n      (first remaining)\n      (recur (rest remaining) (inc index)))))","user":"572b5916e4b0cd1946bd0f39"},{"problem":21,"code":"(fn [x y] (->> x (drop y) first))","user":"597d0e43e4b0dbe32238d095"},{"problem":21,"code":"(fn [coll ARGH] (first (drop ARGH coll)))","user":"5501cc95e4b07d26eda61d79"},{"code":"(fn [l,i] (first (subvec (vec l) i)))","problem":21,"user":"527599e8e4b03e8d9a4a74c4"},{"problem":21,"code":"(fn [l n-th] (first (subvec (into [] l) n-th (+ n-th 1))))","user":"568ab39be4b0dcc4269f4094"},{"problem":21,"code":"(fn my-nth [array n]\n  (cond\n   (nil? array) nil\n   (= 0 n) (first array)\n   't      (my-nth (rest array) (dec n))))","user":"54383fd6e4b032a45b869312"},{"problem":21,"code":"(fn my-nth [lst n]\n  (if\n    (or (<= n 0) (empty? lst))\n    (first lst)\n    (my-nth (rest lst) (- n 1))))","user":"5959b0ede4b066ee0a44afaa"},{"problem":21,"code":"(fn go [xs n]\n  (if (= n 0)\n    (first xs)\n    (go (rest xs) (- n 1))))","user":"5e72f8aae4b085ba37836dcb"},{"code":"(fn [s i] \n  (if (= i 0)\n    (first s)\n    (recur (rest s)(dec i))))","problem":21,"user":"528035c8e4b0757a1b1713e9"},{"code":"(fn [l n] (get (into [] l) n))","problem":21,"user":"52bf0116e4b07a9af5792328"},{"problem":21,"code":"(fn mn [s n] (if (= n 0) (first s) (mn (rest s) (dec n))))","user":"587c738de4b01531a375eb1a"},{"code":"(fn foo [a b] (\n  if (= b 0) (first a) (foo (rest a) (- b 1))\n)\n)","problem":21,"user":"4ee8fc1e535d93acb0a66887"},{"problem":21,"code":"(fn my-nth [some-list index]\n  (cond\n   (= index 0) (first some-list)\n   (< index 0) nil\n   :else (my-nth (rest some-list) (- index 1))))","user":"53ff5572e4b0de5c418485fe"},{"code":"(fn [col x] (second (take-nth x col)))","problem":21,"user":"5194243be4b0142f60b4aed9"},{"problem":21,"code":"(fn [x n]\n  (loop [n n\n         c 0\n         x x]\n    (if (= c n) \n      (first x)\n      (recur n (inc c) (rest x)))))","user":"5e07cf97e4b0978307768fb9"},{"problem":21,"code":"(fn [items item] (.get items item))","user":"595e5bdbe4b066ee0a44b041"},{"code":"(fn [x n] (if (= 0 n) (first x) (recur (rest x) (dec n))))","problem":21,"user":"4e6ad36f535d8ccf87e9ff07"},{"code":"(fn [items n]\n  (first (drop n items)))","problem":21,"user":"510cd1dde4b078ea71921124"},{"code":"(fn [coll index] (if (zero? index) (first coll) (recur (rest coll) (dec index))))","problem":21,"user":"5209cb44e4b0e152394d7702"},{"code":"(fn [col x] (last (take (inc x) col)))","problem":21,"user":"52dad8bde4b09f7907dd13be"},{"problem":21,"code":"(fn x [a b] (.get a b))","user":"5379b723e4b06839e8705e57"},{"code":"(fn [coll idx]\n  (if (= idx 0)\n    (first coll)\n    (recur (rest coll) (dec idx))\n    )\n  )","problem":21,"user":"527121fde4b03e8d9a4a73dd"},{"code":"#(-> (last (take (inc %2) %1)))","problem":21,"user":"53286389e4b09d4e7a9b5504"},{"problem":21,"code":"(fn[l n] ( if (= n 0) (first l) (recur (rest l) (- n 1))))","user":"5e887c61e4b0cb0169546309"},{"code":"(fn func [x index] (if(= 0 index) (first x) (func (rest x) (- index 1))))","problem":21,"user":"4e4482b3535dc968683fc4ab"},{"problem":21,"code":"(fn [xs x] \n  (last (take (inc x) xs)) )","user":"5d35de2ae4b01671435dbd17"},{"problem":21,"code":"(fn my-nth\n  [coll idx]\n  (loop [i 0\n         r coll]\n    (if (= idx i)\n      (first  r)\n      (recur (inc i) (rest r)))))","user":"5c411df3e4b08cd430848ebf"},{"code":"(fn [s i] (peek (vec (take (+ i 1) s))))","problem":21,"user":"51069942e4b01150e115ebe8"},{"problem":21,"code":"(fn foo [coll n]\n  (if (= n 0)\n    (first coll)\n    (foo (rest coll) (dec n))))","user":"5829d9f8e4b051871117bf4d"},{"code":"#((fn f [t ls]\n           (if (> t 0)\n             (f (- t 1) (rest ls))\n             (first ls)))\n   %2 %1\n   )","problem":21,"user":"50ac3e4be4b071b89ef2622d"},{"code":"(fn stripfirst [l n]\n  (if (= n 0)\n    (first l)\n  \t(stripfirst (rest l) (- n 1))))","problem":21,"user":"51ccc92ce4b02254fc79487a"},{"code":"(fn [s x]\n  (last (take (inc x) s)))","problem":21,"user":"512eb723e4b0b740abc5982b"},{"problem":21,"code":"(fn [coll pos]\n  ((fn [idx c]\n    (if (= pos idx)\n      (first c)\n      (recur (inc idx) (rest c))))\n   0 coll))","user":"54159032e4b01498b1a719f5"},{"code":"(fn [lst pos]\n  (let [x (first lst), xs (rest lst)]\n    (if (= 0 pos)\n      x\n      (recur xs (- pos 1)))))","problem":21,"user":"526866d1e4b03e8d9a4a71a1"},{"code":"(fn [list n]\n  (first \n    (reverse\n      (take\n        (inc n) list))))","problem":21,"user":"4f70e701e4b07046d9f4f002"},{"problem":21,"code":"(fn [input-list n]\n    (first (drop n input-list))\n)","user":"5cadd6a4e4b026601754b87b"},{"problem":21,"code":"(fn sean [x n] (if (= n 0) (first x) (sean (rest x) (- n 1))))","user":"54d2c4c5e4b0e8a36923e5fa"},{"problem":21,"code":"(fn my-nth [seq n]\n  (loop [s seq n n cur 0]\n    (if (= cur n) (first s)\n        (recur (rest s) n (inc cur)))))","user":"5bcee7d9e4b0e9689409ee22"},{"problem":21,"code":"(fn [xs n] (if (= n 0) \n             (first xs) \n             (recur (rest xs) (- n 1))))","user":"543d89dfe4b032a45b869350"},{"problem":21,"code":"(fn [listA n] (loop [n n \n                   listB listA] \n  \t\t\t\t(if (= n 0) \n                (first listB)\n                (recur (dec n) (rest listB)))))","user":"570d8418e4b0b0fb43fd06de"},{"problem":21,"code":"(fn [x i]\n  (last (take (+ i 1) x))\n)","user":"58b9c43be4b0888cdc949cd3"},{"code":"(fn [coll n]\n   (loop [coll coll n n]\n    (if (zero? n)\n      (first coll)\n      (recur (next coll) (dec n)))))","problem":21,"user":"515c1f12e4b069911535cf06"},{"code":"(fn [coll n]  ((apply comp (cons first (repeat n rest))) coll))","problem":21,"user":"4fb218d5e4b081705acca286"},{"problem":21,"code":"(fn [coll n] (first(take-last (- (count coll) n) coll )))","user":"55ae383fe4b03311e7b732b7"},{"problem":21,"code":"#(loop [xs %1 n %2]\n    (if (= n 0)\n      (first xs)\n      (recur (rest xs)\n             (- n 1)\n   )))","user":"55664334e4b0c656e3ff182e"},{"problem":21,"code":"(fn [seq x] (loop [seq seq x x] (if (= 0 x) (first seq) (recur (rest seq) (dec x)))))","user":"559ff9eee4b0acc240e314ee"},{"problem":21,"code":"(fn\n[input counter]\n(.get (clojure.walk/postwalk (fn [input] (if (list? input) (vec input) input))input) counter))","user":"5342702ce4b00652c8746edb"},{"problem":21,"code":"( fn enth\n  [ coll pos ]\n  ( if ( = 0 pos )\n    ( first coll )\n    ( enth ( rest coll ) ( dec pos ) )\n  )\n)","user":"57561529e4b02ea1147992d3"},{"problem":21,"code":"(fn foo [l n]\n  (let [x (first l)\n        xs (rest l)]\n    (if (= n 0)\n        x\n        (foo xs (- n 1)))))","user":"600ae927e4b074f607df6689"},{"code":"#(loop [seq %1 n %2]\n  (if (zero? n) (first seq) (recur (next seq) (dec n))))","problem":21,"user":"4fa6d532e4b081705acca1be"},{"code":"(fn my-nth [l n] (if (= n 0) (first l) (my-nth (rest l) (dec n))))","problem":21,"user":"5141e978e4b0b50abeb46b20"},{"problem":21,"code":"(fn [input_seq n]\n  (last (take (inc n) input_seq)))","user":"5da05bcce4b000c986472bd0"},{"problem":21,"code":"(fn [c i] (if (= 0 i) (first c) (recur (next c) (dec i))))","user":"5e7128eee4b085ba37836db5"},{"problem":21,"code":"(fn [mySeq index] (first (drop index mySeq)) )","user":"555d3bbee4b0a2eb076a39a6"},{"problem":21,"code":"(fn nth-element\n  [elements position] \n  (if (> position 0)\n    (nth-element (rest elements) (dec position))\n    (first elements)))","user":"5e9f3c2ce4b00a66d4a9517f"},{"problem":21,"code":"#(let [input %1 n %2]\n   (loop [rests input \n          current n] \n     (if (zero? current) \n       (first rests) \n       (recur (rest rests) (dec current)))))","user":"56bdd003e4b0f26550335976"},{"code":"(fn func [lst idx] (cond (= 0 idx) (first lst) :else (func (rest lst) (dec idx))) )","problem":21,"user":"4f339c04e4b0d6649770a09c"},{"problem":21,"code":"(fn nnth \n   [sequen i]\n   (if (> i 0)\n     (nnth (rest sequen) (- i 1))\n     (first sequen)\n   )\n)","user":"59bee83be4b0a024fb6ae440"},{"code":"(fn f [lst n]\n  (if (= n 0)\n      (first lst)\n      (f (rest lst) (dec n))))","problem":21,"user":"4ec1e953535dfed6da9c6db8"},{"code":"(fn [se nt]\n  (if (> (count se) nt)\n     ((fn [rse co]\n       (if (< co nt)\n          (recur (rest rse) (inc co))\n           (first rse)))\n       se 0)\n      nil))","problem":21,"user":"4fbe42b7e4b081705acca30f"},{"code":"(fn busca [collection, n]\n  (loop [seq1 collection, n1 n, tam 0]\n  \t(if (= n tam) (first seq1)\n      (recur (rest seq1) n1 (inc tam) )\n     )\n  )\n)","problem":21,"user":"5249afc9e4b05ef8e38e6470"},{"code":"(fn [x i] (loop [x x n 0 i i] (if (= i n) (first x) (recur (rest x) (inc n) i))))","problem":21,"user":"4fcb5d1fe4b0ee37620e1858"},{"problem":21,"code":"(fn mynth [x n] (last (take (inc n) x)))","user":"5ce708b7e4b0a17bb84e2b9b"},{"problem":21,"code":"(fn [col num] (first (drop  num col)))","user":"5b18f2d2e4b00d69b768e777"},{"code":"(fn [foo index] (loop [s foo n index] (if (= 0 n) (first s) (recur (rest s) (- n 1)))))","problem":21,"user":"4e951f2c535dbda64a6f6b2f"},{"code":"(fn mynth [l n]\n  (if (= 0 n)\n    (first l)\n    (mynth (rest l) (- n 1))))","problem":21,"user":"50baad40e4b03e68e4411c96"},{"problem":21,"code":"(fn [coll n]\n  ((vec coll) n))","user":"54ca05a6e4b057c6fda3a24e"},{"code":"(fn get-nth [data pos] (if (= pos 0) (first data) (get-nth (next data) (dec pos))))","problem":21,"user":"5119ef37e4b06c8af0111817"},{"code":"(fn n [a p]\n    (when a\n        (if (= p 0)\n          (first a)\n          (n (rest a) (dec p)))))","problem":21,"user":"4febb4dae4b0681fd128dc98"},{"code":"(fn[l,n] \n  (first(drop n l)))","problem":21,"user":"4f551054e4b0a7574ea717f5"},{"code":"(fn mynth [l i] (if (= i 0) (first l) (mynth (rest l) (- i 1))))","problem":21,"user":"52a8d0e6e4b0c58976d9ac37"},{"problem":21,"code":"(fn f\n  [lst n]\n  (second\n    (first \n    (filter #(= n (first %)) (map-indexed vector lst)))))","user":"59e778aae4b0249b72820716"},{"code":"#(if (= 0 %2) (first %1) (recur (rest %1) (- %2 1)))","problem":21,"user":"4fad041ee4b081705acca231"},{"problem":21,"code":"(fn [i m] (first (drop m i)))","user":"53eae21ae4b036ad0777e4ee"},{"code":"#(get (to-array %1) %2)","problem":21,"user":"52e683c0e4b09f7907dd1477"},{"problem":21,"code":"(fn NN [arr idx]\n  ((fn NNhelper [arr curr idx]\n   \t(if (= curr idx)\n      (first arr)\n      (NNhelper (rest arr) (+ 1 curr) idx))) arr 0 idx)\n  )","user":"5b65b7bde4b0c6492753e748"},{"code":"(fn\n  [l n]\n  (loop [li l\n         cnt n]\n  (if (zero? cnt) \n    (first li)\n    (recur (rest li) (dec cnt)))\n  ))","problem":21,"user":"53663e82e4b0243289761e73"},{"code":"(fn [x, n] (if (zero? n) (first x) (recur (rest x) (dec n))))","problem":21,"user":"4f713878e4b07046d9f4f00a"},{"code":"(fn mynth[x y] (if (= y 0) \n  (first x) \n  (mynth (rest x) (- y 1))\n))","problem":21,"user":"4e7d3a80535db169f9c796ce"},{"problem":21,"code":"(fn [coll n] (cond\n               (= n 0) (first coll)\n               (= n 1) (second coll)\n               :else (last (take-nth n coll))))","user":"57de9acce4b0bd073c202456"},{"problem":21,"code":"(fn nthElement [lst numb]\n  (loop [iterat numb lst lst]\n    (if (= iterat 0)\n      (first lst)\n      (recur (dec iterat) (rest lst)))))","user":"59dd387be4b0a0ac046f2502"},{"problem":21,"code":"(fn [arr pos] (first(drop pos arr)))","user":"5e7bb000e4b085ba37836e1d"},{"problem":21,"code":"(fn nnt\n  [coll n]\n  (if (= n 0) (first coll) (nnt (rest coll) (dec n))))","user":"58dd2c02e4b0a4d5acaab6b8"},{"problem":21,"code":"#(->\n  (inc %2)\n  (take %1)\n  (last)\n  )","user":"5b85221ce4b047b03b2037c8"},{"code":"(fn nt [x n]\n  (if (zero? n) (first x) (recur (rest x) (dec n))))","problem":21,"user":"52586d24e4b0cb4875a45cb0"},{"problem":21,"code":"(fn [l n]\n  (loop [x l i n]\n    (if (= i 0)\n      (first x)\n      (recur (rest x) (- i 1))\n      )\n    )\n  )","user":"5708e8f6e4b0b0fb43fd06a4"},{"problem":21,"code":"(fn [list n] (loop [list list n n] (if (= 0 n) (first list) (recur (rest list) (dec n)))))","user":"55dab408e4b0e31453f64ad9"},{"code":"#(loop [col %\n        x %2]\n   (if (= x 0)\n     (first col)\n     (recur (rest col) (dec x))))","problem":21,"user":"52d6120ee4b09f7907dd134c"},{"code":"#(first (reverse (take (+ %2 1) %1))\n  )","problem":21,"user":"539ff974e4b0ca733b9744a3"},{"problem":21,"code":"(fn [data n] (if (= n 0) (first data) (recur (rest data) (dec n))))","user":"5746cb28e4b009280f9f2b68"},{"code":"(fn ith\n  [seq n]\n  (first (drop n seq)))","problem":21,"user":"4db8d37d535d1e037afb219c"},{"problem":21,"code":"(fn nth-el [lst n]\n  (if(= 0 n)\n    (first lst)\n    (nth-el (rest lst) (dec n))))","user":"5bbbce60e4b0a20761a2360e"},{"problem":21,"code":"(fn [lst x]\n  (if (= 0 x)\n    (first lst)\n    (recur (rest lst) (- x 1))))","user":"5af74644e4b0cc2b61a3bcc2"},{"code":"(fn [s n] \n  (loop [x 0 s2 s]\n    (if (= x n)\n      (first s2)\n      (recur (inc x) (rest s2)))))","problem":21,"user":"4ecb65f6535df97575fdabda"},{"problem":21,"code":"(fn my-nth[s n]\n\t(if (= 0 n)\n\t\t(first s)\n\t\t(my-nth (rest s) (dec n))))","user":"5d5ea44fe4b0c9e5857d4ff6"},{"problem":21,"code":"(fn kth [arg k]\n   (if (zero? k)\n     (first arg)\n     (kth (rest arg) (dec k))))","user":"577829f9e4b0979f8965165a"},{"problem":21,"code":"(fn [y, x] (if(zero? x) (first y) (do (recur (rest y) (dec x)))))","user":"5ddc270fe4b0948ae9d9adb9"},{"problem":21,"code":"(fn enth [x y] (if (= 0 y) (first x) (enth (rest x) (- y 1))))","user":"5838d5ede4b089d5ab817d32"},{"problem":21,"code":"(fn nth-elem [coll n] ( let [total (count coll)] (cond (zero? total) nil  (> n total) nil  (neg? n) nil :else (->> coll (take (inc n)) (last)))))","user":"56c9d136e4b0ed865f9758e2"},{"code":"#(let [s %1 i %2]\n    (if (= 0 i) (first s) \n        (recur (rest s) (dec i))))","problem":21,"user":"4e9e0640535dbda64a6f6b91"},{"code":"(fn [col i] (first (remove nil? (map-indexed (fn [ind itm] (if (= ind i) itm)) col))))","problem":21,"user":"52ced458e4b07d0d72b27394"},{"problem":21,"code":"(fn [col n]\n   (loop [col2 col n2 n]\n     (if (= n2 0)\n           (first col2)\n           (recur (rest col2) (- n2 1))\n           )\n     \n     ))","user":"5e078ba7e4b0978307768fb6"},{"problem":21,"code":"(fn my-nth \n  [map indice]\n  (loop [current 0 restant map]\n    (if (= current indice)\n      (first restant)\n      (recur (inc current) (rest restant)))))","user":"55a161d1e4b0acc240e31511"},{"problem":21,"code":"(fn mynth [s n]\n  (if (= n 0)\n    (first s)\n    (mynth (rest s) (- n 1))))","user":"54e6762be4b024c67c0cf809"},{"code":"(fn nth-elt [l n]\n  ((fn nth-elt1 [l cur]\n    (if (= n cur)\n      (first l)\n      (nth-elt1 (rest l) (+ 1 cur))))\n    l 0))","problem":21,"user":"4f2e2ad8e4b0d6649770a066"},{"code":"(fn[x y](last(take (+ 1 y) x)))","problem":21,"user":"4f32135ae4b0d6649770a08e"},{"code":"(fn [x n]\r\n    (loop [l x cnt n]\r\n        (if (zero? cnt) (first l)\r\n            (recur (rest l) (dec cnt))\r\n        )\r\n     )\r\n )","problem":21,"user":"4fe9cea4e4b0547ebccb2471"},{"code":"(fn [l n]\n  (loop [l l c 0]\n    (if (= c n)\n        (first l)\n        (recur (rest l) (inc c)))))","problem":21,"user":"4e568873535d8a8b8723a283"},{"problem":21,"code":"#(if (= %2 0) \n             (first %1)\n             (recur (rest %1) (dec %2)))","user":"5cd127bce4b0ccb0619628e1"},{"code":"(fn [l, idx] ((vec l) idx))","problem":21,"user":"511a31d0e4b09045b2b16941"},{"problem":21,"code":"(fn mynth [x n] \n  (if (= n 0)\n    (first x)\n    (mynth (rest x) (dec n))))","user":"5b5eb53be4b0c6492753e6dd"},{"code":"(fn n-th [coll x] (if (= x 0) (first coll) (recur (rest coll) (dec x))))","problem":21,"user":"515c9f14e4b069911535cf16"},{"code":"(fn rec\n       [l t]\n       (if (= t 0)\n          (first l)\n          (rec (rest l) (- t 1))))","problem":21,"user":"52f8b2a2e4b047fd55836fda"},{"problem":21,"code":"(fn nth' [xs n] (if (> n 0) (recur (rest xs) (dec n)) (first xs)))","user":"5a08f951e4b01bb0ae8afdfd"},{"problem":21,"code":"(fn my-nth [col n]\n   (if (= n 0)\n     (first col)\n     (my-nth (rest col) (- n 1))))","user":"5e1c3e6ee4b0dc9594008530"},{"problem":21,"code":"(fn rec[coll k]\n  (if \n    (= k 0) \n    (first coll) \n    (rec \n     \t(rest coll) \n     \t(dec k)\n    )\n  )\n)","user":"5ba75fdfe4b0a20761a23419"},{"problem":21,"code":"(fn [coll n]\n  (let [rec (fn [coll n self]\n              (if (= n 0)\n                (first coll)\n                (self (rest coll) (- n 1) self)))]\n  (rec coll n rec)))","user":"55c66d3de4b0e31453f649c1"},{"problem":21,"code":"(fn get_nth [xs n] (last (take (+ n 1) xs)))","user":"57cf9de8e4b00451144b0503"},{"problem":21,"code":"(fn nthp [sequ pos] \n  (if (= pos 0) (first sequ) \n    (nthp (rest sequ) (dec pos))\n    )\n  )","user":"5509bf71e4b06e50f9beb122"},{"code":"(fn [lat n] (-> (take (+ 1 n) lat) reverse first))","problem":21,"user":"4db97911535d1e037afb21a2"},{"code":"(fn my-nth\n   [s n]\n   (loop [lst s\n          current 0]\n     (if (= n current)\n       (first lst)\n       (recur (rest lst) (+ current 1)))))","problem":21,"user":"538510c2e4b06839e8705efb"},{"problem":21,"code":"(fn mynth\n  [crabula index]\n  (cond \n   (> index 0) (mynth (rest crabula) (- index 1))\n   (= index 0) (first crabula)))","user":"54fca220e4b07d26eda61d2e"},{"code":"(fn [coll pos]\n  (-> (nthrest coll pos) first))","problem":21,"user":"5152bc4ee4b001f44f99bfef"},{"code":"(fn [y n] \n  (loop [x n result y]\n    (if (= x 0)\n    (first result)\n    (recur (dec x)(rest result)))))","problem":21,"user":"504e8e48e4b069badc5a33b3"},{"code":"(fn [seq n] (last (drop-last (- (count seq) (+ n 1)) seq)))","problem":21,"user":"4f2b0fdee4b0d6649770a046"},{"code":"(fn nt [list n] \n  (if (= n 0) \n    (first list) \n    (nt (rest list) (- n 1))))","problem":21,"user":"5034b0e1e4b062bc5d7ae167"},{"code":"(fn [x e] (first (nthnext x e)))","problem":21,"user":"4fea3769e4b0140c20fb9c01"},{"code":"(fn mynth [lt n]\r\n  (if (= n 0) (first lt) (mynth (rest lt) (- n 1))))","problem":21,"user":"4e1b2cd9535d04ed9115e7fd"},{"problem":21,"code":"(fn [num_list n] (last (take (inc n) num_list)))","user":"5d38971ce4b01671435dbd48"},{"problem":21,"code":"(fn fun [x n]\n           (if (= 0 n)\n             (first x)\n             (fun (rest x) (dec n))))","user":"5af047b8e4b0cc2b61a3bc48"},{"problem":21,"code":"(fn\n  [seq index]\n  (if (= index 0)\n    (first seq)\n    (recur (next seq) (- index 1))))","user":"5888b75fe4b0f1effa3b771b"},{"code":"(fn foo [x y] (first (nthrest x y)))","problem":21,"user":"518261a4e4b0f2adb7336523"},{"problem":21,"code":"(fn\n  [coll n]\n  (loop [i n r coll]\n    (if (= i 0)\n      (first r)\n      (recur (dec i) (rest r)))))","user":"5d273ef8e4b092dab7f59c69"},{"problem":21,"code":"(fn [col idx]\n  (loop [cur col\n         counter 0]\n    (cond \n     (nil? (first cur)) nil\n     (= counter idx) (first cur)\n     :else (recur (rest cur) (inc counter)))))","user":"5d231255e4b02ea6f0fb69fe"},{"problem":21,"code":"(fn my-nth [s n]\n  (if (zero? n)\n    (first s)\n    (my-nth (rest s) (dec n))))","user":"537f6b1ae4b06839e8705eb3"},{"problem":21,"code":"(fn myLast [x y]\n    (if (= 0 y) \n    (first x) \n    (myLast(rest x) (dec y))))","user":"5703d1fee4b08d47c97781fe"},{"problem":21,"code":"(fn foo [plist index]\n  (let [nnth \n        (fn nnth [plist index curIndex] \n          (if (= index curIndex)\n            (first plist)\n            (nnth (rest plist) index (+ curIndex 1))\n            ))]\n    (nnth plist index 0)))","user":"566df171e4b0a866af6896d2"},{"code":"(fn find_index [sequence idx] (get (vec sequence) idx))","problem":21,"user":"52c25cd2e4b07a9af579237f"},{"problem":21,"code":"(fn [c i] (loop [cnt 0 col c] (if (= cnt i) (first col) (recur (inc cnt) (rest col)))))","user":"56db90d4e4b0ea9b8538f80d"},{"code":"(fn [coll index]\r\n        (loop [cur coll n index]\r\n\t\t (if (= n 0)\r\n\t\t     (first cur)\r\n\t\t     (recur (rest cur) (dec n)))))","problem":21,"user":"4e821ca5535db62dc21a62c2"},{"problem":21,"code":"(fn [seq-list position] (last (take (+ 1 position) seq-list)))","user":"5af19233e4b0cc2b61a3bc5f"},{"code":"(fn [s v]\r\n  (let [f (fn [i x]\r\n    (cond \r\n      (empty? x) -1\r\n      (= v i) (first x)\r\n      :else (recur (inc i) (rest x))))]\r\n  (f 0 s)))","problem":21,"user":"4f0478b0535dcb61093f6bcb"},{"code":"(fn [xs i] (if (= 0 i) (first xs) (recur (rest xs) (dec i))))","problem":21,"user":"536c92eae4b0fc7073fd6e43"},{"problem":21,"code":"(fn [x a] (last (take (+ 1 a) x)))","user":"5dcc65b7e4b02b31cc3da3c9"},{"problem":21,"code":"(fn foo [s n] (if (< n 1) (first s) (foo (rest s) (dec n))))","user":"55a87f0ee4b0988bba2ad938"},{"code":"(fn [sequence,n] (first (drop n sequence)))","problem":21,"user":"4f4c6b21e4b03ad3f0c10c8f"},{"problem":21,"code":"(fn my-nth [data pos & current]\n  (if (= nil current)\n    (my-nth data pos 0)\n    (if (= (first current) pos)\n      (first data)\n      (my-nth (rest data) pos (inc (first current)))\n    )\n  )\n)","user":"5fc3850de4b0db0e95a5f3fd"},{"problem":21,"code":"(fn xxx [xs n]\n  (if (= n 0)\n    (first xs)\n    (recur (next xs) (dec n))))","user":"59dec79ee4b01968742fed81"},{"code":"(fn [x n] (->> x (drop n) (first)))","problem":21,"user":"4f616892e4b0defedf855fbf"},{"code":"(fn get_nth\n  [l n]\n  (.get l n)\n)","problem":21,"user":"4fe49706e4b0e8f79898feb7"},{"code":"(fn nth_element [se n] (.get se(int n)))","problem":21,"user":"53901605e4b0b51d73faae95"},{"problem":21,"code":"(fn [x pos] (last (first (split-at (+ pos 1) x))))","user":"575fec91e4b08062f99a4e89"},{"problem":21,"code":"(fn Nth [l e] (if (zero? e) (first l) (Nth (rest l) (dec e))))","user":"559ab207e4b066d22e731f49"},{"code":"(fn [coll x] (first (drop x coll)))","problem":21,"user":"4daef21cedd6309eace4d169"},{"problem":21,"code":"(fn [y m]\n  (loop [y y, m m]\n    (if (= m 0)\n      (first y)\n      (recur (rest y) (- m 1)))))","user":"542ab1afe4b01498b1a71b48"},{"problem":21,"code":"(fn [seq n]\n  (->> seq (take (inc n)) (last)))","user":"5561d2c2e4b0c656e3ff17cd"},{"problem":21,"code":"(fn [s x]\n  (if (= x 0)\n    (first s)\n    (recur (rest s) (dec x))))","user":"5a7b363ae4b03baeef9276d9"},{"problem":21,"code":"(fn [s n]\n  (let [v (vec s)]\n    (v n)))","user":"50b42cbbe4b001349b2f4abe"},{"code":"#((apply vector %) %2)","problem":21,"user":"5124619ae4b02c3f2a072ccd"},{"problem":21,"code":"(fn search [collection, target] \n  (get \n   (vec collection), target ))","user":"5942b978e4b060784b3b7915"},{"problem":21,"code":"#(->> %1 (drop %2) first )","user":"5991eec7e4b0866487ed0d6e"},{"code":"(fn [xs n] (loop [rxs xs idx 0] (if (= idx n) (first rxs) (recur (rest rxs) (inc idx)))))","problem":21,"user":"52b2c9e9e4b0c58976d9acf7"},{"code":"(fn rec [x, n] \n  (if (= n 0) \n    (first x) \n    (rec (rest x) (- n 1))\n  )\n)","problem":21,"user":"51f630cee4b06ff1c25c52bd"},{"problem":21,"code":"#(first ( drop %2 % ) )","user":"5afc115de4b0cc2b61a3bcff"},{"problem":21,"code":"(fn [l idx]\n  (loop [l l cnt 0]\n    (if (= cnt idx)\n      (first l)\n      (recur (rest l) (inc cnt))\n      )\n    )\n  )","user":"544a049de4b0e39780006953"},{"code":"(fn n-th [s,n] \n  (if (= n 0)\n    (first s)\n    (n-th (rest s) (- n 1))))","problem":21,"user":"51493fd0e4b05514c84b7cce"},{"code":"(fn loopy \n  ([s n] (loopy s n 0))\n  ([s n i] (if (= i n)\n    (first s)\n    (loopy (rest s) n (inc i))\n  ))\n)","problem":21,"user":"4ed2b337535d44c135fd68de"},{"problem":21,"code":"(fn get-nth-element [elements nth-index] (get (into [] elements) nth-index))","user":"57e15244e4b0bfb2137f5a70"},{"code":"(fn [s n]\n  ((apply vector s) n))","problem":21,"user":"531490bde4b08068f379ed17"},{"code":"(fn [items n]\n  (loop [item items loopCount n]\n    (if (= 0 loopCount)\n      (first item)\n      (recur (rest item) (dec loopCount)))))","problem":21,"user":"524a7c1ae4b05ef8e38e64ac"},{"problem":21,"code":"(fn [input-list n](last (take (inc n) input-list)))","user":"5da70ceee4b000c986472c11"},{"code":"(fn [x y] (last (take (+ y 1) x)))","problem":21,"user":"4dd579b5535dae65d5c462ea"},{"problem":21,"code":"(fn [coll n]\n  (->> (drop n coll)\n       (first)))","user":"5db35c6ee4b010eb3c36cd20"},{"code":"(fn myn [l n] \n  (if (zero? n) (first l) \n  (myn (rest l) (dec n))))","problem":21,"user":"4fc3b0d4e4b081705acca343"},{"problem":21,"code":"(fn my-nth [coll idx]\n  (loop [times idx remaining coll]\n    (if (zero? times)\n        (first remaining)\n        (recur (dec times) (rest remaining)))))","user":"5f7aed9de4b02876ed9fd0d4"},{"problem":21,"code":"#(loop [coll %1 n %2] (if (zero? n) (first coll) (recur (rest coll) (dec n))))","user":"57f9e0bce4b0d3187e900956"},{"problem":21,"code":"(fn my-nth [s i]\n  (if (= 0 i) \n    (first s)\n    (my-nth (rest s) (- i 1))))","user":"5bbd1876e4b07a9b28b0ff96"},{"code":"(fn [c x] (second (take-nth x c)))","problem":21,"user":"4e6cf61a535de274dd8d818c"},{"code":"(fn [c n] (if (pos? n) (recur (rest c) (dec n)) (first c)))","problem":21,"user":"510fe537e4b04c71fce993dd"},{"code":"(fn [sq n]\r\n  (loop [x 0 s sq]\r\n    (if (= x n)\r\n      (first s)\r\n      (recur (inc x) (next s)))))","problem":21,"user":"4fea7bc4e4b0140c20fb9c07"},{"problem":21,"code":"#( first ( drop %2 %1) )","user":"5e381434e4b01d43a70e8db4"},{"code":"(fn [x n]\n  (if (zero? n) (first x)\n    (recur (rest x) (dec n))))","problem":21,"user":"523e12bde4b09833704079a2"},{"problem":21,"code":"#(loop [head (first %1) tail (rest %1) idx 0]\n   (if (= idx %2)\n     head\n     (recur (first tail) (rest tail) (+ idx 1))))","user":"5a9a12d6e4b0d174b936c7b7"},{"problem":21,"code":"#(last  (take (+ 1 %2) %1))","user":"556f48b9e4b09a3098a5251f"},{"code":"(fn getnth [coll n] (first (drop n coll)))","problem":21,"user":"4f0365fd535dcb61093f6aa5"},{"problem":21,"code":"(fn [coll x] \n\t(last (take (+ x 1) coll))\n  )","user":"5d5c549ee4b09db18d4482eb"},{"code":"(fn [x y] (last (first (split-at (inc y) x))))","problem":21,"user":"51adeafae4b09397d510978b"},{"code":"(fn pos [col idx]\n  (last (take (inc idx) col)))","problem":21,"user":"500e8743e4b00fff93030f98"},{"code":"(fn [sqn n] (last (take (+ n 1) sqn)))","problem":21,"user":"50e4adfde4b0cb9ec68fbca5"},{"code":"(fn [lista, posicao] (last (take (inc posicao) lista)))","problem":21,"user":"52facaeae4b047fd55837000"},{"problem":21,"code":"(fn nnth [l n]\n  (cond\n   \t\t(= 0 n) (first l)\n   \t\t:else   (nnth (rest l) (- n 1))))","user":"501ff0dae4b0cb6ebc0a42f1"},{"problem":21,"code":"(fn [list num] (first (subvec (vec list) num)))","user":"568ad3c1e4b0dcc4269f4096"},{"code":"(fn jth [s j]\n  (if (= j 0)\n    (first s)\n    (jth (rest s) (- j 1))\n  )\n)","problem":21,"user":"52bf936ee4b07a9af579233b"},{"code":"(fn [l n] \n  (\n   (fn [ml mn c] \n     (if (= mn c) \n       (first ml) \n       (recur (rest ml) mn (+ c 1))) \n     )\n   l n 0)\n  )","problem":21,"user":"50a95127e4b07e35d68b27af"},{"problem":21,"code":"(fn [s n]\n  (loop [i 0 s s]\n    (if (= i n)\n      (first s)\n      (recur (inc i) (rest s)))))","user":"5af907e6e4b0cc2b61a3bcda"},{"code":"#(loop [x %\n        y %2]\n   (if (> y 0)\n     (recur (rest x) (dec y))\n     (first x)))","problem":21,"user":"4f04c93c535dcb61093f6be3"},{"code":"(fn [l n] (last (take (+ n 1) l)))","problem":21,"user":"4ebf45c3535dfed6da9c6d9d"},{"problem":21,"code":"(fn [x y]\n         (if (= y 0)\n           (first x)\n           (recur (rest x) (dec y))))","user":"57fc5e42e4b0d3187e900997"},{"problem":21,"code":"(fn [col n] (first (keep-indexed #(if (= % n) %2) col)))","user":"5d0b4966e4b0cc9c9158822f"},{"code":"(fn [x y] (-> (drop y x) first))","problem":21,"user":"534b1930e4b084c2834f4a76"},{"problem":21,"code":"#(loop [x %1 y %2 i 0]\n   (if (= y i)\n     (first x)\n     (recur (rest x) y (inc i))))","user":"57f8ba80e4b0d3187e90092f"},{"problem":21,"code":"(fn [thisList, index] (first (drop index thisList)))","user":"56298649e4b00e49c7cb480d"},{"code":"(fn [s n]\n  (loop [s s\n         n n]\n    (if (zero? n)\n      (first s)\n      (recur (rest s) (dec n)))))","problem":21,"user":"516014fde4b0e2be8aa20be1"},{"problem":21,"code":"(fn elem [xs n] (if (zero? n) (first xs) (elem (rest xs) (dec n))))","user":"5f6adf5ee4b02876ed9fd049"},{"problem":21,"code":"(fn [ls pos]\n  (if (= pos 0) (first ls)\n     (recur (rest ls) (dec pos))))","user":"53b685e0e4b047364c0444c7"},{"code":"(fn [x n] \n  (if (= 0 n)\n    (first x)\n    (recur (rest x) (dec n))))","problem":21,"user":"5047bbd1e4b0ec70b3ef8d90"},{"code":"#(first (drop %2 (take (+ 1 %2) %)))","problem":21,"user":"50057aa5e4b0678c553fc465"},{"code":"(fn [x n]\n  (first (drop\n   (- \n    (count x)\n    (- (count x) n)) x)))","problem":21,"user":"5047eadde4b0ec70b3ef8d94"},{"problem":21,"code":"(fn mynth [s n] (if (= n 0) (first s) (mynth (rest s) (dec n))))","user":"534b57bbe4b084c2834f4a78"},{"problem":21,"code":"(fn mynth\n  ([s, index]\n   (if (> index 0)\n     (mynth (rest s) (dec index))\n     (first s))))","user":"602f56c5e4b0d5df2af22297"},{"code":"(fn func [x,y] (if (= y 0) (first x) (func (rest x) (- y 1))))","problem":21,"user":"51004dabe4b0e0dde55c17f0"},{"code":"(fn [s n] (if (= 0 n) (first s) (recur (rest s) (- n 1))))","problem":21,"user":"522a01ade4b0590a43906ced"},{"code":"(fn nth-s99 [l n]\n(if (= 0 n) (first l) (nth-s99 (rest l) (- n 1))))","problem":21,"user":"52168148e4b0bf4bffd29ccd"},{"problem":21,"code":"(fn enth \n  ([coll n] (enth coll n 0))\n  ([coll n cnt]\n   (if (and (next coll) (> n cnt))\n     (recur (rest coll) n (inc cnt))\n     (first coll))))","user":"55b6d917e4b01b9910ae299e"},{"code":"(fn [x n]\n  (loop [i n l x]\n    (if (= 0 i)\n      (first l)\n      (recur (dec i) (rest l)))))","problem":21,"user":"51ebe433e4b069f463c22cc4"},{"problem":21,"code":"(fn\n  [xs n]\n  (loop [lst xs cnt n]\n    (if (= 0 cnt)\n      (first lst)\n      (recur  (rest lst) (dec cnt)))))","user":"57a182fde4b0c3d858beb8ed"},{"code":"(fn [l pos]\n  (if (= 0 pos)\n    (first l)\n    (recur (rest l) (dec pos))))","problem":21,"user":"52ccc231e4b07d0d72b27370"},{"problem":21,"code":"(fn [xs n] (loop [it (first xs) others (rest xs) i 0] (if (= i n) it (recur (first others) (rest others) (inc i)))))","user":"57b65420e4b0fbc9809a27be"},{"code":"#(if (= %2 0) \n    (first %)\n    (recur (rest %) (- %2 1)))","problem":21,"user":"5236cd89e4b0e010857b4e45"},{"code":"#( last( keep-indexed ( fn [idx v] (if (= idx %2 ) v ) ) %1 ) )","problem":21,"user":"507f393ee4b0f753b6f9789a"},{"problem":21,"code":"(fn [s n] \n  (let [rest-n-time (apply comp first (repeat n rest))]\n    (rest-n-time s)))","user":"5ea444b7e4b00a66d4a951a0"},{"code":"(fn xxx [s n] (last (take ((fn yyy [nn] (+ nn 1)) n) s)))","problem":21,"user":"52e295fae4b09f7907dd1437"},{"code":"(fn [x y] \r\n    (if (= 0 y) (first x) (recur (next x) (dec y))))","problem":21,"user":"4dde4e95535d08e6dec9fdd7"},{"problem":21,"code":"(fn my-nth [xs number]\n  (loop [arr xs\n         counter 0]\n    (if (= counter number)\n      (first arr)\n      (recur (rest arr) (inc counter)))))","user":"5bab8c06e4b0a20761a2347e"},{"code":"(fn nthElem [coll, i]\n  (if (= i 0)\n    (first coll)\n    (nthElem (rest coll) (- i 1))))","problem":21,"user":"4f65f537e4b07046d9f4ef4a"},{"code":"(fn nthe [a x] (if (= 0 x) (first a) (nthe (rest a) (- x 1))))","problem":21,"user":"522080fde4b0e6a83c89259e"},{"problem":21,"code":"#(->(take (+ 1 %2) %1)\n    last)","user":"5a18488ee4b0ff51aa4b31e5"},{"problem":21,"code":"(fn nthElement [x, n] \n  (if (= n 0)\n    (first x)\n    (nthElement (rest x) (- n 1))))","user":"54336443e4b0b6b47310fcde"},{"problem":21,"code":"(fn get-nth-last [s i] (if (= (- (count s) i) (count s)) (first s) (get-nth-last (rest s) (dec i))))","user":"57e56da8e4b0bfb2137f5ad6"},{"problem":21,"code":"(fn nthel [alist, n] (if (> n 0) (nthel (rest alist) (- n 1)) (first alist)))","user":"58950f29e4b00487982d5270"},{"code":"(fn [haystack needle]\r\n ((fn [haystack needle i]\r\n   (if (= needle i)\r\n    (first haystack)\r\n    (recur (rest haystack) needle (+ i 1)))) haystack needle 0))","problem":21,"user":"4ec953ba535d6d7199dd36fd"},{"problem":21,"code":"(fn nthelem\n  [sequence n]\n  ((comp first drop) n sequence))","user":"557e9d17e4b05c286339e0d8"},{"problem":21,"code":"(fn [x n] (loop [seq x i 0] (if (= i n) (first seq) (recur (rest seq) (inc i)))))","user":"6076adb2e4b069485764de60"},{"code":"(fn [list element] (first (nthnext list element)))","problem":21,"user":"4fdb0c0ae4b05e33b9224f57"},{"problem":21,"code":"(fn d [coll x]\n  (if (= 0 x)\n    (first coll)\n    (d (rest coll) (dec x))))","user":"59f189f7e4b0966464fe6a5b"},{"code":"(fn [x n] (loop [coll x counter n ]\n            (if (= counter 0)\n              (first coll)\n              (recur (rest coll) (dec counter)))))","problem":21,"user":"52cab37be4b071a8d36bd3e6"},{"code":"(fn [items, i] (get (vec items) i))","problem":21,"user":"52642ce7e4b03e8d9a4a70c9"},{"code":"(fn [x n]  (first (drop n x)))","problem":21,"user":"5130fc48e4b07b22f541297f"},{"problem":21,"code":"(fn [list pos] (loop [list list]\n        (if (= (count list) (+ 1 pos))\n            (last list)\n            (recur (drop-last list))))\n      )","user":"546f74dae4b00cfc9eacc1ac"},{"code":"(fn [coll n]\n  (last (take (inc n) coll)))","problem":21,"user":"4f38d6bbe4b0e243712b1ee2"},{"problem":21,"code":"(fn my-nth [s n] (cond (= n 0) (first s)\n                :else (my-nth (rest s) (- n 1))))","user":"5e29fb32e4b05b4b015161b2"},{"problem":21,"code":"(fn [ x i] (first (drop i x)))","user":"53f34a16e4b0742d9025b0f3"},{"problem":21,"code":";; To avoid \"You tripped the alarm! nth is bad!\", we give our function the name _nth.\n(fn _nth [seq n]\n  (if (vector? seq)                     \n    (get seq n)\n    (if (= n 0)\n      (first seq)\n      (_nth (rest seq) (- n 1)))))","user":"60bf4e5de4b0e0fa5f1b4293"},{"problem":21,"code":"(fn [s, i]\n  (if (> i 0)\n     (recur (rest s) (dec i))\n     (first s)))","user":"5996cce8e4b07157cc8daab9"},{"problem":21,"code":"(fn [my-list n] (let [my-vector (into [] my-list)] (get my-vector n)))","user":"52420e2fe4b076e5d3121f48"},{"problem":21,"code":"(fn [seq-x ind-y] (last (take (inc ind-y) seq-x)))","user":"55f27d95e4b06e875b46ce47"},{"problem":21,"code":"(fn [liste index] \n  ( loop [premier (first liste) i 0 autres (rest liste)] \n    (if (= i index)\n      premier\n      (recur (first autres) (inc i) (rest autres))\n      )\n    )\n  )","user":"56438342e4b0018b46ad8bf4"},{"code":"(fn [li n] (second ( take-nth n li)))","problem":21,"user":"5129b0eee4b02a03fbcee0a7"},{"problem":21,"code":"(fn [lst goal]\n  (loop [counter 0\n         remain lst]\n    (if (= counter goal)\n      (first remain)\n      (recur (inc counter) (rest remain)))))","user":"589cb617e4b00487982d536a"},{"problem":21,"code":"(fn nthr [x n]\n  (if (= n 0)\n   (first x)\n   (nthr (rest x) (- n 1))\n  )\n)","user":"56ce8728e4b0ea9b8538f760"},{"problem":21,"code":"(fn my-n [the-list n]\n  (if (= n 0) \n    (first the-list)\n    (recur (rest the-list) (dec n))))","user":"5dda4254e4b0948ae9d9ad9e"},{"problem":21,"code":"(fn foo [lizt n] (if (= 0 n) (first lizt) (foo (rest lizt) (- n 1))))","user":"5665f435e4b0e91d5f5c5665"},{"problem":21,"code":"(fn [the-seq index]\n\t(get (vec the-seq) index))","user":"56a7be01e4b07966d5a8a05e"},{"problem":21,"code":"#(get (zipmap (range 0 (count %1)) %1) %2)","user":"5511dfafe4b06e50f9beb19c"},{"code":"(fn [s n] ((comp first drop) n s))","problem":21,"user":"5182254be4b0aac848ba272d"},{"problem":21,"code":"(fn [col numbr]\n   (loop [c col\n          n numbr]\n     (if (= 0 n)\n       (first c)\n       (recur (rest c) (dec n)))))","user":"5a24735fe4b07f18be40aa11"},{"problem":21,"code":"#( first ( drop %2 %1))","user":"5a83e15ae4b00b71e582a088"},{"problem":21,"code":"(fn [x, n]\n  (loop [l (rest x) e (first x) acc 0]\n    (if (= acc n)\n      e\n      (recur (rest l) (first l) (inc acc)))))","user":"5590e55de4b0277789237676"},{"problem":21,"code":"(fn get-nth [s n] (if (= 0 n)\n                    (first s)\n                    (get-nth (rest s) (- n 1))))","user":"5c376638e4b0d62ef62d9f74"},{"problem":21,"code":"(fn get-nth[xs n]\n  (if (= n 0) (first xs) (get-nth (rest xs) (- n 1))))","user":"54f904c2e4b01ecee9d88832"},{"problem":21,"code":"(fn my-nth [x y] (println y) (if (> y 0) (my-nth (rest x) (dec y)) (first x)))","user":"54cf0986e4b018d918be98c7"},{"code":"(fn [seq n] (first (drop n seq)))","problem":21,"user":"4e21c0c7535d04ed9115e818"},{"problem":21,"code":"#(if (zero? %2)\n   (first %1)\n   (recur (rest %1) (dec %2))\n   )","user":"52bca504e4b07a9af57922f9"},{"code":"(fn [coll n] (if (= n 0) (first coll)  (recur (rest coll) (dec n) )))","problem":21,"user":"522eba30e4b01cdb292c5f0e"},{"problem":21,"code":"(fn [elements n] \n  (loop [cnt 0 currEls elements] \n    (if (= cnt n) \n      (first currEls) \n      (recur (inc cnt) (rest currEls)) )))","user":"588fd085e4b00487982d51c0"},{"problem":21,"code":"(fn n-th [seq index]\n  (loop [s seq i index]\n    (if (zero? i)\n      (first s)\n      (recur (rest s) (dec i)))))","user":"5661e09ae4b068f2fe63dc70"},{"code":"(fn [c n] (last (take (+ 1 n) c)))","problem":21,"user":"4fc4f68ae4b081705acca363"},{"problem":21,"code":"(fn [l number] (first (drop number l)))","user":"5e1308dde4b099d064962ff4"},{"code":"(fn [lst n]\n  (if (zero? n) (first lst)\n    (recur (rest lst) (- n 1))))","problem":21,"user":"538bd264e4b0640c7a9a58c8"},{"code":"(fn [lst n] \n  (if (zero? n)\n    (first lst)\n    (recur (rest lst) (- n 1))\n  )\n)","problem":21,"user":"53720d55e4b0493c815db705"},{"problem":21,"code":"(fn [s k]\n  (loop [s s k k]\n    (if (zero? k)\n      (first s)\n      (recur (rest s) (dec k)))))","user":"546c4377e4b00cfc9eacc177"},{"code":"(fn [col n] (loop [col col i 0] (if (= n i) (first col) (recur (rest col) (inc i)))))","problem":21,"user":"4f037a34535dcb61093f6ae9"},{"problem":21,"code":"#(first (reverse (take (+ 1 %2) %1)) )","user":"5d66aea7e4b0db5d338d15ec"},{"problem":21,"code":"(fn[coll n]\n  (first(drop n coll)))","user":"5b6e1649e4b0c6492753e7ce"},{"code":"(fn ith [c i] (if (= 0 i) (first c) (ith (rest c) (dec i))))","problem":21,"user":"5392b849e4b0b51d73faaeb1"},{"code":"#(get (vec %) %2)","problem":21,"user":"4e03c616535d04ed9115e796"},{"code":"(fn[list pos](first (drop pos list)))","problem":21,"user":"4f659386e4b07046d9f4ef44"},{"code":"(fn [v c] (first (nthrest v c)))","problem":21,"user":"538d7e2ee4b0b51d73faae70"},{"code":"(fn UnRest [x y](if (= y 0) (first x) (UnRest (rest x) (- y 1))))","problem":21,"user":"4fd7aba6e4b0dab7d829f388"},{"problem":21,"code":"(fn [sq n]\n  (cond \n   (= n 0) (first sq)\n   (= n 1) (first (next sq))\n   (= n 2) (first (next (next sq)))\n   )\n  )","user":"5ebd63dee4b00a66d4a95271"},{"problem":21,"code":"(fn [xs n] \n (first (drop n xs ))\n  \n  )","user":"56d137d8e4b0ea9b8538f78a"},{"problem":21,"code":"(fn [x y] (loop [cnt y myseq x] (if (zero? cnt) (first myseq) (recur (dec cnt) (rest myseq)))))","user":"538f4c1de4b0b51d73faae8c"},{"problem":21,"code":"(fn [coll loc]\n  (loop [collection coll\n         it 0]\n    (let [curr (first collection) remaining (rest collection)]\n      (if (= it loc)\n        curr\n        (recur remaining\n               (inc it))))))","user":"5bb0fc08e4b0a20761a234f3"},{"code":"(fn ! [coll n]\n  (if (= n 0)\n    (first coll)\n    (! (rest coll) (- n 1))))","problem":21,"user":"4e93600b535dbda64a6f6b0e"},{"problem":21,"code":"#(if (= 0 %2)\n\t  (first %1)\n\t  (recur (rest %1) (- %2 1))\n  )","user":"55c508f0e4b0e31453f649ac"},{"code":"(fn [coll n] \n  (if (= 0 n)\n        (first coll)\n        (recur (rest coll) (- n 1))))","problem":21,"user":"52000564e4b023d2eb508ca8"},{"code":"(fn [xs y] \n    (first (drop y xs)))","problem":21,"user":"516c6eabe4b06f078fab2522"},{"problem":21,"code":"(fn [s n]\n  (loop [s s n n]\n    (if (= n 0)\n      (first s)\n      (recur (next s) (dec n)))))","user":"566a6e38e4b0a866af68969b"},{"code":"(fn nnn [s x] \n  (if (= x 0) (first s) (recur (rest s) (dec x))))","problem":21,"user":"4f2861eee4b0d6649770a017"},{"problem":21,"code":"(fn getNth [sq n] (if (= n 0) (first sq) (getNth (rest sq) (- n 1))))","user":"5a856f1ae4b00b71e582a0a3"},{"problem":21,"code":"(fn findN [list idx]\n  (if (= idx 0)\n    (first list)\n    (findN (rest list) (dec idx))))","user":"58f00639e4b056aecfd47ddc"},{"problem":21,"code":"(fn [input index] (get (vec input) index))","user":"59fb4494e4b0ca45a743a37a"},{"code":"(fn [coll index]\n\t(loop [col (seq coll) idx index]\n\t\t\t(if (zero? idx)\n\t\t\t\t(first col)\n\t\t\t\t(recur (rest col)(dec idx)))))","problem":21,"user":"533a399de4b0e30313ee6cb9"},{"problem":21,"code":"( fn ennth [x n]\n   ( if (== n 0) \n           ( first x ) \n           ( ennth (rest x) (- n 1) )\n   )\n)","user":"5cf11680e4b0aaa82f112a09"},{"problem":21,"code":"(fn my-nth\n  ([c n] (my-nth c n 0))\n  ([c n i]\n   (if (= i n)\n     (first c)\n     (my-nth (rest c) n (inc i)))))","user":"5546704be4b0a04f7929953d"},{"problem":21,"code":"(fn\n  [ls n]\n    (if (= 0 n)\n      (first ls)\n      (recur (rest ls) (dec n))))","user":"5697fda8e4b0542e1f8d142c"},{"problem":21,"code":"(fn nth* [lst n]\n  (cond\n    (zero? n) (first lst)\n    :else (nth* (rest lst) (dec n))))","user":"58b26da4e4b0ebc645576d0a"},{"problem":21,"code":"(fn get_nth [coll n]\n  (cond (= n 0) (first coll)\n        :else (get_nth (rest coll) (- n 1))))","user":"58ffaddee4b0438e51c2cffe"},{"code":"#(if (= %2 0)\n    (first %1) \n    (recur (rest %1) (dec %2)))","problem":21,"user":"50b4383fe4b001349b2f4abf"},{"problem":21,"code":"(fn [xs n]\n   ((comp first #(drop n %)) xs)\n   )","user":"5c896f46e4b048ec896c5940"},{"problem":21,"code":"(fn nth-element [x n]\n(cond (= n 0) (first x)\n      :else (nth-element (rest x) (- n 1))))","user":"530ec8d4e4b08068f379ecc2"},{"problem":21,"code":"(fn [lst n] (last (first (partition (+ n 1) lst))))","user":"5ab564f8e4b073f177442639"},{"problem":21,"code":"(fn [s n]\n  (loop [cnt 0\n         r (rest s)\n         f (first s)]\n    (if (= cnt n)\n      f\n      (recur (+ cnt 1) (rest r) (first r)))))","user":"5b15d56be4b0cc2b61a3be74"},{"code":"(fn [l i] (if (= i 0) (first l) (recur (rest l) (- i 1))))","problem":21,"user":"4fc0853ae4b081705acca327"},{"problem":21,"code":"(fn [xs idx] (first (nthnext xs idx)))","user":"58d1fe17e4b03c36ff7e58f5"},{"problem":21,"code":"(fn [x y] (if (= y 0) (first x) (recur (rest x)(dec y))))","user":"58186016e4b0c0e9c07b83ad"},{"problem":21,"code":"(fn find-last [s, n]\n  (.get s n))","user":"5503dd7de4b086ebe8a79c77"},{"code":"(fn [arr count]\n  (if (= 0 count)\n    (first arr)\n    (recur (rest arr) (- count 1))))","problem":21,"user":"5179b3f1e4b01aacecbecbd9"},{"code":"#(last (first (partition (+ %2 1) %1)))","problem":21,"user":"504e058de4b078edc5f5939b"},{"problem":21,"code":"#(loop [i 0 coll %1]\n   (if (empty? coll)\n     nil\n     (if (= i %2)\n       (first coll)\n       (recur (inc i) (rest coll)))))","user":"563d4600e4b0bfe05bf1184c"},{"problem":21,"code":"(fn my-nth [s n]\n  (if (zero? n)\n    (first s)\n    (my-nth (rest s) (- n 1))))","user":"5906b1e8e4b047aa04b19938"},{"problem":21,"code":"(fn [x v] (first (drop v x)))","user":"604f4be1e4b0b7ec0ac60ace"},{"code":"(fn [coll n]\n  (if (= 0 n)\n    (first coll)\n    (recur (next coll) (dec n)\n            )))","problem":21,"user":"51da7e49e4b02ceefd947768"},{"code":"(fn mynth [s n] (if (= 0 n) (first s) (mynth (rest s) (dec n))))","problem":21,"user":"51d4609be4b013d740b70de1"},{"code":"(fn r [s e & {:keys [current] :or {current 0}}]\n  (if (= current e)\n     (first s)\n     (r (rest s) e :current (inc current))))","problem":21,"user":"5057852ce4b0012181721992"},{"code":"(fn [coll idx]\r\n  (loop [subColl coll  count 0]\r\n    (if (= count idx)\r\n        (first subColl)\r\n        (recur (rest subColl) (inc count))\r\n    )\r\n  ))","problem":21,"user":"505acd20e4b021387fb8985a"},{"problem":21,"code":"(fn [lst index]\n   (loop [counter 0 \n          rsLst lst]\n     (if (= index counter)\n       (first rsLst)\n       (recur (inc counter) (rest rsLst)))))","user":"53aec6e6e4b047364c044479"},{"code":"(fn [a b] (first (rest (take-nth b a))))","problem":21,"user":"4f12ab23535d64f603146429"},{"problem":21,"code":"#(loop [lst %1\n        index %2]\n   (if (= index 0)\n     (first lst)\n     (recur (rest lst) (- index 1))))","user":"5fb082cfe4b08cb800c85b14"},{"problem":21,"code":"(fn prob21 [coll idx]\n  (if (seq coll)\n    (if (= idx 0)\n      (first coll)\n      (recur (rest coll) (dec idx)))))","user":"4f0554aa535dcb61093f6bf5"},{"code":"(fn [seq, idx] (first (drop idx seq)))","problem":21,"user":"4fc559eae4b0ee37620e17f3"},{"problem":21,"code":"(fn findNth [coll idx] (get (vec coll) idx))","user":"58597562e4b0f14aab7c8734"},{"problem":21,"code":"(fn f [x, i]\n  (if (= i 0)\n    (first x)\n    (f (rest x) (dec i))))","user":"593d6793e4b069cdc2982ba6"},{"problem":21,"code":"(fn [List Index]\n  (if (= Index 0)\n    (first List)\n    (recur (rest List) (- Index 1))\n  )\n)","user":"5d4a6c6ce4b0776584bd6f22"},{"code":"(fn mynth [seq, pos] (.get seq pos))","problem":21,"user":"537bb9efe4b06839e8705e6e"},{"problem":21,"code":"(fn [l cnt] (first (drop cnt l)))","user":"5591b61ee4b0604b3f94d580"},{"code":"(fn [s i] (first (filter #(= (.indexOf s %) i) s)))","problem":21,"user":"50481532e4b0ec70b3ef8d96"},{"problem":21,"code":"(fn get-nth [s n] (if (= 0 n)\n                 (first s)\n                 (get-nth (rest s) (- n 1))))","user":"597a7418e4b02382a38ad1e9"},{"problem":21,"code":"(fn [a c] (\n first (\n  loop [cnt c a a] (\n   if (zero? cnt) a (\n    recur (dec cnt) (rest a)\n   )\n  )\n )\n))","user":"5bfc6d4de4b0bdcf453d15ed"},{"code":"(fn nth-- [l n]\n  (if (= n 0)\n    (first l)\n    (nth-- (rest l) (dec n))))","problem":21,"user":"504ec4d3e4b069badc5a33c9"},{"code":"#(cond\n  (= %2 0) (first %1)\n  :else (recur (rest %1) (dec %2)))","problem":21,"user":"52c58440e4b0c2d177d620f7"},{"problem":21,"code":"(fn [s i]\n    (loop [c i t s]\n      (if (zero? c)\n        (first t)\n        (recur (dec c) (rest t))\n        )))","user":"5d52bf29e4b0776584bd6f69"},{"problem":21,"code":"(fn[coll n](first (drop n coll)))","user":"55fde52ce4b00f4cabc5764c"},{"code":"(fn [lst n]\n\t(if (= n 0) (first lst)\n    \t(recur (rest lst) (- n 1))))","problem":21,"user":"5146f343e4b04ef915e3731e"},{"problem":21,"code":"(fn [coll n] \n  (if (zero? n) \n    (first coll) (recur (rest coll) \n                        (dec n))))","user":"5d05d005e4b0cc9c915881e6"},{"code":"(fn [l n]\n  (loop [li l ni n]\n    (if (= ni 0)\n      (first li)\n      (recur (rest li) (- ni 1)))))","problem":21,"user":"52979551e4b02ebb4ef75043"},{"code":"(fn f [c x] (last (take (+ x 1) c)))","problem":21,"user":"50a0267fe4b08df8156e9e4a"},{"problem":21,"code":"(fn x\n    [coll n]\n    (if (> n 0)\n      (x (rest coll) (dec n))\n      (first coll)\n      ))","user":"5ab575f8e4b073f17744263d"},{"code":"(fn [l n] (if (= 0 n) (first l)\n  (recur (rest l) (dec n))\n  ))","problem":21,"user":"531902b1e4b08068f379ed77"},{"problem":21,"code":"(fn x [l i] (if (= i 0) (first l) (x (rest l) (- i 1))))","user":"5b8db323e4b0c0b3ffbd49da"},{"code":"#(loop [lst %1 n %2 i 0] (if (= i n) (first lst) (recur (rest lst) n (inc i))))","problem":21,"user":"4e6a3930535d8ccf87e9feb0"},{"code":"(fn [c n] (if (zero? n) (first c) (recur (rest c) (- n 1))))","problem":21,"user":"4f7250a6e4b07046d9f4f029"},{"code":"(fn [colls pos](loop [times pos left colls]\n    (if (> times 0) \n      \n      (recur (dec times)(rest left))\n(first left)\n      )))","problem":21,"user":"4f9970b3e4b0dcca54ed6cfd"},{"problem":21,"code":"#(first (reverse (take (inc %2) %)))","user":"58217fbde4b04b46fc4b0f78"},{"problem":21,"code":"(fn f [x y] (if (= y 0) (first x) (recur (rest x) (- y 1))))","user":"55dac0dfe4b0e31453f64adb"},{"problem":21,"code":"(fn my-nth [xs y]\n  (if (= y 0) (first xs)\n    (my-nth (rest xs) (dec y)\n  )))","user":"5dcbbfeee4b02b31cc3da3bc"},{"code":"#(if (zero? %2) (first %) (recur (rest %) (- %2 1)))","problem":21,"user":"52517132e4b0541d1855b874"},{"problem":21,"code":"(fn [xs n]\n  (let [head (first xs)\n        tail (rest xs)]\n    (if (= n 0) head (recur tail (dec n)))))","user":"559a8d4ce4b066d22e731f43"},{"code":"(fn [coll n] (last (take (inc n) coll)))","problem":21,"user":"4fde492be4b05e33b9224f8a"},{"code":"#(first(nthrest %1 %2))","problem":21,"user":"511a3392e4b09045b2b16943"},{"problem":21,"code":"(fn [xs i] (\n  if (<= i 0)\n    (first xs)\n    (recur (rest xs) (- i 1) )\n))","user":"580b216fe4b0a837a8b30d45"},{"problem":21,"code":"(fn nth-el [s n]\n  (let [x (first s) xs (rest s)]\n    (if (= 0 n)\n      x\n      (nth-el xs (- n 1))\n    )\n  )\n)","user":"5b0bea6de4b0cc2b61a3bdda"},{"code":"(fn [a-seq n]\n    (loop [counter 0 new-seq a-seq]\n      (if (= n counter)\n        (first new-seq)\n        (recur (+ 1 counter) (rest new-seq)))))","problem":21,"user":"50febf94e4b075812dd6dfb3"},{"problem":21,"code":"(fn [s x] \n  (loop [curr 0 sq s]\n    (if (= curr x)\n      (first sq)\n      (recur (inc curr) (rest sq)))))","user":"5d657de2e4b0db5d338d15da"},{"code":"(fn nnn  ([x y] (if (= y 0) (first x) (nnn (rest x) (- y 1))))\n  )","problem":21,"user":"51f549c4e4b0abb92f97f9cb"},{"code":"#(.get %1(+ 0 %2))","problem":21,"user":"52b5b2d1e4b0c58976d9ad3b"},{"code":"(fn [s n] (if (zero? n) (first s) (recur (rest s) (- n 1))))","problem":21,"user":"512da425e4b040332b905b34"},{"problem":21,"code":"(fn my-nth [lst n]\n  (first (drop n lst)))","user":"59e0111ae4b08badc2a0c4e4"},{"code":"(fn [x n] (loop [y x, i 0]\n  (cond (= i n) (first y)\n        :else (recur (rest y) (inc i)))))","problem":21,"user":"4e49a7bb535dc968683fc4c6"},{"code":"(fn nn [x n] (if (= 0 n) (first x) (nn (rest x) (dec n))))","problem":21,"user":"4fc4eadee4b081705acca353"},{"problem":21,"code":"(fn [arr pos] (first \n               (last (split-at pos arr))\n               )\n  )","user":"56f0ecf4e4b04a395b9a0484"},{"code":"(fn t [x,y] (if (= y 0)\r\n\t\t\t\t\t\t(first x)\r\n\t\t\t\t\t\t(t (next x) (- y 1))))","problem":21,"user":"4f8dbae2e4b02e764a0a51b3"},{"problem":21,"code":"(fn [sequ, ite] (first (loop [i 0 a sequ] (if (= i ite) a (recur (inc i)(rest a))))))","user":"57a6f585e4b0a9660795620e"},{"problem":21,"code":"(fn zw [s n] (if (= n 0) (first s) (zw (rest s) (- n 1))))","user":"5567b9dce4b0c656e3ff1846"},{"problem":21,"code":"(fn [a n] (loop [i 0 a a] (if-not (= i n) (recur (inc i) (rest a)) (first a))))","user":"54bec835e4b0ed20f4ff6ef7"},{"code":"(fn my-nth [list, position]\n  (if (= position 0) \n    (first list) \n    (my-nth (rest list) (- position 1))))","problem":21,"user":"508fd6bae4b0ea685a20f76b"},{"problem":21,"code":"#(loop [lst %1\n        c %2]\n   (if (zero? c)\n     (first lst)\n     (recur (rest lst) (- c 1))))","user":"56f413b2e4b046a417f9205a"},{"problem":21,"code":"(fn [x y] (loop [l x pos y i 0] (if (= pos i) (first l) (recur (rest l) pos (inc i)))))","user":"58d4f44ee4b03c36ff7e594f"},{"problem":21,"code":"(fn foo [x n] (if (= 0 n)\n                             (first x)\n                             (foo (rest x) (- n 1)))\n\n                        )","user":"565b372ee4b068f2fe63dc00"},{"problem":21,"code":"(fn [s n]\n  (if (> n 0)\n    (recur (rest s) (dec n))\n    (first s)\n    ))","user":"54c97cb3e4b045293a27f677"},{"problem":21,"code":"(fn [liste indice]\n  (loop [indice_current 0\n         liste_current liste]\n    (if (= indice indice_current)\n      (first liste_current)\n      (recur (inc indice_current) (rest liste_current))\n     )\n    )\n  )","user":"5a7f77fae4b00b71e582a041"},{"problem":21,"code":"(fn [theList item]\n  (if (= 0 item)\n    (first theList)\n    (recur (rest theList) (- item 1))))","user":"599e3677e4b0871e7608b809"},{"problem":21,"code":"(fn [s n]\n  (first \n   (drop n s))\n  )","user":"5481e55ce4b0e286459a1175"},{"code":"(fn [xs n]\n  (last (take (inc n) xs)))","problem":21,"user":"52aa4d9ee4b0c58976d9ac63"},{"code":"(fn [set_ n]\n  (if \n    (> n 0) \n    (recur (rest set_) (dec n))\n    (first set_)))","problem":21,"user":"4f71f782e4b07046d9f4f018"},{"problem":21,"code":"(fn foo [li pos]\n  (if (= pos 0)\n    (first li)\n    (foo (rest li) (- pos 1))))","user":"59156f0be4b0163c97b36f3d"},{"problem":21,"code":"(fn [x y] (get(into [] x) y))","user":"57453a52e4b009280f9f2b49"},{"code":"(fn [s n]\n    ((apply comp (cons first (repeat n rest))) s))","problem":21,"user":"50a7ef7fe4b090657f4a5ce0"},{"problem":21,"code":"(fn [coll index]\n  (last (take (inc index) coll)))","user":"541df619e4b01498b1a71a87"},{"code":"(fn ind [lst i]\n  (cond\n   \t(= i 0) (first lst)\n   \t:else (ind (rest lst) (- i 1))))","problem":21,"user":"52709149e4b03e8d9a4a73b1"},{"code":"(fn [coll x]\n  (first (drop x coll)))","problem":21,"user":"4f57c913e4b0a7574ea7183f"},{"code":"(fn [s i]\n  (if (>= 0 i) (first s)\n    (recur (rest s) (dec i))))","problem":21,"user":"50901b2ee4b0ea685a20f774"},{"problem":21,"code":"(fn [col e]\n  (if (< e 1)\n    (first col)\n    (recur (rest col) (dec e))))","user":"55907e8fe4b0277789237672"},{"problem":21,"code":"(fn [seq counter]\n  (if (= counter 0)\n    (first seq)\n    (recur (rest seq) (dec counter))))","user":"58df05ffe4b0a4d5acaab706"},{"problem":21,"code":"(fn nieme [ss n]\n  (if (zero? n) (first ss) (nieme (rest ss) (dec n))))","user":"5d9552bde4b0d3f9b434ad2e"},{"code":"(fn nthprime [l n]\n\t(if (zero? n)\n\t\t(first l)\n\t\t(recur (rest l) (dec n))))","problem":21,"user":"539378fbe4b0b51d73faaebd"},{"problem":21,"code":"(fn [a n] (first (drop n a)))","user":"53d17fdde4b00fb29b221315"},{"problem":21,"code":"(fn nth-ele [coll n]\n\t(if (pos? n)\n      \t(recur (rest coll) (- n 1))\n      \t(first coll)))","user":"54cc4156e4b057c6fda3a28c"},{"code":";#(first (subvec (vec %1) %2))\n;#(get (vec %1) %2)\n#((vec %1) %2)","problem":21,"user":"511937e1e4b055cfb310d494"},{"code":"(fn my-nth [seq n]\n  (if (= n 0) (first seq) (my-nth (rest seq) (dec n))))","problem":21,"user":"4f5599dfe4b0a7574ea71806"},{"code":"(fn [things n]\n  (first (drop n things)))","problem":21,"user":"51ffc496e4b0f1313d468aa0"},{"problem":21,"code":"#(last (take(inc %2) %1))","user":"5cdaf05ee4b05ee0cb311722"},{"code":"(fn enth [a b] \n  (loop [a a\n         b b]\n    (if (= b 0)\n      (first a)\n      (recur (rest a) (dec b)))))","problem":21,"user":"52c08c59e4b07a9af5792351"},{"problem":21,"code":"(fn [coll n]\n  (last (take (+ n 1) coll))\n  )","user":"54708efce4b00cfc9eacc1b9"},{"code":"(fn [s n] ((comp last (partial take (+ n 1))) s) )","problem":21,"user":"52c35afce4b07a9af579238c"},{"code":"(fn [seq n]\n  (get (vec seq) n))","problem":21,"user":"524379a4e4b076204b44fac0"},{"code":"(fn getMeNth [x y] (if (= y 0)\n                       (first x)\n                       (getMeNth (rest x) (- y 1))))","problem":21,"user":"50a4d1d3e4b0344e360f3bc6"},{"code":"(fn qual [l n] (if (> n 0) (qual (rest l) (- n 1)) (first l)))","problem":21,"user":"4f8c5f4fe4b02e764a0a5198"},{"code":"#(if (> %2 0) (recur (rest %1) (dec %2)) (first %1))","problem":21,"user":"4e44358f535dc968683fc4a8"},{"problem":21,"code":"#(loop [s %1 n %2]\n   (if (zero? n)\n   \t (first s)\n     (recur (rest s)(dec n))))","user":"56a62137e4b0542e1f8d14e8"},{"problem":21,"code":"#(->> %1 (take (+ %2 1)) last)","user":"564cc881e4b0284900eef677"},{"code":"(fn ne [x, index] (get (vec x) index))","problem":21,"user":"4f193dab535d64f603146465"},{"problem":21,"code":"(fn [coll n] (first (filter #(= (.indexOf coll %) n) coll)))","user":"541ad1c1e4b01498b1a71a5c"},{"problem":21,"code":"#(loop [l %1 x %2]\n    (if(zero? x) (first l) (recur (rest l) (dec x))))","user":"581b4d3be4b04b46fc4b0ec6"},{"code":"(fn mynth [myseq num]\n  (first (drop num myseq)))","problem":21,"user":"4fa4bf47e4b081705acca1a3"},{"problem":21,"code":"(fn mynth [x n]\n  (if (= n 0)\n    (first x)\n    (mynth (rest x) (- n 1))))","user":"54651982e4b01be26fd746d4"},{"problem":21,"code":"(fn foo [i x] \n  (if (= 0 x)\n    (first i)\n    (foo (rest i) (dec x))\n  )\n)","user":"53838e73e4b06839e8705ee2"},{"problem":21,"code":"(fn [lat n]\n  (if (zero? n)\n    (first lat)\n    (recur (rest lat) (- n 1))))","user":"5f90aeefe4b0715f5002d799"},{"problem":21,"code":"#(loop [i (- (dec (count %1) ) %2)\n                    col (reverse (into [] %1))]\n               (if (zero? i)\n                 (first col)\n                 (recur (dec i) (pop col))))","user":"5b9783dae4b0c0b3ffbd4a93"},{"problem":21,"code":"#(.get %1 (+ 0 %2))","user":"53ef55eee4b0742d9025b0ca"},{"problem":21,"code":"(fn [l n] ((vec l) n) )","user":"5be1a134e4b0ed4b8aab4ca0"},{"problem":21,"code":"(fn [seq n]\n          (if (<= n 0)\n            (first seq)\n            (recur (rest seq) (dec n))))","user":"5c995fa4e4b048ec896c5a96"},{"problem":21,"code":"(fn return-element [x n] (first (nthnext x n)))","user":"57ee2b3ee4b0bfb2137f5bac"},{"code":"(fn [coll ind]\n  ((reduce merge\n          {}\n          (map (fn [v k] {k v}) coll (range)))\n  ind))","problem":21,"user":"4f3a2585e4b0e243712b1f03"},{"problem":21,"code":"(fn [orig-lst index] \n  (loop [lst orig-lst acc 0]\n    (if (= acc index)\n      (first lst)\n      (recur (rest lst) (inc acc)))))","user":"4ec7e048535d6d7199dd36ea"},{"problem":21,"code":"(fn [lst n]\n  (last (take (inc n) lst)))","user":"53f31dafe4b0742d9025b0f0"},{"code":"(fn [coll i] (get (vec coll) i))","problem":21,"user":"5280539ce4b0757a1b1713f3"},{"code":"(fn [x y] \r\n (first(drop y x)))","problem":21,"user":"50478418e4b0371827a27bc3"},{"code":"(fn [l x]\n  (if (= x 0) (first l)\n    (recur (rest l) (dec x))))","problem":21,"user":"531619c1e4b08068f379ed3d"},{"problem":21,"code":"(fn [coll n]\n  (letfn [(iter [coll n]\n                (cond \n                 (nil? coll) nil\n                 (= n 0) (first coll)\n                 :else (recur (next coll) (dec n))))]\n    (iter coll n)))","user":"553527ede4b09218d5f44fab"},{"problem":21,"code":"(fn [x y] (first (drop  y x)))","user":"5faca2e4e4b08cb800c85ae8"},{"problem":21,"code":"(fn func [s n]\n  (if (= 0 n)\n    (first s)\n    (func (rest s) (dec n))))","user":"5c486dece4b0e06e1360a3c0"},{"code":"(fn\n        [item index]\n        (if (= 0 index)\n            ((vec item) 0)\n          (recur (rest item) (dec index))))","problem":21,"user":"5145c116e4b099c3fbe2884a"},{"code":"(fn myNth [x y] (\n  if (= y 0) (first x) (myNth (rest x) (- y 1))\n ))","problem":21,"user":"508595b0e4b004985b776e4f"},{"problem":21,"code":"(fn my-nth [s n] \n  (if (= 0 n)\n    (first s)\n    (my-nth (rest s) (- n 1))))","user":"5ed2c4c7e4b016b56eae05c0"},{"problem":21,"code":"(fn r [xs index]\n  (cond \n   (neg? index) nil\n   (= 0 index) (first xs)\n   :else (r (rest xs) (dec index))))","user":"504e0fdfe4b078edc5f593ae"},{"problem":21,"code":"(fn [xs n]\n  (if (> n 0)\n    (recur (rest xs) (- n 1))\n    (first xs)))","user":"59c6de70e4b0a024fb6ae538"},{"problem":21,"code":"#( (apply comp (conj (repeat %2 rest) first)) %1 )","user":"57b99d48e4b0fbc9809a27f2"},{"code":"(fn [s n]\n  (if (zero? n)\n    (first s)\n    (recur (rest s) (dec n))\n    )\n  )","problem":21,"user":"51e24a04e4b01e5198146430"},{"problem":21,"code":"(fn pull [coll i] (if (nil? (first coll)) nil (if (= i 0) (first coll) (pull (rest coll) (- i 1)))))","user":"57d0fce5e4b0bd073c202364"},{"code":"(fn [x n]\n  (first (reverse (take (+ 1 n) x))))","problem":21,"user":"50b63c5ee4b0a86f8358ca69"},{"problem":21,"code":"(fn [list_nums n]\n  (last (take (inc n) list_nums))\n )","user":"5d8bed9fe4b0915913b1d3d9"},{"code":"(fn [lst cnt]\n  (if (= cnt 0)\n    (first lst)\n    (recur (rest lst) (dec cnt))))","problem":21,"user":"509251f3e4b09a7d0b586de5"},{"problem":21,"code":"(fn mynth [arr n]\n  (loop [arr arr cnt 0]\n    (if (= cnt n)\n      (first arr)\n      (recur (rest arr) (inc cnt))\n  )))","user":"5f6a266ae4b02876ed9fd042"},{"code":"(fn [s n] (first(seq(last(split-at n s)))))","problem":21,"user":"4ec8dc17535d6d7199dd36f7"},{"code":"(fn [x y] (first ( second (split-at y x))))","problem":21,"user":"4e692c0d535d8ccf87e9fe99"},{"code":"(fn [x y] \n   (if (= (type x) clojure.lang.PersistentVector)\n     (x y)\n     ((into [] x) y)))","problem":21,"user":"52151220e4b0961f15ac4da7"},{"problem":21,"code":"(fn foo [x y] (first (drop y x)))","user":"5751de3be4b02ea11479928d"},{"code":"(fn my-nth [xs n] (if (= n 0) (first xs) (recur (rest xs) (dec n))))","problem":21,"user":"4fae0b85e4b081705acca245"},{"problem":21,"code":"(fn [items i] (last (take (inc i) items)))","user":"56020b3fe4b04bb52996e19b"},{"code":"(fn [x n]\n  (if (zero? n)\n    (first x)\n    (recur (rest x) (dec n))))","problem":21,"user":"4e9b87b8535dbda64a6f6b78"},{"code":"(fn [xs x]  (last (take (+ x 1) xs)))","problem":21,"user":"536f96e3e4b0fc7073fd6e83"},{"code":"(fn [s n] (first (drop n s) ) )","problem":21,"user":"52e8ecbbe4b09f7907dd14a0"},{"code":"(fn my-nth\n  ([x n] (my-nth x n 0))\n  ([x n counter]\n   (if (= n counter)\n     (first x)\n     (my-nth (rest x) n (+ 1 counter)))))","problem":21,"user":"5249b0c8e4b05ef8e38e6471"},{"code":"(fn [_list index]\n(loop [\nthe-list _list \ncurrent-index 0\n]\n (if\n(= current-index index)\n(first the-list)\n(recur (next the-list) (inc current-index))\n)))","problem":21,"user":"50550f43e4b0b1b9d1860eb7"},{"problem":21,"code":"(fn my-nth [coll pos]\n  (first (drop pos coll)))","user":"55638fe1e4b0c656e3ff17ee"},{"problem":21,"code":"(fn [list i]\n  (first (drop i list)))","user":"5a932f63e4b0d174b936c71b"},{"problem":21,"code":"(fn [data x] (last(take (inc x) data)))","user":"5f19ecbae4b091ba50b4dbdf"},{"problem":21,"code":"(fn get-nth [seq index] (.get seq index))","user":"55635886e4b0c656e3ff17e9"},{"problem":21,"code":"(fn [c n]\n  (loop [n' 0\n         c' c]\n    (if (< n' n)\n      (recur (+ n' 1) (rest c'))\n      (first c'))))","user":"57aa4775e4b0b8559636fc6b"},{"code":"(fn my-nth \n  [xs n] \n  (if (> n 0) \n    (recur (rest xs) (dec n))\n    (first xs)))","problem":21,"user":"5080a9d3e4b01a93d3f38e4a"},{"code":"(fn [l n] (if (= n 0) (first l) (recur (next l) (dec n))))","problem":21,"user":"50fb46e6e4b0d10d794c19e5"},{"code":"#(loop [wanted %2 source %1] (if (zero? wanted)\n(first source) (recur (dec wanted) (rest source))))","problem":21,"user":"5274eb56e4b03e8d9a4a74bb"},{"problem":21,"code":"#(loop [n %2 l %1] \n   (if (zero? n) \n     (first l) \n     (recur (dec n) (rest l))))","user":"52c48ec6e4b0c2d177d620dd"},{"code":"(fn [collection index] ((fn [col ind x] (if (= x ind) (first col) (recur (next col) ind (inc x)))) collection index 0))","problem":21,"user":"50be9b4ae4b00fb48fed2ef6"},{"problem":21,"code":"(fn [sequ place] (first(drop place sequ)) )","user":"5a67069ce4b0512ff01cd9d9"},{"problem":21,"code":"#(peek (vec (take (+ %2 1) %1 )))","user":"5545f713e4b0a04f7929953a"},{"problem":21,"code":"(fn \n [coll n] \n  (loop [lis coll b 0]\n       (if (= b n)\n         (first lis)\n         (recur (rest lis)\n                (inc b))\n             \n        )\n  )\n \n)","user":"5f631e11e4b02876ed9fd011"},{"problem":21,"code":"(fn [seq n] (if (= 0 n) (first seq) (recur (rest seq) (dec n))))","user":"5d931a58e4b0d3f9b434ad10"},{"code":"(fn [coll index]\r\n  (last (take (inc index) coll)))","problem":21,"user":"4dddff47535d08e6dec9fdd4"},{"problem":21,"code":"(fn [a b]\n  (loop [list a cnt 0]\n    (if (= cnt b) \n      (first list)\n      (recur (rest list) (inc cnt)))))","user":"57ff52c7e4b0d3187e9009ea"},{"code":"#(->> % (drop %2) first)","problem":21,"user":"4eca40cd535d6d7199dd3703"},{"problem":21,"code":"(fn [coll in] (get (vec coll) in))","user":"5420c6e4e4b01498b1a71aaa"},{"code":"#(peek (vec (take (inc %2) %1)))","problem":21,"user":"50e008d1e4b061dbdced722a"},{"problem":21,"code":"(fn step [coll k]\n  (if (= k 0) (first coll) (step (rest coll) (- k 1)))\n  )","user":"53ed6976e4b0d648e757f4c4"},{"problem":21,"code":"(fn [seqs n]\n  (loop [i 0 newseqs seqs]\n    (if (== i n)\n      (first newseqs)\n      (recur (+ 1 i) (rest newseqs)))\n      )\n  )","user":"54d05a9de4b0e8a36923e5c7"},{"problem":21,"code":"(fn [items n]\n   (if (= n 0)\n     (first items)\n     (recur (rest items) (- n 1))))","user":"5e7b2d86e4b085ba37836e11"},{"code":"(fn index [lst i] (if (zero? i) (first lst) (index (rest lst) (dec i))))","problem":21,"user":"4fac031be4b081705acca221"},{"code":"(fn [s n] \n  (loop [s1 s n1 0]\n    (if (= n1 n)\n      (first s1)\n      (recur (next s1) (inc n1)))))","problem":21,"user":"506b18c8e4b0a2a5463de383"},{"code":"(fn [x num]\n  (if\n    (= num 0) (first x)\n    (recur (rest x) (- num 1))))","problem":21,"user":"4f54e6f8e4b0a7574ea717ef"},{"problem":21,"code":"(fn [s n]\n  (loop\n      [x s\n       y n]\n    (if (= y 0)\n      (first x)\n      (recur (rest x) (- y 1))\n      )))","user":"5ce6a0f4e4b0a17bb84e2b8d"},{"problem":21,"code":"(fn my-nth [l n] (if (<= n 0) (first l) (my-nth (rest l) (dec n))))","user":"58dcf11ae4b0a4d5acaab6af"},{"problem":21,"code":"(fn toll [l n]\n  (if\n    (= n 0)\n    (first l)\n    (toll (rest l) (dec n))\n   )\n  )","user":"569f8736e4b0542e1f8d1495"},{"code":"(fn mynth [x y] (\r\n    if (= (- (count x) 1) y) \r\n      (last x)\r\n      (mynth (butlast x) y)\r\n    )\r\n)","problem":21,"user":"4ddbd600535d02782fcbe9fb"},{"code":"(fn [container index] (loop [s container i index] (if (= i 0) (first s) (recur (next s) (dec i)))))","problem":21,"user":"52a195fde4b04e0c58e87bda"},{"problem":21,"code":"(fn [col n]\n  (loop [i 0 c col]\n    (if (= i n)\n      (first c)\n      (recur (inc i) (rest c))\n    )\n  )\n)","user":"5c9d3fffe4b048ec896c5b0a"},{"code":"(fn getnth [array index] (if (= index 0) (first array) (getnth (rest array) (- index 1)) ) )","problem":21,"user":"52ec1583e4b0705949c44449"},{"code":"(fn [seq n]\n  (loop [sq seq\n         num 0]\n    (if (= n num)\n      (first sq)\n      (recur (rest sq) (+ 1 num)  )\n    )\n  ))","problem":21,"user":"4e6daa22535d5021c1a895ef"},{"problem":21,"code":"(fn [col idx] (if (= idx 0) (first col) (recur (rest col) (dec idx))))","user":"5d838684e4b0915913b1d385"},{"code":"(fn [coll i]\n  (loop [coll coll i i]\n    (if (= 0 i)\n      (first coll)\n      (recur (rest coll) (dec i)))))","problem":21,"user":"51e7abeae4b0a3e081b8cbee"},{"code":"(fn [s e] (get (apply vector s) e))","problem":21,"user":"4f03b7d0535dcb61093f6b54"},{"code":"(fn [s n]\n  (if (zero? n) (first s)\n    (recur (rest s) (- n 1))))","problem":21,"user":"514dbd08e4b019235f6c058d"},{"code":"(fn [s,i]\n  (first (drop i s )))","problem":21,"user":"51215927e4b05ae5a5823c10"},{"code":"(fn f1 [l n] \n  (if (= n 0) \n    (first l) \n    (f1 (rest l) (dec n))\n))","problem":21,"user":"4ed6ac40535d10e5ff6f52e4"},{"problem":21,"code":"(fn nth* [col n]\n  ((vec col) n))","user":"602372aae4b0d5df2af2220f"},{"code":"(fn[xs x](last (take (+ x 1) xs)) )","problem":21,"user":"5302d79ce4b0d8b024fd3736"},{"problem":21,"code":"(fn [x a] \n    (get (into [] x) a)\n    \n  )","user":"5822b578e4b04b46fc4b0fa4"},{"problem":21,"code":"(fn [v index] (first (drop index v)))","user":"5d72ad8fe4b02e6b30c93512"},{"code":"(fn [list n] \n  (if (zero? n)\n    (first list)\n    (recur (rest list) (dec n))))","problem":21,"user":"4e726575535d5021c1a89660"},{"problem":21,"code":"(fn [elems index]\n  (last (take (inc index) elems)))","user":"540d5085e4b0addc1aec670e"},{"problem":21,"code":"(fn nth2 [x i] (if (= i 0) (first x) (nth2 (rest x) (dec i))))","user":"53bed4b5e4b0c98a41f5cc94"},{"problem":21,"code":"(fn replaceNth [someList, index] (if (= index 0) (first someList) (replaceNth (rest someList) (- index 1))))","user":"53f79b66e4b0de5c41848563"},{"problem":21,"code":"(fn mnth [s n] (if (zero? n) (first s) (mnth (rest s) (dec n))))","user":"5762bf13e4b0994c1922fbae"},{"code":"(fn [seq, n]\n  (if (= n 0)\n    (first seq)\n    (recur (rest seq) (dec n))\n  )\n)","problem":21,"user":"503d812ce4b06c4e0e1fa258"},{"problem":21,"code":"#(loop [i %2 myList %1] \n   (if (zero? i) \n     (first myList) \n     (recur (dec i) \n       (rest myList) \n     ) \n    ) \n )","user":"55ccfc6ee4b0e31453f64a19"},{"problem":21,"code":"(fn\n  [s n]\n  (last (take (inc n) s)))","user":"581395aae4b0f478707a0613"},{"code":"(fn f [l n] (if (= n 0) (first l) (f (rest l) (dec n))))","problem":21,"user":"50c4a354e4b0210b849018af"},{"problem":21,"code":"(fn[l z](loop [a 0 r l](if (= a z)(first r)(recur (inc a)(rest r)))))","user":"6045e761e4b02d28681c77bb"},{"code":"(fn [coll n]\n  (if (= n 0)\n    (first coll)\n    (recur (rest coll) (- n 1))))","problem":21,"user":"4e7be091535db169f9c796ba"},{"problem":21,"code":"(fn [coll n]\n  (if (<= n 0)\n    (first coll)\n    (recur (rest coll) (- n 1))))","user":"54b31445e4b09f271ff37d35"},{"problem":21,"code":"(fn [sq idx] (first (nthrest sq idx)))","user":"5846e925e4b089d5ab817e9d"},{"code":"(fn [xs i]\n  (get (vec xs) i))","problem":21,"user":"512b85a7e4b04d059cf1fd15"},{"code":"(fn n-th [l n] (if (= n 0) (first l) (n-th (rest l) (- n 1))))","problem":21,"user":"4e234e72535d04ed9115e822"},{"problem":21,"code":"(fn [s i]\n  (loop [items s\n         index i\n         x 0]\n    (if (= x index)\n         (first items)\n        (recur (rest items) index (inc x)))))","user":"5922599be4b09b4ee5954c8d"},{"code":"(fn [s n] \n (if (= n 0)\n  (first s)\n  (recur (rest s) (- n 1))\n))","problem":21,"user":"4f650efee4b07046d9f4ef39"},{"code":"(fn mynth [x n]  \n  (if (= n 0) \n    (first x) \n    (mynth (rest x) (- n 1))))","problem":21,"user":"4ebe81e9535dfed6da9c6d95"},{"problem":21,"code":"(fn [l,n] (last (take (+ n 1) l)))","user":"569a29e1e4b0542e1f8d1444"},{"code":"(fn [x-list x-idx] ((vec x-list) x-idx))","problem":21,"user":"50997a2be4b0cae2931060b6"},{"problem":21,"code":"(fn f [s x] (first(drop (- x 0) s)))","user":"58b2f085e4b0ebc645576d15"},{"code":"(fn mynth [coll n]\n  (loop [coll coll t 0]\n    (if (= t n)\n      (first coll)\n      (recur (rest coll) (+ 1 t)))))","problem":21,"user":"4e48ded5535dc968683fc4bf"},{"problem":21,"code":"(fn [lst idx]\n  (->> lst (drop idx) first))","user":"4fec08e8e4b0681fd128dc9d"},{"problem":21,"code":"(fn f[coll y]\n  (\n     if(= y 0)\n   \t\t(first coll)\n   \t\t(f (rest coll) (- y 1))\n   )\n)","user":"59f7c8f5e4b0ca45a743a310"},{"problem":21,"code":"(fn [lst idx] (first (nthrest lst idx)))","user":"53ae2187e4b047364c044473"},{"code":"(fn [l n]\n  (if (= n 0)\n    (first l)\n    (recur (rest l) (- n 1))))","problem":21,"user":"4e7d52ad535db169f9c796d3"},{"problem":21,"code":"(fn [xs n] \n  (first (last \n          (apply map vector [xs (repeat (+ 1 n) 0)]))))","user":"54d5fbe9e4b0a52adc2e2014"},{"problem":21,"code":"(fn [l i]\n  (let [indexed (fn [s] (map vector (iterate inc 0) s))]\n   ((comp last first) (filter #(= i (first %)) (indexed l)))))","user":"58461304e4b089d5ab817e81"},{"problem":21,"code":"(fn nther [lst i] (if (= 0 i) (first lst) (nther (rest lst) (- i 1))))","user":"57af3510e4b0fbc9809a272d"},{"problem":21,"code":"(fn [coll i]\n  (if (> i 0)\n    (recur (rest coll) (dec i))\n    (first coll)\n  )\n)","user":"5fe876ade4b05ac5b16ea195"},{"problem":21,"code":"(fn [sequen n] (last (take (+ n 1) sequen)))","user":"5dc9e5bfe4b03836ba07d826"},{"problem":21,"code":"#(loop [a 0\n        b %1]\n   (if (< a %2)\n     (recur (inc a) (rest b))\n     (first b)))","user":"57a4f5cae4b0a966079561f0"},{"problem":21,"code":"(fn [x n]\n  (loop [x x n n]\n    (if (zero? n)\n      (first x)\n      (recur (rest x) (dec n)))))","user":"551a21ece4b091ff45eda993"},{"problem":21,"code":"(fn  [lst n]\n  (if (= n 0)\n    (first lst)\n    (recur (rest lst) (- n 1))))","user":"55d0391de4b0e31453f64a37"},{"problem":21,"code":"(fn [col idx]\n  (if (= idx 0) \n    (first col)\n   (recur (rest col) (dec idx))\n    )\n  \n  )","user":"605b1197e4b000d535e6f548"},{"problem":21,"code":"(fn rec-nth [l, i]\n  (if (= i 0)\n    (first l)\n    (rec-nth (rest l) (dec i))))","user":"58e17578e4b005f69f193c7f"},{"problem":21,"code":"(fn [coll i] (get (into [] coll) i))","user":"6048817be4b02d28681c77dd"},{"problem":21,"code":"(fn [s n] \n  (let [rs (reverse s)]\n  \t(if (= (count (rest rs)) n)\n    \t(first rs)\n\t    (recur (reverse (rest rs)) n))))","user":"590253e3e4b0438e51c2d055"},{"code":"(fn [vec n] \n  (loop [vec vec, i 0]\n    (if (= n i)\n      (first vec)\n      (recur (next vec) (inc i)))))","problem":21,"user":"4ed19e90535d44c135fd68d0"},{"problem":21,"code":"#(loop [i 0 xs %1] (if (= i %2) (first xs) (recur (inc i) (rest xs))))","user":"55915fe9e4b0604b3f94d579"},{"code":"(fn [l n]\n\t(if (= n 0)\n\t\t(first l)\n\t\t(recur (next l) (dec n))\n     )\n)","problem":21,"user":"5236fb39e4b0ad3e3a16f537"},{"problem":21,"code":"(fn [a b] (loop [a a b b] (if (pos? b) (recur (rest a) (dec b)) (first a))))","user":"5934a43ce4b072a2710fd07e"},{"problem":21,"code":"(fn [col n]\n  (loop [remaining col\n         i 0]\n    (if (= i n)\n      (first remaining)\n      (recur (rest remaining) (inc i)))))","user":"57c45e64e4b05aa3c4741ccf"},{"code":"(fn [c i] (if (= i 0) (first c) (recur (rest c) (- i 1))))","problem":21,"user":"50e0e18ce4b0090303771ba9"},{"code":"(fn [coll n]                 \n(if (= n 0) (first coll)           \n            (recur (rest coll) (- n 1))))","problem":21,"user":"4f7250cce4b07046d9f4f02a"},{"problem":21,"code":"#(last (first (split-at (inc %2) %)))","user":"5ded9f51e4b093ff7172758a"},{"code":"(fn [xs n]\n  (if (zero? n)\n    (first xs)\n    (recur (rest xs) (- n 1))))","problem":21,"user":"52f89125e4b047fd55836fd4"},{"code":"(fn [s n]\n  (loop [i 0 a (first s) d (rest s)]\n    (cond (= a nil) nil\n          (< i n) (recur (inc i) (first d) (rest d))\n          1 a)))","problem":21,"user":"50fc299ee4b0d10d794c19f2"},{"problem":21,"code":"(fn [x n] \n  (if (= n 0) \n    (first x)\n    (recur (rest x) (- n 1)\n    )\n  )\n)","user":"5a91988ae4b002d099cae6f9"},{"problem":21,"code":"#(loop [cnt 0, lst %1]\n   (if (= %2 cnt)\n     (first lst)\n     (recur (inc cnt) (rest lst)\n)))","user":"5bd1b23ae4b0e9689409ee52"},{"code":"(fn find [l e]\n  (if (= e 0) \n    (first l)\n    (find (rest l) (- e 1))))","problem":21,"user":"4f033aa3535dcb61093f6a7c"},{"problem":21,"code":"(fn rest-loop [n limit ]\n(loop [array n stop limit ]\n      (if (= stop 0 )\n       (first array)\n        (recur (rest array) (dec stop)))))","user":"5b3a1c3ce4b02d533a91bbbd"},{"problem":21,"code":"(fn [x index]\n  (assert (>= index 0))\n  (if (and (next x)\n           (pos? index))\n    (recur (next x) (dec index))\n    (when (zero? index)\n      (first x))))","user":"56c33ceae4b05cc29241ee89"},{"code":"(fn [lst n]\n(loop [i 0 l lst]\n  (if (= i n)\n    (first l)\n    (recur (inc i) (rest l)))))","problem":21,"user":"5180af54e4b0e3fc13e244e9"},{"problem":21,"code":"(fn [items position] ((vec items) position))","user":"59735785e4b01722bebd4c9c"},{"problem":21,"code":"(fn [c, n]\n  ((into [] c ) n)\n)","user":"5403483fe4b0df28a13c62d7"},{"problem":21,"code":"(fn [coll n] (if (= n 0)\n               (first coll)\n               (recur (rest coll) (- n 1))))","user":"5a8fd113e4b05369db4d2542"},{"problem":21,"code":"(fn f [arr k]  \n    (if (= k 0) (first arr) (f (rest arr) (- k 1)))\n)","user":"541404c2e4b01498b1a719e7"},{"problem":21,"code":"#(->> %1(take (inc %2)) (last))","user":"5c20b6abe4b07e362c230576"},{"problem":21,"code":"(fn [sq idx]\n  (first (drop idx sq)))","user":"548db64ce4b0e286459a121c"},{"code":"(fn rec [coll n]\n  (if (= n 0)\n    (first coll)\n    (rec (rest coll) (- n 1))))","problem":21,"user":"5150a7d7e4b03e678e393abb"},{"code":"(fn [s n]\n  (if (> n 0)\n    (recur (rest s) (dec n))\n    (first s)))","problem":21,"user":"4ee88269535d93acb0a6687f"},{"code":"#(loop [s % i %2]\n  (if (zero? i)\n    (first s)\n    (recur (rest s) (dec i))))","problem":21,"user":"509b89b3e4b03049c49bd678"},{"problem":21,"code":"(fn [data index]\n  (if (zero? index)\n    (first data)\n    (recur (rest data) (- index 1))))","user":"5425bde6e4b01498b1a71b10"},{"problem":21,"code":"(fn index-seq [s i]\n  (if (= i 0)\n    (first s)\n    (index-seq (rest s) (- i 1))))","user":"557734d3e4b05c286339e07d"},{"code":"(fn [s idx] (loop [_idx 0 _s s] (if (= idx _idx) (first _s) (recur (inc _idx) (rest _s)))))","problem":21,"user":"4f803577e4b033992c121bf0"},{"problem":21,"code":"(fn [x c]\n  (first (drop c x)))","user":"57481f1fe4b009280f9f2b82"},{"problem":21,"code":"(fn my_nth [x n]\n  (if (= n 0) \n    (first x)\n    (my_nth (rest x) (- n 1))\n))","user":"525ff1e3e4b03e8d9a4a7028"},{"problem":21,"code":"(fn [sq index]\n  (loop [s sq i 0]\n    (if (= i index)\n    (first s)\n    (recur (rest s) (inc i))\n    )\n  )\n)","user":"560331dee4b04bb52996e1b5"},{"problem":21,"code":"(fn my-nth [xs n] (if (> n 0) (my-nth (rest xs) (dec n)) (first xs)))","user":"55d5e80ee4b0e31453f64a91"},{"code":"(fn [x index] \n  (last (take (+ index 1) x))\n)","problem":21,"user":"4fedd993e4b0198f34b063bc"},{"problem":21,"code":"(fn [x i] ((zipmap (range (count x)) x) i))","user":"53b31c21e4b047364c0444a3"},{"problem":21,"code":"(fn retriever\n  [coll idx]\n  (loop [items coll iter 0]\n    (if (= iter idx)\n      (first items)\n    (recur (rest items) (inc iter)))\n    )\n  )","user":"5d5950c1e4b02ba5928a6827"},{"problem":21,"code":"(fn [coll idx]\n  (->> coll\n       (map-indexed vector)\n       \n       (some #(if (= idx (first %))\n                (second %)))))","user":"56eab346e4b04a395b9a0410"},{"problem":21,"code":"(fn my-nth [collection index] (get (into [] collection) index))","user":"57ea107ae4b0bfb2137f5b3e"},{"problem":21,"code":"(fn [initial-vec final-index]\n   (loop [index 0\n          v initial-vec]\n     (if (= index final-index)\n       (first v)\n       (recur (inc index) (rest v))\n       )\n     )\n\n   )","user":"55e22f54e4b050e68259b42e"},{"problem":21,"code":"#(loop [col %1, i 0]\n   (if (= i %2)\n     (first  col)\n     (recur (rest col) (+ i 1))))","user":"560a9d30e4b05f002753defe"},{"problem":21,"code":"(fn peu [x y] (if (= y 0) (first x) (peu (rest x) (dec y))))","user":"53fc8424e4b0de5c418485b3"},{"problem":21,"code":"(fn nnth [l x] (if (= x 0) (first l) (nnth (rest l) (- x 1))))","user":"54091b82e4b0addc1aec66d5"},{"code":"#(if (= %2 0) (first %1) (recur (rest %1)(dec %2)))","problem":21,"user":"4f5cc3b8e4b0030a34fb2b2b"},{"code":"#(\n  loop [lst %1 n %2]\n  (if (= n 0) \n    (first lst)\n    (recur (rest lst) (dec n)))\n)","problem":21,"user":"5094057fe4b097f48cc38593"},{"problem":21,"code":"#(.get \n  %1 \n  %2\n  )","user":"58aa0c16e4b01a0c0b232979"},{"problem":21,"code":"(fn nth-number [x-list n-number]\n  (if (= 0 n-number) (first x-list) \n  (nth-number (rest x-list) (dec n-number))))","user":"60170e31e4b0a37c5521f4e7"},{"problem":21,"code":"#(get (into {} (map-indexed (fn [idx itm] [idx itm]) %1)) %2)","user":"57b3046de4b0fbc9809a276d"},{"code":"(fn [a b] \n  (loop [l a n b]\n    (if (<= n 0)\n      (first l)\n      (recur (rest l) (- n 1)))))","problem":21,"user":"4ee82223535d93acb0a66877"},{"problem":21,"code":"(fn [s i]\n  (loop [s s\n         i i]\n    (if (<= i 0)\n      (first s)\n      (recur (rest s) (dec i))\n    )\n   )\n  )","user":"57cd7498e4b0c746388ab897"},{"code":"(fn [coll n] \n(first (drop n coll)))","problem":21,"user":"5006b7d2e4b0678c553fc48c"},{"code":";; I guess I could just use nth, but this is essentially what nth does\n#(loop\n   [the-sequence %\n    index %2\n    counter 0]\n   (if (= counter index) (first the-sequence)\n     (recur (rest the-sequence) index (inc counter))))","problem":21,"user":"528e7740e4b0239c8a67aee0"},{"problem":21,"code":"(fn [coll index] (second (take-nth index coll)))","user":"5d0cf5cfe4b0cc9c91588247"},{"problem":21,"code":"(fn [l ord]\n   (if (not-empty l)\n     (cond\n       (= ord 0) (first l)\n       (> ord 0) (recur (rest l) (dec ord))\n       true nil )\n     nil))","user":"5f3f2281e4b004f08c61c561"},{"code":"(fn mynth [takeFromColl numToTake] (last (take (+ 1 numToTake) takeFromColl)))","problem":21,"user":"5029481ee4b0b33e9bf6fdee"},{"problem":21,"code":"(fn [l p] \n  (first (nthnext l p))\n  )","user":"577a4dc2e4b0d3393e5deaf6"},{"code":"(fn [col i]\n  (if (zero? i)\n    (first col)\n    (recur (rest col) (dec i))))","problem":21,"user":"4f88e3eee4b033992c121c72"},{"code":"(fn test[l x] (last (take (+ x 1) l)))","problem":21,"user":"4f74a617e4b044e54cd9a905"},{"problem":21,"code":"#(get (apply merge (map-indexed hash-map %1)) %2)","user":"585e5377e4b0f14aab7c87b0"},{"code":"(fn n [s i]\n  (if (= i 0) (first s)\n    (n (rest s) (- i 1))))","problem":21,"user":"4eb9c82d535dfed6da9c6d5c"},{"code":"(fn [x y]\n (loop [l x index y]\n   (if (= index 0)\n      (first l)  \n      (recur (rest l) (dec index))\n    )\n   ) \n)","problem":21,"user":"4f00f997535dcb61093f6a34"},{"problem":21,"code":"#(first  (drop %2 %1) )","user":"5804d5afe4b0a837a8b30cad"},{"problem":21,"code":"(fn [sq n]\n  (loop [sq sq \n         n n \n         x 0]\n    (if (= n x)\n      (first sq)\n      (recur (rest sq) n (inc x)))))","user":"55dedb0de4b050e68259b3e8"},{"code":"(fn [coll n] (second (take 2 (take-nth n coll))))","problem":21,"user":"5128da96e4b03a34742b4311"},{"problem":21,"code":"(fn [arr i] (first (drop i arr)))","user":"5a1d0381e4b0ff51aa4b3255"},{"problem":21,"code":"(fn  custom-nth [x,y] (last (take (+ y 1) x )))","user":"59228b00e4b026ae38521281"},{"problem":21,"code":"(fn f [xs n] (if (= 0 n) (first xs) (f (rest xs) (- n 1))))","user":"55a3ca84e4b0acc240e3153c"},{"code":"(fn [xs distance]\n  (if(= distance 0)\n    (first xs)\n    (recur (rest xs) (- distance 1))))","problem":21,"user":"521763fce4b082aa80a88c82"},{"problem":21,"code":"(fn a[x y] \n  (if (> y 0)\n  \t(a (rest x) (- y 1))\n  \t(first x)\n  )\n )","user":"54283a7ae4b01498b1a71b2f"},{"problem":21,"code":"(fn at_n [l n] \n  (case n\n    0 (first l)\n    (at_n (rest l) (- n 1))))","user":"5f4ebab5e4b0102c7503396a"},{"problem":21,"code":"(fn [lst n]\n    (if (= n 0)\n      (first lst)\n      (recur (rest lst) (dec n)))\n              )","user":"5e57f45fe4b027a2e10ac103"},{"problem":21,"code":"(fn [col idx] (loop [c col i 0] (if (= idx i) (first c) (recur (rest c) (inc i)))))","user":"55ad1833e4b03311e7b7329f"},{"problem":21,"code":"(fn -nth [l i] (\n          let [-head (first l) -tail (rest l)]\n\n          (if (= 0 i)\n            -head\n            (-nth -tail (- i 1))\n            ))\n  \n  )","user":"571543bbe4b07c98581c3ad4"},{"code":"(fn xaxa [x y]\n  (if (zero? y)\n      (first x)\n      (recur (rest x) (dec y))))","problem":21,"user":"4f141dee535d64f603146434"},{"problem":21,"code":"(fn my-nth [lst n]\n    (if (= n 0) (first lst)\n        (my-nth (rest lst) (- n 1))))","user":"56ef0a2ee4b04a395b9a045a"},{"code":"#(loop [coll %1 n %2 i 0]\n  (if (= n i)\n    (first coll)\n    (recur (rest coll) n (inc i))))","problem":21,"user":"4ec5fb83535d6d7199dd36bd"},{"problem":21,"code":"(fn nth2 [x y] (if (= y 0) (first x) (recur (rest x) (- y 1))))","user":"5eddc271e4b0c7845d86b0fa"},{"code":"(fn e [s n]\n  (if (= n 0)\n    (first s)\n    (e (rest s) (- n 1))))","problem":21,"user":"513b8558e4b0d8151c1c978b"},{"code":"(fn [a x] (first (drop x a)))","problem":21,"user":"508ae16be4b0be79e5b189bc"},{"problem":21,"code":"(fn my-nth [col n]\n  (loop [col col n n]  \n  (if (zero? n) (first col)\n  (recur (rest col) (dec n)))))","user":"5c01ba2ce4b0bdcf453d1656"},{"code":"(fn mynth [x y] (first (nthnext x y)))","problem":21,"user":"50a85af1e4b054305ba5a833"},{"code":"(fn [lst idx] (if (= idx 0) \n                (first lst)\n                (recur (rest lst) (- idx 1))\n                ))","problem":21,"user":"5256c8c7e4b0541d1855ba37"},{"problem":21,"code":"#(last (take (inc %2) (seq %1)))","user":"5b284375e4b063e2438bcc53"},{"problem":21,"code":"(fn [v x] (first (drop x v)))","user":"587cf147e4b01531a375eb29"},{"problem":21,"code":";(fn [x n] (first (drop n x)))\n\n;#(first (drop %2 %1))\n\n;(fn [xs n]\n;  (first (drop n xs)))\n\n(fn [xs, n]\n  (first (drop n xs))) \t; drop first N elements, then take the first of remaining list","user":"5d9a49c4e4b0d3f9b434ad45"},{"problem":21,"code":"#(loop [sq %1 n 0]\n   (if (= n %2)\n     (first sq)\n     (recur (rest sq) (inc n))\n  )\n)","user":"5e947a69e4b0fbed045a37f8"},{"code":"(fn [l, n]\n  (if (= n 0)\n\t\t(first l)\n\t\t(recur (rest l) (dec n))))","problem":21,"user":"4f4319ebe4b0d7d3c9f3fd13"},{"problem":21,"code":"#(loop [s %1 n %2] (if (> n 0) (recur (next s) (dec n)) (first s)))","user":"56958a16e4b0dcc4269f4129"},{"problem":21,"code":"#(loop [x %1 incr 0]\n    (if (= incr %2) (first x) (recur (rest x) (inc incr))))","user":"575e71a2e4b0846ea39baf26"},{"code":"(fn [xs n]\n  (if (zero? n)\n      (first xs)\n      (recur (rest xs) (- n 1))))","problem":21,"user":"4ee3b586535d10e5ff6f5371"},{"code":"(fn getNth [l n] (if (= n 0) (first l) (getNth (rest l) (- n 1))))","problem":21,"user":"522654f0e4b04e78ff2e197f"},{"problem":21,"code":"(fn [a b] (first (reverse (take (+ 1 b) a))))","user":"5657fc1ae4b0f9d632dd84ad"},{"problem":21,"code":"(fn nti [x, y] (if (= y 0) (first x) (nti (rest x) (- y 1))))","user":"4f035fbe535dcb61093f6a92"},{"code":"(fn [s ctr] (if (zero? ctr) (first s) (recur (rest s) (dec ctr))))","problem":21,"user":"50166470e4b052339a490e76"},{"problem":21,"code":"(fn [l i]\n  (last (take (inc i) l)))","user":"590368afe4b022d14a2aafac"},{"problem":21,"code":";(fn [lst] (if (= '() (rest lst)) (first lst) (recur (rest lst)))) \n(fn [coll pos] (if (= 0 pos) (first coll) (recur (rest coll) (dec pos))))","user":"573d8658e4b05c31a32c0814"},{"problem":21,"code":"(fn f [x y]\n  (if (= y 0)\n      (first x)\n      (f (rest x) (- y 1))))","user":"5a1f8c7ce4b0ff51aa4b3286"},{"code":"(fn myn [l n]\n  (if (= n 0)\n    (first l)\n    (myn (rest l) (- n 1))))","problem":21,"user":"527160ffe4b03e8d9a4a73ee"},{"problem":21,"code":"(fn [xs n]\n  (if (= n 0)\n    (first xs)\n    (recur (next xs) (dec n))))","user":"5c6e04b5e4b0fca0c1622743"},{"problem":21,"code":"(fn [values i] (last (take (+ i 1) values)))","user":"59cc4d5ee4b0a024fb6ae5d0"},{"problem":21,"code":"(fn n-th [collection index]\n  (if (= 0 index)\n    (first collection)\n    (n-th (rest collection) (dec index))))","user":"5c5584cfe4b0fb8c5ffd9a20"},{"code":"(fn [coll index]\n  (loop [coll coll, i 0]\n    (if (= i index)\n      (first coll)\n      (recur (next coll) (inc i)))))","problem":21,"user":"51d19c24e4b0cfcf579466c3"},{"code":"(fn findnth [mySeq n]\n   (if (= 0 n)\n     (first mySeq)\n     (findnth (rest mySeq) (- n 1))))","problem":21,"user":"5213dbc3e4b0961f15ac4d74"},{"code":"(fn foo [list n]\n  (if (= 0 n)\n      (first list)\n    (foo (rest list) (- n 1))))","problem":21,"user":"505cc50ce4b0e6aca564be00"},{"problem":21,"code":"#(-> (split-at %2 %1) last first)","user":"57c1b32be4b05aa3c4741ca4"},{"problem":21,"code":"(fn [x, th]\n  (if (= th 0)\n    (first x)\n    (recur (rest x) (- th 1))))","user":"59affcdee4b0e1f4e384c8c2"},{"problem":21,"code":"#(loop [iter 0\n       arr %1]\n  (if (>= iter %2)\n    (first arr)\n    (recur (inc iter) (rest arr))))","user":"5b83a157e4b047b03b2037b2"},{"code":"(fn [col i]\n  (if (= 0 i)\n    (first col)\n    (recur (rest col) (dec i))))","problem":21,"user":"52d5907ee4b09f7907dd1341"},{"code":"(fn  [l n]\r\n  (loop [lis l target n current 0]\r\n  (if (= target current)\r\n\t  (first lis)\r\n\t  (recur (rest lis) target (+ 1 current)))))","problem":21,"user":"4df9c598535d04ed9115e77a"},{"problem":21,"code":"(fn [s, n] (first (drop n s)))","user":"5ec0de29e4b00a66d4a9528e"},{"problem":21,"code":"(fn [col idx] (first (drop idx col)))","user":"53161a56e4b08068f379ed3e"},{"code":"(fn nitem [x, y]\n    (if (= 0 y)\n        (first x)\n        (nitem (rest x) (- y 1))))","problem":21,"user":"4f03626e535dcb61093f6a97"},{"problem":21,"code":"(fn getN [liste N] \n(if (= N 0) \n(first liste) \n(getN (rest liste) (- N 1))))","user":"58a82659e4b01a0c0b232951"},{"problem":21,"code":"(fn [s n]\n   (first (drop n s)) )","user":"572c1f65e4b0cd1946bd0f4a"},{"code":"#(first(drop %2 %))","problem":21,"user":"4e44510b535dc968683fc4aa"},{"code":"(fn [list n] (if (= n 0) (first list) (last (take (+ n 1) list))) )","problem":21,"user":"505d70e8e4b0e6aca564be09"},{"problem":21,"code":"(fn[x y] (if (> y 0) (recur(rest x) (dec y)) (first x)))","user":"561cad18e4b064ca9f4b169d"},{"problem":21,"code":"(fn [x, n]\n  (loop [remaining x i 0]\n  (if (= i n) (first remaining)\n    (recur (rest remaining) (inc i))\n    )))","user":"552e0f47e4b076ab5578f7ed"},{"problem":21,"code":"(fn [x i] ((into [] x) i))","user":"5e1561b1e4b0a047bd49f700"},{"problem":21,"code":"(fn [x y] \n  (loop [i 0\n         x1 x]\n    (if (< i y)\n      (recur (inc i) (rest x1)) (first x1))\n   ))","user":"5941f6e3e4b060784b3b7904"},{"problem":21,"code":"(fn iter [l i] \n  (if (= i 0)\n    (first l)\n    (iter (rest l) (- i 1))))","user":"5525d882e4b0ffed3738f910"},{"problem":21,"code":"(fn [dat n] (get (vec dat) n))","user":"5d6ac30ee4b04d129b00f2a0"},{"problem":21,"code":"(fn [col n]\n      (if (> n 0)\n        (recur (rest col) (- n 1))(first col)))","user":"58e667e7e4b056aecfd47cb3"},{"code":"(fn [s n] (if (zero? n)\n            (first s)\n            (recur (rest s) (dec n))))","problem":21,"user":"50f48298e4b004d364930527"},{"code":"(fn [sequence element] (last (take (+ element 1) sequence)))","problem":21,"user":"4fe40f6de4b0e8f79898feb1"},{"code":"#(last (take (inc %2) %))","problem":21,"user":"4ecd6a88535d23f036227704"},{"code":"(fn [l n]\n  (if (= 0 n)\n    (first l)\n    (recur (next l) (dec n))))","problem":21,"user":"51bd5796e4b0ff155d51d2aa"},{"problem":21,"code":"(fn mth [coll index] \n         (if (zero? index)\n           (first coll)\n           (mth (rest coll) (dec index))))","user":"55caabd1e4b0e31453f649fb"},{"code":"(fn [aseq n]\n  (cond\n    (nil? aseq) nil\n    (neg? n) nil\n    (zero? n) (first aseq)\n    :else (recur (rest aseq) (dec n))))","problem":21,"user":"4eed7c01535d93acb0a668bd"},{"problem":21,"code":"(fn [coll index]\n   (loop [c coll i index]\n     (if (= i 0)\n       (first c)\n       (recur (rest c) (dec i)))))","user":"57efb417e4b0bfb2137f5bdc"},{"problem":21,"code":"(fn  [input_seq n]\n  (loop [cnt 0  first_item (first input_seq) the_rest (rest input_seq)]\n    (if (= cnt n)\n      first_item\n      (recur (inc cnt) (first the_rest) (rest the_rest)\n             ))))","user":"5e255774e4b05b4b01516161"},{"problem":21,"code":"#(first (drop %2 %1))\n;#(first (reduce (fn [l _] (rest l)) %1 (range %2)))\n;#(loop [l %1 n %2] (if (not= 0 n) (recur (rest l) (dec n)) (first l)))","user":"54397533e4b032a45b86931d"},{"code":"(fn [ls n] (if (= n 0) (first ls) (recur (rest ls) (- n 1))))","problem":21,"user":"4e89ddf9535d3e98b8023284"},{"problem":21,"code":"(fn [coll x]\n  (loop [tail coll\n         remaining x]\n    (if (= remaining 0)\n      (first tail)\n      (recur (rest tail) (dec remaining)))))","user":"59bcb2c1e4b0a024fb6ae417"},{"code":"(fn nth-in-sequence [s n]\n  (if (= n 0)\n    (first s)\n    (nth-in-sequence (rest s) (- n 1))))","problem":21,"user":"525e81cbe4b0cb4875a45dac"},{"problem":21,"code":"(fn [s n](first (take-last (- (count s) n) s)))","user":"5e0d1947e4b099d064962f92"},{"problem":21,"code":"(fn [s index]\n  (loop [head index\n         seq s]\n    (if (= head 0)\n      (first seq)\n      (recur (dec head) (rest seq)))))","user":"5f79bff2e4b02876ed9fd0ca"},{"code":"(fn [l x] (first (take-last (+ x 1) (reverse l))))","problem":21,"user":"4f8e155ae4b0d4e659cdde63"},{"problem":21,"code":"(fn [x k] (first (nthnext x k)))","user":"53f3d96ee4b0742d9025b0fa"},{"problem":21,"code":"(fn [a i] (.get a i))","user":"54cf6a32e4b018d918be98ce"},{"problem":21,"code":"(\n  fn [coll counter] (\n    if (> counter 0) \n      (recur (rest coll) (dec counter))\n      (first coll)\n    )\n)","user":"57d79a81e4b0bd073c2023dc"},{"code":"(fn [x y] (last (take(+ 1 y) x)))","problem":21,"user":"50ed9e8de4b06330c1f87c44"},{"problem":21,"code":"#(last ((vec (map-indexed (fn [idx itm] [idx itm]) %1)) %2))","user":"589ec900e4b02bd94d917e65"},{"problem":21,"code":"(fn enth [l n] (if (= n 0) (first l) (enth (rest l) (- n 1))))","user":"53b0dae6e4b047364c044487"},{"problem":21,"code":"(fn xnth [x n] (if (> n 0) (xnth (rest x) (dec n)) (first x)))","user":"54653e3be4b01be26fd746da"},{"code":"(fn [l i] (if (list? l)\n            ((vec l) i)\n            (l i)\n            )\n  )","problem":21,"user":"52c3c689e4b0c2d177d620c9"},{"code":"(fn a [b c]  (if (= c 0) (first b) (a (rest b) (dec c))))","problem":21,"user":"50f07b21e4b0bdaecbb47dc2"},{"code":"(fn [myList myIndex] (first (drop myIndex myList)))","problem":21,"user":"4ed3c9d3535d44c135fd68f7"},{"problem":21,"code":"(fn nthElem\n  [list x]\n  (if (= x 0)\n    (first list)\n    (nthElem (rest list) (dec x))))","user":"556be3dce4b09a3098a524f7"},{"code":"(fn [col, idx]\n  (first\n    (filter \n     #(= (.indexOf col %) idx)\n     col))\n  )","problem":21,"user":"5394162be4b0b51d73faaec5"},{"code":"#(loop [seq %1 pos %2]\n  (if (= 0 pos) \n    (first seq)\n    (recur (rest seq) (dec pos))\n))","problem":21,"user":"4fe9231ce4b0547ebccb2445"},{"code":"(fn mm [sq n]\n  (if (= 0 n)\n      (first sq)\n      (mm (rest sq) (- n 1))))","problem":21,"user":"4fdd27f3e4b05e33b9224f78"},{"code":"(fn [s n]\r\n  (->>\r\n    (map-indexed (fn [i v]\r\n                    (when (= i n) v))\r\n                  s)\r\n    (filter identity)\r\n  first\r\n))","problem":21,"user":"4e6dd51b535d5021c1a895f6"},{"problem":21,"code":"(fn my [x y]   \n   (if (zero? y)     \n     (first x)     \n     (recur (rest x) (dec y))))","user":"5be0306be4b0ed4b8aab4c7d"},{"problem":21,"code":"(fn [x n] ( last (take (inc n) x) ))","user":"57741d00e4b0979f896515f7"},{"problem":21,"code":"(fn [input place] ((loop [in input out {}]\n  (if (empty? in)\n    out\n    (recur (rest in)\n           (assoc out (count out) (first in))))) place))","user":"5784ec65e4b0ebec4cfb74d1"},{"problem":21,"code":"(fn [input-list n](first (drop n input-list)))","user":"563ac0cfe4b0bfe05bf11805"},{"problem":21,"code":"(fn [y x] (get (zipmap (range (count y)) y)x))","user":"54b90fe2e4b0ed20f4ff6e9f"},{"problem":21,"code":"(fn [col n]\n  ((apply comp (cons first (repeat n rest)))col))","user":"59aad474e4b08cbb53654d89"},{"code":"(fn nnn [l n] (if (== n 0) (first l) (nnn (rest l) (- n 1))))","problem":21,"user":"50d242c0e4b06ad58337ed0f"},{"code":"(fn [s n] (get (apply vector s) n))","problem":21,"user":"536f2faee4b0fc7073fd6e79"},{"problem":21,"code":"(fn nth-elem [variables elem] (get (vec variables) elem))","user":"55268e8de4b0ffed3738f91f"},{"problem":21,"code":"(fn nt [l n] (if (= n 0) (first l) (nt (rest l) (dec n))))","user":"54fe42d1e4b07d26eda61d3f"},{"problem":21,"code":"(fn [coll n]\n  (loop [crt n\n         crt-coll coll]\n    (if (< crt 1)\n      (first crt-coll)\n      (recur (dec crt) (rest crt-coll)))))","user":"5e66f501e4b0e171e1033686"},{"problem":21,"code":"(fn remo [x y] (if (= y 0) (first x) (remo (rest x) (- y 1))))","user":"56d00f6ee4b0ea9b8538f778"},{"problem":21,"code":"#(if (= 0 %2)\n   (first %1)\n   (recur (rest %1) (- %2 1)))","user":"550340d9e4b086ebe8a79c6b"},{"code":"(fn [c, n] (first (nthrest c n)))","problem":21,"user":"539f3397e4b0ca733b974496"},{"problem":21,"code":"(fn fun [x n] (if (= n 0) (first x) (fun (rest x) (- n 1))))","user":"594c210ce4b07ddc2dafae5a"},{"code":"(fn ele-e [lst n] (cond (= n 0) (first lst) true (ele-e (rest lst) (- n 1))))","problem":21,"user":"52c17e42e4b07a9af5792367"},{"problem":21,"code":"(fn myNth [seq, index]\n  (if (> index 0)\n    (myNth (rest seq) (dec index))\n    (first seq)\n    )\n  )","user":"586398b5e4b0f14aab7c8825"},{"problem":21,"code":"(fn nt [l n]\n  (if (= 0 n)\n    (first l)\n    (recur (rest l) (dec n))))","user":"573f63bfe4b05c31a32c0842"},{"problem":21,"code":"(fn my-nth [coll x]\n  (if (= 0 x)\n    (first coll)\n    (my-nth (rest coll) (dec x))\n  )\n  )","user":"5ee0fab1e4b029a2061bbe71"},{"problem":21,"code":"(fn [seq num]\n  (if (= num 0) (first seq)  (recur (next seq) (- num 1)))\n)","user":"53c4254ce4b00fb29b221283"},{"code":"(fn blah [seq, n] (if (> n 0) (blah (rest seq) (dec n)) (first seq)))","problem":21,"user":"50a6c0fbe4b0aa96157e262c"},{"problem":21,"code":"(fn [x c]\n  (if (= 0 c)\n    (first x)\n    (recur (rest x) (dec c))))","user":"5c7f1f16e4b0d597f478cad9"},{"problem":21,"code":"(fn [coll n] \n              (if (<= n 0)\n                (first coll)\n                (recur (rest coll) (- n 1))\n              ))","user":"5e29cb4ce4b05b4b015161ae"},{"code":"(fn my-nth [s n]\n  (if (zero? n)\n    (first s)\n  \t(my-nth (rest s) (dec n))\n  ))","problem":21,"user":"5273b883e4b03e8d9a4a748f"},{"problem":21,"code":"(fn nth2 [x n] (last (take (+ 1 n) x)))","user":"5dbf6016e4b0e59a23173d79"},{"code":"(fn [x, n] \n  (if (= n 0) \n    (first x)\n    (recur (rest x) (- n 1))))","problem":21,"user":"4f5576c2e4b0a7574ea71801"},{"code":"(fn [x y] (loop [sq x n y pos 0] (if (= n pos) (first sq) (recur (rest sq) n (inc pos)))))","problem":21,"user":"51b77c9be4b0d906fcd71d37"},{"problem":21,"code":"(fn [x n] \n  (cond (= n 0) (first x)\n   :else (recur (rest x) (dec n))))","user":"536d75cbe4b0fc7073fd6e5b"},{"problem":21,"code":";;(fn [coll n] (if (= n 0) (first coll) (recur (rest coll) (dec n)) ) )\n#(first (drop %2 %1))","user":"55647a31e4b0c656e3ff1808"},{"problem":21,"code":"(fn enth [sq n] (if (= 0 n) (first sq) (recur (rest sq) (dec n))))","user":"53df340ce4b0d874e779ae3f"},{"code":"(fn [l n]\n (last \n (take (+ n 1) l))\n)","problem":21,"user":"514f72a2e4b0b449e54b8df7"},{"problem":21,"code":"(fn spe-nth [coll idx] (if (= idx 0) (first coll) (spe-nth (rest coll) (dec idx))))","user":"56fa972be4b07572ad1a88c2"},{"problem":21,"code":"(fn [_list, i] (first (drop i _list)))","user":"551a713ae4b091ff45eda997"},{"problem":21,"code":";(fn [coll n] \n; ((apply comp (cons first (repeat n rest))) coll))\n\n\n(fn [s x] (last (take (inc x) s)))","user":"580517d4e4b0a837a8b30cb9"},{"code":"(fn [x n] (if (zero? n) (first x) (recur (rest x) (dec n))))","problem":21,"user":"50a2f901e4b029e8bace362a"},{"code":"(fn [s n] \n  (if (= 0 n)\n    (first s)\n    (recur (rest s) (dec n))))","problem":21,"user":"4f5d5202e4b0030a34fb2b38"},{"problem":21,"code":"(fn [c i] \n(first (drop i c)))","user":"55810c73e4b05c286339e0f2"},{"problem":21,"code":"(fn check [x y] (if (= y 0) (do (first x)) (do (check (rest x) (- y 1)))))","user":"580014d7e4b0a837a8b30c32"},{"code":"(fn [x n] \n  ((fn nele[y n i]\n    (if (= n i) \n      (first y)\n      (nele (rest y) n (+ i 1))\n      ) \n    ) x n 0)\n  )","problem":21,"user":"535197f2e4b084c2834f4ae4"},{"code":"(fn n-th [s n]\n  (first (reverse (take (+ n 1) s))))","problem":21,"user":"4ea00469535d7eef3080729d"},{"problem":21,"code":"(fn [aseq which]\n  (loop [idx 0 elms aseq]\n  \t(if (= idx which)\n    \t(first elms)\n      \t(recur (inc idx) (rest elms)))))","user":"54dbb009e4b024c67c0cf76e"},{"code":"(fn [l n]\n  (if (= n 0)\n      (first l)\n      (recur (rest l) (dec n))))","problem":21,"user":"4fca1cd6e4b0ee37620e184c"},{"code":"(fn foo [lst n]\n  \t(first (reverse (take (+ n 1) lst)))\n)","problem":21,"user":"52c60844e4b0c2d177d62106"},{"code":"(fn [col n]\n  (loop [col col\n         i 0]\n    (if (= i n) (first col)\n      (recur (rest col) (+ 1 i)))))","problem":21,"user":"5325cef5e4b09d4e7a9b54e7"},{"problem":21,"code":"#(loop [ind 0 xs %1]\n     (if (= ind %2) (first xs)\n       (recur (inc ind) (rest xs))))","user":"56272be6e4b00e49c7cb47c9"},{"code":"(fn [lst n] (if (= n 0) (first lst) (recur (rest lst) (- n 1))))","problem":21,"user":"5139656ce4b0a5db03d727e3"},{"code":"(fn b-nth [xs n]\n  (if (= n 0)\n    (first xs)\n    (b-nth (rest xs) (- n 1))\n  )\n)","problem":21,"user":"4f7d9668e4b06e829148e1c4"},{"code":"(fn [coll n]\n\t(first (nthnext coll n)))","problem":21,"user":"50e932b0e4b0b3749274795a"},{"problem":21,"code":"(fn [x y] (if (= y 0)\n(first x)\n(recur (rest x) (dec y))))","user":"55cf0d0ee4b0e31453f64a2b"},{"problem":21,"code":"(fn nth-e [list n]\n  \t(if (= n 0)\n      (first list)\n      (nth-e (rest list) (dec n))))","user":"54696109e4b00cfc9eacc146"},{"code":"(fn [s, i] (last (take (+ i 1) s)))","problem":21,"user":"515e38ace4b049add99a0538"},{"problem":21,"code":"(fn [seqs index] (if (= index 0) (first seqs) (recur (rest seqs) (dec index))))","user":"58561854e4b0f14aab7c86e9"},{"problem":21,"code":"(fn [s n] \n  (loop [s s ntaken 0]\n       (if (= ntaken n)\n      (first s)\n      (recur (rest s) (+ ntaken 1)))))","user":"5647ffdae4b0284900eef626"},{"code":"(fn f ([l n] (if (= n 0) (first l) (f (rest l) (- n 1)))))","problem":21,"user":"4ff889f2e4b0678c553fc399"},{"problem":21,"code":"(fn get-last [values p]\n  (let [n (- (count values) p)]\n    (loop [v values] \n      (if (= (count v) n) \n        (first v) \n        (recur (rest v))))))","user":"5f012a2ee4b0cf489e8d7f1e"},{"problem":21,"code":"(fn fx [lst idx] (if (= idx 0) (first lst) (fx (rest lst) (dec idx))))","user":"551d5cb9e4b07993ea3788e9"},{"code":"#(loop [cnt %1, acc 0]\r\n  (if (= %2 acc)\r\n    (first cnt)\r\n    (recur (rest cnt) (inc acc)))\r\n)","problem":21,"user":"500c5b4ae4b03d00572d2d88"},{"code":"(fn [col i] (-> (take (inc i) col) reverse first))","problem":21,"user":"4fba88fde4b081705acca2e2"},{"code":"#(loop [ll %1 i 0] (if (= i %2) (first ll) (recur (rest ll) (inc i))))","problem":21,"user":"5192ce1de4b0024e2d75f7d2"},{"problem":21,"code":"(fn [lst idx]\n   (if (zero? idx)\n     (first lst) \n     (recur (rest lst)(dec idx)))\n   )","user":"53b615cce4b047364c0444c2"},{"problem":21,"code":"#(first(drop %2 (take (inc %2) %1)))","user":"58748ea8e4b01531a375ea54"},{"code":"(fn [sq n] (first (nthrest sq n)))","problem":21,"user":"530d1060e4b08068f379eca2"},{"problem":21,"code":"(fn [collection n] (first(drop n collection)))","user":"5ca1c45ae4b048ec896c5b85"},{"problem":21,"code":"(fn [coll index]\n  (loop [cs coll n index]\n    (cond\n     (empty? cs) nil\n     (= n 0) (first cs)\n     :else (recur (rest cs) (dec n)))))","user":"605b7a90e4b079a07f8593fc"},{"problem":21,"code":"(fn [all idx] (first (drop idx all)))","user":"569bfc43e4b0542e1f8d145c"},{"problem":21,"code":"(fn f [a b] (if (= b 0) (first a) (f (rest a) (- b 1))))","user":"55280930e4b0ffed3738f93b"},{"problem":21,"code":"(fn [x idx] (first (nthnext x idx)))","user":"59674d60e4b069c0a1a197b3"},{"problem":21,"code":"(fn [lst a] (first (drop a lst)))","user":"5804250fe4b0a837a8b30ca1"},{"problem":21,"code":"(fn [x n]\n  (loop [x x \n         n n]\n    (if (= n 0) (first x)\n      (recur (rest x) (dec n)))))","user":"53cbe808e4b00fb29b2212d4"},{"code":"#(.get (seq %1) %2)","problem":21,"user":"5208b687e4b0e152394d76e8"},{"code":"(fn [c i] (last (take (+ 1 i) c)))","problem":21,"user":"4e1203d5535d04ed9115e7cc"},{"code":"(fn mynth [s n] (if (= n 0) (first s) (mynth (rest s) (- n 1))))","problem":21,"user":"52ea5e0ae4b09f7907dd14bc"},{"code":"(fn [s n]\n  (loop [s' s n' n]\n    (if (= n' 0)\n      (first s')\n      (recur (rest s') (- n' 1)))))","problem":21,"user":"5027f37be4b01614d1633ff1"},{"problem":21,"code":"(fn f [x c] \n  (if (zero? c)\n    (first x)\n    (f (rest x) (- c 1))))","user":"54e345a1e4b024c67c0cf7db"},{"problem":21,"code":"(fn findnth\n  [xs n]\n  (loop [seq xs count 0]\n    (if (= count n)\n      (first seq)\n      (recur (rest seq) (inc count)))))","user":"5e209106e4b05b4b01516115"},{"code":"#(last(take (+ 1 %2) %1))","problem":21,"user":"4e707c3a535d5021c1a89639"},{"problem":21,"code":"(fn [col, pos] (get (vec col) pos))","user":"5dfbe0eae4b0a607a9a45ce2"},{"problem":21,"code":"(fn \n  doit \n  [l x] \n  (if \n    (= x 0) \n    (first l) \n    (doit \n     (next l) \n     (dec x)\n     )\n  )\n)","user":"55229495e4b0882d96d091a4"},{"code":"#(aget (to-array %) %2)","problem":21,"user":"4f3976aee4b0e243712b1eea"},{"code":"(fn [ls i] (first (drop i ls)))","problem":21,"user":"4f4118dee4b0e243712b1fc8"},{"code":"#((into [] %) %2)","problem":21,"user":"4e1fe7f1535d04ed9115e810"},{"code":"(fn [coll index]\n  (loop \n    [coll coll index index times 0]\n    (if (= index times)\n    \t(first coll)\n    \t(recur (rest coll) index (inc times)))))","problem":21,"user":"5391ab43e4b0b51d73faaea6"},{"problem":21,"code":"(fn [aSeq n] \n  (loop [index 0 rests aSeq]\n    (if (= index n)\n      (first rests)\n      (recur (+ index 1) (rest rests)))\n    ) \n  )","user":"53b492a5e4b047364c0444b6"},{"problem":21,"code":"(fn [x i] ((apply vector x) i))","user":"55702247e4b09a3098a5252a"},{"problem":21,"code":"(fn [collection number] (get (vec collection) number) )","user":"54ef7568e4b024c67c0cf885"},{"code":"(fn en [s n]\n  (if (zero? n)\n    (first s)\n    (en (rest s) (dec n))))","problem":21,"user":"525947f1e4b0cb4875a45cd8"},{"problem":21,"code":"(fn [v e]\n  (first (drop e v))\n  )","user":"5e5f83a2e4b0fd0acd15867b"},{"problem":21,"code":"(fn [l n]\n  (loop [left l\n         i 0]\n    (if (= i n)\n      (first left)\n      (recur (rest left) (inc i)))))","user":"55d4dddde4b0e31453f64a7f"},{"code":"(fn [arr n]\n           (loop [x 0 v arr]\n              (if (= x n) \n                  (first v)\n                  (recur (inc x) (rest v)))))","problem":21,"user":"4f03f197535dcb61093f6b84"},{"problem":21,"code":"(fn nelem [l i] (if (= i 0) (first l) (nelem (next l) (- i 1))))","user":"5474897ce4b0c51c1f4d728a"},{"code":"#( last (take (+ %2 1) %1) )","problem":21,"user":"4fb069b1e4b081705acca266"},{"problem":21,"code":"(fn [coll n]\n  (let [coll (into [] coll)]\n    (if (not= n 0)\n      (recur (rest coll) (dec n))\n      (first coll))))","user":"598216d9e4b021a7a535fdf8"},{"problem":21,"code":"(fn [l e] \n  (if (= e 0)\n    (first l)\n    (recur (rest l) (- e 1))))","user":"603eb408e4b0d5df2af22319"},{"code":"(fn !\n  ([l n]\n   (! l n 0))\n  ([l n c]\n   (if (= n c)\n     (first l)\n     (! (rest l) n (+ 1 c)))))","problem":21,"user":"5323f4c6e4b09d4e7a9b54d4"},{"problem":21,"code":"(fn enth [lst n]\n  (if (= n 0)\n    (first lst)\n    (enth (rest lst) (dec n))\n  ))","user":"60bb8d78e4b0e0fa5f1b4283"},{"problem":21,"code":"(fn [l n] (loop [x l] (if (= (count x) (- (count l) n)) (first x) (recur (rest x)))))","user":"58468269e4b089d5ab817e92"},{"code":"(fn mynth [x y] \n  ((fn mynthloop [l, elem, c]\n    (if (= c y) \n      (first l) \n      (mynthloop (rest l) y (+ c 1))\n    )\n  ) x y 0) \n)","problem":21,"user":"4f03101e535dcb61093f6a53"},{"code":"(fn [x n]\n  (loop [l x pos 0]\n    (if (= pos n)\n      (first l)\n      (recur (rest l) (+ pos 1)))))","problem":21,"user":"52b9c62ce4b07a9af57922c3"},{"code":"(fn [l c]\n   (loop [l l c c]\n    (if (zero? c)\n      (first l)\n      (recur (rest l) (dec c)))\n   )\n  )","problem":21,"user":"4f37c162e4b0e243712b1ed4"},{"problem":21,"code":"(fn [lst n]\n  (let [ex-count (- (count lst) n)]\n    (loop [l lst e ex-count]\n      (if (= (count l) e)\n        (first l)\n        (recur (rest l) e)\n        )\n      )\n    )\n  )","user":"53d2afede4b00fb29b221321"},{"problem":21,"code":"(fn [col t]\n  (loop [in col\n         i 0]\n    (if (= i t)\n      (first in)\n      (do (inc i)\n        (recur (rest in)\n               (inc i))))))","user":"5bb948f5e4b0a20761a235d5"},{"problem":21,"code":"(fn [x,y] (first (drop y x)) )","user":"58c16e18e4b021aa9917ecfa"},{"code":"(fn my-n [seq num]\n  (if (= 0 num)\n    (first seq)\n    (my-n (rest seq) (- num 1))))","problem":21,"user":"53908e6be4b0b51d73faae9a"},{"code":"(fn [x n]\n  (last (take (+ 1 n) x)))","problem":21,"user":"51b74a33e4b0d906fcd71d34"},{"problem":21,"code":"(fn [x n]\n  (if (= n 0)\n    (first x)\n    (recur (rest x) (- n 1))))","user":"57a60225e4b0a96607956202"},{"problem":21,"code":"(fn [coll x]\n  (if (= x 0)\n   (first coll)\n   (recur (rest coll) (- x 1))))","user":"555176e5e4b0deb715856deb"},{"problem":21,"code":"(fn [coll n]\n      (loop [c coll r []]\n        (if (= (count r) n)\n          (first c)\n          (recur (rest c) (conj r (first c))))))","user":"56603c7fe4b068f2fe63dc49"},{"problem":21,"code":"(fn f21 [my-coll n] (if (zero? n) (first my-coll) (f21 (next my-coll) (dec n)) ))","user":"5a536cf2e4b05d388ecb6c10"},{"problem":21,"code":"(fn nt-fn [seqen n]\n  (if (> n 0)\n    (nt-fn (rest seqen) (- n 1))\n    (first seqen)\n  )\n)","user":"593f88dce4b069cdc2982be2"},{"problem":21,"code":"(fn\n         [collection index]\n         (if (= index 0)\n           (first collection)\n           (recur (rest collection) (- index 1))))","user":"597f8a4be4b0dbe32238d0c0"},{"problem":21,"code":"(fn [c x] (last (take (inc x) c)))","user":"58ddac2ce4b0a4d5acaab6d6"},{"code":"(fn [a,b] (first (drop b a)))","problem":21,"user":"4fe8b19fe4b07c9f6fd12c70"},{"problem":21,"code":"(fn [l n] (loop [x 0 y l] \n           (if (= x n) (first y)\n             (recur (inc x) (rest y)))) )","user":"5f882b89e4b0169f6814c411"},{"problem":21,"code":"(fn [coll v] (if (= 0 v) (first coll) (recur (rest coll) (dec v))))","user":"5a3b5cfde4b001c08efc0cd4"},{"problem":21,"code":"(fn [v, n]\n    (if (> (count v) n)\n        (loop [v v, cpt 0]\n            (if (= cpt n)\n                (first v)\n                (recur (rest v) (inc cpt))))\n        nil))","user":"5a640a37e4b0512ff01cd9a2"},{"problem":21,"code":"(fn findNth [x y] \n  (if (= y 0) \n    (first x) \n    (findNth (rest x) (- y 1))))","user":"5c34285de4b0d62ef62d9f4f"},{"problem":21,"code":"(fn f [s x]\n  (if (>= x 0)\n    (if (= 0 x) (first s)\n      (f (rest s) (dec x)) )))","user":"594c1baae4b07ddc2dafae59"},{"problem":21,"code":"(fn elm [l i] ((vec l) i))","user":"5c7e5be4e4b0d597f478cac7"},{"code":"(fn theNth [sequence n] (first (drop n sequence)))","problem":21,"user":"4f555fe8e4b0a7574ea717fc"},{"problem":21,"code":"(fn [x y] \n  (if (zero? y)\n    (first x)\n    (recur (rest x) (dec y))))","user":"5650ac8be4b0284900eef6c2"},{"problem":21,"code":"(fn mynth [xs stop] (if (= 0 stop) (first xs) (mynth (rest xs) (- stop 1))))","user":"5601bb7ee4b04bb52996e195"},{"problem":21,"code":"(fn nt [l n]\n  (if (= n 0) (first l) (nt (rest l) (- n 1))))","user":"55a59ebae4b0acc240e3154d"},{"code":"(fn [x y] (last (take (inc y) x)))","problem":21,"user":"4ebc0717535dfed6da9c6d7b"},{"problem":21,"code":"(fn [s n]\n  (loop [new-s s\n         index n]\n    (if (= index 0)\n      (first new-s)\n      (recur (rest new-s) (dec index)))))","user":"5fe9169ce4b05ac5b16ea1a0"},{"problem":21,"code":"(fn [a n]\n  (if (not= n 0)\n\t(recur (rest a) (dec n))\n\t\t(first a)))\n\n;;(fn get-nth [a n]\n;;\t(if (= n 0)\n;;      (first a)\n;;     (recur (rest a)(dec n))","user":"5d25abc9e4b02ea6f0fb6a37"},{"code":"#(loop [a %1 b %2] (if (= b 0) (first a) \n  (recur (rest a) (- b 1))))","problem":21,"user":"50ae0d24e4b0a40c9cfb08ce"},{"problem":21,"code":"(fn [coll n]\n  (if\n   (= n 0) (first coll)\n   (recur (rest coll) (dec n))))","user":"5c196e7be4b01240ff5671fb"},{"problem":21,"code":"(fn [coll elem] (if (= elem 0) (first coll) (recur (rest coll) (dec elem))))","user":"5b757b39e4b047b03b2036cd"},{"code":"(fn n-th-elem [coll n]\n  (first(drop n  coll)))","problem":21,"user":"51c22a95e4b0d204dbe2ca1e"},{"problem":21,"code":"(fn get-nth-element [elements n] (first (drop n elements)))","user":"594d4c43e4b07ddc2dafae86"},{"problem":21,"code":"(fn nth-elem [s n]\n  (if (= n 0)\n    (first s)\n    (nth-elem (rest s) (dec n))))","user":"5433c591e4b0b6b47310fce3"},{"code":"(fn [col n] ((apply comp (cons first (repeat n rest))) col))","problem":21,"user":"53036d2ce4b0d8b024fd3741"},{"problem":21,"code":"(fn getn [coll n] (if (= n 0)\n                      (first coll)\n                      (getn (rest coll) (- n 1))))","user":"5b465b8be4b02d533a91bc65"},{"problem":21,"code":"(fn  [arr idx]\n  (if (zero? idx)\n    (first arr)\n    (recur (rest arr) (dec idx)\n     )))","user":"59636b37e4b066ee0a44b0c3"},{"problem":21,"code":"(fn [lst n] (loop [i 0 lst lst] (if (= i n) \n                                   (first lst) \n                                   (recur (inc i) \n                                          (rest lst)))))","user":"59e8b4ade4b0249b72820734"},{"problem":21,"code":"(fn nthh [s n] ((vec s)  n))","user":"59ee5be5e4b0966464fe6a1d"},{"problem":21,"code":"(fn n [seq i]\n  (cond\n   (= 0 i) (first seq)\n   :else (n (rest seq) (- i 1))\n  )\n )","user":"55aa5f73e4b0988bba2ad94b"},{"code":"(fn [coll index]\n    (loop [e (seq coll)\n           i 0]\n          (if (= i index)\n              (first e)\n            (recur (next e) (inc i)))))","problem":21,"user":"52919635e4b0239c8a67af1a"},{"problem":21,"code":"(fn my-nth [l n] (if (zero? n) (first l) (my-nth (rest l) (dec n))))","user":"5b0d5619e4b0cc2b61a3bdf0"},{"code":"(fn[sequ numb](last(take (+ numb 1) sequ)))","problem":21,"user":"52840004e4b0239c8a67adc1"},{"problem":21,"code":"(fn my-nth [seq i]\n  (if (== i 0)\n      (first seq)\n      (my-nth (rest seq) (dec i))))","user":"58513875e4b0b7285a6f4e8c"},{"code":"(fn [s n]\n  (cond (= n 0) (first s)\n        :else (recur (rest s) (dec n))))","problem":21,"user":"4e5af45e535d8a8b8723a2b1"},{"code":"(fn [x y] (get (vec x) y))","problem":21,"user":"4e040c42535d04ed9115e79d"},{"problem":21,"code":"(fn [xs n]\n  (cond\n        (= n 0) (first xs)\n        xs (recur (next xs) (- n 1))\n        :else nil))","user":"59ab2b86e4b08cbb53654d91"},{"problem":21,"code":"(fn [coll idx] \n  (if (= idx 0) \n    (first coll)\n    (recur (rest coll) (- idx 1))))","user":"533c2605e4b0e30313ee6cd7"},{"code":"(fn [li pos] (first (last (split-at pos li))))","problem":21,"user":"52d45010e4b09f7907dd132d"},{"code":"(fn [list index] (last (take (+ 1 index) list)))","problem":21,"user":"4f7579cbe4b0fbe0118ec55c"},{"problem":21,"code":"(fn [x, y]\n  (get (vec x) y))","user":"57ab41dde4b0b8559636fc79"},{"code":"(fn [xs n] (if (= 0 n) (first xs) (recur (rest xs) (- n 1))))","problem":21,"user":"5273c41be4b03e8d9a4a7492"},{"problem":21,"code":"(fn get-nth\n   [coll n]\n   (loop [i 0 remaining coll]\n     (if (= i n)\n       (first remaining)\n       (recur (inc i) (rest remaining))\n       )\n     )\n   )","user":"59fa5fe0e4b0ca45a743a35f"},{"code":"(fn [x,y] (first (nthrest x y)))","problem":21,"user":"5007c7c7e4b0b17c647f5226"},{"problem":21,"code":"(fn [sek n]\n  (loop [i 0\n         v (first sek)\n         remainder (rest sek)]\n         \n         (if (= i n)\n           v\n           (recur (inc i) (first remainder) (rest remainder)))))","user":"5c6e1006e4b0fca0c1622744"},{"code":"(fn [col, i]\n  (first (drop i col)))","problem":21,"user":"52a32876e4b04e0c58e87bfb"},{"code":"(fn [s n]\n  (loop [s s n n]\n    (if (= 0 n)\n      (first s)\n      (recur (rest s) (dec n)))))","problem":21,"user":"522f988be4b032bbe3424168"},{"code":"(fn mth [l n] (if (empty? l) l (if (= n 0) (first l) (mth (rest l) (- n 1)))))","problem":21,"user":"508a96ade4b016a2107004b3"},{"problem":21,"code":"(fn [list position] ((apply vector list) position))","user":"5e197aa1e4b0dc9594008506"},{"code":"(fn [coll index] (if (= index 0) (first coll) (recur (rest coll) (- index 1))))","problem":21,"user":"4fd1971ae4b04c3a95aa0412"},{"code":"#(->> % (drop %2) (first))","problem":21,"user":"502a9fdee4b095a7adb898b4"},{"problem":21,"code":"(fn new-nth\n  [s index]\n  (let [seq-s (seq s)\n        s-len (count seq-s)]\n    (cond\n      (or (= s-len 0) (< index 0)) nil\n      (= index 0) (first s)\n      :else (recur (rest seq-s) (dec index)))))","user":"591ad160e4b09b4ee5954bdf"},{"code":"(fn foo [s n]\n  (if \n    (= n 0) (first s)\n    (foo (rest s) (dec n))))","problem":21,"user":"4febc4a5e4b0681fd128dc99"},{"code":"(fn this [arr n]\n\t  (if (vector? arr)\n\t\t(get arr  n)\n\t\t(this (vec arr) n)))","problem":21,"user":"51e34f3ee4b0c611d6113e41"},{"problem":21,"code":"#(loop [col % iter 0] (if (= iter %2) (first col) (recur (rest col) (inc iter))))","user":"54187e84e4b01498b1a71a1b"},{"code":"(fn\n  [col x]\n    (first (drop x col)))","problem":21,"user":"4f9d87fce4b0dcca54ed6d24"},{"problem":21,"code":"#(loop [myseq %1\n       counter %2]\n  (if (zero? counter)\n    (first myseq)\n    (recur (rest myseq)\n           (dec counter))))","user":"5688a147e4b0dcc4269f406e"},{"problem":21,"code":"(fn [xs i] (if (zero? i) (first xs) (recur (rest xs) (dec i))))","user":"54081523e4b0addc1aec66c5"},{"problem":21,"code":"(fn\n  [seq index]\n  (first\n    (rest\n      (reduce\n       (fn\n         [value item]\n         (let [\n               current-index (first value)\n               selected-value-or-nil (first (rest value))\n               next-index (+ current-index 1)\n               ]\n         (if (= current-index index)\n           [next-index item]\n           [next-index selected-value-or-nil]\n           )\n         )\n         )\n       [0 nil]\n       seq\n      )\n    )\n  )\n)","user":"5f735915e4b02876ed9fd097"},{"problem":21,"code":"(fn [coll sub]\n  (get (into [] coll) sub))","user":"56ad0123e4b03c432f187350"},{"problem":21,"code":"(fn [col n]\n  (get (vec col) n))","user":"56c61682e4b05cc29241eeae"},{"problem":21,"code":"(fn [s x] (first (last (take (+ x 1) (iterate rest s)))))","user":"574986cae4b009280f9f2b9c"},{"problem":21,"code":"(fn ([x y] (first (drop y x))))","user":"565322e8e4b0f9d632dd846d"},{"problem":21,"code":"(fn nth' [collection n] \n  (loop [coll collection current 0]\n    (if (= current n)\n      (first coll)\n      (recur (rest coll) (inc current)))))","user":"5a3b9092e4b001c08efc0cd7"},{"problem":21,"code":"(fn nth-element [x y] (.get x y))","user":"55b1c24ae4b0da326a65cf70"},{"code":"(fn za-nth [coll n]\n  (if (zero? n)\n    (first coll)\n    (za-nth (rest coll) (dec n))))","problem":21,"user":"523605d1e4b05f3be1c7c8e2"},{"code":"(fn [s n]\n    (first (nthnext s n)))","problem":21,"user":"4f8cb9b2e4b02e764a0a51a6"},{"code":"(fn\r\n  [list pos]\r\n    (if (= pos 0) (first list) (recur (rest list) (- pos 1))))","problem":21,"user":"4dfd7ecf535d04ed9115e783"},{"problem":21,"code":"#(loop [i %2 l %1]\n  (if (= i 0)\n    (first l)\n    (recur (dec i) (rest l))))","user":"5d68e60be4b0db5d338d1603"},{"code":"#(loop [result %1 x %2]\n   (if (zero? x)\n     (first result)\n     (recur (rest result)(dec x))))","problem":21,"user":"51bcf091e4b0df1216cefd91"},{"code":"(fn nthelem [x y] ((fn recnth [a b c] (if (not= b c) (recnth (pop a) b (inc c)) (first a) )   ) (reverse (reverse x)) y 0) )","problem":21,"user":"513dfe2ce4b0825f97f7f966"},{"problem":21,"code":"(fn [seq i](first (drop i seq)))","user":"5b5e7953e4b0c6492753e6d9"},{"code":"#(cond (nil? %1) nil\n       (= %2 0)  (first %1)\n       :else (recur (rest %1) (dec %2)))","problem":21,"user":"5183f5d7e4b02826a645f393"},{"code":"(fn cnt [lst i]\n  (if (= i 0)\n    (first lst)\n    (cnt (rest lst) (- i 1))))","problem":21,"user":"52e16139e4b09f7907dd141f"},{"problem":21,"code":"(fn func [x y] (if( = y 0) (first x) (func (rest x) (dec y))))","user":"56c1d2dae4b0839206b9d68a"},{"problem":21,"code":"(fn [col pos] \n  (if (= pos 0) (first col)\n  (recur (rest col) (dec pos))))","user":"563cce5be4b0bfe05bf1183f"},{"code":"(fn [x y]\n  (loop [lst x cnt y]\n    (if (zero? cnt)\n      (first lst)\n      (recur (rest lst) (dec cnt))\n    )\n  )\n)","problem":21,"user":"4e5cac7c535d8a8b8723a2c3"},{"code":"(fn iterate [list numb] \n  (if (= numb 0)(first list)\n    (iterate (rest list) (- numb 1))\n    )\n  )","problem":21,"user":"51647faae4b003cf19fdde3b"},{"code":"(fn [x,y] (.get x y))","problem":21,"user":"5048806be4b0ec70b3ef8d9e"},{"problem":21,"code":"(fn [col x] \n  (loop [bcol col y x]   \n    (if (= 0 y)\n      (first bcol)\n      (recur (rest bcol) (- y 1)))))","user":"599d8e82e4b0871e7608b7f9"},{"code":"(fn nnth [l n]\n  (if (= 0 n)\n    (first l)\n    (nnth (rest l) (- n 1))))","problem":21,"user":"52736ca1e4b03e8d9a4a747e"},{"problem":21,"code":"(fn [col n]\n  (loop [\n       xs col\n       idx        0]\n  (if (= n idx)\n    (first xs)\n    (recur (rest xs)  (inc idx)))) \n  )","user":"5719465fe4b07c98581c3b36"},{"problem":21,"code":"(fn newnth [s n]\n  (if (= n 0)\n    (first s)\n      (newnth (rest s) (- n 1))))","user":"53c73fb7e4b00fb29b2212a6"},{"problem":21,"code":"(fn nnth [col x]\n  (if (and (> x 0) (> (count col) x))\n      (nnth (next col) (- x 1))\n      (first col)))","user":"56d5c1b0e4b0ea9b8538f7c3"},{"problem":21,"code":"(fn my-nth [seq ind]\n  ((vec seq) ind ))","user":"57ab536be4b0b8559636fc7a"},{"code":"(fn [x y](get (vec x) y))","problem":21,"user":"5133d91ee4b0d7a043de8cf5"},{"code":"(fn myn [s n]\n  (if (= n 0)\n    (first s)\n    (myn (rest s) (- n 1))\n  )\n)","problem":21,"user":"4fcd6bd2e4b065de69964ca9"},{"code":"(fn ith [ls i] (if (= i 0) (first ls) (recur (rest ls) (- i 1))))","problem":21,"user":"5364697ce4b0243289761e62"},{"problem":21,"code":"(fn [s a]\n  (get (into [] s) a))","user":"551e6526e4b030e6a24d00e8"},{"code":"(fn ultimate [x n]\n  (if (= n 0)\n    (first x)\n    (ultimate (rest x) (- n 1))))","problem":21,"user":"4fac81cee4b081705acca22b"},{"code":"(fn [mylist myindex]\n  (if (= myindex 0)\n    (first mylist)\n    (recur (rest mylist) (dec myindex))))","problem":21,"user":"50e48b7be4b0cb9ec68fbc9f"},{"code":"(fn [s i]\n  (loop [c s\n      cnt 0\n        ]\n  (if (= cnt i)\n  (first c)\n  (recur (rest c) (inc cnt))\n  )\n)\n)","problem":21,"user":"4f63777be4b0defedf855fe4"},{"problem":21,"code":"(fn f [x n]\n  (if (= n 0)\n    (first x)\n    (f (rest x) (- n 1))))","user":"5d41ac35e4b05dd059a54375"},{"code":"(fn [x n] (first (drop n x)))","problem":21,"user":"4e5e9f6b535d8a8b8723a2d2"},{"problem":21,"code":"(fn [coll ith]\n  (loop [remaining coll\n         i ith]\n    (if (<= i 0)\n      (first remaining)\n      (recur (rest remaining) (dec i)))))","user":"5cc75ffce4b0ccb061962836"},{"problem":21,"code":"(fn mynth ([x n i] (if (= i n) (first x) (mynth (rest x) n (inc i)))) ([x n] (mynth x n 0)))","user":"54d66f42e4b0a52adc2e201a"},{"code":"#(first(nthnext%1%2))","problem":21,"user":"5107b86de4b05b2b4eee7495"},{"code":"(fn take-nth [xs x] \n    (if (== 0 x) (first xs) (take-nth (rest xs) (- x 1))))","problem":21,"user":"4f1ae082535d64f603146470"},{"problem":21,"code":"(fn [inList numb] (first (nthnext inList numb)))","user":"54dd1c2be4b024c67c0cf790"},{"code":"(fn element-number-n [l n]\n  (if (= n 0)\n    (first l)\n    (element-number-n (rest l) (- n 1))\n    )\n  )","problem":21,"user":"530d85dee4b08068f379eca8"},{"code":"(fn elementFinder [xs n] (if (= 0 n) (first xs) (elementFinder (rest xs) (- n 1))))","problem":21,"user":"50ef5703e4b0bdaecbb47d95"},{"problem":21,"code":";(fn nth-e [s n] ((vec s) n))\n#((vec%1)%2)","user":"5d9e3fd8e4b0eb781811cdbf"},{"problem":21,"code":"(fn [xs n] (first (drop (- n 0) xs)))","user":"57783e59e4b0979f8965165d"},{"problem":21,"code":"(fn [col n] (if (zero? n) \n(first col)\n(recur (rest col) (- n 1))))","user":"54cbfb6ae4b057c6fda3a288"},{"problem":21,"code":"(fn lol\n ([my-seq n]\n (lol my-seq 0 n))\n ([my-seq i n]\n   (if (= i n)\n     (first my-seq)\n     (lol (rest my-seq) (inc i) n) )))","user":"5c5e7049e4b0fca0c1622607"},{"code":"(fn f [s n]\n  (if (= n 0)\n      (first s)\n      (f (rest s) (dec n))))","problem":21,"user":"5054c7e1e4b0b1b9d1860eb2"},{"problem":21,"code":"(fn [seqn n]\n  (->> (split-at n seqn)\n       (last)\n       (first)))","user":"584574a1e4b089d5ab817e69"},{"problem":21,"code":"(fn [s x]\n(last (take (inc x) s)))","user":"54ee1b23e4b024c67c0cf86d"},{"code":"(fn [seq n]\n  (if (== n 0)\n    (first seq)\n    (recur (rest seq) (dec n))))","problem":21,"user":"53134005e4b08068f379ed07"},{"code":"(fn find-nth [coll n]\n  (if (zero? n) \n    (first coll) \n    (find-nth \n      (rest coll) (dec n)\n    )\n  )\n)","problem":21,"user":"501b1a8ee4b0b12d9c5f4d81"},{"problem":21,"code":"(fn my-nth [coll index]\n  (if (= 0 index )\n    (first coll)\n    (my-nth (rest coll) (dec index))))","user":"57204301e4b0c5bde472c093"},{"code":"#(-> %1 (nthnext %2) first)","problem":21,"user":"535d4b0ae4b04ce2eb3ed2be"},{"code":"(fn mynth [seq i]\n  (if (= i 0)\n      (first seq)\n      (mynth (rest seq) (- i 1))))","problem":21,"user":"4f62b29ce4b0defedf855fd9"},{"code":"(fn  [listan cnt] \n   (if (zero? cnt)\n    (first listan)\n    (recur  (rest listan) (dec cnt))))","problem":21,"user":"4ec3b393535dcc7ae8597d59"},{"code":"#(first (drop (+ %2) %1))","problem":21,"user":"4e634eb9535d8ccf87e9fe63"},{"code":"( fn [coll select] (loop [data coll, index 0]\n  (when (seq data)\n    (if (= index select)(first data)\n    (recur (rest data) (inc index))))) )","problem":21,"user":"50b25edae4b03ea88043355e"},{"code":"(fn [coll index]\n  (let [i 0]\n   (loop [coll coll i i]\n    (if (= i index)\n      (first coll)\n      (recur (rest coll) (inc i))))))","problem":21,"user":"52b2d16ae4b0c58976d9acf8"},{"problem":21,"code":"(fn ene [x i]\n  (if (= i 0)\n    (first x)\n    (ene (rest x) (- i 1) ) ) )","user":"56d09e8ee4b0ea9b8538f782"},{"code":"(fn f [xs n] (if (= n 0) (first xs) (f (rest xs) (dec n))))","problem":21,"user":"4fc638a6e4b0ee37620e180c"},{"code":"(fn getn [x y] (last (take (inc y) x)))","problem":21,"user":"52da25b0e4b09f7907dd13b4"},{"problem":21,"code":";;(fn [s n] (last (take (+ 1 n) s)))\n\n\n\n#(last (take (+ 1 %2) %1))","user":"55664950e4b0c656e3ff1832"},{"code":"(fn [l n] (first (take-last (- (count l) n) l)))","problem":21,"user":"5368a275e4b0243289761e8f"},{"problem":21,"code":"(fn f [x n] \n  (if (= n 0) \n    (first x) \n    (f (rest x) (- n 1))))","user":"598a4ff7e4b02b9968b84cda"},{"problem":21,"code":"(fn index [s n] (if (= n 0) (first s) (index (rest s) (- n 1))))","user":"55727fb5e4b09a3098a52545"},{"problem":21,"code":"(fn [_sequence _index]\n  (loop [s _sequence\n         a _index]\n    (if (zero? a)\n      (first s)\n      (recur (next s) (dec a)))))","user":"55d4ae39e4b0e31453f64a7b"},{"problem":21,"code":"(fn\n  [s n]\n  (if (> n 0)\n    (recur (rest s) (dec n))\n    (first s)))","user":"559622cee4b0c79f6e1db975"},{"problem":21,"code":"(fn [xs n] ((zipmap (range (count xs)) xs) n))","user":"5f6d4305e4b02876ed9fd05c"},{"problem":21,"code":"(fn findnth [lst, n] (if (zero? n) (first lst) (findnth (rest lst) (dec n))))","user":"58d45578e4b03c36ff7e593d"},{"problem":21,"code":"#(first (take-last 1 (take (inc %2) %1)))","user":"55ee4e27e4b0121d4835fde9"},{"problem":21,"code":"(fn [lst idx]\n  (loop [aseq (seq lst) j idx]\n    (if (nil? aseq)\n      nil\n      (if (= j 0)\n        (first aseq)\n        (recur (rest aseq) (dec j))))))","user":"54bebeb9e4b0ed20f4ff6ef4"},{"problem":21,"code":"(fn [col n]\n  (first (nthnext col n)))","user":"5005ca29e4b0678c553fc46f"},{"code":"(fn [xs n]\n  (if (zero? n) (first xs)\n      (recur (rest xs) (- n 1))))","problem":21,"user":"4faa6e19e4b081705acca1f2"},{"code":"(fn [thing n]\n  (if (= 0 n)\n    (first thing)\n    (recur (rest thing) (dec n))))","problem":21,"user":"5040b633e4b0ff5d2cc40db3"},{"problem":21,"code":"(fn [seq n] (last(take (+ n 1) seq)))","user":"548018dce4b0c51c1f4d732c"},{"problem":21,"code":"(fn enth-2\n\t[elems n]\n\t(first (last (split-at n elems))))","user":"55d8bdcae4b0e31453f64abe"},{"code":"(fn find-nth [s n] \n  (if (= 0 n) \n    (first s)\n    (recur (rest s) (dec n)) ))","problem":21,"user":"5197cb17e4b068aa333628ee"},{"problem":21,"code":"(fn [xs n]\n  (if (= n 0)\n      (first xs)\n    (recur (rest xs) (dec n))))","user":"5b0c6874e4b0cc2b61a3bde5"},{"problem":21,"code":"#(loop [coll %1 index %2] \n   (if (= 0 index)\n     (first coll)\n     (recur (rest coll) (dec index))))","user":"579fa28fe4b0264b925669fb"},{"problem":21,"code":"(fn [elems n] (loop [es elems i 0] (if (= n i) (first es) (recur (rest es) (inc i)))))","user":"5ad6ad5de4b0ea6055cfac0e"},{"problem":21,"code":"#(loop [counter %2\n        col %]\n   (if (= counter 0)\n     (first col)\n     (recur (dec counter) (rest col))))","user":"59061cc8e4b047aa04b1992b"},{"problem":21,"code":"#(if (seq? %1)\n   (first (drop %2 %1))\n   (last (take (inc %2) %1)))","user":"5eb9e97ce4b00a66d4a95253"},{"problem":21,"code":"(fn myNth [xs n]\n    (if (= n 0)\n      (first xs)\n      (myNth (rest xs) (dec n))\n      ))","user":"59a2d49de4b066c664927d30"},{"problem":21,"code":"(fn nth*\n  [l i]\n  (cond\n    (= 0 i) (first l)\n    :else (nth* (rest l) (dec' i))))","user":"5a024d72e4b01bb0ae8afd62"},{"problem":21,"code":"(fn [coll n]\n  (loop [coll coll ind 0]\n    (if (= ind n)\n      (first coll)\n      (recur (rest coll) (inc ind))\n    )\n  )\n )","user":"5e09fd26e4b099d064962f60"},{"code":"(fn [data index] (loop [d data\n                        i index\n                        cnt 0]\n                   (if (= cnt i)\n                     (first d)\n                     (recur (rest d) i (inc cnt)))))","problem":21,"user":"50214ffae4b0ef1d2d4433bc"},{"problem":21,"code":"(fn newnth [l n]\n    (if (= n 0)\n      (first l)\n      (newnth (rest l) (- n 1))\n    )\n  )","user":"578d5185e4b0ebec4cfb7568"},{"code":"(fn [c n]\n  (first (last (split-at n c))))","problem":21,"user":"4e6a521c535d8ccf87e9fec8"},{"problem":21,"code":"(fn enth [v i]\n  (if(> i 0) \n    (enth (rest v) (- i 1)) \n    (first v))\n  )\n\n; More elegant solutions:\n\n; Drop the first n elements then get the head\n; #(first (drop %2 %))\n\n; Create a singleton vector using the specified index\n; #((vec %) %2)","user":"5446158ce4b032a45b8693a6"},{"problem":21,"code":"(fn f [x y] (if (== y 0) (first x) (f (rest x) (dec y))))","user":"54ff2342e4b07d26eda61d49"},{"problem":21,"code":"(fn get-nth [s n] (if (> n 0) (get-nth (rest s) (dec n)) (first s)))","user":"546db559e4b00cfc9eacc191"},{"code":"(fn [coll n]\n  (loop [n n\n         coll coll]\n    (if (= n 0)\n      (first coll)\n      (recur (dec n) (rest coll)))))","problem":21,"user":"5370ef22e4b0fc7073fd6ea0"},{"problem":21,"code":"(fn nd [xs n] (first (drop n xs)))","user":"58c623dbe4b021aa9917ed4b"},{"code":"(fn  ([arr,ind]\r\n                           (loop [ curArr arr current 0]\r\n                             (if(<= ind  current )\r\n                               (first curArr)\r\n                               (recur  (rest curArr) (+ current 1)\r\n                               )))))","problem":21,"user":"4de6f806535d08e6dec9fdf7"},{"problem":21,"code":"(fn [coll n] \n  (first \n              (drop n coll)))","user":"6090a2b3e4b03bd49d9f36cc"},{"problem":21,"code":"(fn my-nth \n  [lst index]\n  (if (= index 0)\n    (first lst)\n    (recur (rest lst) (- index 1) )))","user":"54244c77e4b01498b1a71ae4"},{"problem":21,"code":"(fn nn [x n] (last (take (+ n 1) x)))","user":"5705ffa1e4b0b0fb43fd0678"},{"code":"(fn foo [c val] (first (nthnext c val)))","problem":21,"user":"50ec69e0e4b04edc3377704a"},{"code":"(fn [l n]\n  (loop [r l i 0]\n    (if (= i n)\n      (first r)\n      (recur (rest r) (inc i)))))","problem":21,"user":"4f77b68de4b0fbe0118ec581"},{"code":"(fn ennth [s n] (last (take (+ n 1) s)))","problem":21,"user":"5106c489e4b01150e115ebed"},{"code":"(fn [coll x] (last(first(split-at (+ x 1) coll))))","problem":21,"user":"4f33a668e4b0d6649770a09d"},{"problem":21,"code":"(fn nt [coll n] (if (= n 0) (first coll) (nt (rest coll) (dec n))))","user":"5e18bd30e4b0dc95940084fa"},{"code":";; Original solution. I used recursion\n;;(fn beer[l n]\n;;  (if (= n 0)\n;;(first l)\n;;(beer (rest l) (- n 1))))\n\n;;But why do that, when I can use drop!\n;; New function learned :drop\n;; drop drops the first x elements from a list l\n;; so (drop 3 '(1 2 3 4 5 6)) gives me '(4 5 6)\n;; Then I just take the first element of that, and it gives me the nth!\n;; I used the shortcut #() with %1 and %2 as placeholders for parameters.\n;; same as saying\n;; (fn [l x]\n;;    (first (drop x l)))\n\n#(first (drop %2 %1))","problem":21,"user":"50955676e4b087f34d351ab1"},{"problem":21,"code":"(fn [xs n]\n  (loop [xs xs n n]\n    (if (= n 0)\n      (first xs)\n      (recur (rest xs) (- n 1)))))","user":"54366f1de4b032a45b8692fb"},{"code":"(fn [l n] (.get l n))","problem":21,"user":"50a9416de4b0a9a42786e8e2"},{"code":"(fn [xs ix]\n  (if (zero? ix) (first xs)\n    (recur (rest xs) (dec ix) )))","problem":21,"user":"50ed8fd1e4b06330c1f87c3f"},{"problem":21,"code":"(fn [a c] \n  (loop [a a  \n         c c]\n    (if (= 0 c)\n      (first a)\n      (recur (rest a) (dec c)))))","user":"57f0a9fde4b0bfb2137f5bf6"},{"code":"(fn [s n]  \n  (loop [s s n n]\n    (if (= 0 n)\n      (first s)\n      (recur (rest s) (dec n)))))","problem":21,"user":"4fda8f57e4b05e33b9224f4e"},{"problem":21,"code":"(fn [coll n]\n  (if (= 0 n) \n    (first coll) \n    (recur (rest coll) (dec n))))","user":"594bc16be4b07ddc2dafae39"},{"code":"(fn [s n] \n  (if (= n 0) \n      (first s) \n      (recur (rest s) (dec n))\n  )\n)","problem":21,"user":"533a2e02e4b0e30313ee6cb7"},{"code":"(fn [L n] (cond (= 0 n)(first L)\n                :else (recur (rest L)(dec n))))","problem":21,"user":"52153bdde4b0961f15ac4daa"},{"code":"(fn n-th [xs n]\n  (if (< 0 n)\n    (n-th (rest xs) (- n 1))\n    (first xs)))","problem":21,"user":"52ee20bbe4b05e3f0be25ec2"},{"problem":21,"code":"#(loop [n %2 col %1] (if (= n 0) (first col) (recur (dec n) (rest col) )))","user":"5a0ef454e4b04bbd27e6d9fa"},{"problem":21,"code":"(fn my_nth [coll n] \n  (if (<= n 0)\n    (first coll)\n    (recur (rest coll) (- n 1))))","user":"5470be32e4b00cfc9eacc1bd"},{"problem":21,"code":"(fn [my-coll spot]\n  (loop [remains my-coll iteration spot]\n    (if (zero? iteration)\n      (first remains)\n      (recur (rest remains) (dec iteration)))))","user":"55033603e4b086ebe8a79c69"},{"problem":21,"code":"(fn\n  [seq n]\n  (first (nthrest seq n)))","user":"54d1f84ae4b0e8a36923e5ec"},{"code":"(fn [x y] (get ( vec x) y))","problem":21,"user":"4e7030be535d5021c1a89632"},{"code":"(fn [l n]\n  (.get l n))","problem":21,"user":"4fd3e0e4e4b0d4de60cee365"},{"problem":21,"code":"(fn [l, x] (get (into [] l) x))","user":"5890799be4b00487982d51d6"},{"problem":21,"code":"(fn nelem [x n] (if (= n 0) (first x) (recur (rest x) (dec n))))","user":"5958a0c8e4b066ee0a44af8c"},{"problem":21,"code":"(fn [x n] (last (take (+ n 1)  x)))","user":"4e6a51a8535d8ccf87e9fec7"},{"problem":21,"code":"(fn get-nth [seq n] \n  (if (== n 0)\n  \t(first seq)\n  \t(get-nth (rest seq) (- n 1))))","user":"57476b5fe4b009280f9f2b74"},{"problem":21,"code":";(fn [coll n]\n;  (loop [coll  coll\n;         index 0\n;         n     n]\n;    (if (= index n)\n;      (first coll)\n;      (recur (rest coll)\n;             (inc index)\n;             n))))\n  \n(fn [coll n] (first (drop n coll)))","user":"5a58bfd0e4b05d388ecb6c84"},{"problem":21,"code":"(fn \n  [coll x]\n  (first (drop x coll)))","user":"573de63fe4b05c31a32c081c"},{"problem":21,"code":";#(first (drop %2 %1))\n#(-> (drop %2 %1) first)","user":"5335cab9e4b0e30313ee6c70"},{"code":"(fn f [xs n]\n  (if (= 0 n)\n    (first xs)\n    (f (rest xs) (- n 1))))","problem":21,"user":"4e3ac33f535deb9a81d77f4d"},{"problem":21,"code":"(fn [s i]\n  (loop [cs s ci i]\n    (if (zero? ci) (first cs)\n      (recur\n        (rest cs) (dec ci)\n   \t  )\n    )\n  )\n)","user":"5e31f485e4b05b4b01516231"},{"problem":21,"code":"(fn getLast [lijst nr] (if (= 0 nr) (first lijst) (getLast (rest lijst) (dec nr))))","user":"5ce7e877e4b0a17bb84e2ba8"},{"code":"(fn\n  [elements n]\n  (if (== n 0)\n    (first elements)\n    (recur (next elements) (dec n))))","problem":21,"user":"4f5760c3e4b0a7574ea71837"},{"code":"(fn [l i]\n  (if (pos? i)\n    (recur (rest l) (dec i))\n    (first l)))","problem":21,"user":"51631002e4b017b283c712c1"},{"code":"(fn norp [lst n]\n  (if (= n 0)\n    (first lst)\n    (norp (rest lst) (- n 1))))","problem":21,"user":"505ae957e4b021387fb8985d"},{"problem":21,"code":"(fn [col1 n] (last (take (+ 1 n) col1)))","user":"5f1d22c7e4b0f565ad998268"},{"problem":21,"code":"(fn [L X] (last (take (+ X 1) L)))","user":"57395f32e4b0cd1946bd1070"},{"problem":21,"code":"(fn [aseq n]\n  (loop [s aseq\n         i 0]\n    (if (>= i n)\n      (first s)\n      (recur (rest s) (inc i)))))","user":"5169d422e4b051e2a73aba53"},{"code":"(fn [s n]\n\t(if (= n 0)\n      (first s)\n      (recur (rest s) (dec n))))","problem":21,"user":"51db0d99e4b06aa4d4669a9d"},{"code":"; definitely stoopid, this\n(fn [coll cnt] (if (>= 0 cnt) (first coll)\n              (recur (rest coll) (dec cnt))))","problem":21,"user":"50464831e4b011c5dfee771f"},{"problem":21,"code":"(fn nnth[s n] (if (= n 0) (first s) (nnth (rest s) (dec n))))","user":"57fc0719e4b0d3187e900987"},{"problem":21,"code":"(fn nthElem [l i]\n  (if (= i 0)\n      (first l)\n      (nthElem (rest l) (- i 1))))","user":"5617a540e4b06b1bb2182a12"},{"problem":21,"code":"(fn nthelem [input index] \n  (if (= index 0 )\n    (first input) \n    (nthelem (rest input) (- index 1))\n    )\n  )","user":"5dcb2d2ae4b02b31cc3da3b7"},{"problem":21,"code":"(fn [x n] (last (last (take (+ n 1) (iterate #(drop-last %) (reverse x))))))","user":"5a1dda7de4b0ff51aa4b3261"},{"code":"(fn [seq n] \r\n  (last (take (+ n 1) seq )))","problem":21,"user":"4f71db68e4b07046d9f4f015"},{"code":"(fn foo [l n]\n  (if (zero? n) (first l)\n    (recur (rest l) (dec n))))","problem":21,"user":"4eca7a87535d6d7199dd3705"},{"code":"#(last (take (+ 1 %2) %1))","problem":21,"user":"4dc8205f535d8a4b2fd74296"},{"problem":21,"code":"(fn [lst n]\n  (last\n   (take (+ 1 n) lst)\n   )\n  )","user":"54194782e4b01498b1a71a29"},{"code":"(fn [l i] ((vec l) i))","problem":21,"user":"4f6e1c40e4b07046d9f4efd4"},{"code":"(fn [x y]\n    (cond\n  \t(= y 0) (first x)\n\t\t:else (recur (rest x) (- y 1))\n\t)\n)","problem":21,"user":"4f68a9bbe4b07046d9f4ef79"},{"code":"(fn [seq i] (first (nthnext (drop-last (- (count seq) (+ i 1)) seq) i)))","problem":21,"user":"519697a2e4b04c0af7ff3c21"},{"code":"(fn [seq n]\n  (last (take (+ n 1) seq)))","problem":21,"user":"4fec51b4e4b0681fd128dca4"},{"problem":21,"code":"(fn get-nth [col index]\n  (loop [c col n index]\n  (if (= 0 n)\n    (first c)\n    (recur (rest c) (dec n)))))","user":"562eeba2e4b0ab312c17ebc1"},{"problem":21,"code":"(fn [xs n]  \n  (if (= n 0)\n    (first xs)\n    (recur (rest xs) (- n 1))))","user":"555b43dfe4b0deb715856e4d"},{"code":"(fn [xs n]\n          (case n\n            0 (first xs)\n            (recur (rest xs) (- n 1))))","problem":21,"user":"504ac372e4b0b12125b92627"},{"code":"(fn [c n] \n  (if (= n 0)\n    (first c)\n    (recur (next c) (- n 1))))","problem":21,"user":"502a3ffbe4b01f0b5e5efaa5"},{"problem":21,"code":"#(loop [head (first %1)\n        tail (rest %1)\n        pos  %2]\n   (if (zero? pos)\n     head\n     (recur (first tail) (rest tail) (dec pos))))","user":"5b5bc8e9e4b0c6492753e6b7"},{"problem":21,"code":"#(loop [coll %1 cnt %2] (if (= 0 cnt) (first coll) (recur (rest coll) (dec cnt))))","user":"55eeb37ae4b0121d4835fdf3"},{"code":"(fn find-nth-element [x y]\n  (if (zero? y) \n      (first x) \n      (find-nth-element (rest x) (dec y))))","problem":21,"user":"4e5ac5a4535d8a8b8723a2b0"},{"code":"#(last (take (+ 1%2) %1))","problem":21,"user":"51fc9251e4b0f1313d468a27"},{"problem":21,"code":"(fn [coll n]\n  (loop [current (first coll)\n         r (rest coll)\n         cnt 0]\n    (if (= cnt n)\n      current\n      (recur (first r) (rest r) (inc cnt)))))","user":"5641296de4b08d4f616f5ef4"},{"code":"(comp first nthrest)","problem":21,"user":"50ba28e8e4b04934c218a4b3"},{"problem":21,"code":"(fn my-nth [sequence n] \n  (\n   \tif (= n 0)\n   \t\t(first sequence)\n   \t\t(my-nth (drop 1 sequence) (- n 1))\n  ) \n)","user":"5df28320e4b03c219ef1a35c"},{"code":"#(loop[tmp %1 n %2]\n  (if (zero? n)\n    (first tmp)\n    (recur (rest tmp)(dec n))))","problem":21,"user":"4f49e050e4b0d56e7bb92c01"},{"problem":21,"code":"(fn [nyari a] (first(drop a nyari)))","user":"593910eae4b02506e01a29f4"},{"code":"(fn [seq i]\n  (if (= i 0)\n    (first seq)\n    (recur (rest seq) (- i 1))))","problem":21,"user":"4e9528ef535dbda64a6f6b32"},{"problem":21,"code":"(fn [coll i] \n  (first (nthrest coll i)))","user":"542c44f8e4b0dad94371f2a1"},{"problem":21,"code":"(fn my-nth [coll num]\n  (cond\n    (empty? coll) nil\n    (= num 0) (first coll)\n    :else (my-nth (rest coll) (dec num))\n    )\n  )","user":"60471241e4b02d28681c77c9"},{"code":"(fn [seq n] (if (< n 0) nil (loop\n            [el (first seq)\n             index 0\n             tail (rest seq)]\n            (if (= index n) el (recur (first tail) (+ 1 index) (rest tail)))\n            ))\n        )","problem":21,"user":"5288b06de4b0239c8a67ae55"},{"problem":21,"code":"(fn g [l n] (if (> n 0)(g (rest l)(- n 1))(first l)))","user":"58622733e4b0f14aab7c8803"},{"problem":21,"code":"(fn yolo [x, n] \n  (if (= n 0) \n    (first x) \n    (yolo (rest x) (- n 1) )\n  )\n)","user":"5776558ee4b0979f89651633"},{"problem":21,"code":"(fn [input-list n] (loop\n                     [cnt n tmp-list input-list]\n                       (if (zero? cnt)\n                         (first tmp-list)\n                         (recur (dec cnt) (rest tmp-list)))))","user":"5f2c5adee4b033932238a665"},{"code":"(fn [sq n] (last (take (inc n) sq)))","problem":21,"user":"4ee9d697535d93acb0a66895"},{"problem":21,"code":"; (fn [coll n]\n;  (first (drop n coll)))\n#(first (drop %2 %1))","user":"57e37f90e4b0bfb2137f5a9c"},{"problem":21,"code":"(fn enth [c n]\n  (if (= n 0)\n    (first c)\n    (recur (rest c) (dec n))))\n\n;; (time ((fn enth [c n] (if (= n 0) (first c) (recur (rest c) (dec n)))) (range 1e6) 999997))\n;;=> \"Elapsed time: 411.135 msecs\"\n;;=> 999997\n\n;; Eigenhombre's solution:\n;; (time ((fn [s n] (first (drop n s))) (range 1e6) 999997))\n;;=> \"Elapsed time: 358.87 msecs\"\n;;=> 999997","user":"540e0637e4b0addc1aec6717"},{"problem":21,"code":"(fn [Lt n]\n  (first (drop n Lt)\n         ))","user":"58062dd2e4b0a837a8b30cda"},{"problem":21,"code":"(fn [x, y] (get (into [] x) y))","user":"5eef23a0e4b07c55ae4a0518"},{"problem":21,"code":"(fn [my-list my-place] (first (drop my-place my-list)))","user":"5cab939de4b026601754b84c"},{"problem":21,"code":"(fn [xs t]\n\t((fn [i t xs] (if (= i t) (first xs) (recur (+ i 1) t (rest xs)))) 0 t xs)\n  )","user":"6078afb9e4b0a637ed780359"},{"code":"(fn [col index] \n  (first \n   \t(filter #(= index (.indexOf col %)) col)))","problem":21,"user":"52fbf338e4b047fd55837012"},{"code":"(fn [s n] \n  (if ( = n 0) (first s)\n    (recur (rest s) (dec n))))","problem":21,"user":"5273e006e4b03e8d9a4a7495"},{"code":"(fn [l n] \n  (loop [xs l  c 0]\n    (cond (= n c) (first xs)\n      :else (recur (rest xs) (inc c)))))","problem":21,"user":"4fbd1ebbe4b081705acca2fe"},{"problem":21,"code":"(fn [x y] (last(take(+ y 1)x)))","user":"5614fa1de4b05f002753dfbe"},{"code":"(fn func [l index] (if (= index 0) (first l) (func (rest l) (- index 1))))","problem":21,"user":"50eb292ce4b0346a3e988cbd"},{"code":"(fn [arr n]\n  (if (= n 0) (first arr) (recur (rest arr) (- n 1))))","problem":21,"user":"50976c84e4b00ad8bab4e961"},{"problem":21,"code":"(fn tr[sequenc n] (last (take (inc n) sequenc)))","user":"55e00655e4b050e68259b405"},{"problem":21,"code":"(fn no-nth \n  [coll x] \n  (get (vec coll) x))","user":"5ff72d5de4b06df49cee149e"},{"code":"(fn nelem [coll nb]\n  (loop [c coll n nb]\n    (if coll\n      (if (= n 0)\n        (first c)\n        (recur (next c) (dec n))))))","problem":21,"user":"5122925ae4b068a9582e656d"},{"code":"(fn [l n] (first (nthnext l n)))","problem":21,"user":"4f0364d5535dcb61093f6a9e"},{"code":"#(if (zero? %2)                                                       \n    (first %1)                                                         \n    (recur (rest %1) (dec %2)))","problem":21,"user":"502ea967e4b06efe12e8cc76"},{"problem":21,"code":"(fn lst [xs n] (first (drop n xs)))","user":"540470dae4b0addc1aec6658"},{"problem":21,"code":"(fn [numbers rtn-number]\n  (get (vec numbers) rtn-number))","user":"54cb39eee4b057c6fda3a274"},{"problem":21,"code":"(fn [l c]\n  (if (zero? c)\n    (first l)\n    (recur (rest l) (dec c))))","user":"56ae7589e4b03c432f187360"},{"code":"(fn f [xs n] (if (= n 0)\n                  (first xs)\n              (f  (rest xs) (- n 1))))","problem":21,"user":"4f9d9d89e4b0dcca54ed6d25"},{"problem":21,"code":";(fn [coll n]\n;  (first ((apply comp (repeat n rest)) coll)))\n\n#(first (drop %2 %))","user":"57533bc1e4b02ea1147992a6"},{"problem":21,"code":"(fn foo [list, n] \n  (if (= n 0)\n  (first list)\n  (foo (rest list) (dec n))\n    )\n  )","user":"544e92b8e4b0e3978000698c"},{"code":"(fn [v pos] (first (nthnext v pos)))","problem":21,"user":"5339c08ee4b0e30313ee6cad"},{"problem":21,"code":"(fn nieme [x ind] (if (= 0 ind) (first x) (nieme (rest x) (dec ind))))","user":"5e66c144e4b0e171e1033683"},{"code":"(fn rec[coll idx] (if (> idx 0) (rec (rest coll) (- idx 1)) (first coll)))","problem":21,"user":"50adcfe6e4b0a40c9cfb08cb"},{"code":"(fn nth-elem [s n]\n  (last (take (+ 1 n) s)))","problem":21,"user":"4e6a6af5535d8ccf87e9fedf"},{"problem":21,"code":"(fn [col i] (first (drop i col)))","user":"5e17509fe4b00200644e3d52"},{"code":"(fn [s n] \n  (if (= n 0)\n    (first s)\n    (first (reverse (take n (rest s))))))","problem":21,"user":"4f5595d4e4b0a7574ea71805"},{"code":";; (fn [s,n] (reduce #(if (= %1 n) (reduced %2) (inc %1)) 0 s)) \n\n(fn [s,n] (first ((apply comp (take n (repeat rest))) s)))","problem":21,"user":"533ab9abe4b0e30313ee6cbf"},{"code":"(fn getnth [coll number] (if (= number 0) (first coll) (getnth (rest coll) (dec number))))","problem":21,"user":"52cf25cae4b07d0d72b2739e"},{"code":"#(first (reverse (drop-last (- (count %1) %2 1) %1)))","problem":21,"user":"4fff72b6e4b0678c553fc400"},{"problem":21,"code":"(fn elementN [l n] (if (= n 0) (first l) (elementN (rest l) (- n 1))))","user":"5f7251b9e4b02876ed9fd08a"},{"problem":21,"code":"(fn new_nth [myseq n]\n  (if (= n 0) \n    (first myseq)\n    (new_nth (rest myseq) (- n 1))))","user":"576aa367e4b0a07e8fc1811e"},{"problem":21,"code":"(fn [lst acc] \n  (if (= acc 0)\n    (first lst)\n    (recur (rest lst) (- acc 1))))","user":"587a2356e4b01531a375eade"},{"problem":21,"code":"(fn [coll n]\n  (if (<= n 0) \n    (first coll)\n    (recur (rest coll) (dec n))))","user":"5ad63a34e4b0ea6055cfac01"},{"code":"(fn [a-seq n]\n  (loop [s a-seq n-count 0]\n    (if (= n n-count)\n      (first s)\n      (recur (rest s) (inc n-count)))))","problem":21,"user":"5361a4f2e4b0243289761e47"},{"code":"(fn [xs n]\n  (loop [ys xs i 0]\n    (if (= n i)\n        (first ys)\n      (recur (rest ys) (+ 1 i)))))","problem":21,"user":"519451d1e4b0142f60b4aedd"},{"problem":21,"code":"(fn [li, n]\n  (if (= n 0)\n    (first li)\n    (recur (rest li) (- n 1))\n  )\n)","user":"54973374e4b0b312c081ff6f"},{"code":"(fn [x n]\n  (loop [cnt n res x]\n    (if (zero? cnt)\n        (first res)\n        (recur (dec cnt) (rest res)))))","problem":21,"user":"4f03f3b7535dcb61093f6b85"},{"problem":21,"code":"(fn [s v](loop [se s va v](if (= va 0)(first se)(recur (rest se) (- va 1)))))","user":"53abcea3e4b047364c044451"},{"problem":21,"code":"(fn myn [v n]\n  (if (= n 0)\n    (first v)\n    (myn (rest v) (- n 1))))","user":"5ec03772e4b00a66d4a95289"},{"problem":21,"code":"(fn [xs n]\n   (if (zero? n) (first xs) (recur (rest xs) (dec n))))","user":"56e2ca59e4b03a7c14b85a38"},{"problem":21,"code":"(fn [c n]  (println c n (= 0 0)) \n   (if (= 0 n) \n      (first c)\n      (recur (rest c) (- n 1))))","user":"55f27cfde4b06e875b46ce46"},{"problem":21,"code":"(fn f [col e]\n  (if (= 0 e)\n    (first col)\n    (f (rest col) (dec e))\n    )\n  )","user":"5fb29949e4b08cb800c85b2a"},{"code":"(fn [c n]\n  (loop [z c m n]\n    (if (= 0 m)\n        (first z)\n        (recur (rest z) (dec m)))))","problem":21,"user":"4fbe400be4b081705acca30e"},{"problem":21,"code":"(fn [s n] (if (zero? n)\n              (first s)\n              (recur (rest s) (dec n))))","user":"54eb97c8e4b024c67c0cf84d"},{"problem":21,"code":"(fn [coll n]\n (loop [cnt n temp-coll coll]\n   (if (zero? cnt) \n     (first temp-coll)\n     (recur (dec cnt) (rest temp-coll)))))","user":"5a43b7e9e4b0447ef91cc609"},{"code":"(fn [x y] \n  (if (< 0 y)\n  (recur (rest x) (dec y))\n  (first x)))","problem":21,"user":"4e7e241a535db169f9c79705"},{"problem":21,"code":"#(loop [elems %1\n         till %2\n         act 0]\n    (if (= till act)\n      (first elems)\n      (recur (rest elems) till (inc act))))","user":"5d68bfd0e4b0db5d338d1602"},{"problem":21,"code":"(fn [xs i]\n  (if (= i 0)\n    (first xs)\n    (recur (rest xs) (dec i))))","user":"550f1c99e4b06e50f9beb171"},{"problem":21,"code":"(fn [s n]\n  (if (= n 0)\n\t(first s)\n    (recur (rest s) (- n 1))\n  )\n)","user":"5bbd13a5e4b07a9b28b0ff95"},{"code":"(fn index [l i]\n\t(if (= i 0)\n    \t(first l)\n    \t(index (rest l) (- i 1))\n\t)\n)","problem":21,"user":"5250af8be4b0541d1855b83c"},{"problem":21,"code":"(fn nth-elm [lst, n]\n  (if (= 0 n) (first lst) (nth-elm (rest lst) (- n 1)))\n  )","user":"5d828b7ee4b0915913b1d382"},{"code":"(fn [aa n] (get (vec aa) n))","problem":21,"user":"525ee103e4b0cb4875a45dbb"},{"code":"(fn nh [x i]\n  (if (= i 0)\n    (first x)\n    (nh (rest x) (- i 1))))","problem":21,"user":"5322d370e4b09d4e7a9b54c7"},{"code":"(fn [xs n]\n  (if (= n 0)\n      (first xs)\n      (recur (rest xs) (dec n))))","problem":21,"user":"4f5030a9e4b03ad3f0c10cfd"},{"code":"(fn [seq n]\n    (last (take (+ n 1) seq)))","problem":21,"user":"511e763ce4b03e81d390ac29"},{"code":"(fn getn [l n] ( if (= 0 n) (first l)  (getn (rest l)(- n 1))))","problem":21,"user":"51c214bce4b0d204dbe2ca1c"},{"code":"(fn [coll n]\n         (loop [i n\n                c coll]\n           (if (= i 0)\n             (first c)\n             (recur (dec i) (rest c)))))","problem":21,"user":"4f35b2ace4b0e243712b1ec5"},{"problem":21,"code":"(fn get-n [xs n]\n  (if (zero? n)\n    (first xs)\n    (get-n (rest xs) (dec n))))","user":"5e912d95e4b0cb0169546352"},{"code":"(fn [c n] \t\n(if (zero? n)\n\t(first c)\n\t(recur (rest c) (dec n))))","problem":21,"user":"50a3e2eae4b0ceace084d49a"},{"problem":21,"code":"(fn [k _i] (get (into [] k) _i))","user":"56ecf2e6e4b04a395b9a0440"},{"code":"(fn f \n  ([coll n]\n   (if (zero? n)\n     (first coll)\n     (recur (rest coll) (dec n)))))","problem":21,"user":"5136d69fe4b04ac1f358dd5c"},{"problem":21,"code":"(fn\n  [x target]\n  (loop [n 0\n         sub x]\n    (if (= target n)\n      (first sub)\n      (recur (inc n) (next sub)))))","user":"55b3c03ee4b01b9910ae2975"},{"code":"#(last(take(+ %2 1) %))","problem":21,"user":"530d050ee4b08068f379eca1"},{"code":"(fn [coll index] (first(drop index coll)))","problem":21,"user":"5227dc28e4b0186687e23a5b"},{"code":"(fn [coll n]\n  (loop [xs coll c n]\n    (if (empty? xs)   \n      ()\n      (if (= c 0)\n        (first xs)\n        (recur (rest xs) (dec c))\n        )\n      )\n    )\n  )","problem":21,"user":"522f483ce4b032bbe342415a"},{"problem":21,"code":"(fn my-nth [coll i] \n  (if (= 0 i) \n    (first coll)\n    (my-nth (rest coll)(dec i))))","user":"514992d2e4b0b64cbeae1848"},{"problem":21,"code":"#( first  (drop %2 %1) )","user":"57bffed6e4b05aa3c4741c89"},{"code":"#(if (= %2 0)\n     (first %1)\n     (recur (rest %1) (- %2 1)))","problem":21,"user":"4f474f43e4b0d56e7bb92bb7"},{"code":"(fn [a b] (if (= 0 b) (first a) (recur (rest a) (- b 1))))","problem":21,"user":"4f7a0c75e4b06e829148e196"},{"code":"#(first (second (split-at %2  %1)))","problem":21,"user":"506558f0e4b0deb876850596"},{"problem":21,"code":"(fn htn [x n] (if (= n 0) (first x) (htn (rest x) (- n 1))))","user":"5cdc3c69e4b05ee0cb311741"},{"problem":21,"code":"(fn [seq n]\n  (if (= 0 n)\n    (first seq)\n    (recur (rest seq) (dec n))\n    )\n  )","user":"53edb628e4b0d648e757f4c8"},{"problem":21,"code":"(fn get-nth [lst n]\n  (if (= n 0)\n    (first lst)\n    (get-nth (rest lst) (dec' n))))","user":"5550b5a0e4b00713264bd9ad"},{"code":"(fn my-nth [xs i]\n  (if (= 0 i)\n    (first xs)\n    (my-nth (rest xs) (dec i))))","problem":21,"user":"52a779fce4b0c58976d9ac1a"},{"code":"(fn fake-nth [seq, n] (if (= n 0) \n  (first seq) \n  (fake-nth (rest seq) (- n 1))))","problem":21,"user":"4fb71f5ae4b081705acca2cf"},{"code":"(fn [l i](letfn [(n-avo [l i] (n-avoaux l i 0))\n        (n-avoaux [l i c] (if (= i c) (first l) (n-avoaux (rest l) i (inc c)) ))]\n  (n-avo l i)))","problem":21,"user":"5058afbbe4b06522596eba81"},{"code":"(fn [thelist theindex] (get (vec thelist) theindex))","problem":21,"user":"5138bccde4b0a5db03d727d8"},{"problem":21,"code":"(fn [arr, i](last  (take (+ i 1) arr)))","user":"608fac60e4b03bd49d9f36c7"},{"code":"(fn [m v]( get (into {} (map-indexed vector m)) v))","problem":21,"user":"52f3124ee4b05e3f0be25f0a"},{"problem":21,"code":"(fn nelem [s n]\n  (if (= n 0)\n    (first s)\n    (nelem (rest s) (- n 1))))","user":"5438795ee4b032a45b869313"},{"problem":21,"code":"(fn [mylist whichone] (first (drop whichone mylist)))","user":"56bff105e4b060a8e693e3a4"},{"code":"(fn f [l p] (case p 0 (first l) (f (rest l) (- p 1))))","problem":21,"user":"51cbc435e4b08d8387cbeddd"},{"code":"(fn [x n]\n  ((fn nt [y i]\n     (if (= i n)\n       (first y)\n       (nt (rest y) (inc i))))\n   x 0))","problem":21,"user":"52de249ae4b09f7907dd13ed"},{"problem":21,"code":"(fn [coll n] (loop [head (first coll), tail (rest coll), i n]\n               (if (zero? i) head (recur (first tail) (rest tail) (dec i)))))","user":"4f2d90ece4b0d6649770a05f"},{"code":"(fn [col number]\n \t(loop [coll col cnt number]  \n      (if (zero? cnt)\n         (first coll)\n         (recur (rest coll) (dec cnt))\n         )))","problem":21,"user":"530837c7e4b02e82168697ae"},{"code":"(fn [col i] (last (take (+ 1 i) col)) )","problem":21,"user":"51ee669ce4b09915f9b23c03"},{"problem":21,"code":"(fn [xs n]\n  (loop [l xs i 0]\n  \t(if (= n i)\n      (first l)\n      (recur (rest l) (inc i)))))","user":"58c4492be4b021aa9917ed27"},{"code":"(fn\n  [x i] \n  (-> (take (+ i 1) x) reverse first)\n)","problem":21,"user":"506755b3e4b03d366d7cb2bc"},{"code":"(fn  [list index]\n  (loop [i 0 l list]\n    (if (= i index) \n       (first l)\n     (recur (inc i) (rest l))\n     )\n   )\n  )","problem":21,"user":"52c98e7ae4b0c2d177d6213d"},{"problem":21,"code":"(fn xth [x y] ( if (== y 0) (first x) (xth (rest x) (- y 1))))","user":"591e9813e4b09b4ee5954c36"},{"code":"(fn [coll x] (first (reverse (take (+ x 1) coll))))","problem":21,"user":"5041fb43e4b06d8231e4fad1"},{"code":"(fn [ s n ] (last (take (inc n) s)))","problem":21,"user":"4ec5a704535d6d7199dd36af"},{"problem":21,"code":"(fn [coll n]\n          (last (take (inc  n) coll)))","user":"5e9154c1e4b0cb0169546354"},{"problem":21,"code":"(fn my-nth [coll n] (first (drop n coll)))","user":"5e471203e4b043cd24807a2a"},{"problem":21,"code":"(fn my_nth [xs n] (if (= n 0) (first xs) (my_nth (rest xs) (- n 1))))","user":"545baec3e4b01be26fd74655"},{"code":"(fn [x i] \n  (first (reverse (take (inc i) x)))\n )","problem":21,"user":"50f3bd98e4b041536e2eca3a"},{"code":"(fn this [w x] (\r\n    last (\r\n      take (inc x) w\r\n    )\r\n  ))","problem":21,"user":"501819efe4b02f523d7cc5eb"},{"problem":21,"code":"( fn [x y] ( second ( take-nth y x ) ) )","user":"550c81c6e4b06e50f9beb150"},{"problem":21,"code":"(fn [l n](if (zero? n) (first l) (recur (rest l) (dec n))))","user":"57141357e4b07c98581c3ab3"},{"problem":21,"code":"(fn [xs n] \n  (if (zero? n)\n    (first xs)\n    (recur (next xs) (dec n))))","user":"55f081bbe4b06e875b46ce25"},{"code":"(fn [coll index] (last (take (+ index 1) coll)))","problem":21,"user":"5054e37fe4b0b1b9d1860eb6"},{"problem":21,"code":"(fn get-nth [s n]\n  (get (vec s) n))","user":"58c69b80e4b021aa9917ed5d"},{"code":"(fn foo [s n] (if (> n 0) (foo (rest s) (dec n)) (first s)))","problem":21,"user":"51a0e0b7e4b0b292b01ee3fb"},{"problem":21,"code":"(fn [seqq i]\n  (if (= 0 i)\n    (first seqq)\n    (recur (rest seqq) (- i 1))))","user":"53b0750fe4b047364c044483"},{"code":"(fn [coll n] (get (vec coll) n ))","problem":21,"user":"514a2fa1e4b0829bd132edb5"},{"problem":21,"code":"; (fn foo [ls n] (if (= n 0) (first ls) (foo (rest ls) (dec n))))\n\n#(loop [ls %1 n %2] (if (zero? n) (first ls) (recur (rest ls) (dec n))))","user":"5d98f616e4b0d3f9b434ad3c"},{"code":"(fn [s n] (last (first (partition (+ n 1) s))))","problem":21,"user":"4f05af02535dcb61093f6bfe"},{"problem":21,"code":"(fn [coll i]\n  (if (= i 0)\n    (first coll)\n    (recur (rest coll) (- i 1))))","user":"54246fcce4b01498b1a71aed"},{"problem":21,"code":"(fn my [sq c] (if (= c 0) (first sq) (my (rest sq) (dec c)) ))","user":"5ecc0831e4b016b56eae058c"},{"problem":21,"code":"(fn myfn [x n] (if (= n 0) (first x) (myfn (rest x) (- n 1))))","user":"571aad45e4b07c98581c3b59"},{"problem":21,"code":"#(loop [n 0 xs %] (if (= n %2) (first xs) (recur (inc n) (rest xs))))","user":"577832f4e4b0979f8965165b"},{"code":"#(last (take (+ %2 1) %))","problem":21,"user":"4e725d20535d5021c1a8965e"},{"problem":21,"code":"(fn nt [ls n] \n (if \n  (= n 0)\n  (first ls)\n  (nt \n   (rest ls) \n   (- n 1)\n  )\n )   \n)","user":"58711e7be4b01531a375e9f9"},{"code":"(fn get-item [coll n]\n  (if (= 0 n)\n    (first coll)\n    (get-item (rest coll) (- n 1))))","problem":21,"user":"4f1872a2535d64f60314645a"},{"code":"(fn [x, y]\n  (first (drop y x)))","problem":21,"user":"529bd5dfe4b04e0c58e87b51"},{"problem":21,"code":"#(let [v (vec %)\n       item %2]\n   (get v item))","user":"54c5e36ee4b045293a27f626"},{"problem":21,"code":"(fn\n  [lst n]\n  (first (drop n lst)))","user":"57f81532e4b0d3187e900914"},{"code":"#(if(= %2 0) (first %1) (recur (rest %1) (dec %2)))","problem":21,"user":"534aa5d3e4b084c2834f4a6b"},{"problem":21,"code":"(fn getnth [l i] (if (zero? i) (first l) (getnth (rest l) (- i 1))))","user":"575aa081e4b02ea114799346"},{"problem":21,"code":"(fn get-nth [coll, n] (if (= n 0) (first coll) (get-nth (rest coll) (- n 1))))","user":"5a402586e4b0447ef91cc5c8"},{"problem":21,"code":"(fn my-th [x n] \n       (if (= 0 n)\n        (first x)\n        ( my-th  (rest x)  (- n 1)  )) )","user":"566e5a03e4b0a866af6896d8"},{"code":"(fn _nth [s at]\n\t(loop [i 0, r s]\n\t (if (= i at)\n\t  (first r)\n\t  (recur (+ i 1) (rest r)))))","problem":21,"user":"536c35c3e4b0fc7073fd6e3a"},{"problem":21,"code":"(fn [a, elem] (last (take (+ elem 1) a)))","user":"54eff2bee4b024c67c0cf88d"},{"code":"(fn [col el] (->> col (drop el) first))","problem":21,"user":"518279abe4b0353c468deb65"},{"code":"(fn [s, n] (first (reverse (take (inc n) s))))","problem":21,"user":"4ed6dbdd535d10e5ff6f52eb"},{"code":"#((reduce (fn [m x] (assoc m (first x) (second x))) {} (map-indexed vector %)) %2)","problem":21,"user":"532018efe4b08068f379edcd"},{"problem":21,"code":"(fn nnth [coll, number] (if (= number 0) (first coll) (nnth (rest coll) (- number 1)) ))","user":"544b9df2e4b0e39780006968"},{"problem":21,"code":"(fn xth [lst x]\n  ((fn subXth [lst cnt]\n     (if (= cnt x)\n       (first lst)\n       (subXth (rest lst) (+ cnt 1)))) lst 0))","user":"5d1cd478e4b02ea6f0fb6991"},{"problem":21,"code":"(fn [vec n]\n  (if (zero? n)\n    (first vec)\n    (recur (rest vec) (- n 1))))","user":"54db1911e4b024c67c0cf75b"},{"problem":21,"code":"(fn f [s n] (if (= 0 n) (first s) (f (rest s) (- n 1))))","user":"53ac4c6fe4b047364c04445d"},{"problem":21,"code":"(fn my-nth [s n] (if (= 0 n) (first s) (my-nth (rest s) (- n 1))))","user":"4f577f25e4b0a7574ea71839"},{"code":"(fn [coll n]\n  (if (and (seq coll) (> (count coll) n))\n    (if (= n 0)\n      (first coll)\n      (recur (rest coll) (dec n)))\n    nil))","problem":21,"user":"51a97f7ae4b08d8ec191b827"},{"code":"(fn [col idx] \n  (loop [col col idx idx] \n    (if (zero? idx)\n      (first col)\n      (recur (rest col) (dec idx)))))","problem":21,"user":"4fd29d7ce4b04c3a95aa0424"},{"problem":21,"code":"(fn x [l n] \n  (if (== 0 n)\n  (first l)\n  (x (rest l) (dec n))\n  )\n)","user":"55034bf0e4b086ebe8a79c6d"},{"problem":21,"code":"(fn [l n] \n  (if (> n 0) \n    (recur (rest l) (- n 1))\n    (first l)))","user":"5c17467fe4b01240ff5671df"},{"code":"(fn [s n]\n  (loop [index 0 sequence s]\n    (if (= index n)\n      (first sequence)\n      (recur (inc index) (rest sequence))     \n    )\n  )\n)","problem":21,"user":"4e570b60535d8a8b8723a286"},{"code":"(fn [l n]\n  (loop [place l coun 0]\n    (if (= coun n)\n      (first place)\n      (recur (rest place) (inc coun)))))","problem":21,"user":"522e4baae4b01cdb292c5f00"},{"problem":21,"code":"(fn [lst n] (first(drop n lst)))","user":"5a99b83fe4b0d174b936c7aa"},{"code":"#(first ((apply comp (repeat %2 rest)) %))","problem":21,"user":"52d07cc5e4b07d0d72b273bb"},{"code":"(fn [s n]\n  (if (< n 1)\n    (first s)\n    (recur (rest s) (dec n))))","problem":21,"user":"5106bc8ae4b01150e115ebec"},{"problem":21,"code":"(fn get-nth [the-list index] (first (drop index the-list)))","user":"54b63539e4b05787c3b163b4"},{"problem":21,"code":"(fn nthNum [x y]\n  (loop [a x\n         th y]\n    (if (> th 0)\n      (recur (rest a) (dec th))\n      (first a))))","user":"56a3c89ae4b0542e1f8d14cf"},{"code":"(fn mth[x y] (if (> y 0) (mth (rest x) (- y 1)) (first x)))","problem":21,"user":"50eca06ee4b04edc3377704e"},{"problem":21,"code":"(fn fakeNth\n  [array n]\n  (let [a (reverse array)]\n    (if (zero? n)\n      (first array)\n      (recur (rest array) (- n 1)))))","user":"58b18ba0e4b0ebc645576cfa"},{"problem":21,"code":"(fn [m v] (first (first (filter (fn [t] (= v (second t))) (map (fn [x i] [x i]) m (take (count m) (range)))))))","user":"52f23d85e4b05e3f0be25ef6"},{"code":"(fn [s n] \n  (cond \n    (zero? n) (first s)\n    :else     (recur (rest s) (dec n))))","problem":21,"user":"506ce637e4b0a302964c5490"},{"code":"(fn [mylist num] (if (zero? num) (first mylist) (recur (rest mylist) (- num 1))))","problem":21,"user":"53329d4ee4b019098a6f8b75"},{"problem":21,"code":"(fn nn [xs n] (if (= 0 n) (first xs) (nn (rest xs) (dec n))))","user":"526b8e70e4b03e8d9a4a726a"},{"code":"(fn [x n] (last (take (+ n 1) x)))","problem":21,"user":"4f0404df535dcb61093f6b91"},{"code":"(fn [xs n] (cond\n            (zero? n) (first xs)\n            :else (recur (rest xs) (dec n))))","problem":21,"user":"51a88e7fe4b08d8ec191b813"},{"problem":21,"code":"(fn ls [se, idx] (first (keep-indexed #(if (= idx %1) %2), se)))","user":"5c337305e4b0d62ef62d9f48"},{"code":"(fn [xs n] (if (= n 0) (first xs) (recur (rest xs) (dec n))))","problem":21,"user":"4e6a97a9535d8ccf87e9fef8"},{"code":"(fn [xs n]\n  (if (zero? n)\n    (first xs)\n    (recur (rest xs) (dec n))))","problem":21,"user":"4ec132a0535dfed6da9c6da9"},{"code":"(fn [list i] (first (drop i list)))","problem":21,"user":"4eb1a4db535d7eef30807342"},{"problem":21,"code":"(fn nt [s n]\n  (if (> n 0)\n    (nt (rest s) (- n 1))\n    (first s)))","user":"59733c91e4b01722bebd4c9b"},{"code":"(fn rec-nth [sq n]\n  (if (= n 0) (first sq)\n    (rec-nth (rest sq) (- n 1))))","problem":21,"user":"5175533fe4b0dea9bbfba575"},{"code":"(fn [col n]\n  (let [remain (- (count col) n)\n        mynth (fn [col]\n           (if (<= (count col) remain)\n             (first col)\n             (recur (rest col))))]\n  (mynth col)))","problem":21,"user":"4ef992c8535dced4c769f268"},{"code":"#(( vec % ) %2)","problem":21,"user":"506c273ae4b080c1a96bd6bd"},{"problem":21,"code":"(fn a [b,c]\n  (get (into [] b) c)\n)","user":"5710e574e4b09c608db7043b"},{"code":"(fn [xs n] (if (= n 0) (first xs) (recur (rest xs) (- n 1))))","problem":21,"user":"4f51e8a4e4b03ad3f0c10d2d"},{"problem":21,"code":"#(->>%1 (drop %2) first)","user":"55357ab5e4b09218d5f44faf"},{"code":"(fn [col i] (first \n             (keep-indexed #(if (= %1 i) %2) col)))","problem":21,"user":"51891c96e4b04c2714a2670e"},{"problem":21,"code":"#(loop [n %2 x %1] (if (= n 0) (first x) (recur (dec n) (rest x))))","user":"5cea0bd4e4b0a17bb84e2bc9"},{"code":"(let [swap-args (fn [f] #(f %2 %1))]\n  (comp first (swap-args drop)))","problem":21,"user":"4eecc9ad535d93acb0a668b4"},{"problem":21,"code":"(fn [elems n] \n  (last \n   (reduce \n    (fn [stash item] \n      (cond \n       (<= (count stash) n) (conj stash item)\n       :else                stash\n      )\n    ) [] elems\n   )\n  )            \n)","user":"57ce3fede4b0c746388ab8a6"},{"code":"(fn [seq pos]\r\n  ((vec seq) pos))","problem":21,"user":"4e10a8e4535d04ed9115e7c2"},{"problem":21,"code":"(fn [coll n]\n  (if(zero? n)(first coll)\n            (recur (rest coll)(- n 1))))","user":"55c2ddc8e4b0e31453f64984"},{"problem":21,"code":"(fn [l v]((into {} (map-indexed vector l))v))","user":"5805f0c3e4b0a837a8b30cd2"},{"problem":21,"code":"(fn [coll x]\n  (if (zero? x)\n    (first coll)\n\t(recur (rest coll) (dec x))))","user":"55fc1f05e4b0f488688e066f"},{"problem":21,"code":"(fn [a ind]\n  (if (= ind 0)\n    (first a)\n    (recur (rest a) (dec ind))))","user":"60919461e4b00e9e6653c3d7"},{"problem":21,"code":"(fn [s i] (first (last (take (inc i) (iterate rest s)))))","user":"56f73c24e4b08e7d20b9682e"},{"code":"(fn [lst n]\n  (if (zero? n)\n    (first lst)\n    (recur (rest lst )\n           (dec n) )))","problem":21,"user":"5273562ae4b03e8d9a4a7479"},{"problem":21,"code":"(fn [l n]\n  (loop [counter 0 list l]\n    (if (< counter n)\n      (if (= (count list) 0)\n        nil\n        (recur (inc counter) (rest list)))\n      (first list))))","user":"577629abe4b0979f8965162e"},{"code":"(fn [x i] (first (subvec (vec x) i)))","problem":21,"user":"52f2cfb5e4b05e3f0be25eff"},{"problem":21,"code":"(fn [c n]\n  ((into [] c) n))","user":"59ab61f1e4b08cbb53654d9b"},{"problem":21,"code":"(fn [s x] (last (take (inc x) s )))","user":"56eb3f58e4b04a395b9a041f"},{"problem":21,"code":"(fn [col idx] ((vec col) idx))","user":"5d6bff25e4b04d129b00f2ab"},{"problem":21,"code":";(fn [seqn n] (last (take (inc n) seqn)))\n#(last (take (inc %2) %1))","user":"568e3238e4b0dcc4269f40cf"},{"code":"(fn nth-element [lst, n]\n  (last (take (+ n 1) lst)))","problem":21,"user":"4fc52278e4b081705acca37c"},{"code":"(fn [in-seq n] (first (drop n in-seq)))","problem":21,"user":"4ef4ab95535dced4c769f23b"},{"code":"(fn [l n]\r\n  (if (= n 0)\r\n    (first l)\r\n    (recur (rest l) (dec n))))","problem":21,"user":"509c03f3e4b085ae113522a8"},{"problem":21,"code":"(fn n-item [x y](if (= y 0) (first x) (n-item (rest x) (dec y))))","user":"54c92da8e4b045293a27f65c"},{"code":"(fn [L n] (if (= n 0) (first L) (recur (rest L) (- n 1))))","problem":21,"user":"51cf126ae4b0e42293a2256b"},{"problem":21,"code":"(fn [mseq n]\n           (loop [recseq mseq cnt n]\n             (if (zero? cnt)\n               (first recseq)\n               (recur (rest recseq) (dec cnt)))\n             )\n           )","user":"55d42f78e4b0e31453f64a73"},{"problem":21,"code":"(fn [array x] ((vec array) x))","user":"5c4be0bde4b0f9f7a8770e6c"},{"problem":21,"code":"#(if (pos? %2)\n   (recur (rest %) (dec %2))\n   (first %))","user":"56bf4ac0e4b0f26550335985"},{"code":"(fn [s c]\n  \n  (first (nthnext s c)))","problem":21,"user":"4f1c7021535d64f603146482"},{"code":"(fn enth [xn y] (if(== y 0)\n                 (first xn)\n                 (enth (rest xn) (- y 1))))","problem":21,"user":"50edcc53e4b06330c1f87c49"},{"code":"(fn [plst n]\n  (loop [cnt n lst plst]\n    (if (zero? cnt)\n      (first lst)\n      (recur (dec cnt) (rest lst)))))","problem":21,"user":"4f1052b9535d64f603146418"},{"problem":21,"code":"(fn h [l n]\n  (if (= n 0)\n    (first l)\n    (h (rest l) (dec n))))","user":"57befca6e4b05aa3c4741c70"},{"problem":21,"code":"(fn[s i] (first (keep-indexed #( if (= %1 i) %2 nil )  s )) )","user":"5717d674e4b07c98581c3b1a"},{"problem":21,"code":"(fn [v nu] (get (vec v) nu))","user":"5aab7b72e4b073f177442558"},{"problem":21,"code":"(fn mynth [l n] (if (= n 0)\n            (first l)\n            (mynth (rest l) (- n 1))))","user":"4df9d3b0535d04ed9115e77b"},{"code":"(fn nth-element [s index]\n  (if (zero? index)\n    (first s)\n    (recur (rest s) (dec index))))","problem":21,"user":"52335d7ce4b0f0b72fabf404"},{"problem":21,"code":"(fn m-nth [ls k]\n  (if\n    (not (= k 0))\n          (m-nth (next ls) (dec k))\n      (first ls)))","user":"5f73000ce4b02876ed9fd094"},{"code":"(fn my-nth [collection split]\n(first (last (split-at split collection))))","problem":21,"user":"500d784ee4b0ff215386cad3"},{"code":"#(loop [x % c 0]\n  (if (= c %2)\n    (first x)\n    (recur (rest x) (inc c))))","problem":21,"user":"4faf6f1ae4b081705acca255"},{"code":"#(first ( drop %2 %1))","problem":21,"user":"5233d88ae4b07e3ee2be83b2"},{"problem":21,"code":"(fn [coll index]\n(  if (zero? index)\n  (first coll)\n  (recur (rest coll) (dec index))))","user":"551bdefde4b07993ea3788d7"},{"problem":21,"code":"(fn [coll ind] (last (take (+ ind 1) coll)))","user":"58bc3202e4b0888cdc949d0b"},{"problem":21,"code":"(fn ra [v i] ((vec v) i))","user":"567e418fe4b0feffd0d18eb1"},{"problem":21,"code":"(fn foo\n  [list n]\n  (.get list n))","user":"60328416e4b0d5df2af222b6"},{"problem":21,"code":"(fn [ l n]\n    (loop [i 0 r l]\n        (if (= i n) \n            (first r)\n            (recur (inc i) (rest r)))))","user":"55975569e4b031d6649c9b8e"},{"problem":21,"code":"(fn nth-elem [list n] \n  (last (take (inc n) list)))","user":"5a99d28ee4b0d174b936c7b3"},{"code":"(fn [list n] (if (= n 0) (first list) (recur (rest list) (dec n))))","problem":21,"user":"519b7d76e4b02a926d9a436e"},{"problem":21,"code":"(fn n-pos [s pos]\n  (if (= pos 0) (first s)\n    (n-pos (rest s) (- pos 1))))","user":"58681bf0e4b0f14aab7c888a"},{"code":"(fn [s n] \n  (loop [remain n values s]\n    (if (zero? remain)\n      (first values)\n      (recur (dec remain) (rest values)))))","problem":21,"user":"4f4becd8e4b03ad3f0c10c83"},{"code":"(fn [a x]\n  (if (= 0 x)\n    (first a)\n    (recur (rest a) (dec x))))","problem":21,"user":"51cd45e0e4b02254fc794887"},{"problem":21,"code":"(fn thenth [lst n] (if (< 0 n) (thenth (rest lst) (dec n)) (first lst)))","user":"54418311e4b032a45b869370"},{"problem":21,"code":"#(loop [coll %1 i %2] \n  (if(= i 0) (first coll) (recur (next coll) (dec i) )))","user":"5c48c971e4b0e06e1360a3c6"},{"problem":21,"code":"(fn knth [x n] (if (zero? n) (first x) (knth (rest x) (- n 1))))","user":"60b2aaebe4b0e0fa5f1b4228"},{"problem":21,"code":"(fn [l n] (loop [f (first l) r (rest l)]\n            (if (= (count r) (- (count (rest l)) n))\n              f\n              (recur (first r) (rest r)))))","user":"569aca1ee4b0542e1f8d144d"},{"problem":21,"code":"(fn [coll n] (loop [idx 0 coll-1 coll] (if (= idx n) (first coll-1) (recur (inc idx) (drop 1 coll-1)))))","user":"5b2e6b02e4b025bcb146f2d3"},{"problem":21,"code":"(fn nth_el [col n] (first (drop n col) ) )","user":"55c9bc1ee4b0e31453f649f1"},{"problem":21,"code":"(fn the-nth-ele2 [coll index]\n  (if (= index 0)\n    (first coll)\n    (the-nth-ele2 (rest coll) (dec index))))","user":"5a492896e4b05d388ecb6b6e"},{"code":"(fn nth1 [x n] (last (take (inc n) x)))","problem":21,"user":"522e8451e4b01cdb292c5f06"},{"code":"(fn [x y] (last (take (+ 1 y) x)))","problem":21,"user":"4e6a947f535d8ccf87e9fef7"},{"problem":21,"code":"(fn nthh [coll n]\n  (if (zero? n)\n    (first coll)\n    (nthh (rest coll) (- n 1))))","user":"566096d0e4b068f2fe63dc5a"},{"code":"(fn foo[l,n] (if (= n 0) (first l) (foo (rest l) (- n 1))))","problem":21,"user":"4f8b05d2e4b02e764a0a5176"},{"code":"(fn [l n]\n  (if (zero? n)\n    (first l)\n    (recur (rest l) (dec n))))","problem":21,"user":"4f066c90535dcb61093f6c11"},{"code":"(fn enth [x, n] (if (= n 0) (first x) (enth (rest x) (- n 1))))","problem":21,"user":"52b7a904e4b0c58976d9ad51"},{"problem":21,"code":"#(loop [c %1 x %2]\n   (if (= x 0)\n     (first c)\n     (recur (rest c) (dec x))))","user":"5641686de4b08d4f616f5efc"},{"code":"(fn [list, index] (.get list index))","problem":21,"user":"51fc1a9ee4b0f1313d468a18"},{"problem":21,"code":"(fn [x index] (-> x (nthnext index) first))","user":"5e5dc4f3e4b0fd0acd15866c"},{"code":"(fn mynth [col n]\n  (if (= n 0)\n      (first col)\n      (mynth (rest col) (- n 1))))","problem":21,"user":"4e5a460f535d8a8b8723a2ab"},{"problem":21,"code":"(fn [col index]\n  (loop [i 0\n         col col]\n    (if (= i index)\n      (first col)\n      (recur (+ i 1)\n             (next col)))))","user":"5511b44be4b06e50f9beb197"},{"problem":21,"code":"(fn [coll n]\n  (loop [xcoll coll\n         index 0]\n    (if (= index n)\n      (first xcoll)\n      (recur (rest xcoll) (inc index)))))","user":"591072e0e4b0163c97b36ebc"},{"problem":21,"code":"(fn nnth [list n]\n  (if (= n 0)\n    (first list)\n    (nnth (rest list) (- n 1))))","user":"547e3846e4b0c51c1f4d7302"},{"code":"(fn nth_of_list [list n]\n  (if\n    (= n 0) (first list)\n    (nth_of_list (rest list) (dec n))))","problem":21,"user":"4ea5ba92535d7eef308072d9"},{"problem":21,"code":"(fn _nth [coll n]\n  (if (= 0 n)\n    (first coll)\n    (_nth (rest coll) (dec n))))","user":"5e7af7ffe4b085ba37836e0f"},{"problem":21,"code":"(fn get-element\n  [coll x]\n  (if (zero? x)\n    (first coll)\n    (get-element (rest coll) (- x 1))))","user":"56844e4be4b062072dfb8acb"},{"problem":21,"code":"(fn [seq i]\n  (loop [seq seq\n         i i]\n    (if (= i 0)\n      (first seq)\n      (recur (rest seq) (dec i)))))","user":"607b04e5e4b0a637ed780373"},{"problem":21,"code":"(fn r [l n] (if (= 0 n) (first l) (r (rest l) (- n 1))))","user":"55f6c0e2e4b06e875b46ce99"},{"code":"(fn [s n]\n  (if (zero? n) \n   (first s)\n   (recur (rest s) (dec n))))","problem":21,"user":"529e558ce4b04e0c58e87b95"},{"code":"(fn [seq elem] (first (drop elem seq)))","problem":21,"user":"4e223bd6535d04ed9115e81c"},{"problem":21,"code":"(fn [coll n](first(drop n coll)))","user":"5cd4e1b2e4b0ccb061962927"},{"problem":21,"code":"(fn [coll x] (last (take (+ x 1) coll)) )","user":"54199df6e4b01498b1a71a4b"},{"problem":21,"code":"(fn mm [col n]\n  (if (= n 0)\n    (first col)\n    (mm (rest col) (dec n))))","user":"56b1ab17e4b0982f16b37df1"},{"code":"(fn my-nth [coll n]\n    (loop [coll coll, curr 0]\n      (if (= curr n)\n        (first coll)\n        (recur (rest coll) (+ 1 curr)))))","problem":21,"user":"51dc80b7e4b09c47a74ce10f"},{"problem":21,"code":"(fn [col, n] (if (= n 0)\n               (first col)\n               (recur (next col) (- n 1))\n               )\n  )","user":"553abb28e4b09218d5f44ffb"},{"code":"(fn [s n]\n  (if (= n 0)\n  (first s)\n  (recur (rest s) (dec n))))","problem":21,"user":"4efc41b2535dced4c769f27f"},{"code":"(fn nth_ [l n]\n  (if (<= n 0)\n    (first l)\n    (nth_ (rest l) (dec n))))","problem":21,"user":"504e127fe4b078edc5f593b6"},{"code":"(fn [x, n] (first (nthnext x n)))","problem":21,"user":"4f1c6986535d64f603146481"},{"code":"( fn[s,ind] (get (into-array s) ind ))","problem":21,"user":"51c0bfdbe4b0c9c82288293f"},{"code":"(fn mynth [xs i]\n  (if (zero? i)\n    (first xs)\n    (recur (rest xs) (dec i))))","problem":21,"user":"4feff3b6e4b0678c553fc31e"},{"code":"(fn [l,n] (if (= n 0) (first l) (recur (rest l) (- n 1))))","problem":21,"user":"4f12d1b0535d64f60314642b"},{"code":"(fn [x n]\n  (if (<= n 0)\n    (first x)\n    (recur (rest x) (dec n))))","problem":21,"user":"4e28120f535deb9a81d77efa"},{"code":"(fn nnth [x n]\n  (if (= 0 n)\n    (first x)\n    (nnth (rest x) (- n 1))))","problem":21,"user":"508fd72ee4b0ea685a20f76c"},{"problem":21,"code":"#(loop [n 0, arr %]\n   (if (= n %2)\n     (first arr)\n     (recur (+ n 1) (rest arr))))","user":"566cd399e4b0a866af6896c3"},{"problem":21,"code":"(fn get-nth\n  [a pos]\n  (if (= 0 pos)\n    (first a)\n    (recur (rest a) (dec pos)))\n  )","user":"60617afee4b03746e80ebf6c"},{"problem":21,"code":"(fn [s, n]\n  (first\n   (drop n s)))","user":"55349c67e4b09218d5f44fa0"},{"code":"(fn f [x n] (if (= n 0) (first x) (f (next x) (dec n))))","problem":21,"user":"50eafeaae4b0346a3e988cbb"},{"code":"(fn [List n] \n  (loop [l List ,x n] \n    (if (> x 0)\n      (recur (next l) (dec x))\n    (first l)\n    )\n   )\n)","problem":21,"user":"50644f3ee4b007509339a589"},{"problem":21,"code":"(fn [l n] \n   (first\n    (drop n l)\n    )\n   )","user":"5628a121e4b00e49c7cb47ed"},{"code":"(fn [coll i] (last (take ( + i 1 ) coll)))","problem":21,"user":"4fb0bd28e4b081705acca26b"},{"code":"(fn [eles n]  (if (zero? n) (first eles) (recur (rest eles) (- n 1))))","problem":21,"user":"527ed32ce4b0757a1b1713b5"},{"code":"(fn nplace [x y] ((vec x) y))","problem":21,"user":"531e5c81e4b08068f379edba"},{"code":"(fn nthing [x y] (if (= y 0) (first x) (nthing (rest x) (- y 1))))","problem":21,"user":"5313165ce4b08068f379ed06"},{"code":"(fn [col n] \n   ((apply comp (cons first (repeat n rest))) col))","problem":21,"user":"52f648eee4b047fd55836fb6"},{"problem":21,"code":"(fn newnth [coll ind] (if (= 0 ind) (first coll) (newnth (rest coll) (- ind 1))))","user":"5ef18431e4b07c55ae4a0529"},{"code":"#((comp first drop) %2 %)","problem":21,"user":"4f1af7e4535d64f603146471"},{"problem":21,"code":"(fn nthElm [lst idx] (if(= idx 0)(first lst)(nthElm (rest lst) (- idx 1))))","user":"5f39bd49e4b0574c87022c7f"},{"problem":21,"code":"(fn [in n] (first (drop n in)))","user":"5ff88607e4b06df49cee14a6"},{"problem":21,"code":"(fn [coll n]\n  (loop [ind 0\n         s coll]\n    (if (= n ind)\n      (first s)\n      (recur (inc ind) (rest s)))))","user":"546e1271e4b00cfc9eacc19a"},{"problem":21,"code":"(fn [sq idx] (first(drop idx sq)))","user":"5a137364e4b0ff51aa4b3185"},{"code":"(fn stuff [l n] \n  (if (= n 0)\n     (first l)\n     (stuff (rest l) (dec n))\n     )\n  )","problem":21,"user":"50f4894be4b004d364930528"},{"code":"(fn taco [i c] (let [s 0]\n  (loop [b i t c h s]\n      (if (= h t) (first b) (recur (rest b) t (+ 1 h)))\n    )\n  ) \n)","problem":21,"user":"4f69681ee4b07046d9f4ef89"},{"code":"(fn [data n]\n    (loop [cnt n lst data]\n       (if (zero? cnt)\n            (first lst)\n          (recur (dec cnt) (rest lst)))))","problem":21,"user":"514f0723e4b019235f6c0599"},{"problem":21,"code":"(fn f [l n]\n    (if (<= n 0)\n      (first l)\n      (f (rest l) (- n 1))))","user":"4f867b25e4b033992c121c51"},{"code":"(fn [l n] (if (zero? n) (first l) (recur (rest l) (dec n))))","problem":21,"user":"4e4bd94b535dc968683fc4d7"},{"problem":21,"code":"(fn [r n] (last (take (+ n 1) r)))","user":"573407f0e4b0cd1946bd1001"},{"problem":21,"code":"(fn[x n] (get (vec x) n))","user":"5a8ebd9ae4b05369db4d252b"},{"problem":21,"code":"(fn [x y]\n  (if (= y 0)\n    (first x)\n    (recur (next x) (- y 1))))","user":"5965eb8de4b069c0a1a19796"},{"problem":21,"code":"; for each element in the sequence, if it's the nth element, return it alone. \n\n; use 'rest' recursively to get to the nth element, but only return the first \n\n(fn [coll n] (first (drop n coll)))","user":"55f7856be4b06e875b46cead"},{"problem":21,"code":"(fn [lst idx]\n  (if (= idx 0)\n    (first lst)\n    (recur (rest lst) (dec idx))))","user":"542b0592e4b0dad94371f286"},{"code":"(fn dancingbear [be ar] (first (drop ar be)))","problem":21,"user":"52296df4e4b04c906c9c6a72"},{"code":"(fn [seq idx] (first (drop idx seq)))","problem":21,"user":"4f055d4f535dcb61093f6bf6"},{"problem":21,"code":"(fn\n [values n]\n (loop [test n tmp-list values]\n  (if (== test 0)\n   (first tmp-list)\n   (recur (dec test) (rest tmp-list))\n   )\n  ) )","user":"55ed71dae4b0121d4835fdd9"},{"code":"(fn [c n] (if (zero? n) (first c) (recur (rest c) (dec n))))","problem":21,"user":"52951156e4b02ebb4ef7501b"},{"problem":21,"code":"(fn [elements n] (loop [elements elements n n]\n  (if (zero? n) \n    (first elements)\n                  (recur (rest elements) (dec n)))))","user":"55c21ecce4b0e31453f64975"},{"problem":21,"code":"(fn nieme [coll n] \n  (if (= 0 n) \n    (first coll) \n    (nieme (rest coll) (dec n))))","user":"5454bd9be4b0e397800069db"},{"problem":21,"code":"(fn [sequence index]\n(loop [cur-seq sequence\n       cur-index 0]\n  (let [cur-val (first cur-seq)]\n    (if (= cur-index index)\n      (first cur-seq)\n      (if (= (count cur-seq) 0)\n        nil\n        (recur (rest cur-seq)\n               (inc cur-index)))))))","user":"5bb17123e4b0a20761a234fd"},{"code":"(fn [xs i]\n  (if (zero? i)\n    (first xs)\n    (recur (rest xs) (dec i))))","problem":21,"user":"4e6a2e83535d8ccf87e9fea7"},{"code":"(fn [arr idx]\n(loop [result arr i idx]\n  (if (= i 0)\n    (first result)\n    (recur (rest result) (dec i))\n    )\n  ))","problem":21,"user":"517e12e3e4b0fcc7c5d37d3c"},{"code":"(fn [x index] (last (take (+ index 1) x)))","problem":21,"user":"4f3b97c7e4b0e243712b1f30"},{"code":"#(second (take-nth  %2 %))","problem":21,"user":"52015698e4b0d7096e99ddba"},{"code":"#(loop [items %1 n %2]\n  (if (= n 0)\n    (first items)\n    (recur (rest items) (dec n))))","problem":21,"user":"502a8f67e4b095a7adb898b2"},{"code":"(fn\n  [xs x]\n  (last (take (+ 1 x) xs)))","problem":21,"user":"52635a22e4b03e8d9a4a70ac"},{"problem":21,"code":"(fn inf [x y] (first (drop y x)))","user":"5e832e75e4b09a7a73c8bbb5"},{"problem":21,"code":"#(loop [a %1 n 0] (if (= n %2) (first a) (recur (rest a) (inc n))))","user":"56e70696e4b02e7e935eb6d1"},{"code":"(fn [data n]\n  (if (= n 0)\n      (first data)\n      (recur (rest data) (- n 1))))","problem":21,"user":"4fc5dfabe4b0ee37620e1800"},{"problem":21,"code":"(fn elke\n  [s i]\n  (loop\n    [sq s\n     idx i\n     n 0]\n     (if (= n idx)\n        (first sq)\n        (recur (rest sq) idx (inc n)))))","user":"56a44067e4b0542e1f8d14da"},{"code":"(fn [sequence arg]\n  (loop [coll (seq sequence)\n         pos arg]\n    (if (<= pos 0) (first coll)\n\t(recur (rest coll) (dec pos)))))","problem":21,"user":"5213348ae4b0d32679a50652"},{"code":"(fn [a b] (first (drop b (take (+ 1 b) a))))","problem":21,"user":"538ac470e4b0640c7a9a58bd"},{"problem":21,"code":"(fn thenth [llist enn] (if (zero? enn) (first llist) (thenth (next llist) (dec enn))))","user":"560d24a2e4b05f002753df34"},{"code":"(fn [ls index]\n  (loop [n index\n         l ls]\n    (if (= 0 n)\n      (first l)\n      (recur (- n 1) (rest l)))))","problem":21,"user":"5154fa3fe4b0179c5115f4e6"},{"code":"(fn get-nth [x n] (\n  if (= n 0) (first x) (get-nth (rest x) (dec n))))","problem":21,"user":"4f9dbe07e4b0dcca54ed6d26"},{"code":"(fn [col n] (second (last (map vector (range (inc n)) col))))","problem":21,"user":"5233ad08e4b07e3ee2be83ac"},{"problem":21,"code":"(fn [col n] \n  (if (zero? n) \n    (first col) \n    (recur (rest col) (dec n))))","user":"5456e4e7e4b080a794c2c883"},{"problem":21,"code":"(fn [f s]  (loop [head (first f) tail (rest f) cnt 0] \n(if (= cnt s) head (recur (first tail) (rest tail) (+ cnt 1)))))","user":"53b3ea79e4b047364c0444ab"},{"problem":21,"code":"#(loop [i %2 c %1] (if (= 0 i) (first c) (recur (dec i) (rest c))))","user":"549cc867e4b0f3d1d8e70f8f"},{"problem":21,"code":"#(->> %1\n(take (+ %2 1))\n(last))","user":"55627de1e4b0c656e3ff17d9"},{"code":"#(loop [i 0\n         coll %1]\n    (if (= i %2)\n      (first coll)\n      (recur (inc i) (rest coll))))","problem":21,"user":"4eb9d8f8535dfed6da9c6d61"},{"problem":21,"code":"(fn [xs n] \n  (loop [x n coll xs]\n    (if (= x 0) (first coll) (recur (- x 1) (rest coll)))\n    )\n  )","user":"5e6b9955e4b04a83ad7cd27b"},{"problem":21,"code":"(fn [x y] (get (into [] x)y))","user":"58e325f3e4b005f69f193ca7"},{"code":"(fn !! [xs n] (if (= 0 n) (first xs) (!! (rest xs) (- n 1))))","problem":21,"user":"50553322e4b0ce54f56f03f8"},{"problem":21,"code":"(fn [col n]\n\t(last (take (+ n 1) col)))","user":"56a3dddce4b0542e1f8d14d2"},{"problem":21,"code":"(fn f [elems n] (if (= 0 n) (first elems) (f (rest elems) (dec n))))","user":"59d4d126e4b0ef0a1e9b5be9"},{"code":"(fn [l n]\n        (loop [a l, b n]\n          (if (= b 0)\n            (first a)\n            (recur (next a) (dec b)))))","problem":21,"user":"532bce35e4b09d4e7a9b5536"},{"problem":21,"code":"(fn [coll req-ind]\n  (first\n    (filter\n      (fn [item]\n        (not= item nil))\n      (map-indexed\n        (fn [index item]\n          (if (= index req-ind)\n            item))\n        coll))))","user":"5a35d515e4b0ddc586f153e1"},{"code":"(fn [l i]\n  (if (= 0 i)\n    (first l)\n    (recur (rest l) (- i 1))))","problem":21,"user":"515828b8e4b0a069fd272c71"},{"code":"(fn [c x] (first (drop x c)))","problem":21,"user":"52c3a453e4b0c2d177d620c7"},{"code":"(fn [seq n] (if (zero? n) (first seq) (recur (rest seq) (dec n))))","problem":21,"user":"4ea1b9e4535d7eef308072b8"},{"code":"(fn [sq n] (last (take (+ n 1) sq)))","problem":21,"user":"4e1350af535d04ed9115e7d8"},{"problem":21,"code":"#(loop [seq %1 i 0]\n    (if (= i %2)\n      (first seq)\n      (recur (rest seq) (inc i))))","user":"60849bd6e4b0736b099e42f2"},{"problem":21,"code":"(fn my-nth [s n]\n    (if (= n 0)\n      (first s)\n      (my-nth (rest s) (dec n)))\n    )","user":"57985f98e4b039eba2ecb114"},{"code":"(fn [c e] (first (drop e c)))","problem":21,"user":"4f24165fe4b0d66497709fe7"},{"problem":21,"code":"(fn [num-seq n] (first (drop n num-seq)))","user":"5df886d8e4b0a607a9a45ca9"},{"problem":21,"code":"(fn [x y]\n    (if (= y 0)\n      (first x)\n      (recur (rest x)(dec y))))","user":"5ea63100e4b00a66d4a951ab"},{"code":"(fn [s, index]\n  (last (take (inc index) s)))","problem":21,"user":"4e6f8af8535d5021c1a89620"},{"problem":21,"code":"#(loop [s %1\n        c 0]\n   (if (= c %2)\n     (first s)\n     (recur (rest s) (inc c))))","user":"5bab5440e4b0a20761a23475"},{"code":"(fn [coll n] (last (first (split-at (+ n 1) coll))))","problem":21,"user":"4ee26926535d10e5ff6f5367"},{"code":"(fn [s i]\n  (loop [j 0 cs s]\n    (if (= j i)\n      (first cs)\n      (recur (inc j) (rest cs)))))","problem":21,"user":"51b86a0fe4b09e0e347b2e78"},{"code":"(fn [c,n] ( last ( take (inc n) c  ) ))","problem":21,"user":"50a3b55be4b0ceace084d494"},{"problem":21,"code":"(fn [s n]\n  (first\n   \t(drop n s)))","user":"60036736e4b074f607df663b"},{"code":"(fn n-th [col n] (if (<= n 0) (first col) (n-th (rest col) (dec n))))","problem":21,"user":"536c6f20e4b0fc7073fd6e3d"},{"problem":21,"code":"(fn [list n] (loop [remain list index n] (if (>= 0 index) (first remain) (recur (rest remain) (dec index) ))))","user":"59c72175e4b0a024fb6ae53c"},{"code":"(fn foo [x n] (if (> n 0) (foo (rest x) (dec n)) (first x)))","problem":21,"user":"5149c2f1e4b0829bd132edb0"},{"problem":21,"code":"(fn [l i] (last (take (+ 1 i) l)))","user":"53da5feee4b0e771c302549c"},{"code":"(fn [seq n]\n  (-> (take (+ n 1) seq)\n      last))","problem":21,"user":"5140c505e4b049dea086df40"},{"problem":21,"code":"#(last (take (inc %2) %1) )","user":"554ad20fe4b0a04f7929957a"},{"code":"(fn n-th-element [input-sequence n]\n  (if (= n 0)\n    (first input-sequence)\n    (recur (rest input-sequence) (- n 1))))","problem":21,"user":"4e77f1f6535d324fb2983d73"},{"problem":21,"code":"(fn patrick-smells [x y] (get (vec x) y))","user":"572a60cee4b0f4d77e651237"},{"code":"(fn R [V n] (if (> n 0) (R (rest V) (- n 1)) (first V)))","problem":21,"user":"536c77f1e4b0fc7073fd6e3f"},{"problem":21,"code":"#(if (= %2 0) (first %1) (recur (next %1) (- %2 1)))","user":"5cebafbbe4b0a17bb84e2be6"},{"problem":21,"code":"(fn\n  [s i]\n  (when (seq s)\n    (if (= i 0)\n      (first s)\n      (recur (rest s) (dec i)))))","user":"56b2630be4b0982f16b37e03"},{"problem":21,"code":"(fn n-th [x n] (if (<= n 0) (first x) (n-th (rest x) (dec n))))","user":"5424f5c3e4b01498b1a71b06"},{"code":"(fn [lst n] (last (take (+ n 1) lst) ) )","problem":21,"user":"4edab06d535d10e5ff6f5310"},{"code":"(fn [lst idx] (first (drop idx lst)))","problem":21,"user":"51c69d09e4b03a28d42333c3"},{"code":"(fn [coll n] (get (vec coll)n))","problem":21,"user":"52496f0ae4b05ef8e38e6459"},{"problem":21,"code":"(fn [sequ, index]\n  (loop [s sequ i index]\n  \t(if (= i 0)\n      (first s)\n      (recur (rest s) (dec i)))))","user":"5563a94be4b0c656e3ff17f2"},{"problem":21,"code":"(fn [l n] (first(reverse(take (+ n 1) l))))","user":"5dab11cde4b000c986472c45"},{"problem":21,"code":"(fn [v n]\n  (if (= n 0)\n    (first v)\n    (recur (rest v) (dec n))))","user":"5820cc33e4b04b46fc4b0f60"},{"problem":21,"code":"(fn f [ls idx]\n   (let [x (first ls)\n         xs (rest ls)]\n     (if (= 0 idx)\n       x\n       (f xs (dec idx)))))","user":"503e91d4e4b06c4e0e1fa269"},{"problem":21,"code":"(fn [a-list x](.get a-list x))","user":"5984c965e4b021a7a535fe3b"},{"problem":21,"code":"(fn [arr n]\n  (if (= n 0)\n    (first arr)\n    (recur (next arr) (dec n))))","user":"58b06b7ce4b0ebc645576cdc"},{"code":"(fn [xs n]\n  (if (= n 0)(first xs)(recur (rest xs)(dec n))))","problem":21,"user":"52295917e4b04c906c9c6a6f"},{"problem":21,"code":"(fn foo [v n]   (if (zero? n  ) (first v) (foo (rest v) (dec n) )) )","user":"5735ac67e4b0cd1946bd102b"},{"code":"(fn [s n]\n     (loop [sq s num n]\n       (if (= num 0) (first sq)\n         (recur (rest sq) (dec num)))))","problem":21,"user":"4fcd1bbde4b065de69964ca4"},{"code":"(fn mynth [x n]\n  (if\n    (= n 0)\n    (first x)\n    (mynth (rest x) (- n 1))))","problem":21,"user":"504ece87e4b069badc5a33ce"},{"code":"(fn [s n] (if (= n 0)\r\n              (first s)\r\n              (recur (rest s) (dec n))))","problem":21,"user":"4fa47044e4b081705acca19e"},{"code":"(fn get-nth [xs n]\n  (if (= n 0)\n    (first xs)\n    (get-nth (rest xs) (- n 1))))","problem":21,"user":"4fcd72e7e4b065de69964caa"},{"code":"(fn [x place] (last (take (inc place) x)))","problem":21,"user":"5383cc0ae4b06839e8705ee9"},{"code":"(fn [x n]\n  (loop [coll x, i 0]\n    (when (seq coll)\n      (if (= i n)\n        (first coll)\n        (recur (rest coll) (inc i))))))","problem":21,"user":"4e75edfe535d7a570dd295c7"},{"code":"(fn [xs i]\r\n  (if (zero? i)\r\n    (first xs)\r\n    (recur (rest xs) (dec i))))","problem":21,"user":"4f043ed1535dcb61093f6bb4"},{"code":"(fn [l n]\r\n  (if (= n 0) (first l)\r\n    (recur (rest l) (dec n))))","problem":21,"user":"4e02bee8535d04ed9115e791"},{"problem":21,"code":"(fn nth-elem [x n]\n  (if (= n 0)\n    (first x)\n    (nth-elem (rest x) (- n 1))))","user":"556256d5e4b0c656e3ff17d6"},{"code":"#(first(second(split-at %2 %1)))","problem":21,"user":"51e6a311e4b0ab43cc26c21e"},{"problem":21,"code":"(fn [l n]\n  (let [a (drop n l)]\n    (first a)))","user":"56537f9be4b0f9d632dd8473"},{"problem":21,"code":"(fn nfoo [se n] (first (drop n se)))","user":"55b26ed7e4b0da326a65cf82"},{"code":"(fn [s n] (if (= n 0)\n            (first s)\n            (recur (rest s) (dec n))))","problem":21,"user":"51a24c6ae4b00957e520db7a"},{"problem":21,"code":"(fn [xs x] ((comp first second split-at) x xs))","user":"603f6623e4b0d5df2af2231f"},{"problem":21,"code":"(fn [col n]\n  (if (zero? n)\n   (first col)\n(recur (rest col) (- n 1))))","user":"5785c1d4e4b0ebec4cfb74e1"},{"code":"(fn get-nth [s n] (if (> n 0) (get-nth (rest s) (- n 1)) (first s)))","problem":21,"user":"4fea2de5e4b0140c20fb9bfe"},{"code":"(fn [x,y] (first (nthnext x y)))","problem":21,"user":"500b61b1e4b03d00572d2d81"},{"problem":21,"code":"(fn my-fn [s i] (if (> i 0) (my-fn (rest s) (- i 1)) (first s)))","user":"54d22860e4b0e8a36923e5ef"},{"problem":21,"code":"(fn get-nth [x n] (if (= n 0) (first x) (get-nth (rest x) (dec n)) ))","user":"55bfc39ee4b01b9910ae2a1a"},{"problem":21,"code":"#(loop [s %1\n        n %2]\n    (if (= n 0)\n      (first s)\n      (recur (rest s)\n             (dec n))))","user":"55f8a7b3e4b03cbcff9738b8"},{"problem":21,"code":"(fn [x y] (get (if (list? x)(into [] x)x) y))","user":"60904332e4b03bd49d9f36ca"},{"problem":21,"code":"(fn [list1 idx] (get (vec list1) idx))","user":"5c24c654e4b07e362c2305a7"},{"problem":21,"code":"(fn [xs n]\n  (get (vec xs) n))","user":"5574c172e4b05c286339e059"},{"problem":21,"code":"(fn [coll, x] \n  (loop [coll coll\n         x x]\n    (if (= x 0)\n      (first coll)\n      (recur (rest coll) (dec x)))))","user":"540cde77e4b0addc1aec6709"},{"code":"(fn [a b] (last (take (+ b 1) a)))","problem":21,"user":"4e6b07dd535d8ccf87e9ff0a"},{"problem":21,"code":"(fn nthChild\n  [lst n]\n  (last (take (+ n 1) lst)))","user":"5e978fe5e4b0157ca96647d1"},{"code":"(fn my-nth [s n]\n  (loop [s s i 0]\n    (if (< i n)\n      (recur (rest s) (inc i))\n      (first s))))","problem":21,"user":"4e9c81e8535dbda64a6f6b80"},{"problem":21,"code":"(fn func [l n]  \n           (if (= n 0) \n             (first l)\n             (func (rest l) (- n 1))\n             )\n           \n  )","user":"54ee1c5be4b024c67c0cf86e"},{"problem":21,"code":"(fn [list n] (get (vec list) n ))","user":"54af490be4b09f271ff37d05"},{"code":"(fn nthelement\n  [ve n]\n  (if (= n 0)\n    (first ve)\n    (recur (rest ve) (- n 1))))","problem":21,"user":"53383c74e4b0e30313ee6c92"},{"problem":21,"code":"(fn nele [s n]\n  (if (= n 0)\n    (first s)\n    (nele (rest s) (dec n))))","user":"60096aabe4b074f607df667f"},{"code":"(fn [s n]\n  (loop [item (first s), coll (rest s), index 0]\n    (cond\n      (= index n) item,\n      (nil? item) nil,\n      :else\n        (recur (first coll), (rest coll), (inc index)))))","problem":21,"user":"4f5c0549e4b0030a34fb2b1a"},{"problem":21,"code":"#(first (keep-indexed (fn [indexed item]  (if (= indexed %2) item )) %1))","user":"535558b9e4b04ce2eb3ed25a"},{"code":"(fn mynth [l n] (if (= n 0) (first l) (recur (rest l) (- n 1))))","problem":21,"user":"4e851955535db62dc21a62e9"},{"code":"( fn [s c]\n     (if (= c 0)\n       (first s)\n       (recur (rest s) (- c 1))))","problem":21,"user":"507c465ae4b0a19f8e876e56"},{"code":"(fn [coll n]\n  (loop [s coll i 0]\n    (if (= i n) \n      (first s) \n      (recur (rest s) (+ i 1))\n)))","problem":21,"user":"4e25176e535d04ed9115e829"},{"problem":21,"code":"(fn [my-seq my-index] (last (take (+ my-index 1) my-seq)))","user":"5baa5f53e4b0a20761a23459"},{"problem":21,"code":"(fn [sequen index] \n  (->> sequen\n       (take (+ index 1))\n       (reverse)\n       (first)))","user":"5dcd182ae4b0b296f82db5a9"},{"problem":21,"code":"(fn\n  [s n]\n  (loop\n    [sl s\n     nl n]\n    (if (= nl 0)\n      (first sl)\n      (recur (rest sl) (dec nl))\n      )\n    )\n  \n  )","user":"58d28c70e4b03c36ff7e5901"},{"problem":21,"code":"(fn [x y] (last(take (+ y 1)(seq x))))","user":"5be8bc2de4b0f319e2d7ec66"},{"problem":21,"code":"(fn [es m] (last (take (inc m) es)))","user":"56483562e4b0284900eef629"},{"code":"(fn [s,n] (if (= n 0) (first s) (recur (rest s) (dec n))))","problem":21,"user":"4dee4a9c535d08e6dec9fe11"},{"code":"(fn [s x]\n    (last (take (+ x 1) s)))","problem":21,"user":"510967aae4b07c05fdf6dc0f"},{"code":"(fn [l n] \n  (if (= n 0) (first l) (recur (rest l) (dec n))))","problem":21,"user":"51a61484e4b0740bfd1afd1e"},{"code":"(fn [sq itm]\n  (loop [q sq acc 0]\n    (if (= acc itm)\n      (first q)\n      (recur (rest q) (inc acc)))))","problem":21,"user":"512934dde4b03a34742b4315"},{"problem":21,"code":"(fn f \n[col n]\n  \n  (if (= n 0) (first col) (recur (rest col) (dec n)))\n  \n)","user":"547b4ec6e4b0c51c1f4d72d5"},{"problem":21,"code":"(fn neth\n   ([l n]\n    (neth l n 0))\n   ([l n acc-val]\n    (if (= acc-val n)\n      (first l)\n      (recur (rest l) n (inc acc-val))) )\n   )","user":"590b3aeae4b047aa04b199d0"},{"code":"(fn [s n] \n  (loop [i n\n         r s]\n    (if (= 0 i) \n      (first r)\n      (recur (dec i) (rest r)))))","problem":21,"user":"4fe2501ae4b0dd6cd5ce3644"},{"code":"(fn [s n]\n  (if (= n 0)\n      (first s)\n      (recur (rest s) (- n 1))))","problem":21,"user":"4ec812d9535d6d7199dd36f0"},{"code":"(fn [s n] (last (take (inc n) s)))","problem":21,"user":"4f31519ae4b0d6649770a086"},{"problem":21,"code":"(fn [seq n]\r\n  (last (take (inc n) seq)))","user":"555bd27ae4b0b056612e2244"},{"code":"#(loop [dataseq %1 index 0] (if (= %2 index) (first dataseq) (recur (rest dataseq) (inc index))))","problem":21,"user":"4e678231535d8ccf87e9fe7e"},{"problem":21,"code":"(fn [x n] (get (reduce-kv #(assoc %1 %2 %3) {} (vec x)) n))","user":"5ea806d5e4b00a66d4a951b9"},{"problem":21,"code":"(fn [n times] \n  (loop [x n b times]\n    (if (zero? b)\n      (first x)\n      (recur (rest x) (dec b)))))","user":"54051338e4b0addc1aec6662"},{"problem":21,"code":"(fn [x n]\n    (first (peek (vec (split-at n x)))))","user":"540ff022e4b01498b1a7199a"},{"problem":21,"code":"#(last (find (vec %1) %2))","user":"5d5502cbe4b02ba5928a680b"},{"code":"(fn [v, n] (first (drop n v)))","problem":21,"user":"5262a4d0e4b03e8d9a4a708f"},{"problem":21,"code":"(fn [coll index] \n  (if (= index 0)\n    (first coll)\n    (recur (rest coll) (dec index))))","user":"5e157910e4b0a047bd49f701"},{"problem":21,"code":"(fn f2 [coll n] (if (> n 0) (recur (next coll) (dec n)) (first coll)))","user":"55f04940e4b06e875b46ce21"},{"problem":21,"code":"(fn nf [x n] (if (= n 0) (first x) (nf (rest x) (dec n))))","user":"54965534e4b0b312c081ff65"},{"problem":21,"code":"(fn [listy n]\n  (loop [tmp-n n tmp-list listy]\n    (if (= 0 tmp-n)\n      (first tmp-list)\n        (recur (dec tmp-n) (rest tmp-list)))))","user":"59369515e4b02506e01a297e"},{"code":"(fn [data n] (first (nthnext data n)))","problem":21,"user":"4fd6e70fe4b0dab7d829f379"},{"problem":21,"code":"(fn th [c i] (if (== i 0) (first c) (th (rest c) (- i 1))))","user":"54d7e277e4b0a52adc2e2031"},{"code":"(fn beh [x n]\n  (if (> n 0) (beh (rest x) (- n 1)) (first x)))","problem":21,"user":"52747090e4b03e8d9a4a74a5"},{"problem":21,"code":"#(loop [lst %1 tgt %2 cnt 0]\n   (if (= tgt cnt)\n     (first lst)\n     (recur (rest lst) tgt (inc cnt))))","user":"57118ee6e4b09c608db70447"},{"code":"(fn [l n]\r\n  (loop [l1 l n1 n]\r\n    (if (= n1 0)\r\n      (first l1)\r\n      (recur (rest l1) (dec n1)))))","problem":21,"user":"507437c2e4b054001656acd0"},{"code":"(fn get-nth [s n]\n  (if (= n 0)\n    (first s)\n    (get-nth (rest s) (dec n))))","problem":21,"user":"52c3dffee4b0c2d177d620cb"},{"problem":21,"code":"(fn [x n]\n  (last (take (inc n) x)))","user":"5975fc20e4b01722bebd4cd2"},{"code":"(fn [l c]\n  (if (> c (count l)) nil\n    (if (<= c 0) (first l)\n      (recur (rest l) (dec c)))))","problem":21,"user":"503ee85ce4b06c4e0e1fa26e"},{"problem":21,"code":"(fn [list n]\n  (loop [l list c 0]\n   (if (not= n c)\n     (recur (rest l) (inc c))\n     (first l))))","user":"58de563fe4b0a4d5acaab6e3"},{"problem":21,"code":"(fn [coll index]\n  (loop [c coll\n         i index]\n    (if (zero? i)\n      (first c)\n      (recur (rest c) (dec i)))))","user":"539b6c78e4b0b51d73faaf20"},{"problem":21,"code":"(fn take-n [x n] (if (= n 0) (first x) (take-n (rest x) (- n 1))))","user":"569da949e4b0542e1f8d147e"},{"problem":21,"code":"(fn nt [x n] (cond (= n 0) (first x) :else (nt (rest x) (- n 1))))","user":"57c3451fe4b05aa3c4741cbd"},{"code":"#(loop [c %1\n        n %2]\n    (if (= 0 n)\n      (first c)\n      (recur (rest c) (dec n))))","problem":21,"user":"4fb55e64e4b081705acca2bd"},{"problem":21,"code":"(fn nth-element\n  ([coll n] (nth-element coll n 0))\n  ([coll n idx] (if (= n idx)\n                  (first coll)\n                  (recur (rest coll) n (inc idx)))))","user":"5c2f0cdfe4b0d62ef62d9f09"},{"problem":21,"code":"(fn funkki ([l n](funkki l n 0))([l n c](if (= n c) (first l) (recur (rest l) n (inc c)))))","user":"5954eef0e4b066ee0a44af17"},{"code":"(fn [x y]\n  (aget (to-array x) y))","problem":21,"user":"4e2ef93d535deb9a81d77f0f"},{"code":"(fn [coll n]\n  (loop [i 0 c coll]\n    (if (= i n)\n      (first c)\n      (recur (inc i) (rest c)))))","problem":21,"user":"4fa982fae4b081705acca1e0"},{"problem":21,"code":"(fn [c i] (loop [n 0 coll c] (if (= i n) (first coll) (recur (inc n) (rest coll)))))","user":"561047eae4b05f002753df6d"},{"problem":21,"code":"#((vec %) %2 )","user":"55a74d46e4b09e57187da2a3"},{"code":"(fn [x i] (first (drop i x)))","problem":21,"user":"4f1d1299535d64f603146487"},{"problem":21,"code":"(fn [l x]\n  (if (zero? x)\n    (first l)\n    (recur (rest l) (dec x))))","user":"54fa1641e4b0cf870d9346fc"},{"problem":21,"code":"(fn foo [a b] \n              (if (> b 0)\n                (foo (rest a)(dec b))\n                (first a)\n               )\n              )","user":"5a58524ee4b05d388ecb6c7f"},{"problem":21,"code":"#(loop [items %1 i %2] (if (= i 0) (first items) (recur (rest items) (dec i))))","user":"54722c55e4b094393f72dd74"},{"problem":21,"code":"#(if (= 0 %2)\n   (first %)\n   (recur (rest %1) (dec %2)))","user":"579fb6c2e4b0264b925669fd"},{"problem":21,"code":"(fn [x n]\n  (if (= n 0) (first x) (recur (rest x) (dec n))))","user":"5a9482b7e4b0d174b936c737"},{"problem":21,"code":"(fn [x y] (first (loop [result x i y] (if (= i 0) result (recur (rest result) (- i 1))))))","user":"5a799077e4b03baeef9276c1"},{"problem":21,"code":"#(loop [a %1\n        b %2]\n   (if (= b 0)\n      (first a)\n      (recur (rest a) (dec b))))","user":"55556737e4b0deb715856e15"},{"code":"#(loop [lzt %1 num %2]\n  (if (zero? num) (first lzt)\n    (recur (rest lzt) (dec num))))","problem":21,"user":"4ec6dda2535d6d7199dd36da"},{"problem":21,"code":"(fn nitem [a b] \n  (if (zero? b)\n    (first a)\n    (nitem (rest a) (dec b))))","user":"5654cb2de4b0f9d632dd848b"},{"problem":21,"code":"(fn  [x y] \n  (last (take (inc y) x))\n  )","user":"5713f693e4b07c98581c3ab0"},{"problem":21,"code":"(fn [x y] (first (filter #(if (= y (.indexOf x %)) %) x)))","user":"60b3b375e4b0e0fa5f1b4232"},{"problem":21,"code":"(fn  [lst ind]  \n  (loop [rem-lst lst i ind]\n   \n      (if (= i 0) (first rem-lst) \n        (recur (rest rem-lst) (dec i))\n        )\t\t\n      \n    )\n  )","user":"55edc088e4b0121d4835fde0"},{"code":"(fn\n  [coll idx]\n  (if (== 0 idx)\n    (first coll)\n    (recur (rest coll) (dec idx))))","problem":21,"user":"4f4544e1e4b0d56e7bb92b7a"},{"code":"(fn my-nth [sq n]\n  (cond \n    (empty? sq) nil\n    (= n 0) (first sq)\n    :else    \n    (recur (rest sq) (dec n))))","problem":21,"user":"5144e89be4b021a5ff8301f9"},{"problem":21,"code":"(fn [coll pos] (last (last (filter #(= (first %) pos)  (map-indexed vector coll)))))","user":"5a6a436de4b0512ff01cda24"},{"problem":21,"code":"(fn th [a, n]\n  (if (= n 0)\n    (first a)\n    (th (rest a) (- n 1))))","user":"5af2edc2e4b0cc2b61a3bc74"},{"problem":21,"code":"(fn [xs n]\n  (cond\n    (empty? xs) nil\n    (zero? n) (first xs)\n    :else (recur (rest xs) (dec n))))","user":"5b51b9f8e4b02d533a91bcfe"},{"problem":21,"code":"(fn f [xs i]\n  (if (= i 0)\n    (first xs)\n    (f (rest xs) (dec i))))","user":"562ace2ce4b00e49c7cb4830"},{"problem":21,"code":"#_( fn [x y] (last ( take (+ y 1 ) x ) ) )\n#( last ( take (+ %2 1 ) %1 ) )","user":"542cb9d0e4b0dad94371f2ac"},{"problem":21,"code":"(fn nth_elem [sec number](first(drop number sec)))","user":"57067a0ee4b0b0fb43fd067e"},{"code":"(fn [seq i] (if (= i 0) (first seq) (recur (next seq) (dec i))))","problem":21,"user":"4e6a82ba535d8ccf87e9feef"},{"problem":21,"code":"(fn n-th [arr i]\n  (if (= i 0)\n    (first arr)\n    (recur (rest arr) (- i 1))))","user":"5bf0aefde4b0a6d31fed215a"},{"code":"(fn [l r]\n  (loop [lp l i 1 ]\n      (if (> i r)\n        (first lp)\n        (recur (rest lp) (+ i 1))\n        ) \n      ) \n   )","problem":21,"user":"51e1c176e4b06a68e693eafb"},{"code":"#(first (drop  %2 %1))","problem":21,"user":"4ef5c7ce535dced4c769f248"},{"problem":21,"code":"(fn [col n]\n   (if (zero? n)\n     (first col)\n     (recur (rest col) (dec n))))","user":"55895eade4b059ccff29b202"},{"problem":21,"code":"(fn [seq, n]\n  (loop [l seq, to-go n]\n    (if (= 0 to-go)\n      (first l)\n      (recur (rest l) (dec to-go)))))","user":"5c7c78c9e4b0d597f478ca94"},{"code":"(fn [s i]\n  (if (= 0 i)\n    (first s)\n    (recur (rest s) (dec i))))","problem":21,"user":"5019e17ee4b045167281ca68"},{"problem":21,"code":"(fn takenth [x i] (\n         if (= i 0) (first x)\n         (takenth (rest x) (- i 1))))","user":"5b4b58f2e4b02d533a91bc9c"},{"problem":21,"code":"(fn [coll1 pos1]\n  (loop [coll coll1\n        pos 0\n       ]\n    (let [head (first coll) tail (rest coll)]\n   (if (= pos pos1)\n     head\n     (recur tail (inc pos))\n   )\n)\n  ))","user":"53f7820be4b0de5c41848560"},{"problem":21,"code":"(fn [col n] \n  (if (zero? n ) \n    (first col) \n    (recur (rest col) (- n 1))\n    \n  )\n)","user":"5fdc6ad4e4b05ac5b16ea13a"},{"code":"(fn [list n] (get (vec list) n))","problem":21,"user":"4f03396d535dcb61093f6a7b"},{"problem":21,"code":"(fn tnh\n  [xs idx]\n  (if (= idx 0) (first xs)\n    (tnh (rest xs) (dec idx))))","user":"5a16da30e4b0ff51aa4b31cc"},{"problem":21,"code":"(fn [s n]\n  (loop [sequence s k n]\n    (if (zero? k)\n      (first sequence)\n      (recur (rest sequence) (dec k)))))","user":"58fb7d7ae4b0438e51c2cf7a"},{"code":"(fn get-nth [l n]\n  (if (= n 0)\n    (first l)\n    (get-nth (rest l) (- n 1))))","problem":21,"user":"4fe8e771e4b0547ebccb2431"},{"problem":21,"code":"(fn [l n]\n  (loop [iter 0\n         lis l]\n    (if (= iter n)\n      (first lis)\n      (recur (inc iter)\n             (rest lis)))))","user":"5a373b80e4b001c08efc0c7c"},{"code":"(fn [coll n]\n  (loop [coll coll\n        n n]\n    (if (zero? n)\n        (first coll)\n        (recur (rest coll) (dec n)))))","problem":21,"user":"4eda7cc3535d10e5ff6f530e"},{"code":"(fn get-nth [s n] (if (= n 0) (first s) (get-nth (rest s) (- n 1))))","problem":21,"user":"522454f4e4b01819a2de42d3"},{"problem":21,"code":"#(loop [count %2\n        loop-seq %1]\n   (if (= 0 count)(first loop-seq)\n     (recur (dec count) (rest loop-seq))))","user":"570ad386e4b0b0fb43fd06b9"},{"code":"(fn [sq n]\n  (first (last (split-at n sq))))","problem":21,"user":"5379306fe4b06839e8705e50"},{"problem":21,"code":"(fn [mylist nn] (loop [looplist mylist n nn] (if (> n 0) (recur (rest looplist) (dec n)) (first looplist))))","user":"56197b47e4b053970a773af8"},{"code":"(fn [l n]\n  (loop [lst l\n         cnt n]\n    (if (zero? cnt) (first lst)\n      (recur (rest lst) (dec cnt)))))","problem":21,"user":"52530b4be4b0541d1855b8e4"},{"code":"(fn get-nth [l x] (cond (not l) nil\n                        (= x 0) (first l)\n                \t\t:else (get-nth (rest l) (dec x))))","problem":21,"user":"5114ab7be4b0ce5098ee73b5"},{"code":"(fn a [lst index]\r\n        (loop [l lst i 0]\r\n              (println l i)\r\n              (if (= i index)\r\n                  (first l)\r\n                (recur (next l) (inc i)))))","problem":21,"user":"5116e176e4b0063b4e3e16d7"},{"code":"(fn this [l n]\n  (if (= n 0)\n    (first l)\n    (this (rest l) (dec n))\n  )\n)","problem":21,"user":"511d4a52e4b022853b0e07a1"},{"problem":21,"code":"(fn [l n] ((vec\n            l) n))","user":"545b0275e4b01be26fd74648"},{"code":"(fn the-nth [l n]\n  (if (= n 0)\n    (first l)\n    (the-nth (rest l) (- n 1))))","problem":21,"user":"5370612be4b0fc7073fd6e97"},{"problem":21,"code":"#(loop [coll %1\n        iter %2]\n   (if (= iter 0)\n     (first coll)\n     (recur (rest coll) (dec iter))))","user":"56685a73e4b04acd4f672de5"},{"code":"(fn [ls idx] \n    (if (zero? idx)\n      (first ls)\n      (recur (rest ls) (dec idx))))","problem":21,"user":"4e5f034b535d8a8b8723a2d9"},{"problem":21,"code":"(fn [xs x] (first (subvec (into [] xs) x (+ x 1))))","user":"56d008d9e4b0ea9b8538f776"},{"problem":21,"code":"(fn [seqs n]\n  (loop [i 0\n         remain_seq seqs]\n      (if (= i n)\n        (first remain_seq)\n        (recur (inc i)\n               (rest remain_seq)\n               )\n        )\n    )\n  )","user":"547adcb0e4b0c51c1f4d72cf"},{"problem":21,"code":"(fn [sq n] (last (take (inc n) sq)) )","user":"5fc860b1e4b049d89c09cd94"},{"code":"(fn [s n]\n  (if (= 0 n)\n    (first s) \n    (recur (rest s) (- n 1))))","problem":21,"user":"508dbd56e4b0f17d83ea26c2"},{"problem":21,"code":";(fn [list-num position] (first (drop position list-num)))\n#(first (drop %2 %1))","user":"5f28b7fee4b033932238a64b"},{"code":"(fn [s i] (last (drop-last (- (count s) i 1) s)))","problem":21,"user":"4e7c1e9d535db169f9c796bb"},{"code":"( fn [s,n] (.get s n) )","problem":21,"user":"51ccc179e4b02254fc794879"},{"problem":21,"code":"(fn thenth [sqnc n] (if (= 0 n) (first sqnc) (thenth (rest sqnc) (- n 1))))","user":"58acce0ae4b0005cfeb1a754"},{"code":"(fn my-nth [s n]\n  (if (= n 0)\n    (first s)\n    (my-nth (rest s) (dec n))\n    )\n  )","problem":21,"user":"52f8b86de4b047fd55836fdb"},{"code":"(fn nth2\n  ([x index] (nth2 x index 0))\n\t([x index cur]\n\t\t(if (= index cur)\n\t\t\t(first x)\n\t\t\t(nth2 (rest x) index (+ 1 cur))\n)))","problem":21,"user":"4f442cdfe4b0d7d3c9f3fd34"},{"problem":21,"code":"(fn [seq index] (first (drop index seq)))","user":"57129ed7e4b07c98581c3a8b"},{"problem":21,"code":"(fn [s n]\n  (let [x n]\n  (first(drop x s))))","user":"59248a78e4b072a2710fce59"},{"code":"(fn [x index]\n    (if (zero? index)\n     (first x)\n    (recur (rest x) (- index 1))))","problem":21,"user":"516018dae4b0e2be8aa20be2"},{"problem":21,"code":"(fn [x n]\n  ((fn r [y i]\n    (if (and (rest y) (< i n))\n      (recur (rest y) (inc i))\n      (first y)\n      )\n    ) x 0)\n  )","user":"5813a2efe4b0f478707a0614"},{"problem":21,"code":"(fn myFn [x, limit] (if (= limit 0) (first x) (myFn (rest x) (- limit 1))))","user":"56a908aee4b07966d5a8a06e"},{"code":"(fn Nth [nums n]\n  (if (> n 0)\n    (Nth (rest nums) (- n 1))\n    (first nums)\n  )\n)","problem":21,"user":"502940a9e4b061fd216be4b8"},{"code":"(fn pega [lista x]\r\n  (first (drop x lista))  \r\n)","problem":21,"user":"4edf92f0535d10e5ff6f5341"},{"code":"(comp first (fn [mySeq toDrop] (drop toDrop mySeq)))","problem":21,"user":"523f2e55e4b01c266ffa7fa0"},{"code":"(fn getlast [x n] \n  (if (= 0 n)\n   (first x)\n   (getlast (rest x) (- n 1))\n  )    \n)","problem":21,"user":"50e9ed1de4b02d54280826d5"},{"problem":21,"code":"(fn [coll n]\n  (if (<= n 0)\n    (first coll)\n    (recur (rest coll) (dec n))))","user":"562c15d3e4b058fa18c5a6d5"},{"code":"(fn [col n] \n  (if (zero? n)\n    (first col)\n    (recur (rest col) (- n 1))))","problem":21,"user":"50e67597e4b09e4d78444228"},{"problem":21,"code":"(fn f [lst i]\n  (if (= i 0)\n    (first lst)\n    (f (rest lst) (dec i))))","user":"53fb5256e4b0de5c4184857f"},{"problem":21,"code":"(fn [lst x] (get (apply vector lst) x))","user":"5f45211ae4b0955706451fbc"},{"problem":21,"code":"(fn [e n] (-> e vec (get n)))","user":"5760d426e4b08062f99a4e9f"},{"code":"(fn [xs n] (loop [i 0 xs xs]\n  (if (or (empty? xs) (= i n))\n   (first xs)\n   (recur (inc i) (next xs)))))","problem":21,"user":"4f43d0cbe4b0d7d3c9f3fd2f"},{"problem":21,"code":"(fn [list_to_change num] (last (take (inc num) list_to_change) ))","user":"5a40eb64e4b0447ef91cc5d8"},{"problem":21,"code":"; approach: take list x and n; decrease n until 0, then give (first x)\n; base case: n = 0, give first value\n(fn nth-search [x n] (if (= n 0) (first x) (nth-search (rest x) (- n 1))))","user":"6036b21ce4b0d5df2af222de"},{"problem":21,"code":"(fn\n  [L n]\n  (let [c (count L)]\n    ((fn [A]\n        (if (= (count A) (- c n))\n          (first A)\n          (recur (rest A))))L)\n    )\n  )","user":"53caddbae4b00fb29b2212cc"},{"code":"(fn \n  daN [x n]\n  (if (= 0 n)\n       (first x)\n       (daN (rest x) (- n 1))))","problem":21,"user":"51622fb8e4b009fba0926e3f"},{"problem":21,"code":"(fn [xs n] (loop [xs xs n n] (if (= n 0) (first xs) (recur (rest xs) (dec n)))))","user":"5bd0ea60e4b0e9689409ee45"},{"problem":21,"code":"(fn nth-el [l n]( first(drop n l) ))","user":"53d28c0de4b00fb29b22131f"},{"code":"(fn [s pos]\n  (loop [cnt pos s s]\n    (if (> cnt 0)\n      (recur (dec cnt) (rest s))\n      (first s))))","problem":21,"user":"53098be4e4b02e82168697b7"},{"problem":21,"code":"(fn countnth [s x]\n  (first (drop x s)))","user":"59b8334ce4b05c620303ca4f"},{"problem":21,"code":"(fn nth2 [coll n] (if (= n 0) (first coll) (nth2 (rest coll) (dec n))))","user":"5eb59432e4b00a66d4a95227"},{"problem":21,"code":"(fn [coll idx] \n(last (\n       take \n       (+ idx 1) \n       coll)\n)\n)","user":"56b94357e4b0f2655033592e"},{"problem":21,"code":"(fn [col m]\n  (loop [lst col\n         n m]\n    (if (= n 0)\n      (first lst)\n      (recur (rest lst) (- n 1)))))","user":"594bd637e4b07ddc2dafae41"},{"problem":21,"code":"(fn [xs x] \n   (loop [z 0 es xs]\n     (if (= z x)\n       (first es)\n       (recur (inc z) (drop 1 es)))))","user":"55fb41a6e4b0f488688e065f"},{"problem":21,"code":"(fn [x n] \n  (cond\n   (= n 0) (first x)\n   :else (recur (rest x) (- n 1))\n   ))","user":"540630c4e4b0addc1aec6696"},{"problem":21,"code":"(fn [elems n] ((vec elems) n))","user":"589e0024e4b02bd94d917e4e"},{"code":"(fn [lst n]\n  (if (zero? n)\n   (first lst)\n   (recur (rest lst) (- n 1))))","problem":21,"user":"5369172ce4b0243289761e96"},{"code":"(fn [x  y] (last (take (inc y) x)))","problem":21,"user":"52f13a77e4b05e3f0be25ee9"},{"problem":21,"code":"(fn some_nth [the_list index] (if (= index 0) (first the_list) (some_nth (rest the_list) (- index 1))))","user":"57b66368e4b0fbc9809a27c1"},{"code":"(fn[coll n] (when-let [s  (seq coll)] (if (<= n 0) (first s) (recur (rest s) (- n 1)))))","problem":21,"user":"53347274e4b0656e627bfd6b"},{"problem":21,"code":"(fn nth-elem [v i]\n  (if (> i 0) (nth-elem (rest v) (- i 1)) (first v)))","user":"57a775bbe4b0a96607956214"},{"problem":21,"code":"(fn test [lst target]\n (if (= target 0)\n  \t (first lst)\n     (recur (rest lst) (dec target))))","user":"58488249e4b089d5ab817ec1"},{"problem":21,"code":"(fn mth [x n] (if (= n 0) (first x) (mth (rest x) (dec n))))","user":"54d707bde4b0a52adc2e2025"},{"code":"(fn [x pos] (get (vec x) pos))","problem":21,"user":"53363c41e4b0e30313ee6c79"},{"code":"(fn [coll n] \n  (if (> n 0)\n    (recur (rest coll) (dec n))\n    (first coll)))","problem":21,"user":"50f0ec9ce4b0d527ce5b30df"},{"problem":21,"code":"(fn [input n]\n   (loop [m 0 lst input]\n     (if (= m n)\n       (first lst)\n       (recur (inc m) (rest lst)))))","user":"593352b7e4b072a2710fd052"},{"problem":21,"code":"(fn the_nth [l i]\n  (if (zero? i)\n    (first l)\n    (the_nth (next l) (dec i))))","user":"565791b0e4b0f9d632dd84aa"},{"problem":21,"code":"(fn [x n]\n  ((fn b [y]\n    (if (= (- (count x) (count y)) n)\n      (first y)\n      (b (rest y)))) x))","user":"58844d43e4b0f1effa3b7696"},{"code":"(fn [x,y] (if-not (= y 0) (recur (next x) (- y 1)) (first x)))","problem":21,"user":"4fbd8b64e4b081705acca307"},{"code":"(fn [x index]\n  (if (= index 0)\n    (first x)\n    (recur (rest x) (dec index))))","problem":21,"user":"5392bfdee4b0b51d73faaeb2"},{"problem":21,"code":"(fn [li integer] \n  (last (take (+ integer 1) li))\n  )","user":"5ac51c43e4b0e27600da773b"},{"code":"(fn [y x] (first (nthnext y x)))","problem":21,"user":"4f4c8faae4b03ad3f0c10c93"},{"code":"(fn nitem [xs n] \n  (if (= n 0) (first xs)\n      (recur (next xs) (dec n))))","problem":21,"user":"4daa6dd430acd6ed14482a68"},{"code":"(fn [coll n]\n           (if (> n 0)\n               (recur (rest coll) (dec n))\n             (first coll)))","problem":21,"user":"503be880e4b0fc0f99c2e54a"},{"problem":21,"code":"(fn [xs i]\n          (first (drop i xs)))","user":"5aa82f5ee4b0d174b936c8c5"},{"code":"(fn ! [x, y] (if(= y 0) (first x) (! (rest x) (- y 1))))","problem":21,"user":"5139c00ee4b067e25a345ebc"},{"problem":21,"code":"(fn [coll x] (first (drop x coll) ) )","user":"53abe2a7e4b047364c044453"},{"code":"(fn elt [seq n]\n  (if (= n 0)\n    (first seq)\n    (elt (rest seq) (dec n))))","problem":21,"user":"516ff477e4b034fe8eaf70f3"},{"problem":21,"code":"(fn f [l idx] \n  (if (= idx 0)\n    (first l)\n    (f (rest l) (- idx 1))))","user":"5ba7dac4e4b0a20761a23422"},{"code":"(fn [lst n]\n  (if (zero? n) (first lst) (recur (rest lst) (dec n))))","problem":21,"user":"52cee992e4b07d0d72b27395"},{"problem":21,"code":"(fn [ys k]\n  ((fn tmp [xs]\n     (let [diff (- (count ys) (count xs))]\n       (if (= k diff)\n         (first xs)\n         (tmp (rest xs))))) ys))","user":"5dac6272e4b000c986472c4c"},{"problem":21,"code":"(fn [x y] ((zipmap (range (count x)) x) y))","user":"58f5b58ae4b0438e51c2cedc"},{"problem":21,"code":"(fn [coll k]\n  (if (> k 0)\n    (recur (rest coll) (dec k))\n    (first coll)))","user":"595e6c76e4b066ee0a44b043"},{"code":"(fn [coll n]\n  (if (zero? n) \n    (first coll)\n    (recur (rest coll) (dec n))\n    ))","problem":21,"user":"52fb903ee4b047fd5583700b"},{"problem":21,"code":"(fn my-nth\n   [x y]\n   (if (= y 0)\n     (first x)\n     (my-nth (rest x)(- y 1))))","user":"5bb7dd12e4b0a20761a235b2"},{"code":"( fn [x y]\r\n  (last (take (+ y 1) x) )\r\n)","problem":21,"user":"4eb82088535d7eef30807380"},{"code":"(fn [list num ]\n  (if (= num 0) \n     (first list)\n     (recur (rest list) (dec num))))","problem":21,"user":"50a7b76de4b090657f4a5cdc"},{"problem":21,"code":"(fn x [l n] (if (= 0 n) (first l) (x (rest l) (dec n))))","user":"59e61973e4b08badc2a0c567"},{"code":"(fn [collection n] (first (drop n collection)))","problem":21,"user":"4e61bb60535d8ccf87e9fe5c"},{"code":"#((zipmap (iterate inc 0) %1) %2)","problem":21,"user":"501d34f6e4b066e56b9d0b1e"},{"problem":21,"code":"(fn [coll n]\n  (if (= n 0)\n    (first coll)\n    (recur (rest coll) (dec n)))\n)","user":"5cc88ed7e4b0ccb06196284e"},{"code":"(fn [col n] (last (take (+ n 1) col)))","problem":21,"user":"4ecb1641535d6d7199dd370e"},{"problem":21,"code":"(fn [s n] (if (== (+ 1 n) (count s)) (last s) (recur (butlast s) n)))","user":"5c950334e4b048ec896c5a44"},{"code":"(fn f [p n]\n  (if (= n 0 )\n    (first p)\n    (f (rest p) (- n 1 ))\n  )\n  )","problem":21,"user":"50255bafe4b0b0b8afb15aa8"},{"code":"(fn [s i]\n    (if (= i 0)\n      (first s)\n      (recur (rest s) (dec i))))","problem":21,"user":"512b7a05e4b04d059cf1fd14"},{"problem":21,"code":";;(fn dupa [[x & rest] no] (if (= 0 no) x (dupa rest (- no 1))))\n#(first (reverse (take (+ %2 1) %1)))","user":"560b0679e4b05f002753df13"},{"code":"#(first (nthnext %1 %2) )","problem":21,"user":"504f65bae4b0a02f9cffde7e"},{"problem":21,"code":"(fn lala [x n] \n  (if (= 0 n)\n    (first x)\n    (lala (rest x) (- n 1))\n    ))","user":"559b7c65e4b066d22e731f55"},{"problem":21,"code":"(fn [xs n] (loop [lst xs ind n]\n             (if (= 0 ind)\n               (first lst)\n               (recur (rest lst) (dec ind)))))","user":"55d5dc6de4b0e31453f64a90"},{"code":"(fn [coll n]\n  (last (subvec (vec coll) 0 (+ n 1))))","problem":21,"user":"4fff57f1e4b0678c553fc3fe"},{"problem":21,"code":"(fn \n  [list, index]\n  (loop [curValue (first list)\n         restList (rest list)\n         curIndex 0]\n    (println curValue curIndex)\n    (if (= curIndex index)\n      curValue\n      (recur (first restList) (rest restList) (inc curIndex)))))","user":"55ae7adae4b03311e7b732bd"},{"code":"(fn [lst x] \n  (if (zero? x) \n  (first lst) \n  (recur (rest lst) (- x 1))))","problem":21,"user":"5113e492e4b0029845b11c58"},{"code":"(fn mynth [seq n]\n  (if (= n 0)\n      (first seq)\n      (mynth (next seq) (- n 1))))","problem":21,"user":"4e444c11535dc968683fc4a9"},{"code":"(fn nz [lst, n]\n  (if (= 0 n)\n    (first lst)\n    (nz (rest lst) (- n 1))))","problem":21,"user":"50d4593ee4b09cc622d65a68"},{"code":"(fn [seq n] (last (take (inc n) seq)))","problem":21,"user":"4ed3b4a7535d44c135fd68f5"},{"problem":21,"code":"(fn [coll n]\n  (when (seq coll)\n    (if (= n 0)\n      (first coll)\n      (recur (rest coll) (dec n)))))","user":"546ed28be4b00cfc9eacc1a5"},{"code":"(fn getn [l n] (if (= n 0) (first l) (getn (rest l) (- n 1))))","problem":21,"user":"5167218be4b079759a74a5e5"},{"problem":21,"code":"(fn find-n [x y]\n  (last (take (+ y 1) x)))","user":"5703d21ae4b08d47c97781ff"},{"code":"; (fn [s, i] (second (take-nth i s)))   ;;? (take-nth 0 sequence) ==> first item\n; #(-> (take-nth %2 %1) second)\n\n; (fn [s,i] (last (take (inc i) s)))\n; #(-> (take (inc %2) %) last)\n\n; (fn [s, i] (first (drop i s)))\n; #(-> (drop %2 %) first)\n\n; (fn [s, i] ((vec s) i))\n; #((vec %) %2)\n\n; (fn [s, i] (if (zero? i) (first s) (recur (rest s) (dec i))))\n\n .get","problem":21,"user":"525f61aae4b0cb4875a45dcb"},{"problem":21,"code":"(fn [x elem] \n  (if (= elem 0)\n  \t(first x)\n    (recur (rest x) (dec elem))))","user":"5c98d3bee4b048ec896c5a8b"},{"code":"(fn [ls i] \n  (first (drop i ls)))","problem":21,"user":"516064e5e4b009fba0926e26"},{"problem":21,"code":"(fn [arr idx] \n  (if (zero? idx)\n    (first arr)\n    (recur (rest arr) (dec idx))))","user":"59636b43e4b066ee0a44b0c4"},{"problem":21,"code":"(fn [col n] (first (reduce (fn [c _] (rest c)) col (range n))))","user":"6037e468e4b0d5df2af222e8"},{"problem":21,"code":"(fn getNth[coll, x] (loop [n 0\n                            stuff coll\n                            endx x]\n                       (if (= x n)\n                         (first stuff)\n                         (recur (inc n) (rest stuff) x))))","user":"55b8d186e4b01b9910ae29ba"},{"problem":21,"code":"(fn [coll i]\n  (first (keep-indexed #(if (= %1 i) %2) coll)))","user":"5da306a3e4b000c986472be7"},{"problem":21,"code":"(fn foo [x n] (if (> n 0) (foo (rest x) (- n 1)) (first x)))","user":"5519da46e4b00ace28fe6e35"},{"problem":21,"code":"(fn [lst n]\n  (loop [lst lst\n         n (inc n)\n         aux 0]\n    (if (zero? n)\n      aux\n      (recur (rest lst) (dec n) (first lst)))))","user":"56e9a56ae4b04a395b9a03fc"},{"code":"(fn [sequence n] \n  (loop [s sequence i 0] \n    (if (= i n) \n      (first s) \n      (recur (rest s) (inc i)))))","problem":21,"user":"5341b141e4b00652c8746ecf"},{"problem":21,"code":"(fn f [sq n] (if(= n 0) (first sq) (f (rest sq) (dec n))))","user":"55815973e4b05c286339e0f6"},{"code":"(fn [xs n] ((apply comp (cons first (repeat n rest))) xs))","problem":21,"user":"51670895e4b013fc800656c1"},{"problem":21,"code":"(fn [l i] (second (first (filter (fn [x] (= i (first x))) (map list (iterate inc 0) l)))))","user":"5a34f342e4b0ddc586f153d1"},{"problem":21,"code":"(fn my-nth\n  [my-list n]\n  (if (= n 0) (first my-list) (my-nth (rest my-list) (- n 1))))","user":"5a3ece62e4b0447ef91cc5b9"},{"problem":21,"code":"(fn [collection n] (get (vec collection) n))","user":"54099ef3e4b0addc1aec66de"},{"problem":21,"code":"#(get (into [] %1 ) %2)","user":"5710c24be4b09c608db70439"},{"code":"(fn restloop [sequ number]\n  (first (loop [n number l sequ]\n    (if (zero? n)\n      l\n      (recur (dec n) (rest l))))))","problem":21,"user":"4e5ea1a9535d8a8b8723a2d3"},{"problem":21,"code":"(fn nthElem [lst n] (if (= n 0) (first lst) (nthElem (rest lst) (- n 1))))","user":"525dd2f9e4b0cb4875a45d85"},{"code":"(fn [lst n] (first (drop n lst)))","problem":21,"user":"4e959ee3535dbda64a6f6b35"},{"code":"(fn cool [l n] (if (or (nil? (next l)) (= 0 n)) (first l) (cool  (next l) (- n 1) )))","problem":21,"user":"5245d29ae4b09dbe66b56174"},{"problem":21,"code":"(fn [xs n]\n   (first (drop n xs)))","user":"57382719e4b0cd1946bd1055"},{"problem":21,"code":"(fn [sec n]\n  (let [parte-elementos (split-at (+ n 1) sec)\n        primera-parte (first parte-elementos)]\n    (last primera-parte)))","user":"5d0153f9e4b0cc9c915881aa"},{"problem":21,"code":"(fn [ls n] (first (reverse (take (+ n 1)ls))))","user":"54fa32bae4b0cf870d934701"},{"problem":21,"code":"(fn [coll n]\n  (loop [coll coll c 0]\n    (if (empty? coll)\n      nil\n      (let [f (first coll)]\n      \t(if (= c n)\n          f\n        (recur (rest coll) (inc c)))))))","user":"5c04464ee4b0bdcf453d167d"},{"code":"(fn [s, n] (first (nthnext s n)))","problem":21,"user":"52205c89e4b0e6c71e0c0c1d"},{"code":"(fn [coll n]\r\n  (loop [i 0\r\n         s coll]\r\n    (if (= i n)\r\n      (first s)  \r\n      (recur (inc i) (rest s)))))","problem":21,"user":"4ddee37c535d08e6dec9fddc"},{"code":"#(if (= %2 0)\n   (first %1)\n   (recur (rest %1) (- %2 1)))","problem":21,"user":"50e877c5e4b0ebbe794eb7e9"},{"problem":21,"code":"(fn [x y] \n   (loop [c x\n          n y]\n     (if (= n 0)\n        (first c)\n        (recur (rest c) (dec n)))))","user":"56e4427ce4b03a7c14b85a4c"},{"problem":21,"code":"(fn [el n] (last (#(take %1 %2) (#(+ % 1) n) el)))","user":"58a413b5e4b02bd94d917f07"},{"problem":21,"code":"(fn [collection index]\n  (last (take (inc index) collection))\n  )","user":"567b62fce4b05957ce8c61a6"},{"problem":21,"code":"(fn [s p] (last (take (+ 1 p) s)))","user":"573c45ace4b0cd1946bd10be"},{"code":"(fn [s i] ((zipmap (range) s) i))","problem":21,"user":"515f10dce4b02c55805ea23b"},{"problem":21,"code":"(fn [s n] (if (= n 0)\n              (first s)\n              (recur (next s) (dec n))))","user":"5e453725e4b01d43a70e8e93"},{"code":"(fn return-nth [collection n] (first (drop n collection)))","problem":21,"user":"53a26cede4b0f1fc7453882a"},{"code":"(fn recpop [li n] \n  ( if (> n 0) \n    (recpop (rest li) (- n 1))\n    (first li)))","problem":21,"user":"4ecaa076535d6d7199dd3706"},{"problem":21,"code":"(fn [coll index]\n  (loop [init-count 0 remain coll]\n    (if (= init-count index)\n      (first remain)\n      (recur (inc init-count) (rest remain)))))","user":"5cf895efe4b0b71b1d808a85"},{"problem":21,"code":"(fn f [l n]\n  (loop [\n         r l\n         i 0]\n    (cond \n     (= i n) (first r) \n     :else (recur (rest r) (inc i)) )))","user":"5c558070e4b0fb8c5ffd9a1e"},{"problem":21,"code":"(fn my_nth [s n]\n  (if(= n 0)\n    (first s)\n    (my_nth (rest s) (- n 1))))","user":"5e33e399e4b0650de70e2b11"},{"problem":21,"code":"(fn \n  [coll n]\n  \t(loop [i 0 x (first coll) rst (rest coll)]\n  \t\t(if (= i n) \n    \t\tx \n    \t\t(recur (inc i) (first rst) (rest rst)))))","user":"5ea85e22e4b00a66d4a951bd"},{"code":"#(letfn  \n  [(mynth [coll index i]\n    (if (= i index)\n      (first coll)\n      (recur (next coll) index (inc i))))]\n  (mynth %1 %2 0))","problem":21,"user":"4fcd5958e4b065de69964ca7"},{"code":"(fn nth_ [lst n] (if (= n 0) (first lst) (nth_ (rest lst) (dec n))))","problem":21,"user":"4fbbb6ede4b081705acca2ed"},{"code":"(fn [l i]\n  (last (take (+ i 1) l)))","problem":21,"user":"50c11f5ae4b096f585049c39"},{"code":"(fn my-nth [xs n]\n  (if (> n 0)\n    (recur (rest xs) (dec n))\n    (first xs)))","problem":21,"user":"51834acde4b028ec5fd2f29a"},{"code":"(fn nthElement [lst n]\n  ((fn recur [lst n iter] \n    (cond\n     (= n iter) (first lst)\n     :else (recur (rest lst) n (+ 1 iter)))) lst n 0))","problem":21,"user":"4fe89055e4b07c9f6fd12c47"},{"problem":21,"code":"(fn [coll loc]\n  (let [n 0]\n    (loop [iter n\n           my-coll coll]\n      (if (= iter loc) (first my-coll)\n        (recur (+ iter 1) (rest my-coll))))))","user":"53d032ace4b00fb29b221306"},{"problem":21,"code":"(fn\n   [list n]\n   (loop \n     [i 0\n      workList list]              \n     (if (= i n)\n       (first workList)\n       (recur (inc i) (rest workList))\n       )\n     )\n   )","user":"55f9b634e4b03cbcff9738c9"},{"code":"#(first (take 1 (drop %2 %1)))","problem":21,"user":"4e617114535d8ccf87e9fe5b"},{"code":"(fn [input, x] \n    (if (= x 0) (first input)\n      (recur (rest input) (- x 1)) )\n  )","problem":21,"user":"51883ae0e4b0eb189f8362ed"},{"problem":21,"code":"(fn [seq, n] (first (nthrest seq n)))","user":"565370bce4b0f9d632dd8472"},{"code":"(fn elt [lst n] (if (= n 0) (first lst) (elt (rest lst) (- n 1))))","problem":21,"user":"504ed58ce4b069badc5a33d2"},{"problem":21,"code":"#(loop [s %, idx %2]\n   (if (= 0 idx)\n   \t(first s)\n    (recur (rest s) (dec idx))\n   )  \n  )","user":"54972b0ee4b0b312c081ff6e"},{"problem":21,"code":"(fn [coll index] \n  (if (= 0 index) \n      (first coll)\n    \t(recur (rest coll) (dec index))\n          \n        ))","user":"60ad7cbae4b00e9e6653c48f"},{"code":"(fn [list place] \n  (loop [resty list togo place]\n    (if (zero? togo)\n      (first resty)\n      (recur (rest resty) (dec togo))\n)))","problem":21,"user":"508bf05ae4b0f17d83ea26aa"},{"problem":21,"code":"(fn [seq n]\n  (cond\n   (= n 0) (first seq)\n   :else (recur (rest seq)(dec n))))","user":"55965af3e4b0c79f6e1db979"},{"code":"(fn [es en]\n  (loop [s es n en]\n    (if (= n 0)\n        (first s)\n        (recur (rest s) (- n 1)))))","problem":21,"user":"4f287f96e4b0d6649770a018"},{"code":"(fn nelement [coll i] \n  (if (zero? i) (first coll) (nelement (rest coll) (dec i))))","problem":21,"user":"527ba29de4b03e8d9a4a7594"},{"code":"(fn [col pos]  (if (= 0 pos) (first col) (recur (rest col) (dec pos) ) ) )","problem":21,"user":"504f0c08e4b0e7ad84dbc4b1"},{"problem":21,"code":"(fn [[& m] y]\n  (loop [x m n-th y j 0]\n  (if (= j n-th)\n    (first x)\n    (recur (rest x) n-th (inc j)))))","user":"59e4fc25e4b08badc2a0c54f"},{"problem":21,"code":"(fn [coll n] (if (== n 0) (first coll) (recur (rest coll) (- n 1))))","user":"550ccedfe4b06e50f9beb158"},{"problem":21,"code":"(fn [sequ i]\n  (if \n    (= i 0)\n    (first sequ)\n    (recur (rest sequ) (- i 1))))","user":"5ffee617e4b074f607df6605"},{"problem":21,"code":"(fn nth-recur [coll idx]\n\t(cond\n        (> idx (count coll))  nil\n\t\t(= idx 0)             (first coll)\n\t\t:else                 (nth-recur (rest coll)\n                                         (dec  idx))))","user":"5decd4fde4b093ff7172757b"},{"problem":21,"code":"(fn [s n] (loop [s s \n     n n] (if (= n 0) (first s) (recur (rest s) (dec n)))))","user":"577a0dc3e4b0979f8965167b"},{"code":"(fn nig[x n] \n  (if (zero? n)\n    (first x)\n      (nig (rest x) (- n 1))))","problem":21,"user":"4ef4e0da535dced4c769f240"},{"code":";#(loop [h %1 n 0](if (= n %2)(first h)(recur(rest h)(inc n))))\n#(first (drop %2 %1))","problem":21,"user":"4e705861535d5021c1a89635"},{"problem":21,"code":"(fn get-nth [s n]\n  (if \n    (= n 0)\n    (first s)\n    (get-nth (rest s) (- n 1))))","user":"5bd52eabe4b0ed4b8aab4b97"},{"code":"(fn [s n]\n  (loop [si s \n         ni 0]\n    (if (= n ni)\n        (first si)\n        (recur (next si) (+ ni 1)))))","problem":21,"user":"4f03a3df535dcb61093f6b45"},{"code":"(fn [a n]\n  (if (= n 0)\n    (first a)\n    (recur (rest a) (- n 1))))","problem":21,"user":"509f3bc9e4b08df8156e9e39"},{"code":"(fn [lst n] \n  (if (= n 0)\n(first lst)\n(recur (rest lst) (dec n))))","problem":21,"user":"50563ae2e4b0ce54f56f0405"},{"code":"#(loop [s %1 n %2 c 0]\n   (if (< 0 n)\n     (recur (rest s) (- n 1) (+ c 1))\n     (first s)))","problem":21,"user":"52f97c6ae4b047fd55836fea"},{"code":"(fn [x n]\n  (if (= n 0)\n    (first x)\n    (recur (rest x) (dec n))))","problem":21,"user":"4f5c344be4b0030a34fb2b1d"},{"problem":21,"code":"(fn [col index] ((vec col) index))","user":"562ad9bfe4b00e49c7cb4832"},{"problem":21,"code":"(fn [l n]\n  (if (= n 0) (first l)\n    (recur (rest l) (- n 1))))","user":"551afdf8e4b07993ea3788cb"},{"problem":21,"code":"(fn my-nth [l n] (last (first (split-at (+ n 1) l))))","user":"55ae6367e4b03311e7b732bc"},{"problem":21,"code":"#(if (> %2 0) \n     (recur (rest %) (dec %2))\n     (first %))","user":"54074fc5e4b0addc1aec66b6"},{"code":"(fn [x y]\n  (loop [a x b y]\n    (if (= b 0)\n        (first a)\n        (recur (rest a) (- b 1)))))","problem":21,"user":"4df13be0535d08e6dec9fe1b"},{"problem":21,"code":"(fn [x y] (first (drop y  x)))","user":"54e24a05e4b024c67c0cf7ce"},{"problem":21,"code":"(fn [collection pos] (first (drop pos collection)))","user":"5d76cb59e4b02e6b30c93528"},{"problem":21,"code":"(fn nth_f2\n    [col no]\n    (if (<= no 0)\n        (first col)\n        (recur (rest col) (dec no))))","user":"57972c9ee4b039eba2ecb0f2"},{"code":"(fn [lst index] (first (drop index lst)))","problem":21,"user":"524740e7e4b05ef8e38e635d"},{"problem":21,"code":"(fn my-nth\n  [my-seq n]\n  (if (= n 0)\n    (first my-seq)\n    (recur (rest my-seq) (dec n))))","user":"5ac6099ee4b0e27600da7757"},{"problem":21,"code":"#(loop [cnt %2 tmp-list %1]\n              (if (zero? cnt)\n                  (first tmp-list)\n                (recur (dec cnt) (rest tmp-list))))","user":"5565d5e4e4b0c656e3ff181f"},{"problem":21,"code":"(fn funky [l n] (if (zero? n)\n         \t\t  (first l)\n                  (funky (rest l) (dec n))))","user":"5d1b2b7de4b02ea6f0fb697a"},{"problem":21,"code":"#(loop [d %2, col %1] (if (= d 0) (first col) (recur (- d 1) (rest col))))","user":"5ffe889ce4b074f607df6603"},{"code":"(fn [collection x] ((vec collection) x))","problem":21,"user":"4f7baa30e4b06e829148e1a9"},{"code":"(fn [seq pos] (first (last (split-at pos seq))))","problem":21,"user":"4e7e8694535db169f9c79718"},{"code":"(fn my-nth [ls n] (if (= n 0) (first ls) (my-nth (rest ls) (dec n))))","problem":21,"user":"518df0f0e4b0c929d50502e1"},{"code":"#(loop [tgt-seq %1 num-to-skip %2]\r\n  (if (= 0 num-to-skip)\r\n    (first tgt-seq)\r\n    (recur (rest tgt-seq) (- num-to-skip 1))))","problem":21,"user":"4dbb6302535d1e037afb21b5"},{"code":"(fn Vmi[x y] (if (> y 0) (Vmi(rest x) (- y 1)) (first x)))","problem":21,"user":"52e63181e4b09f7907dd146d"},{"problem":21,"code":"(fn lasty [xs n]\n  ((fn go [xs i] (if (= n i)\n                    (first xs)\n                    (go (rest xs) (+ 1 i)))) xs 0))","user":"606d7f1ce4b069485764de14"},{"code":"(fn [coll i]\n  (loop \n    [x coll\n     j 0]    \n    (if (= j i)\n      (first x)\n      (recur (rest x) (inc j)))))","problem":21,"user":"4ebbf772535dfed6da9c6d76"},{"problem":21,"code":"(fn [se n] \n  (get (vec se) n))","user":"546bfe4ee4b00cfc9eacc172"},{"code":"(fn enth [l i] \n  (if (zero? i)\n    (first l)\n    (enth (rest l) (- i 1))))","problem":21,"user":"4f031a53535dcb61093f6a63"},{"problem":21,"code":"(fn\n  [arr i]\n  (last (take (inc i) arr)))","user":"5d2de4cde4b01671435dbca4"},{"problem":21,"code":"(fn mynth [xs n]\n  (when (seq xs)\n    (cond\n      (= n 0) (first xs)\n      true (recur (rest xs) (- n 1)))))","user":"51e24905e4b01e519814642e"},{"code":"(fn nth-item [initial-x initial-n]\n  (loop [x initial-x n initial-n]\n    (if (pos? n)\n      (recur (rest x) (dec n))\n      (first x))))","problem":21,"user":"4f515bd3e4b03ad3f0c10d1f"},{"problem":21,"code":"#(first (keep-indexed (fn [i v] (when (= i %2) v)) %))","user":"54d15e4ae4b0e8a36923e5e2"},{"problem":21,"code":"(fn [col idx] (second (first (filter #(= (first %) idx) (map-indexed vector col)))))","user":"55f7dc24e4b06e875b46ceb3"},{"problem":21,"code":"(fn[col index](loop [it 0 colt col] (if (= it index) (first colt) (recur (inc it) (rest colt))) ))","user":"59692530e4b069c0a1a197e4"},{"problem":21,"code":"(fn search_nth [l n]\n   (if (== n 0)\n     (first l)\n     (recur (rest l) (dec n))))","user":"5c76577ae4b0fca0c16227ea"},{"code":"(fn [a n] (if (= 0 n) (first a) (recur (rest a) (dec n))))","problem":21,"user":"4ff3e771e4b0678c553fc356"},{"code":";(fn ny-nth [xs n]\r\n;  (loop [xs xs\r\n;        n n]\r\n;    (if (= n 0)\r\n;      (first xs)\r\n;      (recur (rest xs) (dec n)))))\r\n\r\n;(fn ny-nth [xs n]\r\n;  ((vec xs) n))\r\n\r\n;(fn ny-nth [xs n]\r\n;  (first (drop n xs)))\r\n\r\n#((vec %) %2)","problem":21,"user":"4f07c8c3535dcb61093f6c2d"},{"problem":21,"code":"(fn foo[x y]\n\n    \n  (last ( first (partition (inc y) x)))\n\n    \n    \n    )","user":"5bed1e4ae4b0a6d31fed2118"},{"problem":21,"code":"(fn [seq n] (loop [iter 0 remainder seq]\n                (if (= iter n) (first remainder)\n                    (recur (inc iter) (rest remainder)))))","user":"5acbb7afe4b0e27600da77ff"},{"code":"#(loop [coll %1, count %2]\n  (if (= 0 count)\n    (first coll)\n    (recur (rest coll) (- count 1))))","problem":21,"user":"504f6721e4b0a02f9cffde7f"},{"problem":21,"code":"(fn [coll, n] \n  (if (= n 0)\n    (first coll)\n    (recur (rest coll) (dec n))))","user":"5db93acbe4b010eb3c36cd51"},{"problem":21,"code":"(fn nth-element\n  ([coll element]\n   (nth-element coll element 0))\n  ([coll element counter]\n   (if (= counter element)\n     (first coll)\n     (nth-element (rest coll) element (inc counter)))))","user":"57942207e4b0e215f87e8469"},{"code":"(fn [coll n]\n  (let [splits (split-at n coll)]\n    ((comp first second) splits)))","problem":21,"user":"4dad76588e77d6ed63f12a44"},{"code":"(fn [lst n]\n  ((fn [currlst pos]\n     (if (= n pos)\n       (first currlst)\n       (recur (rest currlst) (inc pos))))\n   lst 0))","problem":21,"user":"517fcd45e4b073af738d8b4a"},{"problem":21,"code":"(fn ind [collection index]\n  (cond\n    (= index 0) (first collection)\n    :else (ind (rest collection) (- index 1))\n    )\n)","user":"560c404fe4b05f002753df30"},{"code":"(fn mynth [v n] (if (= n 0) (first v) (mynth (rest v) (dec n))))","problem":21,"user":"5034374de4b062bc5d7ae161"},{"problem":21,"code":"(fn nthy\n  [sqnc n]\n  (if (= n 0)\n    (first sqnc)\n    (nthy (next sqnc) (dec n))))","user":"541c516ae4b01498b1a71a73"},{"code":"(fn der [lst i]\n  (if (= i 0) (first lst) (der (rest lst) (dec i))))","problem":21,"user":"52286b19e4b0186687e23a7e"},{"problem":21,"code":"(fn [seq index] (first (nthrest seq index)))","user":"5db485dfe4b010eb3c36cd26"},{"problem":21,"code":"#(first (drop  %2 %1) )","user":"554acce4e4b0a04f79299579"},{"code":"(fn f ([v n] (f v n 0))\n      ([v n i] (if (= n i)\n                   (first v)\n                   (f (rest v) n (+ i 1)))))","problem":21,"user":"5069c09be4b01dc6af13f837"},{"problem":21,"code":"#(first (take-last (+ 1 %2) (reverse %1)))","user":"5ce6c354e4b0a17bb84e2b93"},{"problem":21,"code":"(fn my-nth [lst n] (if (zero? n)\n                       (first lst)\n                       (my-nth (rest lst) (dec n))))","user":"568e1871e4b0dcc4269f40cc"},{"problem":21,"code":"(fn my-nth [s x]\n  (last (take (inc x) s)))","user":"573a0fc7e4b0cd1946bd1089"},{"code":"(fn [ll i] \n  (if (= i 0) (first ll)\n              (recur (rest ll) (- i 1))))","problem":21,"user":"50e62a30e4b09e4d78444225"},{"problem":21,"code":"(fn [values n] (first (drop n values)))","user":"5aa008e5e4b0d174b936c823"},{"code":"(fn [x y] \n   (last \n     (take (inc y) x )\n   )\n )","problem":21,"user":"517a7056e4b01aacecbecbed"},{"code":"( fn [collection x] \n  (first (drop x collection)) )","problem":21,"user":"534b5bece4b084c2834f4a79"},{"code":"(fn [x y]\n    (if (zero? y)\n      (first x)\n      (recur (rest x) (- y 1))))","problem":21,"user":"529a3c37e4b02ebb4ef75094"},{"problem":21,"code":"(fn [items index] (get (into [] items) index))","user":"54bd6cb2e4b0ed20f4ff6ede"},{"problem":21,"code":"#(let [x %1 y %2]\n   (if (= 0 y)\n     (first %1)\n     (recur (rest x) (dec y))\n   )\n  )","user":"56815e2fe4b0945ebc182a84"},{"code":"(fn mth [l n] (if (= n 0) (first l) (mth (rest l) (dec n))))","problem":21,"user":"5363f11be4b0243289761e5f"},{"problem":21,"code":"(fn f ([l t] (f l t 0))\n        ([l t c] \n   (if (= t c) \n       (first l)\n       (recur (rest l) t (+ 1 c))\n     )))","user":"5d29b0ece4b01671435dbc69"},{"code":"#(if (pos? %2) (recur (rest %1) (dec %2)) (first %1))","problem":21,"user":"4e82f85d535db62dc21a62ce"},{"code":"(fn my-nth [coll n] (if (= n 0) (first coll) (my-nth (rest coll) (dec n))))","problem":21,"user":"504f2d4fe4b0e7ad84dbc4c6"},{"code":"#( (comp first (partial drop %2)) %1)","problem":21,"user":"4fa39b3ee4b081705acca191"},{"problem":21,"code":"(fn [collection n]\n  (get (into [] collection) n)\n)","user":"5d4df658e4b0776584bd6f41"},{"problem":21,"code":"(fn [xs n] (last (take (inc n) xs)))   ;; should use drop!","user":"5afb4b15e4b0cc2b61a3bcf6"},{"problem":21,"code":"(fn [xs,n] (last (take (+ n 1) xs)))","user":"5572f74fe4b0aa18f790f3ef"},{"code":"(fn wat [l n] (if (<= n 0) (first l) (wat (rest l) (- n 1))))","problem":21,"user":"538a2b4ce4b0640c7a9a58b8"},{"code":"(fn aaa [xs n]\n  (if (= n 0)\n    (first xs)\n    (aaa (rest xs) (dec n))))","problem":21,"user":"5375edeae4b06839e8705e19"},{"problem":21,"code":"(fn [sq index]\n  ((comp last take) (inc index) sq))","user":"60c8cfece4b0e0fa5f1b42fe"},{"code":"#(->> %1 (take (+ %2 1)) reverse first)","problem":21,"user":"50fe91c1e4b03cd852b4e84e"},{"problem":21,"code":"(fn [s n] \n  (if (= n 0)\n    (first s)\n    (recur (rest s) (- n 1))\n    )\n  )","user":"55d8db41e4b0e31453f64abf"},{"problem":21,"code":"(fn [s n ]\n     (if (pos? n)\n       (recur (rest s) (dec n))\n       (first s)))","user":"57addbcce4b0b8559636fca3"},{"problem":21,"code":"(fn [items idx]\n               (last (take (+ idx 1) items)))","user":"5d5c2730e4b09db18d4482ea"},{"code":"(fn [lst n] ((into [] lst) n))","problem":21,"user":"50d037ace4b00b15ecee9756"},{"code":"(fn las [x y] (if (= y 0) (first x) (las (rest x) (- y 1))))","problem":21,"user":"5375b852e4b06839e8705e17"},{"code":"(comp last #(take (+ %2 1) %1))","problem":21,"user":"52e161e8e4b09f7907dd1420"},{"problem":21,"code":"(fn [coll n]\n    (->> coll\n        (take (inc n))\n        last))","user":"5f56c0cae4b0a0bc16850a8c"},{"problem":21,"code":"(fn d [seq x]\n   (if (> x 0)\n     (d (rest seq) (dec x))\n     (first seq)))","user":"5a43347ee4b0447ef91cc603"},{"code":"(fn [x n] (if (pos? n) (recur (next x) (dec n)) (first x)))","problem":21,"user":"4efc4210535dced4c769f280"},{"problem":21,"code":"(fn [ms ind] (get (vec ms) ind))","user":"561974f9e4b053970a773af7"},{"problem":21,"code":"(fn my-nth [lst idx] (if (= idx 0) (first lst) (my-nth (rest lst) (- idx 1))))","user":"5773e5b0e4b0979f896515ef"},{"problem":21,"code":"(fn [ls n]\n  (loop [ls' ls\n         n' 0]\n         (if (= n n')\n                (first ls')\n                (recur (drop 1 ls') (inc n')))))","user":"58db7b81e4b0a4d5acaab680"},{"problem":21,"code":"(fn [ls n]\n    (loop [x ls cnt n]\n      (if (zero? cnt)\n        (first x)\n        (recur (rest x) (dec cnt)))))","user":"54dc4010e4b024c67c0cf77e"},{"problem":21,"code":"(fn [mysequence index] (first (drop index mysequence)))","user":"5900e067e4b0438e51c2d031"},{"code":"(fn f [c n]\n  (if (zero? n)\n    (first c)\n    (f (rest c) (- n 1))\n    )\n  )","problem":21,"user":"52ae886de4b0c58976d9acab"},{"code":"(fn foo [l, n] (if (= n 0) (first l) (recur (rest l) (- n 1))))","problem":21,"user":"516733fce4b079759a74a5e9"},{"code":"(fn [c, i] (first (last (split-at i c))))","problem":21,"user":"4f7c0ab8e4b06e829148e1ac"},{"code":"(fn [elems position]\n  (loop [xs elems n 0]\n      (if (= n position)\n        (first xs)\n        (recur (rest xs) (inc n)))))","problem":21,"user":"50294c28e4b0b33e9bf6fdef"},{"problem":21,"code":"#(loop\n   [l %1\n    i %2]\n   (if (= i 0)\n     (first l)\n     (recur (rest l) (- i 1))\n     )\n   )","user":"5593f481e4b0c79f6e1db946"},{"code":"(fn [x n] (first (reverse (take (+ 1 n) x))))","problem":21,"user":"4df0524e535d08e6dec9fe17"},{"problem":21,"code":"(fn [lst index]\n  (loop [l lst n index]\n  \t(if (= n 0)\n    \t(first l)\n      \t(recur (rest l) (- n 1)))))","user":"5e9a3814e4b0157ca96647e7"},{"code":"#(loop [c % i 0]\n   (if (= %2 i)\n     (first c)\n     (recur (rest c) (inc i))))","problem":21,"user":"4ff548dee4b0678c553fc368"},{"problem":21,"code":"(fn [coll n]\n  (loop [i 0\n         c coll]\n    (if-not (>= i n)\n      (recur (inc i) (rest c))\n      (first c))))","user":"5fb9075ee4b03f550f448224"},{"problem":21,"code":"(fn [as N] (first (take-last (+ N 1) (reverse as))))","user":"55f439d8e4b06e875b46ce6a"},{"code":"(fn [collection n]\n  (first (drop n collection)))","problem":21,"user":"520a9897e4b01da9d47a99e1"},{"problem":21,"code":"(fn nth-elem [xs n]\n  (first (drop n xs)))","user":"56efc9fde4b04a395b9a0464"},{"code":"(fn [ls n] (first (drop n ls)))","problem":21,"user":"4fb4303fe4b081705acca2ac"},{"problem":21,"code":"(fn my-nth [lst n]\n  (if (> n 0)\n    (my-nth (rest lst) (- n 1))\n    (first lst)))","user":"59f69716e4b0966464fe6ad5"},{"code":"(fn [coll n]\n  (loop [n n coll coll]\n    (if (pos? n)\n      (recur (dec n) (rest coll))\n      (first coll))))","problem":21,"user":"5066fa7de4b03d366d7cb2b9"},{"problem":21,"code":"(fn [arr pos]\n  (if (= pos 0)\n    (first arr)\n    (recur (rest arr) (dec pos))\n   )\n  )","user":"54d35746e4b0e8a36923e606"},{"code":"(fn nth2 [a n]\n  (first ( drop n a))\n    )","problem":21,"user":"500a214de4b03d00572d2d74"},{"problem":21,"code":"(fn my-nth [lst x]\n  (if (= x 0)\n    (first lst)\n    (my-nth (rest lst) (- x 1) )\n    )\n  )","user":"57a0e0bce4b0c3d858beb8dc"},{"problem":21,"code":"(fn nt [col n] (first (drop n col)))","user":"56f18d0ce4b04a395b9a0496"},{"problem":21,"code":"(fn [coll n] (loop [coll coll n n]\n               (if (= n 0)\n                 (first coll)\n                 (recur (rest coll) (dec n)))))","user":"581dad0ae4b04b46fc4b0f17"},{"code":"#((into [] %1) %2)","problem":21,"user":"4e5f08c7535d8a8b8723a2da"},{"problem":21,"code":"(fn [v idx] ((vec v) idx))","user":"57d031d6e4b0bd073c202354"},{"problem":21,"code":"(fn ntha [lst n]\n  (if (= n 0)\n    (first lst)\n    (ntha (rest lst) (- n 1) )))","user":"53771d98e4b06839e8705e2e"},{"code":"(fn [c n]\n  (loop [coll c i 0]\n\t\t(if (< i n)\n\t\t\t(recur (rest coll) (inc i))\n\t\t\t(first coll)\t\n\t\t)\n\t)\t  \n)","problem":21,"user":"4e53ea3f535d8a8b8723a277"},{"code":"(fn n-th [lst n]\n  (if (<= n 0)\n    (first lst)\n    (n-th (rest lst) (- n 1))))","problem":21,"user":"535a80b1e4b04ce2eb3ed2a7"},{"problem":21,"code":"(fn [x y]\n  (loop [counter y temp-list x]\n   \t(if (zero? counter)\n      (first temp-list)\n      (recur (dec counter) (rest temp-list))\n      )\n    )\n  )","user":"57ade6fce4b0b8559636fca5"},{"problem":21,"code":"(fn my-nth[xs n]\n  (first (drop n xs)))","user":"60c91f48e4b0e0fa5f1b4304"},{"problem":21,"code":"(fn [x i] ((zipmap (range) x) i))","user":"5576e78de4b05c286339e075"},{"problem":21,"code":"(fn [x i] (second (first (filter (fn [x] (= (first x) i)) (map-indexed (fn [i x] [i x]) x)))))","user":"562117b4e4b064ca9f4b16ed"},{"code":"(fn fx [x y] (\n  first (drop y x)\n))","problem":21,"user":"50202d1ae4b0cb6ebc0a42f3"},{"code":"(fn Nth [seq n]\n  (if (= 0 n)\n    (first seq)\n    (Nth (next seq) (dec n))))","problem":21,"user":"5315ec83e4b08068f379ed39"},{"problem":21,"code":"(fn f [xs n]\n  (if (= n 0)\n    (first xs)\n    (f (rest xs) (- n 1))))","user":"55e60a45e4b050e68259b481"},{"code":"(fn mynth [list index]\n  (if (= 0 index)\n    (first list)\n    (recur (rest list) (- index 1))))","problem":21,"user":"50293b68e4b061fd216be4b7"},{"code":"(fn [x1 y]\n  (loop [x x1, pos 0]\n    (if (= pos y)\n      (first x)\n      (recur (rest x) (inc pos)))))","problem":21,"user":"501fcd59e4b0cb6ebc0a42ec"},{"code":"#(first (reverse (take (+ 1 %2) %1)))","problem":21,"user":"4f0e995e535d0136e6c22326"},{"problem":21,"code":"(fn [a n]\n  (loop [my-seq a\n         my-acc 0]\n    (if (= n my-acc)\n      (first my-seq)\n      (recur (rest my-seq) (inc my-acc)))))","user":"5655e056e4b0f9d632dd849b"},{"problem":21,"code":"(fn [input_sequence n] (first (second (split-at n input_sequence))))","user":"5dfb33aae4b0a607a9a45cd7"},{"code":"(fn my-nth [lst pos]\n  (if (> pos 0)\n    (my-nth (rest lst) (dec pos))\n    (first lst)))","problem":21,"user":"5008b795e4b0144d4f561e3e"},{"problem":21,"code":"(fn get-nth [x y] (second (take-nth y x)))","user":"5de5de7be4b0948ae9d9ae1a"},{"problem":21,"code":"(fn f [x y] (if (= 0 y) (first x) (f (rest x) (dec y) ) ) )","user":"5463fbbde4b01be26fd746ca"},{"code":"(fn [m n] (loop [x m, y 0] (if (= y n) ((comp first) x) (recur (rest x) (inc y)))))","problem":21,"user":"51da8c84e4b02ceefd94776a"},{"problem":21,"code":"(fn[lst n] (first (last (take (+ n 1) (iterate next lst)))))","user":"577dbb04e4b0c8d87281f6da"},{"problem":21,"code":"(fn mth [s m] (if (> m 0) (mth (rest s) (dec m)) (first s)))","user":"587c59d1e4b01531a375eb17"},{"code":"(fn [c n] \n (loop [cnt n coll c]\n  (if (zero? cnt)\n   (first coll)\n   (recur (dec cnt)(rest coll)))))","problem":21,"user":"51771cb1e4b085adf681d895"},{"problem":21,"code":"#(if (= 0 %2)\n    (first %1)\n    (let [subval (- %2 1)\n          restval (rest %1)]\n    \t(recur restval subval))\n  )","user":"5e38b324e4b01d43a70e8dc3"},{"code":"(fn finder [seq0, num0] (if (> num0 0) (finder (rest seq0) (dec num0)) (first seq0)))","problem":21,"user":"51fc44c5e4b0f1313d468a1b"},{"problem":21,"code":"(fn func[xs ind]\n  ((fn my_nth [xs c]\n    (if (= (count xs) c)\n      (first xs)\n      (my_nth (rest xs) c)\n    )\n  ) xs (- (count xs) ind))\n)","user":"5ad89e51e4b0ea6055cfac2a"},{"problem":21,"code":"(fn myseq [s n] \n  (loop [i 0 sequ s]\n    (if (= i n)\n      (first sequ)\n      (recur (inc i) (rest sequ)))))","user":"5b7412a4e4b047b03b2036bb"},{"code":"#(first (last (split-at %2 %1)))","problem":21,"user":"4edfd846535d10e5ff6f5345"},{"code":"#(loop [coll %1 i 0]\n  (if (= i %2) (first coll) (recur (rest coll) (+ i 1) ) ))","problem":21,"user":"527bd988e4b03e8d9a4a759d"},{"problem":21,"code":"(fn [elements pos]\n  (last (take (inc pos) elements)))","user":"5d7faa52e4b0915913b1d365"},{"code":"(fn [coll n] ((into [] coll) n))","problem":21,"user":"4e9519b4535dbda64a6f6b2d"},{"problem":21,"code":"(fn [seqs idx]\n  (.get seqs idx))","user":"56288ccae4b00e49c7cb47ea"},{"problem":21,"code":"(fn el [l n] (if (= n 0) (first l) (el (rest l) (- n 1))))","user":"59a72effe4b066c664927d94"},{"problem":21,"code":"(fn [x n] (last (take (inc n) (to-array x))))","user":"5f1108d7e4b091ba50b4dba9"},{"code":"#(last(take (inc %2) %))","problem":21,"user":"50573ed8e4b0012181721987"},{"code":"#(loop [col %\n        iter %2]\n  (if (= iter 0)\n    (first col)\n    (recur (rest col) (dec iter))\n    )\n  )","problem":21,"user":"532439b1e4b09d4e7a9b54da"},{"code":"(fn [x index] ((zipmap (range) x) index))","problem":21,"user":"5140283fe4b00f13ea1bd89a"},{"code":"(fn my_nth [l, a] (cond (= a 0) (first l) :else (my_nth (rest l) (- a 1))))","problem":21,"user":"4f038496535dcb61093f6b08"},{"problem":21,"code":";#(loop [cntr 0 coll %1 n %2] (if (= cntr n) (first coll) (recur (inc cntr) (rest coll) n)))\n#(loop [n %2 coll %1]\n   (if (zero? n) (first coll) (recur (dec n) (rest coll))))","user":"57615a22e4b0994c1922fb88"},{"code":"(fn [c n] \n  (.get c n))","problem":21,"user":"4e68d816535d8ccf87e9fe8e"},{"code":"(fn nth-elem [sequ n]\n  (if (> n 0) (nth-elem (rest sequ) (- n 1))\n  (first sequ)))","problem":21,"user":"4fe9fce4e4b0547ebccb247e"},{"problem":21,"code":"(fn nthel [x n] \n  (if (= n 0)\n    (first x)\n    (nthel (rest x) (dec n))))","user":"5c8cfff8e4b048ec896c5996"},{"problem":21,"code":"(fn [items index]\n    (first (drop index items)))","user":"549509f0e4b0b312c081ff5a"},{"code":"(fn[x y](first (drop y x)))","problem":21,"user":"5009e9f1e4b03d00572d2d6f"},{"code":"(fn [x n] (if\n            (= (count x) (+ n 1))\n            (last x)\n            (recur (reverse (rest (reverse x))) n)))","problem":21,"user":"517adc6ce4b0925c997201c4"},{"code":"(fn [s e] (loop [n 0 ss s] (if (= n e) (first ss) (recur (inc n) (rest ss)))))","problem":21,"user":"51a2a376e4b00957e520db7f"},{"problem":21,"code":"(fn [x c]\n  (last (take (inc c) x)))","user":"5aefedc0e4b0cc2b61a3bc42"},{"problem":21,"code":"(fn lst [x y] \n  \t\n  \t(if (= y 0) \n    \t\n      \t(first x) \n        (lst (rest x) (dec y))\n \t)\n)","user":"5c51b394e4b0fb8c5ffd99cc"},{"problem":21,"code":"(fn [coll idx]\n  (last (take (inc idx) coll)))","user":"5e207f12e4b05b4b01516112"},{"problem":21,"code":"(fn [lista indice]\n      (loop [list lista count 0]\n                 (if(= indice count)\n                              (first list)\n                              (recur (rest list)(inc count))\n                              )\n                 )\n    )","user":"5ccb7ba6e4b0ccb061962885"},{"code":"(fn [x i] \n  (loop [xl x index 0]\n      (if (= index i)\n        (first xl)\n        (recur (rest xl) (inc index))\n      )  \n  )\n)","problem":21,"user":"52824143e4b0757a1b171453"},{"problem":21,"code":"#(->(take (inc %2) %1)(last))","user":"5587cdefe4b059ccff29b1e7"},{"problem":21,"code":";(fn nth-1[items n](if (= n 0) (first items) (nth-1 (rest items) (dec n))))\n(fn nth-1[items n](first (drop n items)))","user":"5b100648e4b0cc2b61a3be17"},{"problem":21,"code":"(fn [seq n]\n  (if (= 0 n)\n    (first seq)\n    (recur (rest seq) (dec n))))","user":"55183a11e4b06a49daca83ca"},{"problem":21,"code":"#(loop [i %2 l %] (if (zero? i) (first l) (recur (dec i) (rest l))))","user":"55f3197ce4b06e875b46ce52"},{"code":"(fn [s n] \n  (if (= 0 n)\n    (first s)\n    (recur (next s) (- n 1))))","problem":21,"user":"52f3ee17e4b05e3f0be25f19"},{"problem":21,"code":"(fn [x n] (if (= 0 n) (first x) (recur (next x) (dec n))))","user":"54e1939ce4b024c67c0cf7c5"},{"problem":21,"code":"(fn [li n] (get (vec li) n))","user":"5e23ca7fe4b05b4b01516144"},{"problem":21,"code":"(fn [l i] (if (= i 0) (first l) (recur (rest l) (dec i))))","user":"53ecac57e4b0d648e757f4b3"},{"problem":21,"code":"(fn [x y]\n  (get (into [] x) y)\n  )","user":"546a6fd8e4b00cfc9eacc158"},{"code":"(fn [c i]\n  (if (= i 0)\n    (first c)\n    (recur (rest c) (- i 1))\n))","problem":21,"user":"5020a3fbe4b0cb6ebc0a42f8"},{"code":"(fn [s i] (first (reverse (take (+ i 1) s))))","problem":21,"user":"517d4ba3e4b0f5e87c18f261"},{"code":"(fn [seq n]\n  (loop [se seq\n   nm 0]\n    (do\n      (if (= nm n)\n\t(first se)\n\t(recur (rest se) (inc nm))))))","problem":21,"user":"4ef9b021535dced4c769f269"},{"code":"(fn [x, y] (get (vec x) y))","problem":21,"user":"51b9dc12e4b0e871ca49590c"},{"problem":21,"code":"(fn get-n \n  [seq n] \n  (if (= 0 n) \n    (first seq) \n    (get-n (rest seq)(dec n))))","user":"54c11fdae4b0ed20f4ff6f1b"},{"code":"(fn [coll m]\n    (if (= 0 m) (first coll) (recur (rest coll) (dec m))))","problem":21,"user":"4ff3df0fe4b0678c553fc355"},{"code":"(fn nth-new\r\n  [coll index]\r\n  (if (= 0 index)\r\n    (first coll)\r\n    (nth-new (rest coll) (dec index))))","problem":21,"user":"4f17ab99535d64f603146457"},{"code":"(fn [s idx] (first (drop idx s)))","problem":21,"user":"4f611127e4b0defedf855fb4"},{"problem":21,"code":"(fn my-nth[s n]\n  (if (= 0 n)\n    (first s)\n    (my-nth\n     (rest s)\n     (dec n))))","user":"5c63e034e4b0fca0c1622668"},{"problem":21,"code":"(fn [c n] (loop [coll c, index n]\n            (if (< index 1) \n              (first coll)\n              (recur (rest coll) (dec index))\n)))","user":"5653a3e6e4b0f9d632dd8476"},{"problem":21,"code":"(fn [collection index]\n  (last\n    (take (inc index) collection)))","user":"580a0783e4b0a837a8b30d2c"},{"code":"(fn n-th\n  [s index]\n  (loop [s \t\ts\n         index index]\n    (if (zero? index)\n      (first s)\n      (recur (next s) (dec index)))))","problem":21,"user":"52352370e4b05e80434a5061"},{"problem":21,"code":"(fn [s index]\n  (if (zero? index)\n    (first s)\n    (recur (rest s) (dec index))))","user":"56082adae4b046a4fc0ac008"},{"code":"(fn [l n]\n  (loop [l l\n         p 0]\n    (if (= p n)\n      (first l)\n      (recur (rest l) (inc p)))))","problem":21,"user":"4e5a35fc535d8a8b8723a2a8"},{"problem":21,"code":"(fn [array idx] (if (zero? idx) (first array) (recur (rest array) (dec idx))))","user":"5669dcd9e4b04acd4f672e01"},{"code":"(fn [a b] (loop [remaining a n 0] (if (= n b) (first remaining) (recur (rest remaining) (inc n)))))","problem":21,"user":"4ea57300535d7eef308072d5"},{"problem":21,"code":"(fn [x n] (cond\n           (= n 0) (first x)\n           :else (recur (rest x) (dec n))))","user":"5374f931e4b06d7f452d9e2d"},{"code":"(fn [x, n] (last (take (+ n 1) x)))","problem":21,"user":"4e1172f8535d04ed9115e7c8"},{"code":"(fn [seq n]\n  (loop [s seq\n         i 0]\n        (if (= i n)\n            (first s)\n            (recur (rest s) (+ 1 i)))))","problem":21,"user":"4ea1bc93535d7eef308072b9"},{"code":"(fn [seq idx]\n  (first (keep-indexed (fn [i e] \n    (when (= idx i) e)) seq)))","problem":21,"user":"4ec3c4a0535dcc7ae8597d5a"},{"problem":21,"code":"(fn me [s, pos]\n  (if (zero? pos)\n    (first s)\n    (me (rest s) (dec pos))))","user":"5b98489ae4b0c0b3ffbd4aab"},{"problem":21,"code":"(fn [x i] (if (zero? i) (first x) (recur (rest x) (dec i))))","user":"547e48bee4b0c51c1f4d7304"},{"code":";(fn f [cc n] \n;  (if (zero? n) \n;    (first cc)\n;    (f (next cc) (dec n))))\n\n(fn [col n] (get (vec col) n))","problem":21,"user":"4f9510b5e4b0dcca54ed6cc7"},{"problem":21,"code":"(fn answer [x y] (if (= 0 y) (first x) (answer (rest x) (- y 1))))","user":"5b3e35bde4b02d533a91bbfa"},{"problem":21,"code":"#(if (= 0 %2)\n   (first %1)\n   (recur (rest %1)\n          (dec %2)))","user":"5999fe10e4b07157cc8dab02"},{"code":"#(if (= %2 0)\n   (first %)\n   (recur (rest %) (dec %2)))\n\n;(fn [xs indx]\n;  (if (= indx 0)\n;    (first xs)\n;    (recur (rest xs) (- indx 1))))","problem":21,"user":"4fed24a5e4b0681fd128dcaf"},{"code":"(fn [seq i]\n  (if (zero? i)\n    (first seq)\n    (recur (rest seq) (dec i))))","problem":21,"user":"4f230adde4b0d66497709fdf"},{"problem":21,"code":";(fn [coll n] (last (take (inc n) coll)))\n\n;(fn [coll n] (first (drop n coll)))\n\n;(fn NthElement [coll n]\n ; (last (take (+ n 1) coll )))\n \n (fn [coll n]\n    (first (drop n coll)))","user":"55465b20e4b0a04f7929953b"},{"problem":21,"code":"(fn [coll n] (first ((apply comp (take n (repeat rest))) coll)))","user":"57300c19e4b0cd1946bd0fa1"},{"problem":21,"code":"(fn f [c n] (if (= 0 n) (first c) (f (rest c) (- n 1))))","user":"58351337e4b089d5ab817cd1"},{"code":"(fn n-th [col n] \n  (cond \n   \t(> n 0) (n-th (rest col) (dec n))\n   \t:else (first col)))","problem":21,"user":"51cc5f20e4b02254fc794870"},{"problem":21,"code":"(fn [lst index] \n  (loop [target lst ind 0]\n    (if (= ind index)\n      (first target)\n      (recur (rest target) (inc ind)))))","user":"5689c269e4b0dcc4269f4083"},{"problem":21,"code":"#(loop [cntr 0 coll %1 n %2]\n  (if (= cntr n) (first coll) \n  (recur (inc cntr)(rest coll)\n  n)))","user":"5742d82ae4b05c31a32c0881"},{"problem":21,"code":"(fn [list_param index] (first (drop index list_param)) )","user":"55ef51f1e4b066087aa94534"},{"problem":21,"code":"(fn f\n   [c n]\n   (if (zero? n)\n     (first c)\n     (f (rest c) (dec n))))","user":"55acab76e4b03311e7b73294"},{"problem":21,"code":"(fn [coll n]\n  (if (> n (count coll))\n    \"requested item out of collection\"\n  \t(loop [i 0\n           remaining coll\n           curr (first remaining)]\n    \t(if (= i n)\n          curr\n          (recur (+ 1 i) (rest remaining) (second remaining))))))","user":"51a7bf26e4b0da5f497bde8c"},{"problem":21,"code":"(fn [l n] \n  (if (= n 0) (first l) (recur (rest l) (- n 1))))","user":"553e007ae4b0a04f792994e7"},{"problem":21,"code":"(fn [a n] (loop [n n a a] (if (= n 0) (first a) (recur (dec n) (rest a)))))","user":"574c06b8e4b02ea114799213"},{"problem":21,"code":"(fn [c n]\n  (first (last (take (inc n) (iterate rest c)))))","user":"4e170143535d04ed9115e7ed"},{"problem":21,"code":"(fn [col n]\n  (if(= n 0)\n\t  (first col)\n \t (recur (rest col) (- n 1))))","user":"54f92d7fe4b01ecee9d88836"},{"problem":21,"code":"(fn\n  [s n]\n  (loop [xs s i n]\n   (if (<= i 0)\n     (first xs)\n     (recur (rest xs) (dec i)))))","user":"59ac0965e4b08cbb53654da6"},{"problem":21,"code":"(fn [coll index]\n  (if (> index 0)\n    (recur (rest coll) (dec index))\n    (first coll)))","user":"55aa7c5ce4b0988bba2ad94d"},{"problem":21,"code":"(fn[l n](if(= n 0)(first l)(recur (rest l)(dec n))))","user":"595e20e2e4b066ee0a44b037"},{"problem":21,"code":"(fn [listof th] (get(vec listof) th))","user":"5a634ff0e4b0512ff01cd995"},{"code":"(fn foo [s n] (if (= n 0) (first s) (foo (rest s) (dec n))))","problem":21,"user":"506b40ade4b0eda3100c0905"},{"code":"(fn [l n]\n  (if (= n 0)\n    (first l)\n    (recur (rest l) (dec n))\n  )\n)","problem":21,"user":"506ec408e4b09350ab4199f1"},{"problem":21,"code":"(fn nth-elem\n  [seq index]\n  (let [myVec (into [] seq)]\n    (get myVec  index)))","user":"5e64c1f2e4b0fd0acd1586ad"},{"code":"(fn nnth [l n] (if (= n 0) \n  \t\t\t\t\t(first l)\n  \t\t\t\t\t(nnth (rest l) \n                          (- n 1))\n                  ))","problem":21,"user":"51421cd5e4b0b50abeb46b2c"},{"code":"(fn [aseq n]\n  (if (= 0 n)\n    (first aseq)\n    (recur (rest aseq) (dec n))))","problem":21,"user":"51b3b22ce4b0f094dd986fa7"},{"problem":21,"code":"(fn mnth [l x] \n(if (= x 0) (first l) (mnth ( rest l) (dec x))))","user":"57e59d2be4b0bfb2137f5ad9"},{"code":".get","problem":21,"user":"4f037123535dcb61093f6ace"},{"problem":21,"code":"(fn enth [s n]\n  (if\n    (= n 0)\n    (first s)\n    (enth (rest s) (- n 1))\n  )\n)","user":"575b1440e4b02ea114799358"},{"code":"(fn [collection n] (last (take (+ n 1) collection)))","problem":21,"user":"5383b929e4b06839e8705ee7"},{"problem":21,"code":"#(get (vec %1)%2)","user":"56c74864e4b0ed865f9758b9"},{"code":"(fn [c i] (if (zero? i) (first c) (recur (rest c) (dec i))))","problem":21,"user":"4ef77edb535dced4c769f254"},{"problem":21,"code":"(fn mth\n  [x m] \n  (if (= m 0)\n      (first x)\n\t  (mth (rest x) (dec m))))","user":"55537851e4b0deb715856e04"},{"problem":21,"code":"(fn [coll n] ((into {} (map vector (range (count coll)) coll)) n))","user":"5d89427ae4b0915913b1d3b5"},{"code":"(fn [coll i] (if (= 0 i) (first coll) (recur (next coll) (dec i))))","problem":21,"user":"515c75b0e4b069911535cf0f"},{"problem":21,"code":"(fn nthEl\n  [coll n]\n  (if (zero? n)\n    (first coll)\n    (recur (rest coll) (dec n))))","user":"547a714ae4b0c51c1f4d72cc"},{"problem":21,"code":"(fn\n  [coll index]\n  (if (= index 0)\n    (first coll)\n    (recur (rest coll) (dec index))))","user":"5c15537ae4b01240ff5671bf"},{"problem":21,"code":"(fn [lst x]\n  (loop [l lst p 0]\n    (if (= p x)\n      (first l)\n      (recur (rest l) (+ p 1)))))","user":"57a1f401e4b0c3d858beb8f4"},{"problem":21,"code":"(fn mynth [v n]\n  (if (= n 0)\n    (first v)\n    (mynth (rest v) (dec n))))","user":"572ec4dde4b0cd1946bd0f8d"},{"code":"(fn [coll n]\n  (if (> n 0)\n    (recur (next coll) (- n 1))\n    (first coll)))","problem":21,"user":"52a55adee4b0c58976d9abe7"},{"problem":21,"code":"(fn\n  [seq n]\n  (loop [loop-seq seq pos 0]\n    (if (= pos n)\n      (first loop-seq)\n      (recur (rest loop-seq) (inc pos)))))","user":"559fb147e4b0acc240e314ea"},{"problem":21,"code":"#(loop [x 0\n        el (first %1)\n        re (rest %1)]\n   (if (= x %2)\n     el\n     (recur (inc x) (first re) (rest re))))","user":"5e790f6be4b085ba37836e01"},{"problem":21,"code":"(fn mm [l n] ( if ( = n 0 ) (first l) (recur (rest l) (dec n) ) ))","user":"5e309f89e4b05b4b01516218"},{"code":"(fn [mylist itemno] (first (drop itemno mylist)))","problem":21,"user":"514b90a6e4b00d9d073e90e6"},{"problem":21,"code":"(fn [x n] ((into [] x) n))","user":"578d863de4b0ebec4cfb756a"},{"code":"(fn myLast [lst n] ( if( = 1 (+ n 1) ) (first lst) (myLast (rest lst) (- n 1)) ))","problem":21,"user":"4fc4f073e4b081705acca35b"},{"problem":21,"code":"(fn mynth [coll n]\n  (loop [coll coll\n         i 0]\n    (cond\n     (= i n) (first coll)\n     :else (recur (rest coll) (inc i)))))","user":"602d5eade4b0d5df2af22279"},{"code":"(fn [the-seq pos]\n (first (drop pos the-seq)))","problem":21,"user":"4f80a906e4b033992c121bf7"},{"problem":21,"code":"(fn [l p]\n  (first (drop p l)))","user":"5400407de4b0de5c4184860a"},{"problem":21,"code":"(fn [x i] (get (vec x) i))","user":"54ee03c3e4b024c67c0cf86a"},{"problem":21,"code":"(fn Nth [coll x] (last (take (inc x) coll)))","user":"59fa0bb6e4b0ca45a743a352"},{"problem":21,"code":"#(first ((apply comp (into [] (repeat %2 rest))) %1))","user":"56327168e4b0bfe05bf117a5"},{"problem":21,"code":"(fn [coll index]\n  (loop [process-coll coll cnt 0]\n    (if (= cnt index)\n        (first process-coll)\n        (recur (rest process-coll) (inc cnt))\n      )))","user":"53cb30f0e4b00fb29b2212d0"},{"problem":21,"code":"(fn homemade-nth[l n]\n  (if (= n 0) (first l)\n    (homemade-nth (rest l) (dec n))))","user":"56b02034e4b0982f16b37dd7"},{"code":"(fn ! [a x] (if (= 0 x) (first a) (! (rest a) (- x 1))))","problem":21,"user":"4eee5c7f535d93acb0a668c6"},{"problem":21,"code":"(fn \n  [coll n]\n  (last (take (+ 1 n) coll)))","user":"5c98d91ee4b048ec896c5a8c"},{"problem":21,"code":"(fn [l n] (->> l (drop n) first))","user":"56ef077ae4b04a395b9a0459"},{"problem":21,"code":"(fn f [s,n] (if (= n 0) (first s) (f (rest s) (- n 1))))","user":"5e55775ae4b027a2e10ac0f4"},{"code":"(fn [s n]\n  (if (= 0 n)\n    (first s) \n    (recur (rest s) (dec n))))","problem":21,"user":"4f0a4e7e535d0136e6c222f4"},{"problem":21,"code":"(fn [coll index] \n  (first (drop index coll))\n  )","user":"5695b86de4b0dcc4269f412b"},{"code":"(fn my-nth [val idx]\n  (if (= 0 idx)\n    (first val)\n    (my-nth (rest val) (- idx 1))))","problem":21,"user":"4f0f03ce535d0136e6c2232a"},{"code":"(fn mynth\n  [s n]\n  (if (and (next s) (> n 0))\n    (recur (next s) (dec n))\n      (if (> n 0) nil \n       (first s))))","problem":21,"user":"53219cece4b09d4e7a9b54b7"},{"code":"(fn [x y] \n  (last \n    (take (inc y) x)))","problem":21,"user":"4df30f76535d08e6dec9fe28"},{"problem":21,"code":"(fn [l n] (loop [cnt n acc l]\n  (if (zero? cnt)\n    (first acc)\n       (recur (dec cnt) (rest acc)))))","user":"56139eace4b05f002753dfa1"},{"problem":21,"code":"(fn [sequence n]\n  (loop [sequence sequence\n       n n]\n  (if (= n 0)\n    (first sequence)\n    (recur (rest sequence) (dec n)))))","user":"56277b32e4b00e49c7cb47d1"},{"code":"(fn [x y] (peek (vec (take (inc y) x))))","problem":21,"user":"4f4662f9e4b0d56e7bb92b9d"},{"problem":21,"code":"(fn nthx [coll idx]\n  (if (> idx 0)\n    (nthx (rest coll) (- idx 1))\n    (first coll)))","user":"58ac1135e4b0005cfeb1a73f"},{"problem":21,"code":"(fn my-nth [l n]   (if (= n 0)     (first l)    (recur (rest l) (dec n))))","user":"56897739e4b0dcc4269f407d"},{"code":"(fn [x c]\n  (loop [ls x cn c]\n    (if (= 0 cn)\n    \t(first ls)\n      (recur (rest ls) (dec cn)))))","problem":21,"user":"52c81954e4b0c2d177d6212e"},{"problem":21,"code":"(fn get-nth [x el] (if (= el 0)\n             (first x)\n             (get-nth (rest x) (- el 1))))","user":"55f05015e4b06e875b46ce22"},{"problem":21,"code":"(fn [xs n]\n  (first (drop n xs))\n  )","user":"5fab003de4b08cb800c85ad1"},{"problem":21,"code":"(fn [xs index] (if (= 0 index) (first xs) (recur (rest xs) (dec index))))","user":"55dc2ad1e4b050e68259b3ac"},{"problem":21,"code":"#(->(loop [data %1 count %2] (if (zero? count) (first data) (recur (rest data) (dec count)))))","user":"5832be57e4b089d5ab817c86"},{"code":"(fn nth-el[lst n]\n  (if (= n 0)\n    (first lst)\n    (nth-el (next lst) (- n 1))))","problem":21,"user":"52e42430e4b09f7907dd144c"},{"problem":21,"code":"(fn [a-list element-num]\n  (let [sub-list (take (inc element-num) a-list)]\n    ((comp peek vec) sub-list)))","user":"53b07a73e4b047364c044485"},{"code":"(fn [coll n] \n  (get (vec coll) n))","problem":21,"user":"510a3cd4e4b06956752d35ad"},{"code":"(fn nthEl [l, n]\n  (if (= n 0)\n    (first l)\n    (nthEl (rest l) (- n 1))))","problem":21,"user":"50d2fa5ce4b049d4ed5650cf"},{"problem":21,"code":"#(loop [lst %1\n         n %2]\n    (if (zero? n)\n      (first lst)\n      (recur (rest lst)\n             (dec n))))","user":"50a122a1e4b08df8156e9e54"},{"problem":21,"code":"(fn nth_elem [ls, idx]\n  (if (= idx 0)\n    (first ls)\n    (nth_elem (rest ls) (- idx 1))))","user":"561bcf94e4b064ca9f4b168a"},{"code":"(fn my-nth [col index]\n  (loop [current 0 list col]\n    (if (empty? list)\n      nil\n      (if (= current index)\n        (first list)\n        (recur (+ 1 current) (rest list))))))","problem":21,"user":"4f845cd1e4b033992c121c31"},{"problem":21,"code":"(fn[v i] (first (nthnext v i)))","user":"53fbcec3e4b0de5c41848585"},{"code":"#((apply hash-map (interleave (range (count %1)) %1)) %2)","problem":21,"user":"52b9e5c2e4b07a9af57922c8"},{"code":"(fn Nth [x n] (if (= n 0) (first x) (Nth (rest x) (- n 1))))","problem":21,"user":"4f039f14535dcb61093f6b3e"},{"problem":21,"code":"(fn nth' [l, idx]\n  (if (= idx 0)\n    (first l)\n    (nth' (rest l) (dec idx))))","user":"55b9e905e4b01b9910ae29c3"},{"code":"(fn [ss nn] (loop [s ss n 0] (if (= n nn) (first s) (recur (rest s) (inc n)))))","problem":21,"user":"52117ea7e4b07aea8afc4f70"},{"problem":21,"code":"(fn [col n]\n (if (< n 1)\n  (first col)\n  (recur (rest col) (dec n))))","user":"54580586e4b01be26fd74616"},{"code":"(fn [x y]\n  (loop [r x n y]\n    (if (= n 0) (first r) (recur (next r) (dec n)))))","problem":21,"user":"4fc68fc4e4b0ee37620e1816"},{"problem":21,"code":"(fn [c n]\n  \t(if (zero? n)\n      \t(first c)\n      \t(recur (rest c) (- n 1))))","user":"53ced1d5e4b00fb29b2212f7"},{"code":"(fn [aseq n] (last (take (inc n) aseq) ))","problem":21,"user":"5135a74ae4b04ac1f358dd46"},{"problem":21,"code":"(fn [lst index]\n    (loop [i 0 lst lst]\n        (if (= i index)\n            (first lst)\n            (recur (inc i) (next lst)))))","user":"54a8fdcee4b09f271ff37ca9"},{"problem":21,"code":"(fn f [xs n]\n  (if (zero? n)\n    (first xs)\n    (f (rest xs) (- n 1))))","user":"5bcddaeee4b0e9689409ee07"},{"code":"(fn mynth [x i]\n  (if (= i 0)\n    (first x)\n    (mynth (rest x) (- i 1))))","problem":21,"user":"5058493ae4b06522596eba75"},{"problem":21,"code":"#(loop [idx 0, c %1]\n\t(if (= %2 idx)\n        (first c)\n\t\t(recur (+ idx 1) (rest c))))","user":"53573d70e4b04ce2eb3ed278"},{"code":"(fn mynth [s n]\n    (if (zero? n)\n        (first s)\n      (mynth (rest s) (dec n))))","problem":21,"user":"51a4d53ae4b0def3c5c58699"},{"code":"(fn [x y] (last(take (+ y 1) x)))","problem":21,"user":"5093ef2ce4b097f48cc38586"},{"code":"(fn [arr, index] (first (reverse (take (+ 1 index) arr))))","problem":21,"user":"5303a027e4b0d8b024fd3745"},{"code":"(fn [L, k] (if (= k 0) (first L) (recur (rest L) (dec k))))","problem":21,"user":"52c22856e4b07a9af5792378"},{"code":"(fn [ coll n] \n  ((apply comp (cons first (take n (repeat rest)))) coll))","problem":21,"user":"5018ed15e4b011a2e0bf6412"},{"problem":21,"code":"#(loop [ncoll %1 n %2] (if (= n 0) (first ncoll) (recur (rest ncoll) (dec n))))","user":"5998b0a1e4b07157cc8daaec"},{"problem":21,"code":"(fn q21\n  [s i]\n  (let [head (first s)\n        tail (rest s)]\n    (cond\n      (< i 0) nil\n      (= i 0) head\n      true (recur tail (dec i)))))","user":"5cab0ad9e4b048ec896c5c46"},{"code":"#((apply array-map (interleave (range (count %1)) %1)) %2)","problem":21,"user":"52c6a0abe4b0c2d177d62111"},{"code":"(fn __ [x n]\n  (if (= n 0)\n    (first x)\n    (recur (next x) (dec n))))","problem":21,"user":"5133cabfe4b0d7a043de8cf4"},{"problem":21,"code":"(fn [coll n]\n  (loop [n n\n         idx 0\n         coll coll]\n    (if (and (seq coll)\n             (= idx n))\n      (first coll)\n      (if-not (> idx n)\n        (recur n (inc idx) (rest coll))))))","user":"5760682ee4b08062f99a4e94"},{"problem":21,"code":"(fn [array position]\n  (loop [first-elem (first array) rest-elem (rest array) counter 0]\n    (if (= counter position)\n      first-elem\n      (recur (first rest-elem) (rest rest-elem) (inc counter)))))","user":"57c2d66ae4b05aa3c4741cb9"},{"code":"(fn get-nth [coll, n]\n  (if (zero? n)\n    (first coll)\n    (get-nth (rest coll) (dec n))))","problem":21,"user":"531ccb1fe4b08068f379eda7"},{"code":"(fn ! [x y]\n  (if (= y 0)\n    (first x)\n    (! (rest x) (- y 1))))","problem":21,"user":"501c1492e4b086d93747d180"},{"code":"(fn [seq n] (if (= n 0) (first seq) (recur (next seq) (- n 1))))","problem":21,"user":"51455e14e4b0e88796073407"},{"problem":21,"code":"(fn n [s i] \n  (if (= i 0) \n    (first s) \n    (n (next s) (- i 1))))","user":"544a5b2fe4b0e39780006956"},{"problem":21,"code":"(fn my-nth [x n]\n   (if (= n\n          0)\n     (first x)\n     (my-nth (rest x) (- n 1))))","user":"5ce5277de4b0a17bb84e2b6a"},{"problem":21,"code":"(fn returnnth [myseq k] (first (drop k myseq)))","user":"56e42a30e4b03a7c14b85a49"},{"problem":21,"code":"(fn mynth [coll idx] (first (last (split-at idx coll))))","user":"5461a711e4b01be26fd746a4"},{"problem":21,"code":"(fn\n  [coll n]\n  (loop [i 0 curr-coll coll]\n    (if (= i n)\n      (first curr-coll)\n      (recur (inc i) (rest curr-coll))\n      )\n    )\n  )","user":"60337f1fe4b0d5df2af222c1"},{"problem":21,"code":"(fn [coll x]\n  (if (zero? x)\n    (first coll)\n    (recur (next coll) (dec x))))","user":"55f6f1d3e4b06e875b46cea0"},{"problem":21,"code":"(fn [list n] (loop [l list current 0  end n] (if (= current end) (first l) (recur (rest l) (inc current) end))))","user":"56dd224be4b0ea9b8538f828"},{"code":"(fn [l p] (last (take (inc p) l)))","problem":21,"user":"4f651f66e4b07046d9f4ef3c"},{"code":"(fn [a x]\n  (first (drop x a)))","problem":21,"user":"4f9a737fe4b0dcca54ed6d0a"},{"problem":21,"code":"(fn my-nth\n  [myList n]\n    (if (= n 0)\n      (first myList)\n      (recur (rest myList) (dec n))))","user":"5f3103aee4b0574c87022c24"},{"problem":21,"code":"(fn [x y] (if (< y 1)(first x)(recur (rest x) (dec y))))","user":"55dfada4e4b050e68259b3fd"},{"problem":21,"code":"(fn[coll x](first\n            (drop x coll)))","user":"6085edade4b0736b099e42fc"},{"problem":21,"code":"(fn [seq n] (get (reduce conj [] seq) n ))","user":"5d58983fe4b02ba5928a6823"},{"problem":21,"code":"(fn [col n]\n  (if (= 0 n)\n    (first col)\n    (recur (rest col) (- n 1))\n    )\n  )\n\n;; this solution is also nice\n;; #(first (drop %2 %))","user":"570577bbe4b0b0fb43fd0672"},{"code":"(fn [coll index]\n  (if ( = 0 index) (first coll)\n      ( recur (rest coll) (dec index))))","problem":21,"user":"50e90813e4b033b0e80d11e7"},{"problem":21,"code":"(fn f [lst n] (if (= n 0) (first lst) (f (rest lst) (dec n))))","user":"582d7569e4b051871117bfbe"},{"problem":21,"code":"(fn mynth [s n] \n  (if (= n 0)\n    (first s)\n    (mynth (rest s) (- n 1))))","user":"53c1ce3ee4b00fb29b221268"},{"problem":21,"code":"#(get (into-array %1) %2)","user":"560152dee4b04bb52996e186"},{"code":"(fn [x n]\n  (loop [ls x\n         i 0]\n    (if (= i n)\n      (first ls)\n      (recur (rest ls) (inc i))))\n    \n  \n  )","problem":21,"user":"50342d1be4b062bc5d7ae15f"},{"problem":21,"code":"(fn func[l n] (if (= n 0) (first l) (func (rest l) (dec n))))","user":"56039a9de4b04bb52996e1bf"},{"problem":21,"code":"(fn nth-element [items n]\n  (if (= n 0)\n    (first items)\n    (nth-element (rest items) (- n 1))))","user":"5b1ff078e4b03cfeda66ed2a"},{"problem":21,"code":"(fn sme [coll n] (last (take (+ n 1) coll)))","user":"5f5a62b4e4b0a0bc16850aa6"},{"code":"(fn enth [sequ ident]\n  (if (= ident 0)\n    (first sequ)\n    (enth (rest sequ) (- ident 1))))","problem":21,"user":"520b036be4b0b022ef140c73"},{"problem":21,"code":"(fn n-th [q n] (if (= n 0) (first q) (n-th (rest q) (- n 1))))","user":"5f79cb16e4b02876ed9fd0cb"},{"code":"#(loop [i 0, s %1]   \n    (cond \n        (= %2 i) (first s)\n        :else (recur (inc i) (rest s))\n    )\n)","problem":21,"user":"517bc969e4b07ef0e56148d0"},{"problem":21,"code":"(fn [x index]\n   (loop [acc (first x)\n          x (rest x)\n          index index]\n     (if (zero? index)\n     \tacc\n     \t(recur (first x) (rest x) (dec index)))\n     ))","user":"53da3691e4b0e771c3025493"},{"code":"(fn nth-element [x index]\n  (if (= index 0)\n    (first x)\n    (nth-element (rest x) (dec index))))","problem":21,"user":"51551bbde4b0179c5115f4e7"},{"code":"(fn [s k]\n    (first\n    (first\n    (filter \n      (fn [tup] (= (second tup) k))\n      (map list s (range 0 (count s)))))))","problem":21,"user":"5033f11ee4b062bc5d7ae15b"},{"problem":21,"code":";(fn [col idx]\n ; (loop [x idx next-col col]\n  ;  (if (pos? x)\n   ; (recur (dec x) (next next-col))\n    ;(first next-col))))\n    \n;#(first (drop %2 %1))\n    \n;#(get (vec %1) %2)    \n \n\n;#(loop [idx %2 col %1]\n ;  (if (pos? idx)\n  ;   (recur (dec idx) (next col))\n   ;  (first col)))\n.get","user":"55614155e4b0c656e3ff17c4"},{"problem":21,"code":"#(first(second(split-at %2 %)))","user":"53dae029e4b0e771c30254ae"},{"code":"(fn [lst nm]\n  (if (= nm 0)\n    (first lst)\n    (recur (rest lst) (- nm 1))))","problem":21,"user":"51c76864e4b07ef393169e3f"},{"code":"(fn enes [x, n] (if (= 0 n) (first x) (enes (rest x) (- n 1))))","problem":21,"user":"52d92f13e4b09f7907dd13a2"},{"problem":21,"code":"#(last (map (fn [a b] b) (range (inc %2)) %1))","user":"585d9558e4b0f14aab7c879c"},{"problem":21,"code":"(fn [col n] (if (zero? n) (first col) (recur (rest col) (- n 1))))","user":"53cfa79ce4b00fb29b2212ff"},{"problem":21,"code":"(fn get [s x] (last (take (+ x 1) s)))","user":"5c996cebe4b048ec896c5a98"},{"problem":21,"code":"(fn nnn [s i]\n  (if\n    (= i 0) (first s)\n    (nnn (rest s) (dec i))))","user":"53bce179e4b0d9a98559a6c1"},{"code":"(fn [x,n] (last (take (+ n 1) x)))","problem":21,"user":"4fc6ab08e4b0ee37620e1817"},{"code":";(fn [lst n] (first (drop (- 1 n) lst)))\n(fn [lst n] (->> lst (drop n) first))","problem":21,"user":"504820c8e4b0ec70b3ef8d9b"},{"code":"#((apply  comp (cons first (repeat %2 rest))) %1)","problem":21,"user":"52823129e4b0757a1b171452"},{"problem":21,"code":"(fn [s n]\n  (first ((apply comp (repeat n rest)) s)))","user":"54a1f494e4b09f271ff37c52"},{"code":"(fn [col index]\n  (loop [c col i index]\n    (if (= i 0)\n      (first c)\n      (recur (rest c) (dec i)))))","problem":21,"user":"5163a7bbe4b055933a9ca02f"},{"code":"(fn [l x] (first(last(split-at x l))))","problem":21,"user":"51069c82e4b01150e115ebe9"},{"problem":21,"code":"(fn nthE [coll pos]\n  (if (= pos 0)\n    (first coll)\n    (nthE (rest coll) (dec pos))))","user":"56c0aeb8e4b060a8e693e3af"},{"code":"(fn [ls n]\n  (loop [ls ls n n]\n    (if (= n 0) (first ls) (recur (rest ls) (- n 1)))))","problem":21,"user":"504db141e4b021508a333965"},{"problem":21,"code":"#(first(reverse (take (inc %2) %1)))","user":"5f38eecce4b0574c87022c72"},{"problem":21,"code":"(fn gNth [lst idx]\n                     (if (= idx 0) (first lst)\n                         (gNth (rest lst) (- idx 1))))","user":"56bd58c9e4b0f26550335970"},{"problem":21,"code":"(fn nth-element [s x]\n  (last (take (inc x) s)))","user":"5634995fe4b0bfe05bf117be"},{"problem":21,"code":"(fn [coll n] (loop [i n c coll] (if (= 0 i) (first c) (recur (dec i) (rest c)))))","user":"54a96a15e4b09f271ff37cad"},{"problem":21,"code":"(fn [target element] (let [patient target incision element] (if (zero? incision) (first patient) (recur (rest patient) (dec incision)))))","user":"54d0f744e4b0e8a36923e5d7"},{"code":"(fn mynth [coll n] (if (= n 0) (first coll) (mynth (rest coll) (dec n))))","problem":21,"user":"50366589e4b0fbe0a74d26c3"},{"code":"(fn [x y]\n  (first (drop y x)))","problem":21,"user":"5029dae5e4b023940c84aa44"},{"problem":21,"code":"(fn dupa [x n] (if (= n 0) (first x) (dupa (rest x) (- n 1))))","user":"58778aa1e4b01531a375ea9f"},{"code":"(fn hoge [lst, n] \n   (if (= n 0 ) (first lst)\n   (hoge (rest lst) (- n 1))))","problem":21,"user":"4e2e6460535deb9a81d77f0b"},{"code":"(fn [coll n]\n  (loop [c coll\n         i n]\n    (when (seq c)\n      (if (zero? i)\n        (first c)\n        (recur (rest c) (dec i))))))","problem":21,"user":"52e6aea1e4b09f7907dd147c"},{"problem":21,"code":"#(if (= %2 0) (first %) (recur (rest %) (- %2 1)))","user":"54cceafde4b057c6fda3a292"},{"code":"(fn nh [x cnt]\n(if (= 0 cnt)\n(first x) (nh (rest x) (- cnt 1))))","problem":21,"user":"4fc2e302e4b081705acca33a"},{"code":"(fn nn [x y] (if (= y 0) (first x) (nn (rest x) (- y 1))))","problem":21,"user":"50bcfab0e4b0594b91591c64"},{"problem":21,"code":"(fn foo [xs pos] (last (take (+ 1 pos) xs)))","user":"571de357e4b0145328a76285"},{"problem":21,"code":"(fn similar-to-nth [x ind] (if (= ind 0) (first x) (similar-to-nth (rest x) (- ind 1))))","user":"59c1c169e4b0a024fb6ae492"},{"problem":21,"code":"(fn nth-elem [xs i]\n  (if (zero? i)\n    (first xs)\n    (recur (rest xs) (dec i))))","user":"5d47fa13e4b07c84aa5ae6b6"},{"code":";;(fn [s i] (first ( (rest s) i)))\n(fn [s i] (last (take (inc i) s)))","problem":21,"user":"52a4f3cee4b0c58976d9abe0"},{"problem":21,"code":"(fn [coll n] \n  (first \n   (drop n coll)))","user":"53c6dcf9e4b00fb29b2212a3"},{"problem":21,"code":"(fn my-nth [seq n]\n  (last (take (inc n) seq)))","user":"550b1c2ce4b06e50f9beb13b"},{"problem":21,"code":"(fn enesimo [coll th]\n  (loop [cur-th th \n         cur-coll coll]\n    (if (= cur-th 0)\n      (first cur-coll)\n      (recur (dec cur-th) (rest cur-coll)))))","user":"58472aade4b089d5ab817ea0"},{"code":"(fn getnth  [s n] (if (= n 0) (first s) (getnth  (rest s) (- n 1))))","problem":21,"user":"50807940e4b01a93d3f38e44"},{"problem":21,"code":"(fn\n  [seq i]\n  (if (> i 0)\n    (recur (rest seq) (dec i))\n    (first seq)))","user":"54fea37be4b07d26eda61d44"},{"problem":21,"code":"#(let [s %1 index %2 ]\n       (if (= index 0)\n         (first s)\n         (if (not (seq s))\n           nil\n           (recur  (rest s) (- index 1)))\n         ))","user":"5d28633be4b092dab7f59c7d"},{"code":"#(->> %1\n    (take (inc %2))\n    (last))","problem":21,"user":"51ba60a8e4b0fe3ecfb4642e"},{"code":"(fn [l n] ((fn find-pos [l n pos] (if (= n pos)(first l)(find-pos (rest l) n (inc pos)))) l n 0))","problem":21,"user":"5235e15be4b0a643f2dcb756"},{"code":"(fn [x y](first(second(split-at y x))))","problem":21,"user":"4e2ab05e535deb9a81d77f01"},{"code":"(fn [lst idx] \n  (loop [cnt 0 lst lst]\n    (if (= cnt idx)\n      (first lst)\n      (recur (+ cnt 1) (next lst)))))","problem":21,"user":"4ff743fde4b0678c553fc38d"},{"code":"(fn xth [y x]\n  (if (= x 0) (first y)\n(xth (rest y) (dec x))))","problem":21,"user":"500fbfabe4b0c8af2eae4184"},{"problem":21,"code":"(fn[x y]\n   (loop [listan x index y]\n      (if (zero? index)\n        (first listan)\n        (recur (rest listan) (dec index)) \n      )\n    )\n  )","user":"57ea79d9e4b0bfb2137f5b4f"},{"code":"(fn mynth [l n]\n  (if (= n 0)\n    (first l)\n    (mynth (rest l) (dec n))))","problem":21,"user":"4ecaf637535d6d7199dd370c"},{"code":"#(loop [nums %1\n        el %2]\n   (if (= el 0)\n     (first nums)\n     (recur (rest nums) (dec el))))","problem":21,"user":"5191ac45e4b0d428d29dc1b6"},{"problem":21,"code":"(fn give-me-nth [l n] \n  (if (= n 0) \n    (first l) \n    (give-me-nth (rest l) (- n 1))))","user":"572a3d77e4b0f4d77e651230"},{"problem":21,"code":"(fn [coll j]\n  (if (= j 0)\n    (first coll)\n    (recur (rest coll) (- j 1))))","user":"5460612be4b01be26fd74691"},{"code":"(fn [lst n]\n  (loop [l lst\n         count 0]\n    (if (= count n)\n      (first l)\n      (recur (rest l) (inc count)))))","problem":21,"user":"52a6ed15e4b0c58976d9ac0a"},{"problem":21,"code":"(fn calc [items, x] (if (= x 0) (first items) (calc (next items) (- x 1))))","user":"5528a8cae4b0ffed3738f940"},{"code":"#(loop [f (first %1)\n        r (rest %1)\n        n 0]\n   (if (= n %2)\n     f\n     (recur (first r) (rest r) (inc n))))","problem":21,"user":"530caf86e4b02e82168697df"},{"problem":21,"code":"(fn [coll x] (last (take (+ 1 x) coll)))","user":"591770dae4b09b4ee5954b9c"},{"problem":21,"code":"(fn nth-element [collection index]\n  (if (= 0 index)\n    (first collection)\n    (nth-element (rest collection) (dec index))))","user":"5464dd11e4b01be26fd746d2"},{"problem":21,"code":"(fn [coll idx] (last (first (filter #(= (first %) idx) (map-indexed vector coll) ))))","user":"55c2367ee4b0e31453f64978"},{"code":"(fn [s x]\n  (last \n   (take (inc x) s)))","problem":21,"user":"529f2846e4b04e0c58e87ba2"},{"code":"(fn [a n]\r\n  (loop [mya (seq a) index 0]\r\n\t\t(if(= index n) (first mya)\r\n\t\t(recur (rest mya) (inc index)) \r\n\t\t)\r\n\t)\r\n)","problem":21,"user":"50b25f2ce4b03ea88043355f"},{"problem":21,"code":"(fn [l e] (first(drop e l)))","user":"58fa65fde4b0438e51c2cf63"},{"code":"(fn [col n] (first (drop n col)))","problem":21,"user":"53705e2de4b0fc7073fd6e96"},{"code":"(fn [list n]\n  (loop [xs list\n         i n]\n    (if (zero? i)\n      (first xs)\n      (recur (rest xs) (dec i)))))","problem":21,"user":"5339eb56e4b0e30313ee6cb2"},{"code":"(fn not-nth [s n]\r\n  (last (take (+ n 1) s)))","problem":21,"user":"4ecb03b4535d6d7199dd370d"},{"code":"(fn [arg-seq arg-index] (cond (seq? arg-seq) (get arg-seq arg-index)) (get (into [] arg-seq) arg-index))","problem":21,"user":"5182b74fe4b0353c468deb6e"},{"problem":21,"code":"(fn [coll n]\n   (let [remaining coll index n]\n     (if (= index 0)\n       (first remaining)\n       (recur (rest remaining) (dec index)))\n     )\n)","user":"5a18bcd0e4b0ff51aa4b31f1"},{"problem":21,"code":"#(->(last (take (inc %2) %1)))","user":"56330578e4b0bfe05bf117af"},{"problem":21,"code":"#(loop [s %1 n 0]\n  (if (= n %2)\n    (first s)\n    (recur (rest s) (inc n))))","user":"56cf115de4b0ea9b8538f765"},{"problem":21,"code":"(fn temp [args i]\n  (if (= i 0 ) \n    (first args)\n    (temp (rest args) (- i 1) )\n    )\n  )","user":"5372c830e4b06d7f452d9dff"},{"code":"(fn [l n]\n    (loop [data l cnt n ]\n        (println data cnt)\n        (if (= cnt 0)\n          (first data)\n          (recur  (rest data) (- cnt 1) )\n      )))","problem":21,"user":"4e6cf2be535de274dd8d818a"},{"code":"(fn [my-list pos]\n  (last (take (+ pos 1) my-list)))","problem":21,"user":"52eb8b65e4b0705949c44441"},{"problem":21,"code":"#(-> (take (inc %2) %) last)","user":"55e3479be4b050e68259b441"},{"problem":21,"code":"(fn my-nth\n  [s n]\n  (if (= 0 n)\n  (first s)\n  (my-nth (rest s) (dec n))\n  ))","user":"5ac37d0fe4b0e27600da7718"},{"problem":21,"code":"(fn -nth [s n] (first (nthnext s n)))","user":"54bf2c59e4b0ed20f4ff6efe"},{"code":"(fn [getNth N]\n  (if(= N 0)\n    (first getNth) \n  (recur (rest getNth) (- N 1))))","problem":21,"user":"539affaae4b0b51d73faaf1a"},{"problem":21,"code":"(fn f\n  [s, i] \n  (cond (= 0 i) (first s)\n        :else (f (rest s) (- i 1))))","user":"578163bee4b0d36ec5835e85"},{"code":"(fn nth2 [s n] (if (> n 0) (nth2 (rest s) (- n 1)) (first s)))","problem":21,"user":"539d85b1e4b0b51d73faaf37"},{"code":"(fn [coll n] \n  (first\n    (drop n coll)\n  )\n)","problem":21,"user":"5065052ae4b0b1b6c8b1d85e"},{"problem":21,"code":"(fn nth-element [s n]\n  (last (take (inc n) s)))","user":"5edf8952e4b0c7845d86b105"},{"problem":21,"code":"(fn nth-rec [seq n] (if (= n 0) (first seq) (nth-rec (rest seq) (- n 1))))","user":"56018b59e4b04bb52996e18c"},{"code":"(fn [ls n] (get (vec ls) n) )","problem":21,"user":"530f5929e4b08068f379ecc8"},{"problem":21,"code":"(fn nth-element [x n] (if (= n 0) (first x) (nth-element (rest x) (- n 1))))","user":"56078b7be4b08b23635d3181"},{"problem":21,"code":"(fn nth-alt [coll idx]\n    (if (= 0 idx)\n    (first coll)\n    (recur (rest coll) (dec idx))\n  ))","user":"5b250773e4b063e2438bcc21"},{"code":"(fn mynth [l0 n0]\n  (loop [l l0 n n0]\n    (if (zero? n)\n      (first l)\n      (recur (rest l) (dec n)))))","problem":21,"user":"50369e12e4b0af0658af779f"},{"problem":21,"code":"(fn\n  [lst index]\n  (first (drop index lst)))","user":"56df6498e4b0ca2494a095f8"},{"code":"(fn f [x n] (if (<= n 0) (first x) (f (rest x) (- n 1))))","problem":21,"user":"4f0369db535dcb61093f6ab1"},{"problem":21,"code":"(fn [x y]\n\t(last (take (+ y 1) x)))","user":"55e1cf24e4b050e68259b420"},{"code":"(fn [s n]\n   (if (<= n 0)\n      (first s)\n      (recur (rest s) (dec n))\n     )\n  )","problem":21,"user":"52ba43d0e4b07a9af57922cd"},{"problem":21,"code":"(fn nth1 [s n] (if (= n 0)\n              (first s)\n              (nth1 (rest s) (dec n))))","user":"550aeddae4b06e50f9beb135"},{"problem":21,"code":"(fn [seq, idx] \n  (if (= 0 idx)\n    (first seq)\n    (last\n     (take (+ 1 idx) seq))))","user":"5a1f85ffe4b0ff51aa4b3284"},{"problem":21,"code":"(fn [oko o] (last (take (+ o 1) oko)))","user":"57ac6c67e4b0b8559636fc87"},{"problem":21,"code":"(fn nth* [coll n]\n  (loop [coll coll n n]\n    (if (zero? n)\n      (first coll)\n      (recur (rest coll) (dec n)))))","user":"53f42471e4b0742d9025b0fb"},{"code":"(fn [l n] (if (= 0 n) (first l) (recur (rest l) (dec n)) ))","problem":21,"user":"4f91f5b1e4b0dcca54ed6ca7"},{"code":"#(first \n        (drop %2 %))","problem":21,"user":"5267b086e4b03e8d9a4a717a"},{"code":"(fn [sq x] (first (drop x sq)))","problem":21,"user":"4de760a3535d08e6dec9fdf9"},{"code":"#( first (drop %2 %1)  )","problem":21,"user":"4de8a7d7535d08e6dec9fdfe"},{"code":"(fn [ip x]\n         (loop [n 0 m ip]\n           (if (= n x)\n             (first m)\n             (recur (inc n) (rest m)))))","problem":21,"user":"52d2c89ae4b099d49816f0b3"},{"problem":21,"code":"(fn [ls n] (last (take (+ 1 n) ls)))","user":"55fc838be4b0f488688e0674"},{"code":"(fn [l i] (last(take (+ i 1) l)))","problem":21,"user":"4e28ddd1535deb9a81d77efd"},{"problem":21,"code":"#(first (drop %2 %1))\n;;(fn [coll n]\n;;  (loop [coll coll\n;;         accum 0]\n;;    (if (= accum n)\n;;      (first coll)\n;;      (recur (rest coll) (inc accum)))))","user":"5d1be50ce4b02ea6f0fb6986"},{"problem":21,"code":"(fn foo \n  [l n] \n  (if (zero? n) \n      (first l) \n      (foo (next l) (dec n))))","user":"52b49fe0e4b0c58976d9ad2c"},{"code":"(fn [s n] \n  (let [v (vec s)]\n    (v n)))","problem":21,"user":"5367c374e4b0243289761e83"},{"code":"(fn [v pos]\n  (if (= 0 pos) \n        (first v)\n        (recur (rest v) (dec pos))))","problem":21,"user":"4f74fe77e4b0fbe0118ec552"},{"problem":21,"code":"(fn [v n]\n  (if (nil? v)\n    nil\n    (loop [sv v sn n]\n      (if (=  sn 0) (first sv)\n          (recur (rest sv) (- sn 1))))))","user":"5a98ab58e4b0d174b936c78e"},{"problem":21,"code":"(fn [xs x] (if (= x 0) (first xs) (recur (rest xs) (dec x))))","user":"551ad0c8e4b07993ea3788c6"},{"problem":21,"code":"(fn nth_element [input_list n]\n  (loop [input_list input_list output_list '()]\n    (if (= (count output_list) (+ n 1))\n      (first output_list)\n      (recur (rest input_list)\n             (conj output_list (first input_list))))))","user":"57640b2ce4b0994c1922fbe5"},{"problem":21,"code":"#((into {} (map (fn [elt idx] [idx elt]) %1 (range (inc %2)))) %2)","user":"5688e403e4b0dcc4269f4072"},{"code":"(fn [l,n] (second (reduce (fn [a,i] (if (= (first a) 0)(list (- 1) i)(list (- (first a) 1) (second a)))) (list n 0) l)))","problem":21,"user":"50ba5113e4b03e68e4411c7d"},{"problem":21,"code":"(fn [c n]\n  (loop [coll c counter n]\n    (if (zero? counter) (first coll) (recur (rest coll) (dec counter)))))","user":"555b6e82e4b0deb715856e51"},{"problem":21,"code":"(fn [x, n] (last (take (inc n) x)))","user":"55a7497ae4b09e57187da2a2"},{"code":"#(get (reduce conj [] %1) %2)","problem":21,"user":"4fc5e24ee4b0ee37620e1801"},{"code":"(fn [list num] (loop [l list, n num]\n  (if (zero? n) \n    (first l)\n    (recur (rest l) (dec n)))))","problem":21,"user":"4e4c1e8c535dc968683fc4db"},{"problem":21,"code":"(fn nn [a idx]\n  (if (= idx 0)\n    (first a)\n    (nn (rest a) (- idx 1))\n    )\n  )","user":"54c9f362e4b057c6fda3a24c"},{"problem":21,"code":"(fn x [s n]\n  (if (zero? n)\n    (first s)\n    (x (rest s) (dec n))))","user":"58e28ad0e4b005f69f193c99"},{"code":"#((vec %)%2)","problem":21,"user":"504efb61e4b0e7ad84dbc4a8"},{"code":"(fn [seqn n]\n  (loop [seqn seqn\n         n n]\n    (if (zero? n)\n        (first seqn)\n        (recur (rest seqn) (dec n)))))","problem":21,"user":"4ed2a31c535d44c135fd68db"},{"problem":21,"code":"(fn aa [seq n]\n  (let [b (take  (+ n 1) seq)](last b)) )","user":"5e4ba8e8e4b0889a8790a55a"},{"code":"(fn elem\n  ([seq n]\n   (if (= 0 n)\n     (first seq)\n     (elem (rest seq) (dec n)))))","problem":21,"user":"505345d9e4b0517ede0d0a06"},{"problem":21,"code":"(fn attempt2 [coll pos]\n  (println coll pos)\n  (if (= pos 0)\n    (first coll)\n    (attempt2 (rest coll) (- pos 1))))","user":"5e4b60d3e4b0889a8790a553"},{"problem":21,"code":"(fn [vector index]\n  (loop [it 0 elem vector]\n    (if (= it index)\n      (first elem)\n      (recur (+ it 1) (rest elem)))))","user":"5f3b54c0e4b004f08c61c53b"},{"code":"(fn [sqs n] (if (= n 0) (first sqs) (recur (rest sqs) (dec n))))","problem":21,"user":"510747a4e4b05b2b4eee7492"},{"problem":21,"code":"(fn [lst idx] (last (take (inc idx) lst)))","user":"55e59b67e4b050e68259b46f"},{"problem":21,"code":"(fn my-nth [aVector n]\n    (if (= 0 n)\n      (first aVector)\n      (recur (rest aVector)\n             (dec n))))","user":"597f8984e4b0dbe32238d0bf"},{"code":"(fn myNth [collection n]\n  (if (= 0 n) (first collection) (myNth (rest collection) (- n 1))))","problem":21,"user":"4ff203e5e4b0678c553fc331"},{"problem":21,"code":";(fn [list count]\n;  (loop [list list count count]\n;    (if (zero? count)\n;      (first list)\n;      (recur (rest list) (dec count)))))\n;nikelandjelo\n#(first (drop %2 %1))","user":"5a544eeee4b05d388ecb6c24"},{"problem":21,"code":"(fn anth [l n]\n  (if (= n 0)\n    (first l)\n    (anth (rest l) (- n 1))))","user":"57bdfba3e4b05aa3c4741c5f"},{"problem":21,"code":"(fn nth-seq [s n]\n  (if (= n 0)\n    (first s)\n    (nth-seq (rest s) (- n 1))))","user":"556873cee4b0c656e3ff1853"},{"problem":21,"code":"(fn [col index] (if (= 0 index) (first col) (recur (rest col) (dec index))))","user":"5646dff3e4b0284900eef615"},{"code":"(fn ml [xs n] \n  (if (= n 0)\n     (first xs)\n     (ml (rest xs) (- n 1))))","problem":21,"user":"52e276d9e4b09f7907dd1436"},{"code":"(fn [s, n] (last (take (inc n) s)))","problem":21,"user":"4f6c4586e4b07046d9f4efb9"},{"code":"(fn [col n]\n  (loop [c col cnt 0]\n    (if (= cnt n)\n      (first c)\n      (recur (rest c) (inc cnt)))))","problem":21,"user":"51030edbe4b00c483ae17700"},{"problem":21,"code":"(fn bla [a n]\n  (if (= n 0)\n    (first a)\n    (bla (rest a) (dec n))))","user":"5a621702e4b0512ff01cd983"},{"problem":21,"code":"(fn foo[sequenc n] (if (= n 0) (first sequenc) (foo (rest sequenc) (dec n))))","user":"5585806ae4b001b0851d750d"},{"code":"(fn [lst index] \n  ((fn [lst n] \n    (if (= n index)\n        (first lst) (recur (rest lst) (inc n)))) lst 0))","problem":21,"user":"4ede365c535d10e5ff6f5333"},{"problem":21,"code":"#((apply hash-map (interleave (range) %1)) %2)","user":"57579c1be4b02ea1147992f7"},{"problem":21,"code":"; (fn [col n] (...))\n; drop n elements from the beginning:\n; \t(drop n col)\n; take the first element of the col:\n; \t(first _)\n\n(fn [col n]\n  (first \n   (drop n col)))","user":"59e8efe7e4b0249b72820740"},{"problem":21,"code":"#(last (subvec (into [] %1) 0 (+ 1%2)))","user":"58db83f5e4b0a4d5acaab681"},{"problem":21,"code":"(fn func [x y] (if (= y 0) (first x) (func (rest x) (dec y))))","user":"56cef5e8e4b0ea9b8538f762"},{"code":"(fn f [x n] (if (= n 0) (first x) (f (rest x) (- n 1))))","problem":21,"user":"52a07565e4b04e0c58e87bc5"},{"code":"(fn [seq n] (loop [x (min (count seq) n) s seq] (cond (> x 0) (recur (dec x) (rest s)) :else (first s))))","problem":21,"user":"4fcf1755e4b03432b189f40c"},{"problem":21,"code":"(fn [list-p idx]\n  (last (take (+ idx 1) list-p)))","user":"5ac383b8e4b0e27600da7719"},{"problem":21,"code":"(fn [inseq n]\n  (loop [j 0 intermed inseq]\n    (if (= j n)\n      (first intermed)\n      (recur (inc j) (rest intermed)))))","user":"53703287e4b0fc7073fd6e8f"},{"problem":21,"code":"(fn kthElement [X Y]\n    (if (= Y 0) (first X) (kthElement (rest X) (- Y 1)))\n  )","user":"5a05a807e4b01bb0ae8afdb8"},{"problem":21,"code":"(fn [lst x] \n\t(loop [iter 0 res lst]\n  \t(cond \n    \t(= iter x) \n     \t\t(first res)\n     \t:else\n     \t\t(recur (+ iter 1) (rest res))\n     )    \n  )  \n)","user":"6074dfa4e4b069485764de4c"},{"problem":21,"code":"(fn [coll idx]\n  (loop [c coll i idx]\n    (if (= i 0)\n      (first c)\n      (recur (rest c) (dec i)))))","user":"54764cf1e4b0c51c1f4d72a4"},{"code":"(fn [L, n] (if (= n 0) (first L) (recur (rest L) (- n 1))))","problem":21,"user":"522dd30ee4b0a102974208c3"},{"code":"; No restructuring because nth is not allowed\n(fn [l n] (if (zero? n) (first l) (recur (rest l) (dec n))))","problem":21,"user":"4f58fe71e4b0a7574ea7185f"},{"problem":21,"code":"(fn [ls pos] (first (drop pos ls)))","user":"5996ed2fe4b07157cc8daabf"},{"problem":21,"code":"(fn [x y] (if (> y 0) (recur(rest x) (dec y)) (first x)))","user":"58ee51a4e4b056aecfd47da6"},{"problem":21,"code":"(fn [x elem] (loop [i 0 x x] \n          (if (= elem i)\n            (first x)\n            (recur (inc i) (rest x))\n            )\n          )\n  )","user":"5a75da49e4b0512ff01cdacf"},{"code":"(fn [x n] (last(take (+ n 1) x)))","problem":21,"user":"4ec56b5b535d6d7199dd369f"},{"problem":21,"code":"(fn [xs i] (last (take (inc i) xs)))","user":"5604f954e4b08b23635d315d"},{"code":"(fn [v n] (first (subvec (vec v) n (+ 1 n))))","problem":21,"user":"504f43e9e4b0a02f9cffde64"},{"problem":21,"code":"(fn [values pos]\n    (loop [value (first values) \n           remaining (rest values) \n           i 0]\n       (if (= i pos)\n          value\n          (recur (first remaining) (rest remaining) (+ 1 i)) ) ) )","user":"59c3b603e4b0a024fb6ae4e3"},{"code":"(fn nth-elem [x n]\n  (if (= n 0)\n    (first x)\n    (nth-elem (rest x) (- n 1))\n  )\n)","problem":21,"user":"4fa7ef54e4b081705acca1ca"},{"problem":21,"code":"#(first (keep-indexed (fn [index, value](if (= index %2) value)) %))","user":"546ef9f8e4b00cfc9eacc1a6"},{"problem":21,"code":";; error: \"java.lang.ClassCastException: clojure.lang.PersistentList\n;;    cannot be cast to clojure.lang.IFn\"\n;; I tried first to repeatedly remove the first item...\n;;(fn [s n]\n;;  (first (repeatedly n (rest s))))\n(fn [s n]\n  (last (take (+ n 1) s)))","user":"60917abde4b00e9e6653c3d5"},{"code":"#((apply hash-map (interleave (iterate inc 0) %1)) %2)","problem":21,"user":"4f05a9cf535dcb61093f6bfc"},{"problem":21,"code":"(fn [l n] \n  (if (= 0 n)\n    (first l)\n    (recur (rest l) (- n 1))))","user":"5c3ee9bde4b08cd430848e8b"},{"code":"(fn f [coll n]\n      (first (drop n coll)))","problem":21,"user":"538c9144e4b0b51d73faae5d"},{"problem":21,"code":"(fn [col index] ( \n  let [counter (atom -1)]\n                  (first (filter \n                   (fn [item] (do \n                     (swap! counter inc)\n                     (= @counter index)\n                                )) col))))","user":"555883c5e4b0deb715856e2d"},{"problem":21,"code":"(fn [coll n]\n  (last \n    (take (+ n 1) coll)))","user":"56416212e4b08d4f616f5efa"},{"code":"(fn [s idx] (last (take (+ idx 1) s)))","problem":21,"user":"53098ffae4b02e82168697b8"},{"code":"(fn [target index] \n  (first (nthrest target index)))","problem":21,"user":"5230ba23e4b0035e815da393"},{"problem":21,"code":"(fn [x y]\n  (if (= y 0) \n    (first x) \n    (recur (rest x) (dec y))\n    )\n  )","user":"5500e6ebe4b07d26eda61d69"},{"problem":21,"code":"(fn [x i] (if (< i 1) (first x) (recur (rest x) (dec i))))","user":"58aae714e4b01a0c0b23298e"},{"problem":21,"code":"(fn [s n] (cond (empty? s) s (= n 0) (first s) :else (recur (rest s) (dec n))))","user":"54e3df6ae4b024c67c0cf7e3"},{"code":"(fn [seq n]\n  (loop [list seq\n          num n]\n      (if (= num 0)\n          (first list)\n          (recur (rest list)\n                 (dec num))\n      )\n    )\n)","problem":21,"user":"5027bbe3e4b01614d1633fef"},{"problem":21,"code":"(fn [c i] (if (= 0 i) (first c) (recur (rest c) (dec i))))","user":"559a9a3de4b066d22e731f45"},{"code":"(fn [lst n] (loop [c n arry lst] (if (> c 0) (recur (dec c) (rest arry)) (first arry))))","problem":21,"user":"5256a1d4e4b0541d1855ba29"},{"problem":21,"code":"(fn [xs pos] (first (drop pos (seq xs))))","user":"51182fd2e4b0d345b8c2a1fd"},{"problem":21,"code":"(fn [the-seq idx] (last (take (inc idx) the-seq)))","user":"56849b93e4b04eec3ec5cfbf"},{"problem":21,"code":"(fn r [s n] (if (= n 0) (first s) (r (rest s) (- n 1))))","user":"556766c1e4b0c656e3ff1840"},{"problem":21,"code":"(fn [seq idx] (if\n    (= 0 idx)\n    (first seq)\n    (recur (rest seq) (dec idx))))","user":"58bef424e4b021aa9917eccb"},{"code":"(fn [lista index] (\n                         letfn [(get-elemento [lista target-index actual-index] (if (= target-index actual-index) (first lista) (get-elemento (rest lista) index (+ actual-index 1)))  )]\n                         (get-elemento lista index 0)\n                         \n                         ))","problem":21,"user":"505cdcb7e4b0e6aca564be03"},{"code":"#(get (vec %1) %2)","problem":21,"user":"4df168bd535d08e6dec9fe1d"},{"problem":21,"code":"(fn [coll i]\n  (if (zero? i)\n    (first coll)\n    (recur (next coll) (dec i))))","user":"55ea0780e4b0121d4835fda7"},{"code":"(fn f [c i] (get (vec c) i))","problem":21,"user":"50b64b55e4b0a86f8358ca6b"},{"code":"(fn [l n] (let [i (atom -1)] (first (filter (fn [x] (= (swap! i inc) n)) l))))","problem":21,"user":"4f03c039535dcb61093f6b5e"},{"problem":21,"code":"(fn my-nth[s n]\n  (first \n   ((apply comp \n           (repeat n rest)) s)))","user":"5018878ce4b029375d2a5056"},{"code":"(fn [x y] (first (nthnext x y)) )","problem":21,"user":"4f0d45de535d0136e6c22315"},{"code":"(fn  n-ith [l i]\r\n      (if (<= i 0)\r\n        (first l)\r\n        (n-ith (rest l) (- i 1)))\r\n      )","problem":21,"user":"4f9e0000e4b0dcca54ed6d2a"},{"problem":21,"code":"(fn dfs [x i]\n     (if (= i 0)\n       (first x)\n       (dfs (next x) (dec i))))","user":"56669819e4b0e91d5f5c5674"},{"problem":21,"code":"(fn [l n]\n  (loop [l l, acc n]\n    (if (and (seq l) (not= acc 0))\n      (recur (rest l) (dec acc))\n      (first l))))","user":"56cb3010e4b0ea9b8538f725"},{"code":"(fn\r\n  [li n]\r\n  (if (= n 0)\r\n    (first li)\r\n    (recur (rest li) (dec n))))","problem":21,"user":"4e8a0c82535d3e98b802328d"},{"problem":21,"code":"(fn myNth [seq n] (if (= 0 n) (first seq) (myNth (rest seq) (- n 1)) ))","user":"554b8474e4b0a04f79299588"},{"problem":21,"code":"(fn [s n] \n  (loop [s s\n         i n]\n    (if (= i 0)\n      (first s)\n      (recur (rest s) (dec i)))))","user":"54ad1d30e4b09f271ff37cdf"},{"problem":21,"code":"(fn [lst n] \n  ((apply comp (cons first (repeat n rest))) lst))","user":"53f73cece4b0de5c4184855b"},{"code":"(fn [l n] \n  (->> l\n       (take (inc n))\n       last))","problem":21,"user":"52173464e4b082aa80a88c75"},{"problem":21,"code":"#(.get %1%2)","user":"5d0aab50e4b0cc9c91588220"},{"problem":21,"code":"(fn [coll k] (loop [values coll i 0] (if (= i k) (first values) (recur (rest values) (inc i)))))","user":"58562083e4b0f14aab7c86eb"},{"code":"(fn [s n]\n  (loop [sq s c 0]\n    (if (== c n)\n      (first sq)\n      (recur (rest sq) (inc c)))))","problem":21,"user":"4e99819a535dbda64a6f6b66"},{"problem":21,"code":"(fn [x i] (if (= 0 i) (first x) (recur (rest x) (dec i))))","user":"553bc237e4b09218d5f4500a"},{"code":"(fn [x n]\n  (if (= n 0) (first x)\n      (recur (rest x) (- n 1))))","problem":21,"user":"4f2b1893e4b0d6649770a047"},{"problem":21,"code":"(fn [xs n]\n (if (= n 0)\n   (first xs)\n   (recur (rest xs) (dec n))))","user":"566ff0a1e4b0a866af6896ec"},{"code":"(fn ! [l n] (if (= n 0) (first l) (! (rest l) (dec n))))","problem":21,"user":"4ddb696b535d02782fcbe9fa"},{"problem":21,"code":"(fn my-nth\n  [seq n]\n  (if (zero? n)\n    (first seq)\n    (recur (rest seq) (dec n))))","user":"5f4eb036e4b0102c75033969"},{"problem":21,"code":"(fn blu [x n] (if (== 0 n) (first x) (blu (rest x) (- n 1))))","user":"54f76b83e4b01ecee9d8881b"},{"code":"(fn [coll n]\n  (if (zero? n)\n    (first coll)\n    (recur (rest coll) (dec n))))","problem":21,"user":"4e5bff2b535d8a8b8723a2bd"},{"problem":21,"code":"(fn [t n] (last(take(+ 1 n) t)))","user":"593fcb0ce4b069cdc2982bea"},{"problem":21,"code":"(fn \n    [x n]\n    (let [x2 (vec x) nn 0]\n      (x2 n)))","user":"5d6e4d1ee4b04d129b00f2c4"},{"problem":21,"code":"(fn nth-item [in-any-sequence nth-index]\n  (if (= 0 nth-index)\n    (first in-any-sequence)\n    (nth-item (rest in-any-sequence) (- nth-index 1)) ))","user":"57a17145e4b0c3d858beb8eb"},{"problem":21,"code":"(fn element-at [list n]\n(first (nthnext list n)))","user":"54117417e4b01498b1a719c5"},{"problem":21,"code":"(fn [sq, idx] (last(take(+ 1 idx) sq)))","user":"5fed2610e4b05ac5b16ea1c7"},{"problem":21,"code":"(\n       fn nth2 [col nr]\n       (if (= nr 0)\n         (first col)\n         (nth2 (rest col) (- nr 1)))\n       )","user":"593d63f7e4b069cdc2982ba5"},{"code":"(fn [seq n] \r\n  (if (= 0 n) \r\n  (first seq) \r\n  (recur (rest seq) (dec n))))","problem":21,"user":"4dbe5975535d020aff1edf5d"},{"code":"(fn [x i] get((into [] x) i))","problem":21,"user":"513e9aa0e4b02b2a3d8235c4"},{"problem":21,"code":"(fn [l n] (last (take (+ n 1) l)) )","user":"5476894ce4b0c51c1f4d72a6"},{"problem":21,"code":"#(first (keep-indexed (fn [idx item] (if (= idx %2) item) ) %1))","user":"56f68677e4b08e7d20b96826"},{"problem":21,"code":"(fn nth-element [s i]\n  (loop [j 0 lst s]\n    (if (= j i)\n      (first lst)\n      (recur (inc j) (next lst))\n      )\n    )\n  )","user":"5a2e39fce4b09cafd31c7f77"},{"problem":21,"code":"(fn [x, y] (last(take (+ 1 y) x)) )","user":"548018e3e4b0c51c1f4d7330"},{"problem":21,"code":"(fn [xs n] (if (> n 0) (recur (rest xs) (dec n)) (first xs)))","user":"5ec3a13ae4b08d0ec38692b9"},{"problem":21,"code":"(fn haha [input n] (if (= n 0) (first input) (haha (rest input) (- n 1))))","user":"56b49f72e4b0982f16b37e23"},{"problem":21,"code":"(fn [s c] (last (take (inc c) s)))","user":"5e71b6e7e4b085ba37836dbe"},{"problem":21,"code":"(fn [coll val]\n   (first (drop val coll)))","user":"591a6c9fe4b09b4ee5954bd6"},{"problem":21,"code":"(fn [v n]\n  (loop [i 0\n         arr v]\n    (if(= i n)\n      (first arr)\n      (recur (inc i) (rest arr))\n    )\n  )\n)","user":"55d93e59e4b0e31453f64ac7"},{"problem":21,"code":"(fn [s n] \n  (loop [x s curr (first x)\n       count 0]\n    (if (= count (+ n 1))\n      curr\n     (recur (rest x) (first x) (+ count 1)))))","user":"55cc4492e4b0e31453f64a0e"},{"code":"(fn [s n]\n  ((vec s) n))","problem":21,"user":"530e5469e4b08068f379ecb7"},{"code":";;#(nth % (dec (count %)))\n(fn [coll, n]\n  ((apply comp (cons first (repeat n rest))) coll))","problem":21,"user":"511ed0bae4b03e81d390ac2d"},{"code":"(fn [l,n] (first (drop n l)))","problem":21,"user":"514b66f4e4b0bd81940b86cb"},{"problem":21,"code":"(fn [s n] (if (> n 0) (recur (next s) (dec n)) (first s)))","user":"559e7848e4b08a52bd4f97d4"},{"code":"(fn [x n]\n  (if (= 0 n) (first x) (recur (rest x) (dec n))))","problem":21,"user":"4e88feef535d8b9bb0147ca8"},{"problem":21,"code":"(fn f [l n]\n  (if (> n 0)\n    (f (rest l) (dec n))\n    (first l))\n)","user":"55cfa46ce4b0e31453f64a31"},{"problem":21,"code":"(fn Nth [sq nm] (last (take (inc nm) sq)))","user":"59b7120fe4b05c620303ca3b"},{"code":"(fn help [s n]\r\n             (if (nil? s)\r\n                 nil\r\n                 (if (zero? n)\r\n                     (first s)\r\n                     (help (rest s) (- n 1)))))","problem":21,"user":"501577ade4b0aaedd199e911"},{"code":"(fn this [list count]\n  (if (= 0 count) (first list) (this (rest list) (- count 1))))","problem":21,"user":"4e8cbc9f535d65386fec212d"},{"code":"(fn [xs n]\r\n  (first\r\n    (drop n\r\n      (drop-last\r\n        (- (count xs) (+ n 1)) xs))))","problem":21,"user":"4dc4c869535d8a4b2fd74280"},{"problem":21,"code":"(fn [list index] \n  (->> list\n       (keep-indexed #(if (= %1 index) %2))\n       (first)))","user":"5e2efec9e4b05b4b015161fd"},{"problem":21,"code":"(fn [vals pos]\n  (if (= 0 pos)\n    (first vals)\n    (recur (rest vals) (dec pos))\n  )\n  )","user":"59537716e4b066ee0a44aee5"},{"code":"(fn f [x y] (if (= y 0) (first x) (f (rest x) (- y 1))))","problem":21,"user":"4f774b17e4b0fbe0118ec57b"},{"code":"(fn my-nth [the-seq n]\n  (if (= n 0)\n    (first the-seq)\n    (my-nth (rest the-seq) (- n 1))\n  )\n)","problem":21,"user":"4e3df106535deb9a81d77f58"},{"problem":21,"code":"#(if (= 0 %2)\n    (first %1)\n  \t(recur (next %1) (- %2 1)))","user":"5722744ae4b0c5bde472c0cb"},{"code":"(fn [s n]\n  \"Returns the nth element from sequence s without using the nth function\"\n  (loop [theseq s x 0]\n    (if (= x n)\n      (first theseq) \n      (recur (rest theseq) (inc x)))))","problem":21,"user":"515ebde3e4b01e5d11ccd0a8"},{"problem":21,"code":"(fn [s which]\n    (loop [current 0\n           list s]\n       (if (= current which)\n         (first list)\n         (recur (inc current) (rest list)))\n      )\n    )","user":"5b269cf3e4b063e2438bcc35"},{"code":"(fn nnth [l n] (if (= n 0) \n  (first l) (nnth (rest l) (- n 1))))","problem":21,"user":"4ff4c9dae4b0678c553fc360"},{"code":"(fn philm [x y] (if (= 0 y) (first x) (philm (rest x) (- y 1))))","problem":21,"user":"4f524d11e4b03ad3f0c10d34"},{"code":"(fn th [sq pos] (if (= pos 0) (first sq) (th (rest sq) (- pos 1))))","problem":21,"user":"512b8728e4b04d059cf1fd16"},{"problem":21,"code":"(fn el [l n]\n  (if\n    (= n 0)\n    (first l)\n    (el (rest l) (- n 1))))","user":"5566434ee4b0c656e3ff182f"},{"code":"#(let [m (zipmap (range 0 (count %1)) %1)]\n   (get m %2))","problem":21,"user":"4f29eb2ae4b0d6649770a037"},{"problem":21,"code":"(fn x[s n](if (zero? n) (first s) (recur (rest s) (dec n))))","user":"5849ac5fe4b089d5ab817ed7"},{"problem":21,"code":"#(first (subvec (into [] %1) %2))","user":"55994103e4b031d6649c9ba6"},{"problem":21,"code":"(fn [x y]\n  \n  (get (into [] x) y)  \n )","user":"55a122d9e4b0acc240e3150a"},{"code":"#(loop [col %1 cnt %2] (if (zero? cnt) (first col) (recur (rest col)(dec cnt))))","problem":21,"user":"50463347e4b011c5dfee771e"},{"problem":21,"code":"(fn [array n]\n  (if (= n 0)\n   (first array)\n    (recur (rest array) (dec n))))","user":"57d7ca32e4b0bd073c2023df"},{"code":"(fn [seq index]\n    (if (= index 0)\n      (first seq)\n      (recur (rest seq) (dec index))))","problem":21,"user":"52d2e2a9e4b099d49816f0b8"},{"code":"#(first (drop %2 %1))\n;; #((vec %) %2)","problem":21,"user":"51fdbf73e4b0f1313d468a51"},{"problem":21,"code":"(fn [elems, ord]\n  (if (pos? ord)\n    (recur (rest elems) (dec ord))\n    (first elems)))","user":"5267c74be4b03e8d9a4a7183"},{"code":"(fn [s ct]\n  (loop [curr 0\n    s s]\n    (if (= curr ct) (first s)\n    (recur (inc curr) (next s)))))","problem":21,"user":"4f1473eb535d64f603146439"},{"problem":21,"code":"(fn [sequ n] (if (<= n 0) (first sequ) (recur (rest sequ) (- n 1))))","user":"5d5e0259e4b0c9e5857d4fef"},{"problem":21,"code":"(fn [l n] (loop [i 0\n                 ll l]\n  (if (= i n) (first ll) (recur (+ i 1) (rest ll)))))","user":"5ac91d90e4b0e27600da77bd"},{"code":"(fn [collection index] \n  (loop [collection collection counter 0]\n    (if (= counter index) \n      (first collection)\n      (recur (rest collection) (inc counter)))))","problem":21,"user":"517a995de4b01aacecbecbef"},{"problem":21,"code":"(fn my-nth [l n]\n  (loop [ls l cnt n end 0]\n    (if (= cnt end)\n      (first ls)\n      (recur (rest ls) cnt (+ 1 end)))))","user":"5455573be4b0e397800069e0"},{"problem":21,"code":"(fn my-nth\n  [lst n]\n  (if (== n 0)\n    (first lst)\n    (my-nth (rest lst) (- n 1))))","user":"5db5f16ce4b010eb3c36cd34"},{"code":"(fn n [x,y] (.get x(int y)))","problem":21,"user":"538dc2d1e4b0b51d73faae75"},{"problem":21,"code":"(fn [m n] (loop [data m cnt n]\n   (if(zero? cnt)\n     (first data)\n     (recur (rest data) (dec cnt))\n    )\n   )\n)","user":"564a985be4b0284900eef65c"},{"code":"(fn [s i]\n  (if (<= i 0) (first s)\n      (recur (rest s) (- i 1))))","problem":21,"user":"4fcaa4bae4b0ee37620e1854"},{"code":"(fn [coll x] ((apply comp (cons first (repeat x rest))) coll))","problem":21,"user":"4f0f335f535d0136e6c22334"},{"problem":21,"code":"(fn [sq n]\n  (apply second (filter #(= (first %) n) (partition 2 (interleave (range) sq)))))","user":"59780ee5e4b01722bebd4d01"},{"problem":21,"code":"(fn[sq n] (if (= n 0) (first sq) (first  (second  (partition-all n sq)) )))","user":"508daac4e4b0f17d83ea26c0"},{"code":"(fn nel [l n ] (if (zero? n) (first l) (nel (rest l) (dec n))))","problem":21,"user":"505ad56de4b021387fb8985b"},{"problem":21,"code":"#(loop [l %1\n        ind %2]\n   (if (= 0 ind)\n     (first l)\n     (recur (rest l) (dec ind))))","user":"56f59df1e4b046a417f92075"},{"problem":21,"code":"(fn nt [lst n] (if (= 0 n) (first lst) (nt (rest lst) (- n 1))))","user":"53f5a61ee4b0db01ade6f9d2"},{"problem":21,"code":"(fn [col n]\n      (first (drop n col)))","user":"5f621940e4b02876ed9fd009"},{"problem":21,"code":"(fn [s n]\n  (cond\n   (= n 0) (first s)\n   :else\n   (loop [i 0 r s]\n    (if (= i n)\n      (first r)\n      (recur (inc i) (rest r))))))","user":"55aaa36fe4b0988bba2ad94f"},{"code":"(fn [coll n]\n  ((apply comp, (cons first (repeat n rest))\n    ) coll))","problem":21,"user":"52b63b14e4b0c58976d9ad42"},{"code":"#(get (into [] %) %2 )","problem":21,"user":"520b4b95e4b0b022ef140c80"},{"problem":21,"code":"(fn [col i]\n  (loop [idx 0\n         remaining col]\n    (if (= idx i)\n      (first remaining)\n      (recur\n       (inc idx)\n       (rest remaining)))))","user":"5cebdfd4e4b0a17bb84e2be9"},{"problem":21,"code":"(fn n-x [x, y]\n(if (> y 0) (n-x (rest x) (- y 1)) (first x))\n )","user":"562f2d4ee4b0ab312c17ebc6"},{"code":"(fn nthelem [lst n] (if (= n 0) (first lst) (nthelem (rest lst) (- n 1))))","problem":21,"user":"5384e2cee4b06839e8705ef7"},{"problem":21,"code":"(fn [coll k] ((into {} (map-indexed (fn [idx itm] [idx itm]) coll)) k))","user":"5743b90ce4b0c285004e8aae"},{"problem":21,"code":"(fn [s n]\n  (loop [s s cpt 0]\n    (if (== cpt n)\n      (first s)\n      (recur (rest s) (inc cpt)))))","user":"5a805f7ee4b00b71e582a04d"},{"problem":21,"code":"(fn [a-seq n]\n  (loop [tmp-seq a-seq cnt n]\n    (if (zero? cnt)\n      (first tmp-seq)\n      (recur (rest tmp-seq) (dec cnt)))))","user":"54f49c39e4b0f2f3c5226e81"},{"problem":21,"code":"(fn valueOf [lst, i] (if (= i (- (count lst) 1)) (last lst) (valueOf (butlast lst) i)))","user":"592d58b3e4b072a2710fcf6d"},{"problem":21,"code":";;(fn nth* [x y]\n;;    (if (= y 0)\n;;        (first x)\n;;        (nth* (rest x) (- y 1))))\n\n;#(first (drop %2 %1))\n\n#(first (drop %2 %))","user":"565487dce4b0f9d632dd8482"},{"code":"(fn nthelem [x n] (first (nthrest x n)))","problem":21,"user":"50ad274be4b00424fd5bf71e"},{"problem":21,"code":"(fn nstrip [coll n] \n  (if (= 0 n) \n    (first coll) \n    (nstrip (rest coll) (- n 1) )\n  )\n)","user":"5c298c79e4b07e362c2305de"},{"code":"(fn\n  [liste n]\n  (loop [i 0 r liste]\n    (if (< i n)\n      (recur (inc i) (rest r))\n      (first r)\n      )))","problem":21,"user":"4f32d340e4b0d6649770a096"},{"code":"(fn [data nth-elem]\n  (loop [d data n nth-elem]\n    (if (= 0 n)\n      (first d)\n      (recur (rest d) (dec n)))))","problem":21,"user":"4eb1dd39535d7eef30807345"},{"problem":21,"code":"(fn [ls i] (if (= i 0) (first ls) (recur (rest ls) (dec i))))","user":"5a37b6dbe4b001c08efc0c88"},{"code":"(fn f [v n] \n  (cond (= 0 n) (first v)\n  :else (f  (rest v) (dec n))))","problem":21,"user":"4e8b557c535d65386fec2119"},{"problem":21,"code":"(fn [lst idx] (first (keep-indexed #(if (= %1 idx) %2) lst)))","user":"59cc6c1ee4b0a024fb6ae5d2"},{"problem":21,"code":"#(loop [cnt %2 tmp-list %1]\n   (if (zero? cnt)\n     (first tmp-list)\n     (recur (dec cnt) (rest tmp-list))))","user":"56314595e4b0bfe05bf11790"},{"code":"(fn [lst n]\n  (loop [n n\n         el (first lst)\n         l (rest lst)]\n    (if (zero? n)\n        el\n        (recur (dec n) (first l) (rest l)))))","problem":21,"user":"4ffc10aae4b0678c553fc3d6"},{"problem":21,"code":"(fn [a n] \n     (if (not (zero? n)) \n       (if a \n         (recur (rest a) (dec n))\n         a) \n       (first a)))","user":"5d02fe44e4b0cc9c915881c0"},{"problem":21,"code":"(fn [coll cpt]\n  (loop [coll coll, index 0]\n    (if (seq coll)\n      (if (= index cpt)\n        (first coll)\n        (recur (rest coll) (inc index)))\n      nil\n      )))","user":"5e76274ce4b085ba37836deb"},{"problem":21,"code":"(fn [coll n]\n  (loop [c coll, nm n]\n \t(if (= nm 0)\n      (first c)\n      (recur (rest c) (dec nm)))))","user":"5660fe2ce4b068f2fe63dc5e"},{"problem":21,"code":"(fn [x ind] (-> (filter #(= (first %) ind) (map-indexed vector x)) last last))","user":"5a38f70be4b001c08efc0ca7"},{"problem":21,"code":"(fn [elements n]\n  (if (= n 0)\n    (first elements)\n    (recur (drop 1 elements) (- n 1))))","user":"5d96edeae4b0d3f9b434ad35"},{"code":"(fn[lst x] (first (drop x lst)))","problem":21,"user":"51e85d2de4b048bc21b181ee"},{"problem":21,"code":"(fn\n  [coll n]\n  (first (drop n coll)))","user":"562f9f5ae4b0ab312c17ebce"},{"code":"(fn [lis n] ( loop [cnt n acc lis] (if (zero? cnt)(first acc) (recur (dec cnt) (rest acc)) ) ))","problem":21,"user":"53852e84e4b06839e8705efd"},{"code":"(fn [coll n] ( (vec coll) n))","problem":21,"user":"513fbe89e4b00f13ea1bd894"},{"problem":21,"code":"(fn [s i] (-> (+ i 1) (take s) last))","user":"50f4eee0e4b004d36493052d"},{"problem":21,"code":"(fn [coll n]\n  (loop [i 0 acc coll]\n    (if (= i n)\n      (first acc)\n      (recur (inc i) (rest acc)))))","user":"5576f299e4b05c286339e077"},{"code":"(fn [l n]\n  (if (= n 0) \n    (first l)\n    (recur (rest l) (dec n))))","problem":21,"user":"4f535e75e4b0a7574ea717c6"},{"problem":21,"code":"#(first(last (split-at %2 %1)))","user":"5cd56c72e4b0ccb061962930"},{"code":"(fn [col idx]\n  (loop [c col, i 0]\n    (if (= i idx)\n      (first c)\n      (recur (rest c) (inc i)))))","problem":21,"user":"527dc2aee4b0757a1b17138d"},{"problem":21,"code":"(fn [xs n]\n  (first (drop n xs))\n)","user":"5b0251cfe4b0cc2b61a3bd4d"},{"code":"(fn [c i] (if (= i 0) (first c) (recur (rest c) (dec i))))","problem":21,"user":"4e9609ad535dbda64a6f6b3e"},{"code":"(fn [l n]\n  (if (zero? n) (first l)\n      (recur (rest l) (dec n))))","problem":21,"user":"51fa90aae4b0f1313d4689e0"},{"code":"(fn [s x]\n  (if (> x 0)\n    (recur (rest s) (dec x))\n    (first s)\n  )\n)","problem":21,"user":"50c8899ee4b00bb60fe0c541"},{"code":"(fn [l index]\n  (loop [cnt 0 re l]\n    (if (= index cnt)\n      (first re)\n      (recur (+ cnt 1) (rest re))\n    )\n  )\n)","problem":21,"user":"4ea09d5c535d7eef308072a9"},{"code":"(fn [s n]\n  (cond (zero? n) (first s) \n   :else (recur (rest s) (dec n))))","problem":21,"user":"50655366e4b0c838e409d557"},{"code":"(fn [ls x] (last (take (inc x) ls)))","problem":21,"user":"50fd4838e4b033b9c38d78ce"},{"code":"(fn [lista pos] (loop [temp lista, index 0]\n(if (= pos index) (first temp) (recur (rest temp) (inc index)))))","problem":21,"user":"524b1a95e4b09eba1c0223c2"},{"code":"(fn [s n]\n  (cond\n   (empty? s) nil\n   (= n 0) (first s)\n   :else (recur (rest s) (- n 1))))","problem":21,"user":"52709265e4b03e8d9a4a73b2"},{"code":"(fn f [l,n] (if (= n 0) (first l) (f (rest l) (- n 1))))","problem":21,"user":"5241ea66e4b076e5d3121f39"},{"code":"#(\n  loop [seq %1 pos %2]\n  (if (pos? pos)\n    (recur (rest seq) (dec pos))\n    (first seq))\n  )","problem":21,"user":"52d079f2e4b07d0d72b273ba"},{"problem":21,"code":"(fn Nth [lst, n]\n  (if (= n 0) (first lst) \n    (Nth (rest lst) (- n 1))))","user":"5400fd43e4b0de5c4184861c"},{"problem":21,"code":"#(loop [coll %1 idx 0] (if (= idx %2) (first coll) (recur (rest coll) (inc idx))))","user":"5374721be4b06d7f452d9e22"},{"problem":21,"code":"#(loop [x 0 arr %]\n   (if (= x %2)\n     (first arr)\n     (recur (inc x) (next arr))\n     )\n   )","user":"56cefadee4b0ea9b8538f763"},{"code":"(fn foo [lista n]\n  (if (= n 0)\n    (first lista)\n    (foo (rest lista) (dec n))\n  )\n)","problem":21,"user":"51cec903e4b0e42293a2255c"},{"problem":21,"code":"(fn [x y] (get (#(zipmap '(0 1 2 3) x)) y))","user":"6081e475e4b0736b099e42d6"},{"problem":21,"code":"#(first (drop %2 %1))\n\n;((vec %1) %2)","user":"56b295f7e4b0982f16b37e08"},{"problem":21,"code":"; assuming non empty seq and index >= seq length\n\n(fn [seq index]\n  (loop [s seq\n         i 0]\n    (if (= i index)\n      (first s)\n      (recur (rest s)\n             (inc i)))))","user":"4f4391a9e4b0d7d3c9f3fd23"},{"code":"( fn [seq index] (\n  if (zero? index)\n    ( first seq )\n    ( recur (rest seq) (dec index) )\n  )\n)","problem":21,"user":"4ed51277535d10e5ff6f52d4"},{"code":"(fn getN [xs n]\n        (letfn [(getNh [xs n i]\n                    (if (= n i)\n                        (first xs)\n                        (getNh (rest xs) n (+ i 1))))]\n                (getNh xs n 0)))","problem":21,"user":"4f859146e4b033992c121c46"},{"code":"(fn [x y]\r\n  (if (= y 0)\r\n    (first x)\r\n    (recur (rest x) (- y 1))))","problem":21,"user":"4f341320e4b0e243712b1eb4"},{"problem":21,"code":"(fn n-th [xs n]\n  (cond (= n 0) (first xs)\n        :else (n-th (rest xs) (- n 1))))","user":"5488537be4b0e286459a11cf"},{"code":"(fn [x y] \n\t(last (take (+ y 1) x)))","problem":21,"user":"519f0f81e4b087743fad219b"},{"problem":21,"code":"(fn f [xs n] (if (zero? n)\n                (first xs)\n                (f (rest xs) (dec n))))","user":"5bd9549ee4b0ed4b8aab4bf0"},{"problem":21,"code":"(fn foo [lst x] \n  (if (= x 0)\n    (first lst)\n    (recur (rest lst) (dec x))))","user":"55c216dde4b0e31453f64974"},{"problem":21,"code":"(fn [items nummy] (last (take (+ nummy 1) items)))","user":"56ef11efe4b04a395b9a045b"},{"code":"(fn [s n]\n  ((fn [s n count]\n    (if (= count n)\n        (first s)\n        (recur (next s) n (inc count))))\n  s n 0))","problem":21,"user":"4e50c894535dc968683fc4ee"},{"code":"(fn ent [x c]\n  (if (= c 0)\n      (first x)\n      (ent (rest x) (- c 1))))","problem":21,"user":"4f1f8fae535d64f6031464a3"},{"problem":21,"code":"(fn [lst n]\n  (if (= n 0) (first lst) (recur (rest lst) (dec n)) )\n  )","user":"5c6f0755e4b0fca0c162275d"},{"problem":21,"code":"(fn [seq ind] (last (take (+ 1 ind) seq)))","user":"54f5aa4ce4b0f2f3c5226e94"},{"code":"(fn [l n] (loop [lst l th n] (if (= th 0) (first lst) (recur (rest lst) (dec th)))))","problem":21,"user":"5171f684e4b0d70c8bbbf248"},{"code":"(fn [x n] \n  (last (take (+ n 1) x)))","problem":21,"user":"5070a7f5e4b0e3170b5a8675"},{"problem":21,"code":"(fn f [coll n]\n  (if (= n 0)\n    (first coll)\n    (f (rest coll) (- n 1))\n    ))","user":"56f02c90e4b04a395b9a0472"},{"code":"(fn [lst n] \n  (if (= n 0) \n    (first lst)\n    (recur (rest lst) (dec n))))","problem":21,"user":"4e7d1c22535db169f9c796c5"},{"code":"(fn mynth [y x] (last (take (+ 1 x) y)))","problem":21,"user":"4eaed3a7535d7eef30807328"},{"problem":21,"code":"(fn [s pos]\n  (loop [idx 0\n         elements s]\n    (if (= idx pos)\n      (first elements)\n      (recur (inc idx) (rest elements)))))","user":"52f8db41e4b047fd55836fdc"},{"problem":21,"code":"(fn[x y]\n  (get (vec x) y))","user":"53b9b443e4b047364c0444ec"},{"problem":21,"code":"(fn [seq pos]\n  (loop [seq seq pos pos]\n    (if (= pos 0)\n      (first seq)\n      (recur (rest seq) (dec pos)))))","user":"54ad4863e4b09f271ff37ce0"},{"problem":21,"code":"(fn[a b] (get(vec a)b))","user":"54070647e4b0addc1aec66b2"},{"problem":21,"code":"(fn [values n]\n  (last (take (inc n) values)))","user":"595ff029e4b066ee0a44b078"},{"problem":21,"code":"#(first (drop (- %2 0) %1))","user":"5f118312e4b091ba50b4dbaa"},{"code":"(fn this\n  \t\t([counter seq n] (if (= counter n) (first seq) (this (+ counter 1) (rest seq) n)))\n\t\t\t([seq n] (this 0 seq n))\n\t\t\t)","problem":21,"user":"5048bcf8e4b06e644c63f1ae"},{"problem":21,"code":"(fn [se, n] (first (drop n se)))","user":"5c316de5e4b0d62ef62d9f2b"},{"problem":21,"code":"(fn in-seq [seq i]\n  (loop [x 0 ret seq]\n    (if (< x i)\n      (do\n        (println x)\n        (recur (inc x) (rest ret))\n      )\n      (first ret)\n    )\n  )\n)","user":"554b975ae4b0a04f79299592"},{"code":"(fn blah [a b] \n  (if (= b 0) \n    (first a) \n    (blah (rest a) (- b 1))\n))","problem":21,"user":"4f16d6ed535d64f60314644f"},{"problem":21,"code":"(fn [v i] \n  (last \n   (take (+ 1 i) v \n         \n   )\n  )\n  )","user":"4f6ab0b7e4b07046d9f4efa1"},{"problem":21,"code":"(fn [l n]\n  (if (= 0 n)\n    (first l)\n    (recur (rest l) (dec n))))","user":"5405fdcce4b0addc1aec6683"},{"problem":21,"code":"(fn _nth [lst no] (if (= no 0) (first lst) (_nth (rest lst) (- no 1))))","user":"56238371e4b03f08ee9a9233"},{"problem":21,"code":"(fn [seqn n] \n  (if\n    (zero? n)\n    (first seqn)\n    (recur (rest seqn) (dec n))))","user":"578f8a0ae4b0ebec4cfb7596"},{"code":"(fn f [list n] \n  (if (= n 0) \n    (first list) \n    (f (rest list) (- n 1))))","problem":21,"user":"4e67b0aa535d8ccf87e9fe80"},{"problem":21,"code":"(fn [l n]\n  (if (zero? n)\n    (first l)  \n  (recur (rest l) (dec n))))","user":"57b88091e4b0fbc9809a27e1"},{"problem":21,"code":";(fn get-nth [coll index]\n;  (if (zero? (- (count coll) (inc index)))\n;    (last coll)\n;    (get-nth (butlast coll) index)\n;    ))\n\n#(first (drop %2 %1))","user":"59e0f38ae4b08badc2a0c500"},{"code":"(fn my-nth [lst n]\n  (if (zero? n)\n    (first lst)\n    (my-nth (rest lst) (dec n))))","problem":21,"user":"50720885e4b0e3170b5a8689"},{"code":"#(get (apply vector %1) %2 )","problem":21,"user":"52a04f0ee4b04e0c58e87bc1"},{"problem":21,"code":"(fn [sq n] (last ( take (inc n) sq)))","user":"5663cccee4b0e91d5f5c5655"},{"code":"(fn [col n-th] (second (take-nth n-th col)))","problem":21,"user":"51dad73ae4b09f6bc204eedd"},{"code":"(fn  [l i]\n  (if (zero? i)\n    (first l)\n    (recur (rest l) (dec i))))","problem":21,"user":"505b9084e4b032b709c81371"},{"problem":21,"code":"(fn [coll n]\n  (if (zero? n)\n  (first coll)\n  (recur (rest coll)(dec n))))","user":"57485efee4b009280f9f2b8a"},{"code":"#(first (drop %2 %1))\n\n;#((vec %) %2)","problem":21,"user":"503f4759e4b00d1a725ff2a9"},{"code":"#( first\n   \n    (loop [current 0 s %1] \n      (if (= current %2)\n        s\n        (recur (inc current) (next s))\n      )\n    )\n)","problem":21,"user":"502ea7c6e4b078f26332e749"},{"code":"(fn mynth [coll idx] (first (reduce (fn [cc e] (rest cc)) coll (range 0 idx))))","problem":21,"user":"522bf20ee4b0d34ee08e71c7"},{"code":"(fn th [x n] (cond (= n 0) (first x) :else (th (rest x) (- n 1))))","problem":21,"user":"528b9efee4b0239c8a67aea0"},{"code":"(fn [xs n] ((vec xs) n))","problem":21,"user":"50e4ff72e4b049a987753897"},{"problem":21,"code":"(fn nth-guy [sequ pos] \n                (if (= 0 pos) (first sequ)\n                                  (nth-guy (rest sequ) (- pos 1) )))","user":"53e2ac1ae4b036ad0777e3f3"},{"problem":21,"code":"(fn [lst n]\n   (loop [lst lst\n          n (inc n)\n          aux 0]\n     (if (zero? n)\n       aux\n       (recur (rest lst) (dec n) (first lst)))))","user":"57f81524e4b0d3187e900913"},{"code":"(fn[s i](first (nthnext s i)))","problem":21,"user":"4f098146535dcb61093f6c48"},{"code":"(fn my_nth[inputlist index]\n  (if\n    (= 0 index)\n    (first inputlist)\n    (my_nth (rest inputlist) (- index 1))\n  )\n)","problem":21,"user":"4ebc3974535dfed6da9c6d7f"},{"problem":21,"code":"(fn [coll n]\n  (loop [i 0\n         coll coll]\n    (if (= i n)\n      (first coll)\n      (recur (inc i) (rest coll)))))","user":"5bc15685e4b07a9b28b10016"},{"problem":21,"code":"(fn mth [l m] \n  (if (> m 0)\n    (mth (rest l) (- m 1))\n    (first l)\n  )\n)","user":"5fa5a6b1e4b0fa27300f3dc8"},{"problem":21,"code":"(fn [a i] \n  (loop [content a index i] \n    (if (zero? index) \n      (first content) \n      (recur (rest content) (dec index))\n      )))","user":"5ab23a78e4b073f1774425e1"},{"problem":21,"code":"(fn [l n] (loop [lst l c n] (if (= c 0) (first lst) (recur (rest lst) (dec c)))))","user":"54a43230e4b09f271ff37c6e"},{"code":"(fn m [x y]\n  (if (= y 0)\n    (first x)\n    (m (rest x) (- y 1))))","problem":21,"user":"4ea0c284535d7eef308072ad"},{"code":"(partial (fn las [i xs n] (if (= i n) (first xs) (las (+ i 1) (rest xs) n))) 0)","problem":21,"user":"4eaede1f535d7eef30807329"},{"code":"(fn [col n] (first (reverse (take (+ n 1) col))))","problem":21,"user":"4e7aa77c535db169f9c796ac"},{"code":"(fn nth_elem [sq n] (if (= n 0) (first sq) (nth_elem (rest sq) (- n 1))))","problem":21,"user":"50fbdacfe4b0d10d794c19f0"},{"problem":21,"code":"(fn [col i] \n   (first (keep-indexed \n          (fn [idx itm]\n              (when (= idx i) itm))\n                      col)))","user":"5d23bd56e4b02ea6f0fb6a0f"},{"problem":21,"code":"#(loop [l %1 c %2]\n   (if (= c 0)\n     (first l)\n     (recur (rest l) (dec c))))","user":"55e6f8a2e4b050e68259b48e"},{"problem":21,"code":"(fn [it n]\n  (if (or (< n 0) (> n (count it)))\n    nil\n \t(loop [xs it\n           cur 0]\n      (if (= cur n)\n        (first xs)\n        (recur (rest xs)\n               (inc cur))))))","user":"5e385965e4b01d43a70e8dba"},{"problem":21,"code":"(fn [list1, i] (loop [list2 list1 j i] \n\n(if (> j 0) (recur (rest list2) (dec j)) (first list2))\n\n)\n)","user":"5d2ca236e4b01671435dbc94"},{"problem":21,"code":"(fn\n  [x n]\n  (if (zero? n)\n      (first x)\n      (recur (rest x)\n             (dec n)))\n  )","user":"55c423e1e4b0e31453f64994"},{"code":"#(loop [col %1 \n        n %2]\n  (cond \n   (= 0 n) (first col)\n   :else (recur (rest col) (- n 1))))","problem":21,"user":"52fc89b2e4b047fd55837019"},{"code":"(fn [x l] (loop [xx x \n                 y 0]\n\t( if (< y l)\n      (recur (rest xx) (inc y))\n      (first xx))))","problem":21,"user":"52f90613e4b047fd55836fe1"},{"problem":21,"code":"(fn[coll n](get(vec coll)n))","user":"5c115097e4b01240ff567172"},{"problem":21,"code":"(fn f [c i] (if (> i 0) (f (rest c) (- i 1)) (first c)))","user":"59a24c92e4b066c664927d20"},{"problem":21,"code":"#(( vec %) %2)","user":"55b1e9e7e4b0da326a65cf74"},{"code":"(fn take2 [coll n] (if (= n 0) (first coll) (take2 (rest coll) (- n 1))))","problem":21,"user":"52525a0ee4b0541d1855b8a2"},{"code":"(fn [list count]\n  (loop [my-list list\n           my-count count]\n      (if (= 0 my-count)\n        (first my-list)\n        (recur (rest my-list) (dec my-count)))))","problem":21,"user":"4fe89475e4b07c9f6fd12c4f"},{"problem":21,"code":"(fn mynth [col n] (if (= n 0) (first col) (mynth (rest col) (- n 1))))","user":"54cb3497e4b057c6fda3a272"},{"problem":21,"code":"#(-> %1 (nthrest %2) first)","user":"587294f0e4b01531a375ea1e"},{"problem":21,"code":"(fn no21 [x y] (if (= (- (count x) 1) y) (last x) (no21 (butlast x) y)))","user":"55630cc1e4b0c656e3ff17e0"},{"code":"(fn [col n] (if (= n 0)(first col)(recur (nthrest col 1)(dec n))))","problem":21,"user":"5037c397e4b0af0658af77b4"},{"code":"(fn [lst n] (if (= 0 n) (first lst) (recur (rest lst) (dec n))))","problem":21,"user":"4fb2101ce4b081705acca284"},{"problem":21,"code":"(fn nty [p n]\n   (if (= n 0)\n     (first p)\n     (nty (rest p) (- n 1))\n   )\n  )","user":"54a2c433e4b09f271ff37c5f"},{"problem":21,"code":"(fn nnth [s n] (if (zero? n)\n                  (first s)\n                  (nnth (next s) (- n 1))\n                  ))","user":"54bc0b0ee4b0ed20f4ff6ec7"},{"problem":21,"code":"#(get (vec %) %2)\n;(fn [coll n](get (vec coll) n ))","user":"59c77511e4b0a024fb6ae545"},{"code":"(fn [sequence n]\n  (first (reverse (take (+ 1 n) sequence))))","problem":21,"user":"4e42f930535dc968683fc49f"},{"problem":21,"code":"(fn [s n]\n    (if (= n 0)\n      (first s)\n      (recur (rest s)\n             (- n 1))))","user":"5466aabbe4b01be26fd746e8"},{"code":"(fn [list number] \n  (if (> number 0) \n    (recur (rest list) (- number 1))\n    (first list)))","problem":21,"user":"4f354df2e4b0e243712b1ec1"},{"code":"(fn nthf [x i] \n  (if (> i 0) \n      (nthf (rest x) (dec i))\n      (first x)\n    )\n  )","problem":21,"user":"52253004e4b01819a2de42fa"},{"code":"(fn get-n [l n]\n  (if (= n 0)\n    (first l)\n    (get-n (rest l) (- n 1))))","problem":21,"user":"534bde26e4b084c2834f4a81"},{"code":"(fn foo [lst n]\n  (if (= n 0) (first lst) (foo (rest lst) (dec n))))","problem":21,"user":"4f8b20fce4b02e764a0a5178"},{"code":"(fn nthele [coll n] (first (drop n coll)))","problem":21,"user":"50d179c7e4b05a71a896ef56"},{"problem":21,"code":"(fn [coll n] \n  (loop [xs coll\n         c n]\n    (if (and (> c 0) (rest xs))\n      (recur (rest xs) (dec c))\n      (first xs))))","user":"54d0c32de4b0e8a36923e5cf"},{"code":"(fn thing [x,y] (.get x y))","problem":21,"user":"5397cf54e4b0b51d73faaef1"},{"code":"(fn[col x ]\n(first (drop x col)))","problem":21,"user":"51126a28e4b0350614f07a74"},{"code":"(fn nthh [xs n] (if (zero? n) (first xs) (nthh (rest xs) (dec n))))","problem":21,"user":"51cc155fe4b02254fc794869"},{"code":"(fn [lst index]\r\n  (loop [l lst i index]\r\n    (if (zero? i)\r\n      (first l)\r\n      (recur (rest l) (dec i)))))","problem":21,"user":"4dffeeb1535d04ed9115e78b"},{"code":"(fn get-nth [x y] (\r\n  if (= y 0)\r\n  (first x)\r\n  (get-nth (rest x) (- y 1))))","problem":21,"user":"505caadfe4b0bcb5664c3d3e"},{"problem":21,"code":"(fn my-nth [coll n]\n      (cond\n        (= n 0) (first coll)\n        :default (my-nth (rest coll) (dec n)))\n      )","user":"5a062e07e4b01bb0ae8afdc5"},{"code":"(fn [coll n]\r\n  (if (zero? n)\r\n   (first coll)\r\n   (recur (rest coll) (- n 1))))","problem":21,"user":"4f047768535dcb61093f6bc9"},{"code":"(fn testa [x y]\n  (if (= y 0)\n    (first x)\n    (testa (rest x) (- y 1))))","problem":21,"user":"51a85be9e4b08d8ec191b80d"},{"problem":21,"code":"#(cond\n  (= %2 0) (first %1)\n  (or (< %2 0) (empty? (rest %1))) nil\n  :else (recur (rest %1) (dec %2)))","user":"56795deae4b05957ce8c6187"},{"code":"(fn get-nth [ls i]\n  (if (not= i 0)\n    (get-nth (rest ls) (dec i))\n    (first ls)))","problem":21,"user":"523b82efe4b07becd5be21f0"},{"code":"(fn [sequence n] (first (drop n sequence)))","problem":21,"user":"5304dd80e4b0d8b024fd3754"},{"problem":21,"code":"(fn nth2 [x i]\n  (if (= i 0)\n    (first x)\n    (nth2 (rest x) (- i 1))))","user":"56eaf8f1e4b04a395b9a0419"},{"problem":21,"code":"#(let [coll %1 i (inc %2)]\n      (first (last (take i (iterate rest coll)))))","user":"5afc7303e4b0cc2b61a3bd0b"},{"problem":21,"code":"(fn Nth [lis index]\n  (if (= 0 index)\n    (first lis)\n    (Nth (rest lis) (- index 1))))","user":"59e8041be4b0249b72820721"},{"problem":21,"code":"(fn [col n] (first(nthrest col n)))","user":"57cc7d96e4b0c746388ab882"},{"problem":21,"code":"(fn my-nth [param index]\n  (loop [idx 0 coll (seq param)]\n    (if (= index idx) (first coll)\n                      (recur (inc idx) (rest coll)))))","user":"566e5e8de4b0a866af6896d9"},{"problem":21,"code":"(fn nth-el [seq index]\n  (loop [i_ index, seq_ seq]\n    (if (> i_ 0)\n      (recur (dec i_) (rest seq_))\n      (first seq_))))","user":"5a55c713e4b05d388ecb6c43"},{"problem":21,"code":"(fn bla [col nb] (first (drop nb col)))","user":"5c17bfebe4b01240ff5671e5"},{"code":"(fn [xs index] (\n  if (= index 0)\n  (first xs)\n  (recur (next xs) (- index 1))\n\n))","problem":21,"user":"4f8da0e2e4b02e764a0a51b1"},{"problem":21,"code":"(fn [coll x] (get (vec coll) x))","user":"54b402dce4b05787c3b16388"},{"problem":21,"code":"(fn [x y]\n  (if (= 0 y)\n    (first x)\n    (recur (rest x) (dec y))))","user":"53968a70e4b0b51d73faaee0"},{"problem":21,"code":"(fn getnth [coll index]\n  (get (vec coll) index))","user":"545bbf42e4b01be26fd74657"},{"problem":21,"code":"(fn recursiventh [sqn n] (if (= n 0) (first sqn) (recursiventh (rest sqn) (- n 1))))","user":"569f99cce4b0542e1f8d1497"},{"problem":21,"code":"#(loop [n %2 sq %] (if (= n 0) (first sq) (recur (dec n) (rest sq))))","user":"5f548678e4b0a0bc16850a7e"},{"code":"(fn [lst, n]\n  (if (= n 0) (first lst) (recur (rest lst) (- n 1))))","problem":21,"user":"503c05fbe4b0fc0f99c2e54f"},{"problem":21,"code":"(fn [x  y] (\n            (comp last take)  (inc y) x\n            ) \n)","user":"586b1390e4b0f14aab7c88cd"},{"code":"(fn nth' \n  [coll n]\n  (if (zero? n)\n   (first coll)\n   (nth' (rest coll) (- n 1))))","problem":21,"user":"5353afa0e4b084c2834f4b03"},{"code":"(fn [list num] (let [rank (+ num 1)] \n                 (last \n                  (take rank list))))","problem":21,"user":"528410bbe4b0239c8a67adc2"},{"problem":21,"code":"(fn [col n]\n  (if (zero? n)\n    (first col)\n    (recur (rest col)(- n 1))))","user":"5703c4c4e4b08d47c97781f7"},{"problem":21,"code":"(fn [coll n] (first( drop n coll)))","user":"552509dfe4b0882d96d091ca"},{"code":"(fn get-nth [x n]\n  (if (= 0 n)\n    (first x)\n    (recur (rest x) (dec n))))","problem":21,"user":"5240cfd9e4b0ad64fa010346"},{"problem":21,"code":"(fn nth*\n    [xs n]\n    (loop [xs xs\n           n n]\n      (if (> n 0)\n        (recur (rest xs) (dec n))\n        (first xs))))","user":"60bb21d5e4b0e0fa5f1b4281"},{"problem":21,"code":"(fn [seq n] (if (= n 0)\n              (first seq)\n              (recur (rest seq) (dec n))))","user":"53ecd01fe4b0d648e757f4b9"},{"problem":21,"code":"(fn [e n]\n  (if \n   (= 0 n)\n   (first e)\n   (recur (next e) (dec n))))","user":"56946d43e4b0dcc4269f411e"},{"problem":21,"code":"(fn [coll n]\n  (loop [n n\n         r coll]\n    (if (= n 0)\n      (first r)\n      (recur (dec n) (rest r)))))","user":"5a084a24e4b01bb0ae8afdf2"},{"problem":21,"code":"(fn \n  [col, n] \n  (last (take (inc n) col))\n  )","user":"5dfb267ee4b0a607a9a45cd4"},{"code":"(fn [s n]\n  (loop [seq s i n]\n    (if (= i 0)\n      (first seq)\n      (recur (rest seq) (dec i)))))","problem":21,"user":"4e7e3504535db169f9c79709"},{"problem":21,"code":"(fn[s el] (loop [f (first s) r (rest s) c 0] (if (= el c) f (recur (first r) (rest r) (inc c)))))","user":"595f702ce4b066ee0a44b064"},{"problem":21,"code":"(fn [params number]\n  (if (= number 0)\n    (first params)\n    (recur (rest params) (dec number))))","user":"533c5249e4b0e30313ee6cdd"},{"problem":21,"code":";;Get only works on keyed sequences like vectors (keyed by pos) or map(keyed by keys)\n(fn [coll pos] (get (vec coll) pos))","user":"5715b67fe4b07c98581c3ae1"},{"problem":21,"code":"(fn foo [c n]\n  (if (= n 0)\n      (first c)\n      (foo (rest c) (- n 1))))","user":"552d6868e4b076ab5578f7e8"},{"problem":21,"code":"(fn get-nth [values index] \n  (if (= index 0) \n      (first values) \n      (get-nth (rest values) (- index 1))\n  )\n)","user":"56e6b6fbe4b02e7e935eb6ca"},{"problem":21,"code":"(fn [l n]\n  (cond \n   (empty? l) nil\n   (zero? n) (first l)\n   :else (recur (rest l) (dec n))))","user":"5ce05561e4b0a17bb84e2b08"},{"code":"(fn [coll pick]\n  (if (= pick 0) (first coll)\n    (recur (rest coll) (dec pick))))","problem":21,"user":"4fab2a6ce4b081705acca214"},{"code":"(fn [s, n]\n  (if (> n 0)\n  \t(recur (rest s) (dec n))\n    (first s)\n   ))","problem":21,"user":"5141a8fde4b02fd87f5064c2"},{"problem":21,"code":"(fn [s n] (->> s \n              (drop n)\n              first))","user":"5b34f9bfe4b025bcb146f354"},{"code":"(fn [s n]\n  (loop [s s\n         i 0]\n    (if (= i n)\n      (first s)\n      (recur (rest s) (inc i)))))","problem":21,"user":"50b67515e4b08fb537db98f3"},{"problem":21,"code":"(fn [coll n] \n  (first (keep-indexed (fn [i x] (when (= i n) x)) coll)))","user":"5c1bee41e4b01240ff567218"},{"code":"(fn [xs n] \r\n    (letfn [(f [x a]\r\n\t\t    (if (= a 0)\r\n\t\t\t(first x)\r\n\t\t\t(recur (rest x) (dec a))))]\r\n\t    (f xs n)))","problem":21,"user":"4e273301535deb9a81d77ef7"},{"problem":21,"code":"(fn [s n]\n  (loop [st s\n         idx 0]\n    (if(= idx n)(first st)\n      (recur (rest st) (inc idx)))))","user":"5c09e555e4b0bdcf453d16fd"},{"code":"(fn [xs n]\n  (if (= n 0)\n    (first xs)\n    (recur (rest xs) (- n 1))\n  )\n)","problem":21,"user":"528432b6e4b0239c8a67adc7"},{"code":"(fn recnth [xsq n] (if (= n 0) (first xsq) (recnth (rest xsq) (dec n))))","problem":21,"user":"4ea7999e535d7eef308072ee"},{"problem":21,"code":"(fn [elem inx] \n\t(if (= inx 0)\n      (first elem)\n      (recur (rest elem) (dec inx))\n    )  \n)","user":"56b6e354e4b0982f16b37e41"},{"problem":21,"code":"(fn my-nth [sq n]\n  (if (= n 0)\n    (first sq)\n    (my-nth (rest sq) (- n 1))\n    )\n  )","user":"580f9585e4b0f478707a05b5"},{"problem":21,"code":"(fn [lists x] (first (drop x lists)))","user":"55c25dd1e4b0e31453f6497a"},{"problem":21,"code":"(fn [ls k]\n  (loop [l ls c 0]\n    (if (= c k)\n      (first l)\n      (recur (rest l) (inc c)))))","user":"53b8b37be4b047364c0444e1"},{"code":"(fn [seq n]\n    (if (= n 0)\n          (first seq)\n          (recur (rest seq) (- n 1))))","problem":21,"user":"51f5539fe4b0abb92f97f9cd"},{"problem":21,"code":"(fn [coll target]\n \t(loop [coll coll index 0]\n      (if (>= index target)\n        (first coll)\n        (recur (rest coll) (inc index))\n      )\n   ) \n )","user":"5de6484ce4b0986d99407f66"},{"problem":21,"code":"(fn arb [x n] (first (take-last (- (count x) n) x)))","user":"56febe79e4b08d47c97781b1"},{"code":"(fn [x y] (if (> y 0 ) ( recur (rest x) (dec y) ) (first x) ) )","problem":21,"user":"4f7216d4e4b07046d9f4f01c"},{"code":"(fn[x,n] (last (take (+ n 1) x)))","problem":21,"user":"4fd0b0bde4b04c3a95aa0406"},{"code":"(fn[col x ]\r\n(first (drop x col)))","problem":21,"user":"4fcb8f0ae4b0ee37620e1859"},{"code":"(fn [xs i]\n  (if (zero? i) (first xs)\n      (recur (rest xs) (dec i))))","problem":21,"user":"4fe8d862e4b0547ebccb2428"},{"problem":21,"code":"(fn [sq x] (loop [n x rst sq]\n             (if (= n 0)\n               (first rst)\n               (recur (dec n) (rest rst)))))","user":"58225587e4b04b46fc4b0f94"},{"problem":21,"code":"(fn [t x] (last (take (+ 1 x) t)))","user":"5a14228fe4b0ff51aa4b3193"},{"code":"(fn [l n]\n (last (take (inc n) l))\n)","problem":21,"user":"5384bbf8e4b06839e8705ef5"},{"code":"(fn f [p n] (if (= n 0) (first p) (f (rest p) (- n 1))))","problem":21,"user":"4f34a8c2e4b0e243712b1eb8"},{"problem":21,"code":"(fn [col nths] (first (filter #(= (.indexOf col %) nths) col)))","user":"566e87cfe4b0a866af6896dc"},{"code":"(fn [orig n]\n  (loop [xs orig\n         i 0]\n    (if (= i n)\n      (first xs)\n      (recur (next xs) (inc i)))))","problem":21,"user":"51aa2b4fe4b04e3dc0c27b21"},{"problem":21,"code":"(fn [coll index] \n  (.get coll index))","user":"56d74c88e4b0ea9b8538f7d9"},{"code":"(fn my-nth [list index]\n  (if (zero? index)\n    (first list)\n    (my-nth (rest list) (dec index))))","problem":21,"user":"4fdb881ee4b05e33b9224f5e"},{"code":"(fn N [x c] (if (= c 0) (first x) (N (rest x) (- c 1))))","problem":21,"user":"51f9d3eee4b0f1313d4689c5"},{"problem":21,"code":"#(loop [s %1 n %2] (if (> n 0) (recur (rest s) (dec n)) (first s)))","user":"54c951b3e4b045293a27f668"},{"code":"(fn [arg index] \n  (aget (to-array arg) index))","problem":21,"user":"507acc18e4b09034bfeeb719"},{"code":"(fn nthh [lst n]\n  (if (= n 0)\n  \t(first lst)\n    (nthh (rest lst) (dec n))\n  ))","problem":21,"user":"512e0f36e4b0b740abc59820"},{"code":"(fn [coll n] \n  (if (zero? n)\n    (first coll)\n    (recur (rest coll) (- n 1))))","problem":21,"user":"4ef47f0f535dced4c769f235"},{"problem":21,"code":"(fn [l n] (if (= 0 n) (first l) (recur (next l) (dec n))))","user":"5fc241c1e4b0edf42a5593d1"},{"code":"(fn f [x n] (if (zero? n) (first x) (f (rest x) (dec n))))","problem":21,"user":"52bef782e4b07a9af5792327"},{"code":"; vector is a function of its indices\n#((vec %1) %2)","problem":21,"user":"518f9e14e4b08646f171ca07"},{"code":"(fn f[l N] (if (= 0 N) (first l) (f (next l) (- N 1))))","problem":21,"user":"50ef96a1e4b0bdaecbb47d9d"},{"code":"(fn [col i]\n  (if (= i 0) (first col)\n  \t\t\t   (recur (rest col) (dec i))))","problem":21,"user":"531c57ace4b08068f379ed9b"},{"code":"#(loop [xs %1 n %2]\n  (if (zero? n) (first xs) (recur (rest xs) (dec n))))","problem":21,"user":"4fe8a1f8e4b07c9f6fd12c5f"},{"problem":21,"code":"(fn nth-elem [x n]\n  (last (take (inc n) x)\n  )\n)","user":"55f1b704e4b06e875b46ce34"},{"problem":21,"code":"(fn fun [v n] (if (> n 0) (fun (rest v) (- n 1)) (first v)))","user":"595c9406e4b066ee0a44affe"},{"code":"(fn [seq k]\n  (if (zero? k)\n    (first seq)\n    (recur (rest seq) (dec k))))","problem":21,"user":"4f038499535dcb61093f6b09"},{"code":"#(loop [arr %1, inx %2]\n  (if (= inx 0 )\n     (first arr)\n     (recur (rest arr) (dec inx))))","problem":21,"user":"506662a0e4b03d366d7cb2ae"},{"problem":21,"code":";(fn [sq n]\n;  (first\n;   (rest \n;    (first\n;     (filter \n;      #(= (first %) n)\n;      (map (fn [a b] [a b]) (iterate inc 0) sq))))))\n(fn [sq n]\n  (->> sq\n       (map (fn [a b] [a b]) (iterate inc 0) ,,,)\n       (filter #(= (first %) n) ,,,)\n       first ,,,\n       rest ,,,\n       first ,,,))","user":"540c54a7e4b0addc1aec6700"},{"code":"(fn pop [x y]\n   \t  (if (= y 0)\n \t\t  \t  (first x)\n \t\t  \t  (pop (rest x) (- y 1)))\n \t\t   )","problem":21,"user":"4fb1a4e4e4b081705acca27e"},{"code":"(fn [coll n]\n  (loop [c coll\n          x n]\n    (if (zero? x)\n      (first c)\n      (recur (next c) (dec x)))))","problem":21,"user":"50b0cffae4b009df37c708c5"},{"problem":21,"code":"#(last (first (partition (inc %2)  %1)))","user":"57828e95e4b0d36ec5835e96"},{"code":"(fn [m n1]\n  (first (drop n1 m)))","problem":21,"user":"4ff505c8e4b0678c553fc364"},{"problem":21,"code":"(fn [x, y] (aget (to-array x) y))","user":"53925032e4b0b51d73faaeb0"},{"problem":21,"code":"(fn [s n]\n  (if (= n 0) \n    (first s)\n    (recur (rest s) (dec n))))","user":"55d0e76ae4b0e31453f64a40"},{"code":"(fn f [l n]\n  (if (= n 0)\n    (first l)\n    (f (rest l) (- n 1))))","problem":21,"user":"51efdbbee4b0249c592fbdec"},{"problem":21,"code":"(fn [elem index]\n  (if list?\n    (do (get (vec elem) index)) \n    (do (get elem index))))","user":"55744472e4b0aa18f790f402"},{"code":"(fn [col num] (last (take (+ num 1) col)))","problem":21,"user":"4e7e33a3535db169f9c79708"},{"problem":21,"code":"(fn [seq nt] (first (drop nt seq)))","user":"595041e8e4b066ee0a44ae90"},{"code":"(fn [seq n] (if (> n 0) (recur (rest seq) (- n 1)) (first seq)))","problem":21,"user":"50580b7ae4b06522596eba74"},{"problem":21,"code":"(fn rec [l n] (if (zero? n)\n                (first l)\n                (rec (rest l) (dec n))))","user":"56a1227fe4b0542e1f8d14ac"},{"problem":21,"code":"#(last(take(inc %2) %1))","user":"5eecf110e4b07c55ae4a050b"},{"code":"#(loop [i 0 mylist %1]\n  (if (= i %2)\n   \n      (first mylist)\n   (recur (inc i) (rest mylist))))","problem":21,"user":"53975267e4b0b51d73faaee7"},{"problem":21,"code":"#(loop[s %1\n       n %2]\n   (if (= 0 n) (first s) (recur (rest s) (dec n))))","user":"57b6555be4b0fbc9809a27bf"},{"code":"(fn f [l p]\n  (if (= p 0)\n      (first l)\n      (f (rest l) (- p 1))))","problem":21,"user":"5032afece4b00c0952a257e9"},{"code":"(fn [x y] (loop [lst x n y] (if (<= n 0) (first lst) (recur (rest lst) (- n 1)))))","problem":21,"user":"508b95a0e4b0be79e5b189c6"},{"code":"(fn func\r\n  [secventa n]\r\n  (seq secventa)\r\n  (.get secventa n)\r\n  )","problem":21,"user":"5075b421e4b09049dea827a0"},{"code":"(fn nth-element [lst x]\n  (if (= x 0)\n(first lst)\n(nth-element (rest lst)(- x 1))))","problem":21,"user":"4eb6f065535d7eef30807372"},{"problem":21,"code":"(fn nthel [arr len] (if (= 0 len) (first arr) (nthel (rest arr) (- len 1))))","user":"5537982ae4b09218d5f44fcc"},{"code":"(fn f1 [l n]\n  (loop [list l num 0]\n    (if (= num n)\n      (first list)\n      (recur (rest list) (inc num)))))","problem":21,"user":"526fc549e4b03e8d9a4a7380"},{"problem":21,"code":"(fn nthelem [coll n]\n  (loop\t[c n, xs coll]\n   \t(if (zero? c)\n      (first xs)\n      (recur (dec c) (rest xs)))))","user":"58bc08fee4b0888cdc949d08"},{"code":"(fn [s n]\n  (first\n\t(reduce\n     (fn [ss i]\n       (rest ss))\n     s\n     (range n))))","problem":21,"user":"52148821e4b0961f15ac4d8e"},{"problem":21,"code":"#(loop [l %1\n        index %2]\n   (if (= index 0)\n     (first l)\n     (recur (next l) (- index 1))))","user":"53d6bc2fe4b0e771c302545a"},{"problem":21,"code":"(fn [c n] ((into [] c) n))","user":"54be9b81e4b0ed20f4ff6ef1"},{"problem":21,"code":"#(second (find (into (sorted-map) (map-indexed (fn [i v] [i v]) %1)) %2))","user":"580b90cee4b0a837a8b30d4b"},{"problem":21,"code":"(fn my-nth [m n] \n  (if (= (- (count m) n) (count m)) \n    (first m) \n    (my-nth (rest m) (dec n))))","user":"56caea02e4b0ea9b8538f721"},{"problem":21,"code":"(fn [ls n]\n  (loop [ls ls\n         n n]\n    (if (zero? n)\n      (first ls)\n      (recur (rest ls) (dec n)))))","user":"5fe1b893e4b05ac5b16ea16f"},{"code":"(fn [m n]\n  (if (= n 0)\n    (first m)\n    (recur (rest m) (- n 1))))","problem":21,"user":"52fc2892e4b047fd55837014"},{"code":"(fn [coll n]\n  (loop [x coll y 0]\n    (if (= y n) (first x)\n      (recur (rest x) (inc y)))))","problem":21,"user":"53a1b5c8e4b0ca733b9744c1"},{"problem":21,"code":"(fn [x n] (first (subvec (vec x) n (+ n 1))))","user":"5877e40ee4b01531a375eaab"},{"problem":21,"code":"#(if(= %2 0)\n   (first %)\n   (recur (rest %) (dec %2)))","user":"520fca70e4b080a8d9b9d631"},{"code":"(fn [xs, n]\n  (last (take (+ n 1) xs)))","problem":21,"user":"5161eb8fe4b009fba0926e3b"},{"code":"#(first (drop %2 %))\n;(fn [s i]\n;  (loop [n 0 v s]\n;    (if (= n i)\n;      (first v)\n;      (recur (inc n) (rest v)))))","problem":21,"user":"517b59b8e4b0925c997201d0"},{"problem":21,"code":"(fn [col n] (if (zero? n) (first col) (recur (next col) (dec n))))","user":"56399b7ee4b0bfe05bf117f5"},{"problem":21,"code":"(fn [l index] (.get l index))","user":"57a9b00be4b0a96607956232"},{"problem":21,"code":"#(get (vec %1) %2)\n;#((comp first (partial drop %2)) %1)","user":"5582dfb6e4b05c286339e10d"},{"problem":21,"code":"(fn [s n] (loop[sq s i n] (\n           if (pos? i)\n              (recur (rest sq) (dec i))\n              (first sq))\n         )\n  )","user":"5f58db95e4b0a0bc16850a9a"},{"code":"(fn [x y]\n  (last (take (inc y) x)))","problem":21,"user":"5223b9cee4b01819a2de42b5"},{"problem":21,"code":"(fn [coll idx] (first (keep-indexed #(if (= %1 idx) %2) coll)))","user":"5a3e6642e4b0447ef91cc5b3"},{"problem":21,"code":"(fn mynth [coll idx]\n  (loop [c coll cnt 0 i idx]\n    (if (= cnt i)\n      (first c)\n      (recur (rest c) (+ cnt 1) i)\n    )\n  )\n)","user":"586cf7c1e4b01531a375e986"},{"problem":21,"code":"(fn [lst i] (if (zero? i) (first lst) (recur (next lst) (dec i))))","user":"554e4588e4b00713264bd992"},{"code":"#(loop [x %1 y %2] \n   (if (= y 0) \n     (first x) \n     (recur (rest x) (dec y))\n     ))","problem":21,"user":"5253b4c9e4b0541d1855b926"},{"code":"(fn my-nth[x,n](if (= n 0) (first x)(my-nth (rest x) (- n 1))))","problem":21,"user":"52d66ca0e4b09f7907dd135c"},{"code":"(fn[s n]\n  (if (= n 0)\n    (first s)\n    (recur (rest s) (dec n))))","problem":21,"user":"52963cc7e4b02ebb4ef7502d"},{"problem":21,"code":"(fn ith [xs i] (if (zero? i) (first xs) (ith (rest xs)(dec i))))","user":"5df4ee3fe4b03c219ef1a382"},{"problem":21,"code":"#(if (zero? %2)\n    (first %1)\n    (recur (rest %1) (dec %2)))","user":"5a9414eae4b0d174b936c72c"},{"code":"(fn [ip nt] \n  (loop [l ip n nt]\n    (if (= 0 n)\n      (first l)\n      (recur (rest l) (- n 1)))))","problem":21,"user":"526d54ece4b03e8d9a4a72d1"},{"problem":21,"code":"(fn [lst n]\n   (loop [i 0 l lst]\n      (if (= i n)\n         (first l)\n         (recur (inc i) (rest l)))))","user":"5a653f80e4b0512ff01cd9b2"},{"problem":21,"code":"(fn[coll, n] (last (take (+ n 1) coll)))","user":"55654e17e4b0c656e3ff1818"},{"problem":21,"code":"(fn element [xs, n] (if (= n 0) \n                      (first xs) \n                      (element (rest xs) (- n 1))\n                      ))","user":"560aa7b0e4b05f002753df02"},{"problem":21,"code":"(fn [xs n]\n  (if (= n 0) \n    (first xs)\n    (recur (rest xs) (dec n))))","user":"546176e7e4b01be26fd746a2"},{"problem":21,"code":"(fn [vec x] (if (zero? x) (first vec)\n                            (recur (rest vec) (dec x))))","user":"55c86e35e4b0e31453f649e0"},{"problem":21,"code":"#(first (drop %2 %1\n              ))","user":"5674477ce4b05957ce8c6134"},{"problem":21,"code":"(fn [x y] (last (take (inc y) x)) )","user":"6097b95ae4b00e9e6653c3f6"},{"problem":21,"code":"(fn [xs n] (get (zipmap (iterate (partial + 1) 0) xs) n))","user":"53e55de1e4b036ad0777e458"},{"code":"(fn [l n] (loop [l l n n] (if (= n 0) (first l) (recur (rest l) (dec n)))))","problem":21,"user":"536673a8e4b0243289761e76"},{"problem":21,"code":"(fn [coll pos] (first(drop pos coll)))","user":"5e392de0e4b01d43a70e8dcb"},{"code":"(fn xth [x n]\n  (if\n    (= n 0)\n    (first x)\n    (xth (rest x) (- n 1))))","problem":21,"user":"50e9d21ce4b02d54280826cf"},{"problem":21,"code":"(fn [vs num]\n  (if (< 0 num)\n    (recur (rest vs) (dec num))\n    (first vs)))","user":"5e257a33e4b05b4b01516166"},{"problem":21,"code":"(fn nth-elem [lst, n] (if (= n 0) (first lst) (nth-elem (rest lst) (dec n))))","user":"5587fe2ce4b059ccff29b1ed"},{"code":"(fn nst [x n] \n    (if (= n 0) \n      (first x) \n      (nst (rest x) (dec n))))","problem":21,"user":"504e2f98e4b0f6ff3350c47e"},{"problem":21,"code":"(fn [in-seq index]\n\t(first (drop index in-seq)))","user":"557775a3e4b05c286339e084"},{"problem":21,"code":"#(get(zipmap (range) %) %2)","user":"5e9b7aefe4b0157ca96647f1"},{"problem":21,"code":"(fn getter [lizt n] (first(drop n lizt)))","user":"57ffacd9e4b0a837a8b30c26"},{"code":"(fn get-n [seq pos] (if (zero? pos)(first seq)(recur (rest seq)(dec pos))))","problem":21,"user":"509b1204e4b0412cdea6eb1d"},{"problem":21,"code":"(fn [seq n]\n  (if (= 0 n)\n   (first seq)\n   (recur (rest seq) (dec n))))","user":"5afca248e4b0cc2b61a3bd12"},{"problem":21,"code":"(fn nti [lon n]\n  (cond\n   (= n 0) (first lon)\n   :else\n      (nti (rest lon) (- n 1))))","user":"584d99c5e4b0b7285a6f4e42"},{"code":"(fn [vec i] (loop [n 0 v vec] (if (= n i) (first v) (recur (inc n) (rest v)))))","problem":21,"user":"534f13b2e4b084c2834f4ac4"},{"code":"(fn [xs pos]\n\t(loop [acc xs i pos]\n      (if (= i 0)\n        (first acc)\n        (recur (rest acc) (dec i)))))","problem":21,"user":"5173726be4b098276e74652c"},{"code":"( fn [x , n ] \n  ( last ( take (+ n 1) x))\n  )","problem":21,"user":"51f6d5fde4b06ff1c25c52d1"},{"problem":21,"code":"(fn[x-list index] (first (subvec (vec x-list) index (+ index 1))))","user":"556bbaaee4b09a3098a524f0"},{"code":"(fn nn [x n]\n   (if (= n 0)\n     (first x)\n     (nn (rest x) (- n 1))))","problem":21,"user":"4f74271ae4b044e54cd9a8f6"},{"problem":21,"code":"(fn nthitem [lst n]\n  (loop [dimlst (list* lst) iterator 0]\n    (if (= iterator n)\n      (first dimlst)\n      (recur (rest dimlst) (inc iterator)))))","user":"592ac17ae4b072a2710fcf26"},{"problem":21,"code":"(fn [lot n]\n  ;; x<Scalar>: The number representing the current index - 1\n  (if (<= n 0)\n    (first lot)\n    (recur (rest lot) (- n 1))))","user":"57c47e21e4b05aa3c4741cd2"},{"problem":21,"code":"(fn my-nth [x n] \n  (if (zero? n) \n    (first x) \n    (my-nth (rest x) (- n 1))))","user":"56c56603e4b05cc29241eea7"},{"problem":21,"code":"#(loop [c %1 i 0] (if (= %2 i) (first c) (recur (rest c) (+ i 1))))","user":"5516d26de4b06a49daca83b9"},{"problem":21,"code":"(fn [lis n] (last (take (inc n) lis)))","user":"5c9f952ae4b048ec896c5b59"},{"problem":21,"code":"(fn [a i ] (if (zero? i) (first a) ( recur (rest a) (dec i))))","user":"5669f1dbe4b04acd4f672e03"},{"problem":21,"code":"(fn nthel [x n] (first (drop n  x)))","user":"584953eee4b089d5ab817ece"},{"code":"(fn [x y]\n  (last\n    (take (+ 1 y) x)\n  )\n)","problem":21,"user":"4efe8071535dc589f2b88d97"},{"code":"(fn enth [c n]\n  (if \n    (= n 0)\n    (first c)\n   \t(enth (rest c) (dec n))\n  )\n)","problem":21,"user":"518e6966e4b051adb72789ec"},{"code":"(fn [coll n] (if (= n 0) \r\n                 (first coll)\r\n                 (recur (rest coll) (dec n))))","problem":21,"user":"4e1047ad535d04ed9115e7bf"},{"code":"(fn [seq index]\n  (if (= 0 index) \n    (first seq)\n    (recur (rest seq) (dec index))))","problem":21,"user":"52e82818e4b09f7907dd1496"},{"code":"(fn [s n]\n  (if (vector? s)\n    (get s n)\n    (get (vec s) n)))","problem":21,"user":"51c1229be4b0c9c822882944"},{"problem":21,"code":"#( get (into {} (map-indexed vector %1)) %2)","user":"5f0c3da4e4b0f30dddfb5d49"},{"code":"(fn [l x] (first (second (split-at x l))))","problem":21,"user":"51dd88e2e4b0c33a4e1da40b"},{"problem":21,"code":"(fn [ls n]\n  (cond (empty? ls) ls\n        (= n 0) (first ls)\n        true (recur (rest ls) (- n 1))))","user":"59750a68e4b01722bebd4cba"},{"problem":21,"code":"(fn my-nth [args i] (if (= 0 i)\n                  (first args)\n                  (my-nth (rest args) (dec i))))","user":"59b7d888e4b05c620303ca49"},{"code":"#(if (= %2 0) (first %1) (recur (rest %1) (dec %2)))","problem":21,"user":"4e6a6be7535d8ccf87e9fee1"},{"code":"(fn mynth [lst index] \n  (if (= 0 index) (first lst)\n    (mynth (rest lst) (dec index))))","problem":21,"user":"53110f32e4b08068f379ece4"},{"problem":21,"code":"(fn nn [x i] (if (= i 0)\n              \t(first x)\n                 (nn (rest x) (- i 1))\n              )\n  )","user":"555d0121e4b0a2eb076a39a4"},{"problem":21,"code":"(fn [s n] (loop [b s m 0] (if (= n m) (first b)(recur (rest b) (inc m)))))","user":"55660248e4b0c656e3ff1824"},{"code":"(fn [seq i]\n  (first\n    (keep-indexed\n      (fn [ix e] (if (= ix i) e))\n      seq)))","problem":21,"user":"4e8742d4535dceadca46984f"},{"code":"(fn [a b] (first (drop b a)))","problem":21,"user":"4ef4d24d535dced4c769f23f"},{"code":"(fn [coll n] \r\n  (letfn [(indexed [c] (map vector (iterate inc 0) c))]\r\n    (second (first (filter #(= (first %) n) (indexed coll))))))","problem":21,"user":"4df247b8535d08e6dec9fe25"},{"problem":21,"code":"#(reduce +(take 1(drop %2 %)))","user":"5cf59deee4b087f62be35a9f"},{"problem":21,"code":"(fn new-last [l n]\n  (cond\n   (= 0 n) (first l)\n   :else (new-last (rest l) (- n 1))))","user":"559f06bae4b0acc240e314e6"},{"problem":21,"code":"(fn nth-my [s x] (last (take (inc x) s)))","user":"548d6b75e4b0e286459a1216"},{"problem":21,"code":"(fn [s n] \n    (if (> n 0)\n        (recur (next s) (- n 1))\n        (first s)))","user":"54fdaeace4b07d26eda61d39"},{"code":"(fn [coll n]\r\n  (if (= n 0)\r\n      (first coll)\r\n      (recur (rest coll) (dec n))))","problem":21,"user":"5063b9a0e4b075d771da6f9d"},{"problem":21,"code":"(fn elem [x y]\r\n(loop [s     x\r\n       i     0]\r\n  (if (= i y)\r\n    (first s)\r\n    (recur (rest s)\r\n           (inc i))))\r\n)","user":"5be1fde4e4b0ed4b8aab4cab"},{"code":"(fn nth-item [ls n]\n  (if (<= n 0)\n    (first ls)\n    (nth-item (rest ls) (dec n))))","problem":21,"user":"52aa4a67e4b0c58976d9ac62"},{"problem":21,"code":"(fn ntes [li n] (if (= n 0) (first li) (ntes (rest li) (- n 1))))","user":"5b20134de4b03cfeda66ed2d"},{"problem":21,"code":"(fn [v n] \n    (loop [accum v\n           i     0]\n      (if (= i n)\n        (first accum)\n        (recur (rest accum)\n               (inc i)))))","user":"53b14289e4b047364c04448b"},{"problem":21,"code":"(fn [lst n]\n  (loop [xs lst cnt 0]\n    (if (= cnt n)\n      (first xs)\n      (recur (rest xs) (inc cnt)))))","user":"5b58d012e4b02d533a91bd71"},{"problem":21,"code":"(fn [s,i] (first(nthnext s i)))","user":"542c900be4b0dad94371f2a9"},{"problem":21,"code":"(fn [set pos] (loop [x pos \n                         output-set set]\n                    (if (> x 0)\n                      (recur (dec x) (rest output-set))\n                      (first output-set))))","user":"5a58da38e4b05d388ecb6c8b"},{"code":"(fn [c i] (first (drop i c)))","problem":21,"user":"4e690d86535d8ccf87e9fe96"},{"problem":21,"code":";(fn [input-list location] (first (drop location input-list)))\n#(first (drop %2 %1))","user":"5a1679d9e4b0ff51aa4b31ca"},{"problem":21,"code":"(fn tn [col n]\n  (if (= 0 n) (first col) \n    (recur (rest col) (dec n))))","user":"57aa290de4b0b8559636fc65"},{"problem":21,"code":"(fn [coll n]\n  (cond\n   (= n 0) (first coll)\n   :else (recur (rest coll) (- n 1))))","user":"5a342188e4b0ddc586f153bd"},{"problem":21,"code":"(fn [coll numb] (first (drop numb coll)))","user":"560e3879e4b05f002753df4b"},{"problem":21,"code":"(fn [sq, n]\n   (if (zero? n) (first sq)\n       (recur (rest sq)\n              (dec n))))","user":"549a999be4b0f3d1d8e70f6f"},{"problem":21,"code":"#(first (second (split-at %2 %1 )))","user":"605b7085e4b079a07f8593fa"},{"problem":21,"code":"(fn getn [x,y] (\n              if \n              (= y 0)\n              (first x)\n              (getn (rest x) (- y 1))\n              ))","user":"584984d4e4b089d5ab817ed3"},{"code":"(fn [sqs index] (if (= index 0) (first sqs)(recur (rest sqs) (dec index))))","problem":21,"user":"4f7b3d53e4b06e829148e1a0"},{"code":"(fn nnth\n  [col x]\n  (cond\n   (= x 0) (first col)\n   :else (nnth (rest col) (dec x))))","problem":21,"user":"5239783de4b0d705d026ef0d"},{"problem":21,"code":"(fn [coll n]\n    (if (= 0 n)\n      (first coll)\n      (recur (rest coll) (dec n))))","user":"547bf82de4b0c51c1f4d72e1"},{"problem":21,"code":"(fn nth-fn [x y] \n  (cond (= y 0) (first x)\n        :else (nth-fn (rest x) (- y 1) ) \n        ))","user":"57614a42e4b0994c1922fb85"},{"code":"(fn\n [items index]\n (if (= index 0)\n  (first items)\n  (recur (rest items) (dec index)))\n \n)","problem":21,"user":"4f92884de4b0dcca54ed6caf"},{"problem":21,"code":"(fn [l i] (if (= 0 i) (first l) (recur (rest l) (dec i))))","user":"53e8c684e4b036ad0777e48b"},{"code":"(fn nth1 [xs n]\n  (if (= n 0)\n      (first xs)\n      (nth1 (rest xs) (- n 1))))","problem":21,"user":"4fc5ee4fe4b0ee37620e1804"},{"problem":21,"code":"(fn [ col item ] (last (take (inc item) col)))","user":"5151a2c4e4b03e678e393ad1"},{"problem":21,"code":"#(loop [n %2 coll %1]\n   (if (= n 0)\n     (first coll)\n     (recur (dec n) (rest coll))\n    )\n   )","user":"560fe558e4b05f002753df63"},{"code":"(fn [seq num]\n        (if (= num 0)\n          (first seq)\n          (recur (next seq) (dec num))))","problem":21,"user":"4e6a5f5c535d8ccf87e9fed6"},{"problem":21,"code":"(fn find-nth[list n]\n  (loop [cnt n temp-list list]\n    (println \"list:\" temp-list \",nth: \" cnt)\n    (if (zero? cnt)\n      (first temp-list)\n      (recur (dec cnt) (rest temp-list)))))","user":"5541fa50e4b0a04f79299515"},{"code":"(fn [seq n]\n  (loop [seq seq n n]\n    (if (zero? n)\n      (first seq)\n      (recur (rest seq) (dec n)))))","problem":21,"user":"4f0446f9535dcb61093f6bb8"},{"problem":21,"code":"(fn [xs n] (if (> n 0) (recur (rest xs) (- n 1)) (first xs)))","user":"56abaf0be4b03c432f187341"},{"problem":21,"code":"(fn [x n]\n  (loop [x x\n         i 0]\n    (if (= i n)\n      (first x)\n      (recur (rest x)\n             (inc i)))))","user":"543ba31be4b032a45b869333"},{"problem":21,"code":"(fn [x i] (loop [col x\n                 ind i\n                 cnt 0]\n            (if (= cnt i)\n      \t\t  (first col)      \n              (recur (rest col) i (+ cnt 1)))))","user":"5753b6c6e4b02ea1147992af"},{"problem":21,"code":"(fn [col n]\n           (if (or (empty? col) (<= n 0))\n             (first col)\n             (recur (rest col) (dec n))))","user":"5ea6fe98e4b00a66d4a951b2"},{"code":"(letfn [(I [coll i]\n           (if (zero? i) (first coll)\n             (recur (rest coll) (dec i))))]\n  I)","problem":21,"user":"51a4416ae4b0def3c5c5868c"},{"code":"(fn n [x y] (last (take (+ y 1) x)))","problem":21,"user":"52e544d3e4b09f7907dd145e"},{"code":"(fn get-nth [seq index] (\n    if (= index 0)\n         (first seq)\n       (get-nth (rest seq) (- index 1))\n))","problem":21,"user":"52cffe31e4b07d0d72b273b2"},{"code":"(fn foo [coll x] (if (> 1 x) (first coll) (foo (rest coll) (dec x))))","problem":21,"user":"52097551e4b0e152394d76f3"},{"problem":21,"code":"(fn foo [lst x] (if (= x 0 ) (first lst) (foo (rest lst) (- x 1)) ))","user":"558504aae4b04192f3441ef5"},{"code":"#(loop [lst %1 n %2]\n   (if (= n 0)\n     (first lst)\n     (recur (rest lst) (- n 1))))","problem":21,"user":"52d9ba39e4b09f7907dd13af"},{"problem":21,"code":"(fn [lst n]\n    (if (= n 0)\n      (first lst)\n    (recur (rest lst) (- n 1))))","user":"55101237e4b06e50f9beb181"},{"code":"(fn f ([coll n] (if (= n 0) (first coll) (recur (rest coll) (dec n)))))\n\n;(fn f ([coll n] (if (zero? n) (first coll) (recur (rest coll) (dec n)))))","problem":21,"user":"51fd96cee4b0f1313d468a4d"},{"code":"(fn itemnth [seq itemct]\n  (loop [sq seq ct itemct]\n    (if (= ct 0)\n      (first sq)\n    (recur (rest sq) (dec ct)))))","problem":21,"user":"50057f23e4b0678c553fc466"},{"problem":21,"code":"(fn findLast [coll n]\n  (if (= n 0) \n    (first coll)\n    (findLast (rest coll) (- n 1))))","user":"55f4ebffe4b06e875b46ce81"},{"problem":21,"code":"(fn yoyo [l n]\n  (cond\n   (= n 0) (first l)\n   :else (yoyo (rest l) (- n 1))))","user":"58138439e4b0f478707a0611"},{"code":"(fn [xs idx] (loop [lst xs i idx] \n               (if (zero? i) (first lst) (recur (rest lst) (dec i)))))","problem":21,"user":"51558136e4b06c5f6a1490a8"},{"problem":21,"code":"(fn [x y]\n  (if (= y 0)\n    (first x)\n    (recur (rest x) (- y 1))))","user":"56eaa738e4b04a395b9a040d"},{"problem":21,"code":"(fn get-nth\n  [xs n]\n  (if (<= n 0)\n    (first xs)\n    (recur (rest xs) (dec n))))","user":"5b2c282ce4b025bcb146f2b2"},{"problem":21,"code":"(fn \n  [list n]\n  \t(get (vec list) n))","user":"5b6f72ede4b0c6492753e7dc"},{"problem":21,"code":"#(apply second \n  (filter (fn [coll] (= (first coll) %2)) \n    (map-indexed (fn [i x] [i x]) %1)))","user":"56540485e4b0f9d632dd847a"},{"problem":21,"code":"(fn nth-element [xs n] \n  (first (drop n xs)))","user":"518b8561e4b0f028e99addef"},{"code":"(fn [coll n]\n  (loop [coll coll\n         c n]\n    (if (= c 0)\n    \t(first coll)\n      \t(recur (rest coll)(dec c)))))","problem":21,"user":"52b94e26e4b07a9af57922b9"},{"problem":21,"code":"(fn [seq n]\n  (last (take (inc n) seq)))","user":"57462a4de4b009280f9f2b5d"},{"problem":21,"code":"(fn\r\n  [seq n]\r\n  (loop [passed []\r\n         working-seq seq]\r\n    (if (= (count passed) n)\r\n      (first working-seq)\r\n      (recur (into passed [(first working-seq)])\r\n             (rest working-seq)))))","user":"5a51840fe4b05d388ecb6bea"},{"code":"(fn [list, n] (.get list n))","problem":21,"user":"5144f121e4b021a5ff8301fa"},{"code":"(fn get_nth [li n]\n   (loop [i 0 re li]\n      (if (= i n)\n        (first re)\n        (recur (+ i 1) (rest re))\n        )\n      )\n  )","problem":21,"user":"4fea09b2e4b0547ebccb2485"},{"problem":21,"code":"(fn [s n] (first (filter (fn [x] (= (.indexOf s x) n)) s)))","user":"5f86f5a3e4b0649ffcda4cad"},{"problem":21,"code":"#(get (apply hash-map (interleave  (range 10) %1)) %2)","user":"56b80ad1e4b0f26550335921"},{"code":"(fn [list n]\n  (if (= n 0)\n(first list)\n(recur (next list) (dec n))))","problem":21,"user":"50cb4eb4e4b0f78a8e1645b5"},{"problem":21,"code":"(fn [list index]\n  (first (last (split-at index list))))","user":"55921c21e4b0604b3f94d588"},{"code":"(fn [listx rankx]  \n  (loop [cnt rankx acc listx]\n  (if (zero? cnt)\n    (first acc)\n    (recur (dec cnt) (rest acc)))))","problem":21,"user":"509fe759e4b08df8156e9e43"},{"code":"(fn f [coll n]\n  (if (> n 0)\n    (f (rest coll) (dec n))\n    (first coll)))","problem":21,"user":"516abecae4b081287f204e9f"},{"code":"#(last(take (+ %2 1) %1))","problem":21,"user":"4eba93c7535dfed6da9c6d65"},{"problem":21,"code":"(fn nf [arr index] (if (= index (- (count arr) 1)) (last arr) (nf (take (- (count arr) 1) arr) index)))","user":"5e0596d5e4b0a607a9a45d7d"},{"problem":21,"code":"(fn -nth [xs n]\n  (if (= n 0)\n    (first xs)\n    (recur (rest xs) (dec n))))","user":"5b98f7f3e4b0c0b3ffbd4ac2"},{"problem":21,"code":"#(loop [idx 0\n         remaining-items %1]\n    (if (= idx %2)\n      (first remaining-items)\n      (recur (+ idx 1) (rest remaining-items))))","user":"56f8055ee4b08e7d20b96835"},{"problem":21,"code":"(fn [lst n]\n       (cond\n         (= 0 n) (first lst)\n         :else (recur (rest lst) (dec n))\n         )\n       )","user":"6079e2dfe4b0a637ed780366"},{"code":"(fn n-th ([x n] (n-th x n 0))\n  ([x n counter] (if (= counter n) (first x) (recur (rest x) n (+ counter 1)))))","problem":21,"user":"4edfb618535d10e5ff6f5343"},{"problem":21,"code":"#(loop [x %1\n        y %2]\n   (if (<= y 0)\n     (first x)\n     (recur (rest x) (dec y))))","user":"5c538cb5e4b0fb8c5ffd99fb"},{"code":"(fn [seqs n] (first (reverse (take (+ n 1) seqs))))","problem":21,"user":"51ecb0fee4b0bb5070431583"},{"code":"(fn [seq,n] (last (take (+ n 1) seq)))","problem":21,"user":"4df1e213535d08e6dec9fe20"},{"code":"(fn nth-el [data n] (first (drop n data)))","problem":21,"user":"53333e7be4b019098a6f8b7e"},{"problem":21,"code":"(fn [coll pos]\n    (loop [i 0\n           coll coll]\n      (if (= i pos)\n        (first coll)\n        (recur (inc i) (rest coll)))))","user":"5e52f245e4b027a2e10ac0e1"},{"code":"(fn [coll n]\r\n  (let [rest (next coll)]\r\n    (if (= n 0)\r\n      (first coll)\r\n      (recur rest (- n 1)))))","problem":21,"user":"51128c6fe4b0350614f07a79"},{"code":"(comp first last #(split-at %2 %1))","problem":21,"user":"53396c03e4b0e30313ee6ca7"},{"problem":21,"code":"#(first (reverse (take (+ 1 %2) (seq %1))))","user":"557f1a08e4b05c286339e0dc"},{"code":"#(if (= %2 0)\n  (first %1)\n  (recur (rest %1) (- %2 1)))","problem":21,"user":"4f11caf6535d64f603146424"},{"code":"(fn my-nth [l i]\n  (if (= i 0) (first l) (my-nth (rest l) (dec i))))","problem":21,"user":"51434a4fe4b0c172af7558d4"},{"problem":21,"code":"(fn [seq num]\n\t(let [s \n          (if (vector? seq)\n            seq\n            (into [] seq))]\n      (get s num)))","user":"59f75327e4b0966464fe6aec"},{"problem":21,"code":"(fn numberedElement [xs n]\n  (first (drop n xs))\n)","user":"59d4fe81e4b0ef0a1e9b5bec"},{"problem":21,"code":"#(->> % (take (inc %2)) last)","user":"542c22bde4b0dad94371f29e"},{"problem":21,"code":"#(loop [l %1 n %2]\n   (if (= n 0)\n     (first l)\n     (recur (rest l) (dec n))))","user":"5514534ce4b055c2f668d4d3"},{"problem":21,"code":"(fn bla\n     ([coll] coll)\n     ([coll index] (if (pos? index) (bla (rest coll) (dec index)) (first coll))))","user":"59bfd910e4b0a024fb6ae459"},{"problem":21,"code":"(fn bla [inp, n] (if (> n 0) (bla (rest inp), (- n 1)) (first inp)))","user":"550714e2e4b021ccfedb969e"},{"problem":21,"code":"(fn give-me-nth [l n] (if (= n 0) (first l) (give-me-nth (rest l) (- n 1))))","user":"572a3d96e4b0f4d77e651232"},{"code":"(fn [coll n]\r\n  (if (zero? n)\r\n    (first coll)\r\n    (recur (rest coll) (dec n))))","problem":21,"user":"4ee40938535d10e5ff6f5375"},{"code":"(fn[x y] (last (take (+ y 1) x)))","problem":21,"user":"4ef01dc9535dced4c769f209"},{"problem":21,"code":"(fn [col n] \n  (if (zero? n)\n     (first col)\n     (recur (rest col) (dec n))))","user":"5b2be9b1e4b025bcb146f2b0"},{"problem":21,"code":"#(if (= 0 %2) (first %1) (recur (next %1) (- %2 1)))","user":"574f3a40e4b02ea114799258"},{"code":"(fn f [s n] (if (= n 0) (first s) (f (rest s) (dec n))))","problem":21,"user":"4e9b2f0b535dbda64a6f6b76"},{"code":"(fn [list n] (if (<= n 0) (first list) (recur (rest list) (- n 1))))","problem":21,"user":"4fd153cee4b04c3a95aa040e"},{"problem":21,"code":"#(loop [i %2\n        coll %1]\n   (if (= i 0)\n     (first coll)\n     (recur (dec i) (next coll))))","user":"5e9df069e4b0157ca9664807"},{"code":"(fn [a n] (first (reverse (take (+ n 1) a))))","problem":21,"user":"50c9ece0e4b0a409464667d8"},{"problem":21,"code":"(fn [x n] \n  (if (< 0 n)\n    (recur (rest x) (dec n))\n    (first x)))","user":"5628f727e4b00e49c7cb47f5"},{"problem":21,"code":"(fn [seq n]\n  (loop [s seq\n         i 0]\n    (if (= i n)\n      (first s)\n      (recur (rest s) (inc i)))))","user":"5ad45f52e4b0ea6055cfabd7"},{"problem":21,"code":"(fn [x n] ((into {} (map-indexed vector x)) n))","user":"5613f727e4b05f002753dfab"},{"code":"(fn [lst n] (loop [ilst lst i-n n] (if (< i-n 1) (first ilst) (recur (rest ilst) (- i-n 1)))))","problem":21,"user":"52f304b4e4b05e3f0be25f07"},{"problem":21,"code":"(fn cus-nth [ls n] (first (nthrest ls n)))","user":"5f6e05d0e4b02876ed9fd060"},{"code":"(fn [coll n]\n   (loop [i coll x n]\n     (println i x)\n     (if (= x 0)\n       (first i)\n       (recur (rest i) (- x 1)))))","problem":21,"user":"4ea03a3a535d7eef308072a0"},{"code":"(fn [x y] (if (zero? y) (first x) (recur (rest x) (dec y))))","problem":21,"user":"53879cace4b06839e8705f22"},{"code":"(fn nthFn [x n] \n  (\n \tif (= 0 n) (first x) (nthFn (rest x) (- n 1)) \n  )\n )","problem":21,"user":"518aec06e4b06da86c1973c2"},{"code":"#(loop [arr %1 ind %2] \n\t(if (zero? ind) \n\t\t(first arr) \n\t\t(recur (rest arr) (dec ind))))","problem":21,"user":"5171493fe4b0d70c8bbbf23b"},{"code":"(fn [x n]\n  (loop [cnt 0 items x]\n\t\t(if (= n cnt)\n\t\t\t(first items)\n\t\t\t(recur (inc cnt) (rest items)))))","problem":21,"user":"4e510260535dc968683fc4f2"},{"problem":21,"code":"(fn [sequ, n] (if (= 0 n) (first sequ) (recur (rest sequ) (- n 1) ) ))","user":"541067c0e4b01498b1a719a8"},{"problem":21,"code":"(fn [s n]\n  (loop [tail s\n         i n]\n    (if (and (> i 0) (seq tail))\n      (recur (rest tail) (dec i))\n      (first tail))))","user":"4fd4bddce4b0d4de60cee36e"},{"problem":21,"code":"(fn [coll e] (last (take (+ e 1) coll)))","user":"556ca4b1e4b09a3098a52500"},{"problem":21,"code":"(fn [x n]\n(loop [i 0 l x]\n  (if (= i n)\n    (first l)\n    (recur (inc i) (rest l))))\n )","user":"54b050cee4b09f271ff37d13"},{"code":"(fn nthElement [s n] (if (= n 0) (first s) (nthElement (rest s) (- n 1))))","problem":21,"user":"4e6537f1535d8ccf87e9fe70"},{"code":"(fn myNth [l n] \n  (if (= 0 n) \n    (first l) \n    (myNth (rest l) (- n 1))))","problem":21,"user":"4f1e1209535d64f603146493"},{"problem":21,"code":"(fn my-nth [s n]\n  (if (= n 0)\n    (first s)\n    (my-nth  (rest s) (dec n))))","user":"5e856736e4b09a7a73c8bbd2"},{"problem":21,"code":"(fn foo [ls m]\n(loop [xs ls\n       n m] \n  (if (= 0 n) \n    (first xs) \n    (recur (rest xs) (- n 1)))))","user":"53f7f1dde4b0de5c41848567"},{"code":"(fn [l c] (first (drop c l)))","problem":21,"user":"4fe89eb5e4b07c9f6fd12c5a"},{"code":"(fn [coll n] (if (= 0 n) (first coll) (recur (next coll) (dec n))))","problem":21,"user":"524ae8e6e4b09eba1c0223b5"},{"code":"(fn [lst number] (loop [n number l lst]\n                   (if (zero? n) (first l)\n                     (recur (dec n) (rest l))\n                     )\n                   )\n  )","problem":21,"user":"4f7683dae4b0fbe0118ec56f"},{"code":"(fn !\n  [seq n]\n  (if (zero? n)\n    (first seq)\n    (! (rest seq) (dec n))))","problem":21,"user":"51dc5033e4b09c47a74ce109"},{"problem":21,"code":"(fn [xs n]\n      (if (= n 0)\n        (first xs)\n        (recur (rest xs) (dec n))))","user":"59769d75e4b01722bebd4cdd"},{"code":"(fn [l index] (get (vec l) index))","problem":21,"user":"51cef277e4b0e42293a22567"},{"code":"#(if (= 0 %2)\n  (first %1)\n  (recur (rest %1) (- %2 1)))","problem":21,"user":"4e6a2f93535d8ccf87e9feaa"},{"code":"(fn\n  [xs n]\n  (first (drop n xs)))","problem":21,"user":"529dd5a4e4b04e0c58e87b82"},{"problem":21,"code":"(fn my-nth [seqi i]\n  (loop [elem seqi cpt 0]\n    (if (= cpt i)\n      (first elem)\n      (recur (rest elem) (inc cpt)))))","user":"5a6cb2eae4b0512ff01cda57"},{"code":"(fn f [x y]\n  (if (= y 0)\n    (first x)\n    (f (rest x) (dec y))))","problem":21,"user":"4fd2789ee4b04c3a95aa0422"},{"code":"(fn [l n] \n  (if (= n 0)\n    (first l)\n    (recur (rest l) (- n 1))))","problem":21,"user":"4edca56f535d10e5ff6f5324"},{"code":"(fn [coll n]\r\n  (first (nthnext coll n)))","problem":21,"user":"4e1158aa535d04ed9115e7c6"},{"problem":21,"code":"#((comp first (apply comp (repeat %2 rest))) %1)","user":"5b7f2d75e4b047b03b203768"},{"problem":21,"code":"(fn [a, b] (last (take (inc b) a)))","user":"5a973a0ae4b0d174b936c77b"},{"problem":21,"code":"(fn [col n] (if (= n 0) (first col) (recur (rest col) (dec n))))","user":"5243e37ae4b076204b44fae3"},{"code":"(fn [x y ] ((vec x) y))","problem":21,"user":"50949602e4b04e5742806c4e"},{"code":"(fn [s n] (first (filter #(not= 0 %) (map-indexed (fn [i v] (if (= n i) v 0)) s))))","problem":21,"user":"4f3ae998e4b0e243712b1f1f"},{"problem":21,"code":"(fn [lst n]\n  (loop [ls lst n1 0]\n    (if (= n1 n) (first ls) (recur (rest ls)  (inc n1) ))))","user":"57fc08d8e4b0d3187e900988"},{"code":"(fn my-nth [li x] (if (= x 0) (first li) (my-nth (rest li) (dec x))))","problem":21,"user":"51c09719e4b0c9c82288293c"},{"code":"(comp first (fn [c n] (drop n c)))","problem":21,"user":"51672d15e4b079759a74a5e7"},{"problem":21,"code":"(fn [l n]\n  (if (zero? n)\n      (first l)\n      (recur (rest l) (dec n))))","user":"5e50012ae4b027a2e10ac0bd"},{"code":"(fn [x,y]\n  (last (take (+ y 1) x)))","problem":21,"user":"5006e494e4b0678c553fc492"},{"code":"(fn [c i]\n  (loop [x c, acc 0]\n    (if (= i acc)\n      (first x)\n      (recur (rest x) (inc acc)))))","problem":21,"user":"50706287e4b07bd6ad9b9f2b"},{"problem":21,"code":"#(loop [elts %1 idx 0]\n   (if (= idx %2)\n     (first elts)\n     (recur (rest elts) (inc idx))))","user":"55eaca20e4b0121d4835fdb4"},{"problem":21,"code":"(fn NTH [col inx]\n  (when-let [s (seq col)]\n    (if (zero? inx)\n      (first s)\n      (recur (rest col) (dec inx)))))","user":"57b82f20e4b0fbc9809a27d9"},{"problem":21,"code":"(fn [collection index] ((vec collection) index))","user":"56449e4de4b0284900eef5f9"},{"code":"(fn _n [sq, n] (if (= 0 n) (first sq) (_n (rest sq) (- n 1) ) ))","problem":21,"user":"533a2f7be4b0e30313ee6cb8"},{"code":"(fn [param n] (get (vec param) n))","problem":21,"user":"52c57371e4b0c2d177d620f3"},{"problem":21,"code":"(fn [listaEntrada n]\n     (loop [lista listaEntrada\n            counter 0]\n       (if (= counter n)\n         (first lista)\n         (recur (rest lista) (inc counter)))))","user":"6074e1e7e4b069485764de50"},{"problem":21,"code":"(fn [coll n]\n  (last (take (+ 1 n) coll)))","user":"5a125a38e4b04bbd27e6da39"},{"problem":21,"code":"(fn mynth [x y] (first (drop y x)))","user":"5b1619e4e4b0cc2b61a3be77"},{"code":"(fn nth1 [x n]\n  (if (= n 0)\n    (first x)\n    (nth1 (rest x) (dec n))))","problem":21,"user":"52b0323ee4b0c58976d9acc6"},{"problem":21,"code":"(fn [arr nr]\n  (if (= nr 0)\n    (first arr)\n    (recur (rest arr) (dec nr))))","user":"53fb9f28e4b0de5c41848583"},{"problem":21,"code":"(fn [s n] (get(vec s)n))","user":"5474df6ee4b0c51c1f4d7290"},{"problem":21,"code":"#(if (zero? %2)\n   (first %1)\n   (recur (rest %1) (dec %2)))","user":"5570a594e4b09a3098a52530"},{"problem":21,"code":"(fn my-fun [sq, n] \n        (if (zero? n)\n          (first sq)\n          (my-fun (rest sq) (dec n))))","user":"5666500ee4b0e91d5f5c566d"},{"problem":21,"code":"(fn [col n] (if (> n 0) (recur (rest col) (dec n)) (first col)))","user":"54dd76c8e4b024c67c0cf794"},{"code":"(fn [coll n] \n  ((apply comp (cons first (repeat n rest))) coll))","problem":21,"user":"4e8ddf32535d65386fec213c"},{"problem":21,"code":"(fn [coll pos]\n    (first (drop pos coll)))","user":"5e12327ee4b099d064962fe5"},{"problem":21,"code":"(fn [some-list pos]\n  (loop [x some-list\n         pos pos]\n    (if (zero? pos)\n      (first x)\n      (recur (rest x) (dec pos)))))","user":"56acfee5e4b03c432f18734f"},{"problem":21,"code":"(fn getNth [nlist, n] (get (vec nlist) n))","user":"5d125d63e4b02c15ef021999"},{"code":"(fn [s, n] \n  (first \n    (keep-indexed \n      (fn [i,e] (if (= n i) e nil)) \n       s)))","problem":21,"user":"521f4f47e4b0e6c71e0c0bd8"},{"problem":21,"code":"(fn [l n]\n(first(reverse(take (+ n 1) l)))\n)","user":"54f4a457e4b0f2f3c5226e83"},{"problem":21,"code":"(fn num [ls n] (if (= n 0) (first ls) (num (rest ls) (- n 1))))","user":"5460eadde4b01be26fd74694"},{"problem":21,"code":"(fn [xs n]\n  (loop [l xs acc n]\n        (if (= acc 0) (first l)\n            (recur (rest l) (- acc 1)))))","user":"581c4ab4e4b04b46fc4b0eea"},{"problem":21,"code":"(fn my-nth [col n]\n  (if (= n 0)\n    (first col)\n    (if (= n 1)\n      (second col)\n      (if (= (count col) (dec n))\n        (last col)\n        (my-nth (rest col) (dec n))))))","user":"5e44f5b1e4b01d43a70e8e8d"},{"problem":21,"code":"(fn  [coll n]\n  (loop [i 0\n         v coll]\n    (if (< i n)\n      (recur (inc i) (rest v))\n      (first v))))","user":"5ab490f4e4b073f17744261d"},{"problem":21,"code":"(fn [s n](first (drop n s)))","user":"55e87073e4b0121d4835fd8f"},{"problem":21,"code":"(fn xth [xs n]\n  (if (= n 0)\n    (first xs)\n    (xth (rest xs) (dec n))))","user":"5fa8424ce4b0fa27300f3de5"},{"code":"(fn ! [x y] (if (= y 0) (first x) (! (rest x) (- y 1))))","problem":21,"user":"52faec2ee4b047fd55837004"},{"code":"(fn [s n] (loop [s s, n n] (if (pos? n) (recur (next s) (dec n)) (first s))))","problem":21,"user":"5029399be4b061fd216be4b6"},{"problem":21,"code":"(fn [s index] (if (> index 0) (recur (rest s) (- index 1)) (first s)))","user":"56b280e3e4b0982f16b37e06"},{"problem":21,"code":"(fn [list1 n3]\n   (loop [cnt 0\n          list list1]\n     (if (< cnt n3)\n       (do\n         (recur (inc cnt) (rest list)))\n       (first list))))","user":"5a58d8a0e4b05d388ecb6c8a"},{"code":"(fn [coll n] (first (last (take (+ n 1) (iterate next coll)))))","problem":21,"user":"52872d54e4b0239c8a67ae32"},{"problem":21,"code":"(fn my-index [sq index]\n  (loop [i 0 sq2 sq]\n    (if (= i index)\n      (first sq2)\n      (recur (inc i) (rest sq2)))))","user":"5ff6d695e4b06df49cee1499"},{"problem":21,"code":"(fn n-th-element [seq n]\n  (if (> n 0)\n    (n-th-element (rest seq) (- n 1))\n    (first seq)))","user":"5faece16e4b08cb800c85b02"},{"problem":21,"code":"(fn [s place]\n  (last (apply take (+ place 1) (list s))))","user":"5f3ce2c7e4b004f08c61c548"},{"problem":21,"code":"(fn\n  [mylist n & i]\n  (let [i (if (nil? i) 0 i)]\n    (if (= i n)\n      (first mylist)\n      (recur (rest mylist) n (+ i 1))\n    )\n  )\n)","user":"5873b104e4b01531a375ea38"},{"problem":21,"code":"(fn foo [x n] (first (nthrest x n)))","user":"573042a7e4b0cd1946bd0faa"},{"problem":21,"code":"(fn [coll i]\n  (if (zero? i)\n    (first coll)\n    (recur (rest coll) (dec i))))","user":"5afecee2e4b0cc2b61a3bd28"},{"code":"(fn [col n]\n(if (zero? n)\n(first col)\n(recur (rest col) (- n 1))))","problem":21,"user":"50bcb8b4e4b0594b91591c61"},{"problem":21,"code":";#(get (vec %1) %2)\n(fn [coll idx] (get (vec coll) idx))","user":"4ebed069535dfed6da9c6d99"},{"problem":21,"code":"(fn [c t] \n  (loop [times t\n        coll c]\n   (if (= 0 times)\n     (first coll)\n     (recur (dec times) (rest coll)))))","user":"57291a39e4b0c6e51e0d2b14"},{"problem":21,"code":"(fn [coll indx] (last (take (+ indx 1) coll)))","user":"57344edbe4b0cd1946bd1008"},{"problem":21,"code":"(fn nthele [l1 n]\n  (last (take (inc n) l1)))","user":"5fe09d1fe4b05ac5b16ea15b"},{"code":"(fn my-nth [lst n]\n  (if (<= n 0)\n    (first lst)\n    (my-nth (rest lst) (- n 1))))","problem":21,"user":"5347870be4b084c2834f4a4b"},{"code":"(fn myNth [xs n]\n  (if (= n 0)\n      (first xs)\n      (myNth (rest xs) (- n 1))))","problem":21,"user":"4fab21b2e4b081705acca211"},{"problem":21,"code":"(fn get-nth [x n]\n  (if (= n 0)\n    (first x)\n    (get-nth (rest x) (- n 1))))","user":"51eda45ce4b0bb507043159b"},{"problem":21,"code":"(fn my-nth [s n] \n  (if (= n 0) \n    \t(first s)\n    \t(my-nth (rest s) (- n 1))\n    )\n  )","user":"56263f3fe4b00e49c7cb47bc"},{"problem":21,"code":"(fn funct [x y]\n  (if (zero? y)\n    (first x)\n    (funct (rest x) (dec y))\n  )\n)","user":"567e6d24e4b0feffd0d18eb4"},{"problem":21,"code":"(fn\n  [in-list element-number]\n  (first (drop element-number in-list)))","user":"54d100abe4b0e8a36923e5d8"},{"code":"(fn enth [lst idx] \n  (if (= 0 idx) \n    (first lst) \n    (enth (rest lst) (- idx 1))))","problem":21,"user":"504e1fdde4b0f6ff3350c468"},{"problem":21,"code":"(fn [input-list n] (first (drop n input-list)))","user":"56188848e4b053970a773aea"},{"problem":21,"code":"(fn [coll n]\n  (loop [acc coll\n         n n]\n    (if (= n 0)\n      (first acc)\n      (recur (rest acc)\n             (- n 1)))))","user":"585aad0be4b0f14aab7c8753"},{"code":"(fn gnth [xs, n]\n  (if (= n 0)\n    (first xs)\n    (recur (rest xs) (- n 1))))","problem":21,"user":"52846deee4b0239c8a67adcf"},{"code":"#(loop [l % n %2] (if (= 0 n) (first l) (recur (rest l) (- n 1))))","problem":21,"user":"508a2c2fe4b016a2107004a1"},{"code":"(fn [s,n] (get (vec s) n))","problem":21,"user":"4f944f60e4b0dcca54ed6cc2"},{"problem":21,"code":"(fn choose [group n] (first (drop n group)))","user":"56446954e4b0284900eef5f4"},{"code":"#(( vec %1) %2)","problem":21,"user":"4f3b5219e4b0e243712b1f2a"},{"problem":21,"code":"(fn [col n]\n  (if (= n 0)\n    (first col)\n    (recur \n     (rest col)\n     (dec n))))","user":"587b8bdee4b01531a375eaff"},{"code":"#(->> %1 (take (inc %2)) last)","problem":21,"user":"4ecfe9ab535d44c135fd68c0"},{"code":"(fn [x y]( loop[li x cnt 0]\n  (if (= cnt y)\n    (first li)\n  (recur (rest li) (inc cnt)))))","problem":21,"user":"4f8beb2fe4b02e764a0a5185"},{"problem":21,"code":"(fn nth-elt [ls n]\n  (if (= n 0)\n    (first ls)\n    (nth-elt (rest ls) (- n 1))))","user":"53ed1778e4b0d648e757f4bd"},{"problem":21,"code":"#(loop [l %1 n %2]\n  (if (= n 0)\n    (first l)\n    (recur (rest l) (dec n))))","user":"5c633df2e4b0fca0c162265c"},{"problem":21,"code":"(fn myNth [x idx]\n  (if (= idx 0)\n    (first x)\n    (myNth (rest x) (- idx 1))\n    )\n)","user":"556ddbeae4b09a3098a5250a"},{"problem":21,"code":"(fn [c n]\n(if (> n 0)\n(recur (rest c) (dec n))\n(first c)))","user":"577ab41fe4b0d3393e5deb05"},{"problem":21,"code":"(fn [col, number] ( first (drop number col)))","user":"548ef1dee4b0e286459a1229"},{"code":"(fn [sequenc n]\n  (loop [i 0, s sequenc]\n    (if (= i n)\n        (first s)\n        (recur (inc i) (rest s)))))","problem":21,"user":"51789dfae4b03d69594194d7"},{"code":"(fn n [list x] (if (< x 1) (first list) (n (rest list) (dec x))))","problem":21,"user":"4ee67364535d93acb0a6685f"},{"problem":21,"code":"(fn [coll n]\n  (loop [count n\n         c coll]\n    (if (zero? count)\n      (first c)\n      (recur (dec count) (rest c)))))","user":"60a42199e4b00e9e6653c454"},{"problem":21,"code":"(fn [lista n] (first (drop n (take (inc n) lista))))","user":"57902cd8e4b0ebec4cfb75a6"},{"problem":21,"code":"(fn [the_seq elem_num]\n  (loop [n 0\n         tmp_seq the_seq]\n    (if (= elem_num n)\n      (first tmp_seq)\n      (recur (+ n 1) (rest tmp_seq)))))","user":"56c12aa2e4b0839206b9d682"},{"problem":21,"code":"(fn [coll idx] (second (first (filter #(= idx (first %1)) (map-indexed vector coll)))))","user":"591610d4e4b09b4ee5954b7e"},{"problem":21,"code":"#(loop [x %1 y %2] (if (zero? y) (first x) (recur (rest x) (dec y))))","user":"56ab7578e4b03c432f18733d"},{"code":"(fn [x y]\n  (first   (loop [cnt y lst x]\n      ; If count reaches 0 then exit the loop and return lst\n\t    (if (= cnt 0)\n\t    lst\n\t    ; Otherwise decrease count and\n\t    ; use recur to feed the new values back into the loop\n\t    (recur (dec cnt) (next lst))))\n))","problem":21,"user":"4f6ecc65e4b07046d9f4efdd"},{"code":"(fn choose\n  [xs, n]\n  (cond\n    (= 0 n) (first xs)\n    :else (choose (rest xs) (- n 1))))","problem":21,"user":"4fd6f4d8e4b0dab7d829f37b"},{"code":"(fn [x y] (first (nthnext x y)))","problem":21,"user":"4e460426535dc968683fc4b1"},{"problem":21,"code":"(fn [x n]\n  (loop [s x, i 0]\n    (if (= i n)\n      (first s)\n      (recur (rest s) (inc i))\n    )\n  )\n)","user":"53c16e82e4b00fb29b221262"},{"code":"(fn foo [lst index] (if (= index 0) \n  (first lst) \n  (foo (rest lst) (- index 1))))","problem":21,"user":"4f4fdc56e4b03ad3f0c10cef"},{"code":"(fn eln [coll n]\n    (if (zero? n) (first coll)\n      (recur (rest coll) (dec n))))","problem":21,"user":"52950ab6e4b02ebb4ef7501a"},{"code":"(fn [lst index] \n  (if (< index 1) \n        (first lst)\n        (recur (rest lst) (dec index))))","problem":21,"user":"502a4fdfe4b09dd42f6f3644"},{"code":"#(first( nthrest %1 %2))","problem":21,"user":"5197d144e4b068aa333628f0"},{"code":"(fn [coll, n] (first(drop n coll)))","problem":21,"user":"4fc5eb7fe4b0ee37620e1803"},{"code":"(fn get [l i]\n  (if (zero? i)\n    (first l)\n    (get (rest l) (- i 1))\n  )\n)","problem":21,"user":"502fb9bee4b0f8db655c4ee2"},{"problem":21,"code":"(fn bad-nth\n  [coll index]\n  (let [items (atom (reverse coll))\n        next-item (atom nil)]\n    (loop []\n      (reset! next-item (last (reverse @items)))\n      (swap! items (comp reverse butlast reverse))\n      (if (zero? ((apply comp (map (constantly dec) @items)) index))\n        @next-item\n        (recur)))))","user":"5c1c08cde4b01240ff567219"},{"problem":21,"code":"(fn [collection index] (last (take (inc index) collection)))","user":"592749e4e4b072a2710fcec8"},{"problem":21,"code":"(fn nth-element [x y]\n  (if (= y 0)\n    (first x)\n    (nth-element (rest x) (- y 1))\n  )\n)","user":"53b12c76e4b047364c04448a"},{"problem":21,"code":"(fn [s i] \n  (if \n    (= 0 i) \n    (first s) \n    (when-let [ne (next s)] \n      (recur ne (dec i))\n      )))","user":"57bc50c7e4b05aa3c4741c40"},{"problem":21,"code":"(fn [lst n]\n  (loop [lst lst\n   \t     n n]\n  (if (= n 0)\n    (first lst)\n    (recur (rest lst) (- n 1)))))","user":"571ff1ebe4b0c5bde472c088"},{"problem":21,"code":"#(loop\n    [nums %1\n     n %2]\n    (if (= n 0)\n      (first nums)\n      (recur (rest nums) (dec n))))","user":"5820cca0e4b04b46fc4b0f62"},{"code":"(fn[s x] (first (nthnext s x)))","problem":21,"user":"52c246e3e4b07a9af579237c"},{"problem":21,"code":"#(loop [acc %1] (if (< (- (count %1) (count acc)) %2) (recur (rest acc)) (first acc)))","user":"5fdbde92e4b05ac5b16ea137"},{"code":"(fn [x n](loop [current 0 sequence x](if (= current n) (first sequence) (recur (inc current) (next sequence)))))","problem":21,"user":"52e12aa0e4b09f7907dd1419"},{"problem":21,"code":"(fn [x n] (loop [i 0 v x] (if (= i n)(first v) (recur (inc i) (rest v)))))","user":"5fa9fd9be4b0fa27300f3df5"},{"code":"(fn [xs n] ((comp first (partial drop n)) xs))","problem":21,"user":"525b1e15e4b0cb4875a45d08"},{"problem":21,"code":"(fn nth-el [l n]\n  (if (> n 0)\n    (nth-el (rest l) (- n 1))\n    (first l)\n  )\n)","user":"56acc4b9e4b03c432f18734b"},{"problem":21,"code":"(fn [data search-idx]\n\t(loop [data data idx 0]\n\t\t(if (empty? data)\n\t\t\tnil\n\t\t\t(if (= idx search-idx)\n\t\t\t\t(first data)\n\t\t\t\t(recur (rest data) (inc idx))))))","user":"58409e47e4b089d5ab817dee"},{"code":"(fn [x n]\n  (loop [i 0, s x]\n    (if (< i n) (recur (inc i) (rest s))\n      (first s)))\n  )","problem":21,"user":"511aa2a4e4b0c87c59c9670a"},{"code":"(fn [xs n]\n  (if (empty? xs)\n    nil\n    (->> xs (drop n) first)))","problem":21,"user":"5344fe13e4b084c2834f4a32"},{"code":"#(get (apply vector %) %2)","problem":21,"user":"52e48632e4b09f7907dd1450"},{"code":"#(->> %1 (drop %2) (first))","problem":21,"user":"5046ee3ee4b03b02161376b4"},{"code":"(fn [xs n] (if (zero? n) (first xs) (recur (rest xs) (dec n) )))","problem":21,"user":"52d660eae4b09f7907dd1356"},{"code":"(fn [xs i] (if (= i 0) (first xs) (recur (rest xs) (dec i))))","problem":21,"user":"4ffa2009e4b0678c553fc3b6"},{"code":"(fn [s n] (first (reverse (take (inc n) s))))","problem":21,"user":"4e8ce277535d65386fec212f"},{"problem":21,"code":"(fn [seq n]\n  (loop [curr-seq seq index 0]\n    (if (= index n)\n      (first curr-seq)\n      (recur (rest curr-seq) (+ index 1)))))","user":"5a86ad84e4b05369db4d249c"},{"problem":21,"code":"(fn enth [elems elemNum]\n  (if (= elemNum 0)\n    (first elems)\n    (enth (rest elems) (dec elemNum))))","user":"558843dae4b059ccff29b1f3"},{"code":"(fn [l x] (first (keep-indexed #(if (= %1 x) %2) l)))","problem":21,"user":"510c16afe4b078ea7192110f"},{"problem":21,"code":"#(get (vec (take 1 (drop %2 %1))) 0)","user":"5bcc2d7ee4b07a9b28b1010b"},{"code":"(fn Nth [sequence, index] (if-not (= 0 index) (Nth (next sequence) (dec index)) (first sequence)))","problem":21,"user":"51ab7a68e4b04e3dc0c27b35"},{"code":"(fn [list index] (if (= index 0) (first list) (recur (rest list) (- index 1))))","problem":21,"user":"4f80a713e4b033992c121bf6"},{"code":"(fn [xs n]\n  (cond\n   (= n 0) (first xs)\n   :else (recur (rest xs) (- n 1))))","problem":21,"user":"52b5edd1e4b0c58976d9ad3c"},{"code":"(fn find-nth [x cnt] \r\n  (if (= 0 cnt) \r\n    (first x) \r\n    (recur (next x) (- cnt 1))))","problem":21,"user":"4eb47bb1535d7eef30807362"},{"problem":21,"code":"(fn [vec i] (get (into [] vec) i))","user":"5addadfce4b0837691e92c13"},{"problem":21,"code":"(fn [s n]\n   (first (drop n s)))","user":"55796743e4b05c286339e095"},{"code":"(fn [list idx] (last (take (+ idx 1) list)))","problem":21,"user":"504e685fe4b0f6ff3350c4ae"},{"problem":21,"code":"(fn [coll i]\n  (first (drop i coll)))","user":"542cc164e4b0dad94371f2ad"},{"problem":21,"code":"(fn[coll n] (get (vec coll) n))","user":"55a68518e4b09e57187da29b"},{"problem":21,"code":"(fn [coll n]\n (if (zero? n)\n   (first coll)\n   (recur (rest coll) (dec n))))","user":"53bf9cfbe4b0c98a41f5cca4"},{"code":"(fn [xs n] \n  (loop [xs xs n n]\n    (if (= 0 n) \n      (first xs)\n      (recur (rest xs) (dec n)))))","problem":21,"user":"4e51c67a535d302ef430da6a"},{"problem":21,"code":"(fn foo [l n]\n  (if (= n 0)\n    (first l)\n    (foo (rest l) (- n 1))))","user":"591cc30be4b09b4ee5954c0a"},{"problem":21,"code":"(fn tj [coll n]\n (if\n   (zero? n)\n   (first coll)\n   (recur (rest coll) (dec n))\n))","user":"56ba5cc6e4b0f26550335942"},{"problem":21,"code":"(fn [coll n]\n  (loop [i 0 elems coll]\n    (if (= i n)\n      (first elems)\n      (recur (+ i 1) (rest elems)))))","user":"565d8dcfe4b068f2fe63dc26"},{"problem":21,"code":"(fn enth [s i]\n  (if \n    (= (count s) (+ i 1))\n    (last s)\n    (enth (reverse (rest (reverse s))) i)\n  ))","user":"51ad808ee4b09397d5109784"},{"code":"(fn [li idx]\n  ((fn [i b]\n     (cond (= idx i) (first b) \n           (not (seq b)) nil \n           :else (recur (inc i) (rest b)))) 0 li))","problem":21,"user":"50e135f4e4b084616e11c667"},{"problem":21,"code":"(fn f [sq n]\n  (if (= n 0) \n    (first sq)\n    (f (rest sq) (dec n))\n   )\n  )","user":"53f9fe41e4b0de5c41848575"},{"problem":21,"code":"(fn nth-element\n  [xs pos]\n    (if (= 0 pos)\n      (first xs)\n      (nth-element (next xs) (dec pos))))","user":"56af5f74e4b061e3ca319acf"},{"code":"(fn getn\n\n   ([l,n] (getn l n 0) )\n\n   ([l,n,i]\n      (if (= n i)\n        (first l)\n        (getn (rest l) n (+ i 1))\n        )\n      )\n\n\n   )","problem":21,"user":"50f53694e4b057d4c52de881"},{"code":"(fn nth' [x y] (if (= y 0) (first x) (nth' (rest x) (- y 1))))","problem":21,"user":"503fdd54e4b0a5cbd99770bf"},{"problem":21,"code":"(fn [coll n]\n  (loop [co coll x n]\n    (if (= x 0)\n      (first co)\n      (recur (rest co) (dec x)))))","user":"567af6e2e4b05957ce8c61a0"},{"code":"(fn [lst i] (first (reverse (take (+ i 1) lst))))","problem":21,"user":"50838c06e4b0902986d69e0f"},{"code":"(fn my-nth [seq n]\n  (if (= n 0)\n    (first seq)\n  (my-nth (rest seq) (dec n))))","problem":21,"user":"4f4e4ecbe4b03ad3f0c10cbf"},{"code":"#(loop [l %1 n %2]\n   (if (zero? n)\n     (first l)\n     (recur (rest l) (dec n))\n     )\n   )","problem":21,"user":"52faff0de4b047fd55837007"},{"problem":21,"code":"(fn [s n]\n  (let [dropped (drop n s)]\n    (first dropped)))","user":"5484fab9e4b0e286459a11a6"},{"code":"(fn [ls n] \r\n  (let [v (filter #(= n (first %))\r\n    (map #(vector %1 %2) (range (count ls)) ls))] (last (last v))))","problem":21,"user":"4ec7d614535d6d7199dd36e7"},{"code":"(fn nnth [c x n] (if (= c n) (first x) (nnth (inc c) (rest x) n))) 0","problem":21,"user":"50b8de6ce4b0cba0e598b652"},{"code":"(fn [xs n]\n  (loop [x xs cnt n]\n    (if (= cnt 0)\n      (first x)\n      (recur (rest x) (dec cnt)))))","problem":21,"user":"5129039de4b03a34742b4313"},{"problem":21,"code":"(fn [remaining target]\n  (first (drop target remaining)))","user":"58ffbabce4b0438e51c2d002"},{"problem":21,"code":"(fn enth [x y] \n  (first \n   (drop y x)))","user":"57073037e4b0b0fb43fd0689"},{"code":"(fn mynth[l n] (if (= n 0) (first l) (mynth (rest l) (- n 1))))","problem":21,"user":"536234a5e4b0243289761e4d"},{"code":"(fn [s n]\n  (if (zero? n)\n    (first s)\n    (recur (rest s) (- n 1))))","problem":21,"user":"4f4175ffe4b0d7d3c9f3fce8"},{"code":"#((fn f1 [col ind n] (if (= ind n)\n  \t                   (first col)\n                     \t(f1 (rest col) ind (+ n 1)))) %1 %2 0)","problem":21,"user":"511f656ae4b085952a83535e"},{"problem":21,"code":"(fn [li e]\n  (if (= 0 e)\n    (first li)\n    (recur (rest li) (dec e))))","user":"56cf4a48e4b0ea9b8538f767"},{"code":"(comp first #(drop  %2 %))","problem":21,"user":"52a9406de4b0c58976d9ac43"},{"problem":21,"code":"(fn enth [l n] \n  (if (= n 0)\n    (first l)\n  \t(enth (rest l) (dec n))\n  )\n)","user":"5b8ec146e4b0c0b3ffbd49f0"},{"code":"(fn [cols idx]\r\n  (loop [x 0 col cols] \r\n    (if (= x idx) \r\n      (first col)\r\n      (recur (inc x) (rest col))  )))","problem":21,"user":"4ff99f47e4b0678c553fc3aa"},{"code":"( fn [seq n] (if (zero? n) (first seq) (recur (rest seq) (dec n))))","problem":21,"user":"50f745f6e4b0035e89151849"},{"code":"(fn [initial-l initial-i]\r\n      (loop [curr-index 0, l initial-l]\r\n        (if (= curr-index initial-i)\r\n          (first l)\r\n          (recur (inc curr-index) (next l)))))","problem":21,"user":"4dda61dd535d02782fcbe9f3"},{"problem":21,"code":"(fn grab [xs, i] \n  (if (= i 0) \n    (first xs) \n    (grab (rest xs) (dec i))\n  )\n)","user":"5a0362a0e4b01bb0ae8afd81"},{"code":"(fn [coll n]\n           (if (= n 0)\n             (first coll)\n             (recur (rest coll) (dec n))))","problem":21,"user":"4f4023d9e4b0e243712b1fa9"},{"problem":21,"code":"(fn [s n] (first (drop n (seq s))))","user":"560a7591e4b05f002753def8"},{"code":"(fn [xs n]\n  (first (nthnext xs n)))","problem":21,"user":"4f03862a535dcb61093f6b11"},{"problem":21,"code":"(fn my-nth [elements n]\n  (if (= n 0)\n    (first elements)\n    (my-nth (rest elements) (- n 1))))","user":"56822f37e4b0945ebc182a8d"},{"code":"#(first (second (split-at %2 %1)))","problem":21,"user":"4f26c487e4b0d6649770a006"},{"code":"(fn choose [seq x]\n  (if (= x (- (count seq) 1))\n    (last seq)\n    (choose (butlast seq) x)))","problem":21,"user":"4eec9432535d93acb0a668af"},{"problem":21,"code":"(fn l [x y] (if (= 0 y) (first x) (l (rest x) (- y 1))))","user":"5caf9a07e4b026601754b899"},{"problem":21,"code":"(fn nth-el [sq idx]\n  (if (= idx 0)\n    (first sq)\n    (nth-el (next sq) (dec idx))))","user":"5c6314c5e4b0fca0c1622658"},{"problem":21,"code":"(fn [lst n]\n  (let [final-count (- (count lst) n)]\n    (loop [lst lst]\n      (if (= final-count (count lst))\n        (first lst)\n        (recur (rest lst))))))","user":"55afc197e4b002ce9d5cbc18"},{"problem":21,"code":"(fn [s n]\n  (ffirst\n    (filter\n     (fn [pair] (apply #(= n %2) pair))\n     (map #(list %1 %2) s (range)))))","user":"5561d026e4b0c656e3ff17cc"},{"code":"(fn [xs n] \n  (loop [x (first xs) xr (rest xs) i 0]\n    (if (= i n) x (recur (first xr) (rest xr) (inc i)))))","problem":21,"user":"52199105e4b0c4ef0be82ff9"},{"problem":21,"code":"(fn \n  [l n] \n  (loop \n    [c n left l] \n    (if \n      (= 0 c) \n      (first left) \n      (recur (dec c) (next left)))))","user":"56051095e4b08b23635d3162"},{"problem":21,"code":"(fn [lst target] (last (take (inc target) lst)))","user":"5625f678e4b00e49c7cb47b8"},{"problem":21,"code":"(fn nl [lst i] (if (= i 0) (first lst) (nl (rest lst) (- i 1))))","user":"563bfd59e4b0bfe05bf1182f"},{"code":"(fn [s n] (.get s n))","problem":21,"user":"4faccddae4b081705acca22e"},{"code":"(fn iter [xs n]\n (if (<= n 0)\n    (first xs)\n    (iter (rest xs) (dec n))))","problem":21,"user":"51131da8e4b0350614f07a83"},{"code":"(fn f [p n]\n         (if (= n 0)\n           (first p)\n           (f (rest p) (- n 1))))","problem":21,"user":"511163a1e4b0253d64f055a0"},{"problem":21,"code":"(fn [li n]\n  (if (= n 0)\n    (first li)\n    (recur (rest li) (- n 1))))","user":"557a1e18e4b05c286339e09e"},{"problem":21,"code":"(fn [x,y] (last(take(+ 1 y)x)))","user":"548018ffe4b0c51c1f4d7339"},{"code":"(fn [l i] (first (nthrest l i)))","problem":21,"user":"53067590e4b02e8216869795"},{"problem":21,"code":"(fn n-th [x, y] (first (drop y x)) )","user":"57362e24e4b0cd1946bd102e"},{"problem":21,"code":"(fn [coll i]\n  (->> coll\n       (drop i ,,,)\n       (first ,,,)))","user":"5990a9fde4b0866487ed0d54"},{"problem":21,"code":"(fn xd [x y] (case y 0 (first x) (xd (rest x) (- y 1))))","user":"60901a6be4b03bd49d9f36c9"},{"problem":21,"code":"(fn newth [seq n]\n  \t(if (= n 0) (first seq) (newth (rest seq) (- n 1))))","user":"58c505dae4b021aa9917ed32"},{"problem":21,"code":"(fn [coll index]\n    (loop [count 0 coll coll]\n        (if (and (not (empty? coll)) (= count index))\n            (first coll)\n            (recur (inc count) (rest coll) ))))","user":"5896735fe4b00487982d529d"},{"problem":21,"code":"(fn getN [x y] \n\t(if (= 0 y)\n\t  (first x)\n\t  (getN (rest x) (- y 1))))","user":"54fae43ae4b0cf870d934708"},{"code":"(fn [col n] (let [v (vec col)] (v n)))","problem":21,"user":"5038381ce4b0803468ea2c6b"},{"problem":21,"code":"(fn [xs i]\n  (loop [ys xs\n         j i]\n    (if (= j 0)\n      (first ys)\n      (recur (rest ys) (dec j)))))","user":"5283a919e4b0239c8a67adbe"},{"code":"(fn [xs n]\n  (loop [n n, xs xs]\n    (if (= n 0)\n      (first xs)\n      (recur (dec n) (next xs)))))","problem":21,"user":"535778dee4b04ce2eb3ed27d"},{"problem":21,"code":"(fn f [l n]\n  (cond\n   (= n 0) (first l)\n   :else (f (rest l) (dec n))))","user":"58731176e4b01531a375ea2a"},{"problem":21,"code":"(fn index [l i]\n  (if (= i 0)\n    (first l)\n    (index (rest l) (- i 1))))","user":"5a776b62e4b013a48d39975f"},{"code":"(fn [s n] \n\t(first(last (split-at n (vec s)))))","problem":21,"user":"52a144b0e4b04e0c58e87bd6"},{"problem":21,"code":"(fn [s n]\n  (loop [i n\n         e s]\n    (if (= 0 i)\n      (first e)\n      (recur (dec i) (rest e)))))","user":"57233cc8e4b0c5bde472c0e1"},{"problem":21,"code":"(fn [lst n]\n\t(if (zero? n)\n   \t\t(first lst)\n   \t\t(recur (rest lst) (- n 1))))","user":"551760a5e4b06a49daca83c3"},{"code":"(fn [x n]\n  (last (take (+ n 1) x)))","problem":21,"user":"4eb951f5535dfed6da9c6d4f"},{"code":"(fn [elements index]\n  (loop [i index,\n         lst elements]\n    (if (zero? i)\n        (first lst)\n        (recur (dec i) (rest lst)))))","problem":21,"user":"4e99108d535dbda64a6f6b62"},{"code":"(fn get-nth [lst n]\n  (if (= n 0)\n    (first lst)\n    (get-nth (rest lst) (- n 1))))","problem":21,"user":"4faa9593e4b081705acca1f9"},{"problem":21,"code":"(fn [l n]\n  (loop [i 0 l l]\n    (if (= i n)\n      (first l)\n      (recur (inc i) (rest l)))))","user":"5c3d8576e4b0d62ef62d9fb4"},{"problem":21,"code":"(fn nth' [xs x] (if (= 0 x) (first xs) (nth' (rest xs) (- x 1))))","user":"54d03026e4b018d918be98de"},{"problem":21,"code":"(fn r [collection index]\n  (if (zero? index)\n    (first collection)\n    (r (rest collection) (- index 1))))","user":"56fe2a2fe4b08d47c97781ad"},{"code":"(fn [data i] \n  (if (= i 0) (first data) \n    (recur (rest data) (- i 1))))","problem":21,"user":"4ea11921535d7eef308072af"},{"problem":21,"code":"(fn [my-seq n]\n  (last \n   (take \n    (inc n) my-seq)))","user":"5c44f0fde4b0e06e1360a384"},{"problem":21,"code":"(fn nth-elem [s x] \n (last (take (inc x) s)))","user":"56688983e4b04acd4f672dee"},{"problem":21,"code":"(fn get_nth [x, i]\n  (last (take(inc i) x)))","user":"57f5a5a5e4b0d3187e9008d5"},{"problem":21,"code":"(fn [l idx] (first (drop idx l)))","user":"5ffe2d18e4b074f607df65ff"},{"problem":21,"code":"(fn hoo [x n] (if (= 0 n) (first x) (recur (rest x) (dec n))))","user":"5c3f29d4e4b08cd430848e8f"},{"code":"(fn [coll n] ((zipmap (iterate inc 0) coll) n))","problem":21,"user":"4e3bccb1535deb9a81d77f55"},{"problem":21,"code":"(fn nth2 [l n] \n  (if (= n 0) \n   (first l) \n   (nth2 (rest l) (- n 1))))","user":"5c34be9fe4b0d62ef62d9f58"},{"problem":21,"code":"(fn [v n] (last (take (inc n) v)))\n                 \n  \n  ;;; tomamos hasta el numero que necesitamos y sacamos el ultimo","user":"6075c214e4b069485764de5b"},{"problem":21,"code":"(fn test [ls nt]\n  (if (= 0 nt)\n    (first ls)\n    (test (rest ls) (- nt 1))))","user":"554bc026e4b0a04f79299597"},{"problem":21,"code":"(fn [x i]\n  (if (= 0 i)\n  \t(first x)\n    (recur (rest x) (dec i))))","user":"55a2ef1ae4b0acc240e3152d"},{"code":"(fn enth [ls n] (if (= n 0) (first ls) (enth (rest ls) (dec n))))","problem":21,"user":"4e964bc4535dbda64a6f6b41"},{"code":"(fn [stuff, element] (first(reverse (take (+ 1 element) stuff))))","problem":21,"user":"51840396e4b02826a645f395"},{"code":"(fn n [x, y] (if (= y 0) (first x) (n (rest x) (- y 1))))","problem":21,"user":"50a8a9c6e4b0deba384a58ba"},{"code":"(fn get-nr [the-list nr]\r\n  (if (= nr 0) \r\n    (first the-list) \r\n    (get-nr (rest the-list) (dec nr))))","problem":21,"user":"4e9894ab535dbda64a6f6b5d"},{"problem":21,"code":";(fn [coll n]\n;  (last (take (+ 1 n) coll)))\n(fn [coll n]\n  (first (drop n coll)))","user":"560dfa8de4b05f002753df46"},{"code":"#(if (= %2 0) (first %1)\n     (recur (rest %1) (dec %2)))","problem":21,"user":"4fde1358e4b05e33b9224f82"},{"code":"(fn bla [seq-of-items pos]\n  (if (= pos 0)\n    (first seq-of-items)\n    (bla (rest seq-of-items) (- pos 1))))","problem":21,"user":"4e759734535d7a570dd295c4"},{"problem":21,"code":"(fn\n  [x n]\n  (last (take (inc n) x))\n)","user":"58a44a14e4b01a0c0b2328f2"},{"problem":21,"code":"(fn [col ind]\n   (peek (first\n      (filter (fn [x]\n                (if (= (first x) ind)\n                  x))\n              (map-indexed vector col)))))","user":"55f32f6fe4b06e875b46ce53"},{"problem":21,"code":"(fn [a n]\n  (if (zero? n)\n    (first a)\n    (recur (rest a) (- n 1))\n  )\n)","user":"5b99a0a3e4b0c0b3ffbd4ad7"},{"problem":21,"code":"(fn [l, n] \n  (if (zero? n)\n    (first l)\n  (recur (rest l) (dec n))))","user":"55cde24ae4b0e31453f64a23"},{"problem":21,"code":"(fn tn [l i] (if (= i 0) (first l) (tn (rest l) (- i 1))))","user":"540a2b9fe4b0addc1aec66ed"},{"code":"(fn [original-s wanted-i] (loop [remaining-s original-s i 0] (if (= i wanted-i) (first remaining-s) (recur (rest remaining-s) (+ i 1)))))","problem":21,"user":"532f078fe4b019098a6f8b4b"},{"problem":21,"code":"(fn f [ls n]\n  (if (= n 0)\n    (first ls)\n    (f (rest ls) (dec n))))","user":"547584d9e4b0c51c1f4d729b"},{"code":"(fn [x num] (first(drop  num x)))","problem":21,"user":"4e8f630a535d65386fec214d"},{"problem":21,"code":"(fn[li idx] (last (take (+ idx 1) li)))","user":"59a7029ce4b066c664927d8e"},{"code":"(fn [aList n] \n    (if (= n 0) \n      (first aList) \n      (recur (rest aList) (- n 1))))","problem":21,"user":"4ec3f4a7535dcc7ae8597d5e"},{"problem":21,"code":"(fn\n  [arr n]\n  (if (= n 0)\n    (first arr)\n    (recur\n     (rest arr)\n     (dec n))))","user":"555f4bade4b0a2eb076a39c2"},{"code":"(fn  [coll idx]\n  (loop [i 0 coll1 coll]\n    (if (= idx i)\n      (first coll1)\n      (recur (+ i 1) (rest coll1)))))","problem":21,"user":"4f897b6de4b033992c121c7b"},{"code":"(fn [s n]\n  (loop [s s\n         n n]\n    (if (zero? n)\n        (first s)\n        (recur (rest s) (dec n)))))","problem":21,"user":"4fbd24d2e4b081705acca2ff"},{"problem":21,"code":"(fn [col ind]\n  (last (take (inc ind) col)))","user":"5797bc92e4b039eba2ecb105"},{"code":"#(loop [l %1 cnt 0]\n   (if (= cnt %2)\n     (first l)\n     (recur (rest l) (inc cnt))\n     )\n   )","problem":21,"user":"528f4462e4b0239c8a67aef0"},{"problem":21,"code":"(fn nth-element [coll n] \n  (first (nthrest coll n)))","user":"55586905e4b0deb715856e2b"},{"problem":21,"code":"(fn nth-elem \n  [coll n]\n  (cond (= n 0) (first coll)\n        :else   (nth-elem (rest coll) (dec n))))","user":"56d72e14e4b0ea9b8538f7d6"},{"problem":21,"code":"(fn [seq, n] (last (take (+ n 1) seq)))","user":"595ba438e4b066ee0a44afdf"},{"problem":21,"code":"(fn [sequences index] (get (vec sequences) index))","user":"57465526e4b009280f9f2b61"},{"code":"(fn [l idx] (first (last (split-at idx l))))","problem":21,"user":"504e5e8de4b0f6ff3350c4a8"},{"code":"(fn [coll idx]\r\n  (let [x (vec coll)]\r\n    (x idx)\r\n  )\r\n)","problem":21,"user":"4ef60a02535dced4c769f24b"},{"code":";; I love laziness :)\n#((zipmap (range) %) %2)","problem":21,"user":"5005b57de4b0678c553fc46a"},{"problem":21,"code":"(fn  [s n]\n        (if (not= n 0)\n          (recur (next s) (- n 1))\n          (first s)))","user":"56d6e165e4b0ea9b8538f7d3"},{"problem":21,"code":"(fn [x i] (loop [j i y x] (if (> j 0) (recur (dec j) (rest y)) (first y))))","user":"5595415ae4b0c79f6e1db965"},{"code":"#((apply comp (cons first (repeat %2 rest))) %1)","problem":21,"user":"4ffb335ee4b0678c553fc3c5"},{"problem":21,"code":"(fn [l, i] ((vec l) i))","user":"5873dd1ce4b01531a375ea42"},{"problem":21,"code":"(fn [x y] \n  ((fn f [x y] \n    (if \n      (= y 0) \n      (peek x) \n      (f\n       (pop x)\n       (- y 1) \n       )\n      )\n    ) (reverse (into '() x)) y\n  )\n)","user":"53d96f0ee4b0e771c3025478"},{"problem":21,"code":"(fn [coll n]\n  (loop [n n\n         coll coll]\n    (if (zero? n)\n      (first coll)\n      (recur (dec n) (rest coll)))))","user":"5bc8e91ee4b07a9b28b100ce"},{"problem":21,"code":"(fn [s x] (first (reverse (take (inc x) s))))","user":"56cb0abce4b0ea9b8538f722"},{"problem":21,"code":"(fn [a b]\n  (last (take (inc b) a)))","user":"56785234e4b05957ce8c6177"},{"code":"(fn my-nth [l p]\n  (let [indx (+ p 1)]\n    (last (take indx l))))","problem":21,"user":"4f8d340be4b02e764a0a51a8"},{"code":"#(loop [x %1 y %2] (cond (= y 0) (first x) :else (recur (rest x) (dec y))))","problem":21,"user":"50733b31e4b0e3170b5a869a"},{"code":"(fn [xs n] (last (take (inc n) xs)))","problem":21,"user":"4f5155a3e4b03ad3f0c10d1b"},{"code":"(fn [values val] \n  (let [val2 (count values) \n        minus (dec(- val2 val))]\n    (last (drop-last minus values))))","problem":21,"user":"50621cbde4b0341461c88951"},{"code":"(fn [l n]\n  ((fn do-nth [n l c]\n    (if \n      (= n c) (first l)\n      (do-nth n (rest l) (inc c)))\n  ) n l 0))","problem":21,"user":"4f8c50f9e4b02e764a0a5195"},{"code":"(fn [coll n] \n  (loop [coll coll]\n  (if (= (count coll) (inc n)) \n    (last coll)\n    (recur (butlast coll)))))","problem":21,"user":"5242150ee4b076e5d3121f4a"},{"problem":21,"code":"(fn [sequ x] (get (vec sequ) x))","user":"54d6ba05e4b0a52adc2e201e"},{"problem":21,"code":"#(first (take-last 1 (take (+ 1 %2) %1)))","user":"5a8a3d54e4b05369db4d24d2"},{"code":"(fn my-nth\n  [s index]\n  (if (empty? s)\n    nil\n    (if (zero? index)\n      (first s)\n      (my-nth (rest s) (dec index)))))","problem":21,"user":"4ec1b80c535dfed6da9c6db6"},{"problem":21,"code":"(comp #(get (vec %1) %2))","user":"5cbe37d1e4b0ccb06196274c"},{"code":"(fn nth* [s i] (if (= i 0) (first s) (nth* (rest s) (- i 1))))","problem":21,"user":"4f03edd7535dcb61093f6b80"},{"problem":21,"code":"(fn [x n] (loop [s x i n] \n            (if (= i 0)\n              (first s) \n              (recur (rest s) (dec i))\n              )\n            )\n  )","user":"5471f2fbe4b094393f72dd70"},{"code":"(fn rec [n m] (if (= m 0) (first n) (rec (rest n) (- m 1)  )))","problem":21,"user":"5150ae58e4b03e678e393abe"},{"code":"(fn [li n] (let [len (count li)] (get (vec li) n) ) )","problem":21,"user":"521f0106e4b0e6c71e0c0bc4"},{"problem":21,"code":"(fn [coll n]\n  (loop [i 0 c coll]\n    (if (= i n)\n      (first c)\n      (recur (inc i) (rest c))\n      )))","user":"608ec5e4e4b03bd49d9f36c0"},{"problem":21,"code":"#(loop [i %2\n        coll %1]\n    (if (= i 0)\n      (first coll)\n      (recur (dec i) (rest coll))))","user":"5a1c3c11e4b0ff51aa4b323d"},{"problem":21,"code":"(fn nn [c n]\n  (loop [col c\n         cnt n]\n    (println col cnt)\n    (if (= cnt 0)\n      (first col)\n      (recur (rest col) (dec cnt))))\n  )","user":"5b8f77a8e4b0c0b3ffbd49fa"},{"problem":21,"code":"(fn Nth [xs n] \n  (if (= n 0)\n    (first xs)\n    (Nth (rest xs) (- n 1))))","user":"54c9cbcee4b045293a27f67e"},{"problem":21,"code":"; #(last (take (+ %2 1) %1))\n#(first (drop %2 %1))","user":"58136679e4b0f478707a060d"},{"code":"(fn [seq n] (last (take (+ 1 n) seq)))","problem":21,"user":"4dddf817535d08e6dec9fdd3"},{"problem":21,"code":"(fn [coll t] (first ((apply comp (repeat t rest)) coll)))","user":"5bece6a5e4b0a6d31fed2114"},{"code":"(fn walla [listy n] (if (= n 0) (first listy) (walla (rest listy) (- n 1))))","problem":21,"user":"500a0a11e4b03d00572d2d73"},{"problem":21,"code":"(fn [coll, n]\n  (loop [i 0 coll coll]\n    (if (= i n)\n      (first coll)\n      (recur (inc i) (rest coll)))))","user":"55151417e4b055c2f668d4da"},{"code":"(fn [sequence n]\n  ((vec sequence) n))","problem":21,"user":"4ec70f26535d6d7199dd36dd"},{"code":"(fn[x n] (last (take (+ n 1) x)))","problem":21,"user":"4f9920a3e4b0dcca54ed6cfc"},{"problem":21,"code":"(fn my-nth [x y] \n  (if (= y 0) \n   \t(first x)\n    (my-nth (rest x) (- y 1))\n    ))","user":"56719c3ce4b05957ce8c610c"},{"code":"(fn [coll n]\n  (first (subvec (vec coll) n (count coll))))","problem":21,"user":"51e595a6e4b0efabf93c02d8"},{"problem":21,"code":"(fn [swq nthele] (loop [x 0 swqq swq] (if (= x nthele) (first swqq) (recur (+ x 1) (rest swqq)))))","user":"564a0698e4b0284900eef64b"},{"code":"(fn [l p] (first (nthnext l p)))","problem":21,"user":"50b29496e4b03ea880433564"},{"code":"(fn [coll n]\n  (first (keep-indexed #(if (= n %1) %2) coll)))","problem":21,"user":"52a3a7ebe4b04e0c58e87c02"},{"problem":21,"code":"(fn my-nth [seq n]\n                (cond\n                 (= n 0) (first seq)\n                 :else (my-nth (rest seq) (dec n))))","user":"5d038e6ee4b0cc9c915881c4"},{"code":"(fn [list n]\n  (case n\n    0 (first list)\n    (recur (rest list) (- n 1))))","problem":21,"user":"539893fbe4b0b51d73faaefd"},{"problem":21,"code":"(fn [coll index] (if (= 0 index) (first coll) (recur (rest coll) (- index 1))))","user":"54af500fe4b09f271ff37d06"},{"code":"(fn [col i] (get (into [] col) i))","problem":21,"user":"524af160e4b09eba1c0223bb"},{"code":"#(loop [xs %1 i  0]\n   (if (== i %2)\n     (first xs)\n     (recur (next xs) (inc i))))","problem":21,"user":"4e593dac535d8a8b8723a29c"},{"problem":21,"code":"(fn ith [l i] (if (= i 0) (first l) (ith (rest l) (- i 1))))","user":"53dcf474e4b0d874e779ae25"},{"problem":21,"code":"(comp second #(take-nth %2 %1))","user":"5529892ce4b0ffed3738f94c"},{"code":"(fn [items index]\r\n  (loop [items items index index]\r\n    (if (= index 0)\r\n        (first items)\r\n        (recur (rest items) (- index 1)))))","problem":21,"user":"4ddc1c89535d02782fcbea01"},{"problem":21,"code":"#(loop [remaining-elements %1 this-element nil counter -1]\n   (if (= counter %2)\n     this-element\n     ;;(let [[firstest & remaining] remaining-elements]\n       (recur (rest remaining-elements) (first remaining-elements) (inc counter))))","user":"57e6ed35e4b0bfb2137f5af5"},{"problem":21,"code":"(fn [c n]\n  (if (pos? n)\n    (recur (rest c) (dec n))\n    (first c)))","user":"5aea2d21e4b0cc2b61a3bbe2"},{"problem":21,"code":"(fn [seq i] (first (drop i seq)))","user":"5b4611fde4b02d533a91bc5c"},{"problem":21,"code":"(fn [coll n] (if (= n 0) (first coll) (recur (rest coll) (dec n) )))","user":"5c92105ce4b048ec896c59f7"},{"problem":21,"code":"(fn [index coll] (first (drop coll index)))","user":"54d07fa5e4b0e8a36923e5cb"},{"code":"(fn [coll n]\n           (if (zero? n)\n             (first coll)\n             (recur (rest coll) (dec n))))","problem":21,"user":"4fea24e0e4b0547ebccb248d"},{"problem":21,"code":"(fn [myseq counter] (last (take (inc counter) myseq)))","user":"5d2c8daae4b01671435dbc91"},{"problem":21,"code":"(fn [coll indx] (first (drop indx coll)))","user":"563bb1fde4b0bfe05bf11829"},{"problem":21,"code":"(\n fn \n nthx \n [xs rem]\n (\n  if\n  (= rem 0)\n  (first xs)\n  (nthx (rest xs) (dec rem))\n  )\n )","user":"5d1cf523e4b02ea6f0fb6994"},{"code":"(fn [x n]\r\n  (let [c (count x)]\r\n  (loop [z x]\r\n    (if (= (- c n) (count z))\r\n        (first z)\r\n        (recur (next z))\r\n  )))\r\n)","problem":21,"user":"4deb6b40535d08e6dec9fe05"},{"code":"(fn my-nth [l n]\n  (cond (zero? n) (first l)\n  :else (my-nth (rest l) (dec n)))\n)","problem":21,"user":"4f9b05ade4b0dcca54ed6d11"},{"code":"#(if (= %2 0) (first %1)\n    (recur  (rest %1) (dec %2)))","problem":21,"user":"5293589ae4b0239c8a67af3d"},{"problem":21,"code":"(fn [coll n] \n  ((apply comp (cons first (repeat n rest))) coll))\n               \n;(defn recursion-is-cool [lispt x]\n;  (cond \n;   \t\t(empty? lispt) nil\n;   \t\t(= x 0) (first lispt)\n;        :else (recursion-is-cool (rest lispt) (- x 1)))","user":"577d0d4de4b0c8d87281f6cd"},{"code":"(fn [s i] (first (last(split-at i s))))","problem":21,"user":"4ee74e2a535d93acb0a66866"},{"code":"(fn check [sq n] (if (= 0 n) (first sq) (check (rest sq) (- n 1))))","problem":21,"user":"4fd7b919e4b0dab7d829f38a"},{"code":"(fn [lst n]\n  (loop [my-lst lst my-n n]\n    (if (= my-n 0)\n        (first my-lst)\n        (recur (rest my-lst) (- my-n 1)))))","problem":21,"user":"4f122bfe535d64f603146426"},{"problem":21,"code":"(fn Nth\n  [x n]\n  (if (= n 0)\n    (first x)\n    (Nth (rest x) (- n 1))))","user":"5ab33ce7e4b073f1774425fa"},{"problem":21,"code":"(fn nth-elem [mas n] (last (take (inc n) mas)))","user":"5f8d76c3e4b0715f5002d758"},{"problem":21,"code":"(fn[coll n] (last (take (+ n 1) coll)))","user":"57b39fbee4b0fbc9809a2783"},{"code":"(fn [x y]\n(loop [r x\n       i 0]\n  (if (= i y)\n    (first r)\n    (recur (rest r) (inc i)))))","problem":21,"user":"51a671d4e4b0740bfd1afd21"},{"problem":21,"code":"(fn [coll n]\n  (loop [i 0 c coll]\n    (if (< i n)\n      (recur (inc i) (rest c))\n      (first c))))","user":"54df7922e4b024c67c0cf7ad"},{"code":"(fn [coll n] (first (nthnext coll n)) )","problem":21,"user":"50f18308e4b06d9538fe2125"},{"problem":21,"code":"(fn nth-element [coll n]\n\t(if (zero? n)\n\t\t(first coll)\n\t\t(recur (rest coll) (- n 1))))","user":"60704214e4b069485764de24"},{"code":"(fn [coll n]\n  (if (zero? n)\n      (first coll)\n    (recur (rest coll) (dec n))\n      ))","problem":21,"user":"5374ad7de4b06d7f452d9e26"},{"problem":21,"code":"(fn [coll n]\n  \t(get (vec coll) n))","user":"54d02993e4b018d918be98dc"},{"code":"(fn getNth [l, n]\n  (if (> n 0)\n  (getNth (rest l) (dec n))\n\t(first l))\n)","problem":21,"user":"5001a2fbe4b0678c553fc41c"},{"code":"(fn get-nth [things index] (if (= index 0) (first things) (get-nth (rest things) (dec index))))","problem":21,"user":"51489785e4b05514c84b7cc0"},{"problem":21,"code":"(fn\n  [x n]\n  (loop [x-branch x]\n    (cond\n      (> n (count x)) nil\n      (= n (- (count x) (count x-branch))) (first x-branch)\n      :else (recur (rest x-branch)))))","user":"54e79094e4b024c67c0cf818"},{"problem":21,"code":"(fn [x y] \n      (first ((fn rec [x y z] \n           (if (< z y) (rec (rest x) y (inc z)) x)\n          ) x y 0))\n   )","user":"58b43bf5e4b0ebc645576d38"},{"problem":21,"code":"(fn [l n]\n  (loop [l' l n' n]\n    (if (zero? n') (first l') (recur (drop 1 l') (- n' 1)))\n  )\n)","user":"563747e9e4b0bfe05bf117d2"},{"code":"(fn [x n]\n  (first (drop n x)))","problem":21,"user":"4db51ce0535d87e67b28fe06"},{"code":"(fn ! [collection index]\n  (if (= 0 index)\n    (first collection)\n    (! (rest collection) (dec index))))","problem":21,"user":"52271a85e4b04e78ff2e19a7"},{"problem":21,"code":"(fn [a b] (last (take (+ b 1) a )))","user":"594d46e3e4b07ddc2dafae83"},{"code":"(fn [a n] (if (= n 0) (first a) (recur (rest a) (dec n))))","problem":21,"user":"526dd90de4b03e8d9a4a72fe"},{"problem":21,"code":"(fn func [l n] (if (zero? n) (first l) (func (next l) (dec n))))","user":"54dba5e1e4b024c67c0cf76a"},{"problem":21,"code":"(fn [coll n]\n (loop [n n coll coll] \n  (if (zero? n)\n    (first coll)\n   (recur (dec n) (rest coll)))))","user":"5cc6b681e4b0ccb061962828"},{"code":"(fn [s p]\n  (if (zero? p)\n    (first s)\n    (recur (rest s) (dec p))))","problem":21,"user":"5313de03e4b08068f379ed10"},{"code":"(fn derp [x y]\n  (first (drop y x)))","problem":21,"user":"4fc2b8f6e4b081705acca339"},{"code":"(fn this [items n]\n  (if (zero? n)\n    \t(first items)\n    \t(this (rest items) (- n 1))))","problem":21,"user":"50dee6bbe4b061dbdced721e"},{"code":"(fn [s x] \n  (.get s x)\n)","problem":21,"user":"4fe98afae4b0547ebccb2462"},{"code":"#(let [end-idx %2]\n  (loop [idx 0 arr %1]\n    (if(= idx end-idx)\n      (first arr)\n    (recur (inc idx) (rest arr)))))","problem":21,"user":"4ec5d62c535d6d7199dd36ba"},{"code":";(fn[objects n]( first (drop n objects)))\n\n#(first (drop %2 %1))","problem":21,"user":"52f426fce4b05e3f0be25f1e"},{"problem":21,"code":"(fn [coll var]\n  (first (drop var (vec coll))))","user":"5911c8e1e4b0163c97b36edc"},{"code":"(fn [x, n] (first (drop n x)))","problem":21,"user":"4e40529b535dc968683fc49a"},{"problem":21,"code":"(fn [x y]\n\n  (first ((apply #'comp (repeat y #'rest)) x))\n  \n  )","user":"5bf9d9b7e4b0bdcf453d15c4"},{"problem":21,"code":"(fn my_n [list n] (if (= 0 n) (first list) (my_n (rest list) (- n 1))))","user":"550065a4e4b07d26eda61d5a"},{"problem":21,"code":"(fn nntthh [l i] (if (= i 0) (first l)\n                  (nntthh (rest l) (dec i)) \n                  ))","user":"5471f090e4b094393f72dd6e"},{"problem":21,"code":"(fn [list idx] \n  (get (vec list) idx))","user":"577caf73e4b0c8d87281f6c6"},{"problem":21,"code":"(fn [seq n]\n  (loop [i n newseq seq]\n    (if (= i 0)\n      (first newseq)\n      (recur (- i 1) (rest newseq)))))","user":"53a68c5ae4b0ef122a8689c8"},{"problem":21,"code":"(fn [x n] (loop [coll (rest x)\n                 res (first x)\n                 i n]\n            (if (> i 0)\n              (recur (rest coll) (first coll) (dec i))\n              res)))","user":"52a87aabe4b0c58976d9ac2f"},{"code":"(fn [x, y] (first (nthnext x y)))","problem":21,"user":"52f44c84e4b05e3f0be25f20"},{"code":"(fn [% x] (get (vec %) x))","problem":21,"user":"4f0a8f28535d0136e6c222f8"},{"problem":21,"code":"(fn nth-element [l n]\n  (if (= n 0)\n    (first l)\n    (nth-element (rest l) (- n 1))))","user":"5716acfbe4b07c98581c3b01"},{"problem":21,"code":"#(get (zipmap (range (count %1)) %1) %2)","user":"55b0f5bfe4b002ce9d5cbc28"},{"problem":21,"code":"(fn [elements index]\n  (loop [i index els elements] \n    (if (< i 1)\n      (first els)\n      (recur (dec i) (rest els)))))","user":"60486e8ae4b02d28681c77db"},{"problem":21,"code":"(fn [col index]\n   (get (into {} (map-indexed hash-map col)) index))","user":"5db98f39e4b010eb3c36cd53"},{"code":"(fn [s n]\n  (if ( = n 0)\n    (first s)\n    (recur (rest s) (dec n))))","problem":21,"user":"4e7e6b51535db169f9c79712"},{"code":"(fn [coll idx] \n  (loop [coll coll idx idx]\n    (if (= idx 0)\n      (first coll)\n      (recur (rest coll) (dec idx)))))","problem":21,"user":"50843a4ae4b0c98812d0788b"},{"code":"(fn [c n] (->> c (take-nth n) second))","problem":21,"user":"4f1b120f535d64f603146476"},{"code":"(fn [coll n]\n  (loop [coll coll, i 0]\n    (if (and (seq coll) (= n i))\n      (first coll)\n      (recur (rest coll) (inc i)))))","problem":21,"user":"4fe20e83e4b0dd6cd5ce363f"},{"code":"(fn [es n] (last (take (+ 1 n) es)))","problem":21,"user":"52deb735e4b09f7907dd13f7"},{"code":"(fn custom-nth [seq n] (cond (= n 0) (first seq) :else (custom-nth (rest seq) (- n 1))))","problem":21,"user":"50d1aaafe4b05a71a896ef58"},{"problem":21,"code":"(fn [sq i]\n  (cond\n    (< i 0) nil\n    (== i 0) (first sq)\n    :else (let [restsq (rest sq)]\n            (if (empty? restsq)\n              nil\n              (recur restsq (- i 1))\n            )\n          )\n  )\n)","user":"5bcc304ce4b07a9b28b1010c"},{"code":"(fn f[l n](if (= n 0) (first l) (f (rest l)(dec n))))","problem":21,"user":"52550d90e4b0541d1855b9c1"},{"problem":21,"code":"(fn myn [s n]\n  (if (> n 0)\n    (myn (rest s) (dec n))\n    (first s)\n  )\n)","user":"554b425ce4b0a04f79299581"},{"problem":21,"code":";(fn [sequen n] (loop [iter 0 counter n sequ sequen]\n;                               (if (= iter counter) (first sequ) (recur (inc iter) counter (rest sequ)))\n;                               ))\n\n(fn [s n](loop [s s n n](if (= n 0) (first s) (recur (rest s) (- n 1)))))","user":"56483f45e4b0284900eef62b"},{"code":"(fn [lst idx]\n  (first (drop idx lst)))","problem":21,"user":"51f2ab8be4b0210f90e74554"},{"code":"(fn my-nth\n  [xs n]\n  (if (= n 0)\n    (first xs)\n    (my-nth (rest xs) (- n 1))))","problem":21,"user":"52ce5056e4b07d0d72b2738f"},{"code":"(fn take-nth [s n]\n  (if (= n 0)\n      (first s)\n      (recur (rest s) (- n 1))))","problem":21,"user":"4f04428e535dcb61093f6bb6"},{"code":"#(loop [lst %1 ptr %2] (if (zero? ptr) (first lst) (recur (rest lst) (dec ptr))))","problem":21,"user":"50e84318e4b0ebbe794eb7e1"},{"problem":21,"code":"(fn [x y]\n  (if (= y 0)\n    (first x)\n    (recur (rest x) (- y 1))\n  )\n)","user":"5f574662e4b0a0bc16850a90"},{"code":"(fn [seq n] (.get seq n ) )","problem":21,"user":"4fc52c46e4b081705acca385"},{"problem":21,"code":"(fn get-nth [my-seq n] ((zipmap (range) my-seq) n))","user":"547b9cdce4b0c51c1f4d72da"},{"problem":21,"code":"(fn Nth [s n] (if (= n 0) (first s) (Nth (rest s) (- n 1))))","user":"55f20e4be4b06e875b46ce40"},{"problem":21,"code":"(fn my-nth [col idx] (if (> idx 0) (my-nth (rest col) (- idx 1)) (first col)))","user":"5845720de4b089d5ab817e68"},{"problem":21,"code":"#(last (take (+ 1 %2) % ))","user":"5a5495f0e4b05d388ecb6c29"},{"code":"(fn mynth [x n]\n  (if \n    (= n 0)\n    (first x)\n    (mynth (rest x) (- n 1))\n    )\n  )","problem":21,"user":"515f8a0de4b0e2be8aa20bce"},{"problem":21,"code":"(fn [my-list n] (.get my-list n))","user":"551382bee4b055c2f668d4cb"},{"code":"(fn [x y] (loop [x x y y] (if (= y 0) (first x) (recur (rest x) (- y 1)))))","problem":21,"user":"53012382e4b0d8b024fd3718"},{"code":"(fn [xs x]\n  (loop [xs xs x x ])\n  (if (= 0 x)\n    (first xs)\n    (recur (rest xs) (- x 1) ) ))","problem":21,"user":"5349da55e4b084c2834f4a68"},{"problem":21,"code":"(fn [data index]\n  ((into [] data) index))","user":"55a016fde4b0acc240e314f1"},{"problem":21,"code":"(fn mynth [x n] (if (== n 0) (first x) (mynth (rest x) (- n 1))))","user":"5c487515e4b0e06e1360a3c2"},{"code":"(fn mth [lv i]\n    (if (= i 0)\n    (first lv)\n    (mth (rest lv) (- i 1))))","problem":21,"user":"52d6d490e4b09f7907dd1369"},{"problem":21,"code":"(fn [coll n] (last (first (partition (inc n) coll))))","user":"5bc28638e4b07a9b28b10033"},{"code":"(fn [coll n] (loop [x coll cnt n]\n               (if (zero? cnt)\n                 (first x)\n                 (recur (rest x) (dec cnt)))))","problem":21,"user":"510ee996e4b07438aa321462"},{"problem":21,"code":"(fn [list i]\n    (loop [head (first list), tail (rest list), cnt 0]\n      (if (= i cnt)\n        head\n        (recur (first tail) (rest tail) (+ cnt 1)))))","user":"563d1648e4b0bfe05bf11846"},{"problem":21,"code":"(fn dosia [in i]\n   (if (empty? in)\n         nil\n        (if (= 0 i) \n\t\t\t(first in) \n\t\t\t(dosia (rest in) (- i 1))\n\t\t)\n    )\n)","user":"5f3e58dae4b004f08c61c555"},{"code":"(fn [sq counter]\n  (if (= 0 counter)\n    (first sq)\n    (recur (rest sq) (dec counter))))","problem":21,"user":"535d910ae4b04ce2eb3ed2c5"},{"code":"(fn my-nth [coll n]\r\n          (if (zero? n) (first coll) (my-nth (rest coll) (dec n))))","problem":21,"user":"4e043d85535d04ed9115e79e"},{"code":"(fn get-nth [xs, n] (if (= n 0) (first xs) (get-nth (rest xs) (- n 1))))","problem":21,"user":"5285920be4b0239c8a67adfb"},{"code":"(fn myn [coll, item]\n  (if (> item 0) \n    (myn (rest coll) (- item 1))\n    (first coll)\n  )\n)","problem":21,"user":"50d3317ee4b049d4ed5650da"},{"code":"(fn nthv2 [l idx] (if(= idx 0) (first l) (nthv2 (next l) (dec idx))))","problem":21,"user":"4f048f67535dcb61093f6bd3"},{"problem":21,"code":"(fn [col n] (loop [x n, c col]\n              (if (> x 0)\n                (recur (dec x) (rest c))\n                (first c))))","user":"5c30da5ae4b0d62ef62d9f23"},{"problem":21,"code":"(fn abc [col n] (if (= n 0) (first col) (abc (rest col) (- n 1))))","user":"58061731e4b0a837a8b30cd6"},{"problem":21,"code":"#(loop [i 0 lst %1]\n   (if (= i %2)\n     (first lst)\n   \t (recur (+ 1 i)(rest lst))))","user":"5c6da283e4b0fca0c162273e"},{"code":"(fn [sq, n] (get (vec sq) n))","problem":21,"user":"51a31e16e4b0ab315a23ba61"},{"code":"(fn [xs n]\r\n  (if (= 0 n)\r\n    (first xs)\r\n    (recur (rest xs) (- n 1))))","problem":21,"user":"4fc01b32e4b081705acca321"},{"problem":21,"code":"(fn foo [a x]\n  (if (= x 0) (first a)\n    \t\t  (foo (rest a) (dec x))))","user":"5760715de4b08062f99a4e96"},{"problem":21,"code":"(fn [coll n] ( last (take (+ n 1) coll )))","user":"5935b92de4b04f87174def56"},{"problem":21,"code":"(fn [x,n] (get (into [] x) n))","user":"5ed80d50e4b016b56eae05eb"},{"problem":21,"code":"(fn [s n]\n  (loop [s s n n]\n    (let [item (first s)]\n      (cond (= n 0) item\n            :else   (recur (rest s) (dec n))))))","user":"5635adeee4b0bfe05bf117c7"},{"problem":21,"code":"(fn [lst idx]\n  (loop [iter 0 copy lst]\n    (if (= iter idx)\n      (first copy)\n      (recur (+ iter 1) (rest copy)))))","user":"54e90803e4b024c67c0cf82f"},{"problem":21,"code":"#(get (into [] (seq %1)) %2)","user":"5ac9d3a3e4b0e27600da77d3"},{"code":"(fn [se, N]\n  (last (interleave (range 0 (+ 1 N)) se)))","problem":21,"user":"52a229e0e4b04e0c58e87be9"},{"code":"(fn [coll idx]\n   (if (= idx 0)\n     (first coll)\n     (recur (rest coll) (- idx 1))))","problem":21,"user":"516282c3e4b0e6d3c4734711"},{"code":"(fn [coll count]\n  (if (zero? count)\n    (first coll)\n    (recur (rest coll) (dec count))))","problem":21,"user":"4f608e38e4b0defedf855fa8"},{"problem":21,"code":"(fn my-nth [coll k]\n  (if (= k 0)\n    (first coll)\n    (my-nth (rest coll) (dec k))))","user":"5fa5b72ee4b0fa27300f3dca"},{"code":"#(loop [arg %1\n        cnt %2]\n   (if (not (= 0 cnt))\n     (recur (next arg) (- cnt 1))\n     (first arg)))","problem":21,"user":"532c82e8e4b09d4e7a9b5545"},{"problem":21,"code":"(fn nth-new [sequence n] (if (= 0 n) (first sequence) (nth-new (rest sequence) (dec n))))","user":"52ade380e4b0c58976d9ac9b"},{"problem":21,"code":"(fn mynth [x y] (if (= y 0) (first x) (mynth (rest x) (dec y))))","user":"562d7854e4b0a45d2ff8301d"},{"code":"(fn [x y] (first (reverse (take (+ 1 y) x))))","problem":21,"user":"518aad39e4b06da86c1973bd"},{"problem":21,"code":"(fn nth-elem [xs n]\n  (cond (= n 0) (first xs)\n        :else (nth-elem (rest xs) (- n 1))))","user":"5826a3b7e4b051871117befc"},{"problem":21,"code":"(fn [a-seq n] (loop\n    [count 0 s a-seq]\n    (if (= count n)\n      (first s)\n      (recur (inc count) (rest s))\n    )\n  )\n)","user":"5a615b32e4b0512ff01cd972"},{"problem":21,"code":"(fn[l,n] (let [q (drop n l)] ( first q) ))","user":"54651ef5e4b01be26fd746d5"},{"problem":21,"code":"(fn my_nth [l n] (if (= n 0) (first l) (my_nth (next l) (dec n))))","user":"567b39b6e4b05957ce8c61a3"},{"code":"(fn f [x y] \n  (if (= y 0)\n    (first x)\n    (f (rest x) (dec y))))","problem":21,"user":"511a98d7e4b0c87c59c96707"},{"problem":21,"code":"(fn mynth [ls n]\n  (if (= n 0)\n    (first ls)\n    (mynth (rest ls) (- n 1))))","user":"53b7850ee4b047364c0444d0"},{"code":"#(if (= 0 %2)\n   (first %1)\n   (recur (next %1) (dec %2)))","problem":21,"user":"51064b76e4b01150e115ebe4"},{"problem":21,"code":"(fn get-nth [l n]\n  ((fn get-nth-iter [l n x]\n    (if (= x n) (first l) (get-nth-iter (rest l) n (+ 1 x)))\n  ) l n 0)\n)","user":"553bbb99e4b09218d5f45008"},{"code":"(fn [x,i] (if(= i 0) (first x) (recur (rest x) (dec i))))","problem":21,"user":"52b8bc3fe4b07a9af57922b6"},{"problem":21,"code":"(fn[c p](apply max(take 1(drop p c))))","user":"57dba312e4b0bd073c202426"},{"problem":21,"code":"(fn findNth [remaining counter]\n  (if (= counter 0)\n    (first (into [] remaining))\n    (findNth (rest remaining) (dec counter))\n    )\n)","user":"5ac741d6e4b0e27600da777d"},{"problem":21,"code":"(fn [seq n] (loop [head (first seq) tail (rest seq) iter 0]\n              (if (= iter n)\n                head\n                (recur (first tail) (rest tail) (inc iter)))))","user":"55457b73e4b0a04f79299536"},{"problem":21,"code":"(fn [a i] \n            (if (= i 0)\n              (first a)\n              (recur (rest a) (dec i))))","user":"58455b05e4b089d5ab817e65"},{"problem":21,"code":"(fn [xs x]\n  (loop [xs xs\n         x x] \n    (if (= x 0)\n      (first xs)\n      (recur (rest xs) (- x 1)))))","user":"5a8bc2a1e4b05369db4d24ef"},{"code":"(fn [a b]\n  (if (= b 0)\n    (first a)\n    (recur (rest a) (- b 1))))","problem":21,"user":"51c9a705e4b09ce160bef5ab"},{"code":"(fn nt [seq, n] (if (= n 0) (first seq) (nt (rest seq) (- n 1))))","problem":21,"user":"4f06f90a535dcb61093f6c1b"},{"code":"(fn [s n] \n\t(if ( = n 0) (first s) \n\t(recur (rest s ) (- n 1)) ))","problem":21,"user":"518644bce4b0da5a5be3baca"},{"code":"(fn [lst n] \n  (if (zero? n)\n    (first lst)\n    (recur (rest lst) (dec n))))","problem":21,"user":"4f82f1b9e4b033992c121c0f"},{"problem":21,"code":"(fn[xs n] \n  (first (drop n xs))\n  )","user":"5fba282de4b03f550f44822d"},{"problem":21,"code":"(fn get-nth [xs n] (if (zero? n) (first xs) (get-nth (rest xs) (dec n))))","user":"53d20e14e4b00fb29b22131a"},{"problem":21,"code":"(fn [coll, n] \n  (first (reverse (take (inc n) coll))))","user":"5aca2adce4b0e27600da77d6"},{"problem":21,"code":"(fn [n xs]\n  (first \n   (drop xs n)))","user":"54dc84ede4b024c67c0cf784"},{"problem":21,"code":"(fn [l, num]\n  (last(take (inc num) l)))","user":"5c1229d5e4b01240ff567188"},{"problem":21,"code":"(fn [items index](loop [i 0 ritems items] (if (< i index) (recur (inc i)(rest ritems)) (first ritems))))","user":"5d363543e4b01671435dbd20"},{"code":"(fn [xs n] (first (drop n xs)))\n\n#_ #(first (drop %2 %1))\n\n#_ (fn [xs n]\n  (if (zero? n)\n    (first xs)\n    (recur (rest xs) (dec n))))\n  \n#_ (loop [xs %1\n        i  %2]\n   (if (zero? i)\n     (first xs)\n     (recur (rest xs) (dec i))))","problem":21,"user":"5371167fe4b0fc7073fd6ea7"},{"problem":21,"code":"(fn do-the-job [lst n]\n  (cond (empty? lst) nil\n        (= n 0) (first lst)\n        :else (do-the-job (rest lst) (dec n))))","user":"5ae4e0e3e4b0837691e92c86"},{"problem":21,"code":"(fn [lst n]\n  (loop [lst lst\n         n n]\n    (if (> n 0)\n      (recur (rest lst) (dec n))\n      (first lst))))","user":"56a0a85fe4b0542e1f8d14a5"},{"code":"(fn [listx index] (first (reverse (take (inc index) listx))))","problem":21,"user":"52737333e4b03e8d9a4a747f"},{"problem":21,"code":"(fn [x N] (last (take (inc N) x)))","user":"54662430e4b01be26fd746e3"},{"problem":21,"code":"(fn [stufflist n]\n  (loop [stuff stufflist\n         iter n]\n    (if (= iter 0)\n      (first stuff)\n      (recur (rest stuff) (dec iter)))))","user":"5b2a559be4b063e2438bcc74"},{"code":"(fn f [ls n] (if (= n 0) (first ls) (f (rest ls) (dec n))))","problem":21,"user":"503917a0e4b088a6a14ca763"},{"code":"#(loop [se %1 x %2] (if (= 0 x) (first se) (recur (rest se) (dec x))))","problem":21,"user":"5180a93fe4b0e3fc13e244e8"},{"code":"(fn [xs n]\n  (loop [i n other xs]\n    (if (= 0 i)\n      (first other)\n      (recur (dec i) (rest other)))))","problem":21,"user":"533018b2e4b019098a6f8b56"},{"problem":21,"code":"#(loop [coll %1 n %2]\n   (if (= n 0) \n     (first coll)\n     (recur (rest coll) (dec n))))","user":"5537e092e4b09218d5f44fd6"},{"code":"(fn [x, y] (first(drop y x)))","problem":21,"user":"5034a14de4b062bc5d7ae165"},{"code":"(fn [lts x] \n  (loop [c 0\n         li lts]\n  \t(if (= c x)\n    \t(first li)\n    \t(recur (+ c 1) (rest li)))))","problem":21,"user":"529da890e4b04e0c58e87b7e"},{"problem":21,"code":"(fn [contents n]\n  (loop [x contents\n         y '()]\n    (when x\n    \t(if (= (count y) n)\n          (first x)\n          (recur (rest x) (conj y (first x)))))))","user":"5d64ecb2e4b0c9e5857d5036"},{"problem":21,"code":"(fn[xs n] (if (> n 0) (recur (rest xs) (dec n))\n                      (first xs)))","user":"553638bae4b09218d5f44fba"},{"problem":21,"code":"(fn [collection to]\n  (loop [col collection\n         at 0]\n    (if (= at to)\n      (first col)\n      (recur (rest col) (inc at)))))","user":"5b94c507e4b0c0b3ffbd4a5a"},{"problem":21,"code":"(fn [x y]\n  (if (> y 0)\n  \t(recur (rest x) (dec y))\n  \t(first x)))","user":"56de78fde4b0ea9b8538f83c"},{"code":"(fn my-nth [l n]\n  (cond\n   (< n 0) nil\n   (= n 0) (first l)\n   :else (my-nth (rest l) (- n 1))))","problem":21,"user":"529f5335e4b04e0c58e87ba8"},{"code":"(fn getNth [x, n]\n  (.get x n))","problem":21,"user":"4fe610fde4b0e8f79898fece"},{"code":"#(loop [cnt 0 list %1] \n   (if (= cnt %2)\n     (first list)\n     (recur (inc cnt) (rest list))\n     \n     ))","problem":21,"user":"516bc02ce4b005fd0cdf85c5"},{"problem":21,"code":"(fn [seq x] (loop [index x\n                   seq seq]\n              (if (= index 0)\n                (first seq)\n                (recur (dec index) (rest seq))\n                )\n              ))","user":"5aa2dc5ae4b0d174b936c861"},{"code":"(fn [coll n]\n  (loop [coll2 coll nn n]\n    (if (zero? nn)\n       (first coll2)\n       (recur (rest coll2) (dec nn)))))","problem":21,"user":"4ec5a6ee535d6d7199dd36ae"},{"problem":21,"code":"(fn [x n]\n  (get (apply vector x) n))","user":"58d1b2ebe4b03c36ff7e58ec"},{"problem":21,"code":"#(loop [lst %1\n         n %2]\n    (if (= n 0)\n      (first lst)\n      (recur (rest lst) (dec n))))","user":"5b4b8cd6e4b02d533a91bc9f"},{"code":"(fn [coll idx]\n  (first (drop idx coll)))","problem":21,"user":"4e7f51eb535db966e863cc3f"},{"problem":21,"code":"(fn [lista elemento] (first (drop elemento lista)))","user":"5b9601e8e4b0c0b3ffbd4a70"},{"problem":21,"code":"(fn\n        [input-list n]\n        (loop [cnt n tmp-list input-list]\n              (if (zero? cnt)\n                  (first tmp-list)\n                (recur (dec cnt) (rest tmp-list)))))","user":"5a1483e8e4b0ff51aa4b319e"},{"code":"( fn [coll pos] (first ( keep-indexed #(if (= %1 pos) %2) coll)))","problem":21,"user":"5291ede5e4b0239c8a67af1e"},{"problem":21,"code":"(fn \n  [inSeq idx] \n  (get (vec inSeq) idx))","user":"5e1b0140e4b0dc959400851c"},{"code":"(fn [coll n]\n  ((apply comp (cons first (repeat n rest))) coll)\n)","problem":21,"user":"52bcf698e4b07a9af57922fe"},{"code":"(fn [list pos] (get (vec list) pos))","problem":21,"user":"50062e4ae4b0678c553fc478"},{"code":"(fn [c n]\r\n  (if (zero? n)\r\n    (first c)\r\n    (recur (rest c) (dec n))))","problem":21,"user":"4ec1923f535dfed6da9c6db2"},{"problem":21,"code":"(fn [col n] \n  (if (= n 0) \n    (first col)\n    (recur (rest col) (dec n))\n   )\n )","user":"57dfe173e4b0bd073c20246b"},{"code":"(fn [coll x]\n  (last (take (inc x) coll)))","problem":21,"user":"4fea8741e4b0140c20fb9c09"},{"problem":21,"code":"(fn myn [l n] \n  \t(last (take (inc n) l)))","user":"553900d4e4b09218d5f44fe5"},{"code":"(fn [x y] (if (= y 0) (first x) (recur (rest x) (- y 1))))","problem":21,"user":"4e72a717535d5021c1a89665"},{"problem":21,"code":"(fn [l i] (loop [things l index 0]\n   (if (= i index)\n     (first things)\n     (recur (rest things) (inc index)))))","user":"57eea2bee4b0bfb2137f5bc3"},{"problem":21,"code":"(fn [lst n] (last (take (inc n) lst )))","user":"59697a28e4b069c0a1a197e8"},{"code":"(fn [seq e]\r\n  (loop [i 0\r\n         n (first seq)\r\n         l  seq]\r\n      (if (= i e)\r\n          n\r\n          (recur (+ i 1) (first (rest l)) (rest l)))))","problem":21,"user":"5000a543e4b0678c553fc40f"},{"code":"(fn mones\n  ([list index] (mones list index 0)) \n  ([list index current-index]\n  (cond\n   (= current-index index) (first list)\n   :else (mones (rest list) index (+ current-index 1)) \n   )))","problem":21,"user":"51cec220e4b0e42293a2255a"},{"problem":21,"code":"(fn[x n] (last (take (+ 1 n) x)))","user":"55295b5de4b0ffed3738f949"},{"problem":21,"code":"(fn foo [l, n] (if (= 0 n) (first l) (foo (rest l) (- n 1))))","user":"54acdd13e4b09f271ff37cdc"},{"code":"(fn mynth [v n]\n  (assert (< n (count v)))\n  (assert (>= n 0))\n  (loop [s v i 0]\n    (if (= n i)\n      (first s)\n      (recur (rest s) (inc i)))))","problem":21,"user":"5312452be4b08068f379ecf8"},{"code":"(fn [coll i]\r\n  (->> coll (drop i) first))","problem":21,"user":"4fec6febe4b0681fd128dca9"},{"problem":21,"code":"(fn [col y] \n  (loop[col2 col x y iter 0]\n    (if (= iter y)\n      (first col2)\n      (recur (rest col2) x (+ iter 1)))))","user":"576ed928e4b0979f89651583"},{"problem":21,"code":"(fn [xs x]\n  (first (drop x xs)))","user":"5508a292e4b06e50f9beb10f"},{"code":"(fn [coll idx]\n  (loop [coll coll\n         pos 0]\n    (if (= pos idx)\n      (first coll)\n      (when (next coll)\n        (recur (rest coll) (inc pos))))))","problem":21,"user":"51ab4082e4b04e3dc0c27b31"},{"code":"(fn ! [list n] (if (= n 0) (first list) (! (rest list) (dec n))))","problem":21,"user":"4f75f630e4b0fbe0118ec568"},{"problem":21,"code":"(fn my_testt [lst num] (if (zero? num) (first lst) (my_testt (rest lst) (dec num))))","user":"5a663a32e4b0512ff01cd9c2"},{"problem":21,"code":"(fn [coll number] (first (drop  number coll)))","user":"5800036fe4b0a837a8b30c31"},{"code":"(fn mynth [lst k] (if (= k 0) (first lst) (mynth (rest lst) (- k 1))))","problem":21,"user":"511937eee4b055cfb310d495"},{"problem":21,"code":"(fn [lista broj]\n  (if (= broj 0)\n    (first lista)\n    (recur (rest lista) (dec broj))))","user":"58fdd7b7e4b0438e51c2cfc0"},{"code":"#_#(first (drop %2 %))\n\n#((vec %) %2)","problem":21,"user":"4f1bb9d8535d64f60314647d"},{"code":"(fn[a-list n] (first (drop n a-list)))","problem":21,"user":"4ede0511535d10e5ff6f5330"},{"problem":21,"code":"(fn nthElement [x,y] (if (= y 0) (first x) (nthElement (next x) (dec y))))","user":"55204412e4b08d5046aa8a5f"},{"problem":21,"code":"(fn [x n]\n  (if (= n 0)\n    (first x)\n    (recur (rest x) (- n 1))\n    )\n  )","user":"5e265173e4b05b4b01516175"},{"code":"(fn [col i]\n  (last (take (+ 1 i) col)))","problem":21,"user":"4e7d4544535db169f9c796d0"},{"problem":21,"code":"(fn [coll index]\n  (.get coll index)\n  )","user":"564c7501e4b0284900eef671"},{"problem":21,"code":"(fn f [coll n] \n  (if (= n 0) (first coll) \n    (f (rest coll) (- n 1))))","user":"57b5ed94e4b0fbc9809a27b4"},{"problem":21,"code":"(fn my-nth [xs n] \n  (if (= n 0) \n    (first xs) \n    (my-nth (rest xs) (- n 1)) ))","user":"5d4c83b7e4b0776584bd6f34"},{"code":"(fn foo [x n] (if (= 0 n) (first x) (foo (rest x) (- n 1))))","problem":21,"user":"4f3e05a8e4b0e243712b1f79"},{"code":"(\n  (fn [f] (fn [x n] (f f x n 0)))\n  (fn [f x n i]\n    (if\n      (= n i)\n      (first x)\n      (f f (rest x) n (+ 1 i)))\n  )\n)","problem":21,"user":"4fc521eae4b081705acca37b"},{"problem":21,"code":"(fn [zeq nthe]\n  (if (empty? zeq) \n    ([]) \n    (if-let \n      [nthe (= 0 nthe)]  \n      (first zeq) \n      (recur (rest zeq) (dec nthe))\n     ) \n   )\n)","user":"5ea97df7e4b00a66d4a951c8"},{"code":"#( aget (into-array %1) %2)","problem":21,"user":"4e2b3e16535deb9a81d77f04"},{"problem":21,"code":"#(loop [x %1 y%2] (if (zero? y) (first x) (recur (rest x) (dec y))))","user":"5ee543bde4b029a2061bbe95"},{"problem":21,"code":"#(if (= %2 0)\n   (first %1)\n   (recur (rest %1)(- %2 1)))","user":"5b576216e4b02d533a91bd58"},{"problem":21,"code":"(fn nth-element\n  [sq n]\n  (if (= n 0)\n    (first sq)\n    (nth-element (rest sq) (- n 1) )))","user":"5512c935e4b055c2f668d4b8"},{"code":"(fn [x y] ((comp first reverse take) (inc y) x))","problem":21,"user":"51a417dde4b0def3c5c58688"},{"problem":21,"code":"(fn [col index]\n  (if (= index 0)\n    (first col)\n    (recur (rest col) (dec index))))","user":"59ac757fe4b00adcf69795d3"},{"code":"(fn [x y]\n  (first\n    (nthnext x y)))","problem":21,"user":"4f8db862e4b02e764a0a51b2"},{"problem":21,"code":"(fn [coll idx] ((vec coll) idx))","user":"56e9e0ace4b04a395b9a0400"},{"problem":21,"code":"#(if (= %2 0)\n  \t(first %1)\n    (recur (rest %1) (- %2 1)))","user":"5fac50f4e4b08cb800c85ae5"},{"problem":21,"code":"(fn [seq i]\n  (if (= i 0)\n    (first seq)\n    (recur (rest seq) (dec i))))","user":"57a2bb9be4b0c3d858beb905"},{"problem":21,"code":";(fn [coll index]\n;  (loop [[x & xs] coll\n;         counter  0] (if (= counter index) x (recur xs (+ counter 1)))))\n  \n(fn [coll index]\n  (first\n   \t(drop index coll)))","user":"56a45fcee4b0542e1f8d14dc"},{"problem":21,"code":"(fn my-nth\n  [coll n]\n  (if ( = (dec (count coll)) n)\n   (last coll) \n   (my-nth (butlast coll) n)))","user":"5e00752fe4b0a607a9a45d24"},{"problem":21,"code":"(fn [s n] (#(get % n) (vec s)))","user":"571f5b4ce4b0145328a762a5"},{"code":"(fn mynth [coll index]\n  (if (= index 0)\n      (first coll)\n      (mynth (rest coll) (dec index))))","problem":21,"user":"510d59cce4b078ea71921134"},{"problem":21,"code":"#(loop [l % n %2] (if (> n 0) (recur (next l) (- n 1)) (first l)))","user":"5450d992e4b0e397800069a5"},{"code":"(fn [coll n] \n  (loop [c coll i 0]\n    (if (= i n)\n      (first c)\n      (recur (rest c) (inc i)))))","problem":21,"user":"51458deee4b0e8879607340b"},{"code":"(fn [x y] (first(drop y x)))","problem":21,"user":"4eb8979b535dfed6da9c6d4a"},{"code":"(fn myNth [xs n] (if (= 0 n)\n                  (first xs)\n                  (myNth (rest xs) (- n 1))))","problem":21,"user":"52161db6e4b0bf4bffd29cb8"},{"problem":21,"code":"(fn [coll n]\n  (loop [tail coll, n1 n]\n    (if (<= n1 0)\n      (first tail)\n      (recur (rest tail) (- n1 1)))))","user":"59225498e4b09b4ee5954c8c"},{"problem":21,"code":"(fn [xs n]\n  (loop [i 0 xs xs]\n    (if (= i n)\n      (first xs)\n      (recur (inc i) (rest xs)))))","user":"5b41c077e4b02d533a91bc25"},{"problem":21,"code":"(fn [l x]\n  (if (= x 0)\n    (first l)\n    (recur (next l)(dec x))))","user":"5dfb20b8e4b0a607a9a45cd3"},{"code":"(fn f [coll n] (if (= n 0) (first coll) (f (rest coll) (- n 1))))","problem":21,"user":"5216933be4b000d124d989cf"},{"code":"(fn [lst ind]\n  (first (drop ind lst)))","problem":21,"user":"51c611c4e4b03a28d42333bf"},{"code":"(fn my-nth [s i] (if (= i 0) (first s) (my-nth (rest s) (dec i))))","problem":21,"user":"5002b6e5e4b0678c553fc42c"},{"code":"(fn [l i] (first (nthnext l i)))","problem":21,"user":"5134973ce4b0230e9f713b42"},{"code":"#(loop [coll % n %2]\n    (if (zero? n)\n      (first coll)\n      (recur (rest coll) (dec n))))","problem":21,"user":"5231a08ce4b0e2e8de81d1ee"},{"problem":21,"code":"(partial (fn f [i xs n]\n  \t\t\t(if (>= i n)\n    \t\t\t(first xs)\n    \t\t\t(f (inc i) (rest xs) n))) \n         0)","user":"5b236e55e4b08b1df1c36759"},{"problem":21,"code":"(fn \n  [seq n]\n  (first (drop n seq)))","user":"5703ce0fe4b08d47c97781fd"},{"problem":21,"code":"(fn f1 [col n] (if (= n 0) (first col) (f1 (rest col) (- n 1))))","user":"59198ddce4b09b4ee5954bc5"},{"code":"(fn [ar n] (first (nthnext ar n)))","problem":21,"user":"50f8862de4b0aafb827eb203"},{"problem":21,"code":"(fn [x n] \n  (if (= n 0) \n    (first x)\n    (recur (rest x) (- n 1))))","user":"5546d2c5e4b0a04f79299543"},{"code":"(fn [se n] (last (take (+ n 1) se)))","problem":21,"user":"4df407c3535d08e6dec9fe2e"},{"problem":21,"code":"(fn\n  [arr n]\n  (loop [iter 0\n         array arr]\n    (if (= iter n)\n      (first array)\n      (recur (inc iter) (rest array))))\n  )","user":"55a1c7efe4b0acc240e31518"},{"problem":21,"code":"#(loop [s %1 n %2]\n  (if (empty? s)\n    -1\n    (if (= n 0)\n      (first s)\n      (recur (rest s) (dec n)))\n    )\n   )","user":"590a7dbfe4b047aa04b199bc"},{"code":"#(loop [li %1, i %2]\n    (if (zero? i)\n      (first li)\n      (recur (next li) (dec i))\n    )\n  )","problem":21,"user":"4fa7de4ce4b081705acca1c9"},{"problem":21,"code":"(fn [lst n]\n  (get(vec lst)n))","user":"57f81569e4b0d3187e900919"},{"code":"(fn [ y x] (first(nthnext y x)))","problem":21,"user":"52693472e4b03e8d9a4a71db"},{"problem":21,"code":"(fn [x y] (if (> y 0)\n            (recur (rest x) (- y 1))\n            (first x)))","user":"54d9a3b1e4b024c67c0cf74f"},{"problem":21,"code":"(fn [xs n] \n  (loop [x n \n         xxs xs]\n  (if (= x 0)\n    (first xxs)\n    (recur (dec x) (rest xxs) ) ) ) )","user":"55aa8276e4b0988bba2ad94e"},{"problem":21,"code":"(fn my-nth [thing n]\n  (loop [n n\n         xs thing]\n    (if (and xs (> n 0))\n      (recur (dec n) (next xs))\n      (first xs))))","user":"58975725e4b00487982d52b7"},{"problem":21,"code":"(fn [Xs n] (first \n            (drop n \n                  Xs)))","user":"5e60a0cae4b0fd0acd158689"},{"problem":21,"code":"(fn\n  [input-list n]\n  (loop [counter n temp-list input-list]\n    (if (zero? counter)\n    (first temp-list)\n    (recur (dec counter) (rest temp-list)))))","user":"57e10705e4b0bfb2137f5a6a"},{"problem":21,"code":"(fn [v n] (loop [cnt n acc v]\n   (if (zero? cnt)\n       (first acc)\n   (recur (dec cnt) (rest acc)))))","user":"54d0e6c5e4b0e8a36923e5d4"},{"problem":21,"code":"(fn [lst, n]\n  (first (reverse (take (+ n 1) lst))))","user":"53cecf28e4b00fb29b2212f6"},{"problem":21,"code":"(fn [v n]\n  (first\n   (drop n v)))","user":"57d4f225e4b0bd073c2023a6"},{"code":"(fn [col n] (if (zero? n) (first col) (recur (rest col) (dec n))))","problem":21,"user":"4f83665ee4b033992c121c1c"},{"code":"(fn [ks n]\n  (if (= n 0)\n    (first ks)\n    (recur (rest ks) (dec n))\n  )\n)","problem":21,"user":"531cd41ee4b08068f379eda9"},{"problem":21,"code":"(fn [ls,x]\n  (loop [index 0\n         coll ls]\n    (if (= index x)\n      (first coll)\n      (recur (+ index 1) (rest coll)))))","user":"5618ad1ce4b053970a773aeb"},{"code":"(fn [lst n]\n  (if (zero? n)\n    (first lst)\n    (recur (rest lst) (- n 1))))","problem":21,"user":"5220bc0fe4b0e6a83c8925a7"},{"code":"(fn [seq index]\n  (loop [i 0 \n        el (first seq)\n        els (next seq)]\n    (if (= i index)\n      el\n      (recur (+ i 1) (first els) (next els)))))","problem":21,"user":"50ab38a8e4b0f65d68208507"},{"code":"(fn kth [x k](first (drop k x)))","problem":21,"user":"52e6975de4b09f7907dd147a"},{"problem":21,"code":"#((comp first (partial drop %2)) %1)","user":"55423a83e4b0a04f7929951a"},{"code":"(fn [s n]\n  (letfn [(go [s n]\n              (if (= n 0) (first s) (go (rest s) (- n 1))))]\n    (go s n)))","problem":21,"user":"51e2e080e4b0c611d6113e38"},{"code":"(fn [xs n] (first (drop n xs)))","problem":21,"user":"4e833184535db62dc21a62d2"},{"code":"(fn impl [aseq n]\n  (if (zero? n)\n    (first aseq)\n    (recur (rest aseq) (dec n))))","problem":21,"user":"4f0e7f7b535d0136e6c22325"},{"code":"(fn [coll ind]\n  (loop [c coll i 0]\n    (if (= i ind) \n      (first c)\n      (recur (rest c) (+ i 1)))))","problem":21,"user":"51f42e66e4b0fca5e8b48230"},{"problem":21,"code":"(fn ord [arr n] (if (zero? n) (first arr) (ord (rest arr) (dec n))))","user":"5c960295e4b048ec896c5a54"},{"code":"(fn [thelist,n]\n       (do\n         (if (= 0 n)\n            (first thelist)\n            (recur (rest thelist) (dec n))\n)))","problem":21,"user":"4f51697ae4b03ad3f0c10d22"},{"problem":21,"code":"#(get (vec %1) %2)\n\n; #(peek (vec %))","user":"5b819312e4b047b03b20378d"},{"problem":21,"code":"(fn f [xs n]\n  (cond\n   (= n 0) (first xs)\n   :else (f (rest xs) (- n 1))\n   )\n  )","user":"5fef5ccce4b05ac5b16ea1d9"},{"problem":21,"code":"(fn [l idx] ( first (drop idx l)))","user":"5a78e98de4b013a48d399779"},{"code":"(fn [l p] \n  (if (pos? p) \n     (recur (rest l) (dec p))\n     (first l)))","problem":21,"user":"4f31ad57e4b0d6649770a089"},{"problem":21,"code":"(fn [xs index]\n  (loop [xs\t\txs\n         index\tindex]\n  \t(if (= 0 index)\n    \t(first xs)\n\t\t(recur (rest xs) (- index 1)))))","user":"5468033ee4b00cfc9eacc133"},{"code":"(fn [xs n] \n  (if (= n 0) (first xs) (recur (rest xs) (- n 1))))","problem":21,"user":"4ec96da2535d6d7199dd36ff"},{"code":"(fn [xs, n] (if (= n 0) (first xs) (recur (rest xs) (- n 1))))","problem":21,"user":"516ea313e4b06aac486e5b2c"},{"problem":21,"code":"(fn [sq k] (if (not (zero? k)) (recur (rest sq) (dec k)) (first sq)))","user":"504dfc75e4b078edc5f59387"},{"problem":21,"code":"(fn my-nth [data n]\n  (if (= n 0)\n    (first data)\n    (my-nth (rest data) (- n 1))))","user":"53bc279ae4b047364c04450e"},{"problem":21,"code":"(fn [s n] (loop [a s b 0] (cond (empty? a) nil (= b n) (first a) :else (recur (rest a) (inc b)))))","user":"5c8fa41be4b048ec896c59c1"},{"code":"#(do (if (= %2 0) (first %1) (recur (rest %1) (- %2 1))))","problem":21,"user":"4e6a368e535d8ccf87e9feae"},{"problem":21,"code":"(fn q [coll idx] (get (zipmap (range) coll) idx))","user":"5da4fc6be4b000c986472bff"},{"code":";.get\n#(first (drop %2 %))","problem":21,"user":"4fceda40e4b03432b189f407"},{"code":"(fn blah [list pos] (first (drop pos list)))","problem":21,"user":"4ec6cfda535d6d7199dd36d8"},{"problem":21,"code":"(fn [ls idx] \n  (first (reverse (take (inc idx) ls))))","user":"60beb061e4b0e0fa5f1b428d"},{"problem":21,"code":"(fn [current l final]\n  (if (not (= current final))\n      (recur (inc current) (rest l) final)\n      (first l)))\n 0","user":"5242f6dfe4b076204b44fa9d"},{"code":"#(if (pos? %2) (recur (rest %) (dec %2)) (first %))","problem":21,"user":"50f0a554e4b0c5f4fa5ddb6c"},{"problem":21,"code":"(fn [s idx] (last(take (inc idx) s)))","user":"5450c81fe4b0e397800069a4"},{"code":"(fn helper [lat n]\n    (cond\n     (= n 0) (first lat)\n     :else (helper (rest lat) (dec n))))","problem":21,"user":"50aedb8ce4b0a40c9cfb08d4"},{"code":"(fn non-nth[coll n]\n  (if (zero? n)\n  (first coll)\n  (non-nth (rest coll) (dec n))\n  ))","problem":21,"user":"5338387de4b0e30313ee6c91"},{"code":"#(loop [count %2 list %1] (if (neg? (dec count))\n                             (first list)\n                             (recur (dec count) (next list))))","problem":21,"user":"4e9ce260535dbda64a6f6b83"},{"code":"(fn f [coll index]\n  (if (= index 0)\n    (first coll)\n    (f (rest coll) (dec index))))","problem":21,"user":"4f3b2b28e4b0e243712b1f26"},{"problem":21,"code":"(fn\n  [x y]\n  ((vec x) y)\n)","user":"5cd17bf1e4b0ccb0619628eb"},{"problem":21,"code":"(fn nth-element\n  [lst index]\n  (loop [i 0\n         index index\n         lst lst]\n    (if (= i index)\n          (first lst)\n    (recur (inc i) index (rest lst)))))","user":"5bbbcf9ee4b0a20761a23614"},{"problem":21,"code":"(fn [l n] \n  (last (take (inc n) l)))","user":"586ed585e4b01531a375e9b6"},{"code":"(fn n-element [x n]\n   (if (= n 0)\n     (first x)\n     (recur (rest x) (dec n))))","problem":21,"user":"533431e4e4b019098a6f8b8d"},{"problem":21,"code":"(fn my-nth\n  ([seq] (my-nth seq 0))\n  ([seq x]\n    (if (<= x 0)\n      (first seq)\n      (my-nth (rest seq)\n              (dec x)))))","user":"59cd351ee4b0ef0a1e9b5b35"},{"problem":21,"code":"(fn [as k]\n  (loop [as as, k k]\n    (if (zero? k) (first as)\n      (recur (rest as) (dec k)))))","user":"573d9cd1e4b05c31a32c0816"},{"code":"(fn my-nth [itms idx]\n  (last\n    (take (+ 1 idx) itms)))","problem":21,"user":"50c7b929e4b00bb60fe0c537"},{"code":"(fn my-nth[lst n]\n  ((fn hlp[lst n cnt]\n    (cond\n     (empty? lst) nil\n     (= n cnt) (first lst)\n     :else\n     \t(hlp (rest lst) n (inc cnt))))\n   lst n 0))","problem":21,"user":"534f8c9ae4b084c2834f4acd"},{"code":"(fn enth [coll index] (if (= index 0) (first coll) (enth (rest coll) (- index 1))))","problem":21,"user":"4fcaf7a4e4b0ee37620e1857"},{"problem":21,"code":"#(loop [xs %1, i %2]\n  (if (= i 0)\n    (first xs)\n    (recur (rest xs) (- i 1))))","user":"526e84b5e4b03e8d9a4a732d"},{"problem":21,"code":"(fn [s n]\n  (let [length (count s)\n        rn (- length n)] \n    (if (= length rn)\n      (first s)\n      (recur (rest s) (- n 1))))\n   )","user":"5bdc2219e4b0ed4b8aab4c2e"},{"code":"(fn [arr n] (\n  last(take (+ n 1) arr))\n)","problem":21,"user":"4e80d1c8535db62dc21a62b6"},{"problem":21,"code":"(fn mynth [s n] ((vec s) n))","user":"5bfc9037e4b0bdcf453d15f2"},{"code":"(fn willsnth [l n] (if (= 0 n) (first l) (willsnth (rest l) (- n 1))))","problem":21,"user":"5221c0cae4b0e6a83c8925e1"},{"code":"(fn -nth [l n] (first (drop n l)))","problem":21,"user":"4f1c2a3a535d64f603146480"},{"code":"(fn [l x] (first (drop x l)))","problem":21,"user":"4f4003d9e4b0e243712b1fa5"},{"code":"(fn [coll idx] \n  (loop [c coll i idx] \n    (if \n      (zero? i) \n      (first c)\n      (recur \n        (rest c)\n        (dec i)\n      )\n    )\n  )\n)","problem":21,"user":"52f1bc81e4b05e3f0be25eef"},{"problem":21,"code":"(fn [s x]\n  (first (drop x s)))","user":"58ceace9e4b03c36ff7e58a7"},{"code":"(fn [xs i] (if (zero? i) (first xs) (recur (rest xs)(dec i))))","problem":21,"user":"4f0370f4535dcb61093f6acd"},{"code":"(fn [seq n]\n  (if (= 0 n)\n     (first seq)\n     (recur (rest seq) (dec n))))","problem":21,"user":"52470d42e4b05ef8e38e6350"},{"problem":21,"code":"(fn [s i]\n\t(last (take (inc i) s)))","user":"5b2689e3e4b063e2438bcc33"},{"code":"(fn [collection index]       \n(if (zero? index)\n\t(first collection)\n(recur (rest collection) (- index 1))))","problem":21,"user":"5351cc85e4b084c2834f4ae9"},{"problem":21,"code":"(fn [list num]\n  (if \n    (zero? num)\n    (first list)\n    (recur (rest list) (- num 1))))","user":"592d67e1e4b072a2710fcf6f"},{"code":"(fn [x n] ((fn [cnt col] (if (= n cnt) (first col) (recur (inc cnt) (rest col)))) 0 x))","problem":21,"user":"505a0a15e4b03d2efce48c5a"},{"problem":21,"code":"(fn nths [xs n]\n  (if (zero? n)\n    (first xs)\n    (nths\n      (rest xs)\n      (- n 1)\n    )\n  )\n)","user":"5672a711e4b05957ce8c6117"},{"code":"(fn [s n]  (first (drop n s)))","problem":21,"user":"4f5612f9e4b0a7574ea71812"},{"code":"(fn [s x] (loop [c x\n                 h s] (if (= c 0) (first h) (recur (dec c) (rest h))\n                  )))","problem":21,"user":"4ff78679e4b0678c553fc392"},{"code":"(fn [seq n]\n    (if (= 0 n)\n      (first seq)\n      (recur (rest seq) (- n 1))))","problem":21,"user":"502ac96de4b0614b5299611b"},{"problem":21,"code":"(fn _nth [_list idx] (if (= 0 idx) (first _list) (_nth (rest _list) (dec idx))))","user":"55f6fafbe4b06e875b46cea1"},{"problem":21,"code":"(fn [s i] \n    (first (drop i s)\n    )\n  )","user":"5bba703fe4b0a20761a235eb"},{"code":"(fn [col n] (get (into-array col) n))","problem":21,"user":"4dadba4dc9a9d6ed3899dc57"},{"code":"(fn [s n]\n  (if (= 0 n)\n    (first s)\n    (recur (rest s) (dec n))))","problem":21,"user":"4f3444b7e4b0e243712b1eb6"},{"problem":21,"code":"(fn [sq ind]\n  (first (drop ind sq)))","user":"5e62c405e4b0fd0acd15869b"},{"problem":21,"code":"(fn [input n-in]\n  (loop [x input n n-in] \n    (cond \n     (empty? x) nil\n     (= n 0) (first x)\n     :else (recur (rest x) (- n 1))\n    )\n   )\n)","user":"5e7aba9fe4b085ba37836e0c"},{"problem":21,"code":"(fn [xs x]\n  (last (take (+ x 1) xs)\n  ))","user":"5ac85708e4b0e27600da77ac"},{"code":"(fn [coll n] \n  (if (zero? n) \n    (first coll)\n    (recur (rest coll) (dec n))\n    )\n  )","problem":21,"user":"52f381f3e4b05e3f0be25f10"},{"code":"(fn [l p] (last (take (+ p 1) l)))","problem":21,"user":"5098bcfee4b0cae2931060a1"},{"problem":21,"code":"(fn rec [coll n] (if (= n 0) (first coll) (rec (rest coll) (dec n))))","user":"5bf12915e4b0a6d31fed2168"},{"problem":21,"code":"(fn my-nth [l n] (if (< n 1) (first l) (my-nth (rest l) (dec n)) ))","user":"546a6c7ce4b00cfc9eacc154"},{"code":"(fn gel [s ei] (if (= ei 0) (first s) (gel (rest s) (- ei 1))))","problem":21,"user":"50f84d85e4b0aafb827eb1f7"},{"problem":21,"code":"(fn [coll, idx] \n  (when (>= idx 0)\n    (loop [c coll\n           i idx]\n      (if (zero? i)\n        (first c)\n        (recur (rest c) (dec i)) \n      )\n    )\n  )\n)","user":"5aabc813e4b073f177442561"},{"code":"(fn [lst i]\n  (if (zero? i)\n    (first lst)\n    (recur (rest lst) (dec i))))","problem":21,"user":"50119c07e4b028e9d38b393f"},{"problem":21,"code":"(fn [v n]\n  (loop [lst v\n         num 0]\n    (if (= num n) (first lst)\n      (recur (rest lst) (inc num)))))","user":"531571ece4b08068f379ed27"},{"problem":21,"code":"(fn a [x n] (if (= n 0) (first x) (a (rest x) (- n 1))))","user":"5521c33ce4b0882d96d0919a"},{"problem":21,"code":"(fn [arr idx]\n  (loop [ar arr i 0]\n    (if (= idx i)\n      (first ar)\n      (recur (rest ar) (inc i)))))","user":"5993b28ee4b0b211ea3aaaba"},{"problem":21,"code":"#(loop [coll %1\n        index %2]\n   (if (= index 0)\n     (first coll)\n     (recur (rest coll) (dec index))))","user":"560039cce4b04bb52996e162"},{"code":"(fn findByIdx [seq idx]\n  (if (= idx 0) \n    (first seq) \n    (findByIdx (rest seq) (- idx 1))))","problem":21,"user":"4e2f9e71535deb9a81d77f11"},{"problem":21,"code":"(fn [i p]\n  (loop [items i position p]\n    (if (= position 0)\n      (first items)\n      (recur (rest items) (- position 1) ))\n  )\n)","user":"5669eb9ae4b04acd4f672e02"},{"problem":21,"code":"(fn my-nth [collection n] (.get collection n))","user":"5de92c38e4b0986d99407f85"},{"problem":21,"code":"#(loop [listall %1\n        index %2\n        init 0]\n   (if (= index init)\n     (first listall)\n     (recur (rest listall)\n            index\n            (inc init))))","user":"55938d28e4b0c79f6e1db93f"},{"code":"(fn [s number] (last (seq (take (+ number 1) s))))","problem":21,"user":"4e192c06535d04ed9115e7f7"},{"code":"(fn [x n] (let [foo (fn [foo x n] (if (= 0 n) (first x) (foo foo (rest x) (- n 1))))] (foo foo x n)))","problem":21,"user":"4e03d6ef535d04ed9115e797"},{"problem":21,"code":"(fn [arr n]\n  (if (zero? n)\n  (first arr)\n  (recur (rest arr) (dec n)))\n  )","user":"59636ec9e4b066ee0a44b0c8"},{"code":"(fn [xs n]\n  (loop [n n xs xs]\n    (if (zero? n)\n      (first xs)\n      (recur (dec n)\n             (rest xs)))))","problem":21,"user":"539c20a4e4b0b51d73faaf25"},{"problem":21,"code":"(fn tester\n  [sqc n]\n  (cond \n   (> n (count sqc)) \"over array limit\"\n   (= n 0) (first sqc)\n   :else (tester (rest sqc) (dec n))))","user":"5a6a32b6e4b0512ff01cda22"},{"problem":21,"code":"(fn [s n]\n  (if (= n 0) (first s)\n  (recur (rest s) (- n 1))))","user":"59858cdbe4b021a7a535fe66"},{"code":"#(loop [list %1 n %2]\r\n     (if (= n 0)\r\n         (first list)\r\n         (recur (rest list) (- n 1))))","problem":21,"user":"4e0dee88535d04ed9115e7b8"},{"code":"(fn [x,n] \n (get (vec x) n) \n)","problem":21,"user":"4fdf8f67e4b05e33b9224f9e"},{"problem":21,"code":"(fn [c i] (cond\n           (> i 0) (recur (rest c) (dec i))\n           (= i 0) (first c)\n           :else nil))","user":"5739df95e4b0cd1946bd107d"},{"code":"#( ( vec %) %2)","problem":21,"user":"4ee3e3b8535d10e5ff6f5373"},{"problem":21,"code":"(fn [l n]\n  (last (take (inc n) l)))","user":"5cc28739e4b0ccb0619627d8"},{"problem":21,"code":"(fn [thing idx] (first (nthrest thing idx)))","user":"5cb62652e4b026601754b949"},{"problem":21,"code":"(fn [input counter]\n  (if (= 0 counter)\n    (first input)\n    (recur (rest input) (dec counter))\n    )\n  )","user":"5a1fcc82e4b0ff51aa4b3293"},{"problem":21,"code":"(fn x [s n]\n  (if (< n 0)\n    nil\n    (if (= n 0)\n      (first s)\n      (x (rest s) (- n 1))\n    )\n  )\n)","user":"54ba8206e4b0ed20f4ff6eb6"},{"problem":21,"code":"(fn [sqnc n] (first (drop n sqnc)))","user":"5689bd04e4b0dcc4269f4082"},{"problem":21,"code":"(fn [list idx]\n  (loop [_list list _idx idx]\n    (if (= _idx 0)\n      (first _list)\n      (recur (rest _list) (dec _idx)))))","user":"58662a03e4b0f14aab7c8859"},{"code":"(fn [x n] \n  (let [temp (fn [x n acc] (if (= n acc) \n     (first x) (recur (rest x) n (inc acc))))] (temp x n 0)))","problem":21,"user":"4f143c04535d64f603146437"},{"code":"(fn [coll n]\n  (if (= 0 n)\n  \t(first coll)\n  \t(recur (rest coll) (dec n))))","problem":21,"user":"51706c8fe4b004f79986ad8a"},{"code":"(fn foo [seq n] \n  (if (= n 0)\n   (first seq)\n   (foo (rest seq) (- n 1))))","problem":21,"user":"504e48f3e4b0f6ff3350c499"},{"problem":21,"code":"(fn nth-elem [sq n] (\n   if (= n 0) \n        (first sq) \n        (nth-elem (rest sq) (- n 1))\n))","user":"5280a1ece4b0757a1b171407"},{"problem":21,"code":"#(loop [l %1 n %2] (if (> 1 n) (first l) \n                                (recur (rest l) (- n 1))))","user":"5cd47c26e4b0ccb06196291e"},{"problem":21,"code":"(fn [seqn n] (last (take (inc n) seqn)))\n\n;; #((vec %1) %2)\n;; explain, how do these different solutions work?","user":"5fb68f09e4b08cb800c85b58"},{"code":"(fn [collection index]\n  (loop [c collection\n         i 0]\n    (if (= i index)\n      (first c)\n      (recur (rest c) (inc i)))))","problem":21,"user":"51a8ef91e4b08d8ec191b820"},{"problem":21,"code":"(fn my-nth [x i]\n    (if (vector? x)\n      (get x i)\n      (loop [l x\n             ctr i]\n        (if (= ctr 0)\n          (first l)\n          (recur (rest l) (dec ctr))))))","user":"539f9f79e4b0ca733b97449e"},{"problem":21,"code":"(fn mnth [col n]\n  (if (= 0 n)\n    (first col)\n    (mnth (rest col) (- n 1))))","user":"55486ee6e4b0a04f7929955a"},{"code":"(fn [coll n] (first (last (split-at n coll))))","problem":21,"user":"4dbf7a31535d020aff1edf75"},{"problem":21,"code":"(fn [l n] \n   (get (into [] l) n))","user":"5c72c2b9e4b0fca0c16227ab"},{"code":"(fn [seqx n] (first (last (split-at n seqx))))","problem":21,"user":"4f617f66e4b0defedf855fc0"},{"code":"(fn [x n]\n  (loop [i 0\n               l x]\n          (if (= i n)\n            (first l)\n            (recur (+ i 1) (rest l)))))","problem":21,"user":"51ce3cd0e4b0e42293a22553"},{"problem":21,"code":"#(first (drop (dec (count (take (inc %2) %1))) (take (inc %2) %1)))","user":"58ed8f4ce4b056aecfd47d86"},{"problem":21,"code":"#(-> %1 vec (get %2))","user":"5533f56de4b09218d5f44f94"},{"problem":21,"code":"(fn [x n] (last (last (filter (fn [element] (= (first element) n)) (map-indexed (fn [index item] (list index item)) x)))))","user":"56041d21e4b0c80df0ca2656"},{"code":"#(first(reverse(take (+ %2 1) %1)))","problem":21,"user":"52bbd09ee4b07a9af57922ee"},{"problem":21,"code":"#(loop [lst %1 ind %2] (if (= ind 0) (first lst) (recur (rest lst) (dec ind) )))","user":"5979cd36e4b02382a38ad1d8"},{"problem":21,"code":"(fn foo [xx n]\n  \t(if (= 0 n) (first xx) (foo (rest xx) (dec n))))","user":"55010066e4b07d26eda61d6c"},{"code":"(fn [coll i]\n  (loop [coll* coll, \n         i* 0]\n    (if (= i* i)\n      (first coll*)\n      (recur (rest coll*) (inc i*)))))","problem":21,"user":"4e4d1304535dc968683fc4e1"},{"code":"(fn [s n] (first (reverse (take (+ n 1) s))))","problem":21,"user":"52950620e4b02ebb4ef75019"},{"code":"(fn [col n]\n  (if (zero? n)\n    (first col)\n    (recur (rest col) (- n 1))))","problem":21,"user":"4ebbff41535dfed6da9c6d78"},{"problem":21,"code":"(fn nti\n  [sek index]\n  (if (= index 0)\n    (first sek)\n    (nti (rest sek) (dec index))))","user":"54c779bee4b045293a27f63b"},{"code":"(fn f [s i] (if (= i 0) (first s) (f (rest s) (dec i))))","problem":21,"user":"4f89311ce4b033992c121c78"},{"problem":21,"code":"(fn [input n] (if (zero? n) (first  input) (recur (rest input) (dec n)) ))","user":"5460832ce4b01be26fd74693"},{"code":"(fn get-element [xs n]\n  (if (= n 0) \n    (first xs)\n    (recur (rest xs) (dec n))))","problem":21,"user":"536ca4bde4b0fc7073fd6e49"},{"code":"(fn nth-element [seq n] (if (= 0 n) (first seq) (nth-element (rest seq) (- n 1))))","problem":21,"user":"4f031aaa535dcb61093f6a64"},{"code":"(fn [e num] (if (= num 0) (first e) (recur (rest e) (dec num))))","problem":21,"user":"507d28cfe4b00f5b3a6e1a13"},{"problem":21,"code":"(fn findNth [l n] (if (zero? n) (first l) (findNth (drop 1 l) (dec n))))","user":"5b32571ee4b025bcb146f318"},{"problem":21,"code":"(fn f [x, n] (if (= 0 n) (first x) (f (rest x) (- n 1))))","user":"565418ede4b0f9d632dd847d"},{"problem":21,"code":"(fn [l n] (if (> n 0)\n            (recur (rest l) (dec n))\n            (first l)))","user":"54b4046de4b05787c3b16389"},{"problem":21,"code":"(fn [x skip]\n  (first (drop skip x)))","user":"5493d908e4b0b312c081ff52"},{"problem":21,"code":"(fn nth* [sq n]\n  (loop [sq* sq cnt 0]\n  \t(if (= cnt n) \n      (first sq*)\n      (recur (rest sq*) (+ 1 cnt)))))","user":"560843dee4b046a4fc0ac00e"},{"code":"(fn nom [i,a,n] (if(= i n) (first a) (nom (+ i 1 ) (rest a) n))) 0","problem":21,"user":"5097c837e4b00ad8bab4e973"},{"problem":21,"code":"(fn nthElement [s, n] \n    (first (nthrest s n))\n  )","user":"552d487ee4b076ab5578f7e4"},{"code":"(fn [s n]\n  (loop [ss s i n]\n    (if (> i 0) (recur (rest ss) (dec i)) (first ss))))","problem":21,"user":"5207d70ae4b03bd50ef54675"},{"problem":21,"code":"(fn my-nth [lst n]\n  (if (> n 0)\n    (recur (rest lst) (dec n))\n    (first lst)))","user":"546c1f73e4b00cfc9eacc175"},{"problem":21,"code":"#(get (vec %1) %2 )","user":"56283825e4b00e49c7cb47e4"},{"problem":21,"code":"#(loop [s %1\n          c %2]\n    (if (= c 0)\n      (first s)\n      (recur (rest s) (dec c))))","user":"579aff09e4b05b1deef9ade7"},{"problem":21,"code":"(fn [lst n] (last(take (+ n 1) lst)))","user":"54f14381e4b024c67c0cf8ad"},{"code":"#(first(drop%2%))","problem":21,"user":"4f952a68e4b0dcca54ed6cc9"},{"code":"(fn [A x] (if (= x 0) (first A) (recur (rest A) (dec x))))","problem":21,"user":"4f8b27b3e4b02e764a0a5179"},{"problem":21,"code":"(fn el-by-index [lst i] \n  (if (= i 0)\n    (first lst)\n    (el-by-index (rest lst) (- i 1))))","user":"55380eeae4b09218d5f44fd9"},{"problem":21,"code":"#((comp first last) (split-at %2 %1))","user":"55388971e4b09218d5f44fe1"},{"code":"(fn [l c]\n  (loop [count 0 col l]\n    (if (= count c)\n      (first col)\n      (recur (+ 1 count) (rest col)))))","problem":21,"user":"5027b41ee4b01614d1633fee"},{"problem":21,"code":"(fn ntej [l n] (if (zero? n) (first l) (ntej (next l) (dec n)) ))","user":"53ad2bbbe4b047364c044464"},{"problem":21,"code":"#(if (or (< %2 0) (> (count %1) %2) )\n    (\n      (apply hash-map  \n        (interleave (range (count %1)) %1) \n      ) %2\n    )\n    nil\n  )","user":"5762fcfde4b0994c1922fbb3"},{"code":"#(->> %1\r\n      (drop %2)\r\n      first)","problem":21,"user":"4f1abbfb535d64f60314646e"},{"code":"(fn [nums x] (first (drop x nums)))","problem":21,"user":"533aac38e4b0e30313ee6cbe"},{"problem":21,"code":"(fn nthelem [x y]\n  (second\n   (first\n    (filter #(= y (first %)) (map vector (iterate inc 0) x))))\n  )","user":"569ad037e4b0542e1f8d144f"},{"problem":21,"code":"(fn nth-custom [coll n] \n  (if (zero? n) \n    (first coll)\n    (nth-custom (rest coll) (dec n))))","user":"5be0b6eee4b0ed4b8aab4c8e"},{"problem":21,"code":"(fn [nums x]\n  (last (take (+ x 1) nums)))","user":"5ac35d00e4b0e27600da7712"},{"code":"(fn get_nth [x y] (if (= y 0)(first x)(get_nth (rest x) (- y 1))))","problem":21,"user":"4f041ff9535dcb61093f6ba6"},{"problem":21,"code":";; (fn [x k] (count x) (reverse x))\n(fn [x k] (last (take (+ 1 k) x)))","user":"5ccb3792e4b0ccb061962882"},{"problem":21,"code":"(fn get-nth [coll n]\n  (if (= n 0)\n    (first coll)\n    (get-nth (rest coll) (dec n))))","user":"57eb38dbe4b0bfb2137f5b5e"},{"problem":21,"code":"(fn my-nth\n  [lst id]\n  (if (= id 0)\n    (first lst)\n    (my-nth (rest lst) (dec id))))","user":"573b487de4b0cd1946bd10a1"},{"code":"(fn [lst n]\n  (loop [lst lst n n]\n    (if (= n 0) (first lst)\n      (recur (rest lst) (dec n)))))","problem":21,"user":"534efe66e4b084c2834f4ac1"},{"problem":21,"code":"(fn find-nth\n     [mylist id]\n     (println (str \"id=\" id \" mylist=\" mylist))\n     (if (= id 0)\n       (first mylist)\n       (find-nth (rest mylist) (- id 1)))\n     )","user":"53fe459ae4b0de5c418485f4"},{"code":"(fn [xs n] (if (>= 0 n) (first xs) (recur (rest xs) (- n 1))))","problem":21,"user":"4f25fc7ee4b0d66497709ffe"},{"problem":21,"code":"(fn [s i]\n  (let [el (first s)\n        re (rest s)]\n    (if (zero? i)\n      el\n      (recur re (dec i)))))","user":"5713c575e4b07c98581c3aab"},{"problem":21,"code":"(fn [s n]\n  (loop [i n\n         theseq s]\n    (if (= i 0) \n      (first theseq)\n      (recur (dec i) (rest theseq)))))","user":"57e3527ce4b0bfb2137f5a99"},{"problem":21,"code":"(fn nth-element-seq [seq element] (last (take (inc element) seq)))","user":"5af865a9e4b0cc2b61a3bcd1"},{"code":"(fn [x y]\r\n  (first\r\n    (drop y x)\r\n   )\r\n )","problem":21,"user":"4e923f44535dbda64a6f6b00"},{"problem":21,"code":"(fn [sq idx] (first(last(split-at idx sq))))","user":"58f7b1c6e4b0438e51c2cf1a"},{"problem":21,"code":"(fn [coll n]\n  \t(if (= n 0)\n      (first coll)\n  \t(recur (next coll) (- n 1))))","user":"593f95d8e4b069cdc2982be3"},{"problem":21,"code":"(fn nth2 [xs n]\n  (if (= n 0)\n    (first xs)\n    (nth2 (rest xs) (- n 1))))","user":"545cfbb0e4b01be26fd74669"},{"problem":21,"code":"(fn nthelement [seq num] \n  (if (= num 0) (first seq)\n    (nthelement (rest seq) (- num 1))))","user":"58bb10d1e4b0888cdc949cf2"},{"code":"(fn [s n]\n  (last\n    (take (+ n 1) s)))","problem":21,"user":"50b65966e4b0a86f8358ca6c"},{"problem":21,"code":"#(loop [i %1 nthv %2 acc 0]\n                 (if (= nthv acc)\n                   (first i)\n                   (recur (rest i) nthv (inc acc))\n                   ))","user":"560c37b5e4b05f002753df2e"},{"problem":21,"code":"(fn[coll i]\n  (cond\n    (or (neg? i) (empty? coll)) (throw (IndexOutOfBoundsException.))\n    (pos? i) (recur (rest coll) (dec i))\n    :else (first coll)))","user":"5c6227fee4b0fca0c1622641"},{"problem":21,"code":"(fn [x n] (first (keep-indexed #(if (= %1 n) %2) x)))","user":"57b35ecbe4b0fbc9809a277e"},{"problem":21,"code":"(fn f[xs cnt]\n  (if (= 0 cnt)\n         (first xs)\n         (f (rest xs) (dec cnt))))","user":"5ea7b04de4b00a66d4a951b6"},{"code":"(fn a [l n]\n\n     (if (= n 0)\n       (first l)\n       (a (drop 1 l) (- n 1))))","problem":21,"user":"4f050377535dcb61093f6bed"},{"code":"(fn [lst n]\n  (if (= n 0)\n    (first lst)\n    (recur (rest lst) (dec n))))","problem":21,"user":"4fda108ee4b05e33b9224f46"},{"code":"(fn ([x y] (last (take (inc y) x))))","problem":21,"user":"4fa6440ee4b081705acca1b5"},{"problem":21,"code":"(fn [xs index] (if (= index 0) (first xs) (recur (rest xs) (dec index))))","user":"5a584ca2e4b05d388ecb6c7d"},{"problem":21,"code":"#(let [x %1, y %2]\n   (.get x y))","user":"58f286e1e4b08e1cf3471d04"},{"problem":21,"code":"(fn test [coll n]\n  (if (zero? n)\n    (first coll)\n    (test (rest coll) (dec n))))","user":"5f3413fbe4b0574c87022c3b"},{"problem":21,"code":"(fn ng [list n] (if (= n 0) (first list) (ng (rest list) (- n 1))))","user":"53a88fbce4b047364c04442a"},{"code":"(fn getnth [aseq n] (if (== n 0)\n                      \t(first aseq)\n                      \t(getnth (rest aseq) (- n 1))))","problem":21,"user":"51bf4560e4b013aa0d74b817"},{"code":"(fn enth [s n]\r\n  (loop [ss s nn 0]\r\n    (if (= nn n) (first ss)\r\n    (recur (next ss) (inc nn) ))\r\n))","problem":21,"user":"4dcd327b535d5973398f929b"},{"code":"(fn ennth [lst, i] (.get lst i))","problem":21,"user":"5081b2bee4b0946d04438561"},{"problem":21,"code":"(fn [s, n] ((into [] s) n))","user":"54635083e4b01be26fd746bd"},{"problem":21,"code":"(fn [lst idx]\n  (loop [lst lst\n         idx idx]\n    (if (= idx 0)\n      (first lst)\n      (recur (rest lst) (dec idx)))))","user":"559dae85e4b08a52bd4f97cd"},{"problem":21,"code":"(fn [x y] (first (keep-indexed #(if (identical? y %1) %2) x)))","user":"5daec18ae4b0f8c104ccfc8c"},{"problem":21,"code":"(fn foo [lst n]\n  (if (= n 0)\n    (first lst)\n    (foo (rest lst) (- n 1))))","user":"54084784e4b0addc1aec66c9"},{"problem":21,"code":"(fn f [s n]\n  (last (take (inc n) s)))","user":"5ed15e23e4b016b56eae05ba"},{"problem":21,"code":"(fn my-nth [xs n]\n  (if (= n 0)\n    (first xs)\n    (my-nth (rest xs) (dec n))))","user":"56d15bfbe4b0ea9b8538f78d"},{"problem":21,"code":"(fn[coll x]\n        (last(take(inc x) coll)))","user":"5c52fa3ce4b0fb8c5ffd99eb"},{"problem":21,"code":"(fn [items index]\n  (first (remove nil? (map-indexed (fn [cur-index item]\n               \t  \t\t\t  (when (= index cur-index)\n                \t  \t\t\titem)) items))))","user":"538f89bbe4b0b51d73faae8f"},{"code":"(fn u [x y]\n  (if (= y 0) (first x)\n              (u (rest x) (- y 1))))","problem":21,"user":"502d39f8e4b0d96a44ab2032"},{"code":"(fn [items pos]\n\t\t(loop [current 0 rest-items items]\n\t\t\t(if (= current pos)\n\t\t\t\t(first rest-items)\n\t\t\t\t(recur (+ current 1) (rest rest-items)))))","problem":21,"user":"52f31489e4b05e3f0be25f0b"},{"code":"(fn poor-nth [s n]\n  (cond (= n 0) (first s) :else (poor-nth (rest s) (dec n))))","problem":21,"user":"520a94e9e4b01da9d47a99df"},{"problem":21,"code":"#( first(drop  %2  %1))","user":"5799c6dee4b05b1deef9adca"},{"code":"(fn [s idx]\n  (loop [c s\n         i idx]\n    (if (zero? i)\n      (first c)\n      (recur (rest c) (dec i)))))","problem":21,"user":"4ee8b9c9535d93acb0a66884"},{"problem":21,"code":"(fn [lst n]\n         (loop [n n lst lst]\n            (if (= 0 n)\n              (first lst)\n              (recur (- n 1)\n                     (rest lst)))))","user":"584917a1e4b089d5ab817ec9"},{"problem":21,"code":"(fn [sequence counter]\n  ((vec sequence) counter))","user":"5a055eace4b01bb0ae8afdb1"},{"code":"(fn [l n]\n  (first (drop n l)))","problem":21,"user":"5054c853e4b0b1b9d1860eb3"},{"problem":21,"code":"(fn [numbers index ] (first (nthrest numbers index)))","user":"55c66590e4b0e31453f649c0"},{"code":"(fn [col i] (get (vec col) i))","problem":21,"user":"52a62e16e4b0c58976d9abf9"},{"code":"(fn my_nth [s n] (if (= 0 n) (first s) (my_nth (rest s) (- n 1))))","problem":21,"user":"53791ab7e4b06839e8705e4d"},{"code":"(fn [list n] ((vec list) n))","problem":21,"user":"518ee4f9e4b0cd6ff51676a5"},{"problem":21,"code":"(fn my-nth [s index] (if (= index 0) (first s) (my-nth (rest s) (dec index))))","user":"57a9db97e4b0b8559636fc5b"},{"problem":21,"code":"(fn [coll n]\n  (loop [rem coll i 0]\n    (if (= i n) (first rem)\n        (recur (rest rem) (inc i)))))","user":"5d126728e4b02c15ef02199a"},{"code":"(fn me [lst, n]\n  (if (= n 0)\n    (first lst)\n    (me (rest lst) (- n  1))))","problem":21,"user":"52091d57e4b0e152394d76f0"},{"code":"(fn [coll index]\n  (if (> index 0)\n    (recur (next coll) (dec index))\n    (first coll)))","problem":21,"user":"52ab6de1e4b0c58976d9ac78"},{"problem":21,"code":"(fn [lis n] (first (drop n lis)))","user":"56560a21e4b0f9d632dd849c"},{"code":"(fn [lst n]\n  (first ((apply comp (repeat n rest)) lst)))","problem":21,"user":"52c4d327e4b0c2d177d620e6"},{"code":"(fn [coll n]\n  (loop [current 0\n         items coll]\n    (cond\n      (not coll) nil\n      (= current n) (first items)\n      :else (recur (+ 1 current) (next items)))))","problem":21,"user":"5264b4a9e4b03e8d9a4a70e0"},{"code":"(fn _nth [s n] (if (= n 0) (first s) (_nth (rest s) (- n 1))))","problem":21,"user":"5263c44fe4b03e8d9a4a70b8"},{"code":"(fn [x y]\n  (loop [nl x cou y]\n    (cond\n      (= cou 0) (first nl)\n      :else (recur (rest nl) (dec cou)))))","problem":21,"user":"4e920f44535dbda64a6f6afd"},{"code":"(fn [sqn cnt] (loop [s sqn n cnt] (if (= 0 n) (first s) (recur (rest s) (dec n)))))","problem":21,"user":"529f3f1ae4b04e0c58e87ba5"},{"problem":21,"code":"(fn\n  [list n]\n  (.get list n))","user":"582bd5fae4b051871117bf7b"},{"code":"(fn mynth [v n](if (= n 0) (first v)(mynth (rest v) (- n 1))))","problem":21,"user":"4eda7289535d10e5ff6f530c"},{"problem":21,"code":"(fn [coll index] (loop [coll coll n index]\n                   (if (= n 0)\n                     (first coll)\n                     (recur (rest coll) (dec n)))))","user":"574eb3b1e4b02ea114799247"},{"problem":21,"code":"(fn[l x] (if (= x 0) (first l) (recur (rest l)(dec x))))","user":"56232367e4b03f08ee9a922f"},{"code":"(fn nthElement[list i]\n  (if (= i 0)\n    (first list)\n    (nthElement (rest list) (- i 1))))","problem":21,"user":"525d490ae4b0cb4875a45d70"},{"problem":21,"code":"(fn [arr n]\n  (first(drop n arr)))","user":"5e95873ae4b0fbed045a380a"},{"problem":21,"code":"#(if (= %2 0)\n        (first %1)\n        (recur (rest %1) (dec %2)))","user":"59b554cee4b05c620303ca0f"},{"code":"(fn [l Nth]\n  (letfn ((getNth \n           ([l Nth] (getNth l Nth 0))\n           ([l Nth count] \n            (cond\n             (= Nth count) (first l)\n             :else\n             (recur (rest l) Nth (+ count 1))))))\n    (getNth l Nth)))","problem":21,"user":"5047782ce4b0371827a27bc2"},{"problem":21,"code":"(fn [iseq ipos] (first (first (reverse (split-at ipos iseq)))))","user":"558ffd47e4b0277789237669"},{"code":"(fn [seq n]\n  (first (reverse (take (+ 1 n) seq))))","problem":21,"user":"4fc5019ae4b081705acca36d"},{"code":"(fn nth-element [x position]\n          (last (take (+ position 1) x)))","problem":21,"user":"520332f7e4b030ee0c5b2714"},{"code":"(fn n-th [coll n]\n  (if (zero? n)\n    (first coll)\n    (recur (rest coll) (dec n))))","problem":21,"user":"4fb12b35e4b081705acca275"},{"problem":21,"code":"(fn mth [l n]\n  (if (zero? n)\n    (first l)\n    (mth (rest l) (dec n))\n  ))","user":"56fc1d61e4b07572ad1a88de"},{"problem":21,"code":"(fn [s n]\n  (loop [s s n n]\n    (if (= n 0)\n      (first s)\n      (recur (rest s) (dec n)))))","user":"5526a235e4b0ffed3738f922"},{"problem":21,"code":"#(last(take (+ %2 1)  %1))","user":"54e26ee5e4b024c67c0cf7d0"},{"code":"(fn [x, y] (second (take-nth y x)))","problem":21,"user":"52179e00e4b0ea2f1c31c8d3"},{"problem":21,"code":"#(.get % (- (count %) (- (count %) %2)))","user":"575ebba3e4b08062f99a4e70"},{"code":"(fn [args n]\n  (if (= n 0)\n      (first args)\n      (recur (rest args) (dec n))))","problem":21,"user":"4f51b9f3e4b03ad3f0c10d2b"},{"code":"(fn \n  [x y]\n  (.get x y))","problem":21,"user":"529223cbe4b0239c8a67af26"},{"problem":21,"code":"(fn [x i] (last (take (inc i) x)))","user":"544faecfe4b0e39780006996"},{"problem":21,"code":"#(first (drop %2 (take (inc %2) %1)))","user":"512b07f7e4b078b06821febb"},{"code":"(fn [c lst n] (if (= n c) (first lst) (recur (inc c) (rest lst) n))) 0","problem":21,"user":"4f035397535dcb61093f6a8a"},{"code":"(fn enth [xs n]\n  (if (> 1 n)\n    (first xs)\n    (recur (rest xs) (dec n))))","problem":21,"user":"50981062e4b04e098a4c7268"},{"code":"#(loop [n %2 s %1] (if (> n 0) (recur (dec n) (rest s)) (first s)))","problem":21,"user":"5145832be4b0e8879607340a"},{"problem":21,"code":"(fn [s i] (first (last (take (+ i 1) ((partial iterate rest) s)))))","user":"54008b88e4b0de5c4184860d"},{"problem":21,"code":"(fn [agg i] (get (vec agg) i))","user":"5dde6251e4b0948ae9d9add3"},{"code":"(fn my-nth [in-seq n]\r\n  (loop [inde 0\r\n          the-seq in-seq]\r\n        (if (= n inde)\r\n            (first the-seq)\r\n          (recur (inc inde) (next the-seq)))))","problem":21,"user":"4ddcabcb535d6ebe9be03f52"},{"code":"(fn enth [x n] (if (= n 0) (first x) (enth (rest x) (- n 1))))","problem":21,"user":"4f2a6169e4b0d6649770a03d"},{"code":"(fn [x n] (if (zero? n) (first x) (recur (next x) (dec n))))","problem":21,"user":"4de0ff03535d08e6dec9fde4"},{"problem":21,"code":"(fn foo [d i]\n  (if (= i 0)\n    (first d)\n    (foo (rest d) (- i 1))\n  )\n  )","user":"54a708e9e4b09f271ff37c92"},{"code":"(fn [c i] (get (vec c) i))","problem":21,"user":"4e70af68535d5021c1a8963d"},{"code":"(fn [c n]  (first (drop n c)))","problem":21,"user":"4e6e97ca535d5021c1a8960c"},{"problem":21,"code":"(fn f [l e] (if (= e 0) \n              (first l)\n              (f (rest l) (- e 1))\n             )\n  )","user":"568513c4e4b04eec3ec5cfc5"},{"code":"(fn [a,b] (last (take (+ b 1) a)))","problem":21,"user":"4e6a2855535d8ccf87e9fea3"},{"problem":21,"code":"(fn lol [x y] \n  (if (= y 0) \n    (first x) \n    (lol (rest x) (- y 1))))","user":"544e1794e4b0e39780006980"},{"problem":21,"code":"(fn nth-el [s n]\n  (loop [se s i 0]\n    (if (= i n)\n      (first se)\n      (recur (rest se) (inc i)))))","user":"5c7d5a0ce4b0d597f478caab"},{"problem":21,"code":"(fn [sqnce x] (first (nthrest sqnce x)))","user":"591ac8ece4b09b4ee5954bdd"},{"problem":21,"code":"(fn [x y] (second(take-nth y x)))","user":"598d746ae4b02b9968b84d23"},{"code":"#(loop [l %1 \n         i %2]\n  (if (zero? i)\n    (first l)\n    (recur \n       (rest l) \n       (- i 1))))","problem":21,"user":"531b8c27e4b08068f379ed90"},{"problem":21,"code":"#(loop [l %1 count %2] (if (= count 0) (first l) (recur (rest l) (dec count))))","user":"5cc77807e4b0ccb061962838"},{"code":"(fn [a b] (if (= b 0) (first a) (recur (rest a) (dec b))))","problem":21,"user":"4ebaa7d8535dfed6da9c6d68"},{"code":"(fn [sequence index]\n  (loop [s sequence i index]\n    (if (= i 0)\n        (first s)\n        (recur (rest s) (- i 1)))))","problem":21,"user":"4e94ea73535dbda64a6f6b2b"},{"problem":21,"code":"(fn nth-ele [l n]\n    (if (zero? n) \n       (first l)\n      (nth-ele (rest l) (- n 1) )  \n    ))","user":"5c3453fee4b0d62ef62d9f53"},{"code":"(fn [l,t]\n  (if (= t 0)\n     (first l)\n     (recur (rest l) (- t 1))))","problem":21,"user":"4fe0ba48e4b0dd6cd5ce362a"},{"code":"(fn [s, n] (loop [s s i 0] (if (= i n) (first s) (recur (rest s) (inc i)))))","problem":21,"user":"51e8d037e4b07cae92c04bf7"},{"code":"(fn getNth\n  [some_list n] \n  (cond \n   (= n 0) (first some_list)\n   :else (getNth (rest some_list) (- n 1))))","problem":21,"user":"5393653be4b0b51d73faaebc"},{"problem":21,"code":"(fn [elems ndx] \n  (get \n   \t(into [] elems) \n   \tndx))","user":"549aa638e4b0f3d1d8e70f70"},{"problem":21,"code":"(fn [coll index] (if(zero? index) (first coll) (recur (rest coll) (dec index))))","user":"5d40493ae4b05dd059a54364"},{"code":"(fn [v n] ((vec v) n))","problem":21,"user":"4e9646f2535dbda64a6f6b40"},{"problem":21,"code":"(fn \n  [s ind]\n  (get (vec s) ind)\n  )","user":"5ecbf452e4b016b56eae058b"},{"problem":21,"code":"(fn [current s desired]\n  (if (= current desired)\n    (first s)\n    (recur (inc current) (rest s) desired))) 0","user":"583b5eaae4b089d5ab817d6c"},{"code":"(fn add [x y] (first(loop [sq x cnt y] (if (zero? cnt) sq (recur (next sq) (dec cnt))))))","problem":21,"user":"4e721857535d5021c1a8965a"},{"problem":21,"code":"(fn helper [xs i] (if (= i 0) (first xs) (helper (rest xs) (- i 1))))","user":"6028365be4b0d5df2af22242"},{"code":"(fn [seq idx]\n  (cond (nil? seq) nil\n        (= idx 0) (first seq)\n        :else (recur (rest seq) (dec idx))))","problem":21,"user":"50acbd15e4b071b89ef26234"},{"problem":21,"code":"(fn n-elem [s n]\n  (letfn [(internal [s x]\n    (if (= x n) \n      (first s) \n      (internal (rest s ) (inc x))\n    )\n  )]\n  (internal s 0)\n ))","user":"55efbb2ae4b066087aa9453c"},{"problem":21,"code":"#(last (first (partition (inc %2) %)))","user":"564d3169e4b0284900eef67c"},{"problem":21,"code":"(fn f [x y] (if (= y 0) (first x) (f (rest x) (- y 1)) ))","user":"5868efdae4b0f14aab7c8896"},{"problem":21,"code":";; (fn [s n] (last (take (inc n) s)))\n\n\n(fn [s n]\n  (->> s\n       (take (inc n))\n       (last)))","user":"5892a5fde4b00487982d5228"},{"problem":21,"code":"(fn mnth [values place]\n  (if (= 0 place)\n    (first values)\n    (recur (rest values)\n           (dec place))))","user":"56a2777be4b0542e1f8d14bf"},{"code":"(fn my-nth [s i] (if (= i 0) (first s) (my-nth (rest s) (- i 1))))","problem":21,"user":"523c819ee4b07becd5be222a"},{"problem":21,"code":"(fn get-nth [x y]\n\t(if (zero? y) \n      \t(first x)\n      \t(get-nth (rest x) (dec y))))","user":"54c47642e4b045293a27f61d"},{"code":"(fn my-nth [sq index]\n  (when (and (not (empty? sq)) (>= index 0))\n    (if (= 0 index)\n      (first sq)\n      (my-nth (rest sq) (dec index)))))","problem":21,"user":"538d64cae4b0b51d73faae6d"},{"code":"(fn\n  [x n]\n  (.get x n))","problem":21,"user":"51d4331ce4b013d740b70ddc"},{"code":"(fn [coll n] (last(take (+ n 1) coll)))","problem":21,"user":"4ddeb916535d08e6dec9fdd9"},{"problem":21,"code":"(fn x [lst n]\n  (if (= n 0) (first lst)\n              (if (= (count lst) n) (first (next lst))\n                                    (x (rest lst) (- n 1)))))","user":"5bbbcecee4b0a20761a23611"},{"problem":21,"code":"(fn nthElement [n1, n2] \n  (if (= n2 0) \n    (first n1) \n    (nthElement (rest n1) (- n2 1))\n    ))","user":"55844125e4b05c286339e121"},{"code":"(fn abc [arr idx] (if (> idx 0) (abc (rest arr) (dec idx)) (first arr)))","problem":21,"user":"5162757ee4b03cfa3774b3fe"},{"problem":21,"code":"(fn [elements n]\n  (if (not (= n 0))\n    (recur (rest elements) (dec n))\n    (first elements)))","user":"57f10279e4b0bfb2137f5c00"},{"problem":21,"code":"(\n\tfn testfun [lis ele] \n  \t(\n     last (take (+ ele 1) lis)\n     )\n)","user":"548018e8e4b0c51c1f4d7333"},{"code":"(fn [col n]\n  (loop [col col i 0]\n    (if (= i n)\n      (first col)\n      (recur (rest col) (+ i 1)))))","problem":21,"user":"5166b716e4b060c690c1f4bf"},{"problem":21,"code":"(fn [seq n] (second (first (filter #(= (first %) n) (map-indexed vector seq)))))","user":"588d224ae4b00487982d516c"},{"problem":21,"code":"(fn [input n]\n  (if (= 0 n)\n    (first input)\n    (recur (rest input) (- n 1))))","user":"5a21d34ce4b0ff51aa4b32b9"},{"problem":21,"code":"(fn [liste number]\n  (last (take (inc number) liste)))","user":"5dee8835e4b093ff7172759a"},{"problem":21,"code":"(fn abc [s x](first (nthrest s x)))","user":"5b3ca9c9e4b02d533a91bbe3"},{"code":"(fn [s n]\n  (if (= 0 n)\n      (first s)\n      (recur (rest s) (dec n))))","problem":21,"user":"4e6a7ec2535d8ccf87e9feec"},{"problem":21,"code":"(fn[x n] (last(take(inc n) x)))","user":"58ce2a80e4b03c36ff7e589d"},{"problem":21,"code":"(fn [l, i] (first (nthrest l i)))","user":"539b66c6e4b0b51d73faaf1f"},{"code":"(fn nnth [lst n] (if (or (= lst '()) (= n 0))\n                      (first lst)\n                      (nnth (rest lst) (- n 1))))","problem":21,"user":"504e14dde4b078edc5f593c0"},{"code":"#(get (into [] %1) %2)","problem":21,"user":"4fe1597fe4b0dd6cd5ce3633"},{"problem":21,"code":"(fn nthE\n  [lst n]\n  (->>\n    (map-indexed list lst)\n    (remove #(not (= n (first %))))\n    (mapcat #(rest %))\n    (first)))","user":"57f81534e4b0d3187e900915"},{"code":"(fn [l n] (first(nthnext l n)))","problem":21,"user":"5224cf82e4b01819a2de42ef"},{"code":"(fn nthel [alist n]\n  (if (>= 0 n)\n      (first alist)\n      (recur (rest alist) (- n 1))))","problem":21,"user":"4eb75bdf535d7eef30807375"},{"problem":21,"code":"(fn [coll n] (first (keep-indexed (fn [index item] \n                             (let [return (= index n)]\n                               (if (= true return) item nil))) coll)))","user":"59199cc3e4b09b4ee5954bc8"},{"code":"(fn [coll n]\n  (loop [coll coll n n]\n    (or (and (zero? n) (first coll))\n        (recur (rest coll) (dec n)))))","problem":21,"user":"50ba4b9ee4b03e68e4411c7b"},{"code":"(fn [coll n]  (loop [c coll i 0]\n    (if (= i n) (first c)\n      (recur (rest c) (inc i))\n      )))","problem":21,"user":"538ca67be4b0b51d73faae60"},{"problem":21,"code":"(fn [lst nth_]\n  (loop [l lst\n         n 0]\n    (if (= n nth_)\n      (first l)\n      (recur (rest l) (inc n)))))","user":"56dc0628e4b0ea9b8538f814"},{"problem":21,"code":"#(loop [x %1 i %2] (if (= i 0) (first x) (recur (rest x) (dec i))))","user":"5964c614e4b069c0a1a19770"},{"code":"(fn [x y] (first (first (rest (split-at y x)))))","problem":21,"user":"51107e6ee4b04c71fce993f2"},{"problem":21,"code":"(fn [coll n]\n\t(last\n\t\t(take (+ n 1) coll)\n\t)\n)","user":"5e3b6ae9e4b01d43a70e8df4"},{"problem":21,"code":"(fn nt [x n]\n  (loop [li x in n]\n    (let [h (first li)]\n      (if (= in 0) h (recur (rest li) (dec in))))))","user":"577f9799e4b0d36ec5835e67"},{"code":"(fn [coll n]\n  (loop [c coll k n] (if (= k 0) (first c) (recur (rest c) (- k 1)))) \n)","problem":21,"user":"500933a6e4b046cdb195e074"},{"problem":21,"code":"#(loop [v %1, n %2] (if (zero? n) (first v) (recur (rest v) (dec n))))","user":"524bc937e4b09eba1c0223ee"},{"problem":21,"code":"(fn getnth [x, n]\n\t(if (= n 0)\n      \t(first x)\n  \t\t(getnth (rest x) (- n 1))))","user":"55228afbe4b0882d96d091a1"},{"code":"(fn [li n] (first (drop n li)))","problem":21,"user":"4f9aa2a6e4b0dcca54ed6d0c"},{"code":"(fn asdf [coll n] \n  (if (= n 0) \n    (first coll)\n    (recur (rest coll) (dec n))))","problem":21,"user":"4ecc4079535d23f0362276fa"},{"problem":21,"code":"(fn n\n  ([s elem] (n elem s 0))\n   ([elem se x] (if (= elem x)\n                  (first se)\n                  (n elem (rest se) (+ x 1))\n                  )\n     )\n    )","user":"57ffe094e4b0a837a8b30c2c"},{"code":"(fn nth_ek [items, idx] (if (zero? idx) (first items) (nth_ek (rest items) (dec idx))))","problem":21,"user":"52624348e4b03e8d9a4a707e"},{"code":"(fn nn [seq x] \n  (if (= 0 x) (first seq) (nn (rest seq) (dec x)))\n)","problem":21,"user":"50bf3015e4b0a6abc6550e5b"},{"code":"(fn my-nth [coll n]\n  (if (zero? n) (first coll) (my-nth (rest coll) (dec n))))","problem":21,"user":"504d0116e4b022602c20b089"},{"problem":21,"code":"(fn [collection position]\n  (if (= position 0)\n    (first collection)\n    (recur (rest collection) (dec position))))","user":"5b513bd4e4b02d533a91bcf2"},{"code":"(fn nthh [s n] (if (= n 0) (first s) (nthh (rest s) (- n 1))))","problem":21,"user":"5002ad40e4b0678c553fc42b"},{"problem":21,"code":"(fn [sek idx] (get (into [] sek) idx))","user":"5f4b6433e4b0102c75033953"},{"code":"(fn dog [col num](\n              first(drop num col)\n              ))","problem":21,"user":"51427a8be4b0b50abeb46b37"},{"problem":21,"code":"(fn [c n]\n  (let [h (first c)\n        t (rest c)] \n  (if (> n 0)\n    (recur t (- n 1))\n    h)))","user":"56407cdee4b08d4f616f5ee4"},{"problem":21,"code":"(fn nth_el [l n] (if (= n 0) (first l) (nth_el (rest l) (- n 1))))","user":"5f63684be4b02876ed9fd012"},{"problem":21,"code":"(fn [xs i]\n  (last (take (+ 1 i) xs)))","user":"5681fe64e4b0945ebc182a88"},{"problem":21,"code":"(fn [c i]\n  (loop [rc c ci i]\n    (if (= ci 0) \n      (first rc)\n      (recur (rest rc) (dec ci)))))","user":"55e6809ee4b050e68259b48a"},{"code":"(fn a [seq n]\n  (if (= n 0)\n    (first seq)\n    (recur (rest seq) (dec n))))","problem":21,"user":"52bf0de2e4b07a9af579232a"},{"code":"(fn [l n]\n  (loop [num n lst l]\n    (if (zero? num)\n      (first lst)\n     (recur (dec num) (rest lst)))))","problem":21,"user":"4ff8fb9ae4b0678c553fc3a4"},{"code":"(fn nthElement [listParam index] (if (zero? index) (first listParam) (nthElement (rest listParam) (dec index))))","problem":21,"user":"5118a9a3e4b046de85f62a4a"},{"code":"(fn [coll index]\n  (loop [i 0 c coll]\n    (if (= i index)\n      (first c)\n      (recur (+ i 1)\n             (rest c)))))","problem":21,"user":"52c4af71e4b0c2d177d620e1"},{"problem":21,"code":"(fn [x pos]\n  (loop [s x\n         i 0]\n    (if (= i pos)\n      (first s)\n      (recur (rest s) (inc i)))))","user":"58896e5ce4b0f1effa3b773e"},{"problem":21,"code":"(fn getN [l N] (if (= N 0) (first l) (getN (rest l) (- N 1) )) )","user":"5cca4b54e4b0ccb06196286d"},{"problem":21,"code":"(fn find_nth [sq n]\n  (loop [s sq i 0]\n    (if (= i n)\n      (first s)\n      (recur (rest s) (+ i 1))\n      )\n    )\n  )","user":"59f78b49e4b0ca45a743a30e"},{"problem":21,"code":"(fn myf [x, n]\n  (if (= n 0) (first x) (myf (rest x) (- n 1)))\n)","user":"573e2d54e4b05c31a32c0824"},{"problem":21,"code":"(fn get-nth [c i]\n  (loop [cnt 0 l c]\n    (if (== cnt i)\n      (first l)\n      (recur (inc cnt) (rest l)))))","user":"566a0845e4b04acd4f672e05"},{"problem":21,"code":"(fn [x i]\n  (if (= i 0)\n    (first x)\n    (recur (rest x) (dec i))))","user":"5537c1c4e4b09218d5f44fd0"},{"problem":21,"code":"(fn [coll idx]\n  (let [vv (into [] coll)]\n    (vv idx)))","user":"532f7e12e4b019098a6f8b4e"},{"code":"#(-> % vec (get %2))","problem":21,"user":"53075d82e4b02e82168697a1"},{"problem":21,"code":"(fn [s n]\n\t(get (vec s) n) \n)","user":"5991d2fae4b0866487ed0d68"},{"code":"(fn foo [x i] (\n   if (= i 0)\n   (first x)\n   (recur (rest x) (dec i)) )\n)","problem":21,"user":"4edc0c16535d10e5ff6f531f"},{"problem":21,"code":"(fn [vect n] (first (drop n vect)))","user":"5d63b06be4b0c9e5857d5025"},{"problem":21,"code":"(fn [xs n] \n  (if (= 0 n) \n      (first xs) \n      (recur (rest xs) (dec n))))","user":"56c26880e4b05cc29241ee81"},{"code":"(fn posit[tab pos](cond (= pos 0)(first tab) true (posit (rest tab)(- pos 1))))","problem":21,"user":"52e807b3e4b09f7907dd1490"},{"problem":21,"code":"(fn my-nth [items index]\n  (if (= index 0)\n    (first items)\n    (recur (rest items) (- index 1))))","user":"5d80f328e4b0915913b1d372"},{"problem":21,"code":"(fn [collection position]\n  (last (take (+ position 1) collection)))","user":"5dba063ee4b010eb3c36cd5c"},{"problem":21,"code":"(fn [li n]\n   (if (= n 0)\n     (first li)\n     (recur (rest li) (dec n))))","user":"5d770bc2e4b02e6b30c9352e"},{"code":"#(loop [c %1 x 0]\r\n    (if (= x %2)\r\n      (first c)\r\n      (recur (rest c) (inc x))\r\n      )\r\n  )","problem":21,"user":"4e6fb96c535d5021c1a89627"},{"problem":21,"code":"(fn mynth [l n]\n  (if\n    (zero? n) (first l)\n    (mynth (rest l) (- n 1))))","user":"5d83b9aae4b0915913b1d386"},{"problem":21,"code":"(fn xth [a, b] (if (zero? b) (first a) (xth (rest a) (dec b))))","user":"5bca2c71e4b07a9b28b100e7"},{"problem":21,"code":"(fn [list n] (loop [coll list iteration 0]\n                 \t\t(if (>= iteration n)\n                   \t\t\t(first coll)\n                   \t\t\t(recur (rest coll) (inc iteration)))))","user":"53e5736ce4b036ad0777e45a"},{"problem":21,"code":"(fn [s n]\n  (loop [s s i 0]\n    (if (= n i)\n      (first s)\n      (recur (rest s) (inc i)))))","user":"52a803cee4b0c58976d9ac26"},{"code":"(fn ne [coll, idx]\n    (loop [i 0, c coll]\n      (if (= i idx) (first c)\n        (recur (inc i) (next c))\n      )))","problem":21,"user":"4e1f60a6535d04ed9115e80b"},{"code":"(fn my-nth [seq n]\n  (if (= n 0)\n    (first seq)\n    (my-nth (rest seq) (dec n))))","problem":21,"user":"51377c10e4b04059df19f305"},{"code":"(fn new-nth [xs n]\n  (if (= n 0)\n    (first xs)\n    (new-nth (rest xs) (- n 1))))","problem":21,"user":"523c6451e4b07becd5be2222"},{"problem":21,"code":"(fn [list i] (last (take (+ 1 i) list)))","user":"550309b9e4b086ebe8a79c65"},{"code":"(fn [xs n]\n  (if (= 0 n) \n    (first xs)\n    (recur (rest xs) (- n 1))))","problem":21,"user":"4e4c238f535dc968683fc4dc"},{"problem":21,"code":"(fn [x y] (if (list? x)\n          (get (into [] x) y)\n          (get x y)))","user":"567f034be4b0feffd0d18eba"},{"problem":21,"code":"(fn\n   [coll index]\n   (if (zero? index)\n     (first coll)\n     (recur (rest coll) (dec index))))","user":"56cd110ee4b0ea9b8538f747"},{"code":"(fn [ls y] (last(take (+ y 1) ls)))","problem":21,"user":"50e13ef3e4b084616e11c669"},{"code":"(fn f [s i]\n  (if (= 0 i)\n    (first s)\n    (f (rest s) (dec i))))","problem":21,"user":"508ee17ae4b0706b2ed3ef8d"},{"problem":21,"code":"(fn abc [x y] (if (zero? y) (first x) (abc (rest x) (dec y))))","user":"54bcab07e4b0ed20f4ff6ed5"},{"code":"(fn [collection n]\n  (if (zero? n)\n   (first collection)\n   (recur (rest collection) (- n 1))))","problem":21,"user":"5225f6abe4b0f4c7e20d29c6"},{"problem":21,"code":"(fn [elements index] (first (drop index elements)))","user":"5dc4719ae4b02f9375f4e1b5"},{"code":"(fn [xs n] \r\n     (loop [i 1\r\n       xs xs]\r\n       (if (> i n)\r\n         (first xs)\r\n         (recur (inc i) (rest xs)))))","problem":21,"user":"4f7c7ed7e4b06e829148e1b4"},{"problem":21,"code":"(fn [lst n] \n  (first(drop n lst)))","user":"5a99c5a9e4b0d174b936c7b1"},{"problem":21,"code":"(fn [ar n]\n  (if (= n 0)\n    (first ar)\n    (recur (rest ar) (dec n))))","user":"57bfffc7e4b05aa3c4741c8a"},{"problem":21,"code":"(fn theNth [col index] \n(first (drop index col))  \n )","user":"56153b39e4b05f002753dfc4"},{"code":"(fn xth [the-list n] \n\t(if (= 0 n) \n      (first the-list) \n      (xth (rest the-list) (- n 1))\n\t)\n)","problem":21,"user":"51701a9ce4b034fe8eaf70f5"},{"problem":21,"code":"(fn nthE \n  [el i]\n  (last (take (inc i) el)))","user":"5ea3711ae4b00a66d4a9519d"},{"problem":21,"code":"(fn [x n]\n  (cond\n    (= n 0) (first x)\n    :else (recur (rest x) (dec n))))","user":"5c0a400ee4b0bdcf453d1700"},{"problem":21,"code":"(fn [seq n]\r\n  (loop [seq seq\r\n         n n]\r\n    (if (= n 0)\r\n      (first seq)\r\n      (recur (rest seq) (- n 1)))))","user":"546e1142e4b00cfc9eacc199"},{"problem":21,"code":"(fn item-at-position [list-numbers position]\n    (if (= 0 position)\n      (first list-numbers)\n      (recur (rest list-numbers) (dec position))))","user":"57042a94e4b0b0fb43fd0660"},{"code":"#_(fn [x, n] (if (= 0 n) (first x) (recur (rest x) (- n 1))))\n(fn [x n] (first (drop n x)))","problem":21,"user":"4e0bb9fb535d04ed9115e7b2"},{"code":"(fn [s pos]\n  (if (zero? pos)\n    (first s)\n    (recur (rest s) (dec pos))))","problem":21,"user":"4ed68752535d10e5ff6f52e2"},{"code":"(fn mynth [xs n] (if (= n 0) (first xs) (mynth (rest xs) (- n 1) ) ) )","problem":21,"user":"4f0d6686535d0136e6c22318"},{"code":"(fn [lst,idx] (last (take (+ idx 1) lst)))","problem":21,"user":"53882352e4b0640c7a9a5898"},{"code":"(fn [col n]\n  (if (= n 0)\n      (first col)\n      (recur (next col) (- n 1))))","problem":21,"user":"50a6b5e8e4b0aa96157e262a"},{"code":"(fn myn [l,n]\n    (if (= 0 n)\n        (first l)\n        (myn (rest l) (- n 1))))","problem":21,"user":"4f85ef29e4b033992c121c4d"},{"problem":21,"code":"(fn [c i] (->> c (drop i) first))","user":"5a4de614e4b05d388ecb6bb1"},{"problem":21,"code":"(fn [x y]\n  (if (= 0 y)\n    (first x)\n    (do\n     (print x)\n     (recur (rest x) (dec y)))))","user":"5a9c7174e4b0d174b936c7d8"},{"code":"(fn [s n]\n  (if-not (= n 0)\n    (recur (next s) (- n 1))\n    (first s)))","problem":21,"user":"53308604e4b019098a6f8b5f"},{"code":"(fn [x y] (first (nthrest x y)))","problem":21,"user":"50182f53e4b02f523d7cc5ec"},{"code":"(fn [xs n]\n  (if (= 0 n)\n  (first xs)\n  (recur (rest xs) (- n 1))))","problem":21,"user":"5052ab7ee4b0a561d07d8f20"},{"problem":21,"code":"(fn [x y] (if (zero? y) (first x) (recur (rest x) (- y 1))))","user":"58dec7e8e4b0a4d5acaab6ff"},{"code":"(fn [s i]\r\n  (if (zero? i)\r\n    (first s)\r\n    (recur (next s) (dec i))))","problem":21,"user":"4e049a06535d04ed9115e7a0"},{"problem":21,"code":"(fn tstNth [l p] \n  (if (= 0 p)\n    (first l)\n    (tstNth (next l) (dec p))\n  )\n)","user":"57341373e4b0cd1946bd1002"},{"problem":21,"code":"(fn [xs index]\n  (loop [indicesLeft index\n        sequ xs] \n    (if (= indicesLeft 0)\n      (first sequ)\n      (recur (- indicesLeft 1) (rest sequ)))))","user":"543c1b6fe4b032a45b86933c"},{"code":"(comp first reverse (fn [x y] (take (+ y 1) x) ))","problem":21,"user":"4ec6a616535d6d7199dd36d2"},{"code":"(fn get-nth [lst_part n]\n  (if (> n 0)\n      (get-nth (rest lst_part) (- n 1))\n      (first lst_part)))","problem":21,"user":"505f55d3e4b08f2a82ad10b0"},{"code":"(fn myfn [s1 n1]\n\t(\n    reduce (fn [x y]\n        (if y (first x) (rest x)\n        )\n         ) s1 (concat (repeat n1 false) [true])\n    )\n)","problem":21,"user":"525ba7bbe4b0cb4875a45d28"},{"code":"(fn [coll i]\n  (peek\n   (first\n    (filter #(= i (first %))\n            (keep-indexed #(vec [%1 %2])\n                          coll)))))","problem":21,"user":"5398123ee4b0b51d73faaef3"},{"problem":21,"code":"(fn mynth \n  [coll n]\n  (if (or (zero? (count coll)) (< n 0))\n    nil)\n  (if (zero? n)\n    (first coll)\n    (mynth (next coll) (- n 1))))","user":"5971a017e4b01722bebd4c75"},{"problem":21,"code":"(fn nthRet [in n]\n  ( first (drop n in)  )\n  )","user":"5b107263e4b0cc2b61a3be22"},{"code":"(fn fun2 [x k](\n                 if (= (count x) (+ k 1))\n                 (last x)\n                 (fun2 (take (- (count x) 1) x) k)\n                 )  \n )","problem":21,"user":"52132f8de4b0d32679a50651"},{"code":"(fn ith [c i]\n  (if (> i 0)\n    (ith (rest c) (dec i))\n    (first c)\n  )\n)","problem":21,"user":"532103abe4b09d4e7a9b54ab"},{"code":"(fn my-nth [ls i]\n  (if (= i 0)\n    (first ls)\n    (my-nth (rest ls) (dec i))))","problem":21,"user":"53526570e4b084c2834f4aef"},{"code":"(fn [x n] (last (take (inc n) x)))","problem":21,"user":"4e3000c8535deb9a81d77f13"},{"code":"(fn [x n] (first (nthnext x n)))","problem":21,"user":"4e3aec24535deb9a81d77f4f"},{"problem":21,"code":"(fn [sequ num]\n  (loop [n num remaining sequ]\n    (if (zero? n)\n      (first remaining)\n      (recur (dec n) (rest remaining)\n             )\n      )\n    )\n  )","user":"591d320ee4b09b4ee5954c12"},{"problem":21,"code":"(fn [x n] (if (= 0 n)\n          (first x)\n          (recur (rest x) (dec n))))","user":"5615326de4b05f002753dfc3"},{"problem":21,"code":"(fn [xs idx]\n  (if (= idx 0)\n    (first xs)\n    (recur (rest xs) (dec idx))))","user":"594c2950e4b07ddc2dafae5c"},{"code":"(fn rec [x c] (let [n (- c 1)] \n                (if (= -1 n) (first x)  \n                (rec (rest x) n))))","problem":21,"user":"52ab61f5e4b0c58976d9ac75"},{"code":"(fn [s n] (if (= n 0) (first s) (recur (rest s) (- n 1))))","problem":21,"user":"4f038017535dcb61093f6afa"},{"code":"(fn atIndex [coll index]\n  (last (take (+ index 1) coll))\n)","problem":21,"user":"504f3fa3e4b0a02f9cffde62"},{"problem":21,"code":"(fn [myseq index]\n  (first(nthnext myseq index)))","user":"590f283de4b047aa04b19a35"},{"code":"(fn nth* [l n]\n  (if (= n 0) (first l)\n         (nth* (rest l) (dec n))))","problem":21,"user":"4f04a06d535dcb61093f6bd9"},{"problem":21,"code":"(fn\n  [llista pos]\n  (if (= 0 pos)\n    (first llista)\n    (recur (rest llista) (dec pos))))","user":"5485da80e4b0e286459a11b4"},{"problem":21,"code":";; original\n;;(fn [coll n]\n;;  (let [enthr (fn [coll-rest i] \n;;    (if (= i n) (first coll-rest)\n;;      (recur (rest coll-rest) (inc i))))]\n;;    (enthr coll 0)))\n\n(fn [coll n]\n  (if (= n 0)\n    (first coll)\n    (recur (rest coll) (dec n))))\n\n;; --\n\n;;#((vec %) %2)\n\n;; #(first (drop %2 %))\n\n\n;; #(->> % (drop %2) (first))","user":"60ad1b70e4b00e9e6653c48d"},{"code":"(fn [s n]\n    (first\n        (drop n s)))","problem":21,"user":"4e55ea0c535d8a8b8723a281"},{"code":"(fn [coll i] \n  (last (take (+ i 1) coll)))","problem":21,"user":"526a264be4b03e8d9a4a7214"},{"code":"(fn [coll n]\n  (if (pos? n)\n    (recur (rest coll) (- n 1))\n    (first coll)))","problem":21,"user":"4daf29b1edd6309eace4d172"},{"code":"#(loop [x %1 i 0]\n  (if (= i %2)\n    (first x)\n    (recur (rest x) (inc i))))","problem":21,"user":"50a5f72fe4b0aa96157e2611"},{"problem":21,"code":"(fn elt [x ct]\n  (loop [sx x counter ct]\n    (if (zero? counter)\n      (first sx)\n      (recur (rest sx) (dec counter)))))","user":"5bfa25fbe4b0bdcf453d15c8"},{"problem":21,"code":"#(loop [s %1 \n        i %2]\n   (if (= 0 i)\n     (first s)\n     (recur (rest s) (dec i))));endloop","user":"5765c7bbe4b0a07e8fc18096"},{"problem":21,"code":"(fn my-nth [a-sequence n]\n  (if (zero? n)\n    (first a-sequence)\n    (my-nth (rest a-sequence) (dec n))))","user":"5a2d7f36e4b09cafd31c7f6e"},{"code":"(fn elem [x n] (if (or (empty? x) (= n 0)) (first x) (elem (next x) (- n 1))))","problem":21,"user":"537f8e7be4b06839e8705eb8"},{"code":"(fn func [x y] (if (= y 0) (first x)(func (rest x) (- y 1))))","problem":21,"user":"4f4aa932e4b0d56e7bb92c14"},{"problem":21,"code":"(fn nth-one\n         [x n]\n         (if (= 0 n)\n           (first x)\n           (nth-one (rest x) (- n 1))))","user":"5dc64aafe4b02f9375f4e1c2"},{"problem":21,"code":"(fn [list n] (first (second (split-at n list))))","user":"55b4fa46e4b01b9910ae2983"},{"problem":21,"code":"(fn\n  [sek n]\n  (last\n   (take (inc n) sek)))","user":"5479164ae4b0c51c1f4d72c3"},{"code":"(fn this [ls n] \n  (if (= n 0)\n        (first ls)\n        (this (rest ls) (dec n))))","problem":21,"user":"4ffdca56e4b0678c553fc3e9"},{"code":"(fn [in_list, n]\n  (if (= 0 n) \n    (first in_list)\n    (recur (rest in_list) (dec n))))","problem":21,"user":"4fe5f342e4b0e8f79898fecb"},{"problem":21,"code":"(fn [s n] \n  (if (= 0 n) \n    (first s)\n    (recur (rest s) (dec n))\n  )\n)","user":"5cc1584de4b0ccb0619627ad"},{"problem":21,"code":"(fn get-n [coll idx]\n (first (drop idx coll)))","user":"5a23503fe4b0ff51aa4b32d6"},{"problem":21,"code":"(fn [the-list the-index]\n (loop [l the-list i the-index]\n   (if (= i 0)\n     (first l)\n     (recur (rest l) (dec i))\n     )\n   ))","user":"56747b46e4b05957ce8c613b"},{"problem":21,"code":"(fn mth [s i]\n  (if (= 0 i)\n    (first s)\n    (mth (rest s) (dec i))))","user":"594edde7e4b07ddc2dafaebe"},{"problem":21,"code":"(fn red3 [sq item_index]\n\t(if (= item_index 0)\n\t\t(first sq)\n\t\t(red3 (rest sq) (dec item_index))))","user":"4f1b73a9535d64f60314647a"},{"code":"(fn [x i]\n  (if (> i 0)\n    (recur (rest x) (dec i))\n    (first x)))","problem":21,"user":"4f6e7073e4b07046d9f4efd8"},{"problem":21,"code":"(fn my-nth [col i] (if (zero? i) (first col) (my-nth (rest col) (- i 1))))","user":"54ac5ad7e4b09f271ff37cd6"},{"problem":21,"code":"(fn [alist n]\n  (if (= n 0)\n    (first alist)\n    (recur (next alist) (- n 1))))","user":"5705e404e4b0b0fb43fd0676"},{"problem":21,"code":"(fn n-th [x y] (if (> y 0) (n-th (rest x) (dec y)) (first x)))","user":"4f04081f535dcb61093f6b93"},{"problem":21,"code":"(fn [theList, index]\n    (loop [i 0 currentList theList]\n      (cond\n       (> i index) nil\n       (= i index) (first currentList)\n       :else (recur (inc i) (rest currentList)))))","user":"594c0bd7e4b07ddc2dafae56"},{"problem":21,"code":"(fn myfn [ls n] (\n    if (> n 0) (myfn (rest ls) (- n 1)) (first ls)\n))","user":"587df462e4b01531a375eb45"},{"code":"(fn [coll n] (first (last (take (inc n) (iterate rest coll)))))","problem":21,"user":"4e22b78b535d04ed9115e81e"},{"code":"(fn [coll index] (loop [i index c coll] (if (= 0 i) (first c) (recur (dec i) (rest c)))))","problem":21,"user":"52fb64b7e4b047fd55837009"},{"problem":21,"code":"(fn idx [lst n]\n  (if (zero? n)\n    (first lst)\n    (idx (rest lst) (- n 1))))","user":"572ee822e4b0cd1946bd0f91"},{"problem":21,"code":"#(loop [s (seq %1) n %2]\n   (if (= n 0)\n     (first s)\n     (recur (rest s) (dec n))))","user":"5e144bd5e4b0a047bd49f6e7"},{"code":"(fn [my-list my-index]\n(if (zero? my-index)\n(first my-list)\n(recur (rest my-list) (dec my-index))))","problem":21,"user":"4ea68edb535d7eef308072e6"},{"code":";(fn [seqence n] ((apply comp (cons first (repeat n rest)) seqence)))\n(fn [lst n] ((apply comp (cons first (repeat n rest))) lst))","problem":21,"user":"4e6eff83535d5021c1a89615"},{"problem":21,"code":"(fn my-fun [col n] \n  (if (= n 0) (first col)\n    (recur (next col) (dec n))))","user":"5578ba3ae4b05c286339e08c"},{"code":"(fn my-nth [s index]\n  (if (= 0 index)\n    (first s)\n    (my-nth (rest s) (- index 1))))","problem":21,"user":"4f03ebf7535dcb61093f6b7f"},{"code":"(fn n [seq index]\n\t(if (= index 0) \n\t\t(first seq)\n\t\t(n (rest seq)(- index 1))))","problem":21,"user":"51761580e4b085adf681d880"},{"problem":21,"code":"(fn[l at]((vec l)at))","user":"5534887ce4b09218d5f44f9f"},{"code":"#((fn nel [i c] (if (= i %2) (first c) (nel (+ i 1) (rest c)))) 0 %1)","problem":21,"user":"4ef57a7f535dced4c769f246"},{"problem":21,"code":"(fn [coll ind] ((vec coll) ind))","user":"53f6bfd9e4b0db01ade6f9e4"},{"problem":21,"code":"(fn [s n]\r\n  (-> (drop n s) first))","user":"5ca20d5ce4b048ec896c5b8e"},{"problem":21,"code":"#(loop [acc 0 coll %1 n %2]\r\n  (if (= acc n) (first coll) (recur (+ acc 1) (rest coll) n))  \r\n)","user":"56b12c53e4b0982f16b37de6"},{"problem":21,"code":"(fn func [v i]\n  (if (= i 0)\n    (first v)\n    (func (rest v)(- i 1))))","user":"58c1cdc9e4b021aa9917ed05"},{"code":"(fn fnth [sequ ind]\r\n   (if (= ind 0)\r\n      (first sequ)\r\n      (fnth (rest sequ) (- ind 1))))","problem":21,"user":"4ed6c35e535d10e5ff6f52e8"},{"problem":21,"code":"(fn [x y] (->> x (take (+ y 1)) (last)))","user":"594b3459e4b07ddc2dafae23"},{"code":"(fn [xs n] (first (nthnext xs n)))","problem":21,"user":"4ddabc33535d02782fcbe9f5"},{"problem":21,"code":"( fn [ x y ] ( first( drop y x ) ) )","user":"56098003e4b0053d1b86c7e0"},{"code":"(fn my-nth [seq n]\n            (if (= n 0)\n                (first seq)\n                (my-nth (rest seq) (- n 1))))","problem":21,"user":"4feb055ae4b0140c20fb9c14"},{"code":"(fn getnth [col n]\n  (if (= n 0)\n    (first col)\n    (getnth (rest col) (dec n))\n    )\n  )","problem":21,"user":"526ee63de4b03e8d9a4a733f"},{"problem":21,"code":"(fn [coll idx]\n  (loop [s (seq coll)\n             cnt idx]\n    (if (zero? cnt)\n      (first s)\n      (recur (rest s) (- cnt 1)))))","user":"607152b8e4b069485764de2d"},{"problem":21,"code":"(fn [l i]\n  (if (zero? i)\n    (first l)\n  \t(recur (rest l) (dec i))\n  )\n)","user":"55990d3ce4b031d6649c9ba3"},{"code":"(fn[x y](last (take (inc y) x)))","problem":21,"user":"534d639ae4b084c2834f4a9e"},{"code":"(fn my-nth [seq index]\n  (if (= 0 index)\n    (first seq)\n    (my-nth (rest seq) (- index 1))))","problem":21,"user":"4fc580cfe4b0ee37620e17f7"},{"code":"(fn f [a i] (if (= i 0)\n  (first a)\n  (f (rest a) (- i 1))))","problem":21,"user":"4e2a34c6535deb9a81d77f00"},{"code":"(fn nh [x, y] (last (take (+ y 1) x)))","problem":21,"user":"5034b623e4b062bc5d7ae168"},{"problem":21,"code":"(fn [% n] (first(nthrest % n)))","user":"54802bd1e4b0e286459a1157"},{"problem":21,"code":"(fn [l e] (first (drop e l)))","user":"5471268ae4b094393f72dd68"},{"problem":21,"code":"(fn [in-list i] (last (take (inc i) in-list)))","user":"5a182c9de4b0ff51aa4b31e0"},{"problem":21,"code":"(fn [coll index]\n  (if (= index 0)\n    (first coll)\n    (recur (rest coll) (dec index))))\n\n\n#_(fn [coll index] (first (drop index coll)))","user":"608256d7e4b0736b099e42da"},{"problem":21,"code":"(fn [s n] \n           (loop [cnt n frst (first s) rst (rest s)] \n             (if (= cnt 0) \n               frst\n               (recur (dec cnt)\n                      (first rst)\n                      (rest rst)))))","user":"5599cc64e4b031d6649c9bb3"},{"problem":21,"code":"(fn [s i] (\n       if (not= 0 i)\n\t\t\t(recur (next s ) (- i 1))\n\t\t\t(first s)\n       )\n  )","user":"59005094e4b0438e51c2d01e"},{"problem":21,"code":"(fn [iseq n]\n  (loop [l iseq idx 0]\n    (if (= idx n)\n      (first l)\n      (recur (rest l) (inc idx)))))","user":"54d5343fe4b0a52adc2e200a"},{"code":"(fn [a b] ((fn mynth [l n c] (if (= n c) (first l) (mynth (rest l) n (+ c 1)))) a b 0))","problem":21,"user":"535376a7e4b084c2834f4b01"},{"problem":21,"code":"(fn myNth [col index] \n  (if (= index 0) \n    (first col) \n    (myNth (rest col) (- index 1))))","user":"56432916e4b08d4f616f5f22"},{"code":";;(fn [xs c] (if (= 0 c) (first xs) (recur (rest xs) (dec c))))\n\n#((vec %) %2)","problem":21,"user":"535aba96e4b04ce2eb3ed2a8"},{"problem":21,"code":"(fn [x, n]\n  (if (= 0 n)\n    (first x)\n    (recur (rest x) (dec n))))","user":"54e57397e4b024c67c0cf7fc"},{"code":"(fn [list index] (cond (> index 0) (recur (rest list) (dec index))\n                  :else (first list)))","problem":21,"user":"4e0e648a535d04ed9115e7ba"},{"problem":21,"code":"(fn [x y] (first (drop y x )))","user":"5f80ea23e4b0c071e6c840eb"},{"code":"(fn temp [l n]\n    (if (= n 0)\n        (first l)\n        (temp (rest l) (- n 1))))","problem":21,"user":"504e3afae4b0f6ff3350c488"},{"code":"(fn [sq i]\n  (last (take (+ 1 i) sq)))","problem":21,"user":"4edffe54535d10e5ff6f5347"},{"code":"(fn [lst pos] (loop [l lst p pos]\n    (if (zero? p)\n      (first l)\n      (recur (rest l) (dec p)))))","problem":21,"user":"53069e16e4b02e8216869798"},{"problem":21,"code":"(fn [xs n]\n  (loop [s xs, n n]\n    (if (= n 0)\n      (first s)\n      (recur (rest s) (- n 1)))))","user":"577abecfe4b0d3393e5deb06"},{"problem":21,"code":"(fn [my-seq n]\n  (if (zero? n)\n  (first my-seq)\n  (recur (rest my-seq) (dec n))))","user":"57a1478ae4b0c3d858beb8e5"},{"code":"#(loop [elements %1\n        elem-count 0]\n  (if (= elem-count %2)\n    (first elements)\n    (recur (rest elements) (+ elem-count 1))))","problem":21,"user":"523288fee4b035af41902a88"},{"problem":21,"code":"(fn [coll n]\n  (if (zero? n)\n    (first coll)\n  \t(recur (rest coll) (- n 1))\n  )\n)","user":"59259efbe4b072a2710fce79"},{"code":"(fn [a b] (first (drop b a) ) )","problem":21,"user":"52fe1b61e4b047fd55837035"},{"problem":21,"code":"(fn[l i](last(take (+ i 1) l)))","user":"5e1ec8c0e4b0dc9594008561"},{"problem":21,"code":"(fn pls [coll n]\n  (if (zero? n)\n    (first coll)\n    (pls\n      (rest coll)\n      (dec n))))","user":"55e2c484e4b050e68259b439"},{"code":"(fn [coll n]\n  (if (= n 0)\n    (first coll)\n    (recur (rest coll) (dec n))))","problem":21,"user":"4efb5508535dced4c769f276"},{"code":"(fn [x y] (  #(.get x y)))","problem":21,"user":"52447ff4e4b0d8acf9ed6aa4"},{"problem":21,"code":"(fn nnum [xs i]\n  (if (= i 0)\n    (first xs)\n    (recur (rest xs) (- i 1))))","user":"569ce7e6e4b0542e1f8d146d"},{"code":"(fn mynth [l n]\n  (if (= 0 n) (first l)\n    (mynth (rest l) (- n 1))))","problem":21,"user":"4e2d84bf535deb9a81d77f09"},{"problem":21,"code":"#(-> (vec %1)\n   (get %2))","user":"57fedde8e4b0d3187e9009db"},{"problem":21,"code":"(fn [or-seq n]\n  (loop [seq or-seq\n         i 0]\n    (cond\n     (empty? seq) nil\n     (= i n) (first seq)\n     :else (recur (rest seq) (inc i)))))","user":"5c422f66e4b08cd430848ed3"},{"problem":21,"code":"(fn [x s] (last(take (inc s) x)))","user":"5e807941e4b085ba37836e45"},{"code":"(fn [x n] (first (loop [i n c x] (if (= 0 i) c (recur (- i 1) (rest c))))))","problem":21,"user":"4e756736535d7a570dd295c2"},{"problem":21,"code":"(fn takenth [sq n]\n  (first (take 1 (reverse (take (+ 1 n) sq)))))","user":"5cae5247e4b026601754b884"},{"code":"(fn [x, n] (first (nthrest x n)))","problem":21,"user":"50d8bbace4b01f0871336e6f"},{"problem":21,"code":"(fn [s n]\n  (loop [remainder s i 0]\n    (if (= i n)\n        (first remainder)\n        (recur  (rest remainder) (inc i)))))","user":"58606948e4b0f14aab7c87d5"},{"problem":21,"code":"(fn [lst n] \n  (loop [k n lst lst]\n    (if (= k 0)\n      (first lst)\n      (recur (dec k) (rest lst)))))","user":"57d9f603e4b0bd073c20240a"},{"problem":21,"code":"(fn  ra [param n]\n\n         ( if (> n 0)\n\n            (ra  (rest param) (- n 1))\n\n            (first param)))","user":"581a5fdbe4b0e114eb51a002"},{"problem":21,"code":"(fn [l i]\n  (let [v (first l)] \n    (if (= i 0) \n      v\n      (recur (rest l) (dec i) ))))","user":"56d8fa43e4b0ea9b8538f7ec"},{"problem":21,"code":"(fn [lst n]\n  (loop [newlst lst]\n    (if (= (count newlst) (- (count lst) n))\n      (first newlst)\n      (recur (rest newlst))\n      )\n    )\n  )","user":"5fc5279ce4b0d6fcd95b7c68"},{"problem":21,"code":"(fn\n  [s idx]\n  (loop [l s\n         n idx]\n    (cond\n     (empty? l) nil\n     (= 0 n) (first l)\n     :else (recur (rest l) (- n 1)))))","user":"562fb774e4b0ab312c17ebd9"},{"problem":21,"code":"#(get (into {} (map vector (iterate inc 0) %1)) %2)","user":"544ac9b5e4b0e39780006959"},{"problem":21,"code":"(fn [vs n]\n  (if (zero? n)\n    (when (seq vs)\n      (first vs))\n    (recur (next vs) (dec n))))","user":"57acb156e4b0b8559636fc8d"},{"code":"(fn [li n] (if (zero? n) (first li) (recur (rest li) (- n 1))))","problem":21,"user":"524de28ae4b0541d1855b7c0"},{"problem":21,"code":"(fn [s n] (loop [xs s i 0]\n            (if (= i n)\n              (first xs)\n              (recur (rest xs) (inc i)))))","user":"55009d17e4b07d26eda61d5d"},{"problem":21,"code":"(fn [elems pos] (get (vec elems) pos))","user":"56e93576e4b04a395b9a03f6"},{"problem":21,"code":"(fn [list index]\n  (loop [remaining index result list]\n    (if (zero? remaining)\n        (first result)\n      (recur (dec remaining) (rest result)))))","user":"58fb87efe4b0438e51c2cf7b"},{"problem":21,"code":"(fn [x n]\n  (first (drop n x))\n  )","user":"5f8330b8e4b01aacbe7a270f"},{"problem":21,"code":"#(get(into [] %1) %2)","user":"570fd28be4b09c608db70427"},{"problem":21,"code":"#(loop [v %1 n %2] (if (= n 0) (first v) (recur (rest v) (dec n))))","user":"58e7eba2e4b056aecfd47cdf"},{"problem":21,"code":"(fn nthElement [els n] (if (= n 0) (first els) (nthElement (rest els) (-  n 1))))","user":"56323712e4b0bfe05bf1179e"},{"code":"(fn [xs n] \n  (if (= n 0)\n    (first xs)\n    (recur (rest xs) (- n 1))\n  )\n)","problem":21,"user":"519b231ee4b0ac1b7dced6a2"},{"problem":21,"code":"(fn f [c n]\n  (if (= n 0)\n    (first c)\n    (f (rest c) (dec n))))","user":"583048d9e4b051871117c007"},{"code":"(fn [collection index] \n  (if (zero? index) \n    (first collection)\n    (recur (rest collection) (dec index))))","problem":21,"user":"52616198e4b03e8d9a4a705e"},{"problem":21,"code":"(fn getel[x n] (if (= n 0) (first x) (getel (drop 1 x) (- n 1))))","user":"575d26f0e4b02ea11479937b"},{"code":"#(first((split-at %2 %) 1))","problem":21,"user":"4ef4e5fa535dced4c769f242"},{"problem":21,"code":"(fn [a n]\n      (if (> n 0)\n        (recur (rest a) (dec n))\n        (first a)\n      )\n    )","user":"561bf12ce4b064ca9f4b168e"},{"problem":21,"code":"(fn [coll x] (last(take (+ x 1) coll)))","user":"57b3027fe4b0fbc9809a276c"},{"problem":21,"code":"(fn [arr indx]\n  (loop [iter 0 acc arr]\n    (if (= iter indx)\n      (first acc)\n      (recur (inc iter) (rest acc))))\n  )","user":"5d89f87de4b0915913b1d3c4"},{"problem":21,"code":"(fn [col, index]\n  (get (vec col) index)\n  )","user":"58fb381ae4b0438e51c2cf71"},{"problem":21,"code":"#(loop [l %1 c %2] (if (= c 0) (first l) (recur (rest l) (dec c))))","user":"539fa040e4b0ca733b97449f"},{"problem":21,"code":"(fn bar [mycoll n]\n  (if (zero? n)\n\t(first mycoll)\n  \t(bar (rest mycoll) (dec n))))","user":"547f49fae4b0c51c1f4d731b"},{"problem":21,"code":"(fn [coll ind] ((into (hash-map) (map-indexed (fn [i item] [i item]) coll)) ind))","user":"5a383581e4b001c08efc0c97"},{"problem":21,"code":"(fn get-nth [object position] (get (vec object) position))","user":"552689cfe4b0ffed3738f91e"},{"code":"(fn xth [s x] (if (= x 0) (first s) (xth (rest s) (- x 1))))","problem":21,"user":"50608d4ce4b07251188e4455"},{"code":"#(first (subvec (vec %1) %2 (+ %2 1)))","problem":21,"user":"4fba77fae4b081705acca2df"},{"problem":21,"code":"(fn [x, i]\n  (if\n    (= i 0)\n    (first x)\n    (recur (rest x) (- i 1))))","user":"5a292efde4b07f18be40aa77"},{"problem":21,"code":"(fn getlast [x y] (if (= y 0) (first x) (getlast (rest x) (- y 1))))","user":"5dbd86bce4b09f47823971bf"},{"code":"(fn [x y] (last (first (split-at (+ 1 y) x))))","problem":21,"user":"52fba50ce4b047fd5583700d"},{"problem":21,"code":"(fn my-nth\n    [coll x]\n    (if (<= x 0)\n        (first (vec coll))\n        (my-nth (subvec (vec coll) 1) (dec x))))","user":"56897829e4b0dcc4269f407e"},{"problem":21,"code":"(fn [arglist n] (.get arglist n))","user":"59b6f6d2e4b05c620303ca38"},{"code":"(fn my-nth [v n] (if (= n 0) (first v) (my-nth (rest v) (dec n))))","problem":21,"user":"524903e7e4b05ef8e38e640d"},{"code":"(fn [s i] (loop [nseq s n 0]\n           (if (= n i)\n             (first nseq)\n             (recur (rest nseq) (inc n))\n             )\n           ))","problem":21,"user":"51fb178ce4b0f1313d4689f9"},{"code":"(fn [s, n] (last (take (+ n 1) s)))","problem":21,"user":"5250b7a5e4b0541d1855b83e"},{"problem":21,"code":"(fn [col num]\n  (if (= 0 num)\n    (first col)\n    (recur (rest col) (dec num)))\n  )","user":"576d24ede4b0979f8965155b"},{"code":"(fn nt [sec n] \n  (if (> n 0)\n    (nt (rest sec) (- n 1))\n    (first sec)\n    )\n  )","problem":21,"user":"5194f482e4b05be8c43d2385"},{"problem":21,"code":"#(loop [sequen %1 val 0]\n   (if (= val %2)\n     (first sequen)\n     (recur (rest sequen) (inc val))\n   )\n )","user":"5a64ce4ee4b0512ff01cd9a6"},{"problem":21,"code":"(fn [map key] (last (first (select-keys (into [] map) [key]))))","user":"5a071cb2e4b01bb0ae8afdd8"},{"code":"(fn mynth [s n] (get (apply hash-map (interleave (range 0 (inc (count s))) s)) n))","problem":21,"user":"50813b88e4b09292fd669443"},{"code":"(fn [s,n] (last (take (+ n 1) s)))","problem":21,"user":"4e3a9e82535deb9a81d77f4b"},{"problem":21,"code":"(fn [list, pos] (last (take (+ pos 1) list)))","user":"5521e8cbe4b0882d96d0919b"},{"code":"(fn [v k] (last (take (inc k) v)))","problem":21,"user":"525c575be4b0cb4875a45d38"},{"problem":21,"code":"(fn [lst cnt] (loop [a-l lst n cnt]\n                                              (if (= 0 n) \n                                                (first a-l)\n                                                (recur (rest a-l) (dec n)))))","user":"5f86a98be4b0649ffcda4caa"},{"problem":21,"code":"(fn my-nth\n  ([s index] (my-nth s index 0))\n  ([s index acc]\n   (if (= acc index)\n     (first s)\n     (recur (rest s) index (+ acc 1)))))","user":"555ee545e4b0a2eb076a39bd"},{"code":"(fn [coll n]\n  (loop [new-coll coll nn n]\n    (if (= nn 0)\n      (first new-coll)\n      (recur (rest new-coll) (dec nn)))))","problem":21,"user":"5289bba9e4b0239c8a67ae69"},{"problem":21,"code":"(fn\n  [elems index]\n  (get (into [] elems) index))","user":"53de7484e4b0d874e779ae35"},{"code":"(fn [x y] (last (subvec (into [] x) 0 (+ y 1))))","problem":21,"user":"4f6f777de4b07046d9f4efe5"},{"code":"#(\n loop[ s %1, p %2 ](\n    if( = p 0 )\n      (first s)\n      ( recur (rest s) ( - p 1 ) )\n )\n)","problem":21,"user":"50bf7b72e4b0ffd967a66cc1"},{"problem":21,"code":"(fn n-th [s i] (if(= i 0) (first s) (n-th (rest s) (dec i))))","user":"57eb7a97e4b0bfb2137f5b62"},{"code":"(fn [lst n]\n  (loop [l lst i 0]\n    (if (= i n)\n      (first l)\n      (recur (rest l) (inc i)))))","problem":21,"user":"53468f6ce4b084c2834f4a3f"},{"problem":21,"code":"(fn [arr, i] (first (loop [tarr arr ti i] (if (= ti 0) tarr (recur (next tarr) (- ti 1))))))","user":"57ed3e6be4b0bfb2137f5b96"},{"problem":21,"code":"(fn ans [col i]\n  (if (= 0 i) (first col) (ans (rest col) (- i 1))))","user":"58134ba8e4b0f478707a060b"},{"problem":21,"code":"(fn [list_nums n] (last (take (inc n) list_nums)))","user":"58d3d6a3e4b03c36ff7e592b"},{"problem":21,"code":"#(first ((apply comp (take %2 (repeat rest))) %1))","user":"5d9c1226e4b0d3f9b434ad51"},{"code":"(fn [ls, n] (first (drop n ls)))","problem":21,"user":"4ecc147b535d23f0362276f7"},{"problem":21,"code":"(fn elem [xs i] (if (zero? i) (first xs) (elem (rest xs) (dec i))))","user":"55e7fc2ce4b0121d4835fd86"},{"problem":21,"code":"(fn [coll n]\n  (if (= n 0) (first coll)\n    (recur (rest coll) (- n 1))\n    ))","user":"545eb56be4b01be26fd74682"},{"code":"(fn my-nth [s n]\n  (cond\n   (empty? s) nil\n   (= n 0) (first s)\n   :else (my-nth (rest s) (dec n))))","problem":21,"user":"5310e7aee4b08068f379ecdc"},{"code":"(fn my-nth [l n]\n  (if (= n 0)\n    (first l)\n    (my-nth (rest l) (- n 1))))","problem":21,"user":"51b76227e4b0d906fcd71d35"},{"problem":21,"code":"(fn[s n](first(drop n s)))","user":"53c0bc5fe4b00fb29b221257"},{"problem":21,"code":";; (fn [li n] (loop [x 0 l li ]  ( if (< x n)   (recur   (inc x) (rest l)                   )      (first l) ) )  )\n#(get (vec %1) %2)","user":"558ed227e4b0277789237658"},{"problem":21,"code":"(fn [s n]\n  (if (> n 0)\n    (recur (next s) (- n 1))\n    (first s)))","user":"5ee7b49de4b029a2061bbea6"},{"problem":21,"code":";(fn [l n]\n;  (cond (not (seq l)) []\n;        (= 0 n) (first l)\n;        :else (recur (next l) (dec n))))\n\n(fn [sq n]\n  (second \n   (reduce (fn [state v] \n            (if (zero? (first state))\n              state\n              [(dec (first state)) v])) \n           [(inc n) nil]\n           sq)))","user":"5547793be4b0a04f7929954c"},{"code":"(fn my-nth [coll index] (\n                      if (= index 0)\n                      (first coll)\n                      (my-nth (rest coll) (dec index))))","problem":21,"user":"525d44bfe4b0cb4875a45d6d"},{"problem":21,"code":"#((comp first reverse take)(inc %2) %1)","user":"5eb6d368e4b00a66d4a95237"},{"problem":21,"code":"(fn lst [x n] (if (zero? n) (first x) (lst (rest x) (dec n))))","user":"5888f271e4b0f1effa3b7726"},{"problem":21,"code":"(fn [x y] ((apply comp (cons first (repeat y rest))) x))","user":"59f4d0e0e4b0966464fe6ab9"},{"code":"(fn [sequence, count]\n  (if (= count 0) \n      (first sequence) \n      (recur (rest sequence) (dec count))))","problem":21,"user":"4eea4d84535d93acb0a6689c"},{"code":"(fn [col v]\n  (loop [cc col i v]\n    (if (= i 0)\n      (first cc)\n      (recur (rest cc) (- i 1)))))","problem":21,"user":"53077c67e4b02e82168697a4"},{"code":"(fn mynth [lst n]\n  (loop [cnt n acc lst]\n    (if (zero? cnt)\n      (first acc)\n      (recur (dec cnt) (rest acc)))))","problem":21,"user":"504766fde4b0371827a27bc1"},{"code":"(fn[cols index]\n    (loop [col cols count 0]\n      (if (= count index)\n        (first col)\n        (recur (rest col) (+ 1 count)))))","problem":21,"user":"50e6a086e4b0140bc92c0a8c"},{"problem":21,"code":"(fn [sq n]\n  ((fn [sq m]\n     (if (= m n) (first sq) (recur (rest sq) (+ m 1))) ) sq 0))","user":"555d7663e4b0a2eb076a39ab"},{"problem":21,"code":"(fn my-nth [ilist n]\n  (loop [n n\n         ilist ilist]\n    (if (zero? n)\n      (first ilist)\n      (recur (dec n) (rest ilist)))))","user":"5bf872e0e4b0bdcf453d15b7"},{"problem":21,"code":"(fn f [coll n]\n  (let [c (count coll)]\n  (cond (zero? n) (first coll)\n        :else (f (rest coll) (dec n)))))","user":"54d1b6ffe4b0e8a36923e5e6"},{"code":"#(loop [l %, n %2]\n       (if (zero? n)\n        (first l)\n        (recur (next l) (dec n))\n       ))","problem":21,"user":"538d73c1e4b0b51d73faae6f"},{"problem":21,"code":"(fn find-nth [coll n] \n  (if (= 0 n) (first coll) (find-nth (rest coll) (dec n)))\n)","user":"580d62b0e4b0849f6811b739"},{"code":"(fn [s n-] \n  (loop [n 0 is s]\n    (if (= n- n) (first is)\n      (recur (inc n) (rest is)))))","problem":21,"user":"4f038b62535dcb61093f6b1c"},{"code":"(fn [x t]\n  (if (zero? t)\n      (first x)\n      (recur (rest x) (- t 1))))","problem":21,"user":"4ff4f5c4e4b0678c553fc362"},{"problem":21,"code":"(fn [x i] (loop [index i v x] (if (zero? index) \n                              (first v)\n                              (recur (dec index) (rest v) ))))","user":"589c3123e4b00487982d5358"},{"code":"(fn x [v i]\n  (if (< 0 i)\n    (x (rest v) (- i 1))\n    (first v)\n  )\n)","problem":21,"user":"50c53708e4b08ad5e08ded0e"},{"problem":21,"code":"(fn [input elem-requested]\n    (if (= 0 elem-requested)\n        (first input)\n        (recur (drop 1 input) (dec elem-requested) )))","user":"55171140e4b06a49daca83be"},{"code":"(fn [xs n]\n      (if (= n 0)\n        (first xs)\n        (recur (rest xs) (- n 1))))","problem":21,"user":"4feaa579e4b0140c20fb9c0b"},{"problem":21,"code":"(fn [x n]\n  (loop [y x\n         i 0]\n    (if (= i n)\n      (first y)\n      (recur (rest y)\n             (inc i)))))","user":"56ab80f1e4b03c432f18733e"},{"problem":21,"code":"(fn nth-element\n  [listy n]\n\n  ((fn nth-impl [currentList m index]\n      (if (>= index m)\n        (first currentList)\n        (recur (rest currentList) m (inc index))))\n    listy n 0))","user":"556b67c9e4b09a3098a524ed"},{"code":"(fn [c n] (first (nthrest c n)))","problem":21,"user":"4e31a077535deb9a81d77f1c"},{"problem":21,"code":"(fn [s n] (loop [s (seq s) n n] (if (> n 0) (recur (rest s) (dec n)) (first s))))","user":"5c512811e4b0fb8c5ffd99c2"},{"code":"#(loop [s %1 n 0] (if (= n %2) (first s) (recur (next s) (+ 1 n))))","problem":21,"user":"524f3e6de4b0541d1855b805"},{"problem":21,"code":"(fn [l index]\n  (loop [l l idx index]\n  \t(if (zero? idx)\n  \t\t(first l)\n    \t(recur (rest l) (- idx 1))\n  \t)\n  )\n)","user":"4f0f0e33535d0136e6c2232e"},{"problem":21,"code":"(fn nth-element [coll n] (if (= n 0) (first coll) (nth-element (next coll) (- n 1))))","user":"5ceca436e4b0a17bb84e2bf8"},{"code":"#(first (drop %2 %1))","problem":21,"user":"4dd61f98535d2dad7130b5c6"},{"problem":21,"code":"(fn mynth [xs n]\n  (if (= 0 n)\n    (first xs)\n    (mynth (rest xs)\n         (- n 1))))","user":"572a35a9e4b0f4d77e65122f"},{"problem":21,"code":"(fn [collection index]\n      (if (zero? index)\n        (first collection)\n      (recur (rest collection) (- index 1))))","user":"564045a8e4b08d4f616f5edd"},{"problem":21,"code":"(fn mynth\n  ([s n] (mynth s n 0))\n  ([s n current] (if (= n current) (first s) (mynth (rest s) n (inc current)))))","user":"56393681e4b0bfe05bf117f2"},{"code":"(fn[y z] (first (drop z y)))","problem":21,"user":"50462089e4b011c5dfee771b"},{"code":"(fn f [coll n]\r\n  (first (nthnext coll n)))","problem":21,"user":"4e1e1576535d04ed9115e806"},{"problem":21,"code":"(fn[x y] \n  (if (zero? y)\n    (first x)\n    (recur (rest x) (dec y))\n    ))","user":"54f15cb8e4b024c67c0cf8b1"},{"code":"(fn this [l n]\n  (if (= n 0) (first l) (this (rest l) (- n 1))))","problem":21,"user":"502d3912e4b0d96a44ab2030"},{"code":"(fn [coll n] ((comp first drop) n coll))","problem":21,"user":"51c49398e4b06b70b3e207e4"},{"problem":21,"code":"(fn my_nth [pseq pn]\n  (first (drop pn pseq)))","user":"56dc3dbbe4b0ea9b8538f81a"},{"problem":21,"code":"(fn f[m j]\n  (loop [ r 0 s m]\n    (if (= r j) (first s)\n      (recur (inc r) (rest s)))))","user":"56fa8984e4b07572ad1a88c1"},{"problem":21,"code":"(fn [lst n]\n  (loop [lst lst\n         c 0]\n   (if (< c n) \n      (recur (rest lst) (inc c))\n      (first lst))))","user":"552fdf02e4b076ab5578f807"},{"code":"#(loop [l %1 n 0] (if (= n %2) (first l) (recur (rest l) (inc n))))","problem":21,"user":"4ec363e7535dcc7ae8597d55"},{"problem":21,"code":"(comp first (fn[a b](drop b a)))","user":"5f4314e0e4b0955706451fb4"},{"problem":21,"code":"(fn [col n]\n  (if (= n 0)\n  \t(first col)\n  \t(recur (rest col) (- n 1))))","user":"547f8e71e4b0c51c1f4d731f"},{"problem":21,"code":"(fn cit [xs p] (if (= p 0)(first xs)(cit (rest xs)(- p 1))))","user":"56686edce4b04acd4f672dea"},{"problem":21,"code":"(\n  fn [coll, ind]\n    (first (drop ind coll))                \n)","user":"57c7258ee4b05aa3c4741cfe"},{"problem":21,"code":"(fn f [xs n] (if (= n 0)\n                 (first xs)\n                 (f (rest xs) (- n 1))))","user":"59ee368ae4b0966464fe6a14"},{"problem":21,"code":"#(-> %2 (split-at %1) second first)","user":"53fb4843e4b0de5c4184857d"},{"problem":21,"code":"(fn [sqnc n]\n  (last (take (+ n 1) sqnc)))","user":"566f3e18e4b0a866af6896e7"},{"code":"(fn [x n] \n  (loop [y x, cnt 0]\n    (if (= cnt n) (first y)\n      (recur (rest y) (+ cnt 1)))))","problem":21,"user":"52a0fa82e4b04e0c58e87bd1"},{"code":"(fn [s k]\n  (if (= k 0)\n      (first s)\n   (recur (rest s) (- k 1))))","problem":21,"user":"4e6a73d0535d8ccf87e9fee7"},{"problem":21,"code":"(fn get-nth [coll n]\n    (if (zero? n)\n      (first coll)\n      (recur (rest coll) (- n 1))))","user":"59837909e4b021a7a535fe16"},{"code":"(fn [lst index] (loop [lst lst, index index] \n  (if (= index 0)\n    (first lst)\n    (recur (rest lst) (- index 1)))))","problem":21,"user":"4fae4c11e4b081705acca248"},{"problem":21,"code":"(fn get-nth [items index] (last (take (+ index 1) items)))","user":"54c0ce91e4b0ed20f4ff6f18"},{"problem":21,"code":"(fn sss [coll x] \n   (if (< x 1) \n     (first coll) \n     (sss \n       (rest coll) \n       (dec x ))))","user":"5e9ff8fbe4b00a66d4a95185"},{"problem":21,"code":"(fn my_nth [input n] (get (vec input) n) )","user":"56a72c0de4b0542e1f8d14f7"},{"code":"(fn [s n]\n     (if (= n 0)\n       (first s)\n       (recur (next s) (dec n))))","problem":21,"user":"4f359c7ee4b0e243712b1ec4"},{"code":"(fn [coll ind] (first (drop ind coll)))","problem":21,"user":"53032bfce4b0d8b024fd373a"},{"code":"(fn [s n]\n  (loop [s s a 0]\n    (if (= a n)\n      (first s)\n      (recur (rest s) (inc a)))))","problem":21,"user":"4dbdc9da535d020aff1edf4c"},{"problem":21,"code":"(fn [s i] (if (= 0 i) (first s) (recur (rest s) (- i 1))))","user":"587ad5aae4b01531a375eaf0"},{"problem":21,"code":"(fn [xs i]\n  (if (pos? i)\n    (recur (rest xs) (dec i))\n    (first xs)))\n\n; #(first(drop %2 %1))","user":"55f90d76e4b03cbcff9738bd"},{"code":"(fn [c i]\n  (if (= i 0)\n    (first c)\n    (recur (next c) (dec i))))","problem":21,"user":"523ed522e4b057c4b7cd0a78"},{"problem":21,"code":"#(loop [i 0\n        x %]\n   (if (= i %2)\n     (first x)\n     (recur (inc i)\n            (rest x))))\n\n;; Now that I know 'drop' exists: #(first (drop %2 %1))","user":"5d54af24e4b02ba5928a6809"},{"code":"(fn my-nth [seq nn]\n  (loop [s seq\n         n nn]\n    (if (= n 0)\n      (first s)\n      (recur (rest s) (dec n)))))","problem":21,"user":"513a37e0e4b067e25a345ec7"},{"problem":21,"code":"(fn [coll n] (last (take ( + n 1) coll)))","user":"53e241a6e4b036ad0777e3f0"},{"problem":21,"code":"(fn\n  [lst n]\n  (if (= n 0)\n    (first lst)\n    (recur (rest lst) (dec n))))","user":"5959c72ae4b066ee0a44afac"},{"code":"(fn [s n] (second (take-nth n s)))","problem":21,"user":"510b5596e4b078ea719210fd"},{"problem":21,"code":"(fn[coll index] (get (vec coll) index))","user":"55016428e4b07d26eda61d72"},{"problem":21,"code":"(fn nth-elem [l n]\n  (if (= n 0)\n    (first l)\n    (nth-elem (rest l) (dec n))))","user":"55845fb6e4b04192f3441eed"},{"problem":21,"code":"(fn [s n]\n  (loop[ls s i 0]\n    (if (= n i)\n      (first ls)\n      (recur (rest ls) (+ i 1)))))","user":"556405e5e4b0c656e3ff17fb"},{"problem":21,"code":"(fn [xs n] \n  (loop\n    [i 0 ys xs]\n    (if (= i n)\n      (first ys)\n      (recur (inc i) (rest ys)))))","user":"577a74f7e4b0d3393e5deafa"},{"code":"(fn [l n]\n  ((apply comp\n    (cons first\n      (take n (repeat rest)))) l))","problem":21,"user":"4e6ec6f6535d5021c1a89612"},{"code":"(fn e [l, i] (if (= i 0) (first l) (e (rest l) (- i 1))))","problem":21,"user":"4f0369fe535dcb61093f6ab2"},{"code":"(fn [x y]\n  (loop [answer x number y]\n    (cond\n      (= 0 number) (first answer)\n      :else (recur (rest answer) (- number 1)))))","problem":21,"user":"4e13c44a535d04ed9115e7db"},{"code":"(fn [coll n]\n  (if (= (count coll) (+ 1 n))\n      (last coll)\n      (recur (butlast coll) n)))","problem":21,"user":"5269c150e4b03e8d9a4a71f8"},{"problem":21,"code":"(fn [seq pos] (last(take (+ pos 1) seq)))","user":"56879ea4e4b0dcc4269f405f"},{"problem":21,"code":"(fn[data elem] ((vec data) elem))","user":"53d10553e4b00fb29b22130f"},{"problem":21,"code":"(fn[x y]\n  (get(into [] x) y)\n)","user":"5f3a8493e4b004f08c61c527"},{"code":"(fn [col index] (last (take (inc index) col)))","problem":21,"user":"531576b4e4b08068f379ed29"},{"problem":21,"code":"(fn posit[x n]\n  (if (= n 0)\n    (first x)\n    (posit (rest x) (dec n))))","user":"5bbbce70e4b0a20761a2360f"},{"problem":21,"code":"(fn [col key]\n  (->> col\n        vec\n       (reduce-kv #(if (and (nil? %1) (= %2 key)) %3 %1) nil)))","user":"5e67ab18e4b0e171e103368a"},{"code":"(fn [v n] (get (vec v) n))","problem":21,"user":"4fd0af0ee4b04c3a95aa0405"},{"problem":21,"code":"(fn  [x n] (if (= n 0) \n                 (first x)\n                 (recur (rest x) (- n 1))))","user":"56034f31e4b04bb52996e1b7"},{"code":"(fn [coll idx] (first (keep-indexed #(if (= idx %1) %2) coll)))","problem":21,"user":"5007f751e4b0b17c647f522b"},{"code":"(fn [l n]\n  (loop [ll l nn 0]\n    (if (= n nn) \n      (first ll)\n      (recur (next ll)(inc nn)))))","problem":21,"user":"53997239e4b0b51d73faaf07"},{"code":"(fn [x, n] (if (zero? n) (first x) (recur (rest x) (- n 1))))","problem":21,"user":"4fe8aba5e4b07c9f6fd12c68"},{"problem":21,"code":"#(loop [i %2 lst %1] (if (= i 0) (first lst) (recur (dec i) (rest lst))))","user":"51412b0ae4b0694e2952b79d"},{"problem":21,"code":"(fn [vals n] (last (take (inc n) vals)))","user":"5380a27ae4b06839e8705ec4"},{"problem":21,"code":"(fn [lst x] (get (vec lst) x))","user":"545db6e3e4b01be26fd74675"},{"problem":21,"code":"(fn nth-element [coll ind]\n    (loop [coll coll\n           ind ind]\n      (if ( = (= ind 0) false)\n        (recur (rest coll) (dec ind))\n        (first coll))))","user":"57f6bd5de4b0d3187e9008ee"},{"problem":21,"code":"(fn next [c i] (if (zero? i) (first c) (next (rest c) (- i 1))))","user":"589c12c2e4b00487982d5353"},{"problem":21,"code":"(fn [list number]\n\t(loop [l list n number]\n\t\t(if (zero? n)\n\t\t\t\t\t(first l)\n\t\t\t\t\t(recur (rest l) (dec n)))))","user":"5954cea2e4b066ee0a44af0a"},{"problem":21,"code":"(fn fun [xs n]\n  (first(drop n xs)))","user":"55f01316e4b06e875b46ce1a"},{"problem":21,"code":"(fn [l i] (-> (inc i)\n              (take l)\n              (last)))","user":"5fe5a64de4b05ac5b16ea187"},{"problem":21,"code":"(fn nth-el [coll n]\n  (if (= n 0)\n    (first coll)\n    (nth-el (rest coll) (- n 1))))","user":"57040195e4b08d47c9778202"},{"problem":21,"code":"(fn getn [s n] (if(= n 0)(first s) (recur (rest s) (- n 1))))","user":"55469eede4b0a04f79299542"},{"problem":21,"code":"(fn[a b] (first (drop b a)))","user":"5751bd1ce4b02ea11479928b"},{"problem":21,"code":"(fn  \n  [s n]\n  (loop [cur-seq s \n         step 0]   \n    (if (= step n)\n      (first cur-seq)\n      (recur (next cur-seq) (inc step))\n    )))","user":"56d1facee4b0ea9b8538f796"},{"code":"(fn nth2 [coll index] \n  (if (= index 0) \n    (first coll)\n    (nth2 (rest coll) (- index 1))\n  )\n)","problem":21,"user":"5069e8a5e4b01dc6af13f83a"},{"problem":21,"code":"(fn [l n] (if (= n 0)\n            (first l)\n            (recur (rest l) (dec n)\n                   )))","user":"56a9d4bbe4b07966d5a8a07b"},{"code":"#(loop [index %2, seqn %]\n   (if (>= 0 index)\n     (first seqn)\n     (recur (dec index) (next seqn))))","problem":21,"user":"512c0f84e4b03a42b6300232"},{"code":"(fn [a b]\n  (first (drop b a)))","problem":21,"user":"4fc4541ae4b081705acca348"},{"problem":21,"code":"(fn nth-elem \n  [val x]\n  (last \n   (take (inc x) \n         val)))","user":"5a99b861e4b0d174b936c7ad"},{"problem":21,"code":"(fn [x i] \n  (loop [c i x x] \n    (if (= c 0) \n      (first x) \n      (recur (- c 1) (rest x)))))","user":"5601a32ee4b04bb52996e193"},{"code":"(fn [x n] (if (> n 0) (recur (rest x) (dec n)) (first x)))","problem":21,"user":"4f0514b4535dcb61093f6bf0"},{"problem":21,"code":"(fn getN [someList n]\n  (if (= n 0)\n    (first someList)\n    (getN (rest someList) (- n 1))\n  )\n)","user":"5972198ee4b01722bebd4c7d"},{"code":"(fn [s i]\n  ((vec s) i))","problem":21,"user":"4f043663535dcb61093f6bb0"},{"problem":21,"code":"(fn [x s]\n  (if (zero? s)\n    (first x)\n    (recur (rest x) (dec s))))","user":"56bca51ae4b0f26550335963"},{"problem":21,"code":"(fn [lst n]\n  (when (< n (count lst))\n      (loop [rem lst\n             trav 0]\n        (cond\n          (= trav n) (first rem)\n          :else (recur (rest rem) (inc trav))))))","user":"5484c3b2e4b0e286459a11a2"},{"problem":21,"code":"(fn [x, y]\n  (get (into [] x) y))","user":"568a743ee4b0dcc4269f408e"},{"problem":21,"code":"(fn nthm [coll idx] (if (zero? idx) \n                      (first coll) \n                      (nthm (rest coll)(dec idx))\n                      )\n  )","user":"54413696e4b032a45b86936b"},{"code":"(fn nster [coll idx] (first (drop idx coll)))","problem":21,"user":"5231d8fae4b0e2e8de81d1fb"},{"code":"(fn xth [seq n]\r\n  (if (== n 0) \r\n    (first seq)\r\n    (xth (rest seq) (- n 1))))","problem":21,"user":"4e234588535d04ed9115e821"},{"problem":21,"code":"(fn [coll n]\n  (if (= n 0) (first coll) (recur (next coll) (dec n))))","user":"6042219ae4b04b4f332c3e72"},{"code":"(fn [seq n] (loop [s seq no 0] \n  (if (= no n) \n    (first s) \n    (recur (rest s) (inc no)))))","problem":21,"user":"4f284db6e4b0d6649770a014"},{"code":"#(loop [conju %1 index %2]\n    (if (zero? index)\n      (first conju)\n      (recur (rest conju) (- index 1))))","problem":21,"user":"534cef2de4b084c2834f4a96"},{"code":"(fn [x n] (last (map (fn [a b] a) x (repeat (+ n 1) \"\"))))","problem":21,"user":"52f89ac8e4b047fd55836fd7"},{"problem":21,"code":"(fn [x y] (last(take (inc y) x)))","user":"56ea8374e4b04a395b9a0404"},{"problem":21,"code":"(fn myn_th [coll idx] \n  (if (= idx 0) \n    (first coll) \n    (myn_th (rest coll) (- idx 1))))","user":"5797748ce4b039eba2ecb0fb"},{"code":"(fn [lst n]\n  (first (last (split-at n lst))))","problem":21,"user":"51d2ce2de4b099f3b6acddf2"},{"code":"(fn [x y] (loop [x x y y]\n            (if (= y 0)\n              (first x)\n              (recur (rest x) (- y 1)))))","problem":21,"user":"537310e0e4b06d7f452d9e07"},{"problem":21,"code":"(fn [arr i]\n  (if \n    (zero? i) (first arr)\n    (recur (rest arr) (dec i))\n    )\n  )","user":"5db2534de4b010eb3c36cd15"},{"code":"(fn [s n] (first (loop [x n, r s] \n  (if (> x 0) (recur (dec x) (rest r)) r))))","problem":21,"user":"4edf40d5535d10e5ff6f533f"},{"code":"(fn [col n] (first (nthnext col n)))","problem":21,"user":"4ea84250535d7eef308072f5"},{"problem":21,"code":"(fn my-nth [lst n]\n  (if (= n 0)\n    (first lst)\n    (my-nth (rest lst) (- n 1))))","user":"568c74d8e4b0dcc4269f40b5"},{"problem":21,"code":"(fn [x y]\n  (last (take (inc y) x))\n  )","user":"540e33dde4b0addc1aec671a"},{"problem":21,"code":"(fn [l, i] (first (drop i l)))","user":"55de8ef6e4b050e68259b3e4"},{"problem":21,"code":"(fn [s i]\n    (loop [seqeunce s index i]\n        (if (= index 0)\n            (first seqeunce)\n            (recur (rest seqeunce) (dec index))\n        )\n    )\n)","user":"57dd2c99e4b0bd073c20243c"},{"code":"(fn [xs n] (if (<= n 0) (first xs) (recur (rest xs) (dec n)) ))","problem":21,"user":"5204173be4b0fb7e47ea5216"},{"problem":21,"code":"(fn my_nth\n  [seq n]\n  (if (zero? n)\n    (first seq)\n    (my_nth (rest seq) (dec n)))\n  )","user":"5b959822e4b0c0b3ffbd4a6c"},{"code":"(fn\n  [xs n]\n  (if (zero? n)\n    (first xs)\n    (recur (rest xs) (dec n))))","problem":21,"user":"4f9acea6e4b0dcca54ed6d10"},{"problem":21,"code":"(fn findRecur [s n] \n  (if (= n 0) (first s) (recur (rest s) (- n 1))\n    )\n)","user":"5948117be4b07ddc2dafadae"},{"problem":21,"code":"(fn abc [y n]\n  \n (loop [x y m 0]\n  \n(if (== n m)\n(first x)\n(recur (rest x) (inc m) )))\n )","user":"526f670ce4b03e8d9a4a7365"},{"problem":21,"code":"(fn [xs x] (first (reverse (take (+ x 1) xs))))","user":"5af740b3e4b0cc2b61a3bcc1"},{"problem":21,"code":"(fn mynth\n  [xs n]\n  (if (= n 0)\n    (first xs)\n    (mynth (rest xs) \n           (- n 1))))","user":"59afe4bae4b0e1f4e384c8c0"},{"code":"#(loop [cur-index 0\n         ele (first %1)\n         cur-col %1]\n    (if (= %2 cur-index)\n      ele\n      (recur (inc cur-index)\n             (first (rest cur-col))\n             (rest cur-col))))","problem":21,"user":"516d2a46e4b06f078fab252f"},{"code":"(fn [coll n] (if (= n 0) (first coll) (recur (next coll) (dec n))))","problem":21,"user":"5150c09de4b03e678e393ac4"},{"problem":21,"code":"(fn [collection index]\n  (loop [todo collection x 0]\n    (let [rest (drop 1 todo) elem (first todo)]\n      (if (= x index) elem (recur rest (inc x))))))","user":"54b2d392e4b09f271ff37d2f"},{"problem":21,"code":"(fn [lst idx]\n  (if (zero? idx)\n    (first lst)\n    (recur (rest lst) (dec idx))))","user":"53cd5226e4b00fb29b2212e0"},{"code":"#(loop [counter 0\n        collection %]\n\n    (if (= counter %2)\n      (first collection)\n      (recur (inc counter) (rest collection))\n    )\n\n  )","problem":21,"user":"51a865dfe4b08d8ec191b80f"},{"problem":21,"code":"(fn nthelement [coll n]\n  (first(keep-indexed (fn [index elem]\n                  (if (= index n)\n                    elem))\n                coll)))","user":"6092c0a9e4b00e9e6653c3dc"},{"code":"(fn [l d] (some identity (map-indexed #(when (= %1 d) %2) l)))","problem":21,"user":"51b0fc95e4b0c53cf2e68a72"},{"problem":21,"code":"(fn get-nth [x y] \n  ((fn get-nth-2 [x y z] \n     (if (= z y) (first x) (get-nth-2 (rest x)  y (+ z 1)))\n     ) x y 0))","user":"5c473942e4b0e06e1360a3aa"},{"problem":21,"code":"(fn nth-element [s n] (if (= n 0) (first s) (nth-element (rest s) (- n 1))))","user":"579bf7e3e4b05b1deef9ae01"},{"code":"(fn [vect end] (peek(subvec (vec vect) 0 (+ 1 end))))","problem":21,"user":"5097cf53e4b00ad8bab4e976"},{"code":"(fn [coll n]\n  (loop [c coll i 0]\n    (if (= i n)\n      (first c)\n      (recur (rest c) (inc i)))))","problem":21,"user":"527aba40e4b03e8d9a4a7565"},{"problem":21,"code":"(fn last_elm [sequ n]\n    (if (= 0 n)\n        (first sequ)\n        (last_elm (rest sequ) (- n 1))))","user":"5b02ab12e4b0cc2b61a3bd53"},{"problem":21,"code":"(fn\n  [list n]\n  (loop [list-tail list\n         position 0]\n    (if (= position n)\n      (first list-tail)\n      (recur (rest list-tail) (inc position)))))","user":"5844e6f4e4b089d5ab817e5a"},{"problem":21,"code":"(fn [col index] (get (vec col) index))","user":"5a617a73e4b0512ff01cd977"},{"code":"(fn \n  [list, i] \n  (if (= i 0) \n    (first list) \n    (recur (rest list) (dec i))))","problem":21,"user":"4f21838fe4b0d66497709fd2"},{"code":"(fn [list n] (last (take (inc n) list)))","problem":21,"user":"5277da8ee4b03e8d9a4a7514"},{"code":"(fn [s a](if (= 0 a) (first s) (recur (rest s) (dec a))))","problem":21,"user":"4eb5750a535d7eef30807366"},{"code":"(fn [seq pos] (first (drop pos seq)))","problem":21,"user":"4f70bcf9e4b07046d9f4effe"},{"problem":21,"code":"(fn [a b]\n  (loop [num1 (reverse a)\n        num2 b]\n  (if (= (count num1) (+ num2 1)) (first num1)\n    (recur (rest num1) num2) ) ))","user":"5989cebfe4b021a7a535fed3"},{"problem":21,"code":";#(.get % %2)\n(fn [coll n] (first (drop n coll)))","user":"555d4421e4b0a2eb076a39a8"},{"code":"(fn inx [x,y] (if (not= y 0) (inx (rest x) (- y 1)) (first x)))","problem":21,"user":"5006981ce4b0678c553fc489"},{"problem":21,"code":"(fn [x-seq y-index] (let [trimmed (drop y-index x-seq)] (first trimmed)))","user":"5f1eebcee4b0f565ad998273"},{"problem":21,"code":"(fn new-nth [coll n]\n      (if (= n 0) (first coll)\n           (new-nth (rest coll) (- n 1))))","user":"5d7ea7e2e4b0492f5d910fc2"},{"problem":21,"code":"(fn [coll n]\n      (loop [it coll x 0]\n        (if (= n x)\n          (first it)\n          (recur (rest it) (inc x )))))","user":"5c3f37fce4b08cd430848e91"},{"problem":21,"code":"(fn[n m]\n  (last (take (+ m 1) n)))","user":"562a58e8e4b00e49c7cb4822"},{"code":"(fn [input index]\n   (loop [i 0 elements input]\n     (if (= i index)\n       (first elements)\n       (recur (inc i) (rest elements)))\n     )\n   )","problem":21,"user":"5106dc1be4b01150e115ebf0"},{"problem":21,"code":"(fn [xs n] (if (= 0 n)\n             (first xs)\n             (recur (rest xs) (- n 1))))","user":"58a47197e4b01a0c0b2328f9"},{"code":"(fn [col index]\n  (last (take (+ index 1) col)))","problem":21,"user":"4f03a4dd535dcb61093f6b47"},{"problem":21,"code":"(fn[s x]\n  (last (take (inc x) s)))","user":"5daeb6bce4b0f8c104ccfc8b"},{"problem":21,"code":"(fn [xs n] \n  (loop [ys xs m n]\n    (if (> m 0) \n      (recur (rest ys) (- m 1))\n      (first ys)\n    )\n  )\n)","user":"5aac468ae4b073f17744256b"},{"problem":21,"code":"(fn [s i]\n  (loop [c i t s]\n        (if (zero? c)\n            (first t)\n            (recur (dec c) (rest t))\n            )\n        )\n  )","user":"5a9d64c8e4b0d174b936c7eb"},{"problem":21,"code":"(fn c21 [c n] ;;returns the Nth element from a sequence without (nth c n)\n  (if (zero? n) (first c) (c21 (rest c) (dec n))))","user":"56f09bf4e4b04a395b9a047f"},{"problem":21,"code":"(fn [coll pos]\n  (loop [xs coll\n         i 0]\n    (let [item (first xs)\n          tail (rest xs)] \n      (if (< i pos)\n        (recur tail (inc i))\n        item))))","user":"5675cdf1e4b05957ce8c614d"},{"code":"(fn [col idx] (loop [remaining col i idx] (if (= i 0) (first remaining) (recur (rest remaining) (- i 1)))))","problem":21,"user":"536e5055e4b0fc7073fd6e6b"},{"problem":21,"code":"(fn at [xs i]\n  (if (= i 0)\n    (first xs)\n    (at (rest xs) (- i 1))))","user":"5e2261b2e4b05b4b01516131"},{"problem":21,"code":"(fn [s n] (->> s (take (inc n)) last))","user":"5ec948dde4b08d0ec38692f2"},{"problem":21,"code":"(fn [coll n]\n  (if (> n 0)\n    (recur (rest coll) (dec n))\n    (first coll)))","user":"546c4c5fe4b00cfc9eacc178"},{"problem":21,"code":"(fn my-nth [s n] (if (= n 0) (first s) (my-nth (rest s) (- n 1) )))","user":"514504c2e4b021a5ff8301fc"},{"code":"(fn elef [x y]\n  (if (= y 0) \n    (first x)\n    (elef (rest x) (- y 1))))","problem":21,"user":"50588af1e4b06522596eba7d"},{"problem":21,"code":"(fn x [l n]\n  (if\n    (= 0 n)\n    (first l)\n    (x (rest l) (dec n))))","user":"55b11716e4b002ce9d5cbc2c"},{"problem":21,"code":"(fn [x n]\n  (loop [com x\n         i n]\n    (if (= i 0)\n      (first com)\n      (recur (rest com)\n             (dec i)))))","user":"546af00de4b00cfc9eacc163"},{"problem":21,"code":"(fn nth-elem [s i]\n  (if (= i 0)\n    (first s)\n    (recur (rest s) (- i 1))))","user":"573f3ccfe4b05c31a32c083f"},{"code":"(fn [x n]\n  ((vec x) n)\n)","problem":21,"user":"4f03e486535dcb61093f6b78"},{"problem":21,"code":"#(loop [xs %\n         n %2]\n    (if (= n 0)\n      (first xs)\n      (recur (rest xs)\n             (- n 1))))","user":"57689d73e4b0a07e8fc180d7"},{"problem":21,"code":"(fn [coll n]\n  (loop [index 0\n         others coll]\n    (if (= index n)\n      (first others)\n      (recur (inc index) (next others)))))\n\n;; first and drop","user":"5bc7f2d6e4b07a9b28b100b7"},{"problem":21,"code":"(fn [the-seq n]\n  (loop [cur-seq the-seq\n         cur-n n]\n    (if (= 0 cur-n)\n      (first cur-seq)\n      (recur (rest cur-seq) (dec cur-n)))))","user":"59a96a85e4b0bcf4e9a43b13"},{"problem":21,"code":"(fn n-th [array n]\n  (if (= n 0)\n      (first array)\n      (n-th (rest array) (- n 1)))\n )","user":"567ff160e4b0966858e4d8e6"},{"problem":21,"code":"(fn nth-element [orig-list n]\n  (loop [i 0\n         rest-list orig-list]\n    (if (< i n)\n      (recur (+ i 1) (rest rest-list))\n      (first rest-list)))\n  )","user":"5c196dc3e4b01240ff5671fa"},{"code":"(fn [s x] (loop [mx x ms s] (if (= mx 0) (first ms) (recur (dec mx) (rest ms)))))","problem":21,"user":"4e9629c2535dbda64a6f6b3f"},{"problem":21,"code":"(fn [coll n] ( last (take (+ 1 n) coll)))","user":"5c46bdbde4b0e06e1360a3a4"},{"code":"(fn [x y] \n  (if (= y 0) \n    (first x) \n    (recur (rest x) (dec y))\n  )\n)","problem":21,"user":"4fdafa1be4b05e33b9224f55"},{"problem":21,"code":"(fn [col t] (loop [c col] (if (= (count c) (- (count col) t)) (first c) (recur (rest c)))))","user":"59f38703e4b0966464fe6a9e"},{"code":"(fn [s, i] (if (= i 0)\n             (first s)\n             (last (take (inc i) s))))","problem":21,"user":"50b80cd9e4b01d868da6351a"},{"code":"(fn [col ind] (first (keep-indexed (fn[inx v] (if(= inx ind)v)) col)))","problem":21,"user":"4f56d6f3e4b0a7574ea7182c"},{"code":"(fn [a b](first(second(split-at b a))))","problem":21,"user":"5380c3ebe4b06839e8705ec6"},{"code":"(fn elem [n,i] ( if (= i 0) (first n) (elem (rest n) (- i 1))))","problem":21,"user":"50aca31fe4b071b89ef26230"},{"problem":21,"code":"(fn\n        [coll target]\n        (loop\n            [items coll\n             index 0]\n          (if (= index target)\n            (first items)\n            (recur (rest items) (inc index)))))","user":"5739fb92e4b0cd1946bd1083"},{"problem":21,"code":"(fn mynth [l c] (if (= c 0) (first l) (mynth (rest l) (- c 1))))","user":"55293b17e4b0ffed3738f945"},{"problem":21,"code":"#(loop [coll %1\n        cur %2]\n   (if (zero? cur)\n     (first coll)\n     (recur (rest coll) (dec cur))))","user":"5cc4b34de4b0ccb061962805"},{"code":"(fn [coll number] \n  (cond \n    (= number 0) (first coll)\n    true (recur (rest coll) (- number 1))))","problem":21,"user":"4fef4bc0e4b0678c553fc315"},{"code":"(fn \r\n  [l n] (\r\n  if (= n 0) (first l) (recur (rest l) (- n 1))))","problem":21,"user":"506f5d68e4b082ae7d1032c7"},{"problem":21,"code":"(fn k [l n] (if (= n 0) (first l) (k (rest l) (- n 1))))","user":"5776b47ce4b0979f8965163d"},{"problem":21,"code":"(fn\n  [list index]\n  (last(take (inc index) list)))","user":"5fffecb1e4b074f607df660a"},{"problem":21,"code":"(fn nth-of[s idx] \n  (if (= idx 0) (first s) \n    (nth-of (rest s) (dec idx)) ))","user":"55f7bd07e4b06e875b46ceaf"},{"code":"(fn [s i] \n  (if (= i 0)\n     (first s)\n     (recur (rest s) (dec i))))","problem":21,"user":"5360d41fe4b0243289761e39"},{"problem":21,"code":"(fn nyaa [s n] (if (= n 0)\n                (first s)\n                (nyaa (rest s) (- n 1))))","user":"6014cbc6e4b074f607df66cc"},{"code":"#(loop [lst %1 i %2] (if (zero? i) (first lst) (recur (rest lst) (dec i))))","problem":21,"user":"50e88080e4b0ebbe794eb7ea"},{"problem":21,"code":"(fn [list count]\n        (loop [lst list k count]\n          (if (= k 0)\n            (first lst)\n            (recur (rest lst) (dec k)))))","user":"55527251e4b0deb715856df3"},{"code":"(fn [xs n]\n  (loop [c 0, xs xs]\n    (if (= c n)\n      (first xs)\n      (recur (inc c) (rest xs)))))","problem":21,"user":"52487654e4b05ef8e38e63dc"},{"code":"(fn [items index] (last (take (+ index 1) items)))","problem":21,"user":"523de33de4b06956f8342ca8"},{"code":"(fn [coll n]\n    ((apply comp (cons first (repeat n rest))) coll))","problem":21,"user":"509fa9b5e4b08df8156e9e3f"},{"problem":21,"code":"(fn [xs n]\n   (if (= n 0)\n     (first xs)\n     (recur (rest xs) (dec n))))","user":"596b5f27e4b069c0a1a19813"},{"code":"(fn [col ind] (if (zero? ind) (first col) (recur (rest col) (dec ind))))","problem":21,"user":"4eb2eae5535d7eef30807351"},{"problem":21,"code":"(fn a [l n]\n  (if (= 0 n)\n    (first l)\n    (a (rest l) (- n 1))))","user":"550babf3e4b06e50f9beb149"},{"problem":21,"code":"#(loop [s %1 c 0] (if (= %2 c) (first s) (recur (rest s) (inc c))))","user":"584aa803e4b089d5ab817ee9"},{"code":"(fn [col n]\n  (if\n    (= 0 n)\n    (first col)\n    (recur (rest col) (- n 1))))","problem":21,"user":"522b7389e4b0d34ee08e71be"},{"problem":21,"code":"(fn [v x] ((into[] v) x))","user":"55fe9fc9e4b00f4cabc57655"},{"problem":21,"code":"(fn [l num](loop [list l n num] (if(= n 0) (first list) (recur (rest list) (dec n)))))","user":"55aa1637e4b0988bba2ad949"},{"problem":21,"code":"(fn it\n  ([v i] (it v i 0))\n  ([v i c]\n    (if (= i c) (first v) (recur (rest v) i (inc c)))))","user":"55d1ec3ee4b0e31453f64a4c"},{"problem":21,"code":"(fn [coll n]\n  (loop [c coll\n         n n]\n    (if (zero? n)\n      (first c)\n      (recur (rest c) (dec n))\n    )\n  )\n)","user":"589a8dace4b00487982d5311"},{"problem":21,"code":"(fn [s n]\n   (if (= n 0)\n     (first s)\n     (recur (rest s) (- n 1))))","user":"56012cd7e4b04bb52996e17d"},{"problem":21,"code":"(fn my-nth [coll idx]\n  (loop [coll coll idx idx i 0]\n    (if (= i idx)\n      (first coll)\n      (recur\n       (rest coll)\n       idx\n       (inc i)))))","user":"5f238a59e4b0f565ad99828d"},{"problem":21,"code":"(fn [cl n]\n  (cond\n   (= 0 n) (first cl)\n   :else (recur (rest cl) (dec n))))","user":"5dc12b0ae4b0e59a23173d84"},{"code":"(fn n [a x] (if (= x 0) (first a) (n (rest a) (+ x -1))))","problem":21,"user":"50cbc2bbe4b0f78a8e1645bd"},{"code":"(fn [sq nth-element]\n  (loop [index 0\n         cur-sq sq]\n    (if (= index nth-element)\n      (first cur-sq)\n      (recur (inc index) (rest cur-sq)))))","problem":21,"user":"50e35b2de4b094329ae7f4bb"},{"problem":21,"code":"(fn [vex in] (let [vexy (vec vex)] (vexy in)))","user":"5da5dc17e4b000c986472c05"},{"problem":21,"code":"#( .get % %2)","user":"57016724e4b08d47c97781d6"},{"problem":21,"code":"(fn [x, y] (last (take (+ y 1) x)))","user":"537ae8bfe4b06839e8705e61"},{"problem":21,"code":"(fn [xs n]                          \n  ((fn aux-rec [acc xs n]                  \n     (if (= acc n)                         \n        (first xs)                         \n        (aux-rec (inc acc) (rest xs) n)))  \n   0 xs n))","user":"53b890e1e4b047364c0444df"},{"problem":21,"code":"(fn my-nth [x y]\n  (if (= y 0)\n    (first x)\n    (my-nth (rest x) (- y 1))))","user":"5606ea56e4b08b23635d317b"},{"problem":21,"code":"(fn my-nth [lst pos] (if (= pos 0) (first lst) (my-nth (rest lst) (- pos 1))))","user":"55836631e4b05c286339e114"},{"problem":21,"code":"(fn [coll index]\n  (get (vec coll) index))","user":"54508859e4b0e397800069a3"},{"problem":21,"code":"(partial \n \t(fn [z x y] \n      \t(if (= y z) \n          (first x) \n          \n          (recur (inc z) (rest x) y ))) \n0)","user":"57011eb3e4b08d47c97781d1"},{"problem":21,"code":"(fn [s c] (last (take (+ c 1) s)))","user":"54290a64e4b01498b1a71b36"},{"problem":21,"code":"(fn [coll n]\n  (loop [c coll\n         i n]\n    (if (zero? i)\n      (first c)\n      (recur (rest c) (- i 1)))))","user":"54487527e4b032a45b8693cc"},{"code":"(fn[col n] (if (zero? n) (first col) (recur (rest col) (- n 1))))","problem":21,"user":"531c5a6be4b08068f379ed9c"},{"problem":21,"code":"(fn \n  [lst n] \n  (loop [i 0, kth (first lst), remain (rest lst)]\n    (if (= n i)\n      kth\n      (recur (+ i 1) (first remain) (rest remain)))))","user":"5e65bfe4e4b0fd0acd1586b9"},{"code":"(fn [my-list nth-element] \n  (first (drop nth-element my-list)))","problem":21,"user":"4eeb8271535d93acb0a668a8"},{"problem":21,"code":"(fn __ [s n] (if (= n 0) (first s) (__ (rest s) (- n 1))))","user":"5be2e670e4b0ed4b8aab4ccc"},{"code":"#(-> (partition (inc %2) %1) first last)","problem":21,"user":"4fd3b3d9e4b0d4de60cee362"},{"problem":21,"code":"(fn j [x y] ((into [] x) y))","user":"5b4ff2abe4b02d533a91bcdf"},{"code":"(fn [x n] (loop [col x index n] (if (= index 0) (first col) (recur (rest col) (dec index)))))","problem":21,"user":"525121ede4b0541d1855b868"},{"problem":21,"code":"(fn [x n]\n  (if (= n 0)\n    (first x)\n    (recur (rest x) (- n 1)))\n  )","user":"5822d617e4b04b46fc4b0fa8"},{"problem":21,"code":"(fn nt [s x]\n   \t\t(if (= x 0)\n        \t(first s)\n        \t(nt (rest s) (- x 1))\n        )\n)","user":"57040e34e4b08d47c9778203"},{"problem":21,"code":"(fn [l r] (get (zipmap (range 3) l) r) )","user":"543272b8e4b0dad94371f2ef"},{"code":"(fn [s e] (last (take (- (count s) e) (reverse s))))","problem":21,"user":"52baea85e4b07a9af57922d9"},{"problem":21,"code":"(fn self[coll n]\n  (if (= n 0)\n    (first coll)\n    (self (rest coll) (dec n))))","user":"5512aca6e4b055c2f668d4b4"},{"problem":21,"code":"(fn [coll index]\n    (loop [c coll\n           i 0]\n      (if (= i index)\n        (first c)\n        (recur (rest c) (inc i)))))","user":"5e348945e4b0650de70e2b1d"},{"problem":21,"code":"#(loop [counter 0 lista %1]\n   (if (= counter %2)\n     (first lista)\n     (recur (+ counter 1) (rest lista))))","user":"57c314f3e4b05aa3c4741cba"},{"code":"(fn monkey [s n] ((vec s) n))","problem":21,"user":"4ec5569f535d6d7199dd3695"},{"code":"(fn my-nth [coll index]\n  (if (= index 0)\n    (first coll)\n    (recur (rest coll) (dec index))))","problem":21,"user":"4e71e7b7535d5021c1a89654"},{"problem":21,"code":"(fn nonth\n  ([c n m]\n      (if (= (- m (count c)) n)\n        (first c)\n        (nonth (next c) n m)))\n  ([c n]\n      (nonth c n (count c))))","user":"57f291a8e4b0511f1d294df0"},{"problem":21,"code":"(fn [coll n]\n  (loop [rmn coll it n]\n    (if (zero? it)\n      (first rmn)\n      (recur (rest rmn) (dec it)))))","user":"5f665d45e4b02876ed9fd02f"},{"problem":21,"code":"(fn [l x] (last (take (inc x) l)))","user":"561a4769e4b053970a773b05"},{"code":"(fn [coll n] (last (take (+ 1 n) coll)))","problem":21,"user":"4ded611f535d08e6dec9fe0d"},{"code":"(fn [xs n]\r\n  (let [f31 (fn [xs n c]\r\n              (if (= n c)\r\n                (first xs)\r\n                (recur (rest xs) n (inc c))))]\r\n    (f31 xs n 0)))","problem":21,"user":"4dd59d8b535dae65d5c462eb"},{"problem":21,"code":"(fn\n  [x, n]\n  (.get x n)\n  )","user":"574ed2f7e4b02ea11479924a"},{"problem":21,"code":"#(loop [i 0 s %1] (if (< i %2) (recur (inc i) (rest s)) (first s)))","user":"5866df28e4b0f14aab7c886d"},{"code":"(fn element [l p] (if (= p 0) (first l) (element (rest l) (dec p))))","problem":21,"user":"50e86794e4b0ebbe794eb7e4"},{"problem":21,"code":"(fn my-nth2 [[& coll] n]\n    (if (> n 0)\n        (my-nth2 (rest coll) (- n 1))\n        (first coll)\n    ))","user":"55264584e4b0ffed3738f918"},{"code":"(fn ttt [x y] (if (= 0 y) (first x) (ttt (rest x) (dec y))))","problem":21,"user":"4fe4614ee4b0e8f79898feb3"},{"problem":21,"code":"(fn my-nth [my-seq n]\n  (if (= n 0)\n    (first my-seq)\n  \t(recur (rest my-seq) (- n 1)))\n  )","user":"5aefdc8de4b0cc2b61a3bc40"},{"code":"(fn [aseq n] \n  (loop [as aseq ,i 0] \n  (if (= i n)\n     (first as)\n     (recur (rest as)(inc i)))))","problem":21,"user":"4ebd4448535dfed6da9c6d8f"},{"code":"(fn my-nth [seq n]\n  (if (= n 0)\n    (first seq)\n    (my-nth (rest seq) (- n 1))))","problem":21,"user":"53415755e4b00652c8746ecd"},{"problem":21,"code":"(fn [xs n] \n    (if (= n 0)\n      (first xs)\n      (recur (rest xs) (dec n))))","user":"5683fcafe4b0945ebc182aa8"},{"problem":21,"code":";; I didn't know that drop existed\n\n(fn [values index]\n  (let [split-sequence (partition-all (inc index) values)\n        first-sequence (first split-sequence)]\n    (last first-sequence)))","user":"60452a00e4b02d28681c77b5"},{"problem":21,"code":"(fn [seq pos]\n\t(if (= pos 0)\n\t\t(first seq)\n(recur (rest seq)\n           \t\t(- pos\n                  \t    1))))","user":"55f6e1b4e4b06e875b46ce9c"},{"code":"(fn [xs n] (loop [els xs cnt n] (println xs cnt) (if (= 0 cnt) (first els) (recur (rest els) (dec cnt)))))","problem":21,"user":"4ec1619b535dfed6da9c6dab"},{"problem":21,"code":"(fn [input-list n]\n       (loop [cnt n tmp-list input-list]\n         (if (zero? cnt)\n           (first tmp-list)\n           (recur (dec cnt) (rest tmp-list)))))","user":"58677770e4b0f14aab7c887b"},{"problem":21,"code":"(fn [coll n] \n\t(last \n\t\t(take (+ n 1) coll)) \n)","user":"57343747e4b0cd1946bd1006"},{"problem":21,"code":"(fn mynth [s n]\n (if (= 0 n)(first s)\n    (mynth (rest s) (dec n))))","user":"606ff56ce4b069485764de21"},{"problem":21,"code":"#(if (zero? %2)\n    (first %1)\n    (recur (next %1) (dec %2)))","user":"5972844ce4b01722bebd4c86"},{"code":"(fn NT [L x]\n  (if (> x 0)\n    (NT (rest L) (- x 1))\n    (first L)\n  )\n)","problem":21,"user":"50b8e67fe4b0cba0e598b655"},{"problem":21,"code":"(fn [seq n]\n    (loop [f (first seq)\n           r (rest seq)\n           c n]\n      (if (= 0 c)\n        f\n        (recur (first r) (rest r) (- c 1)))))","user":"58fff18be4b0438e51c2d00c"},{"code":"(fn [x y] (first (subvec (vec x) y (+ y 1))))","problem":21,"user":"4e1fe800535d04ed9115e811"},{"problem":21,"code":"(fn [coll n]\n  \n( get (into [] coll) n)\n  \n  )","user":"56a358d0e4b0542e1f8d14c9"},{"problem":21,"code":"(fn foo [xs pos]\n  (if (= 0 pos)\n    (first xs)\n    (foo (rest xs) (dec pos))))","user":"58b066dee4b0ebc645576cd9"},{"code":"(fn my-nth [s n] (if (== n 0) (first s) (my-nth (rest s) (dec n))))","problem":21,"user":"5123f099e4b02c3f2a072cca"},{"code":"(fn [s i]\n    (if (zero? i)\n        (first s)\n        (recur (rest s) (dec i))))","problem":21,"user":"4fc0f5b8e4b081705acca329"},{"problem":21,"code":"#(loop [x %1 n %2] (if (= n 0) (first x) (recur (rest x) (dec n))))","user":"55306b8ae4b076ab5578f812"},{"problem":21,"code":"(fn [l n] ((zipmap (range) l) n))","user":"58c03ea1e4b021aa9917ece5"},{"code":"(fn getnth [x n] \n  (if (= n 0)\n    (first x)\n    (getnth (rest x) (dec n))\n    ))","problem":21,"user":"52c8a8b9e4b0c2d177d62139"},{"problem":21,"code":"(fn [coll x] (second (find (vec coll) x)))","user":"5a4e3166e4b05d388ecb6bbb"},{"code":"(fn [sek n] (first (drop n (take (+ 1 n) sek))))","problem":21,"user":"4e218470535d04ed9115e817"},{"code":"#((vec %1) %2)","problem":21,"user":"4df7cb14535d04ed9115e776"},{"problem":21,"code":"(fn [coil idx]\n  (cond (= idx 0) (first coil)\n        (= 0 (count coil)) nil\n        :else (recur (rest coil) (dec idx))))","user":"56c55fbce4b05cc29241eea5"},{"problem":21,"code":"(fn [ l n ] (last (take (inc n) l)))","user":"583585f7e4b089d5ab817ce0"},{"problem":21,"code":"(fn [l n]\n  (loop [c 0 l1 l]\n    (if (< c n)\n      (recur (inc c) (rest l1))\n\t  (first l1))))","user":"54cd62d0e4b057c6fda3a2a1"},{"code":"(fn [l idx]\n  (first \n   (keep-indexed \n    #(if (= %1 idx) %2 nil) \n    l)))","problem":21,"user":"538c6db7e4b0b51d73faae5a"},{"problem":21,"code":"(fn get-nth [col n]\n  (cond \n    (< n 0) nil\n    (= n 0) (first col)\n    :else (get-nth (rest col) (- n 1))))","user":"5de5fbfee4b0948ae9d9ae1e"},{"problem":21,"code":"(fn [v n] (cond (= n 0) (first v) (> (count v) n) (recur (rest v) (- n 1)) (= (count v) n) (first v) ))","user":"5756efc3e4b02ea1147992e6"},{"code":"(fn foo [list n]\n  (if (= n 0)\n    (first list)\n    (recur (rest list) (- n 1))))","problem":21,"user":"4eb66737535d7eef3080736b"},{"problem":21,"code":"(fn my-nth [coll i]\n  (if (<= i 0)\n\t(first coll)\n    (my-nth (rest coll) (dec i))))","user":"57ae3345e4b0fbc9809a271e"},{"code":"(fn [coll x]\n  (last (drop-last\n    (- (count coll) x 1)\n    coll))\n)","problem":21,"user":"4f20173a535d64f6031464a9"},{"problem":21,"code":"(fn [s i] (-> i inc (take s) last))","user":"58a3279fe4b02bd94d917ee9"},{"problem":21,"code":"(fn nthe [x loc] (last (take (inc loc) x)))","user":"55967c7ce4b04c1e5c31d754"},{"problem":21,"code":"#(loop [r %\n            cn 0]\n            (if (= %2 cn)\n            (first r)\n            (recur (rest r) (inc cn))))","user":"5432df22e4b0dad94371f2f5"},{"code":"(fn [a b]\n(loop [l a\n       i b]\n       (if (= 0 i)\n         (first l)\n        (recur (rest l) (- i 1))\n)))","problem":21,"user":"4e43b0d9535dc968683fc4a3"},{"code":"(fn [coll n]\r\n  (if (= n 0)\r\n    (first coll)\r\n    (recur (rest coll) (dec n))))","problem":21,"user":"4de623ef535d08e6dec9fdf4"},{"code":"(fn [s n] (if (> n 0) (recur (rest s) (dec n)) (first s)))","problem":21,"user":"5360b327e4b0243289761e38"},{"code":"(fn [c n] (loop [x c i n] (if (zero? i) (first x) (recur (rest x) (dec i)))))","problem":21,"user":"5143db4fe4b0b4fb4ace5f3d"},{"problem":21,"code":"(fn[seq1 i]  (reduce + (filter(fn[x] x )  (map-indexed (fn[idx itm] (if (= idx i) itm false)) seq1)) ))","user":"55757e81e4b05c286339e063"},{"code":"(fn mn[s n] (if (= n 0) \n            (first s) \n            (mn (rest s) (- n 1))))","problem":21,"user":"4f6b1457e4b07046d9f4efa6"},{"problem":21,"code":"(fn [x n] (if (pos? n) (recur (rest x) (dec n)) (first x)))","user":"56049986e4b0c80df0ca2662"},{"code":"#(loop [c 0 i %2 v %1] (if (= i c) (first v) (recur (inc c) i (rest v))))","problem":21,"user":"52485723e4b05ef8e38e63d2"},{"problem":21,"code":"(fn ene\n\t([coll i] (ene coll i 0))\n\t([coll n i]\n\t(if (= n i)\n\t\t(first coll)\n\t\t(ene (rest coll) n (inc i)))))","user":"544e5b22e4b0e39780006983"},{"problem":21,"code":"(fn [varList x] (peek (into [4] (take (+ x 1) varList))))","user":"59e0f839e4b08badc2a0c502"},{"problem":21,"code":"(fn [x, y] (last (take (+ 1 y) x)))","user":"563431c1e4b0bfe05bf117bb"},{"problem":21,"code":"(fn [xs x] (get (into [] xs) x))","user":"5668dcc6e4b04acd4f672df8"},{"problem":21,"code":"(fn [list n](last (take (inc n) list)))","user":"5c65a8cbe4b0fca0c1622695"},{"problem":21,"code":"(fn [l n] (if (empty? l) nil (if (= 0 n) (first l) (recur (rest l) (dec n)))))","user":"5b4b4052e4b02d533a91bc9a"},{"code":"(fn\n  [elements n]\n   (loop [res nil nthy n elems elements]\n      (if (or (empty? elems) (< nthy 0))\n        res\n        (recur\n         (first elems)\n         (dec nthy)\n         (rest elems)\n         ))))","problem":21,"user":"516ed82fe4b06aac486e5b31"},{"problem":21,"code":"(fn NewNth [lis n]\n  (if (= n 0) \n      (first lis)\n      (NewNth (rest lis) (dec n))\n  )\n)","user":"5d8b2c63e4b0915913b1d3d0"},{"code":"(fn n-element [x n] (if (= 0 n) (first x) (n-element (rest x) (- n 1))))","problem":21,"user":"503acfb9e4b07a1917cc34d9"},{"code":"(fn [elements index]\n  (last (take (inc index) elements))\n)","problem":21,"user":"535943b3e4b04ce2eb3ed295"},{"problem":21,"code":"(fn [col n]\n    (let [start n\n          end (+ n 1)\n          arr (into [] col)]\n      (first (subvec arr start end))))","user":"59932f49e4b0b211ea3aaaae"},{"problem":21,"code":"#(loop [s %1 n %2]\n   (if (= 0 n)\n     (first s)\n     (recur (rest s) (dec n))))","user":"5cb556f9e4b026601754b934"},{"problem":21,"code":"(fn getn [args which]\n  (get (into-array args) which))","user":"5c22a12ae4b07e362c23058d"},{"problem":21,"code":"(fn[x y](last(take (inc y) x)))","user":"571456f1e4b07c98581c3abb"},{"code":"(fn [x y] (loop [a x, b y, c (first x)]\n           (if (= b 0)\n                c\n                (recur (rest a) (- b 1) (second a)))))","problem":21,"user":"4fd0cb0ee4b04c3a95aa0407"},{"problem":21,"code":";;#(.get % (nth %)) ;;You tripped the alarm! nth is bad!\n\n#((vec %) %2) ;;I cheated & looked this up - turn the collection into a vector, and then pass in a 2nd param! i.e., the following is correct:\n\t\t\t;;(= (#((vec %) %3) [:a :b :c] 0 1) :b)","user":"5399629fe4b0b51d73faaf05"},{"code":"#(loop [cnt 0 coll %1]\n   (if (= cnt %2)\n     (first coll)\n     (recur (inc cnt) (rest coll))))","problem":21,"user":"51f66891e4b06ff1c25c52c1"},{"code":"(fn nthElt [x n]\r\n  (if (not (= (count x) (+ n 1)))\r\n    (nthElt (butlast x) n)\r\n    (last x)))","problem":21,"user":"4f19b55b535d64f603146469"},{"problem":21,"code":"(fn [x el]\n  (loop [l x, cpt 0]\n    (if (= el cpt)\n    \t(first l)\n      \t(recur (rest l) (inc cpt)))))","user":"5a786397e4b013a48d39976c"},{"problem":21,"code":"#(loop [x 0]\n   (if (= x %2)\n   (get (vec %1) x)\n   (recur (inc x))))","user":"5a4b3abde4b05d388ecb6b81"},{"code":"(fn [xs n] \n  (get (zipmap (range n -1 -1) xs) 0)\n)","problem":21,"user":"4ee88f29535d93acb0a66882"},{"code":"(fn [x y]\n  (loop [n 0, l x]\n    (if (= n y)\n      (first l)\n      (recur (+ n 1) (rest l)))))","problem":21,"user":"536123d6e4b0243289761e3f"},{"code":"(fn f [x n] (if (> n 0) (f (rest x) (dec n)) (first x) ))","problem":21,"user":"52589abbe4b0cb4875a45cb7"},{"code":"#((comp first reverse take) (inc %2) %1)","problem":21,"user":"527fd663e4b0757a1b1713de"},{"code":"(fn my-nth[sq,val]\n  (\n    (fn inner[sq, val]\n      (if (not (= val 0 ) ) (inner (next sq) (- val 1))\n        (first sq)\n      ))\n  sq, val))","problem":21,"user":"4ed87228535d10e5ff6f52fa"},{"problem":21,"code":"#(loop [l % i 0] (if (or (= %2 i) (= i (count %) )) (first l) (recur (drop 1 l) (inc i))))","user":"5eb68184e4b00a66d4a95234"},{"problem":21,"code":"#(loop [x %1           \n          y %2\n            i 0]\n       (if (= i y)\n         (first x)\n\n         (recur (next x) y (inc i))))","user":"5e4b919ce4b0889a8790a556"},{"problem":21,"code":"(fn [v k]\n   (letfn [(get-index [v current-k k]\n             (if (= current-k k)\n               (first v)\n               (get-index (rest v) (+ current-k 1) k)))]\n     (get-index v 0 k)))","user":"57689c23e4b0a07e8fc180d6"},{"problem":21,"code":"(fn [col idx]\n  (if (= idx 0) (first col)\n    (recur (rest col) (dec idx))))","user":"571e5c9ee4b0145328a76290"},{"problem":21,"code":"(fn [col n]\n(if (zero? n) (first col) (recur (rest col) (- n 1))))","user":"51545663e4b084ca81ee2e18"},{"code":"(fn nth_ [liste index] (if (= 0 index)\n                         (first liste)\n                         (nth_ (rest liste) (- index 1))))","problem":21,"user":"5294c95fe4b02ebb4ef75013"},{"code":"(fn [c n]\n  (if (empty? c)\n    nil\n    (if (zero? n)\n      (first c)\n      (recur (rest c) (dec n)))))","problem":21,"user":"50a935b9e4b0a9a42786e8de"},{"problem":21,"code":"(fn [seq n] (first (take-last (- (count seq) n) seq)))","user":"539dcb24e4b0b51d73faaf3d"},{"problem":21,"code":"(fn my-nth [xs n]\n  (cond (> n 0) (my-nth (rest xs) (- n 1))\n        (= n 0) (first xs)\n        :else nil))","user":"56fff6a4e4b08d47c97781c3"},{"problem":21,"code":"(fn nnth\n  [coll n]\n  (if (= 0 n)\n    (first coll)\n    (nnth (rest coll)\n           (dec n))))","user":"58817d3ae4b0f1effa3b763b"},{"problem":21,"code":"(fn [seq num]\n  (if (zero? num)\n    (first seq)\n    (recur (rest seq) (dec num))))","user":"594e31dde4b07ddc2dafaea6"},{"code":"(fn [sequ elm] \n  (.get sequ elm)\n  )","problem":21,"user":"50fa0dcee4b07934dda8b0bb"},{"problem":21,"code":"#(loop [n %2 coll %1] (if (= 0 n) (first coll) (recur (dec n) (rest coll))))","user":"5ddd6cfae4b0948ae9d9adc4"},{"problem":21,"code":"(fn [collection position] (first (keep-indexed #(if (= position %1) %2) collection)))","user":"5c7a7982e4b0fca0c1622850"},{"problem":21,"code":"(fn [arr indx] \n  (if (zero? indx)\n    (first arr)\n    (recur (rest arr) (dec indx))))","user":"59636b49e4b066ee0a44b0c5"},{"code":"#(loop [items %1 x 0]\n        (if (= x %2)\n            (first items)\n            (recur (rest items) (inc x))))","problem":21,"user":"5005f0fae4b0678c553fc472"},{"code":"(fn [coll x]\n  (if (zero? x)\n  (first coll)\n  (recur (rest coll)(- x 1))))","problem":21,"user":"529e3607e4b04e0c58e87b90"},{"problem":21,"code":"(fn [s n]\n  (last (take (+ n 1) s))\n  )","user":"562fd7f6e4b0ab312c17ebe0"},{"code":"(fn [col x] (first (reverse (take (inc x) col))))","problem":21,"user":"4f362c31e4b0e243712b1ec7"},{"problem":21,"code":"(fn [xs n] \n  (if (zero? n) \n    (first xs) \n    (recur (rest xs) (dec n))))","user":"550e83d6e4b06e50f9beb166"},{"code":"(fn [coll n]\n  (loop [coll coll\n         n n]\n    (if (zero? n)\n      (first coll)\n      (recur (rest coll) (dec n)))))","problem":21,"user":"50eb4c32e4b0346a3e988cbf"},{"code":"(fn [seq no]\n  (letfn [(nth1 [seq acc]\n            (if (= acc 0) (first seq) (nth1 (rest seq) (dec acc))))]\n    (nth1 seq no)))","problem":21,"user":"4eb404ba535d7eef3080735a"},{"problem":21,"code":"(fn [xs n]\n  (loop [l xs\n         i 0]\n    (if (= i n) (first l)\n      (recur (rest l) (inc i)))))","user":"5560f60ee4b0c656e3ff17c3"},{"code":"(fn [coll n] \n  ((vec coll) n))","problem":21,"user":"52430d3ce4b076204b44faa5"},{"code":"(fn [els n] \n\t(loop [els els n n] \n\t\t(cond\n\t\t\t(nil? els) nil\n\t\t\t(= n 0) (first els)\n\t\t\t:else (recur (next els) (dec n)))))","problem":21,"user":"5374cbf4e4b06d7f452d9e29"},{"problem":21,"code":"#(get(into [] (seq %1)) %2)","user":"58cabf32e4b03c36ff7e583a"},{"code":"#(if (= %2 0)\n    (first %)\n    (recur (rest %) (- %2 1)))","problem":21,"user":"527188cee4b03e8d9a4a73f6"},{"problem":21,"code":"(fn [arr n] (last (take (+ n 1) arr)))","user":"57168a0de4b07c98581c3afb"},{"problem":21,"code":"(fn [coll n]\n  (if (zero? n) (first coll) (recur (rest coll) (- n 1))))","user":"5c51c930e4b0fb8c5ffd99ce"},{"code":"(fn aaa [l i] (if (= i 0) (first l) (aaa (rest l) (- i 1))))","problem":21,"user":"52a82661e4b0c58976d9ac29"},{"code":"(fn [xs i] (get (zipmap (iterate inc 0) xs) i))","problem":21,"user":"518b54c6e4b05711021000b1"},{"problem":21,"code":"(fn [col n] (if (= (count col) (+ n 1))  (last col) (recur (butlast col) n)))","user":"557ffd0ee4b05c286339e0e3"},{"problem":21,"code":"(fn my-nth [col n] (last (take (inc n) col)))","user":"5549ca1ce4b0a04f7929956c"},{"problem":21,"code":"(fn [d n] \n  (if (or \n       (< n 0) \n       (>= n (count d))) \n    nil \n    (if (= n 0) \n      (first d) \n      (recur (rest d) (- n 1)))))","user":"560a6a1de4b05f002753def7"},{"code":"#(first (nthnext % %2))","problem":21,"user":"4e589bdc535d8a8b8723a295"},{"problem":21,"code":"(fn mynth [coll idx]\n  (loop [curr 0\n         rem coll]\n    (if (= curr idx)\n      (first rem)\n      (recur (inc curr) (rest rem) ))))","user":"5f0247fae4b0cf489e8d7f27"},{"code":"(fn [col, idx] (last (take (+ idx 1) col)))","problem":21,"user":"5348cab4e4b084c2834f4a5e"},{"code":"(fn nnth [s n]\n  (if (= n 0)\n    (first s)\n    (recur (next s) (- n 1))\n    ))","problem":21,"user":"519c47abe4b0a1d87b00345a"},{"problem":21,"code":"(fn grab [coll ind] \n  (if (= 0 ind)\n    (first coll)\n    (grab (rest coll) (- ind 1))))","user":"5c534431e4b0fb8c5ffd99f2"},{"code":"(fn [v n]\n  (first (drop n v)))","problem":21,"user":"538fe131e4b0b51d73faae91"},{"problem":21,"code":"(fn\n  [lst n]\n  (loop [pos 0\n         lst lst]\n    (if (= n pos)\n      (first lst)\n      (recur (inc pos) (rest lst)))))","user":"5c706232e4b0fca0c162277e"},{"code":"(fn [v i] (if (= i 0) (first v) (recur (rest v) (dec i))))","problem":21,"user":"5189dbabe4b0288ada3dbdb3"},{"problem":21,"code":"(fn [x y] (loop [element x\n                position y] \n  \t\t\t(if (= position 0)\n  \t\t\t\t(first element)\n  \t\t\t\t(recur (rest element) (dec position) )))\n  )","user":"5512966be4b06e50f9beb1ad"},{"problem":21,"code":"(fn [c n]\n  (first (keep-indexed #(if (= %1 n) %2 nil) c)))","user":"604f9a8be4b039075cafcf65"},{"problem":21,"code":"(fn n [s i]\n  (last (take (+ 1 i) s)))","user":"54305256e4b0dad94371f2d9"},{"code":"#(if (= %2 0)\n   (first %1)\n   (second (take-nth %2 %1)))","problem":21,"user":"5395a79be4b0b51d73faaed9"},{"problem":21,"code":"; God damn there must be easier way than this\n(fn [coll n]\n  (if (= 0 n)\n    (first coll)\n    (recur (rest coll) (dec n))))","user":"58a72bafe4b01a0c0b23293d"},{"problem":21,"code":"(fn\n  [coll n]\n  (loop [coll coll\n         n n\n         index 0]\n    (if (= n index)\n      (first coll)\n      (recur (rest coll) n (inc index)))))","user":"5aa5fa10e4b0d174b936c8a4"},{"code":"(fn slf [l i] (if (= i 0) (first l) (slf (rest l) (dec i))))","problem":21,"user":"4f0b0834535d0136e6c222fe"},{"problem":21,"code":"#(loop [i 0 seq %] (if (= i %2) (first seq) (recur (inc i) (rest seq))))","user":"5bb5cd43e4b0a20761a23575"},{"problem":21,"code":"#(if (= %2 0) (first %1) (recur (rest %1) (dec %2)) )","user":"54fa60dfe4b0cf870d934704"},{"problem":21,"code":"(fn [coll n]\n(loop\n  [l coll\n   con 0]\n  (cond\n   (= con n) (first l)\n   :else (recur (rest l) (+ 1 con))\n   )))","user":"59e62655e4b08badc2a0c568"},{"problem":21,"code":"(fn [lst n]\n  (cond (empty? lst) nil\n        (= 0 n) (first lst)\n        :else (recur (rest lst) (dec n))))","user":"553698fae4b09218d5f44fc0"},{"problem":21,"code":"#(loop [x %2 y (count %1) lista %1]\n   (if (= x 0) \n     (first lista)\n     (recur (dec x) (dec y) (rest lista))\n     )\n   )","user":"5885e90de4b0f1effa3b76c5"},{"problem":21,"code":"(fn [lst i]\n  (if (= i 0)\n    (first lst)\n    (recur (rest lst) (- i 1))))","user":"53ebf2dee4b036ad0777e4fe"},{"problem":21,"code":"(fn [x y] (first (take-last(- (count x) y) x)))","user":"5bb3c9a8e4b0a20761a2352f"},{"problem":21,"code":"(fn mynth [l n] \n  (if (= n 0)\n  \t(first l)\n     (mynth (rest l) (- n 1))))","user":"5869a49fe4b0f14aab7c88a9"},{"problem":21,"code":"(fn [coll n]\n  (if (= n 0) (first coll) (recur (rest coll) (dec n))))","user":"5478c4fee4b0c51c1f4d72c0"},{"problem":21,"code":"(fn f [l, n] (if (= n 0) (first l) (f (rest l) (dec n))))","user":"5933b736e4b072a2710fd05d"},{"code":"(fn get-nth [ls n]\n  (if (zero? n)\n    (first ls)\n    (get-nth (rest ls) (- n 1))))","problem":21,"user":"50bb9fefe4b0594b91591c36"},{"code":"(fn [l n] (loop [ll l nn n]\n  (if (zero? nn) (first ll) (recur (rest ll) (dec nn)))))","problem":21,"user":"4fc74b29e4b0ee37620e181f"},{"problem":21,"code":"(fn  [coll ix]\n  (if (= ix 0)\n    (first coll)\n    (recur (rest coll) (- ix 1))))","user":"53dad484e4b0e771c30254ac"},{"code":"(fn [a b] ( last (take (+ 1 b) a)))","problem":21,"user":"5098bce3e4b0cae2931060a0"},{"code":"(fn [coll index] (first (reverse (take (+ 1 index) coll))))","problem":21,"user":"527de81ce4b0757a1b171394"},{"problem":21,"code":"(fn [xs n]\n  (loop [lst xs\n         cnt n]\n    (if (= 0 cnt)\n      (first lst)\n      (recur (rest lst) (dec cnt)))))","user":"5fba8fe9e4b03f550f448231"},{"problem":21,"code":"(fn [x y] (last(take (+ 1 y) x)))","user":"52149e21e4b0961f15ac4d94"},{"problem":21,"code":"(fn a [a b]\n  (loop [c 0 d a]\n    (if (= b c) (first d)\n      (recur (inc c) (rest d)))))","user":"56fc1bc7e4b07572ad1a88dd"},{"code":"(fn [c n]\n  (last (take (inc n) c)))","problem":21,"user":"51502056e4b098b221effc25"},{"code":"(fn [sq el] (get (zipmap(range) sq)el))","problem":21,"user":"4f35e662e4b0e243712b1ec6"},{"problem":21,"code":"(fn f [s n]\n  (if (zero? n) \n    (first s)\n    (f (rest s)(dec n))))","user":"56df629fe4b0ca2494a095ee"},{"problem":21,"code":"(fn [v n] \n  (if (= n 0) \n    (first v) \n    (recur (rest v) (dec n))))","user":"5740e54de4b05c31a32c085c"},{"problem":21,"code":"(fn my-nth [lst n] (if (zero? n) (first lst) (my-nth (rest lst) (dec n))))","user":"5a99b863e4b0d174b936c7ae"},{"problem":21,"code":"(fn [y x] ((comp last take) (+ 1 x) y))","user":"56dd0179e4b0ea9b8538f826"},{"code":"#(first \n        (drop %2 \n              %1))","problem":21,"user":"4fbef937e4b081705acca315"},{"code":"(fn [coll i]\n   ((vec coll) i))","problem":21,"user":"513a734de4b067e25a345ecb"},{"problem":21,"code":"(fn index [x y]\n         (get (vec x) y))","user":"5787d6ece4b0ebec4cfb750f"},{"problem":21,"code":"(fn [x i] (if (zero? i) (first x) (recur (next x) (dec i))))","user":"55be39f9e4b01b9910ae2a06"},{"code":"(fn [xs n] (if (zero? n) (first xs) (recur (rest xs) (dec n))))","problem":21,"user":"4e5c4cc6535d8a8b8723a2bf"},{"code":"(fn mynth [seq n] (if (= n 0) (first seq) (recur (rest seq) (dec n))))","problem":21,"user":"4f16ef8a535d64f603146451"},{"problem":21,"code":"(fn func [col n]\n  (loop [loopcol col\n         currentn 0]\n    (if (= currentn n)\n      (first loopcol)\n      (recur (rest loopcol) (inc currentn)))))","user":"54178782e4b01498b1a71a0c"},{"problem":21,"code":"(fn [ar i] (loop [x i a ar] (if (= x 0) (first a) (recur (dec x) (rest a)))))","user":"5e08c3dde4b0978307768fc8"},{"code":"(fn [coll n] (first (nthrest coll n)))","problem":21,"user":"51f40975e4b0fca5e8b4822e"},{"code":"(fn [s n] \n  (if (= n 0) \n    (first s)\n    (recur (rest s) (dec n))))","problem":21,"user":"527c166de4b03e8d9a4a75b3"},{"code":"(fn [x,n] (first (drop n x)))","problem":21,"user":"52a77087e4b0c58976d9ac19"},{"code":"(fn[x n] ((vec x) n))","problem":21,"user":"4e9fde3c535d7eef3080729b"},{"problem":21,"code":"(fn nth-custom [collection index] \n  (if (> index 0)\n    (nth-custom (rest collection) (- index 1))\n    (first collection)))","user":"55f330dde4b06e875b46ce56"},{"code":"(fn nth2 [seq n] (if (= n 0) (first seq) (nth2 (rest seq) (- n 1))))","problem":21,"user":"4eff81ca535dcb61093f6a2d"},{"code":"(fn [collection index] \n  (first\n    (drop index collection)))","problem":21,"user":"50be4823e4b0594b91591c8d"},{"problem":21,"code":"(fn [coll n]\n   (if (= n 0)\n     (first coll)\n     (recur (rest coll) (- n 1))))","user":"56cda514e4b0ea9b8538f74e"},{"code":"(fn [arr n]\n  (get (zipmap (range 10000000) arr) n))","problem":21,"user":"4f98c161e4b0dcca54ed6cf5"},{"code":"(fn [x n] (loop [cnt n, lst x] \n          (if (zero? cnt)\n            (first lst)\n            (recur (dec cnt) (rest lst)))))","problem":21,"user":"51352899e4b082aeb3a3f03b"},{"code":"(fn n [c i] (if (= i 0) (first c) (n (rest c) (dec i))))","problem":21,"user":"4db2f208535df7e46ed9b6c9"},{"problem":21,"code":"(fn [collection, index] (last (take (inc index) collection)))","user":"5a6170fde4b0512ff01cd975"},{"code":"(fn mynth [list n] (if (= n 0) (first list) (mynth (rest list) (- n 1))))","problem":21,"user":"50cc30c5e4b0f78a8e1645bf"},{"problem":21,"code":"(fn [s index] (last (take (inc index) s)))","user":"5e304218e4b05b4b0151620d"},{"problem":21,"code":"(fn[se n] \n  (\n    loop[ se2 se cur 0]\n    (\n      if (= cur n)\n      (first se2)\n       (recur (rest se2) (inc cur))\n    )\n  )\n)","user":"58fbdec9e4b0438e51c2cf84"},{"problem":21,"code":"(fn mn [xs n]\n  (if (= n 0)\n    (first xs)\n    (mn (rest xs) (- n 1))))","user":"5998643de4b07157cc8daae3"},{"code":"(fn looper [lst ndx]\r\n  (if (= ndx 0)\r\n    (first lst)\r\n    (looper (rest lst) (dec ndx))))","problem":21,"user":"4f00e9c7535dcb61093f6a33"},{"problem":21,"code":"(fn getNth[listI ind]\n  (last (take (inc ind) listI)))","user":"5c642102e4b0fca0c1622670"},{"code":"#(if (= %2 0) (first %1)\n   (recur (rest %1) (dec %2)))","problem":21,"user":"53348343e4b0656e627bfd6d"},{"problem":21,"code":"(fn [coll val] (first (drop val coll)))","user":"5633bb9de4b0bfe05bf117b4"},{"problem":21,"code":"(fn myNth [l i] (if (= i 0)\n                  (first l)\n                  (myNth (rest l) (- i 1))))","user":"5430a16de4b0dad94371f2da"},{"problem":21,"code":"(fn enth [myseq n] \n  (if \n    (= n 0) \n    (first myseq) \n    (enth (rest myseq) (- n 1) )\n  )\n)","user":"585ca150e4b0f14aab7c878b"},{"code":"(fn [collection, position]\n  (loop [collection collection, position position]\n    (if (= 0 position)\n      (first collection)\n      (recur (rest collection) (- position 1))\n    )\n  )\n)","problem":21,"user":"4e63cad6535d8ccf87e9fe66"},{"problem":21,"code":"(fn [l n]\n  (loop [ll l\n        nn n]\n  (if (= nn 0)\n    (first ll)\n    (recur (rest ll) (dec nn))\n    )))","user":"56102f50e4b05f002753df6b"},{"problem":21,"code":"(fn my-nth [list x] \n  (if (> x 0)\n    (my-nth (rest list) (- x 1))\n    (first list)))","user":"54ca130ce4b057c6fda3a250"},{"problem":21,"code":"(fn [sqn n] (loop [x sqn  m 0] (if (= m n) (first x) (recur (rest x) (inc m)))))","user":"56c88f71e4b0ed865f9758d3"},{"code":"(fn [seq n] (first (nthnext seq n)))","problem":21,"user":"4e823f41535db62dc21a62c8"},{"code":"(fn [l n]\n  (cond\n   (= n 0) (first l)\n   :else (recur (rest l) (- n 1))))","problem":21,"user":"53487737e4b084c2834f4a59"},{"code":"(fn mth [xs m]\n  (if (== m 0)\n  (first xs)\n  (mth (rest xs) (dec m))))","problem":21,"user":"504e26b9e4b0f6ff3350c472"},{"code":"(fn [s n]\n  (loop [se s cn 0] \n    (if (= cn n) \n      (first se) \n      (recur (rest se) (inc cn)))))","problem":21,"user":"51aefceee4b09397d5109797"},{"problem":21,"code":"#(loop [i 0\n        coll %]\n   (if (= i %2)\n     (first coll)\n     (recur (inc i) (rest coll))))","user":"572a13cde4b0f4d77e65122b"},{"problem":21,"code":"(fn getnth [coll n] (cond (= n 0) (first coll) :else (getnth (rest coll) (- n 1))))","user":"5e20a159e4b05b4b01516118"},{"code":"(fn retPos [lst pos] \n                  (if(= pos 0)\n                    (first lst)\n                    (retPos (rest lst ) (- pos 1))))","problem":21,"user":"4e6a4641535d8ccf87e9feb9"},{"code":"(fn [x n] ((zipmap (range (count x)) x) n))","problem":21,"user":"4f307b02e4b0d6649770a079"},{"code":"(fn [x n]\n(if (>= 0 n)\n  (first x)\n  (recur (rest x) (dec n))))","problem":21,"user":"51cb073ce4b068dadb8f2233"},{"problem":21,"code":"(fn nth1 [xs n] (if (< 0 n) (nth1 (rest xs) (- n 1)) (first xs)))","user":"5856980de4b0f14aab7c86f7"},{"code":"(fn getn [coll n]\r\n    (if (= n 0)\r\n      (first coll)\r\n      (getn (rest coll) (dec n) )))","problem":21,"user":"4dd4f0a8535dae65d5c462e4"},{"code":"(fn getit [x n] (if (= n 0) (first x) (getit (rest x) (- n 1))))","problem":21,"user":"52cd882ee4b07d0d72b27378"},{"problem":21,"code":"(fn mym\n   ([l n] (if (zero? n) (first l) (mym (rest l) (dec n))))\n)","user":"5f22dabbe4b0f565ad99828a"},{"code":"(fn mynth [seq n]  (if (= n 0) (first seq) (mynth (rest seq) (- n 1))))","problem":21,"user":"505fc8e3e4b08f2a82ad10b6"},{"problem":21,"code":"(fn get-nth\n  [s n]\n  (if (= n 0)\n    (first s)\n    (get-nth (rest s) (- n 1))))","user":"5d05fdece4b0cc9c915881e8"},{"code":"(fn [sq n] (first (drop n sq)))","problem":21,"user":"4daf907aedd6309eace4d17b"},{"problem":21,"code":"(fn nth-elem [l, c] \n   (first \n     (drop c l)))","user":"590bd0fee4b047aa04b199e3"},{"code":"(fn [alist n]\n  (if (== n 0)\n    (first alist)\n    (recur (rest alist) (- n 1))))","problem":21,"user":"4fb213b7e4b081705acca285"},{"problem":21,"code":"(fn [seq x] (let [listSeq (into [] seq)] (listSeq x)))","user":"5422e0cce4b01498b1a71ac8"},{"problem":21,"code":"#(loop [coll %1 index %2]\n   (if (= index 0)\n     (first coll)\n     (recur (rest coll) (dec index))))","user":"548ff2d5e4b0b312c081ff2b"},{"problem":21,"code":"(fn tmp\n  ([seq n] (tmp seq n 0))\n  ([seq n passed]\n    (if (= n passed)\n      (first seq)\n      (tmp (rest seq) n (+ passed 1)))))","user":"59aeff12e4b0e1f4e384c8af"},{"code":"(fn [s idx]\n  (if (zero? idx)\n(first s)\n(recur (rest s) (dec idx))))","problem":21,"user":"4ea67906535d7eef308072e4"},{"problem":21,"code":"(fn [a b] (last(take (inc b) a)))","user":"5714401fe4b07c98581c3ab7"},{"problem":21,"code":"(fn [elems n]\n    (loop [elems elems\n           i 0]\n      (if (= i n)\n        (first elems)\n        (recur (rest elems) (inc i)))))","user":"5ac6ef9be4b0e27600da7779"},{"code":"(fn nth* [coll counter]\n    (let [number 0]\n      (loop [coll coll number number]\n        (if (= counter number)\n          (first coll)\n          (recur (next coll) (+ number 1))))))","problem":21,"user":"534eb269e4b084c2834f4aba"},{"problem":21,"code":"(fn [coll n]\n  (if (= n 0)\n    (first coll)\n    (recur (next coll) (- n 1))\n  )\n)","user":"53d78b64e4b0e771c3025466"},{"code":"(fn mynth[col count]\n  (if (= 0 count) \n    (first col)\n    (mynth (rest col) (- count 1))))","problem":21,"user":"4e7ada51535db169f9c796ae"},{"code":"(fn mynth [S N]\n   (loop [n N s S]\n     (if (zero? n)\n       (first s)\n       (recur (dec n) (rest s))\n       )\n     )\n   )","problem":21,"user":"4f554f4de4b0a7574ea717fa"},{"code":"(fn my-nth [l n]\n   (if (zero? n)\n     (first l)\n     (my-nth (rest l) (dec n))))","problem":21,"user":"4fc8ce6ce4b0ee37620e183c"},{"code":"(fn[x y] (.get x y))","problem":21,"user":"50ebedfde4b04edc3377703d"},{"code":"(fn my-nth\n  [coll idx]\n  (loop [coll coll, idx idx]\n    (if (zero? idx)\n      (first coll)\n      (recur (rest coll) (dec idx)))))","problem":21,"user":"4f07bc41535dcb61093f6c2c"},{"code":"(fn [xs n] (first(drop n xs)))","problem":21,"user":"51df505be4b01188f062752a"},{"code":"(fn [stuff n]\n  (loop [s stuff x 0]\n    (if (= x n)\n      (first s)\n      (recur (rest s)(inc x)))))","problem":21,"user":"53570557e4b04ce2eb3ed274"},{"code":"(fn enth [s n]\n  (if (= 0 n)\n    (first s)\n    (recur (rest s) (- n 1))))","problem":21,"user":"4ea8a4cc535d7eef308072fe"},{"code":"(fn nelem [x, n] (if (= 0 n) (first x)\n(nelem (rest x) (- n 1))))","problem":21,"user":"4e975839535dbda64a6f6b52"},{"code":"(fn [s n]\n        (if (= n 0)\n          (first s)\n          (recur (next s) (dec n)) ))","problem":21,"user":"5280d4bbe4b0757a1b171415"},{"problem":21,"code":"(fn [elements n] (first(drop n elements) ))","user":"54aef4d0e4b09f271ff37cfe"},{"code":"#((apply comp first (replicate %2 next)) %1)","problem":21,"user":"531cdafbe4b08068f379edaa"},{"problem":21,"code":"(fn th [s n] (let [h (first s) t (rest s)] (if (zero? n) h (th t (dec n)))))","user":"54f5fb57e4b0f2f3c5226e9f"},{"code":"(fn my-nth [xs pos]\n    (if (= pos 0)\n        (first xs)\n     (recur (rest xs) (dec pos))))","problem":21,"user":"504f5804e4b0a02f9cffde72"},{"code":"#(first( nthnext %1 %2))","problem":21,"user":"4e8d86d5535d65386fec2136"},{"problem":21,"code":"(fn [xs pos] \n  (if (= pos 0)\n    (first xs)\n    (recur (next xs) (dec pos))))","user":"563ab65be4b0bfe05bf11803"},{"problem":21,"code":"(fn myDrop [one two] (first (drop two one)))","user":"58e5f995e4b056aecfd47ca5"},{"problem":21,"code":"(fn [li, i]\n  (if (= 0 i)\n    (first li)\n    (recur (rest li) (- i 1))))","user":"5c96f3dde4b048ec896c5a67"},{"code":"(fn [s n]\n  (first \n    (drop n s)))","problem":21,"user":"5021d36be4b00bba4502f7a9"},{"problem":21,"code":"(fn my-nth [elems x]\n  (case x\n      0 (first elems)\n      (my-nth (rest elems) (- x 1))\n  )\n)","user":"56e32696e4b03a7c14b85a40"},{"problem":21,"code":"(fn [coll n]\n  (loop [count 0 item (first coll) rem (rest coll)]\n    (if (or (empty? rem) (= n count))\n        item\n        (recur (inc count) (first rem) (rest rem)))))","user":"5c06f6e3e4b0bdcf453d16bb"},{"code":";#( ( vec %) %2)\n(fn [xs, n] ((vec xs) n))","problem":21,"user":"50d58127e4b0159555a1fc5d"},{"problem":21,"code":"(fn [coll n] \n  (last (take (+ n 1) coll)))","user":"5fa52497e4b0fa27300f3dbf"},{"problem":21,"code":"(fn [xs n]\n  (loop [s xs i n]\n    (if (= i 0)\n      (first s)\n      (recur (rest s) (dec i)))))","user":"52aaabf7e4b0c58976d9ac68"},{"problem":21,"code":"(fn [col n] (if (= n 0)\n              (first col)\n              (recur (rest col) (- n 1))))","user":"53c6e25ee4b00fb29b2212a4"},{"problem":21,"code":"(fn [s n]\n  (first\n   (second\n    (split-at n s))))","user":"5430b3b6e4b0dad94371f2db"},{"code":"(fn [l n]\n  (if (= n 0)\n    (first l)\n    (recur (rest l) (dec n))))","problem":21,"user":"4f04f847535dcb61093f6beb"},{"code":"(fn elAt [lst n] (if (<= n 0)\n                     (first lst)\n                     (elAt (rest lst) (dec n))))","problem":21,"user":"525b12b1e4b0cb4875a45d04"},{"problem":21,"code":"(fn [s n]\n  (loop [in s i 0]\n    (if (= n i)\n      (first in)\n      (recur (rest in) (inc i)))))","user":"5604bcf7e4b08b23635d315a"},{"problem":21,"code":"(fn [lt n]\n  (if (= n 0)\n    (first lt)\n    (recur (rest lt) (- n 1))))","user":"5517a352e4b06a49daca83c5"},{"code":"(fn mynth [seq n]\n  (if (= n 0)\n    (first seq)\n    (recur (rest seq) (dec n))))","problem":21,"user":"52753740e4b03e8d9a4a74c1"},{"code":"(fn my-nth [coll x] (if (= x 0) (first coll) (my-nth (rest coll) (- x 1))))","problem":21,"user":"4ee8fc37535d93acb0a66888"},{"code":"(fn find-nth [coll nr] (if (> nr 0) (find-nth (rest coll) (dec nr)) (first coll)))","problem":21,"user":"4f17df72535d64f603146458"},{"problem":21,"code":"(fn [c i]\n  (loop [ind 0 coll c tgt i]\n  (if (= ind i)\n  (first coll)\n  (recur (inc ind) (next coll) tgt))))","user":"549ef3c1e4b0f3d1d8e70fab"},{"problem":21,"code":"(fn my-nth\n  [s pos]\n  (if (= pos 0)\n    (first s)\n    (recur (next s) (dec pos))))","user":"5ed09be3e4b016b56eae05b2"},{"code":"(fn [c i]\r\n   (let [v (vec c)]\r\n     (v i)))","problem":21,"user":"4f1d6fbb535d64f60314648c"},{"code":"(fn bob [lis n]\n  (if (= 0 n)\n    (first lis)\n    (bob (rest lis) (- n 1))\n    )\n  )","problem":21,"user":"4f2004a1535d64f6031464a7"},{"problem":21,"code":"(fn xna' [arr i]\n  ((fn internal [arr j k]\n  (println \"eba\" k)\n  (if (= j k)\n     (first arr)\n     (internal (rest arr) j (+ k 1)))) arr i 0))","user":"53e06f81e4b0d874e779ae4c"},{"code":"(fn [l n]\n     (cond\n    (= nil (seq l)) nil\n    (= n 0) (first l)\n    :else (recur (rest l) (dec n))))","problem":21,"user":"4f230dfbe4b0d66497709fe0"},{"code":"(fn [x n]\n  (if (= 0 n)\n    (first x)\n    (recur\n    \t(rest x) (- n 1) )))","problem":21,"user":"52ae70c4e4b0c58976d9aca8"},{"problem":21,"code":"(fn [coll n]\n\t(first (drop n coll)))","user":"5a9bfd57e4b0d174b936c7d0"},{"problem":21,"code":"(fn nth-element [x y] ( (vec x) y ))","user":"53bfd8c4e4b0c98a41f5cca8"},{"problem":21,"code":"(fn myn [seq n]\n  (if (> n 0)\n    (myn (rest seq) (- n 1))\n    (first seq)))","user":"5f80aca4e4b0c071e6c840e8"},{"code":"(comp first nthnext )","problem":21,"user":"4f5438d6e4b0a7574ea717dd"},{"problem":21,"code":"#(loop [v %1\n        n %2]\n   (if (= n 0)\n     (first v)\n     (recur (rest v) (dec n)\n     )\n     )\n   )","user":"56ec889ee4b04a395b9a043c"},{"code":"(fn f [xs n]\n   \n   (loop [ys xs m n]\n      (if (= m 0) (first ys) (recur (rest ys) (- m 1)))\n   )\n\n)","problem":21,"user":"52d829a8e4b09f7907dd1389"},{"problem":21,"code":"(fn nthh [xs n]\n  (if (zero? n)\n    (first xs)\n    (nthh (rest xs) (dec n))))","user":"59ee6801e4b0966464fe6a1f"},{"problem":21,"code":"(fn\n([ls n] (cond\n(< n 0 ) nil\n(= n 0) (first ls)\n:else (recur (rest ls) (- n 1)))))","user":"603a6c40e4b0d5df2af222f7"},{"problem":21,"code":"(fn [s n] (last (first (partition (inc n) s))))","user":"55f014ebe4b06e875b46ce1b"},{"code":"(fn booya [sequ n]\n  (if (= n 0) (first sequ) (booya (rest sequ) (- n 1))))","problem":21,"user":"53854a04e4b06839e8705eff"},{"problem":21,"code":"#(first(second(split-at  %2 % )))","user":"544f58e8e4b0e39780006991"},{"code":"(fn n-th [seq x]\n  (if (= x 0)\n    (first seq)\n   (n-th (rest seq) (- x 1))))","problem":21,"user":"4ec14602535dfed6da9c6daa"},{"problem":21,"code":"(fn a [s n]\n         (if (= 0 n)\n           (first s)\n           (recur (rest s) (- n 1))))","user":"5beadeb5e4b0f319e2d7ec88"},{"problem":21,"code":"(fn [lst pos]\n  (loop [l lst, n pos]\n    (if (= 0 n)\n        (first l)\n        (recur (rest l) (dec n)))))","user":"567695c2e4b05957ce8c6157"},{"code":"(fn [l pos] (loop [ptr l cur pos] (if  (= cur 0) (first ptr) (recur (rest ptr) (dec cur)))))","problem":21,"user":"4f47eab2e4b0d56e7bb92bc6"},{"problem":21,"code":"(fn my-nth [coll n]\n  (if (zero? n)\n    (first coll)\n    (my-nth (rest coll) (dec n))))","user":"5db5d09be4b010eb3c36cd31"},{"problem":21,"code":"(fn neth [lst n]\n  (if (= n 0)\n    (first lst)\n    (neth (rest lst) (- n 1))))","user":"574b4f3ee4b02ea114799207"},{"problem":21,"code":"(fn [s i] (loop [x i s1 s] (if (= x 0) (first s1) (recur (- x 1) (rest s1)))))","user":"54aa373de4b09f271ff37cb6"},{"problem":21,"code":"(fn nth-element [seqn n]\n    (if(zero? n)(first seqn)\n    (nth-element (rest seqn) (dec n))))","user":"5683e0c6e4b0945ebc182aa3"},{"code":"(fn [elements n]\n  (last (take (+ 1 n) elements)))","problem":21,"user":"523d06aae4b0dbf0c301728b"},{"code":"#(last (take (+ 1 %2) %1))\n\n;#((vec %) %2)\n;vec creates vector, shorthand of ([1 2 3] n) gives nth elem","problem":21,"user":"4ebadde5535dfed6da9c6d6b"},{"problem":21,"code":"(fn return-nth-item[lst item] \n  (last (take (+ 1 item) lst)))","user":"5ec5812de4b08d0ec38692ca"},{"code":"(fn counter-to-last [alist, counter]\n     (cond (= 0 counter) (first alist)\n           :else (counter-to-last (rest alist) (- counter 1)))\n     )","problem":21,"user":"53407963e4b085b17e897dad"},{"problem":21,"code":"(fn\n  [col n]\n  (if (= n 0)\n    (first col)\n    (recur (rest col) (dec n))))","user":"524a9556e4b05ef8e38e64b1"},{"code":"(fn [a x]\n  (loop [a a x x]\n  (if (= x 0)\n    (first a)\n    (recur (rest a) (dec x))\n    )))","problem":21,"user":"532dfbdbe4b019098a6f8b44"},{"problem":21,"code":"(fn [seqn pos] (last (take (+ pos 1) seqn)))","user":"58042984e4b0a837a8b30ca3"},{"code":"(fn get-nth [x, n]\n  (cond \n   (= n 0) (first x)\n   :else (get-nth (rest x) (- n 1))))","problem":21,"user":"522452a4e4b01819a2de42d2"},{"problem":21,"code":"(fn [collec ind]\n  \n   (first (drop ind collec))\n  \n)","user":"5785de43e4b0ebec4cfb74e5"},{"code":"(fn a [x, y] (.get x y))","problem":21,"user":"4f85d497e4b033992c121c4b"},{"problem":21,"code":"(fn get-nth [s n] (cond\n                   (= n 0) (first s)\n                   :else (get-nth (rest s) (- n 1))))","user":"5c7c1d8ee4b0d597f478ca88"},{"code":"(fn [list idx]\n  (loop [l list, i idx]\n    (if (= i 0)\n      (first l)\n      (recur (rest l) (dec i)))))","problem":21,"user":"4edd9d79535d10e5ff6f532b"},{"problem":21,"code":"(fn [coll n] (loop [i 0 l coll] (if (= i n) (first l) (recur (inc i) (rest l)))))","user":"581eba06e4b04b46fc4b0f2e"},{"problem":21,"code":"#(loop [l %1\n         n %2] \n  (if (= n 0) \n    (first l)\n    (recur (rest l) (- n 1))))","user":"56598476e4b068f2fe63dbec"},{"problem":21,"code":"(fn [c n] (first (reverse (take (+ n 1) c))))","user":"5524f21fe4b0882d96d091c7"},{"code":"(fn [x y]\n  (loop [mylist x\n         index 0]\n    (if (= index y)\n      (first mylist)\n      (recur (rest mylist) (inc index)))))","problem":21,"user":"51f82769e4b09be9c177e527"},{"problem":21,"code":"(fn [col l] (first (drop l col)))","user":"5bfc50ece4b0bdcf453d15ea"},{"problem":21,"code":"(fn [s n] \n  (loop [t s \n         c 0]\n    (if (= c n)\n      (first t)\n      (recur (next t) (inc c))\n    )\n  )\n)","user":"567b9ff7e4b05957ce8c61a9"},{"problem":21,"code":"(fn [collection n] (first (nthrest collection n)))","user":"5df79c31e4b0a607a9a45c9b"},{"problem":21,"code":"(fn nth-element [items index]\n  (if (= index 0)\n    (first items)\n    (nth-element (rest items) (- index 1))))","user":"5de48f92e4b0948ae9d9ae07"},{"problem":21,"code":"(fn sex [xs x] \n  (let [f (first xs) rs (rest xs)]\n   (if (= x 0) f (sex rs (dec x)) ) ))","user":"5ec3f557e4b08d0ec38692c0"},{"problem":21,"code":"(fn my-nth [x n]\n  (if (= n 0)\n    (first x)\n    (my-nth (rest x)\n            (- n 1)\n            )\n    )\n  )","user":"576000fce4b08062f99a4e8b"},{"problem":21,"code":"(fn o\n  [lst n]\n  (loop [lista lst\n         numero n\n         result 0]\n    (cond\n     (empty? lista) ()\n     (= numero result) (first lista)\n     :else (recur (rest lista) numero (inc result)))))","user":"5723e6d6e4b0c5bde472c0f1"},{"code":"#(if (= 0 %2)\n  (first %)\n  (recur (rest %) (dec %2)))","problem":21,"user":"507ef25ce4b0f753b6f9788e"},{"problem":21,"code":"(fn [lst n] (second (take-nth n lst)))","user":"532db9d1e4b019098a6f8b3f"},{"problem":21,"code":"(fn nth-alt\n  [items n]  \n  (get (into [] items) n))","user":"562e2c5ce4b0a45d2ff83024"},{"problem":21,"code":"(fn [x y] (last (first (partition (inc y) x))))","user":"5616c78ee4b06b1bb2182a07"},{"problem":21,"code":"(fn getN [our-sequence n] (if(= n 0)\n                            (first our-sequence)\n                            (getN (rest our-sequence)(- n 1)))\n  )","user":"5782ce69e4b0d36ec5835e9a"},{"problem":21,"code":"(fn [s n] (-> (take (inc n) s) reverse first))","user":"5b7ec039e4b047b03b20375d"},{"code":"(fn lst-finder [x, n]\n  (if (= 0 n)\n    (first x)\n    (lst-finder (rest x) (- n 1))\n  )\n)","problem":21,"user":"4ee259a1535d10e5ff6f5366"},{"problem":21,"code":"(fn [s x]\n  (when (not= s ())\n    (if (= x 0)\n      (first s)\n      (recur (rest s) (dec x))\n    )\n  )\n)","user":"52280a26e4b0186687e23a67"},{"code":"(fn [coll n]\r\n  (loop [coll coll n n]\r\n    (if (zero? n)\r\n      (first coll)\r\n      (recur (next coll) (dec n)))))","problem":21,"user":"4dc54eb2535d8a4b2fd74284"},{"problem":21,"code":"(fn elementFinder [x y] (\n                         cond\n                         (= y 0)(first x)\n                         :else (elementFinder (rest x) (- y 1))\n                         ))","user":"5cb79c51e4b026601754b970"},{"problem":21,"code":"(fn [lista index]\n    (loop [collec lista\n           ctr 0]\n      (if (= ctr index)\n        (first collec)\n        (recur (rest collec) (inc ctr)))))","user":"5eccbce6e4b016b56eae058e"},{"problem":21,"code":"(fn [list, index] (first (drop index list)))","user":"55ef12cfe4b0121d4835fdfc"},{"problem":21,"code":"(fn [x, y] (first (take-last (- (count x) y) x)))","user":"560acfc7e4b05f002753df0a"},{"problem":21,"code":"(fn [l n] \n  (get\n    (zipmap \n      (range (count l)) \n      l)\n    (- n 0)))","user":"601f508ce4b0bf4ca6b10959"},{"code":"(fn [SeQ n] (last (take (+ n 1) SeQ)))","problem":21,"user":"4f9336ece4b0dcca54ed6cb7"},{"problem":21,"code":"(fn get-nth [l, n] (if (= n 0) (first l) (get-nth (rest l) (- n 1))))","user":"53e92821e4b036ad0777e499"},{"problem":21,"code":"(fn [s n]\n  (loop [i 0\n         r s]\n    (if (= i n)\n      (first r) \n      (recur (inc i) (rest r)))))","user":"56742817e4b05957ce8c612d"},{"code":"( fn [x y]\n  (last (take (+ y 1) x) )\n)","problem":21,"user":"4ea3f035535d7eef308072ca"},{"problem":21,"code":"(fn [li, idx] (.get li idx))","user":"5cfe7c39e4b0cc9c91588178"},{"code":"(fn [arg1 arg2] (last (take (+ 1 arg2) arg1)))","problem":21,"user":"53863845e4b06839e8705f0f"},{"problem":21,"code":"(fn _nth [c n] (last (take (inc n) c)))","user":"59c74c28e4b0a024fb6ae540"},{"code":"#(first (reduce (fn [a b] (rest a)) % (range %2)))","problem":21,"user":"4fefd624e4b0678c553fc31b"},{"code":"(fn [lst n]\n  (let [x (first lst) xs (rest lst)]\n    (if (= n 0) x (recur xs (dec n)))))","problem":21,"user":"4ec59ce4535d6d7199dd36ab"},{"problem":21,"code":"(fn [x y]\n  (loop [cl x i y]\n    (if (= i 0)\n      (first cl)\n      (recur (rest cl) (dec i)))))","user":"561b57c3e4b053970a773b11"},{"code":"(fn [s, n]\n  (last (take (+ n 1) s)))","problem":21,"user":"500d86e8e4b0ff215386cad4"},{"problem":21,"code":"(fn [coll elem]\n    (if (zero? elem)\n    \t(first coll)\n      \t(recur (rest coll) (dec elem))))","user":"54aec099e4b09f271ff37cf5"},{"problem":21,"code":"(fn [x n]\n  (loop [k n l x]\n    (if (= k 0)\n      (first l)\n      (recur (- k 1) (rest l)))))","user":"592913d4e4b072a2710fcefb"},{"code":"(fn get [x y]\r\n  (if (= 0 y) (first x)\r\n    (get (next x) (- y 1))))","problem":21,"user":"4ff2098fe4b0678c553fc332"},{"code":"(fn mynth [x n] (if (= 0 n) (first x) (mynth (rest x) (- n 1))))","problem":21,"user":"537a620be4b06839e8705e5f"},{"problem":21,"code":"(fn [s i]\n  (loop [cur 0\n         remaining s]\n    (if (= cur i)\n      (first remaining)\n      (recur (inc cur)\n             (rest remaining)))))","user":"571077e8e4b09c608db70434"},{"problem":21,"code":"(fn [seq n]\n  (second (take-nth n seq)))","user":"521a6cdde4b0c4ef0be8300d"},{"code":"(fn lastN ([coll n] \r\n  (if (= 0 n) \r\n    (first coll)\r\n    (recur (rest coll) (- n 1))\r\n  )\r\n))","problem":21,"user":"507ab268e4b08327cd804a6f"},{"problem":21,"code":"(fn [x y]\n  (get (vec x) y))","user":"55245232e4b0882d96d091c0"},{"problem":21,"code":"(fn \n  [lst n]\n  (if (zero? n)\n    (first lst)\n    (recur (rest lst) (dec n))))","user":"513f86dde4b00f13ea1bd88d"},{"code":"(fn get-nth [x n] (if (= n 0) (first x)(get-nth (rest x)(- n 1))))","problem":21,"user":"4e644410535d8ccf87e9fe6a"},{"problem":21,"code":"(fn my-nth\n  [seq n]\n  (let [c 0]\n    (loop [s seq x n counter c]\n        (if (= x counter)\n            (first s)\n            (recur (rest s) x (inc counter))))\n      \n    ))","user":"579d1567e4b05b1deef9ae12"},{"problem":21,"code":"(fn [ls i]\n  (loop [xs ls\n         x 0]\n    (if (= x i)\n      (first xs)\n      (recur (rest xs) (inc x)))))","user":"6026737ee4b0d5df2af2222f"},{"problem":21,"code":"(fn [coll n]\n    (if (= n 0)\n      (first coll)\n      (recur (rest coll)\n             (dec n))))","user":"5be5cebde4b0ed4b8aab4d19"},{"problem":21,"code":"#(loop [s %1 c %2 i 0] (if (= i c) (first s) (recur (rest s) c (inc i))))","user":"54cad1c2e4b057c6fda3a26b"},{"code":"(fn mynth [l n] (if (= n 0) (first l) (mynth (rest l) (dec n))))","problem":21,"user":"51c99769e4b07ef393169e79"},{"code":"(fn blah [x n]\n  (if (= n 0)\n  \t\t(first x) (blah (rest x) (- n 1))\n  \t)\t\n  )","problem":21,"user":"4fe8b307e4b07c9f6fd12c72"},{"code":"(fn [se n]\n   (first (drop n se)))","problem":21,"user":"51cacda3e4b068dadb8f2227"},{"problem":21,"code":"(fn [ls, n]\n  (loop [xs ls\n           x n]\n    (if (zero? x)\n      (first xs)\n      (recur (rest xs) (dec x))\n      ))\n  )","user":"60228147e4b0d5df2af22202"},{"problem":21,"code":"(fn [seq n]\n  (if (= n 0)\n    (first seq)\n    (recur (rest seq) (- n 1))\n    ))","user":"561f9110e4b064ca9f4b16ce"},{"problem":21,"code":"(fn [coll n]\n  (loop [m n c coll]\n    (if (> m 0)\n      (recur (dec m) (rest c))\n      (first c))))","user":"58582dade4b0f14aab7c8713"},{"problem":21,"code":"#(loop [xs %1 n %2]\n    (if (<= n 0)\n      (first xs)\n      (recur (rest xs) (dec n))))","user":"5b796594e4b047b03b203705"},{"code":"(fn n [s i] (if (= i 0) (first s) (n (rest s) (- i 1))))","problem":21,"user":"4f9fe06fe4b0dcca54ed6d3f"},{"problem":21,"code":"#(-> %1\n  vec\n  (get %2))","user":"5799b260e4b05b1deef9adc8"},{"code":"(fn myNth [x y]\n  (if (= y 0)(first x) (myNth (rest x) (- y 1))))","problem":21,"user":"537cf454e4b06839e8705e82"},{"code":"(fn my-nth [list n] (if (= n 0) (first list) (my-nth (rest list) (- n 1))))","problem":21,"user":"4e62294c535d8ccf87e9fe5f"},{"code":"(fn nth-element\n  [seq n]\n  (if (zero? n)\n    (first seq)\n    (recur (rest seq) (dec n))))","problem":21,"user":"53733312e4b06d7f452d9e0a"},{"problem":21,"code":"(fn [xs idx] (loop [xs xs idx idx] (if (= idx 0) (first xs) (recur (rest xs) (dec idx)))))","user":"56d5bc66e4b0ea9b8538f7c2"},{"problem":21,"code":"(fn [l i] get((vec l) i))","user":"53b15e65e4b047364c04448e"},{"problem":21,"code":"(fn [list n] (if (= 0 n) (first list) (recur (rest list) (+ n -1))))","user":"56e30cefe4b03a7c14b85a3d"},{"problem":21,"code":"(fn [coll i]\n  \"Destruction in constructor does not work for some reason :(\"\n  (if (> i 0) \n    (recur (rest coll) (dec i))\n    (first coll)\n  )\n)","user":"558fec41e4b0277789237666"},{"problem":21,"code":"(fn [vs n] (if (zero? n) (first vs) (recur (rest vs) (dec n))))","user":"5faef622e4b08cb800c85b05"},{"code":"(fn nth0 [x,n]\n  (if (= n 0) (first x)\n    (nth0 (rest x) (- n 1))))","problem":21,"user":"51b73a91e4b0d906fcd71d33"},{"problem":21,"code":"(fn r [x c] (if (> c 0) (r (rest x) (- c 1)) (first x)))","user":"59fec82be4b01bb0ae8afd14"},{"code":"(fn [coll index]\n  (first (drop index coll)))","problem":21,"user":"4f34fa21e4b0e243712b1ebc"},{"problem":21,"code":"(fn n-th\n  [data index]\n  (if (and (next data) (> index 0))\n    (recur (next data) (- index 1))\n    (first data)))","user":"55bd87ede4b01b9910ae29fe"},{"problem":21,"code":"(fn my-nth\n  [s, i]\n  (if (= 0 i)\n    (first s)\n    (my-nth (rest s) (- i 1)))\n)","user":"56ebfb93e4b04a395b9a042e"},{"problem":21,"code":"(fn [ls n]\n  (loop [i  0\n         lt ls]\n    (if (= i n)\n      (first lt)\n      (recur (inc i) (rest lt)))))","user":"5c9a5cf4e4b048ec896c5aad"},{"problem":21,"code":"(fn nth-element [seq n] (first (drop n seq)))","user":"5b5fb62be4b0c6492753e6f7"},{"code":"(fn [l n] (if (= 0 n) (first l) (recur (rest l) (- n 1))))","problem":21,"user":"52f702bae4b047fd55836fbe"},{"problem":21,"code":"(fn [x n] (loop [cnt n xx x] (if (zero? cnt) (first xx) (recur (dec cnt) (rest xx)) ) ))","user":"5a36405ee4b0ddc586f153e5"},{"code":"(fn nth2 [l n] (first (drop n l)))","problem":21,"user":"50a9504de4b07e35d68b27ae"},{"code":"; I come from Lisp!\n(fn mynth [seq num]\n  (if (> num 0) (mynth (rest seq) (- num 1)) (first seq)))","problem":21,"user":"4f9597e0e4b0dcca54ed6cd4"},{"code":"(fn [s idx] (first (last (split-at idx s))))","problem":21,"user":"4faa7f87e4b081705acca1f6"},{"code":"(fn [c x] (first (nthrest c x)))","problem":21,"user":"52dbf072e4b09f7907dd13c7"},{"code":"(fn foo [lst x] (if (= x 0) (first lst) (foo (rest lst) (- x 1))))","problem":21,"user":"4eaa47bc535d7eef30807309"},{"code":"(fn [x y]\n  (let [xs x n y]\n    (if (== 0 n)\n      (first xs)\n      (recur (rest xs) (dec n))\n    )\n  )\n)","problem":21,"user":"51897709e4b0288ada3dbdaa"},{"code":"(fn nth1 [coll index]\n  (loop [i index xs coll]\n    (if (< i 1)\n      (first xs)\n      (recur (dec i) (next xs)))))","problem":21,"user":"4e0d5a5a535d04ed9115e7b5"},{"code":"(fn my_nth [x y]\r\n  (if (= y 0)\r\n    (first x)\r\n    (my_nth (rest x) (- y 1))\r\n  )\r\n)","problem":21,"user":"504f3aede4b0a02f9cffde5d"},{"problem":21,"code":"#(loop [l %1 i %2] \n   (if-not (pos? i) \n     (first l) \n     (recur (rest l) (dec i))))","user":"59a2ba97e4b066c664927d2c"},{"problem":21,"code":"(fn f [x, y] (if (= y 0) (first x) (f (rest x) (- y 1))))","user":"57152731e4b07c98581c3ad0"},{"code":"(fn my-nth \n  ([c n] (my-nth c n 0))\n  ([c n x] (if (= n x)\n    (first c)\n    (my-nth (rest c) n (+ x 1)))))","problem":21,"user":"4fff00ede4b0678c553fc3fc"},{"code":"(fn [a b] (fnext (take-nth b a)))","problem":21,"user":"4e74e119535d7a570dd295bc"},{"problem":21,"code":"(fn [a b]\n  (if (= 0 b)\n    (first a)\n    (recur (rest a) (dec b))))","user":"598c5a0ee4b02b9968b84d03"},{"problem":21,"code":"(fn [l c]\n  (if (> (count l) c)\n    ((comp last take) (+ c 1) l)\n    nil))","user":"595fea04e4b066ee0a44b076"},{"problem":21,"code":"(fn [c n] (last (take (+ n 1) c)))","user":"5764056ae4b0994c1922fbe2"},{"code":"(fn [l, i] (last (take (+ i 1) l)))","problem":21,"user":"4e58dd23535d8a8b8723a298"},{"code":"(fn [coll n]\n  (if (zero? n) (first coll)\n    (recur (rest coll) (dec n))))","problem":21,"user":"4f0660ee535dcb61093f6c0d"},{"problem":21,"code":"(fn [xs n]\n  (loop [xs xs\n         n n]\n    (if (zero? n)\n      (first xs)\n      (recur (rest xs) (dec n)))))","user":"5b96c1f3e4b0c0b3ffbd4a80"},{"problem":21,"code":"(fn [x, n] (if (= 0 n) (first x) (recur (rest x) (- n 1))))","user":"53dbc8bee4b094d41abdfef5"},{"problem":21,"code":"(fn get-nth [list n]\n   (if (= n 0)\n     (first list)\n     (get-nth\n      (rest list)\n      (- n 1))))","user":"59273eefe4b072a2710fcec6"},{"problem":21,"code":"#(last (take (inc %2)  %1))","user":"5ec21ef0e4b00a66d4a95299"},{"code":"(fn [s n] \n  (if (= 0 n) \n    (first s)\n    (recur (rest s) (dec n))))","problem":21,"user":"4de18de7535d08e6dec9fde8"},{"problem":21,"code":"(fn [the-list remaining-skips]    \n  (if (= 0 remaining-skips)\n    (first the-list)\n    (recur (rest the-list) (- remaining-skips 1))))","user":"55c313a0e4b0e31453f64986"},{"code":"(fn [s n] (last (take (+ 1 n) s)))","problem":21,"user":"4e6a4954535d8ccf87e9fec0"},{"problem":21,"code":"(fn [collection i] (get (vec collection) i))","user":"598210a6e4b021a7a535fdf7"},{"code":"(fn get-nth \n  ([xs c] (get-nth xs c 0) )\n  ([xs c n] (cond (= n c) (first xs) :else (recur (rest xs) c (inc n)))))","problem":21,"user":"50e647cde4b09e4d78444226"},{"problem":21,"code":"(fn [seq num] (first (drop num seq)))","user":"550851cde4b021ccfedb96b7"},{"problem":21,"code":"(fn [seqsrc, ord] (if (= ord 0) (first seqsrc) (recur (rest seqsrc), (- ord 1))))","user":"5736e12ee4b0cd1946bd103a"},{"code":"(fn f[x,y] (if(= 0 y) (first x) (f(rest x)(- y 1))))","problem":21,"user":"4ea53dc2535d7eef308072d1"},{"problem":21,"code":"(fn [s n](if (zero? n) (first s) (recur (rest s)( dec n))))","user":"5e85163be4b09a7a73c8bbd0"},{"problem":21,"code":"#(loop [coll %1 n %2] \n   (if (= 0 n) \n     (first coll) \n     (recur (rest coll) (dec n))))","user":"57607706e4b08062f99a4e97"},{"code":"(fn [lst n]\r\n  (if (= n 0)\r\n    (first lst)\r\n    (recur (rest lst) (dec n))))","problem":21,"user":"500159b3e4b0678c553fc419"},{"code":"(fn [aseq i] (if (= i 0) (first aseq) (recur (rest aseq) (dec i))))","problem":21,"user":"4f085a31535dcb61093f6c35"},{"code":"(fn nth-elem [list, index]\n  (if (= index 0)\n    (first list)\n    (nth-elem (rest list) (- index 1))))","problem":21,"user":"4f4f08c8e4b03ad3f0c10cd8"},{"code":"(fn ! [li, n] (if (= n 0) (first li) (! (rest li) (- n 1))))","problem":21,"user":"51715389e4b0d70c8bbbf23c"},{"problem":21,"code":"(fn idx [x y] \n  (if (= y 0)\n    (first x)\n    (idx (rest x) (- y 1))))","user":"542c2de0e4b0dad94371f29f"},{"problem":21,"code":"(fn  [col k]\n    (if (= 0 k)\n      (first col) \n      (recur (rest col) (dec k))))","user":"543154e9e4b0dad94371f2e5"},{"code":"(fn [l, n] \n  (loop [n n\n      l l]\n    (if (= n 0)\n        (first l)\n        (recur (dec n)(next l))\n    )))","problem":21,"user":"509b152be4b0412cdea6eb1e"},{"problem":21,"code":"(fn [sequence index]\n  (let [vectored (vec sequence)]\n    (get vectored index)))","user":"57c4a231e4b05aa3c4741cd5"},{"problem":21,"code":"(fn [coll x]\n  (loop [n 0 c coll]\n    (if (< n x)\n      (recur (inc n) (rest c))\n      (first c))))","user":"5fea32f3e4b05ac5b16ea1aa"},{"problem":21,"code":"(fn [coll in]\n  (loop [c coll\n         index in]\n  \t(let [head (first c)\n    \t    tail (rest c)]\n \t   (if (= index 0)\n    \t  head\n      \t\t(recur tail (- index 1))))))","user":"520e6d77e4b0101e4be6fcd5"},{"code":"(fn [col n]\n  (if (zero? n)\n    (first col)\n    (recur (rest col) (dec n))))","problem":21,"user":"4fead955e4b0140c20fb9c10"},{"code":"(fn find-nth [x y] \r\n    (if (zero? y)\r\n\t      (first x)\r\n\t      (find-nth (rest x) (- y 1))))","problem":21,"user":"4e370a04535deb9a81d77f37"},{"problem":21,"code":"(fn [coll n]\n  (loop [coll coll \n         n n \n         idx 0]\n    (if (= idx n)\n      (first coll)\n      (recur (rest coll) n (inc idx)))))","user":"58bfa57ae4b021aa9917ecd8"},{"problem":21,"code":"(fn indexOf [objs index] (if (zero?  index) (first objs) (indexOf (rest objs) (dec index))))","user":"5edc16e1e4b0c7845d86b0f1"},{"problem":21,"code":"(fn [a n] (first(drop n a)))","user":"544ff52fe4b0e3978000699b"},{"problem":21,"code":"(fn nthel [l n] ((vec l) n))","user":"5eec1001e4b07c55ae4a0502"},{"problem":21,"code":"(fn [ls n] \n  (if (= n 0) (first ls)\n  \t(recur (rest ls) (dec n))))","user":"5f15b1e2e4b091ba50b4dbbd"},{"problem":21,"code":"#(loop [ls %1\n         n %2\n         result (first ls)]\n    (if (>= n 0)\n      (recur (drop 1 ls) (dec n) (first ls))\n      result\n      )\n    )","user":"5e5f2c17e4b0fd0acd158678"},{"code":"(fn [c i] (first (drop i (seq c))))","problem":21,"user":"528fdb8ee4b0239c8a67aefe"},{"problem":21,"code":"(fn [i-seq n] (if (= n 0) (first i-seq) (recur (rest i-seq) (dec n))))","user":"589c2e3fe4b00487982d5357"},{"code":"(fn [xs n]\n  (if (= n 0)\n    (first xs)\n    (recur (rest xs) (- n 1))))","problem":21,"user":"4eca5391535d6d7199dd3704"},{"code":"(fn [l n]\n  (if (zero? n) (first l) (recur (rest l) (dec n)))\n)","problem":21,"user":"4ed4673f535d10e5ff6f52ca"},{"problem":21,"code":"(fn mth [s k]\n  (if (= k 0)\n    (first s)\n    (mth (rest s) (- k 1))))","user":"597a4277e4b02382a38ad1e2"},{"problem":21,"code":"(fn [seq, n] ((vec seq) n))","user":"58d96bdce4b0a4d5acaab638"},{"code":"(fn [x n] (last (drop-last (- (count x) n 1) x)))","problem":21,"user":"514282c8e4b0b50abeb46b38"},{"problem":21,"code":"(fn [items n]\n  (loop [elms items\n         i 0]\n    (if (= i n)\n      (first elms)\n      (recur (rest elms) (inc i)))))","user":"54e9ac6be4b024c67c0cf834"},{"problem":21,"code":"(fn foo [xs r] (if (= r 0) (first xs) (foo (next xs) (- r 1))))","user":"54453f83e4b032a45b86939a"},{"problem":21,"code":"(fn n-th [coll n] (if (zero? n) (first coll) (n-th (rest coll) (dec n))))","user":"57ef7f0ee4b0bfb2137f5bd9"},{"problem":21,"code":"(fn [coll n] \n  (loop [coll coll\n         n n]\n    (if (= n 0) \n      (first coll)\n      (recur (rest coll)\n             (dec n))\n      )\n    )\n  )","user":"52fd35eee4b047fd55837029"},{"problem":21,"code":"(fn\n\t[lst n]\n\t(->>\n\t\t(map-indexed list lst)\n\t\t(filter #(= (first %) n))\n\t\t(mapcat #(rest %))\n\t\t(first)))","user":"57f81544e4b0d3187e900917"},{"problem":21,"code":"(fn [col index] \n  (if (= index 0) (first col) \n    (recur (rest col) (dec index))))","user":"59987f02e4b07157cc8daae7"},{"problem":21,"code":"#(loop[l %1, n %2, r 0]\n       (if (nil? l)\n         nil\n         (if (= n r ) (first l) (recur (rest l) n (inc r)) ) ))","user":"5c4ab449e4b0f9f7a8770e57"},{"problem":21,"code":"(fn[x y](first(reverse(drop-last (-(- (count x) y)1) x))))","user":"53ada652e4b047364c04446d"},{"problem":21,"code":"(fn [s n](last (take (+ n 1) s)))","user":"58408643e4b089d5ab817deb"},{"code":"(fn myNth [a b]\n    (if (= b 0)\n        (first a)\n      (myNth (rest a) (- b 1))))","problem":21,"user":"53372d32e4b0e30313ee6c86"},{"problem":21,"code":"(fn [coll n]\n  (loop [c coll\n         i 0]\n    (if (= i n)\n      (first c)\n      (recur (rest c) (inc i)))))","user":"5dae7b05e4b0f8c104ccfc89"},{"code":"(fn [myseq ind]\n            (first (drop ind myseq)))","problem":21,"user":"5232d047e4b035af41902a95"},{"problem":21,"code":"(fn element-n\n  ([col n] \n    (if (= n 0)\n      (first col)\n      (element-n (rest col) (dec n)))))","user":"5b966c66e4b0c0b3ffbd4a78"},{"code":"(fn [l n] (first (reverse (take (inc n) l))))","problem":21,"user":"4ee7fe83535d93acb0a66874"},{"problem":21,"code":"(fn\n  [values position]\n  (if (= position 0)\n    (first values)\n    (recur (rest values) (dec position))))","user":"55ad2379e4b03311e7b732a1"},{"code":"(fn nth22 [coll index]\n  (loop [coll coll index index] \n    (if (zero? index)\n      (first coll)\n      (recur (rest coll) (dec index)))))","problem":21,"user":"5252f8ede4b0541d1855b8e0"},{"code":"(comp first reverse #(take (inc %2) %1))","problem":21,"user":"5270d559e4b03e8d9a4a73c5"},{"problem":21,"code":"(fn pos [coll n] (if (> n 0) (pos (next coll) (- n 1)) (first coll)))","user":"5510d948e4b06e50f9beb18d"},{"problem":21,"code":"(fn [sq, ix] \n  (do \n    (if (= ix 0) (first sq) \n      (recur (rest sq) (- ix 1))\n      )\n    )\n  )","user":"5820cc61e4b04b46fc4b0f61"},{"code":"(fn\n  [coll pos]\n  (loop [el (first coll)\n         tail (rest coll)\n         iter pos]\n    (if (= iter 0)\n      el\n      (recur (first tail) (rest tail) (- iter 1)))))","problem":21,"user":"52fdb82ae4b047fd55837031"},{"problem":21,"code":"(fn [r n]\n  (let [n (inc n)]\n    (loop [cur-r r\n           cur-n 1]\n      (if (= cur-n n)\n        (first cur-r)\n        (recur (rest cur-r) (inc cur-n))))))","user":"55be4fa6e4b01b9910ae2a08"},{"code":"(fn [ss n]\n  (loop [i n s ss]\n    (if (nil? s) nil\n      (if (zero? i) (first s)\n        (recur (dec i) (rest s))))))","problem":21,"user":"4e26e8b4535deb9a81d77ef6"},{"code":"(fn [c n] (first (drop n c)))","problem":21,"user":"4f3ec266e4b0e243712b1f8c"},{"problem":21,"code":"(fn [lst number]\n  (loop [l lst\n         n number]\n    (if (zero? n)\n      (first l)\n      (recur (rest l) (- n 1)))))","user":"55c68089e4b0e31453f649c4"},{"problem":21,"code":"(fn [xs n]\n  (cond\n   (zero? n) (first xs)\n   :else (recur (rest xs) (dec n))))","user":"5df4cb3be4b03c219ef1a381"},{"code":"(fn f [coll n]\n  (cond\n   (empty? coll)\n     nil\n   (= 0 n)\n     (first coll)\n   :else\n     (f (rest coll) (dec n))))","problem":21,"user":"513f0565e4b051389b345b3b"},{"problem":21,"code":"(fn [ls init] (\n  :elem (reduce (fn [acc curr]  (\n    if (= -1 (:n acc)) acc {:elem curr, :n (dec (:n acc))} \n  )) {:elem 0, :n init} ls)\n))","user":"57915ba4e4b0ebec4cfb75ba"},{"problem":21,"code":"(fn nth-x [x y]\n  (loop [clo x  i 0]\n    (if (not= y i)\n      (recur (rest clo) (inc i))\n      (first clo))))","user":"5be79b5be4b0f319e2d7ec5a"},{"problem":21,"code":"(fn [ls x] \n  (loop [index 0 lst ls]\n    (if (= x index)\n      (first lst)\n      (recur (inc index) (rest lst)))))","user":"56db8fbde4b0ea9b8538f80c"},{"problem":21,"code":"(fn myNth [x,y]\n  (if (= y 0)\n    (first x)\n    (myNth (rest x) (dec y))))","user":"551b8e2ae4b07993ea3788d3"},{"problem":21,"code":"(fn [x y] (last (take (+ y 1) (first (iterate rest x)))))","user":"5acb7131e4b0e27600da77f4"},{"problem":21,"code":"(fn [lst n] \n  (if (= 0 n)\n    (first lst)\n    (recur (rest lst) (- n 1))))","user":"5d398d4de4b01671435dbd53"},{"code":"(fn nth* [l c]\n  (if (zero? c)\n    (first l)\n    (recur (rest l) (dec c))))","problem":21,"user":"4ed292ac535d44c135fd68d9"},{"problem":21,"code":"#(loop [s %1 n %2] (if (= n 0) (first s) (recur (rest s) (- n 1))))","user":"56c9693be4b0ed865f9758dd"},{"problem":21,"code":"(fn [sek arg]\n   (get (into [] sek) arg))","user":"5d94a878e4b0d3f9b434ad29"},{"problem":21,"code":"(fn nr [l pos]\n  (loop [status pos menge l]\n    (if (= 0 status)\n      (first menge)\n      (recur (dec status) (rest menge)))))","user":"53b42b9ce4b047364c0444b3"},{"code":"(fn my-nth [the-list n]\n  (if (= n 0)\n      (first the-list)\n      (my-nth (rest the-list) (- n 1))))","problem":21,"user":"4fe930e9e4b0547ebccb244d"},{"problem":21,"code":"(fn enth \n  [s n]\n  (if (= n 0)\n    (first s)\n    (recur (rest s) (dec n))))","user":"55fee436e4b00f4cabc57659"},{"code":"(fn [l x] (loop [seq l, i x]\n  (if (= i 0) (first seq) (recur (rest seq) (dec i)))))","problem":21,"user":"4fc0221ce4b081705acca322"},{"problem":21,"code":"(fn get-nth [s n] (last (take (inc n) s))  )","user":"54797964e4b0c51c1f4d72c6"},{"problem":21,"code":"(fn f [where what] (if (= 0 what) (first where)\n                     (f (rest where) (- what 1))))","user":"54137308e4b01498b1a719e0"},{"code":"(fn nthElement [x n]\n  (if (not= n 0)\n    (nthElement (rest x) (- n 1))\n    (first x)\n  )\n)","problem":21,"user":"4ea08b30535d7eef308072a5"},{"problem":21,"code":"(fn m [coll n] \n   (if (> n 0)\n     (m (rest coll) (dec n))\n     (first coll)))","user":"50ec409ce4b04edc33777045"},{"problem":21,"code":"(fn my [c i] (if (zero? i) (first c)(let [y (dec i)r (rest c)] (recur r y))))","user":"5a289b4be4b07f18be40aa6d"},{"problem":21,"code":"(fn my-nth [s n]\n  (if (vector? s)\n    (s n)\n    (first ((apply comp (take n (repeat rest))) s))\n    ))","user":"589e704ae4b02bd94d917e5e"},{"problem":21,"code":"(fn [seq n]\n  (if (> n 0)\n    (recur (rest seq) (dec n))\n    (first seq)))","user":"6023a3abe4b0d5df2af22212"},{"code":"(fn [l n] (if (= n 0)\n            (first l)\n            (recur (rest l) (dec n))))","problem":21,"user":"52d17182e4b0d9f9285948dd"},{"code":"(fn [x y] \n  (loop [lst x idx y] \n    (if (<= (count lst) (- (count x) idx) )\n        (first lst) \n        (recur (rest lst) idx))))","problem":21,"user":"4e9ff8d0535d7eef3080729c"},{"problem":21,"code":"(fn nthel [s index] (first (nthrest s index)))","user":"587cebf3e4b01531a375eb28"},{"code":"(fn [s n] \n  (if (zero? n) \n    (first s)\n    (recur (next s) (- n 1))))","problem":21,"user":"538d4926e4b0b51d73faae6a"},{"problem":21,"code":"(fn\n  [coll index]\n  (loop [head (first coll)\n         tail (rest coll)\n         last-index (dec (count coll))\n         current-index (- last-index (count tail))]\n    (if (= current-index index)\n      head\n      (recur (first tail) (rest tail) last-index (inc current-index)))))","user":"5f9c3f63e4b0715f5002d820"},{"code":"(fn [xs n] (last (take (+ 1 n) xs)))","problem":21,"user":"4e2e94bb535deb9a81d77f0c"},{"problem":21,"code":"(fn n-th [ls n]\n  (if (== n 0)\n    (first ls)\n    (n-th (rest ls) (- n 1))\n  )  \n)","user":"5602cbe5e4b04bb52996e1a9"},{"problem":21,"code":"#(->(into [] %1)(get %2))","user":"57a99d3fe4b0a96607956231"},{"code":"(fn xth [x n]\n  (if (= n 0)\n    (first x)\n    (xth (rest x) (- n 1))))","problem":21,"user":"50fc3589e4b0d10d794c19f3"},{"problem":21,"code":"(fn [s n] (loop [s s\n                     n n]\n              (let [x (first s)\n                    r (rest s)\n                   ]\n                (if (= n 0)\n                  x\n                  (recur r (- n 1))))))","user":"5cd99946e4b05ee0cb311706"},{"problem":21,"code":";(fn [col pos] (get (into [] col) pos))\n(fn [s n] (first (drop n s)))","user":"5839efeae4b089d5ab817d47"},{"code":"(fn [x y] (rand-nth x))","problem":21,"user":"4fa4f2f2e4b081705acca1aa"},{"code":"(fn accessor [x n]\n  (if (= n 0)\n    (first x)\n    (accessor (rest x) (dec n))))","problem":21,"user":"4f29e66fe4b0d6649770a035"},{"problem":21,"code":"(fn [xs n]\n  (loop [x xs pos n]\n    (cond (= pos 0) (first x)\n         :else\n         (recur (rest x)(dec pos)))))","user":"4e6a23d0535d8ccf87e9fea0"},{"problem":21,"code":";Problem #21\n(fn my-nth [lst n] \n  (if (= n 0) \n  (first lst) \n  (my-nth (rest lst) (- n 1))))","user":"54f0c18ee4b024c67c0cf8a4"},{"problem":21,"code":"#(if (> %2 0)\n    (recur (rest %) (- %2 1))\n    (first %))\n;; #(drop %2 %)","user":"54b5d79ae4b05787c3b163ad"},{"problem":21,"code":"(fn [c n]\n  (let [n1 (- (.size c) n)\n    f1 (fn [c n] \n         (if (= (.size c) n)\n           (first c)\n           (recur (rest c) n)))]\n    (if (< (.size c) n)\n      nil\n      (f1 c n1)))\n  )","user":"5a7460a0e4b0512ff01cdaaf"},{"problem":21,"code":"(fn Z [s, n] \n  (if (= n 0) (first s) (Z (rest s) (dec n))))","user":"5996709ee4b0b211ea3aaaf1"},{"code":"(fn [col ind] (first (drop ind col)))","problem":21,"user":"50bf74c7e4b0ffd967a66cc0"},{"problem":21,"code":"(fn [coll n]\n  (loop [coll coll\n         n n\n         acc 0]\n    (if (= n acc)\n      (first coll)\n      (recur (rest coll) n (inc acc)))))","user":"55b7f263e4b01b9910ae29b4"},{"problem":21,"code":"(fn f [xs i] (if (= i 0) (first xs) (f (rest xs) (- i 1))))","user":"5478e57de4b0c51c1f4d72c1"},{"problem":21,"code":"#(if (= %2 0)\n      (first %1)\n      (recur (rest %1) (- %2 1)))","user":"5908882de4b047aa04b19979"},{"problem":21,"code":"(fn [vect idx] \n  (if (> idx 0) \n    (recur (rest vect) (dec idx))\n    (first vect)))","user":"54d0ceb2e4b0e8a36923e5d0"},{"code":"(fn [array n]\n    ((fn [top remaining]\n       (if (= remaining 0)\n           (first top)\n           (recur (rest top) (dec remaining))))\n         array n))","problem":21,"user":"4f72f71be4b07046d9f4f03d"},{"code":"(fn [coll n]\n  (first\n   (loop [i n\n          coll coll]\n     (if (> i 0)\n       (recur (dec i) (rest coll))\n       coll))))","problem":21,"user":"511688d5e4b0b3e208dba05a"},{"problem":21,"code":"(fn [s pos]\n  (if (= 0 pos) \n    (first s)\n    (recur (rest s) (- pos 1))))","user":"5a0b9fc0e4b04bbd27e6d992"},{"problem":21,"code":"(fn abc [x y]\n  (loop [val x i y]\n    (if (= i 0)\n      (first val)\n      (recur (rest val) (dec i))\n    )\n  ))","user":"5515ab42e4b055c2f668d4ec"},{"problem":21,"code":"(fn nnth [lst el] (if (= el 0) (first lst) (nnth (rest lst)(dec el))))","user":"53ef78bee4b0742d9025b0cd"},{"code":"(fn [x y] (.get x y))","problem":21,"user":"4f0402ce535dcb61093f6b8f"},{"code":"(fn my-nth [l n]\n  (if (= n 0)\n        (first l)\n        (my-nth (rest l) (- n 1))))","problem":21,"user":"4f047902535dcb61093f6bcc"},{"code":"(fn [result x]\n  (if (zero? x)\n    (first result)\n    (recur (rest result) (dec x))))","problem":21,"user":"51da2dcae4b02ceefd94775f"},{"problem":21,"code":"(fn [elems idx]\n  (loop [i 0 remaining elems]\n    (if (= i idx)\n      (first remaining)\n      (recur (+ i 1) (rest remaining)))))","user":"5f2f5cdee4b033932238a67f"},{"code":"#(first (first (rest (split-at %2 %1))))","problem":21,"user":"4e2db2da535deb9a81d77f0a"},{"problem":21,"code":"(fn elem-at\n  [xs n]\n  (if (zero? n)\n    (first xs)\n    (elem-at (rest xs) (dec n))))","user":"5c0e58bfe4b01240ff567140"},{"problem":21,"code":"(fn [arr n]\n  (loop [i 0 a arr]\n    (if(= i n)\n      (first a)\n      (recur (inc i) (rest a) ))))","user":"53f152bce4b0742d9025b0dc"},{"code":"(fn [l n]\r\n    (loop [mylist l cnt n]\r\n      (if (= cnt 0)\r\n        (first mylist)\r\n        (recur (rest mylist) (dec cnt)))))","problem":21,"user":"4f039524535dcb61093f6b2c"},{"problem":21,"code":"(fn [val place]\n  (last (take (+ place 1) (seq val) )))","user":"4f29e69ae4b0d6649770a036"},{"problem":21,"code":"(fn [data i] (last (take (+ i 1) data)))","user":"542130cee4b01498b1a71aae"},{"code":"(fn find-nth [collection index] \n  (first (drop index collection))\n  )","problem":21,"user":"513486bde4b0230e9f713b41"},{"problem":21,"code":"(fn my-nth [coll n]\n  (if (zero? n)\n    (first coll)\n    (recur (rest coll) (- n 1))))","user":"52127b94e4b0d32679a50639"},{"code":"(fn [ls n] ((comp first drop) n ls) )\n\n;(fn [ls n] ((vec ls) n))\n\n;(fn [ls n] \n;  (loop [rls ls index 0] \n;    (if (= index n) \n;      (first rls)\n;      (recur (rest rls) (+ index 1)))))","problem":21,"user":"52f3568fe4b05e3f0be25f0e"},{"problem":21,"code":"(fn [stuff number] (last (take (inc number) stuff)))","user":"55b544e2e4b01b9910ae2986"},{"problem":21,"code":"(fn [xs n] (loop [cnt n, elements xs]\n             (if (zero? cnt)\n                 (first elements)\n                 (recur (dec cnt) (rest elements)))))","user":"548af5b5e4b0e286459a11f8"},{"problem":21,"code":"(fn my-pen [myl num]\n  (cond\n   (= 0 num) (first myl)\n   :else (my-pen (rest myl) (dec num))\n   ))","user":"507ee076e4b06ce648bcdbfc"},{"problem":21,"code":"(fn [coll n]\n  (loop [pos n\n         c coll]\n    (if (zero? pos)\n      (first c)\n      (recur (dec pos) (rest c)))))","user":"58f0c5a3e4b056aecfd47df8"},{"problem":21,"code":"(fn nth-el [seqq el] (get (vec seqq) el))","user":"5e380e72e4b01d43a70e8db0"},{"problem":21,"code":"(fn [l i]\n  (if (zero? i)\n      (first l)\n      (recur (rest l) (dec i))))","user":"56ec3a97e4b04a395b9a0433"},{"code":"(fn [x idx]\n\t(if (= idx 0) \n\t\t\t(first x) \n\t\t\t(recur (rest x) (dec idx))))","problem":21,"user":"51794ec2e4b0684c1c981a45"},{"problem":21,"code":"(fn [x y]\n   ((into [] x) y)   \n   )","user":"58d5c245e4b03c36ff7e5964"},{"code":"(fn [xs y]\n  (first (drop y xs))\n )","problem":21,"user":"51d07a8be4b0e42293a2257e"},{"code":"(fn nth2 [x n] (if (= n 0) (first x) (recur (rest x) (- n 1))))","problem":21,"user":"53a2ec2be4b0f1fc74538830"},{"code":"(fn getN [li, n] \n     (if (= n 0) \n       (first li)\n\t\t(getN (rest li) (- n 1))))","problem":21,"user":"515dd029e4b0c89ed0914af6"},{"problem":21,"code":"(fn [seq n] (if (== n 0) (first seq) (recur (rest seq) (- n 1))))","user":"5fef5c6de4b05ac5b16ea1d8"},{"problem":21,"code":"(fn [input n]\n  (loop [cnt n remain input]\n    (if (= cnt 0)\n      (first remain)\n      (recur (dec cnt) (drop 1 remain)))))","user":"5b068e8ce4b0cc2b61a3bd99"},{"problem":21,"code":"(fn spec-nth [Seq N]\n\t(if (= N 0)\n    \t(first Seq)\n      \t(spec-nth (rest Seq) (- N 1))\n      )\n  )","user":"53dbd0abe4b094d41abdfef7"},{"code":"#(last(take(+ 1%2)%))","problem":21,"user":"4dd66da7535d2dad7130b5c8"},{"problem":21,"code":"(fn [xs n]\n  (if (and (seq xs) (pos? n))\n    (recur (rest xs) (dec n))\n    (first xs)))","user":"5b449f3ee4b02d533a91bc47"},{"problem":21,"code":"(fn f [s n] \n  (if (= 0 n)\n    (first s)\n    (f (rest s) (dec n))\n    ))","user":"5e98e338e4b0157ca96647db"},{"problem":21,"code":"(fn [l i] ((vec l )i) )","user":"5fd69363e4b05ac5b16ea10e"},{"code":"(fn [coll n]\n\t(cond (< n 0) nil\n\t\t  (and (> n 0) (seq coll)) (recur (rest coll) (dec n))\n\t\t  :else (first coll)))","problem":21,"user":"52ea764ee4b09f7907dd14be"},{"problem":21,"code":"(fn [xs m] (last (take (+ m 1) xs)))","user":"5d767902e4b02e6b30c93526"},{"code":"(fn [lst n] (if (zero? n) (first lst) (recur (rest lst) (dec n))))","problem":21,"user":"510db6cde4b078ea71921145"},{"problem":21,"code":"(fn [xs n]\n    (if (= n 0)\n      (first xs)\n      (recur (rest xs) (- n 1))))","user":"57e70a99e4b0bfb2137f5af8"},{"code":"(fn [coll i]\n  (if (= i 0)\n    (first coll)\n    (recur (next coll) (dec i))))","problem":21,"user":"4e31a101535deb9a81d77f1d"},{"problem":21,"code":"(fn [lst ndx](first (take-last (+ 1 ndx) (reverse lst))))","user":"562814dce4b00e49c7cb47de"},{"code":"(fn [list idx] ((zipmap (range (count list)) list) idx))","problem":21,"user":"528e1f30e4b0239c8a67aed4"},{"problem":21,"code":"(fn [sq n] (loop [remaining sq m 0] (if (= n m) (first remaining) (recur (rest remaining) (inc m)))))","user":"56bb9ccce4b0f26550335959"},{"problem":21,"code":"(fn get-nth [x n]\n  (cond \n   (= n 0) (first x)\n   :else (get-nth (rest x) (- n 1))))","user":"5ae7691ae4b0837691e92caa"},{"problem":21,"code":"(fn [myseq n] (first (nthnext myseq n)))","user":"5425d00ee4b01498b1a71b12"},{"problem":21,"code":"(fn [x n]\n  (if (pos? n)\n   (recur (rest x) (dec n))\n   (first x)))","user":"59089229e4b047aa04b1997c"},{"code":"(fn [xs n]\n  (first (drop n xs)))","problem":21,"user":"4eaf0d91535d7eef3080732e"},{"problem":21,"code":"(fn my-nth [seqs idx]\n  (if (= 0 idx) \n    (first seqs)\n    (my-nth (rest seqs) (dec idx))))","user":"5b50012ce4b02d533a91bce1"},{"problem":21,"code":"(fn take-last [col index] (first (nthrest col index)))","user":"58daae01e4b0a4d5acaab664"},{"problem":21,"code":"(fn nth-elem [a-seq pos] \n  (if (= pos 0) \n    (first a-seq) \n    (nth-elem (rest a-seq) (dec pos))))","user":"55995fa7e4b031d6649c9ba9"},{"code":"(fn [seq n] (if (= n 0) (first seq) (recur (next seq) (dec n))))","problem":21,"user":"4e951f44535dbda64a6f6b30"},{"problem":21,"code":"(fn [coll num] (get (vec coll) num))","user":"60af5fe2e4b0245e5b1b35c0"},{"problem":21,"code":"(fn nth2 [lst n]\n  (if (= n 0)\n    (first lst)\n    (nth2 (rest lst) (- n 1))))","user":"504e2d18e4b0f6ff3350c47a"},{"problem":21,"code":"#(loop [n %2 elems %]\n   (if (= n 0)\n     (first elems)\n     (recur (dec n) (next elems))))","user":"5563ff8ae4b0c656e3ff17fa"},{"code":"(fn [s pos]\n  (if (zero? pos)\n    (first s)\n    (recur (next s) (dec pos))))","problem":21,"user":"53480973e4b084c2834f4a52"},{"problem":21,"code":"(fn [x y]\n\t(if (= y 0)  \n      (first x)\n      (recur (rest x) (- y 1))\n      )\n  )","user":"53c90510e4b00fb29b2212b6"},{"code":"(fn xth [s n] (if (= n 0) (first s) (xth (rest s) (- n 1))))","problem":21,"user":"4f280840e4b0d6649770a010"},{"code":"(fn nth-element\n  [xs n]\n  (if (= 0 n)\n    (first xs)\n    (nth-element (rest xs) (- n 1))))","problem":21,"user":"512c0000e4b03a42b6300231"},{"problem":21,"code":"(fn nth-element [listname n] \n   (loop [xs listname y n]\n     (if (< y 1)\n       (first xs)\n       (recur (drop 1 xs) (- y 1)))))","user":"5c8aa1b5e4b048ec896c5959"},{"code":"(fn [l p] (.get l p))","problem":21,"user":"4fc524aae4b081705acca37e"},{"problem":21,"code":"(fn custom-nth [sequence n] \n  (if (= 0 n)\n    (first sequence)\n    (custom-nth (rest sequence) (dec n))))","user":"542a8d07e4b01498b1a71b43"},{"problem":21,"code":"(fn nth-element [coll index]\n  (get (vec coll) index)\n  )","user":"5c51d700e4b0fb8c5ffd99d1"},{"problem":21,"code":"(fn [coll' n]\n\t(let [func (fn iter [coll cnt]\n\t\t(if (= cnt n)\n\t\t\t(first coll)\n\t\t\t(iter (rest coll) (inc cnt))))]\n\t(func coll' 0)))","user":"5583888ae4b05c286339e117"},{"code":"(fn f [l n] (if (= n 0) (first l) (f (rest l) (- n 1))))","problem":21,"user":"4f369deae4b0e243712b1ecb"},{"problem":21,"code":"(fn [s n](loop [li s nu n](if(> nu 0)(recur (rest li)(dec nu))(first li))))","user":"590d0b3fe4b047aa04b199f9"},{"problem":21,"code":"(fn [col idx]\n   (if (= idx 0) (first col)\n     (recur (rest col) (dec idx)))\n   \n  )","user":"5beebdb7e4b0a6d31fed2132"},{"code":"(fn my-n [l n] (if (= 0 n) (first l) (my-n (rest l) (- n 1))))","problem":21,"user":"4e7023f8535d5021c1a89631"},{"problem":21,"code":"(fn [li x] \n  (loop [newl li\n         i 0]\n    (if (= i x)\n      (first newl)\n     (recur (rest newl) (inc i))\n    )\n   )\n)","user":"588fb3a7e4b00487982d51b9"},{"code":"(fn [ x y] (first (reverse (take (+ y 1) x))))","problem":21,"user":"4e977eb4535dbda64a6f6b56"},{"problem":21,"code":"(fn blah [s i]\n    (if (= i 0) \n          (first s)\n          (blah (rest s) (- i 1))))","user":"55096255e4b06e50f9beb116"},{"problem":21,"code":"(fn place [x y]\n  (if (= (count x) (inc y))\n    (last x)\n    (place (drop-last x) y)))","user":"5ac6f7f7e4b0e27600da777a"},{"problem":21,"code":"#(->> (nthnext %1 %2) first)","user":"56e9555fe4b04a395b9a03f7"},{"problem":21,"code":"(fn mynth ([l i] (mynth l i 0) ) ([l i sum] (if (= i sum) (first l) (mynth (rest l) i (+ 1 sum))) ) )","user":"5c704f94e4b0fca0c162277d"},{"code":"(fn [s i] (loop [s s i i]\n            (if (zero? i) \n              (first s)\n              (recur (rest s) (dec i))\n            )))","problem":21,"user":"5259a16ee4b0cb4875a45ce1"},{"code":"(fn n-th\n  \t([s n] (if (= n 0) (first s) (n-th (rest s) (- n 1)))))","problem":21,"user":"4f805b4be4b033992c121bf2"},{"code":"(fn [elements n] (first (drop n elements)))","problem":21,"user":"5277c221e4b03e8d9a4a750f"},{"code":"(fn nt [x, y]\n  (last (take (+ y 1) x))\n)","problem":21,"user":"4e8b73ab535d65386fec211f"},{"problem":21,"code":"#(loop [input-list %1 target %2]\n(if (= target 0)\n(first input-list)\n(recur (rest input-list) (dec target))\n))","user":"585ad75be4b0f14aab7c8756"},{"problem":21,"code":"(fn [s x] \n  \n  (first (drop x s))\n  \n  )","user":"515d414be4b00901442db1db"},{"problem":21,"code":"(fn nth2 [l i] (if (= 0 i) (first l) (nth2 (next l) (- i 1))))","user":"5982478de4b021a7a535fdfd"},{"code":"(fn [x n] (if (= n 0) (first x) (recur (next x) (- n 1))))","problem":21,"user":"4f084e44535dcb61093f6c34"},{"problem":21,"code":"#(last (take ( + %2 1) %1))","user":"6074e1ade4b069485764de4e"},{"code":"(fn [s x]\n  (if (= x 0)\n    (first s)\n    (recur (rest s) (- x 1))))","problem":21,"user":"51113eb8e4b09ff0d31c7ca9"},{"problem":21,"code":"#(loop [my-seq %1 n %2] (if (= n 0) (first my-seq) (recur (rest my-seq) (- n 1))))","user":"5c228b51e4b07e362c23058c"},{"problem":21,"code":"(fn [coll n] (-> (take (+ n 1) coll) last))","user":"551f1781e4b08d5046aa8a52"},{"code":"(fn lmd [a,i]\n  (if (> i 0)\n    (lmd (rest a) (dec i))\n    (first a)))","problem":21,"user":"506fd0afe4b07bd6ad9b9f23"},{"problem":21,"code":"#((vec %1) %2)  ; probably should do loop/recur in spirit of problem...","user":"5552780ce4b0deb715856df4"},{"problem":21,"code":"(fn\n  [coll n]\n  (last (take (+ n 1) (seq coll))))","user":"56f6cabce4b08e7d20b96828"},{"code":"(fn [coll i]\n  (if (= 0 i)\n    (first coll)\n    (recur (rest coll) (dec i))))","problem":21,"user":"527b9beee4b03e8d9a4a7590"},{"code":"#(first (drop %2 %1) )","problem":21,"user":"51155b55e4b0ce5098ee73bc"},{"problem":21,"code":"(fn nthh [coll n]\n   (if (empty? coll)\n     nil\n     (if (zero? n)\n       (first coll)\n       (nthh (rest coll) (dec n)))))","user":"5b975c6ee4b0c0b3ffbd4a91"},{"code":"#(cond \n  (= %2 0) (first %1) \n  :else (recur (rest %1) (dec %2)))","problem":21,"user":"511060fae4b04c71fce993f1"},{"problem":21,"code":"(fn[coll index]\n  (letfn [(iter [index coll cnt]\n    (if (= index cnt)\n      (first coll)\n      (iter index (rest coll) (+ cnt 1))))]\n  (iter index coll 0)))","user":"5e382f26e4b01d43a70e8db8"},{"code":"(fn my-nth [coll n]\r\n  (if (zero? n)\r\n    (first coll)\r\n    (recur (rest coll) (dec n))))","problem":21,"user":"4e7e4a1f535db169f9c7970c"},{"problem":21,"code":"(fn vpos [coll index]\n   (if (= index 0)\n     (first coll)\n     (vpos (rest coll) (- index 1))))","user":"5f82609ae4b0c071e6c840f9"},{"problem":21,"code":"(fn [arrays k] ((if (vector? arrays) arrays (vec arrays)) k))","user":"5ce67c36e4b0a17bb84e2b88"},{"code":"(fn r [x n]\n  (cond\n    (= n 0) (first x)\n    :else (r (rest x) (- n 1))))","problem":21,"user":"4e7db08d535db169f9c796e0"},{"code":"(fn [x y] (if (= y 0) (first x) (recur (rest x) (dec y)) ) )","problem":21,"user":"50043e6be4b0678c553fc44c"},{"problem":21,"code":"(fn [coll ix] (first (drop ix coll)))","user":"56a9ea17e4b07966d5a8a07c"},{"problem":21,"code":"(fn [sq n]\n  (first (drop n sq)))","user":"54973b58e4b0b312c081ff70"},{"problem":21,"code":"(fn nth_n [l n]\n  (cond (= n 0) (first l)\n       :else (recur (rest l) (dec n) )))","user":"5794fd7be4b0e215f87e8476"},{"code":"(fn [l n]\n  (loop [idx 0,arr l,s n]\n  (if (= idx s)\n    (first arr)\n    (recur (inc idx) (next arr) s))))","problem":21,"user":"4ef2d6c5535dced4c769f222"},{"code":"(fn [x y]\n      (last (take (+ y 1) x)))","problem":21,"user":"4eb2fe60535d7eef30807354"},{"problem":21,"code":"(fn [coll n] \n  (if (= n 0)\n    (first coll)\n    (recur (rest coll) (dec n))))","user":"55c3f0c6e4b0e31453f64990"},{"code":"(fn [ls index] (get (vec ls) index))","problem":21,"user":"5148bb40e4b05514c84b7cc5"},{"code":"(fn mynth [l, n] \n  (if (= n 0) \n    (first l)\n    (mynth (rest l) (dec n))))","problem":21,"user":"51e38568e4b0c611d6113e43"},{"code":"(fn [coll n]\n  (if (zero? n)\n\t(first coll)\n\t(recur (next coll) (dec n))))","problem":21,"user":"53021823e4b0d8b024fd3724"},{"problem":21,"code":"(fn [x index] \n  (if (zero? index)\n    (first x)\n    (recur (rest x) (dec index))))","user":"5c63df12e4b0fca0c1622667"},{"problem":21,"code":"(fn [xs n]\n  (loop [coll xs\n         c 0]\n    (if (= n c)\n      (first coll)\n      (recur (rest coll) (inc c)))))","user":"55dbc7cde4b050e68259b3a4"},{"problem":21,"code":"(fn get [x n] (if (> n 0) (get (rest x) (- n 1)) (first x)))","user":"552949e5e4b0ffed3738f948"},{"problem":21,"code":"(fn elem [x c]\n  (if (= c 0)\n    (first x)\n    (elem\n     (rest x)\n     (dec c)\n    )\n  )\n)","user":"57879858e4b0ebec4cfb7508"},{"problem":21,"code":"(fn nth-elem\n  [coll x]\n  (last (take (+ x 1) coll))\n  )","user":"593edddfe4b069cdc2982bca"},{"code":"(fn nitem [s n]\n     (loop [i 0\n            sp s]\n      (if (= i n)\n        (first sp)\n        (recur (inc i) (next sp)))))","problem":21,"user":"4efb92ce535dced4c769f27a"},{"problem":21,"code":"(fn [coll n]\n  (loop [coll coll\n         c n]\n    (if (zero? c)\n      (first coll)\n      (recur (rest coll) (dec c)))))","user":"5d9e1006e4b0eb781811cdbd"},{"problem":21,"code":"(fn [the-seq n] \n  (last (take (+ 1 n) the-seq)))","user":"5c26c9b3e4b07e362c2305c5"},{"problem":21,"code":"(fn [coll until] (first (drop until coll)))","user":"5d8a3f3ee4b0915913b1d3c9"},{"problem":21,"code":"(fn my-nth\n  [s n]\n  (if (= n 0) \n  \t(first s)\n  \t(my-nth (rest s) (- n 1))))","user":"5960e872e4b066ee0a44b093"},{"code":"(fn [x y](.get x y))","problem":21,"user":"4f33fde5e4b0e243712b1eb3"},{"problem":21,"code":"(fn [seq index]\n  (loop [cur 0\n         el (first seq)\n         remain (rest seq)]\n    (if (= cur index)\n      el\n      (recur (inc cur) (first remain) (rest remain))))\n  )","user":"5ccaed31e4b0ccb061962877"},{"problem":21,"code":"#(-> (drop %2 %1)\n     first)","user":"5bcf0b1be4b0e9689409ee24"},{"code":"#(last (take  (+ %2 1) %1))","problem":21,"user":"52a93d48e4b0c58976d9ac42"},{"problem":21,"code":"(fn [x y]\n  (cond (vector? x) (get x y)\n        (= y 0) (first x)\n        :else (recur (rest x) (- y 1))))","user":"54239171e4b01498b1a71ad2"},{"code":"(fn get-nth [items idx]\n  (last \n   (last\n    (filter #(= (first %) idx) \n            (map-indexed list items)))))","problem":21,"user":"525a643be4b0cb4875a45cf1"},{"problem":21,"code":"#((fn f [n x xs] (if (= n %2) x (f (+ n 1) (first xs) (rest xs)))) 0 (first %1) (rest %1))","user":"567ffd69e4b0966858e4d8e7"},{"code":"(fn f [p n] \n  (if (= n 0) \n    (first p) \n    (f (rest p) (dec n))))","problem":21,"user":"523ed743e4b057c4b7cd0a79"},{"problem":21,"code":"(fn get-nth [col i]\n  (if (= i 0)\n    (first col)\n    (get-nth (rest col) (dec i))))","user":"599b845ee4b010b4cc4bca09"},{"problem":21,"code":"(fn [coll n]\n    (loop [coll coll acc 0]\n      (if (= n acc)\n        (first coll)\n        (recur (rest coll) (+ acc 1))\n        )\n      )\n    )","user":"5bba6571e4b0a20761a235e9"},{"problem":21,"code":"(fn [col idx] \n  (if (= idx 0)\n    (first col)\n    (recur (rest col) (dec idx))))","user":"53f891eee4b0de5c4184856d"},{"code":"(fn nLmnt\n  [sqnc nr]\n  (if (> nr 0)\n    (nLmnt (rest sqnc) (dec nr))\n    (first sqnc)))","problem":21,"user":"5116afdee4b0063b4e3e16d5"},{"code":"(fn my-nth [a-seq n]\n    (if (= 0 n)\n        (first a-seq)\n        (my-nth (rest a-seq) (dec n))\n    )\n )","problem":21,"user":"52763696e4b03e8d9a4a74d7"},{"problem":21,"code":"(fn [lst idx]\n  (get (vec lst) idx))","user":"5d62da51e4b0c9e5857d5020"},{"code":"#(aget (into-array %1) %2)","problem":21,"user":"4e7650c5535d324fb2983d68"},{"code":"(fn[x y] (get (vec x) y))","problem":21,"user":"528365e2e4b0239c8a67adb3"},{"problem":21,"code":"(fn [l index] \n  (if (= index 0)\n    (first l)\n    (recur (rest l) (dec index))\n   ))","user":"59b2b093e4b0e1f4e384c8fd"},{"problem":21,"code":"(fn [%1 %2] ((into [] %1) %2))","user":"58f90aa2e4b0438e51c2cf41"},{"problem":21,"code":"(fn nth-element\n  [coll n]\n  (get (vec coll) n)\n)","user":"5b90f433e4b0c0b3ffbd4a14"},{"problem":21,"code":"#(if (list) (get (vec %1) %2) (get %1 %2))","user":"5cf57826e4b087f62be35a9a"},{"problem":21,"code":"(fn n-th [coll n]\n   (if (< n 0) nil\n               (loop [i 0\n                      seq coll]\n                 (if (= i n) (first seq)\n                             (recur (inc i) (rest seq))))))","user":"57ee804ee4b0bfb2137f5bbb"},{"code":"(fn f [p n]\n  (if (= n 0)\n  (first p)\n  (f (rest p) (- n 1))))","problem":21,"user":"50415118e4b06d8231e4face"},{"problem":21,"code":"(comp first (fn [coll n] (drop n coll)))","user":"5a2185c6e4b0ff51aa4b32b1"},{"code":"(fn get-nth \n  ([coll n] (get-nth coll n 0))\n  ([coll n curr]\n   (if (= n curr)\n     (first coll)\n     (recur (rest coll) n (inc curr)))))","problem":21,"user":"508e26c2e4b0f17d83ea26ca"},{"problem":21,"code":"(fn [coll n]\n  (loop [i 0\n         coll coll]\n    (if (== i n)\n      (first coll)\n      (recur (inc i) (rest coll)))))","user":"565654dae4b0f9d632dd849f"},{"problem":21,"code":"(fn nof [ls n] (if (> n 0) (nof (rest ls) (- n 1)) (first ls)))","user":"60890415e4b0ae75613dceec"},{"problem":21,"code":"(fn[x, y]( loop [i 0 l x] (if (= i y) (first l) (recur (inc i) (rest l)))))","user":"53f1c05ee4b0742d9025b0e1"},{"problem":21,"code":"(fn nth-item [items n] (first (drop n items)))","user":"5513dec7e4b055c2f668d4cd"},{"code":"(fn [a n] (first (nthnext a n)))","problem":21,"user":"504e0ff5e4b078edc5f593af"},{"problem":21,"code":"(fn [coll n] (loop [ cnt n x coll ] (if (zero? cnt) (first x        ) (recur (dec cnt ) ( rest x )           ) ) ))","user":"5ddbd202e4b0948ae9d9adb4"},{"problem":21,"code":"(fn my-nth [coll n]\n  (if (= n 0)\n    (first coll)\n    (my-nth (rest coll) (dec n))))","user":"541f6bc0e4b01498b1a71a98"},{"code":"(fn [xs x] (first (drop x xs)))","problem":21,"user":"51553ea7e4b06c5f6a1490a2"},{"problem":21,"code":"(fn [s n] (last (first (partition (+ 1 n) s))))","user":"56a75810e4b0542e1f8d14fc"},{"problem":21,"code":"(fn nt [a n]\n  (if (= 0 n)\n  \t(first a)\n  \t(nt (rest a) (dec n))))","user":"5caa5e42e4b048ec896c5c35"},{"problem":21,"code":"(fn [lst pos]\n  (loop [currentlist lst counter 0]\n    (if (= counter pos)\n        (first currentlist)\n        (recur (rest currentlist) (inc counter)))))","user":"54dda2b1e4b024c67c0cf796"},{"problem":21,"code":"(fn [x y] (loop [cnt y num x] (if (zero? cnt) (first num) (recur (dec cnt) (next num)))))","user":"5b4c2212e4b02d533a91bca6"},{"code":"(fn [li x] (get (vec li) x))","problem":21,"user":"535cd14fe4b04ce2eb3ed2b9"},{"code":"(fn [coll n]\n  (if (= 0 n)\n    (first coll)\n    (recur (rest coll) (- n 1))))","problem":21,"user":"506f1e12e4b09350ab4199f9"},{"code":"(fn my-nth [xs n]\n  (if (== n 0)\n    (first xs)\n    (my-nth (rest xs) (- n 1))))","problem":21,"user":"4ee32ea6535d10e5ff6f536d"},{"problem":21,"code":"(fn my-nth [coll n] (if (> n 0) (my-nth (rest coll) (- n 1)) (first coll)))","user":"543cea42e4b032a45b869343"},{"code":"#(-> %2 inc (take %1) last)","problem":21,"user":"5250779ee4b0541d1855b82f"},{"problem":21,"code":"(fn [lis x] (first \n             (drop x lis)))","user":"57a28fb1e4b0c3d858beb901"},{"problem":21,"code":"(fn [l i] \n  (if (= 0 i) \n    (first l) \n    (recur (rest l) (dec i))))","user":"55b77c7ce4b01b9910ae29a3"},{"problem":21,"code":"(fn f[s, i]\n  (if (zero? i)\n    (first s)\n    (f (rest s) (dec i))\n  )\n)","user":"5443cb97e4b032a45b86938a"},{"problem":21,"code":"(fn [col x] (first (drop x col)))","user":"53c84bc6e4b00fb29b2212b0"},{"code":"#(get (zipmap (iterate inc 0) %1) %2)","problem":21,"user":"534dd600e4b084c2834f4aaa"},{"code":"(fn myfun [xs c]\n   (if (= c 0)\n       (first xs)\n       (myfun (rest xs) (dec c))))","problem":21,"user":"52957fa8e4b02ebb4ef75025"},{"code":"(fn [coll n] (first (drop n coll)))","problem":21,"user":"4e443201535dc968683fc4a7"},{"problem":21,"code":"(fn [l n] (loop [coll l len n] (if (= 0 len) (first coll) (recur (rest coll) (dec len)))))","user":"5886ac91e4b0f1effa3b76e5"},{"problem":21,"code":"( fn [col n] (first(drop n col)) )","user":"5b28cf92e4b063e2438bcc56"},{"problem":21,"code":"(fn my-nth [xs pos]\n  (if (= pos 0)\n    (first xs)\n    (my-nth (rest xs) (- pos 1))))","user":"6051bcfae4b056659d634203"},{"code":"#(loop [lst %1 idx %2]\n  (if (< idx 1)\n    (first lst)\n    (recur (rest lst)\n          (dec idx))))","problem":21,"user":"50387196e4b0803468ea2c6e"},{"problem":21,"code":"(fn [arange n] \n  (loop [n n \n         arange arange]\n    (if (= n 0)\n      (first arange)\n      (recur (dec n)\n             (rest arange)))))","user":"5b59c2bde4b02d533a91bd80"},{"problem":21,"code":"(fn x [s n] (if (= n 0) (first s) (x (rest s) (- n 1))))","user":"599d49a7e4b0871e7608b7f4"},{"problem":21,"code":"(fn [col n] (first (subvec (vec col) n (+ 1 n))))","user":"5d3adc7de4b01671435dbd5b"},{"problem":21,"code":"(fn nth-elem [s x]\n  (last (take (+ x 1) s)))","user":"5cffbc2ce4b0cc9c91588193"},{"code":"(fn [coll n] (if (< n 1) (first coll) (recur (rest coll) (dec n))))","problem":21,"user":"52271988e4b04e78ff2e19a6"},{"code":"(fn this [s x] \n  (if (= x 0)\n    (first s)\n    (this (rest s) (- x 1))\n  )\n)","problem":21,"user":"531276a4e4b08068f379ecfb"},{"problem":21,"code":"(fn foo [s n] \n  (loop [remainder s index n]\n    (if (> index 0)\n      (recur (rest remainder) (- index 1))\n      (first remainder))))","user":"5bec311ae4b0f319e2d7ec94"},{"problem":21,"code":"(fn [s x]\n\t(last (take (inc x) s)))","user":"5ada1f12e4b0ea6055cfac43"},{"problem":21,"code":"(fn index-of [x n]\n  (if\n    (= n 0)\n    (first x)\n    (index-of (rest x) (dec n))\n  ))","user":"53ca41dae4b00fb29b2212c8"},{"code":"(fn nths [col x] (if (= x 0) (first col) (nths (rest col) (- x 1))))","problem":21,"user":"4ec51590535d6d7199dd3683"},{"problem":21,"code":"(fn [col n]\n   (if (zero? n)\n    (first col)\n    (recur (rest col) (- n 1))))","user":"597b72ede4b02382a38ad1f9"},{"problem":21,"code":"(fn my_nth [s n]\n  (if (= n 0)\n    (first s)\n    (my_nth (rest s) (- n 1))\n   )\n )","user":"54e50f7ce4b024c67c0cf7f6"},{"problem":21,"code":";(fn [xs n] (if (zero? n) (first xs) (recur (rest xs) (dec n))))\n#(first (drop %2 %1))","user":"560a7b46e4b05f002753defb"},{"code":"#((apply comp first (repeat %2 rest)) %)","problem":21,"user":"5065faf9e4b0313a384e5645"},{"problem":21,"code":"(fn [getFrom idx]\n  (if (= idx 0)\n      (first getFrom)\n      (recur (rest getFrom) (dec idx))))","user":"59759a9ce4b01722bebd4cca"},{"problem":21,"code":"(fn my-nth [coll index]\n  (if (= 0 index)\n    (first coll)\n    (recur (rest coll) (dec index))))","user":"54cad2d5e4b057c6fda3a26c"},{"code":"(fn [y x] (if (= x 0)\n            (first y) \n            (recur (rest y) (- x 1))))","problem":21,"user":"4e6cf521535de274dd8d818b"},{"problem":21,"code":"(fn [xs n] \n  (if (= n 0)\n    (first xs)\n    (recur (rest xs) (- n 1))))","user":"562108d0e4b064ca9f4b16e9"},{"code":"(fn [c i]\n   (if (= 0 i)\n     (first c)\n     (recur (rest c) (dec i))))","problem":21,"user":"4ee868be535d93acb0a6687d"},{"problem":21,"code":"(fn [coll nTh]\n  (loop [i 0 coll coll]\n    (if (= nTh i)\n      (first coll)\n      (recur (inc i) (rest coll)))))","user":"4e3ff3a4535dc968683fc499"},{"problem":21,"code":"(fn nth-elem [ls n]\n  (cond (>= 0 n) (first ls)\n        :else (nth-elem (rest ls) (- n 1))))","user":"5716540fe4b07c98581c3af3"},{"problem":21,"code":"(fn mnth [l n]\n  (if  (= n 0) (first l)\n    (recur (rest l) (dec n))))","user":"598dc40ce4b02b9968b84d2c"},{"code":"(fn   \n  [coll n]\n  (loop [n n\n         coll coll]\n    (if (= n 0)\n      (first coll)\n      (recur (dec n) (rest coll)))))","problem":21,"user":"51804bcbe4b04f45bde7d901"},{"problem":21,"code":"(fn [s i] (get (into {} (keep-indexed vector s)) i))","user":"53a83c74e4b047364c044426"},{"problem":21,"code":"(fn nth-elt [xs n]\n  (cond\n    (empty? xs) '()\n    (= n 0) (first xs)\n    :else (nth-elt (rest xs) (dec n))))","user":"5c2d1f63e4b0d62ef62d9ef0"},{"code":"(fn [data n] (first (drop n data)))","problem":21,"user":"53765e1ae4b06839e8705e23"},{"problem":21,"code":"(fn element-at-index \n  [xs i]\n  (if (= 0 i)\n    (first xs)\n    (element-at-index (rest xs) (- i 1))))","user":"525890f7e4b0cb4875a45cb5"},{"problem":21,"code":"(fn nf [l n] (if (= n 0) (first l) (nf (rest l) (- n 1))))","user":"5515a5b3e4b055c2f668d4eb"},{"problem":21,"code":"(fn nth-element [x n]\n  (if (= n 0)\n    (first x)\n    (recur (rest x) (dec n))\n    ))","user":"5c6f9eede4b0fca0c162276c"},{"code":"(fn [seq n] (last (take (+ n 1 ) seq)))","problem":21,"user":"4f2893d0e4b0d6649770a019"},{"problem":21,"code":"(fn [x n] (last (take (+ n 1)  x ) ) )","user":"5a10f089e4b04bbd27e6da22"},{"problem":21,"code":"(fn\n  [coll position]\n  (if (zero? position)\n    (first coll)\n    (recur (rest coll) (- position 1))))","user":"56e09e01e4b0ca2494a0960c"},{"code":"(fn mynth\n  ([x n] (mynth x n 0))\n\t([x n i]\n\t  (if (= i n)\n\t    (first x) ;; We've found it\n\t    (if (< i (count x))\n\t      (mynth (rest x) n (+ i 1))\n\t      ()\n\t      )\n\t    )\n\t  )\n)","problem":21,"user":"4ecbb249535df97575fdabdf"},{"code":"(fn [xs index]\n  (last (take (inc index) xs)))","problem":21,"user":"53029a95e4b0d8b024fd3730"},{"code":"(fn my-nth [l i] (if (= i 0) \n  (first l) \n  (my-nth (rest l) (- i 1))))","problem":21,"user":"4e745f01535d7a570dd295b8"},{"code":"(fn [c n] (second (take-nth n c)))","problem":21,"user":"4f294bbbe4b0d6649770a022"},{"code":"(fn [lst n] (if (zero? n) (first lst) (recur (rest lst) (- n 1))))","problem":21,"user":"4ed19f00535d44c135fd68d1"},{"problem":21,"code":"#(loop [i %2 l %1]\n   (if (= 0 i) \n     (first l)\n     (recur (- i 1) (rest l))))","user":"57e544c5e4b0bfb2137f5ad3"},{"code":"(fn [coll x]\n    (last (take (inc x) coll)))","problem":21,"user":"4ffb529be4b0678c553fc3cd"},{"code":"(fn [a b] (first (second (split-at b a))))","problem":21,"user":"4f914700e4b0dcca54ed6c99"},{"problem":21,"code":"(fn [arr n]\n  (first (drop n arr))\n  )","user":"595d0897e4b066ee0a44b00f"},{"code":"#(loop[x %1 y 0] (if (>= y %2) (first x) (recur (drop 1 x) (inc y))))","problem":21,"user":"517e25c6e4b0329b27fa9f51"},{"code":"#(loop [l %1 n %2]\n  (if (= n 0)\n    (first l)\n    (recur (next l) (dec n))\n  )\n)","problem":21,"user":"51f09f3de4b0274c496158d7"},{"problem":21,"code":"(fn [s x] \n  (last (take (inc x) s)))","user":"58ee9b14e4b056aecfd47db0"},{"problem":21,"code":"(fn [coll inx]\n       (first (drop inx coll)))","user":"56b3b12ee4b0982f16b37e1c"},{"code":"(fn Nth [x n] (if (= n 0) \n                   (first x)\n                   (Nth (rest x) (dec n))\n                  )\n  )","problem":21,"user":"51d1ef6ee4b0d13b04db0d92"},{"problem":21,"code":"(fn  [x n]\n  \"find n in a seq x\"\n  ((fn [list i]\n    (if (< i n)\n      (recur (rest list) (+ i 1))\n      (first list)))\n  x 0))","user":"554b2151e4b0a04f79299580"},{"code":"(fn [sek n]\n (first (nthnext sek n)))","problem":21,"user":"4eaec592535d7eef30807327"},{"code":"(fn [ls c]\r\n (if (= 0 c) \r\n     (first ls) \r\n     (recur (rest ls) (dec c))))","problem":21,"user":"4e6a7fa0535d8ccf87e9feed"},{"problem":21,"code":"(fn \n  [col index]\n  (loop [x index\n         result col]\n    (if (= x 0)\n      (first result)\n      (recur (dec x) (rest result)))))","user":"55c734a5e4b0e31453f649cb"},{"problem":21,"code":"(fn[s n](first (drop n s)))","user":"5fae5441e4b08cb800c85afb"},{"problem":21,"code":"(fn [al n]\n  (loop [i 0 item al]\n    (if (or (empty? item)\n            (= n i))\n      (first item)\n      (recur (inc i)\n             (rest item)))))","user":"579816abe4b039eba2ecb10d"},{"problem":21,"code":"(fn getElem [seq n] (if (zero? n) (first seq) (getElem (rest seq) (dec n))))","user":"5c22c861e4b07e362c230590"},{"problem":21,"code":"(fn [s k] (loop [r s n k] (if (= n 0) (first r) (recur (rest r) (- n 1)))))","user":"58152157e4b0f478707a0631"},{"problem":21,"code":"(fn[xs,y] (->> xs (take (inc y)) reverse first))","user":"5600da07e4b04bb52996e174"},{"code":"(fn [coll, index] (last (take (inc index) coll)))","problem":21,"user":"4e526f4c535d302ef430da75"},{"problem":21,"code":"(fn [arg1 arg2 ] (first (drop arg2 arg1 ) ))","user":"546b833ce4b00cfc9eacc16b"},{"problem":21,"code":"#(. %1 get %2)","user":"5dc9d4ede4b03836ba07d823"},{"problem":21,"code":"(fn ene\n\t([l n] (ene l n 0))\n\t([l n i] (if (= n i) (first l) (ene (rest l) n (+ i 1))))\n)","user":"5e546e20e4b027a2e10ac0eb"},{"problem":21,"code":"(fn [x c] (if(<= c 0) (first x) (recur (rest x) (- c 1))))","user":"57752a2de4b0979f89651613"},{"problem":21,"code":"(fn [s index] \n  (last (take (+ 1 index) s)))","user":"5858f0cce4b0f14aab7c8727"},{"code":"(fn [lst n] (last (take (+ 1 n) lst)))","problem":21,"user":"4f516a56e4b03ad3f0c10d23"},{"code":"(fn [l, n]\n  (if (= 0 n) (first l)\n      (recur (rest l) (- n 1))))","problem":21,"user":"509a6e2ae4b00b59675242f6"},{"code":"(fn [coll index] \n  (if (> index 0)\n    (recur (rest coll) (dec index))\n    (first coll)))","problem":21,"user":"52fcfeeee4b047fd55837027"},{"problem":21,"code":"(fn [col n] \n  (loop [ i n c col]\n    (if (= i 0) (first c)\n      (recur (dec i) (rest c)\n   ))))","user":"5b9c4a7be4b0c0b3ffbd4b16"},{"code":"(fn [s, n] (last (take ( + n 1) s)))","problem":21,"user":"4e967c4a535dbda64a6f6b47"},{"code":"(fn [c n] ((vec c) n))","problem":21,"user":"526fa661e4b03e8d9a4a7374"},{"code":"(fn [l n] (loop [l l n n] (if (= n 0) (first l) (recur (rest l) (- n 1)))))","problem":21,"user":"4fb4f42ae4b081705acca2b4"},{"problem":21,"code":"(fn [l s] (loop [x l curr 0 stop s] (if (< curr stop) (recur (rest x) (inc curr) stop) (first x))))","user":"55250331e4b0882d96d091c9"},{"code":"(fn nth-element [s n] \n (if (= n 0) \n  (first s)\n  (nth-element (rest s) (- n 1))\n )\n)","problem":21,"user":"4f047542535dcb61093f6bc7"},{"code":"(fn f\n  [l n]\n  (cond\n   (= n 0) (first l)\n   :else (f (rest l) (- n 1))))","problem":21,"user":"518c0f4ee4b0f028e99addf7"},{"code":"(fn\n  [sq n]\n    ((vec sq) n))","problem":21,"user":"4ec3674b535dcc7ae8597d57"},{"problem":21,"code":"#(->> %1\n      (drop %2)\n      first)","user":"5c1edf23e4b0efcb0b05b25d"},{"code":"(fn [lst index]\n  (first (drop index lst)))\n;(fn [lst index]\n;  (if (= index 0)\n;    (first lst)\n;    (recur (rest lst) (- index 1))))","problem":21,"user":"4fc7ddffe4b0ee37620e182b"},{"problem":21,"code":"(fn [x y] (loop [l x i y] (if (= 0 i) (first l) (recur (rest l) (dec i)))))","user":"54a9407de4b09f271ff37cac"},{"problem":21,"code":"(fn [c n] (loop [c c\n                 n n]\n            (if (= 0 n)\n              (first c)\n              (recur (rest c) (dec n)))\n            ))","user":"5d10bfdfe4b04b4faecf4448"},{"code":"(fn [coll index]\r\n  (if (seq coll)\r\n    (if (zero? index)\r\n      (first coll)\r\n      (recur (rest coll) (dec index)))))","problem":21,"user":"4f047177535dcb61093f6bc6"},{"code":"(fn [lst n]\n  (if (zero? n)\n    (first lst)\n   \t(recur (rest lst) (- n 1))))","problem":21,"user":"513fb358e4b00f13ea1bd893"},{"code":"(fn [list n] (\n  (fn tmp [i n list] (\n    if (= i n) (first list) (tmp (+ i 1) n (rest list))\n  )) 0 n list\n))","problem":21,"user":"4e6a4c34535d8ccf87e9fec3"},{"problem":21,"code":"(fn hi\n  [s value]\n  (if (= value 0) (first s) (hi (rest s) (- value 1))))","user":"5e663073e4b0fd0acd1586bc"},{"problem":21,"code":"(fn [xs i]\n  (last (take (inc i) xs)))","user":"5a03652ae4b01bb0ae8afd83"},{"problem":21,"code":"(fn [s n] \n\t(if  (zero? n)\n      (first s)\n      (recur (rest s) (dec n))\n      ))","user":"545a52bfe4b01be26fd74638"},{"problem":21,"code":"(fn [ l x ] (loop [n 0 e l] (if (= n x) (first e) (recur (inc n) (rest e)))))","user":"57e572b5e4b0bfb2137f5ad7"},{"problem":21,"code":"(fn foo [l n] (first (drop n l)))","user":"53b91803e4b047364c0444e5"},{"code":"(fn enth [x, n] \n  (if (= n 0) \n    (first x) \n    (enth (rest x) (- n 1))\n    )\n  )","problem":21,"user":"512044bbe4b0e88f5a20c40d"},{"problem":21,"code":"(fn [coll idx]\n  (first (map last (filter #(= idx (first %)) \n                           (map-indexed vector coll)))))","user":"60836285e4b0736b099e42e4"},{"problem":21,"code":"(fn a [xs n]\n  (first (drop n xs)))","user":"5d30ba40e4b01671435dbcd4"},{"problem":21,"code":"(fn [seqn n] (if\n    (zero? n)\n    (first seqn)\n    (recur (rest seqn) (dec n))))","user":"566888e4e4b04acd4f672ded"},{"code":"(fn my-nth [xs x] (loop [i x xs (seq xs)] (if (> i 0) (recur (dec i) (next xs)) (first xs))))","problem":21,"user":"503be1f0e4b0fc0f99c2e549"},{"problem":21,"code":"(fn [a b] (loop [l a i b]\n            (if (zero? i) (first l) (recur (rest l) (- i 1)))))","user":"554f7ef2e4b00713264bd9a1"},{"problem":21,"code":"#(loop [items %1\n        n %2]\n   (if (= 0 n)\n     (first items)\n     (recur (rest items) (dec n))))","user":"5624f5a6e4b00a550fc90288"},{"code":"(fn my-nth \n  [collection n]\n  (if (= 0 n)\n    (first collection)\n    (my-nth (rest collection) (- n 1))))","problem":21,"user":"53832cb5e4b06839e8705ed9"},{"code":"(fn f[x y]\n  (if (= y 0)\n  (first x)\n  (f (rest x) (- y 1))))","problem":21,"user":"51aa9a75e4b04e3dc0c27b2a"},{"problem":21,"code":";#(first ((apply comp (repeat %2 rest)) %1))\n;#(first (drop %2 %1))\n#(-> (drop %2 %1) first)","user":"55ca4273e4b0e31453f649f9"},{"problem":21,"code":"#(get (into {} (concat (map-indexed vector %1 )))%2)","user":"590cb27de4b047aa04b199ee"},{"problem":21,"code":";(fn [v i]\n;\n;   (\n;     loop [n i result (apply list v)]\n;     (if (= n 0)\n;       (first result)\n;       (recur (dec n) (pop result)))\n;     ))\n\n(fn dosia [xs count] (if (= count 0) (first xs) (dosia (rest xs) (- count 1))))","user":"5dc53ddee4b02f9375f4e1bd"},{"problem":21,"code":"(fn [l x] (last (take (+ 1 x) l)))","user":"5c32603ee4b0d62ef62d9f38"},{"code":"(fn [thelist thenth] (first (drop thenth thelist)))","problem":21,"user":"532be2e1e4b09d4e7a9b553a"},{"problem":21,"code":"(fn [x y] (loop [i y\n                 n (first x)\n                 lst x]\n            (if (= i -1)\n              n\n              (recur (dec i) (first lst) (rest lst)))))","user":"607e1d9de4b03d835a6eaedb"},{"problem":21,"code":"#(first(reverse (take (+ 1 %2) %1)))","user":"552800d7e4b0ffed3738f93a"},{"code":";; (fn [a b] (first (last (split-at b a))))\n#(first (last (split-at %2 %1)))","problem":21,"user":"509fda73e4b08df8156e9e41"},{"problem":21,"code":"(fn [coll n] \n  (if (= n 0)\n    (first coll)\n    (recur (rest coll) (- n 1))))","user":"55d204abe4b0e31453f64a4f"},{"code":"(fn [l n] ((zipmap (range (+ 1 n)) l) n))","problem":21,"user":"5084cb7de4b0fb8f40674bfb"},{"code":"(fn [x n]\n  (loop [x x\n         n n]\n    (if (= n 0)\n      (first x)\n      (recur (rest x) (dec n))\n      )\n    )\n  )","problem":21,"user":"532cb6bbe4b019098a6f8b33"},{"problem":21,"code":"(fn [s c] (loop [l s\n                 cnt c] \n            (if( zero? cnt )\n            (first l)\n            (recur (rest l) (dec cnt)))))","user":"606f005ae4b069485764de1b"},{"problem":21,"code":"(fn[x y] (get (zipmap (range (count x)) x) y))","user":"53e9a56ce4b036ad0777e4af"},{"problem":21,"code":"(fn f [x n]\n\t(if (= n 0)\n\t\t(first x)\n\t\t(f (rest x) (- n 1))))","user":"5a025edde4b01bb0ae8afd64"},{"code":"(fn upto\n  ([l n] (upto l n 0))\n  ([l n cur]\n    (if (== n cur)\n      (first l)\n      (upto (rest l) n (inc cur)))))","problem":21,"user":"50046aa8e4b0678c553fc450"},{"code":"(fn [xs n]\n  (if (= 0 n) (first xs)\n              (recur (rest xs) (dec n))))","problem":21,"user":"4fda7509e4b05e33b9224f4b"},{"problem":21,"code":"(fn foo [col n]\n  (if (= n 0)\n    (first col)\n    (foo (rest col) (- n 1))))","user":"5c7aa5a9e4b0fca0c1622852"},{"problem":21,"code":"(fn [xs n] \n  (loop [i 0, l xs]\n    (if (= i n)\n      (first l)\n      (recur (inc i) (rest l)))))","user":"54995298e4b0b312c081ff8b"},{"code":"#(-> %2 (drop %1) first)","problem":21,"user":"4ed69ea4535d10e5ff6f52e3"},{"problem":21,"code":"(fn nt [l n] (if (= n 0) (first l) (nt (rest l) (- n 1))))","user":"5520af03e4b08d5046aa8a64"},{"problem":21,"code":"#(let [coll (zipmap (iterate inc 0) %)]\n   (get coll %2))","user":"5e976fa8e4b0157ca96647cf"},{"code":"(fn mynth [L n]\n  (loop [s L i n]\n    (cond\n      (= () s) nil\n      (= i 0) (first s)\n      :default (recur (rest s) (dec i)))))","problem":21,"user":"4e6e3a1e535d5021c1a89602"},{"code":"#(first (drop %2 %))","problem":21,"user":"4db5c722535d87e67b28fe12"},{"problem":21,"code":"(fn [coll index]\n  (loop [mycoll coll incr 0]\n    (if (= incr index)\n      (first mycoll)\n      (if (> incr (count coll))\n        nil\n        (recur (rest mycoll) (inc incr))))))","user":"56f1b558e4b04a395b9a049a"},{"problem":21,"code":"(fn [col n] \n  ((into [] col) n))","user":"60bf2477e4b0e0fa5f1b4291"},{"code":"#(loop [lst %1 n %2] (if (zero? n) (first lst) (recur (rest lst) (- n 1))))","problem":21,"user":"4f3c0c0fe4b0e243712b1f3d"},{"problem":21,"code":"(fn [xs n]\n  (if (< n 0)\n    nil\n    (loop [xs' xs\n           n' n]\n      (if (= n' 0)\n        (first xs')\n        (recur (rest xs') (dec n'))))))","user":"5f37da09e4b0574c87022c5e"},{"problem":21,"code":"(fn [s n]\n  (loop [restSeq s\n         c 0]\n    (if (= c n)\n      (first restSeq)\n      (recur (rest restSeq) (inc c))\n    )\n  )\n)","user":"56195e57e4b053970a773af6"},{"problem":21,"code":"(fn nth' [coll idx] (last (take (+ idx 1) coll)))","user":"5bb7c9e3e4b0a20761a235b0"},{"problem":21,"code":"#(loop [x % i 0] (if (= i %2) (first x)(recur (rest x)(inc i))))","user":"55c3f19de4b0e31453f64991"},{"code":"(fn my-nth [col n] (first (drop n col)))","problem":21,"user":"539e717fe4b0ca733b974488"},{"code":"(fn enth[coll x] (last (take (+ 1 x) coll)))","problem":21,"user":"4f038938535dcb61093f6b18"},{"code":"(fn [a b] (.get a b))","problem":21,"user":"516c3472e4b06f078fab251c"},{"problem":21,"code":"(fn temp-last [xs n]\n  (if (= 0 n) (first xs) (temp-last (rest xs) (dec n))))","user":"574cb8a2e4b02ea114799222"},{"problem":21,"code":"(fn [list idx] \n  (last (take (+ idx 1) list)))","user":"5de66cf8e4b0986d99407f6a"},{"problem":21,"code":"(fn nn [l n] (if (= 0 n) (first l) (nn (rest l) (- n 1))))","user":"562bbacee4b058fa18c5a6d0"},{"problem":21,"code":"(fn [coll x] \n  (first (drop x coll)))","user":"571bc0a1e4b07c98581c3b6c"},{"code":"(fn get [seq index] (if (= 0 index) (first seq) (get (rest seq) (- index 1))))","problem":21,"user":"5338e33fe4b0e30313ee6ca1"},{"problem":21,"code":"(fn [collection index] (if (zero? index) (first collection) (recur (rest collection) (- index 1))))","user":"59024826e4b0438e51c2d053"},{"code":"(fn inth [s n]\n  (if (= n 0) \n    (first s)\n    (inth (rest s) (- n 1))))","problem":21,"user":"5374adc3e4b06d7f452d9e27"},{"problem":21,"code":"(fn [y n] (loop [x y] (if (> (count x) (- (count y) n)) (recur (rest x)) (first x))))","user":"561ccfb4e4b064ca9f4b169f"},{"problem":21,"code":"(fn [x y] (first (rest (take-nth y x))))","user":"5f6c4f6de4b02876ed9fd055"},{"problem":21,"code":"#(loop [coll %1 n %2] (if (= n 0) (first coll) (recur (rest coll) (dec n))) )","user":"60e955ade4b0584f1d4a8dc1"},{"code":"(fn [elems num]\n  (loop [e elems, n num]\n\t\t(if (= n 0)\n\t\t\t(first e)\n\t\t\t(recur (rest e) (- n 1)))))","problem":21,"user":"4e641bfd535d8ccf87e9fe67"},{"code":"(fn alast [thelist theelement] (cond (= 0 theelement) (first thelist) true (alast (rest thelist) (- theelement 1))))","problem":21,"user":"5071f3b4e4b0e3170b5a8686"},{"problem":21,"code":"(fn myfn [lst n] (if (= n 0) (first lst) (myfn (rest lst) (- n 1))))","user":"5a2cfa85e4b09cafd31c7f61"},{"problem":21,"code":"(fn [lst n]\n  (loop [counter 0\n         remainder lst]\n    (if (< counter n)\n      (recur (inc counter) (rest remainder))\n      (first remainder))))","user":"589c6914e4b00487982d535d"},{"problem":21,"code":"(fn [seq idx]\n    (let [iter (fn [seq i] (if (= i idx) (first seq) (recur (rest seq) (inc i))))]\n      (iter seq 0)))","user":"55d29fb6e4b0e31453f64a59"},{"problem":21,"code":"(fn [n m] (first (drop m  n)))","user":"582089fbe4b04b46fc4b0f57"},{"problem":21,"code":"(fn my-nth [xs n]\n   (if (= n 0)\n     (first xs)\n     (my-nth (rest xs) (- n 1))))","user":"586f4900e4b01531a375e9c6"},{"problem":21,"code":"(fn [x n]\n  (if (= 0 n) \n    (first x)\n    (recur (rest x) (dec n))))","user":"583166c1e4b051871117c025"},{"problem":21,"code":"(fn [c n] (first (last (take (inc n) (iterate rest c)))))","user":"54c611d1e4b045293a27f627"},{"problem":21,"code":"(fn work [lst idx]\n  (if (= idx 0)\n    (first lst)\n    (work (rest lst) (dec idx))))","user":"57e5fdcfe4b0bfb2137f5ae1"},{"problem":21,"code":"(fn [coll idx]\n  (loop [c  coll\n         i idx]\n    (if (= i 0)\n      (first c)\n      (recur (rest c) (dec i)))))","user":"5dcbe0dbe4b02b31cc3da3be"},{"problem":21,"code":"(fn Nth [tlist n]\n  (if (> n 0)\n    (Nth (rest tlist) (- n 1))\n    (first tlist)))","user":"5e80003de4b085ba37836e42"},{"problem":21,"code":"(fn nth-exteral \n  [lista pos]\n((fn nth-element \n    [lista current pos]\n    (if (< current pos)\n        (nth-element (rest lista) (+ current 1) pos)\n        (first lista))) lista 0 pos))","user":"5c255edee4b07e362c2305b2"},{"problem":21,"code":"(fn [vals, pos] (first(drop pos vals)))","user":"58c66990e4b021aa9917ed53"},{"problem":21,"code":";Nth Element http://www.4clojure.com/problem/21\n(fn ! [x y] \n  (if (= y 0)\n    (first x)\n    (! (rest x) (- y 1))\n  )\n)","user":"5a813b90e4b00b71e582a065"},{"code":"(fn [ls n]\n  (first (drop n ls)))","problem":21,"user":"5187a7dae4b057e3860ab7e1"},{"problem":21,"code":"(fn myNth[se index](if(= index 0) (first se) (myNth (rest se) (dec index))))","user":"57a20f72e4b0c3d858beb8f5"},{"code":"(fn [x y] (last (take (+  y 1) x)) )","problem":21,"user":"4f725466e4b07046d9f4f030"},{"problem":21,"code":"(fn [x n]\n  ((fn nth2 [x n d]\n    (cond \n      (= n d) (first x)\n      :else (nth2 (rest x) n (+ 1 d)))) x n 0))","user":"5c02c9a8e4b0bdcf453d1667"},{"problem":21,"code":"(fn [list index] (if (= 0 index) (first list) (recur (rest list) (- index 1))))","user":"5c6e8b57e4b0fca0c1622755"},{"code":"(fn [coll n ] ((apply comp first (repeat n rest)) coll ))","problem":21,"user":"52b9c5e8e4b07a9af57922c2"},{"problem":21,"code":"(fn nth' [lst n]\n  (if (> n 0)\n    (recur (rest lst) (dec n))\n    (first lst)))","user":"5943abb6e4b060784b3b792b"},{"problem":21,"code":"#(loop [ls %1 n %2]\n   (if (= 0 n)\n     (first ls)\n     (recur (rest ls) (dec n))))","user":"5cdedd3de4b0a17bb84e2af9"},{"code":"#(last (first (partition-all (+ 1 %2) %1)))","problem":21,"user":"4f0cd1c9535d0136e6c22311"},{"code":"(fn getnth [x n] (last (take (+ n 1) x)))","problem":21,"user":"52229374e4b0e6a83c892600"},{"code":"(fn mynth [x y] (if (<= y 0) (first x) (mynth (rest x) (dec y))))","problem":21,"user":"52e18377e4b09f7907dd1425"},{"code":"(fn [ls n]\n  (if (= n 0)\n    (first ls)\n    (recur (rest ls) (dec n))))","problem":21,"user":"4e5c538c535d8a8b8723a2c0"},{"code":"#(loop [coll %1 n %2]\n  (if (zero? n) (first coll)\n      (recur (rest coll) (dec n))))","problem":21,"user":"503c21c2e4b0fc0f99c2e551"},{"code":"(fn mynth[s n] (cond\n               (= nil s) nil\n               (= n 0) (first s)\n               \n               :default (mynth (rest s) (- n 1) )\n                   )\n               \n    )","problem":21,"user":"4fb03cf4e4b081705acca262"},{"problem":21,"code":"(\n fn [lst n]\n     (if \n        (= n 0) (first lst)\n        (recur (rest lst) (- n 1))\n     )  \n)","user":"557ffdf1e4b05c286339e0e4"},{"code":"(fn nth-elt [sq n] \n  (if (= n 0) \n    (first sq)\n    (nth-elt (rest sq) (- n 1))))","problem":21,"user":"52082734e4b0b5fbdb336077"},{"problem":21,"code":"(fn [coll i]\n    \"implementation of nth\"\n    (when (and (seq coll)\n               (<= 0 i (dec (count coll))))\n      (if (zero? i)\n        (first coll)\n        (recur (rest coll) (dec i)))))","user":"59fa241ee4b0ca45a743a358"},{"problem":21,"code":"(fn [coll ind]\n  (loop [indx 0\n         xs coll]\n    (let [head (first xs)\n          tail (rest xs)]\n      (if (= ind indx)\n        head\n        (recur (inc indx) tail)))))","user":"60b66033e4b0e0fa5f1b4248"},{"problem":21,"code":"(fn [seq n]\n  (if (= 0 n)\n    (first seq)\n    (recur (next seq) (dec n))))","user":"56ef2348e4b04a395b9a045c"},{"problem":21,"code":"#(loop [coll %1, index %2] \n  (if (zero? index)\n    (first coll)\n    (recur (rest coll) (dec index))))","user":"5be3025ee4b0ed4b8aab4cd1"},{"problem":21,"code":"(fn [s n]\n  (first (take-last (- (count s) n) s)))","user":"5b0f066fe4b0cc2b61a3be0d"},{"problem":21,"code":"(fn select [lst n] (if (<= n 0) (first lst) (select (rest lst) (- n 1))))","user":"5b0b0865e4b0cc2b61a3bdcf"},{"problem":21,"code":"#((comp last take) (+ 1 %2) %1)","user":"5650082fe4b0284900eef6b7"},{"problem":21,"code":"(fn [col n] \n  \t(let [nt (fn [x y] \n               (if (= y 0) \n                 (first x) \n                 (recur (rest x) (dec y))\n                 ))]\n         (nt col n)))","user":"53bb4cb1e4b047364c044502"},{"problem":21,"code":"(fn [list n]\n  (if (= n 0) (first list) (recur (rest list) (dec n))))","user":"579563ffe4b0e215f87e847e"},{"problem":21,"code":"(fn [coll pos]\n  (-> coll\n      vec\n      (#(subvec % pos (inc pos)))\n      first))","user":"56a79eb0e4b07966d5a8a05d"},{"code":"(fn [col x] (last (take (+ 1 x) col)))","problem":21,"user":"50589113e4b06522596eba7f"},{"problem":21,"code":"(fn [col n]((comp first drop) n col))","user":"55f68468e4b06e875b46ce94"},{"problem":21,"code":"(fn [seq num] (if (= num 0) (first seq) (recur (rest seq) (dec num))))","user":"5cb47a0fe4b026601754b91b"},{"problem":21,"code":"(fn [c n]\n  (loop [coll (vec c) i 0]\n    (if (= i n)\n      (first (vec coll))\n      (recur (rest coll)(inc i)))))","user":"5c083a1ae4b0bdcf453d16dd"},{"problem":21,"code":"(fn my_nth [l n]\n  (if (<= n 0)\n    (first l)\n    (my_nth (rest l) (- n 1))))","user":"56acca9ae4b03c432f18734c"},{"problem":21,"code":"(fn myNth [col n]\n      (if (= n 0)\n        (first col)\n        (myNth (rest col) (dec n))))","user":"5ee75f8be4b029a2061bbea5"},{"problem":21,"code":"(fn mnth\n  [l n]\n  (if (= n 0)\n    (first l)\n    (mnth (rest l) (- n 1))))","user":"5703a557e4b08d47c97781f4"},{"problem":21,"code":"(fn [l n] (last (take (inc n) l) ))","user":"5e5d9e62e4b0fd0acd15866b"},{"problem":21,"code":"(fn                                                                                                               \n        [s n]                                                                                                                     \n        (loop [iter 0                                                                                                             \n               es s]                                                                                                              \n          (if (= iter n)                                                                                                          \n            (first es)                                                                                                            \n            (recur (inc iter)                                                                                                     \n                   (next es)))))","user":"52d9e126e4b09f7907dd13b1"},{"problem":21,"code":"(fn [coll i] ((vec coll)i))","user":"554b8b65e4b0a04f7929958a"},{"code":"(fn [c n]\r\n  (if (zero? n)\r\n      (first c)\r\n      (recur (rest c) (dec n))))","problem":21,"user":"4f6a36eee4b07046d9f4ef99"},{"problem":21,"code":"(fn th [x,y]\n  (if (= 0 y)\n    (first x)\n    (th (next x) (dec y))))","user":"53cf278ce4b00fb29b2212fb"},{"problem":21,"code":"(fn nthNumber [li n] \n  (if (= n 0)\n    (first li)\n    (recur (rest li) (- n 1))))","user":"56f57481e4b046a417f92072"},{"code":"(fn [list n] (loop [i 0 l list] (if (= i n) (first l) (recur (+ i 1) (rest l)))))","problem":21,"user":"4f4afb1fe4b0d56e7bb92c21"},{"problem":21,"code":"(fn [stuff index] \n  (loop [ix 0 stufff stuff] \n    (if (= index ix) \n      (first stufff) \n      (recur (inc ix) (rest stufff)))))","user":"567476bde4b05957ce8c6139"},{"problem":21,"code":"(fn\n  [s n]\n  (loop\n    [i 0 q s]\n    (\n     if (= i n)\n     (first q)\n     (recur (+ i 1) (rest q)) \n     )\n    )\n  )","user":"558c8405e4b027778923763a"},{"code":"(fn get-nth [ls n] (\n                    cond (= n 0) (first ls)\n                    \t :else (get-nth (rest ls) (- n 1))\n                    ))","problem":21,"user":"51eb9096e4b069f463c22cc0"},{"code":"#(if (or (>= %2 (count %1)) \n          (< %2 0))\n    (throw (IndexOutOfBoundsException.))\n  (last (take (+ %2 1) %1))\n  )","problem":21,"user":"502b4d26e4b0194ad32ea1a0"},{"problem":21,"code":"(fn [sequence position] \n (loop [counter position temporary-sequence sequence]\n  (if (zero? counter)\n    (first temporary-sequence)\n  (recur (dec counter) (rest temporary-sequence)))))","user":"5d6b1d11e4b04d129b00f2a2"},{"problem":21,"code":"(fn nthh [seqn i]\n  (if (zero? i)\n    (first seqn)\n    (first \n      (last\n       (take (inc i) \n        (iterate rest seqn))))))","user":"5c4fd807e4b0f9f7a8770eb5"},{"code":"(fn [s index]\n  ((fn rec[l i]\n    (if (= index i) (first l) (rec (rest l) (+ i 1))))\n  s  0))","problem":21,"user":"4f0399c4535dcb61093f6b34"},{"problem":21,"code":"(fn [theSec n] (.get theSec n))","user":"5f388f8be4b0574c87022c6b"},{"problem":21,"code":"(fn [sek pos] (last (take (+ 1 pos) sek)))","user":"565d6d34e4b068f2fe63dc23"},{"code":"(fn my-nth\n  [s i]\n  (if (= i 0)\n    (first s)\n    (recur (rest s) (dec i))))","problem":21,"user":"528e25b9e4b0239c8a67aed5"},{"problem":21,"code":"(fn\n      [seq idx]\n      (loop [local-seq seq i 0]\n        (println local-seq i)\n        (if (= i idx)\n          (first local-seq)\n          (recur  (rest local-seq)\n                  (inc i)))))","user":"582c203ae4b051871117bf80"},{"code":"(fn [coll x ] (first(drop x coll)))","problem":21,"user":"4fe3338ee4b0e8f79898fea8"},{"code":"#(first (rest (take-nth %2 %)))","problem":21,"user":"51a1659de4b00957e520db72"},{"problem":21,"code":"(fn [col n] ( if(or(nil? col)(or(< (count col) n) (neg? n)) ) nil (first (nthrest col n ) )))","user":"5515b68de4b055c2f668d4ef"},{"problem":21,"code":";(fn [collection nthNumber] \n;    (loop [cnt nthNumber tmpList collection]\n;          (if (zero? cnt)\n;            (first tmpList)\n;            (recur (dec cnt) (rest tmpList)) )))\n#(first (drop %2 %1))","user":"59c5093ce4b0a024fb6ae50c"},{"problem":21,"code":"(fn rec [xs n]\n  (if (= 0 n)\n  \t  (first xs)\n  \t  (rec (rest xs) (dec n))\n  )\n  )","user":"560c31b4e4b05f002753df2d"},{"problem":21,"code":"(fn [a n] (last (take (inc n) a)))","user":"53c6c9dfe4b00fb29b2212a1"},{"problem":21,"code":"(fn [x y] \n  \n  (first\n  (drop (- (- (count x) y) 1) (reverse (drop y x))))\n  )","user":"57727d30e4b0979f896515c9"},{"code":"(fn [x n] (loop [idx 0 x x] (if (= idx n) (first x) \n(recur (inc idx) (rest x)))))","problem":21,"user":"4fdd155be4b05e33b9224f76"},{"code":"#(loop [xs %1 count 0] \n    (if (< count %2) \n      (recur (rest xs) (inc count)) \n      (first xs)))","problem":21,"user":"4e5cddd6535d8a8b8723a2c5"},{"code":"(fn getelement[elements index] \n  (if (> index 0) (recur (drop 1 elements) (dec index))  (first elements)))","problem":21,"user":"515310b4e4b0d6806ecd26fb"},{"code":"(fn my-nth[s n]\n  (if (= n 0)\n    (first s)\n    (my-nth (rest s) (- n 1))))","problem":21,"user":"501948b3e4b0b6630b101db5"},{"problem":21,"code":"(fn [aseq number] (first (drop number aseq)))","user":"592dbbd5e4b072a2710fcf7f"},{"problem":21,"code":"(fn [coll n] (\n  (apply comp \n     (cons first \n       (repeat n rest))) \n   coll)\n  )","user":"571edeeae4b0145328a7629b"},{"problem":21,"code":"(fn\n [coll n]\n (loop [i 0 remaining coll]\n   (if (= i n)\n     (first remaining)\n     (recur (inc i) (rest remaining)))))","user":"5c8b6c64e4b048ec896c596f"},{"code":"(fn [x,n]\n  (loop [x x n n]\n    (if (= n 0)\n      (first x)\n      (recur (rest x) (- n 1))\n    )\n  )\n)","problem":21,"user":"4fc5273ce4b081705acca37f"},{"code":"(fn [coll idx]\n  (loop [c coll, i idx]\n    (if (<= i 0)\n      (first c)\n      (recur (rest c) (dec i))\n    )))","problem":21,"user":"4fe8fda4e4b0547ebccb2438"},{"code":";#(loop [i 0 vals %1] (if (= i %2) (first vals) (recur (inc i) (rest vals))))\n(fn [s i] (if (= i 0) (first s) (recur (rest s) (dec i))))","problem":21,"user":"4f608f0ee4b0defedf855faa"},{"problem":21,"code":"(fn [s p]\n      (if (<= p 0)\n          (first s)\n          (recur (rest s) (dec p))))","user":"5b15811ee4b0cc2b61a3be6f"},{"code":"#(loop [col %1,n %2]\n   (if (= 0 n)\n       (first col)\n       (recur (rest col) (dec n) )\n   )\n)","problem":21,"user":"4f6d9d7ee4b07046d9f4efcd"},{"code":"(fn [x, n] (first (take-last (- (count x) n) x)))","problem":21,"user":"519218ebe4b08962174cf737"},{"problem":21,"code":"( fn [givenList index] ( loop[coll givenList cnt index] ( if(zero? cnt) (first coll) ( recur (rest coll) (dec cnt) ) )))","user":"55995d88e4b031d6649c9ba8"},{"problem":21,"code":"(fn find-nth [xs n] (if (zero? n) (first xs) (recur (rest xs) (dec n))))","user":"5f37263de4b0574c87022c4e"},{"code":"(fn enth [input en]\n  (if (= 0 en) (first input) (enth (rest input) (- en 1)))\n  )","problem":21,"user":"5271605ae4b03e8d9a4a73ed"},{"problem":21,"code":"(fn [l n] \n  (if (== 0 n) \n    (first l) \n    (recur (rest l) (dec n))))","user":"583f0b82e4b089d5ab817dc6"},{"problem":21,"code":"(fn [s n]\n  (->> s\n            (drop n)\n            first))","user":"58949f8de4b00487982d525e"},{"code":"(fn [x n] (first (nthrest x n)))","problem":21,"user":"51b3a2c8e4b0f094dd986fa6"},{"problem":21,"code":"(fn [xs i]\n  (first (drop i xs)))","user":"595d224de4b066ee0a44b016"},{"problem":21,"code":"(fn theNLast [x n] \n   (loop [xi x ni n]\n     (if (zero? ni)\n     \t(first xi)\n    (recur (rest xi) (dec ni)))))","user":"5bf0b940e4b0a6d31fed215c"},{"code":"(fn [sq pos]\n          ( loop [s sq n pos] \n           (if (= n 0)\n              (first s)\n              (recur (rest s) (dec n)))\n             \n              ))","problem":21,"user":"51e7c1f1e4b0a3e081b8cbef"},{"code":"(fn [sequ index] (if (= index 0) (first sequ) (recur (rest sequ) (dec index))) )","problem":21,"user":"52ee46e5e4b05e3f0be25ec5"},{"problem":21,"code":"(fn mynth [x n]\n  (if (zero? n)\n    (first x)\n    (mynth (rest x) (dec n))))","user":"544257b4e4b032a45b869379"},{"code":"(fn [seq x]\n  (first (drop x seq))\n)","problem":21,"user":"4e7dd782535db169f9c796eb"},{"problem":21,"code":"(fn [coll i] (first (keep-indexed #(if (= % i) %2) coll)))","user":"56441634e4b0018b46ad8c08"},{"code":"(fn kth [xs, k]\n  (if (= k 0)\n    (first xs)\n    (kth (rest xs) (- k 1))\n  )\n)","problem":21,"user":"523b424ee4b02f719975bdc1"},{"code":"#(last (take (inc %2) %1))","problem":21,"user":"4deb529a535d08e6dec9fe04"},{"code":"(fn [s n]\n  (if (= n 0) (first s) (recur (rest s) (dec n))))","problem":21,"user":"5013193ae4b0f26a0e3320ab"},{"problem":21,"code":"(fn [arr totalcount]\n  (loop [arr arr innercount 0]\n    (if (= totalcount innercount)\n      (first arr)\n      (recur (rest arr) (inc innercount)))))","user":"5796e0afe4b039eba2ecb0f0"},{"problem":21,"code":"(fn nth1 [l n]\n  (if (zero? n)\n    (first l)\n    (nth1 (rest l) (dec n))))","user":"563b9acbe4b0bfe05bf11827"},{"code":"#(last (first (partition (+ 1 %2) %1)))","problem":21,"user":"519964cbe4b0aa09cbc0b849"},{"code":"(fn [seq x]\n  (first (reverse (take (+ 1 x) seq))))","problem":21,"user":"502ad27fe4b0614b5299611e"},{"code":"(fn [ary n]\n  (if (zero? n) \n     (first ary) \n     (recur (next ary) (dec n))))","problem":21,"user":"5398e3dde4b0b51d73faaf02"},{"code":"(fn [coll idx]\n  ((vec coll) idx)\n  )","problem":21,"user":"4eb9c7ba535dfed6da9c6d5b"},{"code":"(fn [a b]\n  (loop [c 0\n         a a\n         b b]\n    (if (= c b)\n      (first a)\n      (recur (inc c) (rest a) b))))","problem":21,"user":"51910da7e4b0f8ef0be96bf9"},{"code":"(fn [list num] (if (= num 0) (first list) (recur (rest list) (dec num))))","problem":21,"user":"4ed8715c535d10e5ff6f52f9"},{"code":"(fn nthelement [numbers n]\n    (if (= 0 n)\n        (first numbers)\n        (nthelement (rest numbers) (dec n))\n    )\n)","problem":21,"user":"51d1111ce4b067c36548635f"},{"code":"(fn nthElement [seq n] (.get seq n))","problem":21,"user":"50b63309e4b0a86f8358ca68"},{"code":"(fn [l, i]\n  (if (= i 0)\n    (first l)\n    (recur (rest l) (dec i))))","problem":21,"user":"4f031773535dcb61093f6a5c"},{"problem":21,"code":"(fn mn [l index]\n (if (= 0 index)\n   (first l)\n   (mn (rest l) (dec index))))","user":"58976bfde4b00487982d52bc"},{"code":"(fn [coll n]\n  (loop [pos n\n         remaining coll]\n         (if (zero? pos) \n           (first remaining) \n           (recur (dec pos) (rest remaining)))))","problem":21,"user":"51030575e4b00c483ae176ff"},{"problem":21,"code":"(fn [coll n]\n  (loop [i 0 rest-coll coll]\n    (if (= i n)\n      (first rest-coll)\n      (recur (inc i) (rest rest-coll)))))","user":"5f15a50fe4b091ba50b4dbbc"},{"problem":21,"code":"(fn[a b] ( first( drop b a )))","user":"5762b38ce4b0994c1922fbad"},{"code":"#(loop [n %2 col %1]\n    (if (zero? n)\n      (first col)\n      (recur (dec n) (rest col))))","problem":21,"user":"524d2a98e4b0752c4cb68cd8"},{"code":"(fn[col, i] (last(drop-last (dec (- (count col) i)) col)))","problem":21,"user":"5049fb24e4b044486d8af28d"},{"problem":21,"code":"(fn [coll n]\n  (if (= n 0) (first coll)\n    (recur (rest coll) (dec n))))","user":"5ed9c2cde4b0c7845d86b0e4"},{"code":"(fn [x y]  (last (take (+ y 1) x)))","problem":21,"user":"50eb905fe4b0eeda2f1f3863"},{"code":"#(second(take-nth %2 %1))","problem":21,"user":"5086ca15e4b004985b776e62"},{"code":"(fn f [x y]\n  (if (= y 0) (first x) (f (rest x) (dec y))))","problem":21,"user":"4ea365e2535d7eef308072c5"},{"problem":21,"code":"(fn [coll n]\n\t(last\n    \t(take (+ n 1) coll)))","user":"543f1765e4b032a45b86935a"},{"problem":21,"code":"(fn [col ind] (if (zero? ind) (first col) (recur (rest col) (- ind 1))))","user":"54f8e998e4b01ecee9d88831"},{"problem":21,"code":"(fn [col i] (first (reverse (take (+ i 1) col))))","user":"5463c452e4b01be26fd746c4"},{"code":"(fn atindex[l n] (if (= n 0) (first l) (atindex (rest l) (- n 1))))","problem":21,"user":"52cbe910e4b07d0d72b27353"},{"problem":21,"code":"(fn [lst x] (get (into [] lst) x))","user":"54258e71e4b01498b1a71b0e"},{"code":"(fn [s i] ((into [] s) i))","problem":21,"user":"4fc8f1fee4b0ee37620e183f"},{"code":"#(loop [c %1 i %2]\n  (if (= i 0) (first c) (recur (rest c) (dec i))))","problem":21,"user":"4f8ab084e4b02e764a0a5171"},{"code":";; Anything you type in here will be executed\n;; immediately with the results shown on the\n;; right.\n(fn [x n] (loop [l x\n                     i 0]\n              (if (= n i)\n                (first l)\n                (recur (rest l) (inc i)))))","problem":21,"user":"4feacba7e4b0140c20fb9c0e"},{"problem":21,"code":"#(get (into [] %1) %2 )","user":"56e6e1e6e4b02e7e935eb6cf"},{"problem":21,"code":"(fn [seq num]\n    (first (nthrest seq num)))","user":"5bdee4bee4b0ed4b8aab4c67"},{"code":"(fn [s n] (first(drop n s)))","problem":21,"user":"5010861fe4b04030df6167af"},{"code":"(fn [xs n]\r\n  (if (zero? n)\r\n    (first xs)\r\n    (recur (rest xs) (dec n))))","problem":21,"user":"4e07af97535d04ed9115e7a8"},{"code":"(fn my-func [xs i] \r\n  (if (= i 0) \r\n      (first xs) \r\n      (my-func (rest xs) (- i 1))))","problem":21,"user":"4ee75ec2535d93acb0a66867"},{"problem":21,"code":"(fn look [xs count ] \n  (if (= count 0)\n    (first xs)\n    (look (rest xs ) (dec count))))","user":"5fcce3b1e4b07e53c2f3eff6"},{"code":"(fn nth_2 [xs n]\r\n  (if (zero? n)\r\n     (first xs)\r\n     (recur (rest xs) (- n 1))))","problem":21,"user":"4e123905535d04ed9115e7ce"},{"code":"(fn [data n] (.get data n))","problem":21,"user":"525c29a4e4b0cb4875a45d37"},{"problem":21,"code":"(fn [coll number] (first (drop number coll)))","user":"560e38f2e4b05f002753df4c"},{"code":"#(last (take (+ 1 %2) %1) )","problem":21,"user":"4f5a10d8e4b0030a34fb2ae5"},{"problem":21,"code":"(fn [xs cnt] (->> (map vector (range) xs) (filter #(= cnt (first %))) first second))","user":"57717915e4b0979f896515b3"},{"problem":21,"code":"(fn enth\n [coll idx]\n  (if (= idx 0)\n    (first coll)\n    (enth (rest coll)(- idx 1))))","user":"56618424e4b068f2fe63dc67"},{"problem":21,"code":"(fn [values n] (loop [iteration 0 vals values]\n    (if (= iteration n)\n      (first vals)\n      (recur (inc iteration) (rest vals))\n    )\n  ))","user":"56ae109be4b03c432f187359"},{"problem":21,"code":"(fn [sez n] (loop [coll sez x n] (if (zero? x) (first coll) (recur (rest coll) (dec x)))))","user":"5684e200e4b04eec3ec5cfc4"},{"code":"#(loop [n %2 c %]\n       (if (zero? n)\n         (first c)\n         (recur (dec n) (rest c))))","problem":21,"user":"52a9154ee4b0c58976d9ac3b"},{"code":"(fn [s x] (first (drop x s)))","problem":21,"user":"4f65140ee4b07046d9f4ef3b"},{"code":"(fn [a b]  \n\t(if (zero? b)\n      (first a)\n      (recur (rest a) (- b 1))\n             ))","problem":21,"user":"52f0ea04e4b05e3f0be25ee6"},{"code":"(fn [s n] (let [s' (take (+ 1 n) s)] (last s')))","problem":21,"user":"51a8b576e4b08d8ec191b81a"},{"problem":21,"code":"(fn [v n] (last (take (inc n) v)))","user":"5dee6926e4b093ff71727598"},{"code":"#(loop [xs %1\n        cnt %2]\n  (if (zero? cnt)\n    (first xs)\n    (recur (rest xs) (dec cnt))))","problem":21,"user":"4f031639535dcb61093f6a59"},{"code":"(fn [mylist n]\n  (loop [counter 0\n         temp mylist\n         ]\n    (if (= counter n)\n      \t(first temp)\n      \t(recur (inc counter) (rest temp)))))","problem":21,"user":"52a5a8ebe4b0c58976d9abed"},{"code":"(fn\n  [xs num]\n  (if (= num 0)\n    (first xs)\n    (recur (rest xs) (dec num))))","problem":21,"user":"4fceb350e4b03432b189f403"},{"problem":21,"code":"(fn nthed[x n]\n  (first (nthnext x n)))","user":"5661292fe4b068f2fe63dc63"},{"problem":21,"code":"; #(first (keep-indexed (fn [i v] (if (= i %2) v)) %1))\n#(first (drop %2 %1))","user":"5adb8d47e4b0837691e92bf1"},{"problem":21,"code":"( fn [l n] (.get l n))","user":"5911ba93e4b0163c97b36eda"},{"problem":21,"code":"(fn [x n]\n  (loop [s (seq x)\n         i n]\n    (if (pos? i)\n      (recur (rest s) (dec i))\n      (first s))))","user":"5e80edc3e4b09a7a73c8bba9"},{"code":"#(first (drop %2 (seq %1)))","problem":21,"user":"502904e0e4b0feaf66e22fad"},{"code":"(fn\n   [ls pos]\n   (if (zero? pos)\n     (first ls)\n     (recur (rest ls) (dec pos))))","problem":21,"user":"4fc8c8d8e4b0ee37620e183b"},{"problem":21,"code":"(fn find-nth [seq n] (first (keep-indexed (fn [idx item] (cond (= idx n) item)) seq)))","user":"5784e2a6e4b0ebec4cfb74d0"},{"problem":21,"code":"(fn aux [xs n]\n  (if (= n 0)\n    (first xs)\n    (aux (rest xs) (- n 1))))","user":"57275898e4b0c5bde472c13e"},{"problem":21,"code":"(fn [a b]\n  (if (= b 0) (first a) (recur (rest a) (- b 1))))","user":"55fb12dce4b0f488688e065a"},{"code":"(fn nn [seq n] (if (= n 0) (first seq) (nn (rest seq) (dec n))))","problem":21,"user":"5226f9b8e4b04e78ff2e199b"},{"code":";((fn [seq idx] (if (= idx 0) (first seq) (recur (rest seq) (- idx 1))))\n#(first (drop %2 %1))","problem":21,"user":"512587ade4b05d10e3e395fb"},{"problem":21,"code":"(fn [x n] (case n\n            0 (first x)\n            1 (second x)\n            2 (second (next x))\n            )\n  )","user":"5cf938a5e4b0b71b1d808a90"},{"problem":21,"code":"(fn f \n  ([s] (f s (count s)))\n  ([s i]\n   \t(if (<= i 0) (first s) (recur (rest s) (- i 1)))))","user":"54ad8d2ee4b09f271ff37ce4"},{"problem":21,"code":"(fn [coll idx] (peek (vec (take (inc idx) coll))) )","user":"5a535572e4b05d388ecb6c0b"},{"code":"(fn [lst n] (last (take (inc n) lst)))","problem":21,"user":"4eb9353f535dfed6da9c6d4e"},{"problem":21,"code":"(fn [x y]\n  (loop [x x\n         y y\n         nt 0]\n    (if ( = nt y)\n      (first x)\n     (recur (rest x) y (inc nt)))))","user":"54d529cbe4b0a52adc2e2009"},{"problem":21,"code":"(fn [col n] \n  (loop [i 0 e col] \n    (if (= i n) \n      (first e)\n      (recur (inc i) (rest e))) ) )","user":"5f055b2de4b0cf489e8d7f43"},{"code":"(fn [xn target] (first (drop target xn)))","problem":21,"user":"52854795e4b0239c8a67adee"},{"code":"(fn [xs n]\n \t(loop [xs xs n n]\n  (if (= n 0)\n    (first xs)\n    (recur (rest xs) (- n 1)))))","problem":21,"user":"526302eee4b03e8d9a4a70a2"},{"problem":21,"code":"(fn [sq n]\n  (last (take (+ n 1) sq)))","user":"58d48df8e4b03c36ff7e5941"},{"code":"(fn [x n]\n  (loop [x x n n]\n    (if (= n 0)\n      (first x)\n      (recur (rest x) (dec n)))))\n\n;#(first (drop %2 %))","problem":21,"user":"5353726be4b084c2834f4b00"},{"problem":21,"code":"(fn _nth [s n]\n  (if (= n 0)\n    (first s)\n    (_nth (rest s) (- n 1))\n    ))","user":"4f0368ee535dcb61093f6aae"},{"problem":21,"code":"(fn nth-element [s n]\n (first (drop n s)))","user":"5af554e8e4b0cc2b61a3bca6"},{"code":"(fn [x n] ((apply comp (cons first (repeat n rest))) x))","problem":21,"user":"4e89de60535d3e98b8023285"},{"problem":21,"code":"(fn [x, y] \n  ( .get x y ))","user":"582c9851e4b051871117bf99"},{"code":"(fn get-nth[list element] (last(drop-last(- (count list) (+ element 1)) list)))","problem":21,"user":"4e9def6b535dbda64a6f6b8f"},{"code":"(fn [x y]\n    (if (= y 0)\n      (first x)\n      (recur (rest x) (- y 1))))","problem":21,"user":"5024d54fe4b07ca75732c81f"},{"problem":21,"code":"(fn f [x i] (if (= i 0) (first x) (f (rest x) (dec i))))","user":"54d412e2e4b0a52adc2e1ffe"},{"problem":21,"code":"(fn k-last [lst n] (first (drop n lst)))","user":"59deba46e4b01968742fed7f"},{"problem":21,"code":"(fn get-nth\n  [s n]\n  (if (> n 0)\n    (get-nth (rest s) (- n 1))\n    (first s)))","user":"59a06e55e4b0871e7608b835"},{"problem":21,"code":"(fn [x n] (last (take (inc n) x ) ) )","user":"5954ff28e4b066ee0a44af1b"},{"problem":21,"code":"(fn [coll n]\n  (loop [coll coll\n         index 0]\n    (if (= index n)\n      (first coll)\n      (recur (rest coll)\n             (inc index)))))","user":"5defc177e4b093ff717275af"},{"problem":21,"code":"(fn getNth [x i] (get (vec x) i))","user":"58d533fae4b03c36ff7e5958"},{"problem":21,"code":"(fn fn [xs n]\n\t(\n    \tfirst (drop n xs)\n    )\n)","user":"516ee939e4b06aac486e5b34"},{"code":"(fn [seq n]\n  (loop [seq seq\n         n n]\n    (if (= n 0)\n      (first seq)\n      (recur (rest seq) (- n 1)))))","problem":21,"user":"51a132cee4b0b292b01ee3ff"},{"code":"(fn [col idx] (if (= 0 idx) (first col) (recur (rest col) (- idx 1))))","problem":21,"user":"4ea8a997535d7eef308072ff"},{"code":"#(loop [n %2 xs %1] (if (= n 0) (first xs) (recur (- n 1) (rest xs))))","problem":21,"user":"4e85cda3535db62dc21a62f0"},{"problem":21,"code":"(fn [x n] \r\n  (if (zero? n)\r\n    (first x)\r\n    (recur (rest x) (dec n))))","user":"606e0a42e4b069485764de19"},{"problem":21,"code":"(fn [p1 p2] (last (take (+ p2 1) p1)))","user":"578cc0cce4b0ebec4cfb755f"},{"code":"(fn [lst n]\n  (first (nthrest lst n)))","problem":21,"user":"50ef585ae4b0bdaecbb47d97"},{"problem":21,"code":"#(->> %1 (take (inc %2)) (reverse) (first))","user":"51bb08a4e4b0fe3ecfb46446"},{"problem":21,"code":"(fn [r n]\n  (loop [listy r indexy n]\n    (if (= indexy 0)\n      (first listy)\n      (recur (rest listy) (- indexy 1)))))","user":"54bc6c75e4b0ed20f4ff6ed0"},{"problem":21,"code":"(fn Nth [sq n]\n  (if (= n 0) (first sq) (Nth (next sq) (dec n))))","user":"565a3e25e4b068f2fe63dbfb"},{"code":"(fn [s n]\n  (if (= n 0)\n    (first s)\n    (recur (rest s) (dec n))))","problem":21,"user":"4ec92a04535d6d7199dd36fa"},{"problem":21,"code":"(fn mth [l m]\n  (if (zero? m)\n    (first l)\n    (mth (rest l) (- m 1))\n    )\n  )","user":"54eb3a9ee4b024c67c0cf846"},{"code":"(fn [c i]\n              (first \n                    (drop i c)))","problem":21,"user":"52d0fadce4b07d0d72b273c0"},{"problem":21,"code":"(fn nth-element[seq-in n]\n  (last(take (+ n 1) seq-in))\n  )","user":"555c7517e4b0b056612e224e"},{"problem":21,"code":"#(loop [l %1 c %2]\n  (if (= c 0)\n    \t(first l)\n      (recur (rest l) (dec c))))","user":"553f405ce4b0a04f792994f6"},{"problem":21,"code":"(fn [li, id] (last (take (inc id) li)))","user":"586a657de4b0f14aab7c88bd"},{"problem":21,"code":"(fn [coll n]\n  (if (= n 0) (first coll)\n    (recur (rest coll) (- n 1))))","user":"5421f74fe4b01498b1a71abb"},{"code":"(fn [l n] (first (drop n l)))","problem":21,"user":"4e7d2448535db169f9c796c8"},{"code":"(fn [coll n] (-> (drop n coll) first))","problem":21,"user":"4f39c08ae4b0e243712b1efb"},{"problem":21,"code":"(fn [mylist i] (first (drop i mylist)))","user":"59e337dae4b08badc2a0c52d"},{"problem":21,"code":"(fn [vec idx] (loop [v vec i idx] (if (= i 0)             (first v) (recur (rest v) (dec i)))))","user":"5547432ee4b0a04f79299548"},{"problem":21,"code":"(fn [sec n] (first(drop n sec)))","user":"588906a9e4b0f1effa3b772a"},{"code":"(fn my-nth [l n]\n  (if (> n 0)\n    (my-nth (rest l) (- n 1))\n    (first l)))","problem":21,"user":"51460e4ce4b04ef915e37314"},{"problem":21,"code":"(fn [lst n]\n  (loop [ix 0\n         remaining lst]\n    (if (= ix n)\n      (first remaining)\n      (recur (inc ix) (rest remaining)))))","user":"540b2dcbe4b0addc1aec66f4"},{"problem":21,"code":"#(loop [coll %1 n %2] (if (= 0 n) (first coll) (recur (rest coll) (dec n))))","user":"5880d686e4b0f1effa3b7623"},{"problem":21,"code":"(fn [l n] \n  (last (take (+ n 1) l)))","user":"54b2c888e4b09f271ff37d2e"},{"problem":21,"code":"#(if(vector? %)(get % %2)(get (into [] %) %2))","user":"562e9f5fe4b0ab312c17ebbd"},{"problem":21,"code":"(fn another-nth [seq n]\n  (if (= n 0)\n    (first seq)\n    (another-nth (rest seq) (- n 1))))","user":"53bab6fae4b047364c0444fb"},{"problem":21,"code":"(fn [collection n]\n  (if (= n 0)\n  (first collection)\n  (recur (rest collection) (- n 1))))","user":"58cd6093e4b03c36ff7e5888"},{"problem":21,"code":"(fn nth-element\n  \t[coll n]\n  \t(if (= 0 n)\n      (first coll)\n      (nth-element (rest coll) (dec n))))","user":"591e1dc7e4b09b4ee5954c2a"},{"problem":21,"code":"(fn [xs, index] (get (vec xs) index))","user":"592af6eee4b072a2710fcf2c"},{"code":"(fn f [y, x] (first(reverse(take (+ x 1), y))))","problem":21,"user":"4f8c933ae4b02e764a0a51a1"},{"code":"(fn [x s] (if (= s 0) (first x) (recur (rest x) (dec s))))","problem":21,"user":"5179fd22e4b01aacecbecbe5"},{"code":"(fn getn\n  ([collection target]\n   (if (zero? target)\n     (first collection)\n     (getn 1 (next collection) target)))\n  ([count collection target]\n   (if (= target count)\n     (first collection)\n     (getn (inc count) (next collection) target))))","problem":21,"user":"4fe8b1d9e4b07c9f6fd12c71"},{"code":"(fn [d idx]\n      ((apply comp (concat [first] (repeat idx rest))) d))","problem":21,"user":"52bbe6e1e4b07a9af57922ef"},{"problem":21,"code":"(fn [l, n] (last (take (+ 1 n) l)))","user":"589f0b8ee4b02bd94d917e71"},{"code":"(fn [s n]\n    (if (= n 0) \n        (first s)\n        (recur (rest s) (dec n))))","problem":21,"user":"4e7e3cc4535db169f9c7970a"},{"problem":21,"code":"(fn\n  [s n]\n  (if (zero? n)\n    (first s)\n    (recur (rest s) (dec n))))","user":"5455a6d3e4b0e397800069e2"},{"problem":21,"code":"(fn mynth [xs n] (if (= n 0) (first xs) (mynth (rest xs) (dec n))))","user":"5fcc1ed3e4b07e53c2f3eff1"},{"problem":21,"code":"(fn doNth [theList n] (\n   if (= n 0)\n      (first theList)\n      (doNth (rest theList) (- n 1))                     \n))","user":"578d0ec0e4b0ebec4cfb7563"},{"code":"(fn [x, y]\n    (loop\n      [x x\n       y y\n       z 0]\n    \t(if (= y z)\n        (first x)\n        (recur (rest x) y (inc z))  \n      ))\n    \n  )","problem":21,"user":"50d8a50de4b01f0871336e6d"},{"code":"(fn my-nth [coll n]\n  (cond (zero? n)  (first coll)\n        (seq coll) (my-nth (rest coll) (dec n))))","problem":21,"user":"4dabb7b1950ed6eda1bd72f3"},{"problem":21,"code":"#(loop [coll %\n        \t n 0]\n   \t(if (< n %2)\n      (recur (rest coll) (inc n))\n      (first coll)))","user":"5bab49bbe4b0a20761a23474"},{"problem":21,"code":"#(first (reverse (take (+ %2 1) %1  )))","user":"534046e3e4b085b17e897daa"},{"problem":21,"code":"(fn [collec idx] \n  (first (reverse (take (+ idx 1) collec)))\n)","user":"57f3f942e4b07bbd65c32b1b"},{"problem":21,"code":"(fn [items idx] (last (take (+ idx 1) items)))","user":"54996971e4b0b312c081ff8d"},{"problem":21,"code":"(fn xnth \n  [s n] \n  \n  (if (= n 0)\n    (first s)\n    (xnth (rest s) (dec n))\n  )\n)","user":"60538924e4b04c8f2157d153"},{"problem":21,"code":"(fn mynth [nthv n] (if (> n 0) (mynth (rest nthv) (- n 1)) (first nthv)))","user":"56c08c7fe4b060a8e693e3ab"},{"problem":21,"code":"(fn [coll n] \"nth element from sequence\" (get (into [] coll) n))","user":"54de7948e4b024c67c0cf7a4"},{"problem":21,"code":"(fn \n  [list n]\n  (loop [count n\n         tmp-lst list]\n    (if (zero? count)\n      (first tmp-lst)\n      (recur (dec count) (rest tmp-lst)))))","user":"55838353e4b05c286339e116"},{"problem":21,"code":"(fn [lst idx]\n  (if (= idx 0)\n    (first lst)\n    (recur (rest lst) (- idx 1))))","user":"5c5e3af7e4b01df32ab732c6"},{"code":"(fn my-nth [lst n] (if (= n 0) (first lst) (my-nth (rest lst) (- n 1))))","problem":21,"user":"50e5bca5e4b09ae9427b0e75"},{"code":"(fn [c i] \n  (if (= 0 i)\n    (first c)\n    (recur (rest c) (dec i))))","problem":21,"user":"4db2eac3535df7e46ed9b6c8"},{"problem":21,"code":"(fn [xs index] \n  (if (= index 0) \n    (first xs)\n    (recur (rest xs) (dec index)))\n  )","user":"58b783f2e4b0ebc645576d7f"},{"problem":21,"code":"(fn [seq idx] (let [op-seq seq] (loop [head (first op-seq) tail (rest op-seq) op-idx 0] (if (= op-idx idx) head (recur (first tail) (rest tail) (inc op-idx))))))","user":"56481722e4b0284900eef628"},{"problem":21,"code":"(fn [l n] (cond (= n 0) (first l)\n                :else (recur (rest l) (- n 1))))","user":"5717e875e4b07c98581c3b20"},{"problem":21,"code":"(fn mynth [col n]\n  (first (drop n col)))","user":"561eb82fe4b064ca9f4b16c7"},{"problem":21,"code":"(fn [numb n] (first (drop n numb)))","user":"5f7e91c8e4b0c071e6c840d8"},{"code":"(fn [l n]\n  (get (vec l) n))","problem":21,"user":"500fee8ee4b0981581aecbb0"},{"problem":21,"code":"(fn getNth [arr num]\n    (if (= 0 num)\n      (first arr)\n      (getNth (rest arr) (dec num))\n    )\n)","user":"5bf2cf8be4b0a6d31fed217c"},{"problem":21,"code":";;(fn my-nth [xs n]\n;;  (last (take (inc n) xs)))\n    \n(fn my-nth2 [xs n]\n  (loop [xs xs n n]\n    (if (zero? n)\n      (first xs)\n      (recur (rest xs) (dec n)))))","user":"57210b6de4b0c5bde472c0a6"},{"code":"(fn [lst nm] (first (drop nm lst)))","problem":21,"user":"525b10a4e4b0cb4875a45d02"},{"problem":21,"code":"(fn\n  [lst n]\n  (second (first (filter #(= (first %) n) (map-indexed vector lst)))))","user":"5a99b688e4b0d174b936c7a6"},{"problem":21,"code":"(fn hello [xs n]\n  (if (= n 0)\n  \t\t(first xs)\n  \t\t(hello (rest xs) (dec n))))","user":"5e394c33e4b01d43a70e8dd1"},{"problem":21,"code":"(fn [seq pos]\n  (first (drop pos seq)))","user":"55f85b93e4b03cbcff9738ae"},{"code":"(fn [l n]\n  (loop [i 0\n         l l]\n    (if (= i n)\n      (first l)\n      (recur (inc i) (rest l)))))","problem":21,"user":"4e59b02c535d8a8b8723a2a2"},{"code":"(fn [s n] (first (drop n s ) ) )","problem":21,"user":"536c1119e4b0fc7073fd6e34"},{"problem":21,"code":"(fn altNth [x idx]\n  (if (= idx 0)\n    (first x)\n    (altNth (rest x) (- idx 1))))","user":"56c55c5ee4b05cc29241eea4"},{"problem":21,"code":"(fn \n [coll n]\n  (loop [i 0\n         x (first coll)\n          the-rest (rest coll)]\n           (if(= i n)\n            x\n            (recur (inc i) (first the-rest) (rest the-rest)))))","user":"5d0a65ebe4b0cc9c9158821f"},{"problem":21,"code":"(fn grab [l n] (first (nthrest l n)))","user":"546bd4c4e4b00cfc9eacc16f"},{"code":"(fn [a-seq at]\r\n  (loop [as a-seq idx 0]\r\n    (if (= idx at) (first as)\r\n      (recur (rest as) (inc idx)))))","problem":21,"user":"4faa8de0e4b081705acca1f8"},{"problem":21,"code":"(fn [coll n]\n  (cond\n   (zero? n) (first coll)\n   :else (recur (rest coll) (dec n))))","user":"596f01a5e4b069c0a1a19870"},{"code":"(fn ticker [collection numbrah]\n  (if (<= numbrah 0)\n  (first collection)\n  (ticker (rest collection) (- numbrah 1))))","problem":21,"user":"53120cb5e4b08068f379ecf0"},{"problem":21,"code":"(fn [sqc\n     index]\n  ((vec sqc) index))","user":"5cbcacc2e4b026601754b9ed"},{"code":"(fn [l i] (second (first (filter #(= (first %) i) (map-indexed list l)))))","problem":21,"user":"52265e41e4b04e78ff2e1981"},{"problem":21,"code":"(fn [s x]\n  (if (= x 0)\n    (first s)\n    (recur (rest s) (dec x))\n  )\n)","user":"5ac74b34e4b0e27600da777f"},{"code":"(fn list-ref [s n]\n  (if (= n 0)\n    (first s)\n    (list-ref (next s) (- n 1))))","problem":21,"user":"5151d574e4b03e678e393ae0"},{"code":"(fn fixme [b a] \n  (if (= a 0) \n  (first (list* b))\n  (fixme (rest (list* b)) (- a 1))))","problem":21,"user":"4fe96115e4b0547ebccb2459"},{"problem":21,"code":"(fn [xs, i]\n  (if (= 0 i)\n    (first xs)\n    (recur (next xs) (dec i)))\n)","user":"5682d5b4e4b0945ebc182a95"},{"code":"(fn index [elems n] \n  (if (< n 1)\n    (first elems)\n    (index (next elems) (- n 1))))","problem":21,"user":"514677dce4b04ef915e3731a"},{"code":"(fn [l num]\n  (if (zero? num)\n    (first l)\n    (recur (rest l) (dec num))))","problem":21,"user":"51515a19e4b03e678e393acc"},{"code":"(fn [list n]\n  (if (zero? n)\n    (first list)\n    (recur (rest list) (dec n))))","problem":21,"user":"506c8116e4b0a302964c548a"},{"problem":21,"code":"(fn [xs n]\n(loop [cxs xs cn n]\n  (if (= cn 0)\n    (first cxs)\n    (recur (rest cxs) (- cn 1)))))","user":"550212c0e4b07d26eda61d80"},{"code":"(fn [s n]\n  (if (zero? n)\n    (first s)\n    (recur (rest s) (dec n))))","problem":21,"user":"4e9e4515535dbda64a6f6b95"},{"code":"(fn [l n]\n  (loop [lst l cnt 0]\n    (if (= cnt n)\n        (first lst)\n        (recur (next lst) (inc cnt)))))","problem":21,"user":"4ef5c847535dced4c769f249"},{"code":"#(loop [seq %1 n %2]\n  (if (zero? n) (first seq) (recur (rest seq) (dec n))))","problem":21,"user":"50c7e98ee4b00bb60fe0c53a"},{"problem":21,"code":"(fn find-n [seq n]\n  (if (= n 0)\n    (first seq)\n    (find-n\n     (rest seq)\n     (- n 1))))","user":"5d28d935e4b092dab7f59c88"},{"problem":21,"code":"(fn [lis pos] \n  (if (= pos 0) \n    (first lis) \n    (recur (rest lis) (- pos 1))\n  )\n)","user":"5926c254e4b072a2710fceb8"},{"problem":21,"code":"(fn [coll index] ((zipmap (range) coll) index))","user":"543b5bc6e4b032a45b86932d"},{"problem":21,"code":"(fn [s th] (if (= 0 th) (first s) (recur (rest s) (dec th))))","user":"56cdbd53e4b0ea9b8538f751"},{"problem":21,"code":"#(loop [s %1, i %2]\n   (if (< i 1)\n     (first s)\n     (recur (rest s) (- i 1))))","user":"5ad002f2e4b0ea6055cfab87"},{"problem":21,"code":"(fn [coll, i] (last (take (+ i 1) coll)))","user":"5da9d89ae4b000c986472c3b"},{"problem":21,"code":"(fn rec [list index] (if (= index 0) (first list) (rec (rest list) (- index 1))))","user":"59a09b1de4b0871e7608b83a"},{"code":"(fn mynth [col1 n] \n        (let [rest_col1 (rest col1)]\n            (cond \n              (= n 0) (first col1)\n              (= `() col1) nil\n              true ( mynth rest_col1 (- n 1)))))","problem":21,"user":"50ead6ffe4b02d54280826e2"},{"code":"#(if (= 0 %2) \n      (first %1)\n\t    (recur (rest %1) (- %2 1)))","problem":21,"user":"50668a06e4b03d366d7cb2b2"},{"problem":21,"code":"(fn el [c n]\n  (if (= 0 n)\n    (first c)\n    (el (rest c) (- n 1))))","user":"53b14dfce4b047364c04448d"},{"problem":21,"code":"(fn my-n-th[s p] \n  (if (= 0 p)\n    (first s)\n    (recur (rest s) (- p 1))))","user":"55be18e5e4b01b9910ae2a01"},{"code":"(fn foo [l i]\n  (if (= i 0)\n    (first l)\n    (foo (rest l) (- i 1))))","problem":21,"user":"539fc894e4b0ca733b9744a2"},{"code":"(fn[a b] (last (take (inc b)  a)))","problem":21,"user":"5002c798e4b0678c553fc42d"},{"problem":21,"code":"(fn [l i] (\n  loop [ll l index i]\n  (if (= index 0)\n   (first ll)\n   (recur (rest ll) (dec index))\n  )))","user":"59a0262ee4b0871e7608b82d"},{"code":"(fn mynth [sequ n]\n  (if (zero? n)\n    (first sequ)\n   \t(recur (rest sequ) (- n 1))))","problem":21,"user":"5344a0efe4b084c2834f4a2d"},{"code":"(fn [c n] (last(take (+ 1 n) c)))","problem":21,"user":"502ac868e4b0614b5299611a"},{"code":"(fn [x y] (first (nthnext x y) ) )","problem":21,"user":"537bca8be4b06839e8705e71"},{"code":"(fn [x n]\n  (last(take (inc n) x)))","problem":21,"user":"534f25f9e4b084c2834f4ac6"},{"problem":21,"code":"(fn [arr i] (first (nthrest arr i)))","user":"57024999e4b08d47c97781de"},{"problem":21,"code":"(fn [colle numb] (first (drop numb colle)))","user":"607e1cf9e4b03d835a6eaed9"},{"problem":21,"code":"(fn [coll n] (first (subvec (vec coll) n )\n                   ))","user":"55f2c898e4b06e875b46ce4b"},{"problem":21,"code":"(fn [items n]\n  (loop [i 0 curr-items items]\n    (if (= i n)\n      (first curr-items)\n      (recur (inc i) (rest curr-items)))))","user":"572a997ce4b0f4d77e65123e"},{"problem":21,"code":"(fn -main \n  [c i]\n  (last (drop-last i (reverse c))))","user":"5baaa1bae4b0a20761a23463"},{"problem":21,"code":"(fn [col n] ((vec col) n))","user":"51e8ee6be4b07cae92c04bfd"},{"code":"(fn [x, y]\n  ((fn test [x, y, z]\n     (if (= z y)\n       (first x)\n       (test (rest x) y (+ 1 z))\n      )\n   ) x y 0)\n)","problem":21,"user":"524ed632e4b0541d1855b7f2"},{"code":"#(loop [seq %1 index %2]\n  (if (> index 0)\n    (recur (rest seq) (dec index))\n    (first seq)))","problem":21,"user":"4f037310535dcb61093f6ad6"},{"code":"(fn ! [seq n] \n  (if (= n 0)\n    (first seq)\n    (! (rest seq) (dec n))\n  )\n)","problem":21,"user":"51db8244e4b0e067a9bbadc7"},{"problem":21,"code":"(fn [coll n]\n            (if (zero? n)\n              (first coll)\n              (recur (rest coll) (dec n))))","user":"54258a7fe4b01498b1a71b0c"},{"code":"(fn my-nth [coll index]\n  ((fn -my-nth [-coll -index -actual] \n    (if (= -index -actual)\n        (first -coll)\n        (recur (next -coll) -index (inc -actual) )))\n  coll index 0))","problem":21,"user":"4f038ed6535dcb61093f6b24"},{"problem":21,"code":"(fn [coll key] (get (vec coll) key))","user":"5a7df247e4b03baeef927704"},{"code":"(fn n [coll index](\n  if (= index 0)\n    (first coll)\n    (n (rest coll) (- index 1))))","problem":21,"user":"4ed42c78535d10e5ff6f52c7"},{"code":"#((comp first drop) %2 %1)","problem":21,"user":"4e260220535deb9a81d77ef0"},{"problem":21,"code":"(fn [coll n]\n  (cond\n    (empty? coll) nil\n    (zero? n) (first coll)\n    :else (recur (rest coll) (dec n))))","user":"5ab16992e4b073f1774425c4"},{"problem":21,"code":"(fn keep-looking\n  ([coll idx currentIdx]\n  (if (= idx currentIdx)\n    (first coll)\n    (keep-looking (rest coll) idx (inc currentIdx))))\n  ([coll idx] (keep-looking coll idx 0)))","user":"57e9a77ae4b0bfb2137f5b35"},{"problem":21,"code":"(fn [listarg, n] (get (vec listarg) n))","user":"56252effe4b00a550fc90294"},{"problem":21,"code":"(fn [x y]\n   (last (take (inc y) x)))","user":"5d1b59abe4b02ea6f0fb697e"},{"problem":21,"code":"(fn nt\n  [x i]\n  (loop [i i\n         x x\n         cont 0]\n    (if (= cont i)\n      (first x)\n      (recur i (rest x) (+ cont 1)))))","user":"5a9f005be4b0d174b936c810"},{"code":"(fn [l n] (if (= n 0) (first l) (recur (rest l) (- n 1) ) ) )","problem":21,"user":"51ff6379e4b0f1313d468a98"},{"code":"(fn [ls n] (get (vec ls) n))","problem":21,"user":"4ee4ad77535d1385b2869d81"},{"code":"(fn nthi [listy place]\n  (cond \n    (= place 0) (first listy)\n    (vector? listy) (listy place)\n    :else (nthi (pop listy) (- place 1))))","problem":21,"user":"506d3a28e4b0a302964c5492"},{"code":"(fn [coll n]\n  (loop [cnt n\n         acc coll]\n    (if (= cnt 0)\n      (first acc)\n      (recur (dec cnt) (next acc)))))","problem":21,"user":"5027fc0ce4b01614d1633ff2"}]