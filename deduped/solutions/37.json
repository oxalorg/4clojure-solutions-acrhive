[{"problem":37,"code":"(str 'ABC)","user":"5f21d172e4b0f565ad998286"},{"code":"'\"ABC\"","problem":37,"user":"4f4d44f8e4b03ad3f0c10ca5"},{"problem":37,"code":"(first (re-seq #\"\\S+\" \"ABC\"))","user":"580f9be3e4b0f478707a05b7"},{"problem":37,"code":"(apply str (reverse '(C B A)))","user":"5a64de48e4b0512ff01cd9ac"},{"code":"(str \\A \\B \\C)","problem":37,"user":"4ee93f4c535d93acb0a6688c"},{"problem":37,"code":"(apply str (list \"A\" \"B\" \"C\"))","user":"5ae246b1e4b0837691e92c5d"},{"code":"(apply str (re-seq #\"[A-Z]+\" \"bABCe \"))","problem":37,"user":"4ecd0d84535d23f036227701"},{"problem":37,"code":"(str \"A\", \"B\", \"C\")","user":"562add6de4b00e49c7cb4834"},{"problem":37,"code":"(let [string \"bA1B3Ce \"](apply str (map char (let [bytes-array (.getBytes string)]\n  (filter #(< % 91) (filter #(> % 64) (map int bytes-array)))))))","user":"55b22c33e4b0da326a65cf79"},{"problem":37,"code":";[\"A\" \"B\" \"C\"]\n\"ABC\"","user":"57d1d6c8e4b0bd073c202370"},{"code":"(apply str (re-seq #\"[A-Z]+\" \"bgcgb56A1Bh45643Cfhfg45e \"))","problem":37,"user":"52f09d3ce4b05e3f0be25ee3"},{"problem":37,"code":"(str \"ABC\" \"\")","user":"566470b9e4b0e91d5f5c5658"},{"code":"x","problem":37,"user":"52e635b3e4b09f7907dd146f"},{"problem":37,"code":"\"ABC\"\n\n;(apply str (re-seq #\"[A-Z]\" \"cAfE\"))","user":"510608ebe4b01150e115ebe3"},{"code":"\"ABC\"","problem":37,"user":"4dd61f98535d2dad7130b5c6"},{"problem":37,"code":"(str  \"A\" \"B\" \"C\")","user":"55c508f0e4b0e31453f649ac"},{"problem":37,"code":"(apply str (map char (take 3 (drop 65 (range)))))","user":"53cf88c9e4b00fb29b2212fe"},{"code":"(apply str (re-seq #\"[A-Z]+\" \"bA1B3Ce \"))","problem":37,"user":"4e68dbd5535d8ccf87e9fe8f"},{"code":"(first (flatten [[][][][][][][][][][][][][][][][][][][][][][][][][][][][][[]][[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[\"ABC\"]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]))","problem":37,"user":"50a83315e4b054305ba5a830"},{"problem":37,"code":"(apply str \"A\" \"B\" \"C\")","user":"581c6b16e4b04b46fc4b0ef0"},{"problem":37,"code":"(apply str (re-seq #\"[A-Z]+\" \"AaBbCc \"))","user":"5faece16e4b08cb800c85b02"},{"code":"(#(identity (identity %)) \"ABC\")","problem":37,"user":"4eaf08ce535d7eef3080732d"},{"code":"(.toUpperCase \"abc\")","problem":37,"user":"507437c2e4b054001656acd0"},{"code":"(apply str \"ABC\")","problem":37,"user":"531eef0be4b08068f379edbd"},{"problem":37,"code":";; \"ABC\" \n(str \\A \\B \\C)","user":"5e29fb32e4b05b4b015161b2"},{"code":"(apply str '(\"A\" \"B\" \"C\"))","problem":37,"user":"53069e16e4b02e8216869798"},{"problem":37,"code":"(clojure.string/replace \"bA1B3Ce \" #\"[^A-Z]+\" \"\")","user":"5ebaa4a3e4b00a66d4a95258"},{"problem":37,"code":"(str \"A\"\"B\"\"C\")","user":"5c42754ee4b0e06e1360a35c"},{"code":"(clojure.string/join (re-seq #\"[A-Z]+\" \"bA1B3Ce \"))","problem":37,"user":"516933ece4b03f62cda68ce4"},{"problem":37,"code":"(apply str (re-seq #\"[A-Z]+\" \"bA1B3Ce\"))","user":"548a6c2ee4b0e286459a11f3"},{"problem":37,"code":"(apply str (reverse '(C AB)))","user":"56ab7578e4b03c432f18733d"},{"code":"(str 'A 'B 'C)","problem":37,"user":"5152f82ee4b03f948212e718"},{"code":"(clojure.string/join (re-seq #\"[A-Z]+\" \"bA1B3Ce\"))","problem":37,"user":"4fc50dbbe4b081705acca376"},{"problem":37,"code":"(apply str [\"A\" \"B\" \"C\"])","user":"5cdcef13e4b05ee0cb311752"},{"problem":37,"code":"\"ABC\"\n\n;;(re-seq #\"jam\" \"i like jam jam jaaam\")\n;;=> (jam,jam)\n;;apply f to seq","user":"56ff0ef3e4b08d47c97781ba"},{"code":"(str \"ABC\")","problem":37,"user":"4ead76b7535d7eef30807320"},{"code":"(str \"A\" \"B\" \"C\")","problem":37,"user":"4f03e7b5535dcb61093f6b7d"},{"problem":37,"code":"; Duurde ff voor ik de vraag door had, maar vind alle hoofdletters in de volgende string dus\n\"ABC\"","user":"5637bd38e4b0bfe05bf117de"}]