[{"problem":52,"code":"(filter #(and (pos? %) (even? %)) [a b c d e])","user":"57f28b22e4b0511f1d294def"},{"problem":52,"code":"get [c e]","user":"55dfada4e4b050e68259b3fd"},{"problem":52,"code":"[(+ 1 b) (* c 2)]","user":"5d406babe4b05dd059a54367"},{"problem":52,"code":"(let [[a b c d e f] (range)] [c e])","user":"5ccf2dc3e4b0ccb0619628c2"},{"code":"'( 2 4)","problem":52,"user":"4e14b925535d04ed9115e7df"},{"problem":52,"code":"(->> [a b c d e] (drop 2) (filter even?))","user":"5c05cae7e4b0bdcf453d16a3"},{"problem":52,"code":"[ 2 4 ]","user":"5886ac91e4b0f1effa3b76e5"},{"code":"destructure[2 4]","problem":52,"user":"4e94aab8535dbda64a6f6b1f"},{"problem":52,"code":"(filter #(and (even? %) (not (zero? %))) [a b c d e])","user":"56815e2fe4b0945ebc182a84"},{"code":"[2, 4]","problem":52,"user":"525b12b1e4b0cb4875a45d04"},{"code":"[c e ]","problem":52,"user":"4e3a9dae535deb9a81d77f4a"},{"code":"[2 4]","problem":52,"user":"4dd66da7535d2dad7130b5c8"},{"code":"(vector 2 4)","problem":52,"user":"4e4b911f535dc968683fc4d6"},{"problem":52,"code":"(conj(conj [] c) e)","user":"52149e21e4b0961f15ac4d94"},{"problem":52,"code":"(range 2 5 2)","user":"53214efbe4b09d4e7a9b54b2"},{"problem":52,"code":"(let [\n  [a b c d e] [0 1 2 3 4]\n]\n  (vector (get [a b c d e] c)\n  (get [a b c d e] e))\n  )","user":"57fe68e2e4b0d3187e9009ce"},{"problem":52,"code":";(into [] [c e])\n; because we are doing let to make c and e actually equal 2 and 4, we can just do\n[c e]","user":"5782ce69e4b0d36ec5835e9a"},{"code":"[2 4] #_ [c e]","problem":52,"user":"5392b849e4b0b51d73faaeb1"},{"problem":52,"code":"vec [c e]","user":"523acf7be4b0aa37f082ed90"},{"problem":52,"code":"(conj [c] e)","user":"5996b7f6e4b07157cc8daab6"},{"problem":52,"code":"[2 4\n ]","user":"5c746c31e4b0fca0c16227c8"},{"code":"[ c e]","problem":52,"user":"4df3df8a535d08e6dec9fe2d"},{"problem":52,"code":"(let [[a b c d e f g] (range)] (vec (#(list %1 %2) c e)))","user":"54651faee4b01be26fd746d6"},{"code":"(conj '[] c e)","problem":52,"user":"52d6889ae4b09f7907dd1361"},{"problem":52,"code":"[2 4] ; trollolol","user":"54bd04e7e4b0ed20f4ff6ed8"},{"problem":52,"code":"(let [[a b c d e f g] (range)] [c e])","user":"50478418e4b0371827a27bc3"},{"problem":52,"code":"(rest(filterv even? [a b c d e]))","user":"5cbc1ee7e4b026601754b9e1"},{"problem":52,"code":"(let [[a b c d e] [0 1 2 3 4]] [c e])","user":"4dbba163535d3f4042261ecc"},{"code":";; range is lazy; na substitutie staat er eigenlijk:\n;; [[a b c d e f g] [0 1 2 3 4 5 6]] -->\n[c e]","problem":52,"user":"4f17df72535d64f603146458"},{"code":"(into [] `(~c ~e))","problem":52,"user":"4f62ef0ce4b0defedf855fdc"},{"code":"(list c e)","problem":52,"user":"4e5e9f6b535d8a8b8723a2d2"},{"problem":52,"code":"'[2 4]","user":"55a9e0fee4b0988bba2ad945"},{"problem":52,"code":"(-> nil (conj e) (conj c))","user":"532df9c5e4b019098a6f8b42"},{"problem":52,"code":"vector [c e]","user":"5afdca89e4b0cc2b61a3bd20"},{"problem":52,"code":"take [2 4]","user":"59fa1b05e4b0ca45a743a356"},{"code":"[c \te]","problem":52,"user":"523eb110e4b057c4b7cd0a67"},{"problem":52,"code":"(filter even? [1 2 3 4])","user":"5fcd5251e4b07e53c2f3effa"},{"problem":52,"code":"(cons c (list e))","user":"53b3ea79e4b047364c0444ab"},{"code":"6 [c e]","problem":52,"user":"500cb910e4b05f7c30cfa698"},{"code":"( list c e )","problem":52,"user":"50bf7b72e4b0ffd967a66cc1"},{"code":"[c  e]","problem":52,"user":"4e6e3a1e535d5021c1a89602"},{"problem":52,"code":"(list c e)\n[c e]","user":"574c5e18e4b02ea11479921b"},{"problem":52,"code":":as [c e]","user":"5d6c2aace4b04d129b00f2ad"},{"code":"(let [[a b c d e f g] (range)]\n  [c e])","problem":52,"user":"4fc50dbbe4b081705acca376"},{"problem":52,"code":"(vec [c e])","user":"4f037d9e535dcb61093f6af2"},{"problem":52,"code":"[c e]\n\n;(filter #(> % 0) (filter even? [a b c d e]))","user":"5604ae27e4b0c80df0ca2663"},{"problem":52,"code":"(-> [c,e])","user":"53029281e4b0d8b024fd372e"},{"problem":52,"code":"(filter #(and (> % 0) (= (rem % 2) 0)) [a b c d e])","user":"57b5ed94e4b0fbc9809a27b4"},{"code":"(vector c e)","problem":52,"user":"4e246abe535d04ed9115e827"},{"problem":52,"code":"(identity [c e])","user":"594bc7d6e4b07ddc2dafae3d"},{"problem":52,"code":"(range) [c e]","user":"562614e3e4b00e49c7cb47bb"},{"problem":52,"code":"vec [2 4]","user":"56e7ebb4e4b02e7e935eb6e1"},{"problem":52,"code":"[(* 2 1)(* 2 2)]","user":"5fc3850de4b0db0e95a5f3fd"},{"code":"[c e\t]","problem":52,"user":"5137c3b0e4b0509a8b470482"},{"code":"(let [result []] (conj (conj result c) e))","problem":52,"user":"4f066916535dcb61093f6c10"},{"code":"; [2 4] also works\n[c e]","problem":52,"user":"536b9d8ae4b0243289761ebe"},{"problem":52,"code":"[ c  e]","user":"55db03c6e4b0e31453f64adf"},{"problem":52,"code":"(filter #(or (= % 4) (= % 2)) [a, b, c, d, e])","user":"5b51ddc9e4b02d533a91bd01"},{"code":"(conj [] c e)","problem":52,"user":"4ef2d6c5535dced4c769f222"},{"problem":52,"code":"(seq (list c e))","user":"57fd085ce4b0d3187e9009a9"},{"problem":52,"code":"[(+ b b) (* c c)]","user":"5e8ce2fee4b0cb0169546328"},{"code":"(vec (list c e))","problem":52,"user":"4fe87e56e4b07c9f6fd12c40"},{"problem":52,"code":"(vec (let [[a b c d e] [0 1 2 3 4]] (filter even? [b c d e])))","user":"5df886d8e4b0a607a9a45ca9"},{"problem":52,"code":"(vec (apply concat (for [x [1 2 3 4 5] :when (even? x)] (conj [] x))))","user":"5a799077e4b03baeef9276c1"},{"problem":52,"code":"(list c e )","user":"5644611be4b0284900eef5f1"},{"problem":52,"code":"[(+ b b) (+ c c)]","user":"55d354e0e4b0e31453f64a62"},{"code":"[c, e]","problem":52,"user":"5226f9b8e4b04e78ff2e199b"},{"problem":52,"code":"(vector (+ a c) (+ b d))","user":"594d4c57e4b07ddc2dafae87"},{"code":"[ 2 4]","problem":52,"user":"4fbdcb87e4b081705acca30a"},{"code":"(into [] (list c e))","problem":52,"user":"5047782ce4b0371827a27bc2"},{"code":"[] [2 4]","problem":52,"user":"52baf490e4b07a9af57922db"},{"code":"(for [x [a b c d e f g] :when (and (even? x) (< x 6) (> x 0))] x)","problem":52,"user":"4ffe8193e4b0678c553fc3f4"},{"problem":52,"code":"[a b c d e] [c e]","user":"5e2ef900e4b05b4b015161fc"},{"code":"(let [[a b c d e f g] (range)] \n    (conj (vector (get [a b c d e f g] c)) (get [a b c d e f g] e)))","problem":52,"user":"4e8ad1d2535d65386fec2110"},{"problem":52,"code":"(conj [c] (-> c (inc) (inc)) )","user":"5963cd4de4b066ee0a44b0d4"},{"problem":52,"code":"list [c e]","user":"5dd1fb19e4b0948ae9d9ad51"},{"problem":52,"code":"; let binds two vectors - \"a\" goes with \"0\"\n[c e]","user":"57c44053e4b05aa3c4741ccb"},{"problem":52,"code":";[c e]\n[2 4]","user":"54ca9ca8e4b057c6fda3a265"},{"code":"[c,e]","problem":52,"user":"511d11d7e4b022853b0e079f"},{"code":"`(~c ~e)","problem":52,"user":"4de2f44f535d08e6dec9fdec"},{"problem":52,"code":"(vector c e )","user":"5df0c6ffe4b093ff717275c2"},{"code":"'(2 4)","problem":52,"user":"4e6b07dd535d8ccf87e9ff0a"},{"problem":52,"code":";; https://clojuredocs.org/clojure.core/let\n\n[ 2 4 ]","user":"560d2b79e4b05f002753df38"},{"code":"[ c e ]","problem":52,"user":"4f030775535dcb61093f6a43"},{"problem":52,"code":"; lol\n[2 4]","user":"60c91f48e4b0e0fa5f1b4304"},{"problem":52,"code":"println (vector c e)","user":"56f0714de4b04a395b9a0479"},{"problem":52,"code":"(into [] [c e])","user":"5655191ee4b0f9d632dd8491"},{"problem":52,"code":"(filter even? (rest [a b c d e]))","user":"596a4fbce4b069c0a1a19800"},{"code":"(let [[a b c d e f g] (range)] [2 4])","problem":52,"user":"52baea85e4b07a9af57922d9"},{"problem":52,"code":"`[2 4]","user":"55a016fde4b0acc240e314f1"},{"problem":52,"code":"[c 4]","user":"55dd91c9e4b050e68259b3ca"},{"problem":52,"code":"(conj (conj [] c) e)","user":"5f3a8493e4b004f08c61c527"},{"code":"[c e]","problem":52,"user":"4dc986d0535d5973398f9285"}]