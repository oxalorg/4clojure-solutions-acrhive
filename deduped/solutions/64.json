[{"code":"(fn ([] 0) ([a b] (+ a b)))","problem":64,"user":"4f017593535dcb61093f6a36"},{"code":"(fn ([] 0)\n            ([a b] (+ a b)))","problem":64,"user":"4fba77fae4b081705acca2df"},{"code":"(fn [& args]\n  (if (= (first args) nil) 0\n  \t(+ (first args) (last args))))","problem":64,"user":"4f0b38ec535d0136e6c22300"},{"problem":64,"code":"(fn ([x] (x))\n    ([x y] (+ x y))\n    ([] 0))","user":"550e0951e4b06e50f9beb163"},{"code":"(fn\n  ([] 0)\n  ([x] x)\n  ([x y] (+ x y))\n  ([x y & more] (reduce + (+ x y) more)))","problem":64,"user":"51a0dae0e4b0b292b01ee3fa"},{"problem":64,"code":"(fn\n  ( [] 0 )\n  ( [x y] (+ x y) )\n)","user":"5552780ce4b0deb715856df4"},{"code":"(fn ([]  0)\n  \t([x y] (+ x y)))","problem":64,"user":"52ee53a0e4b05e3f0be25ec7"},{"code":"(fn \n  ([] 0)\n  ([x] (+ 0 x))\n  ([x y] (+ x y)))","problem":64,"user":"52a7c82ae4b0c58976d9ac21"},{"problem":64,"code":"(fn \n  ([acc a] (+ acc a)) \n  ([] 0))","user":"5b25fbb9e4b063e2438bcc2e"},{"code":"(fn [& args] (+ (or (first args) 0) (or (second args) 0)))","problem":64,"user":"530394b4e4b0d8b024fd3743"},{"code":"(fn ([] 0)\n  ([x y] (+ x y)))","problem":64,"user":"500e3238e4b068062f6e8d8f"},{"code":"(fn \n  ([] 0)\n  ([x] x)\n  ([x y] (+ x y)))","problem":64,"user":"4f3bad80e4b0e243712b1f31"},{"code":"(fn [& args] (apply + args))","problem":64,"user":"4fd459cfe4b0d4de60cee36b"},{"problem":64,"code":"(fn rfn ([] 0)([acc x] (+ acc x)))","user":"55921c21e4b0604b3f94d588"},{"code":"(fn ([] 0) ([current next] (+ current next)))","problem":64,"user":"4dddf817535d08e6dec9fdd3"},{"problem":64,"code":"(fn ([] 0) ([acc curr] (+ acc curr)))","user":"57b39fbee4b0fbc9809a2783"},{"code":"(fn add \n  ([a b] (+ a b))\n  ([] 0)\n)","problem":64,"user":"4ffe8193e4b0678c553fc3f4"},{"problem":64,"code":"(fn simpel-plus \n    ([] 0) \n    ([x] x) \n    ([x y] (+ x y)))","user":"569ce6fee4b0542e1f8d146c"},{"code":"(fn ([] 0) \n  ([x y] (+ x y)))","problem":64,"user":"52bd9963e4b07a9af5792303"},{"problem":64,"code":"(fn[& x] (if (= x nil)0\n(+ (first x)(last x))))","user":"552800d7e4b0ffed3738f93a"},{"code":"(fn ([] 0)\n  ([x] x)\n  ([x y] (+ x y)))","problem":64,"user":"511d4a52e4b022853b0e07a1"},{"problem":64,"code":"(fn ([] 0) ([a b] (+ 0 a b)))","user":"55fea152e4b00f4cabc57656"},{"code":"(fn [& x] (if (empty? x) 0 (+ (first x) (second x))))","problem":64,"user":"4f51e8a4e4b03ad3f0c10d2d"},{"problem":64,"code":"(fn \n  ([]\n   0)\n  ([x]\n   x)\n  ([x, y] \n   (+ x y)))","user":"53de4bdae4b0d874e779ae32"},{"problem":64,"code":"(fn ([a b] (+ a b))\n  ([] 0)\n  )","user":"5cf8864be4b0b71b1d808a84"},{"problem":64,"code":"+'","user":"4f3b5219e4b0e243712b1f2a"},{"problem":64,"code":"(fn [& b] (apply + b))","user":"588053cae4b0f1effa3b7612"},{"code":"(partial + 0)","problem":64,"user":"4e6dd214535d5021c1a895f5"},{"code":"(fn [& x] (if (first x) (if (second x) (+ (first x) (second x)) 0) 0))","problem":64,"user":"530d85dee4b08068f379eca8"},{"code":"(fn [& x]\n  (if (nil? x)\n    0\n    (+ (first x)\n       (first (rest x)))))","problem":64,"user":"53664e3be4b0243289761e74"},{"code":"(fn [& args] \n  (reduce + args))","problem":64,"user":"51d3154ce4b099f3b6acddf8"},{"code":"(fn ([] 0) \r\n            ([a b] (+ a b)))","problem":64,"user":"4f07ad89535dcb61093f6c2a"},{"code":"(fn [& items] (apply + items))","problem":64,"user":"51cb7ce0e4b08d8387cbedd8"},{"problem":64,"code":"(fn adder \n    ([acc v] (+ acc v))\n    ([] (adder 0 0)))","user":"603d35c3e4b0d5df2af2230a"},{"code":"(fn foo\n  ([arg accum] (+ arg accum))\n  ([] 0))","problem":64,"user":"4fe89efae4b07c9f6fd12c5b"},{"problem":64,"code":"(let [x +] x)","user":"56018b59e4b04bb52996e18c"},{"code":"(fn \n  ([acc x] (+ acc x))\n  ([] 0))","problem":64,"user":"529dd5a4e4b04e0c58e87b82"},{"code":"(fn sum ([] 0) ([x] x) ([x y] (+ x y)))","problem":64,"user":"4fae4c11e4b081705acca248"},{"problem":64,"code":"(fn [& arg]\n  (if (= 0 (count arg))\n    0 (apply #(+ %1 %2) arg)))","user":"58628c9be4b0f14aab7c880c"},{"problem":64,"code":"(fn ([a b] (+ a b)) ([] 0) )","user":"5776385fe4b0979f89651632"},{"code":"(fn \n  ([] 0)\n  ([x y] (+ x y))\n )","problem":64,"user":"529ac5d4e4b02ebb4ef7509b"},{"problem":64,"code":"(fn [& a] (+ (if (> (count a) 0) (nth a 0) 0) (if (> (count a) 1) (nth a 1) 0)))","user":"5f3ddc71e4b004f08c61c551"},{"code":"(fn sum \n  ([] 0)\n  ([x] x)\n  ([x y] (+ x y))\n)","problem":64,"user":"5112695de4b0350614f07a73"},{"problem":64,"code":"(fn ([a b] (+ a b))\n    ([] 0))","user":"5640506be4b08d4f616f5ede"},{"code":"(fn ([] 0) ([a] (+ a 0)) ([a b] (+ a b)))","problem":64,"user":"4e84836a535db62dc21a62e1"},{"problem":64,"code":"(fn red\n  ([] 0)\n  ([x y] (+ x y)))","user":"587f8393e4b0f1effa3b75f2"},{"code":"(fn \n  ([x y] (+ x y))\n  ([x] x)\n  ([] 0)\n)","problem":64,"user":"4e6f8431535d5021c1a8961e"},{"problem":64,"code":"(fn\n  ([] 0)\n  ([acc item] (+ acc item)))","user":"5ef8e9e0e4b09b61f08553cb"},{"problem":64,"code":"(fn \n  ([] 0)\n  ([acc item] (+ acc item)))","user":"57abf68ce4b0b8559636fc7f"},{"code":"(fn ([] 0) ([x y] (+ x y)))","problem":64,"user":"4e1ec17a535d04ed9115e80a"},{"code":"(fn [& rest] (if-let [a (first rest)] \n              (if-let [b (second rest)] \n                (+ a b) 0)\n              0))","problem":64,"user":"50e135f4e4b084616e11c667"},{"code":"(fn  \n  ([] 0)\n  ([x y] (+ x y)))","problem":64,"user":"4fa792ebe4b081705acca1c5"},{"problem":64,"code":"(fn \n  ([acc n] (+ acc n))\n  \n  ([] 0))","user":"59ad8695e4b0e1f4e384c887"},{"problem":64,"code":"(fn ([x y] (+ x y))\n  \t([]\t0))","user":"579332c2e4b0e215f87e8452"},{"problem":64,"code":"(fn \n   ([] 0)\n   ([a b] (+ a b)))","user":"581c4ab4e4b04b46fc4b0eea"},{"problem":64,"code":"+\n;;(fn [& [a b]] (if (nil? a) 0 (+ a b)))","user":"5cb39440e4b026601754b903"},{"problem":64,"code":"(fn \n  ([a i] (+ a i))\n  ([] 0))","user":"54b17a49e4b09f271ff37d1e"},{"problem":64,"code":"(fn ([] 0) ([acc,x] (+ acc x)))","user":"57597fade4b02ea11479931d"},{"code":"(fn [& args]\n  (if (nil? args) 0\n      (+ (first args) (second args))))","problem":64,"user":"4e0febe6535d04ed9115e7be"},{"code":"(fn\n  ([a b] (+ a b))\n  ([] 0))","problem":64,"user":"4e89f9e5535d3e98b8023289"},{"problem":64,"code":"(fn  \n  ([] 0)\n  ([a b] (+ a b))\n  )","user":"5f468d26e4b0955706451fc1"},{"code":"(fn rec ([] 0) ([a] (rec 0 a)) ([a b] (+ a b)))","problem":64,"user":"50df6dd0e4b061dbdced7225"},{"problem":64,"code":"(fn\n  ([]  0)\n  ([x y] (+ x y)))","user":"541521cfe4b01498b1a719f3"},{"code":"(fn \n  ([x y] (+ x y))\n  ([] 0))","problem":64,"user":"4e7e8684535db169f9c79717"},{"problem":64,"code":"(fn [& args] (if (empty? args) 0 (+ (first args) (first (rest args)))))","user":"5bdf651ee4b0ed4b8aab4c6d"},{"code":"(fn ([] 0 )([x y] (+ x y )))","problem":64,"user":"51f79238e4b06ff1c25c52d7"},{"code":"(fn foo ([] 0) ([a b] (+ a b)))","problem":64,"user":"4e1b2cd9535d04ed9115e7fd"},{"code":"(fn ([] 0) ([s c] (+ s c)))","problem":64,"user":"4e6b07dd535d8ccf87e9ff0a"},{"problem":64,"code":"(fn add \n  ([x y] (+ x y))\n  ([x] (identity x))\n  ([] (identity 0))\n)","user":"4e5696d0535d8a8b8723a284"},{"code":"(fn \n  ([] 0)\n  ([l r] (+ l r))\n  )","problem":64,"user":"5252cbe7e4b0541d1855b8d2"},{"code":"(fn [& args] (if (empty? args) 0 (+ (first args) (second args))))","problem":64,"user":"5204173be4b0fb7e47ea5216"},{"problem":64,"code":"(fn [& more] (apply + more))","user":"51eead15e4b0871fa145d98a"},{"problem":64,"code":"(fn [& xs]\n  (apply + (conj xs 0)))","user":"5a6b9b95e4b0512ff01cda40"},{"code":"(fn ([a b] (+ a b))\n  ([] 0))","problem":64,"user":"5150a7d7e4b03e678e393abb"},{"problem":64,"code":"(fn ([a b] (+ a b))\n    ([] 0)\n)","user":"549a999be4b0f3d1d8e70f6f"},{"code":"(fn [& args] (if (= args nil) 0 (+ (first args) (second args))))","problem":64,"user":"4fe588b6e4b0e8f79898fec5"},{"code":"(fn \n            ([] 0)\n            ([x] x)\n            ([x y] (+ x y)))","problem":64,"user":"50b09833e4b009df37c708bd"},{"code":"(fn\n  ([] 0)\n  ([x] x)\n  ([x y] (+ x y)))","problem":64,"user":"50fe9d60e4b03cd852b4e84f"},{"code":"(fn [& xs] (apply + xs))","problem":64,"user":"503d129fe4b06c4e0e1fa254"},{"problem":64,"code":"(fn [& [r nv]] (+ (or r 0) (or nv 0)))","user":"54d0ceb2e4b0e8a36923e5d0"},{"problem":64,"code":"(fn \n  ([] 0)\n  ([x] x)\n  ([x y] (+ x y))\n  )","user":"54d05a9de4b0e8a36923e5c7"},{"problem":64,"code":"(fn [& rt]\n   (if (> (count rt) 1)\n     (+ (nth rt 0) (nth rt 1))\n     0))","user":"5622ac1de4b03f08ee9a922a"},{"problem":64,"code":"(fn add ([x y] (+ x y)) ([] 0))","user":"58ff5898e4b0438e51c2cfec"},{"problem":64,"code":"(fn \n([] 0)\n([acc cur] (+ acc cur)))","user":"555883c5e4b0deb715856e2d"},{"code":"(fn\n  ([] 0)\n  ([x, y] (+ x y)))","problem":64,"user":"4ecbff2f535df97575fdabe4"},{"code":"(fn ([] 0)\n ([a b] (+ a b)))","problem":64,"user":"4ef355e3535dced4c769f228"},{"code":"(fn [& more]\n  (if (empty? more)\n    0\n  (+ (first more) (second more))\n  ))","problem":64,"user":"4fea1f9ee4b0547ebccb248b"},{"problem":64,"code":"(fn ([] 0)\n  ([a b] (+ a b)))","user":"56912f93e4b0dcc4269f40ef"},{"code":"(fn blah [& res]\n  (apply + res))","problem":64,"user":"52a229e0e4b04e0c58e87be9"},{"code":"#'+","problem":64,"user":"4dff67b7535d04ed9115e789"},{"problem":64,"code":"(fn [& [acc x]] (let [acc (or acc 0) x (or x 0)] (+ acc x)))","user":"5a5800e1e4b05d388ecb6c76"},{"problem":64,"code":"#' +","user":"56244b3ae4b0b951f963fc22"},{"problem":64,"code":"(fn myAdd \n  ([x y] (+ x y))\n  ([] 0)\n  \n)","user":"4f6d09c5e4b07046d9f4efc3"},{"code":"(fn\n  ([x y] (+ x y))\n  ([] 0))","problem":64,"user":"50e3cf55e4b01912b3285c45"},{"problem":64,"code":"(fn ([] 0)([a b] (+ a b)))","user":"561a4c60e4b053970a773b06"},{"code":"(fn p \n  ([x y] (+ x y))\n  ([] 0))","problem":64,"user":"50ac3480e4b071b89ef2622c"},{"problem":64,"code":"(fn [& arg] (apply + arg))","user":"58dfda3de4b0a4d5acaab727"},{"code":"(fn add \n  ([] 0) \n  ([x] x)\n  ([x y] (+ x y))\n)","problem":64,"user":"4ff34dc1e4b0678c553fc34c"},{"code":"(fn [& n] (apply + n))","problem":64,"user":"4eeae8f0535d93acb0a668a2"},{"problem":64,"code":"(fn\n  ([] 0)\n  ([acc n] (+ acc n)))","user":"55e2f502e4b050e68259b43c"},{"problem":64,"code":"(fn ([] 0) ([acc, current] (+ acc current)))","user":"589714cbe4b00487982d52b1"},{"problem":64,"code":"(fn\n  ([] 0)\n  ([a b] (+ a b))\n)","user":"557a2891e4b05c286339e09f"},{"problem":64,"code":"(fn\n  ([]\n   0)\n  ([accumulator x] \n   (+ accumulator x)))","user":"5425c652e4b01498b1a71b11"},{"code":"(fn [& args] (reduce + args))","problem":64,"user":"5234f716e4b05e80434a505f"},{"problem":64,"code":"(fn \n  ([] 0) \n  ([acc e] (+ acc e) ))","user":"5f1328dee4b091ba50b4dbb1"},{"code":"(fn [& more] (if (= 0 (count more)) 0 (if (= 1 (count more)) (first more) (+ (first more) (second more)))))","problem":64,"user":"4ec12516535dfed6da9c6da7"},{"code":"(fn ([] 0) ([x y] (+ x y) ) )","problem":64,"user":"5005f0fae4b0678c553fc472"},{"problem":64,"code":"(fn\n  ([]\n   0)\n  ([acc x]\n  (+ acc x)))","user":"548749cee4b0e286459a11c4"},{"code":"(fn \n  ([] 0)\n  ([x y] (+ x y))\n  )","problem":64,"user":"517e25c6e4b0329b27fa9f51"},{"code":"(fn [& args]\r\n  (if (> (count args) 1)\r\n    (+ (nth args 0) (nth args 1))\r\n    (if (= (count args) 0)\r\n      0)))","problem":64,"user":"4e99f2e1535dbda64a6f6b6c"},{"code":"(fn \n  ([a b] (+ a b))\n  ([] 0)\n)","problem":64,"user":"4e55958a535d8a8b8723a27e"},{"problem":64,"code":"(fn [& z] (let [x (first z) y (second z)] (if x (+ x y) 0)))","user":"54e1939ce4b024c67c0cf7c5"},{"problem":64,"code":"(fn \n  ([acc el] (+ acc el))\n  ([] 0)\n)","user":"55041b5ee4b086ebe8a79c78"},{"problem":64,"code":"(fn \n  ( [] 0)\n  ([x y] (+ x y))\n  )","user":"5984b9f3e4b021a7a535fe33"},{"problem":64,"code":"(fn  ([acc elem] (+ acc elem))  ([] 0))","user":"5c1edf23e4b0efcb0b05b25d"},{"problem":64,"code":"(fn ([a b] (+ a b)) ([a] a)([] 0))","user":"562326cbe4b03f08ee9a9230"},{"problem":64,"code":"#(reduce + %&)","user":"5bfd0b72e4b0bdcf453d15f6"},{"problem":64,"code":"(fn \n  ([] 0)\n  ([x] (x))\n  ([x y] (+ x y)))","user":"57f904c5e4b0d3187e900936"},{"problem":64,"code":"(fn \n  ([] 0)\n  ([num1 num2]\n  (if (nil? num2)\n      num1\n      (+ num1 num2))))","user":"59b9e669e4b0a024fb6ae3db"},{"code":"(fn ([] 0) ([x]x) ([a b] (+ a b)))","problem":64,"user":"507c7c8be4b0b083f3ff82ef"},{"code":"(fn \n  ([] 0)\n  ([f l] (+ f l)))","problem":64,"user":"52eb2ec9e4b0705949c44439"},{"problem":64,"code":"(fn [& args] \n  (if (empty? args)\n    0\n    (+ (first args) (second args))\n    ))","user":"57b9d21fe4b0fbc9809a27f7"},{"code":"(fn add \n  ([] 0)\n  ([x y](+ x y)))","problem":64,"user":"4ff201d7e4b0678c553fc330"},{"problem":64,"code":"(fn\n  ([] (+ 0 0))\n  ([x y] (+ x y)))","user":"54aa3c17e4b09f271ff37cb7"},{"problem":64,"code":"(fn\n   ([] 0)\n   ([x] x)\n   ([x y] (+ x y)))","user":"5fa6db67e4b0fa27300f3dd2"},{"problem":64,"code":"(fn \n  ([] 0)\n  ([agg value]\n  (+ agg value)))","user":"565d6d34e4b068f2fe63dc23"},{"problem":64,"code":"(fn add ([n1 n2] (+ n1 n2)) ([] (+ 0 0)))","user":"5e380e72e4b01d43a70e8db0"},{"problem":64,"code":"(fn \n  \n  ([a b]\n  (+ a b)\n  )\n  (\n  []\n  0\n  )\n  )","user":"53fbf9bce4b0de5c41848586"},{"code":"(fn ([] 0) ([x y](+ x y)))","problem":64,"user":"4ef4e5fa535dced4c769f242"},{"problem":64,"code":"(fn \n  ([] (+ 0 0))\n  ([x, y] (+ x y)))","user":"5592a3aee4b0604b3f94d58f"},{"problem":64,"code":"(fn ([] 0)([p x] (+ p x)))","user":"55c478a0e4b0e31453f6499d"},{"problem":64,"code":"(fn\n  ([] 0)\n  ([x1 x2] (+ x1 x2)))","user":"5d5b02fce4b02ba5928a6838"},{"code":"(fn ([x y] (+ x y))\n    ([] 0)\n)","problem":64,"user":"4fc8f671e4b0ee37620e1840"},{"problem":64,"code":"(fn s ([] (s 0 0)) ([a b] (+ a b)) )","user":"58f5e0b1e4b0438e51c2cee4"},{"code":"(fn sum [& args] (apply + args))","problem":64,"user":"5188b2e6e4b0bdff0e072d52"},{"code":"(fn\n   ([]  0 )\n  ([x y] (+ x y))\n  )","problem":64,"user":"51faf9ece4b0f1313d4689f7"},{"code":"(fn [& a] (cond                              \n                (seq? a)\n                (+ (first a) (second a))\n                (= (count a) 1)\n                  a\n                :else\n                  0))","problem":64,"user":"515896f2e4b059418b97f0a8"},{"problem":64,"code":"(fn ([] (identity 0))\n    ([one two] (+ one two)))","user":"55eb6644e4b0121d4835fdbb"},{"problem":64,"code":"(fn\n  ([] 0)\n  ([x y] (+ x y))\n )","user":"5628e9f4e4b00e49c7cb47f2"},{"code":"(fn\n  ([] 0)\n  ([sum x] (+ sum x)))","problem":64,"user":"52bb2fc0e4b07a9af57922e0"},{"problem":64,"code":"(fn [& l] (if (empty? l) 0 (+ (first l) (second l))))","user":"56df636ae4b0ca2494a095f4"},{"code":"(fn\n  ([] 0)\n  ([a b] (+ a b)))","problem":64,"user":"4e7d5eb8535db169f9c796d6"},{"problem":64,"code":"(fn anon\n  ([x] x)\n  ([x acc] (+ x acc))\n  ([] 0))","user":"5689fd03e4b0dcc4269f4088"},{"problem":64,"code":"(fn IntroToReduce\n  ([]\n   0)\n  ([op1 op2]\n  (if (or (nil? op1) (nil? op2))\n    0\n    (+ op1 op2))))","user":"5e16b820e4b0a047bd49f71f"},{"code":"(fn [& args]\n  (if (>= 0 (count args))\n    0\n    (+ (first args) (second args))))","problem":64,"user":"530e69a8e4b08068f379ecb8"},{"problem":64,"code":"(fn [& [x y]]\n  (if (and (nil? x) (nil? y))\n    0\n    (if (nil? x)\n    y\n    (if (nil? y)\n      x\n      (+ x y)))))","user":"574b4f3ee4b02ea114799207"},{"code":"(fn \n  ([sum item] (+ sum item))\n  ([] 0)\n  )","problem":64,"user":"50a80a1be4b0f56ebe0e1d52"},{"problem":64,"code":"(fn plus ([] (plus 0 0)) ([x y] (+ x y)))","user":"57dd651ee4b0bd073c202441"},{"code":"(fn [& [a b]]\n  (if (nil? a) 0\n\t  (+ a b)))","problem":64,"user":"519ec569e4b0acf32bc6a434"},{"problem":64,"code":"(fn \n  [& args]\n  (cond\n   (= (count args) 0) 0\n   :else (+ (nth args 0) (nth args 1))))","user":"55e6809ee4b050e68259b48a"},{"problem":64,"code":"(fn [& args]\n  (if (= (count args) 2)\n    ((fn [[f s & kargs]] (+ f s)) args)\n    0\n    )\n  )","user":"5ec03772e4b00a66d4a95289"},{"problem":64,"code":"(fn\n    ([x el] (+ x el))\n    ([] 0))","user":"56ef0a2ee4b04a395b9a045a"},{"problem":64,"code":"(fn ([s n]\n  (+ s n))\n  ([] 0)\n  )","user":"59bbe619e4b0a024fb6ae408"},{"code":"(fn ([] 0) ([x] (x)) ([x y] (+ x y)))","problem":64,"user":"4f40f055e4b0e243712b1fc2"},{"problem":64,"code":"(fn soma ([x y] (+ x y))\n          ([x] (x))\n          ([] 0))","user":"53e2ac1ae4b036ad0777e3f3"},{"code":"(fn ([x y] (+ x y))\r\n    ([] 0))","problem":64,"user":"4ddee37c535d08e6dec9fddc"},{"problem":64,"code":"(fn stuff [& args] (reduce + args))","user":"55204412e4b08d5046aa8a5f"},{"problem":64,"code":"(fn \n  ([] 0) \n  ([x y] (+ x y)))","user":"550712b7e4b021ccfedb969d"},{"code":"(fn [& [x y]] (+ (or x 0) (or y 0) ))","problem":64,"user":"51b213c2e4b02f8f128bb962"},{"code":"(fn ([] 0)\n    ([a] a)\n    ([a b] (+ a b)))","problem":64,"user":"4eea1a41535d93acb0a66899"},{"problem":64,"code":"(fn\n  ([acc n] (+ acc n))\n  ([] 0))","user":"59aad3d4e4b08cbb53654d88"},{"problem":64,"code":"(fn [& args]\n               (if (empty? args)\n                 0\n                 (+ (first args) (last args))))","user":"5658b9bde4b00d315579610e"},{"code":"(fn[& args] \n  (if (empty? args) \n      0  \n      (+ (first args) (second args))\n    )\n  )","problem":64,"user":"5360e12ce4b0243289761e3a"},{"code":"(fn [& x] (apply + x))","problem":64,"user":"4e6cf61a535de274dd8d818c"},{"problem":64,"code":"(fn [& args] (if (nth args 0) (if (nth args 1) (+ (nth args 0) (nth args 1)) (nth args 0)) 0))","user":"58669dd0e4b0f14aab7c8867"},{"problem":64,"code":"(fn\n  ([x,y] (+ x y))\n  ([x] x)\n  ([] 0))","user":"54d104a5e4b0e8a36923e5d9"},{"code":"(fn \n  ([] 0)\n  ([x y] (+ x y)))","problem":64,"user":"4edfb618535d10e5ff6f5343"},{"code":"(fn [& a] (apply + a))","problem":64,"user":"51910da7e4b0f8ef0be96bf9"},{"code":"(fn\n  ([] 0)\n  ([acc x] (+ acc x)))","problem":64,"user":"5300158ae4b0d8b024fd370f"},{"problem":64,"code":"(fn ([x y] (+ x y))\n  ([] 0))","user":"520fca70e4b080a8d9b9d631"},{"code":"(fn \n  ([x y] (+ x y))\n  ([x] x)\n  ([] 0))","problem":64,"user":"4dcc2435535d5973398f9290"},{"code":"(fn \n  ([x y] (+ x y))\n  ([] 0) \t   \n  )","problem":64,"user":"4fbf5607e4b081705acca319"},{"code":"(fn\r\n  ([] 0)\r\n  ([x y] (+ x y)))","problem":64,"user":"4df1e213535d08e6dec9fe20"},{"problem":64,"code":"(fn h\n  ([] 0)\n  ([x] x)\n  ([x y] (+ x y)))","user":"4e41a04e535dc968683fc49e"},{"code":"#(if (empty? %&) 0 (+ (nth %& 0) (nth %& 1)))","problem":64,"user":"5033a1fbe4b062bc5d7ae155"},{"code":"(fn[ & x](apply + x))","problem":64,"user":"4eddfb5c535d10e5ff6f532f"},{"code":"(fn add \n  ([] 0)\n  ([x] x)\n  ([x y] (+ x y)))","problem":64,"user":"53223f5de4b09d4e7a9b54bf"},{"problem":64,"code":"(fn [& [a b]] (+ (if a a 0) (if b b 0)))","user":"567d132ee4b05957ce8c61c3"},{"code":"(fn ([] 0)\n    ([x y] (+ x y)))","problem":64,"user":"4e229b89535d04ed9115e81d"},{"problem":64,"code":"(fn ([] 0)([s1 s2] (+ s1 s2)))","user":"57252172e4b0c5bde472c109"},{"code":"(fn [& x] (if (> (count x) 0) (+ (first x) (second x)) 0))","problem":64,"user":"4f28eb85e4b0d6649770a01d"},{"code":"(fn ([one, two] (+ one two))\n  ([] 0))","problem":64,"user":"53067bede4b02e8216869797"},{"problem":64,"code":"(fn \n  ([]\n   0)\n  ([i s]\n  (+ 0 i s)))","user":"591770dae4b09b4ee5954b9c"},{"problem":64,"code":"(fn [& args]\n          (if (= 0 (count args))\n            0\n            (+ (first args) (nth args 1))))","user":"56c60b36e4b05cc29241eead"},{"code":"(fn \n  ([] 0)\n  ([a b] (+ a b)))","problem":64,"user":"4f1580d9535d64f603146442"},{"problem":64,"code":"(fn \n  ([x y]\n  (+ x y))\n  ([]\n  0))","user":"58b9922ce4b0888cdc949cd0"},{"problem":64,"code":"(fn ([] 0)\n  ([item1 item2] (+ item1 item2)) )","user":"5db70407e4b010eb3c36cd3e"},{"problem":64,"code":"(fn \n  ([] 0)\n  ([sum num] (+ sum num)))","user":"5bdb82d8e4b0ed4b8aab4c1d"},{"problem":64,"code":"(fn\n    ([] 0)\n    ([a b] (+ a b)))","user":"58ab572be4b0005cfeb1a72b"},{"code":"(fn add\n  ([] 0)\n  ([a] a)\n  ([a b] (+ a b))\n  ([a b & more] (+ (+ a b) (add more)))\n)","problem":64,"user":"4e8b98fc535d65386fec2124"},{"problem":64,"code":"(fn ([] 0) ([b a] (+ b a)))","user":"570eeca5e4b0b0fb43fd06fb"},{"code":"(fn ([] 0)\n    ([x] x)\n    ([x y] (+ x y)))","problem":64,"user":"4fea2de5e4b0140c20fb9bfe"},{"code":"(fn [& more] (if (= 0 (count more)) 0 (+ (first more) (last more)) ))","problem":64,"user":"4ea31da2535d7eef308072c1"},{"problem":64,"code":"(fn \n  ([] 0)\n  ([m v] (+ m v)))","user":"54b972bbe4b0ed20f4ff6ead"},{"problem":64,"code":"(fn [& [x y]] (if (and x y)\n            (do (+ x y))\n            (do 0)))","user":"571a31e3e4b07c98581c3b47"},{"code":"(fn [& args]\n  (if (zero? (count args))\n    0\n    (+ (first args) (second args))))","problem":64,"user":"4e932f38535dbda64a6f6b0c"},{"code":"(fn\r\n  ([] (+ 0 0))\r\n  ([a] (+ a 0))\r\n  ([a b](+ a b))\r\n)","problem":64,"user":"4f831dd2e4b033992c121c16"},{"code":"(fn ([x y] (+ x y))\n  ([x] x)\n  ([] 0))","problem":64,"user":"50c53708e4b08ad5e08ded0e"},{"code":"(fn this\n      ([] 0)\n      ([x] x)\n      ([x y] (+ x y))\n      ([x y & more]\n          (apply this (this x y) more)))","problem":64,"user":"4f515bd3e4b03ad3f0c10d1f"},{"code":"(fn ([y z] (apply + [z y]))\n  ([] 0)\n\n)","problem":64,"user":"50f6a4e4e4b0035e89151845"},{"problem":64,"code":"(fn \n  ([] 0)\n  ([x y] (+ x y))\n)","user":"548eb50fe4b0e286459a1226"},{"code":"(fn ([acc x] (+ acc x))\n    ([] 0))","problem":64,"user":"4e7f5a0b535db966e863cc41"},{"problem":64,"code":"(fn ([] 0) ([acc x] (+ acc x)))","user":"5b48b10ee4b02d533a91bc84"},{"code":"(fn\n          ([] 0)\n          ([a b]\n            (+ a b)))","problem":64,"user":"5011ae8fe4b00ad656b9d982"},{"problem":64,"code":"(fn sumfn\n  ([] 0)\n  ([p] p)\n  ([p v] (+ p v)))","user":"55de2798e4b050e68259b3db"},{"problem":64,"code":"(fn ([]\t0)\n  \t([accum elem] (+ accum elem)))","user":"5d18d327e4b0902706380dff"},{"code":"(fn [& args]\n  (apply + args)\n  )","problem":64,"user":"52fba50ce4b047fd5583700d"},{"code":"(fn \n  ([] 0)\n  ([x y] (+ x y)) )","problem":64,"user":"4ed82830535d10e5ff6f52f7"},{"problem":64,"code":"(fn f1 [& args] (apply + args))","user":"56b5019ce4b0982f16b37e2c"},{"code":"(fn me\n  ([] (me 0 0))\n  ([lh r] (+ lh r)))","problem":64,"user":"50a8a04ae4b0deba384a58b9"},{"problem":64,"code":"(fn\n  ([] 0)\n  ([x y]\n  (+ x y)))","user":"560ec0b7e4b05f002753df56"},{"problem":64,"code":"(fn \n ([x, y] (+ x y))\n ([] 0))","user":"5e5d6f8ae4b0fd0acd15866a"},{"code":"(fn foo\n    ([] (foo 0))\n    ([x] (foo x 0))\n    ([x y] (+ x y)))","problem":64,"user":"53a047d4e4b0ca733b9744aa"},{"problem":64,"code":"(fn \n  ([] 0)\n  ([arg1 arg2] (+ arg1 arg2))\n  )","user":"5ae71f14e4b0837691e92ca7"},{"code":"(fn [& args] (reduce #(+ %1 %2) 0 args))","problem":64,"user":"507a396be4b08327cd804a69"},{"code":"(fn ([] 0) ([ acc item ] (+ acc item) ))","problem":64,"user":"4eef0828535d305ff5cb7f18"},{"problem":64,"code":"(fn ([x y]\n  (+ x y)) ([] 0))","user":"5777bb7ee4b0979f8965164d"},{"problem":64,"code":"(fn [& [a i]]\n          (if i\n            (+ a i)\n            0))","user":"570c8ac3e4b0b0fb43fd06ca"},{"problem":64,"code":"(fn summarize\n  ([] 0)\n  ([a] 0)\n  ([a b] (+ a b)))","user":"5b113f20e4b0cc2b61a3be2c"},{"code":"(fn rdc ([a b] (+ a b)) ([] 0) )","problem":64,"user":"4e3a9dae535deb9a81d77f4a"},{"code":"(fn [& x] (if x (apply + x) 0))","problem":64,"user":"5298d3f4e4b02ebb4ef75068"},{"code":"#(apply + %&)","problem":64,"user":"4ed6c738535d10e5ff6f52e9"},{"code":"(fn ([x y] (+ x y)) ([] (+ 0 0)))","problem":64,"user":"51631aeee4b055933a9ca02a"},{"code":"(fn [& args]\n  (cond (< (count args) 2) 0\n        (> (count args) 1) (apply + args)))","problem":64,"user":"4f0348b4535dcb61093f6a84"},{"problem":64,"code":"(fn\n  ([] 0)\n  ([ret x] (+ ret x)))","user":"55ba4a78e4b01b9910ae29cf"},{"code":"(fn [& x]\n  (if (= 2 (count x))\n(+ (first x) (last x))\n0))","problem":64,"user":"4eb27fad535d7eef3080734a"},{"code":"(fn [& all] (apply + all))","problem":64,"user":"508a2c2fe4b016a2107004a1"},{"code":"(fn ([x y] (+ x y))([x] x)([] 0))","problem":64,"user":"536f2faee4b0fc7073fd6e79"},{"code":"(fn\n  ([x y] (+ x y))\n  ([] 0)\n)","problem":64,"user":"4f525fdce4b03ad3f0c10d37"},{"code":"(fn ([] 0)\n  \t([x y] (+ x y)))","problem":64,"user":"516d2460e4b06f078fab252e"},{"code":"(fn [& a](if (= 0 (count a)) 0 (+ (first a) (second a))))","problem":64,"user":"52d92f13e4b09f7907dd13a2"},{"code":"(fn [& b] (if (< 1 (count b)) \n            (+ (first b) (second b))\n            (if (= 1 (count b)) b 0)))","problem":64,"user":"4f0f3830535d0136e6c22338"},{"code":"(fn f\n  ([a b] (+ a b))\n  ([a] a)\n  ([] 0))","problem":64,"user":"512da425e4b040332b905b34"},{"code":"( fn ([x,y] (+ x y))\n     ([x] x)\n     ([] 0))","problem":64,"user":"4ea5bd2d535d7eef308072db"},{"code":"(fn [ & nums ]( apply + nums ))","problem":64,"user":"4f920065e4b0dcca54ed6ca9"},{"problem":64,"code":"(fn [& args]\n\t(if (seq? args) (let [[x y] args] (+ x y)) 0))","user":"53a739b0e4b0ef122a8689d0"},{"problem":64,"code":"(fn sum \n  ([x y] (+ x y))\n  ([] 0)\n  )","user":"5de6484ce4b0986d99407f66"},{"problem":64,"code":"(fn test3\n  ([a b]\n   (+ a b))\n  ([] 0))","user":"5484c3b2e4b0e286459a11a2"},{"problem":64,"code":"(fn \n  ([] 0) \n  ([a v] (+ a v))\n)","user":"5be2e670e4b0ed4b8aab4ccc"},{"problem":64,"code":"(fn ([x y] (+ x y))\n  \t([] 0))","user":"4f33f31fe4b0e243712b1eb2"},{"code":"(fn ([a b] (+ a b))\n    ([a] (+ 0 a))\n    ([] 0))","problem":64,"user":"506f5d68e4b082ae7d1032c7"},{"problem":64,"code":"(fn reds [ & [a b]]\n  (if-not (nil? b)\n    (if (sequential? b)\n      (+ a (first  b))\n      (+ a b))\n    (if (empty? a) 0\n        (+ (first a) (second a)))))","user":"5dab11cde4b000c986472c45"},{"code":"(fn \n  ([] 0)\n  ([a b] (if (= b 5) 15 6)))\n\n;)","problem":64,"user":"4fe83efbe4b07c9f6fd12c3b"},{"code":"(fn \n  ([] 0)\n  ([a b] (+ a b ))\n)","problem":64,"user":"4f74a4fbe4b044e54cd9a901"},{"code":"(fn ([]0) ([x y] (+ x y)))","problem":64,"user":"4f0d5338535d0136e6c22316"},{"problem":64,"code":"( fn\n  ([] 0)\n  ([a b] (+ a b)))","user":"5b4611fde4b02d533a91bc5c"},{"problem":64,"code":"(fn reducer\n  ([] reducer 0 0)\n  ([x y] (+ x y)))","user":"5839f286e4b089d5ab817d49"},{"problem":64,"code":"(fn\n  ([] 0)\n  ([a b] (+ a b))\n  )","user":"5780c2c6e4b0d36ec5835e7a"},{"code":"(fn sumup [& x]\n  (if (< (count x) 1)\n    0\n  (if (coll? (rest x)) \n    (+ (first x) (reduce sumup (rest x)))\n    (+ (first x) (rest x))\n  )))","problem":64,"user":"514852b4e4b0203766d54154"},{"problem":64,"code":"(fn ([x y](+ x y))\n  ([x] (x))\n  ([] 0))","user":"54c92da8e4b045293a27f65c"},{"problem":64,"code":"(fn \n  ([] 0)\n  ([acc v] (+ v acc)))","user":"59331397e4b072a2710fd046"},{"code":"(fn ([x y] (+ x y)) ([] 0))","problem":64,"user":"4eb7852f535d7eef30807376"},{"code":"(if (== 0 (+))\n  +\n  \"whatever\")","problem":64,"user":"50901b2ee4b0ea685a20f774"},{"code":"(fn ([] 0)\n ([x y] (+ x y)))","problem":64,"user":"4e51c67a535d302ef430da6a"},{"code":"(fn [& args] \n  (if args\n\t(+ (first args) (second args))\n    0\n    ))","problem":64,"user":"523e4e86e4b09833704079a9"},{"code":"(fn [& y] (apply + y))","problem":64,"user":"524feb3fe4b0541d1855b81f"},{"code":"(fn ([] 0) ([a] a) ([a b] (+ a b)))","problem":64,"user":"4ffb5d16e4b0678c553fc3d0"},{"code":"(fn ([] 0) ([acc el] (+ acc el)))","problem":64,"user":"4faf97d8e4b081705acca258"},{"code":"(fn something\n    ([] 0) \n    ([item i] (+ item i)))","problem":64,"user":"4f03818e535dcb61093f6b00"},{"problem":64,"code":"(fn [& col] (apply + col))","user":"574a6681e4b02ea1147991f8"},{"problem":64,"code":"(fn \n\t([x y]\n    (+ x y))\n    ([]\n    0))","user":"55ef51f1e4b066087aa94534"},{"problem":64,"code":"(fn \n  ([x y] \n  (+ x y))\n  ([]\n  0))","user":"5479164ae4b0c51c1f4d72c3"},{"code":"(fn([] 0)([x y](+ x y)))","problem":64,"user":"4f295820e4b0d6649770a027"},{"code":"(fn [& args]\n   (if (> (count args) 0)\n    (+ (first args) (second args))\n    0))","problem":64,"user":"52e961d6e4b09f7907dd14ad"},{"problem":64,"code":"(fn \n  ([x y] (+ x y))\n  ([] 0)\n  )","user":"5443d78de4b032a45b86938b"},{"problem":64,"code":"(fn ([x y] (+ x y)) \n              ([x] x)\n              ([] 0) )","user":"5da20e73e4b000c986472be1"},{"problem":64,"code":"(fn ([] 0) ([el1 el2] (+ el1 el2)))","user":"5e1a3989e4b0dc9594008511"},{"problem":64,"code":"(fn [& args] \n  (if (empty? args)\n    0\n    (+ (first args) (second args))))","user":"5b5d255de4b0c6492753e6c8"},{"problem":64,"code":"(fn \n  ([] 0)\n  ([x] x)\n  ([x y] (+ x y)\n   ))","user":"57e3527ce4b0bfb2137f5a99"},{"problem":64,"code":"(fn re-sum\n  ([] (re-sum 0 0))\n  ([x y] (+ x y)))","user":"5889dc13e4b0f1effa3b774a"},{"problem":64,"code":"(fn [& [a b]] (+ (or a 0) (or b 0)))","user":"53ef55eee4b0742d9025b0ca"},{"code":"(fn \n  ([] 0)\n  ([x y]\n   \t(+ x y)))","problem":64,"user":"511a5328e4b09045b2b16946"},{"code":"(fn ([] 0)([x y] (+ (or x 0) (or y 0))))","problem":64,"user":"5053d193e4b0b1b9d1860ea5"},{"problem":64,"code":"(fn ([] 0)\n  \t([acc] acc)\n  \t([acc elem] (+ elem acc)))","user":"5464dd11e4b01be26fd746d2"},{"code":"(fn doR\n  ([] 0)\n  ([x y] (+ x y))\n  ([x y & args] (reduce doR (doR x y) args))\n  \n)","problem":64,"user":"50b8e67fe4b0cba0e598b655"},{"problem":64,"code":"(fn ([p c] (+ (or p 0) c))\n  \t([p] p)\n  \t([] 0)\n)\n\n;this function uses multi-arity to return different values based on arguments","user":"5a506896e4b05d388ecb6bd8"},{"problem":64,"code":"(fn ([a b]  (+ a b))\n    ([] 0)\n)","user":"5595a88ee4b0c79f6e1db96e"},{"code":"(fn [ & a ] (if (= nil a) 0 (+ (first a) (last a))))","problem":64,"user":"4ee88f29535d93acb0a66882"},{"problem":64,"code":";;(fn [& vals] (apply + vals))\n+","user":"55647a31e4b0c656e3ff1808"},{"problem":64,"code":"(fn \n  ([acc el] (println \"+\")(+ acc el))\n  ([acc](println \"done\") acc)\n  ([](println \"init\") 0)\n  )","user":"596e4c5be4b069c0a1a19864"},{"problem":64,"code":"(fn\n  ([] 0)\n  ([acc] acc)\n  ([acc x] (+ acc x)))","user":"5e16d26be4b0a047bd49f720"},{"problem":64,"code":"(fn \n  \t([] 0)\n  \t([%1] (+ %1 0))\n\t([%1 %2] (+ %1 %2)))","user":"5a21a5ace4b0ff51aa4b32b4"},{"problem":64,"code":"(fn \n  ([]\n   0) \n  ([s x]\n   (+ s x)))","user":"58e039d3e4b0a4d5acaab734"},{"problem":64,"code":"(fn ([] 0)\n  ([accum a] (+ accum a)))","user":"54903056e4b0b312c081ff2e"},{"code":"(fn ([] 0) ([a] (a)) ([a b] (+ a b)))","problem":64,"user":"510a6bece4b06956752d35af"},{"code":"(fn ([x y] (+ x y))\n    ([x] x)\n    ([] 0))","problem":64,"user":"4e8c4823535d65386fec2128"},{"code":"(fn [ & nums ] (apply + nums))","problem":64,"user":"4eff81ca535dcb61093f6a2d"},{"problem":64,"code":"(fn \n  ([a, b] (+ a b))\n  ([] (+ 0)))","user":"59a7f3d1e4b0bcf4e9a43ae8"},{"problem":64,"code":"(fn \n    ([x y] (+ x y))\n    ([] 0)\n    )","user":"573407f0e4b0cd1946bd1001"},{"problem":64,"code":"(fn ([] 0) ([x,y] (+ x y)))","user":"54a1d643e4b09f271ff37c50"},{"problem":64,"code":"(fn [& args] (if args (+ (first args) (last args)) 0))","user":"5188c249e4b0bdff0e072d54"},{"problem":64,"code":"(fn ([a,b] (+ a b)) ([a] a) ([] 0) )","user":"5aa83206e4b0d174b936c8c6"},{"problem":64,"code":"(fn [& [acc val]] (if (and  acc val)  (+ acc val) 0))","user":"53fcd66ae4b0de5c418485db"},{"problem":64,"code":"(fn ([x y] (+ x y)) ([x] x) ([] 0))","user":"53fc8424e4b0de5c418485b3"},{"problem":64,"code":"(fn ([] 0) \n  ([a b] (+ a b)))","user":"5828927ee4b051871117bf38"},{"code":"(fn \n  ([] 0)\n  ([x] x)\n  ([x y] \n  (+ x y)))","problem":64,"user":"51026750e4b00c483ae176f7"},{"code":"(fn \n  ([] 0)\n  ([n] n)\n  ([sum n] (+ sum n)))","problem":64,"user":"51e34f3ee4b0c611d6113e41"},{"problem":64,"code":"(fn [& l] (if (nil? (first l)) 0 (+ (first l) (second l))))","user":"550065a4e4b07d26eda61d5a"},{"code":"(fn\n  ([] 0)\n  ([x] x)\n  ([x y] (+ x y))\n)","problem":64,"user":"4ebc64db535dfed6da9c6d82"},{"problem":64,"code":"(fn [& rest] (cond \n              (= 2 (count rest))\n              (+ (first rest) (last rest))\n              :else\n              0))","user":"55871c62e4b059ccff29b1e0"},{"code":"(fn ([] 0) ([x] x) ([x y] (+ x y)))","problem":64,"user":"4f29b9cae4b0d6649770a030"},{"problem":64,"code":"(fn\n    ([] 0)\n    ([x y]\n     (+ x y)))","user":"55ac07afe4b03311e7b7328f"},{"code":"#(reduce (fn [x y] (+ x y)) 0 %&)","problem":64,"user":"4f1900b0535d64f603146463"},{"problem":64,"code":"(fn [& args] (reduce + args ))","user":"5b1619e4e4b0cc2b61a3be77"},{"problem":64,"code":"(fn ([x y] (+ x y))\n    ([] 0 ))","user":"54178782e4b01498b1a71a0c"},{"problem":64,"code":"(fn ([] 0) ([first] first) ([first second] (+ first second)))","user":"5da0ed1fe4b000c986472bd8"},{"code":"(fn\n  ([] 0)\n  ([x y] (+ x y)))","problem":64,"user":"4edbae0d535d10e5ff6f531c"},{"problem":64,"code":"(fn ([x, y] (+ x y))\n  ([] 0)\n  )","user":"54ed6eafe4b024c67c0cf862"},{"problem":64,"code":"(fn ([assoc row] (+ assoc row)) ([] 0))","user":"53c6c9dfe4b00fb29b2212a1"},{"code":"(fn ([] 0) ([i & o](apply + i o)))","problem":64,"user":"4ec5d62c535d6d7199dd36ba"},{"code":"(fn \n  ([] 0)\n  ([a b] (+ a b))\n)","problem":64,"user":"4ee8092f535d93acb0a66875"},{"code":"(fn\n  ([] 0)\n  ([x y]\n    (+ x y)))","problem":64,"user":"4f8d340be4b02e764a0a51a8"},{"code":"(fn \r\n  ([] 0)\r\n  ([r] r)\r\n  ([r l] (+ r l))\r\n)","problem":64,"user":"4dd579b5535dae65d5c462ea"},{"problem":64,"code":"(fn ([x y] (+ x y))\n    ([] 0))","user":"5a2cfa85e4b09cafd31c7f61"},{"problem":64,"code":"(fn ([x y] (+ x y) )  ([](+ 0 0))  )","user":"556f4011e4b09a3098a5251d"},{"code":"(fn [& args] (if (empty? args) 0 (+ (first args) (last args))))","problem":64,"user":"4f03e4c1535dcb61093f6b79"},{"code":"(fn \n  ([] 0 )\n  ([x] (x) )\n  ([x,y] (+ x y))\n  ) ; fn","problem":64,"user":"504e4ac2e4b0f6ff3350c49a"},{"problem":64,"code":"(fn s ([] (s 0 0)) ([x y] (+ x y)))","user":"56ab7578e4b03c432f18733d"},{"problem":64,"code":"(fn [& args]\n  (if (= (count args) 2)\n    (+ (first args) (nth args 1)); if \n    0; else \n    )\n  )","user":"542d27a0e4b0dad94371f2b3"},{"code":"(fn ([a b] (+ a b)) ([] 0))","problem":64,"user":"4f045d0e535dcb61093f6bbc"},{"code":"(fn adder ([] 0) ([x] x) ([a b] (+ a b)))","problem":64,"user":"5141b763e4b02fd87f5064c4"},{"problem":64,"code":"; https://clojuredocs.org/clojure.core/reduce is iets duidelijker, op basis van die uitleg is deze opgave te doen\n+","user":"5637bd38e4b0bfe05bf117de"},{"problem":64,"code":"(fn ([] (num 0)) ([x y] (+ x y)))\n\n;; or just +","user":"53c7ad44e4b00fb29b2212aa"},{"problem":64,"code":"(fn\n  ([] 0)\n  ([acc val] (+ acc val)))","user":"5813e208e4b0f478707a061b"},{"code":"(fn [& arg]\n  (if (empty? arg)\n    0\n    (+ (first arg) (second arg))))","problem":64,"user":"50f0d000e4b0c5f4fa5ddb6f"},{"code":"(fn ([r n] (+ r  n ))\n    \n    ( [] 0)\n)","problem":64,"user":"4e6cf2be535de274dd8d818a"},{"problem":64,"code":"(fn \n  ([] (+ 0 0)) \n  ([x] (+ x 0)) \n  ([x, y] (+ x y))\n)","user":"5a4dbc97e4b05d388ecb6bae"},{"problem":64,"code":"(fn ([] 0) ([x y] 0 (+ x y)))","user":"562573d0e4b00a550fc90298"},{"code":"+","problem":64,"user":"4dd61f98535d2dad7130b5c6"},{"problem":64,"code":";; Another answer\n;; (fn \n;;  ([] 0)\n;;  ([a b] (+ a b)))\n\n+","user":"568f2059e4b0dcc4269f40df"},{"problem":64,"code":"(fn \n  ([] 0)\n  ([acc x] (+ acc x)))","user":"5df03d09e4b093ff717275ba"},{"problem":64,"code":"(fn [& rest] (reduce + rest))","user":"55807091e4b05c286339e0eb"},{"code":"(fn \n  ([] 0)\n  ([a] a)\n  ([a b] (+ a b))\n )","problem":64,"user":"512b7a05e4b04d059cf1fd14"},{"problem":64,"code":"(fn\n  ([] 0)\n  ([x] (0))\n  ([x y] (+ x y)))","user":"59c3a7e9e4b0a024fb6ae4df"},{"problem":64,"code":"(fn [& arg] (if (= 0 (count arg)) 0 (apply + arg)))","user":"5fc5c303e4b02c825b0c8c1a"},{"code":"(fn ([] 0)\n    ([x] x) \n    ([x y] (+ x y)) \n)","problem":64,"user":"4e3df106535deb9a81d77f58"},{"code":"(fn [& args] (if (empty? args)\n               0\n               (+ (first args) (last args))\n             ))","problem":64,"user":"5303a027e4b0d8b024fd3745"},{"code":"(fn summer \n               ([n m] (+ n m))\n               ([] (identity 0))\n               )","problem":64,"user":"52867936e4b0239c8a67ae16"},{"code":"(fn [& a] (if (first a) (+ (first a) (second a)) 0))","problem":64,"user":"4fcba3f9e4b0ee37620e185b"},{"problem":64,"code":"(fn ([] 0) ([p n] (+ p n)))","user":"589ac5a2e4b00487982d5318"},{"code":"(fn this ([] 0) ([x y] (+ x y)) ([x y & more] (apply this (this x y) more)))","problem":64,"user":"4ed3c9d3535d44c135fd68f7"},{"code":"(fn [& x] (if (= 0 (count x)) 0 (+ (first x) (second x))))","problem":64,"user":"526dd90de4b03e8d9a4a72fe"},{"problem":64,"code":"(fn myred [& [x y]] (if (and x y) (+ x y) (if x x (if y y 0))))","user":"5a487d9ce4b05d388ecb6b67"},{"problem":64,"code":"(fn ([] 0) ([x] (+ x 0)) ([x y] (+ x y)))","user":"5512c935e4b055c2f668d4b8"},{"code":"(fn ([a b] (+ a b)) ([] (+ 0 0)))","problem":64,"user":"4ef18428535dced4c769f216"},{"code":"(fn [& rest] (apply + rest))","problem":64,"user":"4f8c813de4b02e764a0a519f"},{"problem":64,"code":"(fn [& nums] (apply + nums))","user":"56662275e4b0e91d5f5c566a"},{"problem":64,"code":"(fn myf \n  ([] 0)\n  ([a b] (+ a b)))","user":"54cb3497e4b057c6fda3a272"},{"code":"#(if (> (count %&) 1) (apply + %&) 0)","problem":64,"user":"50f53694e4b057d4c52de881"},{"problem":64,"code":"(fn ([] 0)\n  ([n1 n2]  \n    (apply + (concat (list n1)\n                     (repeat n2 1) ))))","user":"594c1baae4b07ddc2dafae59"},{"problem":64,"code":"(fn \n  ([] 0)\n  ([curr, nxt] (+ curr nxt))\n  )","user":"56de0db0e4b0ea9b8538f83a"}]