[{"code": "(fn [n]\r\n  (loop [an 1 i 1]\r\n    (if (> i n)\r\n      an\r\n      (recur (* an i) (inc i)))))", "problem": 42, "user": "4dd62278535d2dad7130b5c7"}, {"code": "(fn fac [k]\r\n  (if (= k 1)\r\n    1\r\n    (* k (fac (dec k)))))", "problem": 42, "user": "4dd6d6a0535d2dad7130b5ca"}, {"code": "#(apply *(range 1(+% 1)))", "problem": 42, "user": "4dd66da7535d2dad7130b5c8"}, {"code": "#(reduce * (range 2 (inc %)))", "problem": 42, "user": "4dadca03c9a9d6ed4199dc57"}, {"code": "(fn [n]\r\n  (loop [result 1 n n]\r\n    (if (> n 0)\r\n      (recur (* result n) (dec n))\r\n      result)))", "problem": 42, "user": "4dd6fa35535d2dad7130b5cd"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4dc986d0535d5973398f9285"}, {"code": "#(apply * (range 1 (+ % 1)))", "problem": 42, "user": "4dce6e41535d5973398f92a2"}, {"code": "(fn fac [n]\r\n  (if (= n 0)\r\n    1\r\n    (* n (fac (dec n)))))", "problem": 42, "user": "4dd023dd535d5973398f92ad"}, {"code": "(fn [n] \r\n  (reduce * (take n (iterate inc 1))))", "problem": 42, "user": "4dd61f98535d2dad7130b5c6"}, {"code": "(fn [n]\r\n  (apply * (range 1 (inc n))))", "problem": 42, "user": "4dd4f0a8535dae65d5c462e4"}, {"code": "(fn fact [n]\r\n  (if (> 2 n)\r\n  1\r\n\t(* n (fact (dec n)))))", "problem": 42, "user": "4dd6d7ee535d2dad7130b5cb"}, {"code": "(fn [n]\r\n  (reduce #(* %1 %2)\r\n          (range 1 (inc n))))", "problem": 42, "user": "4dbb1126535d1e037afb21b3"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4ddbfb8a535d02782fcbea00"}, {"code": "(fn fac [n]\r\n  (if (<= n 1)\r\n    n\r\n    (* n (fac (dec n)))))", "problem": 42, "user": "4dd52e29535dae65d5c462e5"}, {"code": "(fn [n]\r\n  (reduce * (range 1 (inc n))))", "problem": 42, "user": "4dd1de4d535dae65d5c462d7"}, {"code": "(fn [r]\r\n  (loop [cnt 1\r\n        result 1]\r\n    (if (= cnt (+ 1 r))\r\n      result\r\n      (recur (+ 1 cnt) (* result cnt))\r\n    )\r\n  )\r\n)", "problem": 42, "user": "4dd579b5535dae65d5c462ea"}, {"code": "(fn factorial [n]\r\n  (if (= n 1)\r\n    1\r\n    (* n (factorial (- n 1)))))", "problem": 42, "user": "4ddc620d535d02782fcbea06"}, {"code": "(fn [n] (reduce * (next (range (inc n)))))", "problem": 42, "user": "4ddcabcb535d6ebe9be03f52"}, {"code": "(fn [x]\r\n  (loop [r 1, y x]\r\n    (if (= y 0)\r\n      r\r\n      (recur (* r y) (- y 1)))))", "problem": 42, "user": "4db342d7535df7e46ed9b6cd"}, {"code": "(fn[x](loop[a 1 x x](if(= x 1)a(recur(* x a)(dec x)))))", "problem": 42, "user": "4ddbd934535d02782fcbe9fc"}, {"code": "(fn fib [x]\r\n  (loop [n x\r\n         fib 1]\r\n    (cond\r\n     (<= n 1) fib\r\n     :else (recur (dec n) (* fib n)))))", "problem": 42, "user": "4dcbb035535d5973398f928d"}, {"code": "(fn [n]\r\n    (apply * (map #(+ 1 %) (range n))))", "problem": 42, "user": "4dddf817535d08e6dec9fdd3"}, {"code": "#(loop [cur %, tot 1] \r\n  (if (< cur 2) \r\n    tot \r\n    (recur (dec cur) (* cur tot))))", "problem": 42, "user": "4ddbdc1b535d02782fcbe9fd"}, {"code": "(fn ff [n] (if (= n 1) 1 (* n (ff (- n 1)))))", "problem": 42, "user": "4ddc1c89535d02782fcbea01"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4dae0510c9a9d6ed4b99dc57"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4dabb7b1950ed6eda1bd72f3"}, {"code": "(fn f [a] \r\n  (if (> a 0) \r\n    (reduce * (range 1 (+ 1 a)))\r\n    0))", "problem": 42, "user": "4dda5d07535d02782fcbe9f2"}, {"code": "(fn [n]\r\n  (loop [n n\r\n         r 1]\r\n    (if (= n 0)\r\n      r\r\n      (recur (- n 1) (* r n)))))", "problem": 42, "user": "4de2f44f535d08e6dec9fdec"}, {"code": "(fn [n]\r\n  (reduce\r\n    (fn [x y]\r\n      (* x (+ y 1)))\r\n    1\r\n    (range n)))", "problem": 42, "user": "4ddee37c535d08e6dec9fddc"}, {"code": "(fn fact\r\n  [n]\r\n\t(if (= n 1) \r\n\tn\r\n(* n (fact (- n 1)))))", "problem": 42, "user": "4ddeb916535d08e6dec9fdd9"}, {"code": "#(loop [n % acc 1] (if (zero? n) acc (recur (dec n) (* n acc))))", "problem": 42, "user": "4dea9406535d08e6dec9fe01"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4de77a0a535d08e6dec9fdfa"}, {"code": "#(reduce * 1 (map inc (range %)))", "problem": 42, "user": "4de8a7d7535d08e6dec9fdfe"}, {"code": "(fn fc [x] (\r\n  if(zero? x) \r\n    1 (* x (fc (dec x)))))", "problem": 42, "user": "4de18de7535d08e6dec9fde8"}, {"code": "(fn fac [num]\r\n  (if (<= num 1)\r\n    1\r\n    (* num (fac (dec num)))))", "problem": 42, "user": "4de623ef535d08e6dec9fdf4"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4df1ce44535d08e6dec9fe1f"}, {"code": "(fn fact [n]\r\n  (if (< 1 n)\r\n    (* n (fact (dec n)))\r\n    1))", "problem": 42, "user": "4df1e213535d08e6dec9fe20"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4dee4a9c535d08e6dec9fe11"}, {"code": "(fn [n]\r\n       (loop [fact 1 i 1]\r\n         (if (> i n)\r\n           fact\r\n           (recur (* fact i) (inc i)))))", "problem": 42, "user": "4deb529a535d08e6dec9fe04"}, {"code": "(fn fact[n]\r\n    (if (= n 1) 1\r\n    (* n ( fact (- n 1)))))", "problem": 42, "user": "4db135081254ad5b4805fa67"}, {"code": "(fn [n]\r\n   (loop [n n answer 1]\r\n     (if (> n 1) (recur (dec n) (* n answer)) answer)))", "problem": 42, "user": "4df168bd535d08e6dec9fe1d"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4df3d4f4535d08e6dec9fe2c"}, {"code": "(fn f [n] (if (= n 1) 1 (* n (f (dec n)))))", "problem": 42, "user": "4df20dda535d08e6dec9fe23"}, {"code": "(fn factorial [n]\r\n  (if (zero? n) 1\r\n        (* n (factorial (dec n)))))", "problem": 42, "user": "4df30f76535d08e6dec9fe28"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4df3df8a535d08e6dec9fe2d"}, {"code": "(fn factorial [n]\r\n  (if (= n 1)\r\n    n\r\n    (* n (factorial (dec n)))))", "problem": 42, "user": "4df407c3535d08e6dec9fe2e"}, {"code": "(fn myfact [n] (if (= n 1) 1 (* n (myfact (dec n)))))", "problem": 42, "user": "4db883e1535d1e037afb2198"}, {"code": "(fn fact [n] (cond (<= n 0) 0 (= n 1) 1 :else (* n (fact (dec n)))))", "problem": 42, "user": "4df669d4535d08e6dec9fe35"}, {"code": "(fn fact [n]\r\n  (if (= n 0)\r\n    1\r\n    (* n (fact (dec n)))))", "problem": 42, "user": "4dfd4ba8535d04ed9115e781"}, {"code": "(fn f [x] \r\n      (if (= x 1) 1 (* x (f (- x 1)))))", "problem": 42, "user": "4ded582d535d08e6dec9fe0c"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4def301c535d08e6dec9fe12"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e02bee8535d04ed9115e791"}, {"code": "(fn [x](reduce * (take x (iterate inc 1))))", "problem": 42, "user": "4de6f806535d08e6dec9fdf7"}, {"code": "(fn fact [x]\r\n   (if (< x 2)\r\n1\r\n(* x (fact (- x 1)))))", "problem": 42, "user": "4e03b010535d04ed9115e794"}, {"code": "#(reduce * (range 1 (+ 1 %)))", "problem": 42, "user": "4e03c616535d04ed9115e796"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4dddff47535d08e6dec9fdd4"}, {"code": "#(reduce * (take % (iterate inc 1)))", "problem": 42, "user": "4e09125f535d04ed9115e7ad"}, {"code": "(fn fac[x] (if (= x 1) 1 (* x (fac (- x 1)))))", "problem": 42, "user": "4e080562535d04ed9115e7aa"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4de760a3535d08e6dec9fdf9"}, {"code": "(fn f [n] (if (= n 1) n (* n (f (dec n)))))", "problem": 42, "user": "4e059278535d04ed9115e7a5"}, {"code": "(fn ([n]\r\n(loop [n n acc 1]\r\n(if (= 1 n)\r\n  acc\r\n(recur (- n 1)(* n acc))))))", "problem": 42, "user": "4de8fb73535d08e6dec9fdff"}, {"code": "#(apply * (for [i (range 1 (inc %))]\r\n           i))", "problem": 42, "user": "4e0d8c27535d04ed9115e7b7"}, {"code": "(fn [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "4e0e0529535d04ed9115e7b9"}, {"code": "(fn fact [n]\r\n  (loop [n n acc 1]\r\n    (cond\r\n      (= 1 n) acc\r\n      :else (recur (- n 1) (* acc n)))))", "problem": 42, "user": "4dc7e7a5535d8a4b2fd74290"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4e111538535d04ed9115e7c3"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4daa374930acd6ed13482a68"}, {"code": "(fn fact [n]\r\n  (if (zero? n)\r\n    1\r\n    (* n (fact (dec n)))))", "problem": 42, "user": "4e123905535d04ed9115e7ce"}, {"code": "(fn fact [n] (loop [cnt n acc 1] (if (zero? cnt) acc (recur (dec cnt) (* acc cnt)))))", "problem": 42, "user": "4e043d85535d04ed9115e79e"}, {"code": "(fn factorial [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "4ddb339c535d02782fcbe9f9"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4dd7d040535d2dad7130b5d6"}, {"code": "#(apply * (range 1 (+ % 1)))", "problem": 42, "user": "4e14b925535d04ed9115e7df"}, {"code": "(fn [n]\r\n  (apply * (range 1 (inc n))))", "problem": 42, "user": "4e1158aa535d04ed9115e7c6"}, {"code": "#(apply * (range 1 (+ 1 %)))", "problem": 42, "user": "4deff9f9535d08e6dec9fe15"}, {"code": "#(loop [n % f 1]\r\n        (if (= n 1)\r\n            f\r\n            (recur (dec n) (* f n))))", "problem": 42, "user": "4db6ce85535d1e037afb217f"}, {"code": "(fn myfac [n]\r\n    (if (< n 2) 1 (* n (myfac (- n 1)))))", "problem": 42, "user": "4e1b2cd9535d04ed9115e7fd"}, {"code": "#(apply * (range 1 (+ % 1)))", "problem": 42, "user": "4e16bdef535d04ed9115e7e9"}, {"code": "(fn myfac [x]\r\n  (if (<= x 1) 1 (* x (myfac (- x 1)))))", "problem": 42, "user": "4e14108c535d04ed9115e7dd"}, {"code": "(fn [x] (reduce * (rest (range (+ x 1)))))", "problem": 42, "user": "4e1e7f88535d04ed9115e808"}, {"code": "(fn [x]\r\n    (loop [n x f 1]\r\n        (if (= n 1)\r\n            f\r\n            (recur (dec n) (* f n)))))", "problem": 42, "user": "4dfd7ecf535d04ed9115e783"}, {"code": "(fn [x] (reduce * (range 1 (+ x 1))) )", "problem": 42, "user": "4e2164ff535d04ed9115e815"}, {"code": "#(apply * % (range 1 %))", "problem": 42, "user": "4e218470535d04ed9115e817"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e1f9bb5535d04ed9115e80d"}, {"code": "#(apply * (range 1 (+ 1 %)))", "problem": 42, "user": "4dc25124535d020aff1edf94"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4e22b78b535d04ed9115e81e"}, {"code": "(fn [n] (apply * (range 1 (inc n))))", "problem": 42, "user": "4e246abe535d04ed9115e827"}, {"code": "(fn fac [n]\r\n  (if (= n 0)\r\n    1\r\n    (* n (fac (dec n)))))", "problem": 42, "user": "4e113a81535d04ed9115e7c5"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e0cdc6f535d04ed9115e7b4"}, {"code": "(fn fac [n]\n  (if (= n 0)\n    1\n    (* n (fac (dec n)))))", "problem": 42, "user": "4de165f3535d08e6dec9fde6"}, {"code": "#(apply * (range 2 (inc %)))", "problem": 42, "user": "4e232f34535d04ed9115e81f"}, {"code": "(fn [x] (reduce #(* %1 %2) 1 (range 1 (+ x 1))))", "problem": 42, "user": "4e1ec17a535d04ed9115e80a"}, {"code": "(fn [n]\r\n   (loop [n n t 1]\r\n     (if (zero? n)\r\n       t\r\n       (recur (dec n) (* t n)))))", "problem": 42, "user": "4e26e8b4535deb9a81d77ef6"}, {"code": "(fn faku\n  ([x] (faku x 1))\n  ([x acc] (if (= x 0)\n            acc\n            (recur (dec x) (* x acc)))))", "problem": 42, "user": "4e28120f535deb9a81d77efa"}, {"code": "(fn fact [n]\n  (loop [result n i (- n 1)]\n    (if (<= i 1)\n      result\n      (recur (* result i) (dec i)))))", "problem": 42, "user": "4e131443535d04ed9115e7d3"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4e218464535d04ed9115e816"}, {"code": "#(letfn [(fac [n]\r\n  (if (= 1 n)\r\n\t    1\r\n\t    (* n (fac (dec n)))))]\r\n  (fac %1))", "problem": 42, "user": "4e273301535deb9a81d77ef7"}, {"code": "(fn hoge [x]\n  (if (= x 1) 1\n      (* (hoge (dec x)) x)))", "problem": 42, "user": "4e2e6460535deb9a81d77f0b"}, {"code": "(fn [x] (reduce * (range 1 (+ x 1))))", "problem": 42, "user": "4e3000c8535deb9a81d77f13"}, {"code": "#(apply * % (range 1 %))", "problem": 42, "user": "4e307313535deb9a81d77f14"}, {"code": "(fn [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "4dc54eb2535d8a4b2fd74284"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e31a15c535deb9a81d77f1e"}, {"code": "(fn fac [n]\n  (if (= 1 n)\n    1\n    (* n (fac (dec n)))))", "problem": 42, "user": "4e21c0c7535d04ed9115e818"}, {"code": "(fn [x] (apply * (range 1 (inc x))))", "problem": 42, "user": "4daef21cedd6309eace4d169"}, {"code": "(fn factorial [n]\n  (if (zero? n) 1\n      (* n (factorial (- n 1)))))", "problem": 42, "user": "4e342671535deb9a81d77f29"}, {"code": "(fn factorial [num]\n  (cond\n    (zero? num) 1\n    :else (* num (factorial (dec num)))))", "problem": 42, "user": "4e2f9e71535deb9a81d77f11"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e3456f9535deb9a81d77f2a"}, {"code": "(fn [n] (reduce * 1 (range 1 (inc n))))", "problem": 42, "user": "4e36425c535deb9a81d77f33"}, {"code": "(fn facto [x]\r\n    (if (> x 1)\r\n\t      (* x (facto (- x 1))) x))", "problem": 42, "user": "4e370a04535deb9a81d77f37"}, {"code": "(fn [x]\n  (reduce * (range 1 (inc x) ) )\n)", "problem": 42, "user": "4e333091535deb9a81d77f25"}, {"code": "#(apply * 1 (range 1 (inc %)))", "problem": 42, "user": "4e356d2b535deb9a81d77f2d"}, {"code": "(fn f [x] (if (= x 1) 1 (* (f (dec x)) x)))", "problem": 42, "user": "4e39c710535deb9a81d77f45"}, {"code": "(fn fact[x](\n  if (= x 1) 1 (* x (fact (- x 1)))\n))", "problem": 42, "user": "4e3ae7cd535deb9a81d77f4e"}, {"code": "(fn [n] (reduce * (range 2 (inc n))))", "problem": 42, "user": "4e39fb68535deb9a81d77f47"}, {"code": "#(* %1 (reduce * (range 1 %1)))", "problem": 42, "user": "4e3b6bff535deb9a81d77f52"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e3996b0535deb9a81d77f41"}, {"code": "(fn [n]\n  (loop [p 1, x 1]\n    (if (> x n) p (recur (* p x) (inc x)))))", "problem": 42, "user": "4e3ac1b2535deb9a81d77f4c"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e3f480c535dc968683fc497"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4e39d763535deb9a81d77f46"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e4179c4535dc968683fc49d"}, {"code": "(fn fact [n]\n (cond \n  (= n 1) 1\n  :else (* n (fact (- n 1)))))", "problem": 42, "user": "4e2d562c535deb9a81d77f07"}, {"code": "(fn [x] (reduce * (range 1 (+ x 1))))", "problem": 42, "user": "4dde4e95535d08e6dec9fdd7"}, {"code": "(fn [x] \n  (reduce * (range 1 (inc x))))", "problem": 42, "user": "4de27757535d08e6dec9fdea"}, {"code": "(fn [n]\n  (apply * (range 1 (inc n))))", "problem": 42, "user": "4e42f930535dc968683fc49f"}, {"code": "(fn factorial [n]\n  (if (= n 1)\n    1\n    (* n (factorial (- n 1)))))", "problem": 42, "user": "4db51ce0535d87e67b28fe06"}, {"code": "(fn fac [n] (if (= n 1) 1 \n(let [a (fac (dec n))]  (* a n))))", "problem": 42, "user": "4e3a9dae535deb9a81d77f4a"}, {"code": "(fn fact [n]\n  (cond\n    (= n 1) 1\n    :else (* (fact (- n 1)) n)))", "problem": 42, "user": "4e444c11535dc968683fc4a9"}, {"code": "(fn fac [n]\n  (loop [cnt n acc 1]\n    (if (= cnt 0)\n      acc\n      (recur (dec cnt) (* cnt acc)))))", "problem": 42, "user": "4e46ac46535dc968683fc4b5"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e4870d1535dc968683fc4bc"}, {"code": "(fn  [n]\n   (let [fact (fn fact [n]\n  \t\t\t(if (= n 1)\n\t\t\t\t  1\n\t\t\t\t  (* n (fact (- n 1)))))](fact n)))", "problem": 42, "user": "4df9c598535d04ed9115e77a"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4e49badd535dc968683fc4c9"}, {"code": "#(reduce * (range 1 (+ 1 %)))", "problem": 42, "user": "4e410033535dc968683fc49c"}, {"code": "(fn [n]\n                 (loop [accum n\n                        n (- n 1)]\n                   (if (> n 0)\n                     (recur (* accum n) (- n 1))\n                     accum)))", "problem": 42, "user": "4e08fb7a535d04ed9115e7ac"}, {"code": "(fn ! [n] (if (> n 1) (* n (! (- n 1))) 1))", "problem": 42, "user": "4e43b0d9535dc968683fc4a3"}, {"code": "(comp (partial reduce *) (partial range 1) inc)", "problem": 42, "user": "4e4a94a9535dc968683fc4cd"}, {"code": "#(reduce * (take % (iterate inc 1)))", "problem": 42, "user": "4e4ae5aa535dc968683fc4d2"}, {"code": "(fn factorial [n]\n  (loop [prod 1\n         nsofar n]\n    (if (= nsofar 1) prod\n      (recur (* prod nsofar) (dec nsofar)))))", "problem": 42, "user": "4e4bf20e535dc968683fc4d9"}, {"code": "(fn factorial [n]\n  (loop [result 1 n n]\n    (if (= n 0)\n        result\n        (recur (* result n) (- n 1)))))", "problem": 42, "user": "4e4b4564535dc968683fc4d3"}, {"code": "(fn[n](reduce *(range 2(inc n))))", "problem": 42, "user": "4e4c238f535dc968683fc4dc"}, {"code": "(fn [x] \n  (loop [i x result 1]\n    (if (= i 1) result (recur (dec i) (* result i)))))", "problem": 42, "user": "4e4c1e8c535dc968683fc4db"}, {"code": "(fn ! [x] (if (zero? x) 1 (* x (! (dec x)))))", "problem": 42, "user": "4e4fbd0c535dc968683fc4e9"}, {"code": "#(reduce * (range 1 (inc %) 1))", "problem": 42, "user": "4e4ad154535dc968683fc4d1"}, {"code": "(fn fac [x]\n  (condp = x \n    1 1\n    (* x (fac (dec x)))))", "problem": 42, "user": "4e4bd94b535dc968683fc4d7"}, {"code": "(fn [n] (apply * (range 1 (+ 1 n))))", "problem": 42, "user": "4e49a7bb535dc968683fc4c6"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e50b67b535dc968683fc4ed"}, {"code": "(fn fact [n] (apply * (range 1 (inc n))))", "problem": 42, "user": "4e513ecf535dc968683fc4f6"}, {"code": "(fn [n] \r\n  (reduce * (range 1 (inc n))))", "problem": 42, "user": "4e513758535dc968683fc4f3"}, {"code": "#(apply * (range 1 (+ % 1)))", "problem": 42, "user": "4e12cc9d535d04ed9115e7d2"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e2b1d48535deb9a81d77f03"}, {"code": "#(apply * % (range 2 %))", "problem": 42, "user": "4e52d815535d302ef430da77"}, {"code": "(fn [n] (reduce * (range 2  (inc n))))", "problem": 42, "user": "4e50e2a0535dc968683fc4ef"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e5229dc535d302ef430da6f"}, {"code": "#(apply * (range 1 (+ 1 %)))", "problem": 42, "user": "4e498df9535dc968683fc4c4"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e399685535deb9a81d77f40"}, {"code": "#(reduce * 1 (range 1 (inc %)))", "problem": 42, "user": "4e5411e8535d8a8b8723a279"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e5676b2535d8a8b8723a282"}, {"code": "#(reduce * (take % (iterate inc 1)))", "problem": 42, "user": "4e521cef535d302ef430da6d"}, {"code": "(fn[n]\n  (reduce * (range 1 (inc n))))", "problem": 42, "user": "4e58bcd4535d8a8b8723a296"}, {"code": "#(reduce *(range 1 (+ % 1)))", "problem": 42, "user": "4e58dd23535d8a8b8723a298"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e5914e0535d8a8b8723a29b"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e593dac535d8a8b8723a29c"}, {"code": "(fn factorial [n]\n  (apply * (take-while #(> % 1) (iterate dec n))))", "problem": 42, "user": "4e584256535d8a8b8723a28e"}, {"code": "#(reduce * (take % (iterate inc 1)))", "problem": 42, "user": "4e570f47535d8a8b8723a287"}, {"code": "#(apply * (range 1 (+ 1 %)))", "problem": 42, "user": "4e597b2c535d8a8b8723a29d"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4e599577535d8a8b8723a29f"}, {"code": "#(apply * (take % (iterate inc 1)))", "problem": 42, "user": "4e5af6d7535d8a8b8723a2b2"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4e589bdc535d8a8b8723a295"}, {"code": "(fn fac\n      ([n]\n   (fac n 1))\n      ([n acc]\n\t (if (= n 0)\n\t   acc\n\t   (recur (dec n) (* n acc)))))", "problem": 42, "user": "4e5a2403535d8a8b8723a2a7"}, {"code": "(fn fac [n]\n        (reduce * (range 2 (inc n))))", "problem": 42, "user": "4e463703535dc968683fc4b2"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e588e84535d8a8b8723a294"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e5bff2b535d8a8b8723a2bd"}, {"code": "(fn [n]\n  (loop [r 1 i 2]\n    (if (> i n)\n      r\n      (recur (* r i) (inc i)))))", "problem": 42, "user": "4e5c801e535d8a8b8723a2c1"}, {"code": "(fn factorial [n]\n  (loop [n n result 1]\n    (if (zero? n)\n        result\n        (recur (dec n) (* result n)))))", "problem": 42, "user": "4e5d0e96535d8a8b8723a2c8"}, {"code": "(fn factorial [n]\n  (loop [n n t 1]\n    (if (= 0 n)\n      t\n      (recur (dec n) (* n t)))))", "problem": 42, "user": "4e360072535deb9a81d77f30"}, {"code": "(fn [x] (reduce #(* %1 %2) (range 1 (+ 1 x))))", "problem": 42, "user": "4e521d7a535d302ef430da6e"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4dad938fc9a9d6ed1b99dc57"}, {"code": "(fn [n] (loop [a n t 1] (cond (= a 1) t :else (recur (dec a) (* t a) ))))", "problem": 42, "user": "4dbf0cd2535d020aff1edf72"}, {"code": "(fn [n] (reduce * (rest (range (inc n)))))", "problem": 42, "user": "4e5d2dc5535d8a8b8723a2ca"}, {"code": "(fn [n]\r\n    (loop [cnt n acc 1]\r\n       (if (zero? cnt)\r\n            acc\r\n          (recur (dec cnt) (* acc cnt)))))", "problem": 42, "user": "4e50c894535dc968683fc4ee"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4e5f08c7535d8a8b8723a2da"}, {"code": "(fn [x]\n  ((fn [y a] (if (= y 1) a (recur (dec y) (* a y)))) x 1))", "problem": 42, "user": "4e4b911f535dc968683fc4d6"}, {"code": "(fn [n]\n  (reduce * (range 1 (+ n 1))))", "problem": 42, "user": "4e55ea0c535d8a8b8723a281"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e615cd2535d8ccf87e9fe58"}, {"code": "(fn fact [num]\n  (if (= 1 num)\n    1\n    (* num (fact (dec num)))))", "problem": 42, "user": "4e3bccb1535deb9a81d77f55"}, {"code": "(fn factorial- [n]\n  \"42. Write a function which calculates factorials.\"\n  (reduce * (range 1 (inc n))))", "problem": 42, "user": "4e5eb843535d8a8b8723a2d4"}, {"code": "(fn [x]\n  (loop [x x acc 1]\n    (if (= 0 x) acc\n        (recur (dec x) (* x acc)))))", "problem": 42, "user": "4e5ecd65535d8a8b8723a2d6"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e5a3891535d8a8b8723a2aa"}, {"code": "(fn *factorial                                                                                                                             \n  [n]                                                                                                                                        \n  (if (= 1 n)                                                                                                                                \n    1                                                                                                                                        \n    (* n (*factorial (- n 1)))))", "problem": 42, "user": "4e3bcccd535deb9a81d77f56"}, {"code": "(fn f [x] (if (= x 1) 1 (* (f (- x 1)) x)))", "problem": 42, "user": "4e634eb9535d8ccf87e9fe63"}, {"code": "(fn fact [x] (if (= x 1)\n              1\n              (* x (fact (dec x)))))", "problem": 42, "user": "4e3bcca9535deb9a81d77f54"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4e44358f535dc968683fc4a8"}, {"code": "(fn [n] (reduce * (range 1 (+ n 1))))", "problem": 42, "user": "4e5e9f6b535d8a8b8723a2d2"}, {"code": "#(reduce * % (range 1 %))", "problem": 42, "user": "4e6472b7535d8ccf87e9fe6c"}, {"code": "#(reduce * (range 1 (inc %1)))", "problem": 42, "user": "4e5bdc2b535d8a8b8723a2bb"}, {"code": "(fn f [x]\n  (if (= x 1)\n      1\n      (* x (f (- x 1)))))", "problem": 42, "user": "4e68dbd5535d8ccf87e9fe8f"}, {"code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "problem": 42, "user": "4e68c434535d8ccf87e9fe89"}, {"code": "(fn [n]\n  (loop [i n\n         acc 1]\n    (if (zero? i)\n      acc\n      (recur (dec i) (* acc i)))))", "problem": 42, "user": "4e68b46c535d8ccf87e9fe87"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4e6a5168535d8ccf87e9fec6"}, {"code": "{1 1 3 6 5 120 8 40320}", "problem": 42, "user": "4e6a412e535d8ccf87e9feb6"}, {"code": "#(apply * (range % 0 -1))", "problem": 42, "user": "4e5fe31a535d8ccf87e9fe50"}, {"code": "(fn fac [x]\n  (if (zero? x) \n    1\n    (* x (fac (dec x)))))", "problem": 42, "user": "4e6a60cd535d8ccf87e9fed7"}, {"code": "(fn [n] (apply * (range 1 (inc n))))", "problem": 42, "user": "4e6a2f51535d8ccf87e9fea9"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e6a48d5535d8ccf87e9febd"}, {"code": "(fn [limit]\n  (reduce \n    (fn [result x] (* result (inc x))) \n1\n(range limit)))", "problem": 42, "user": "4e6ab9cb535d8ccf87e9fefe"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e6b3fc8535d8ccf87e9ff0f"}, {"code": "(fn [x] (reduce * (range 2 (inc x))))", "problem": 42, "user": "4e6a97a9535d8ccf87e9fef8"}, {"code": "(fn [x] (reduce * (range 1 (inc x))))", "problem": 42, "user": "4df0524e535d08e6dec9fe17"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e6dd51b535d5021c1a895f6"}, {"code": "(fn [x] (reduce * (range 1 (+ 1 x))))", "problem": 42, "user": "4e6def42535d5021c1a895f7"}, {"code": "(fn myfac [n] \n    (if (> n 0) (* n (myfac (- n 1))) 1))", "problem": 42, "user": "4e6e6630535d5021c1a89609"}, {"code": "#((fn [n acc] (if (= n 0) acc (recur (dec n) (* n acc)))) %1 1)", "problem": 42, "user": "4e31a101535deb9a81d77f1d"}, {"code": "(fn [times] (reduce * (take times (iterate inc 1))))", "problem": 42, "user": "4e6dc95a535d5021c1a895f1"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e6dd0f5535d5021c1a895f3"}, {"code": "(fn[n] (reduce * (range 1 (+ 1 n))))", "problem": 42, "user": "4e6e10d8535d5021c1a895fd"}, {"code": "#(loop [n % acc 1]\n  (if (zero? n)\n    acc\n    (recur (dec n) (* n acc))))", "problem": 42, "user": "4e6e4127535d5021c1a89605"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e6e3a1e535d5021c1a89602"}, {"code": "(fn [n] (loop [x 1, r 1] (if (<= x n) (recur (inc x) (* r x)) r)))", "problem": 42, "user": "4e6df3c9535d5021c1a895fa"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4e6e3aac535d5021c1a89603"}, {"code": "#(reduce * (range 1 (+ 1 %)))", "problem": 42, "user": "4e6dc5f5535d5021c1a895f0"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4e223bd6535d04ed9115e81c"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4e6a6b83535d8ccf87e9fee0"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4e68be01535d8ccf87e9fe88"}, {"code": "#(apply * % (range 1 %))", "problem": 42, "user": "4e7115b3535d5021c1a89647"}, {"code": "(fn [x] (reduce #(* %1 %2) 1 (range 1 (inc x))))", "problem": 42, "user": "4e6a5f5c535d8ccf87e9fed6"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4e704293535d5021c1a89634"}, {"code": "(fn fac [n]\n  (reduce #(* %1 %2) (range 1 (+ 1 n)))\n)", "problem": 42, "user": "4e6a79ca535d8ccf87e9feeb"}, {"code": "(fn fac [x]\n  (reduce * (range 1 (inc x))))", "problem": 42, "user": "4e6a3985535d8ccf87e9feb1"}, {"code": "(fn fac [n]\n  (if (= n 1) n (* n (fac (dec n)))))", "problem": 42, "user": "4e6defcc535d5021c1a895f8"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e6a11ee535d8ccf87e9fe9f"}, {"code": "#(loop [acc 1, n %]\n  (if (= n 1)\n    acc\n    (recur (* acc n) (dec n))))", "problem": 42, "user": "4e6a2f93535d8ccf87e9feaa"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4e72ac47535d5021c1a89666"}, {"code": "(fn [x] (reduce * (range 1 (inc x))))", "problem": 42, "user": "4daedd1eedd6309eace4d164"}, {"code": "(fn [x] \n  ((fn fact [x acc]\n    (if (zero? x) acc\n      (recur (- x 1) (* acc x)))) x 1))", "problem": 42, "user": "4e6a4950535d8ccf87e9febf"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4e6f1b7a535d5021c1a89618"}, {"code": "(fn fact\n ([x] (fact x (dec x)))\n ([x i] (if (zero? i) x\n    (fact (* x i) (dec i)))))", "problem": 42, "user": "4e6a4edd535d8ccf87e9fec4"}, {"code": "#(reduce * (range 1 (+ % 1)))", "problem": 42, "user": "4e720985535d5021c1a89655"}, {"code": "(fn fact [n] (if (= n 1) 1 (* n (fact (dec n)))))", "problem": 42, "user": "4e71920f535d5021c1a8964e"}, {"code": "(fn fact [n]\n                  (if (zero? n) 1 (* n (fact (dec n)))))", "problem": 42, "user": "4e71705e535d5021c1a89649"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e6f8d36535d5021c1a89621"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4e71da4d535d5021c1a89653"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e6fa38b535d5021c1a89622"}, {"code": "(fn factorial [n]\n  (loop [acc 1, n n]\n    (if (< n 2)\n      acc\n      (recur (* acc n) (- n 1)))))", "problem": 42, "user": "4e691c79535d8ccf87e9fe97"}, {"code": "(fn [arg]\n  (loop [n 1 s 1]\n    (if (> n arg)\n      s\n      (recur (+ n 1) (* s n))\n      )\n    )\n  )", "problem": 42, "user": "4db7da66535d1e037afb2187"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4daf907aedd6309eace4d17b"}, {"code": "(fn factorial\n  ([n] (factorial n 1))\n  ([n accu]\n    (cond\n      (> n 0) (factorial (dec n) (* accu n))\n      :else accu)))", "problem": 42, "user": "4e75edfe535d7a570dd295c7"}, {"code": "(fn [n] (reduce #(* %1 %2) (range 1 (inc n))))", "problem": 42, "user": "4e739e13535dff18050a9c76"}, {"code": "(fn fact [n]\n  (if (< n 2) 1 (* n (fact (dec n)))))", "problem": 42, "user": "4e40529b535dc968683fc49a"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e773be8535d324fb2983d6e"}, {"code": "(fn [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "4db88b37535d1e037afb2199"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4e79a143535db169f9c796a2"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e707db6535d5021c1a8963a"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e7a5395535db169f9c796ab"}, {"code": "(fn f [n] (if (= n 1) 1 (* n (f (dec n)))))", "problem": 42, "user": "4e6a4038535d8ccf87e9feb5"}, {"code": "(fn [n]\n        (loop [res 1 i n]\n    (if (zero? i)\n\t      res\n\t      (recur (* res i) (dec i)))))", "problem": 42, "user": "4e68fad4535d8ccf87e9fe93"}, {"code": "(fn[x] (loop [f 1 i 1] (if (> i x) f (recur (* f i) (inc i)))))", "problem": 42, "user": "4e7bc07c535db169f9c796b9"}, {"code": "#(loop [current % result 1]\n   (if (= 0 current)\n       result\n       (recur (dec current) (* result current))))", "problem": 42, "user": "4e7c8fd1535db169f9c796be"}, {"code": "#(reduce * (range 1 (inc %)))\n\n;; hmm, I think apply is better in this case, #(apply * (range 1 (inc %)))", "problem": 42, "user": "4e5a460f535d8a8b8723a2ab"}, {"code": "(fn fact\n  ([input] (fact input 1))\n  ([input result]\n    (if (= input 0)\n      result\n      (fact (dec input) (* input result)))))", "problem": 42, "user": "4e5d1912535d8a8b8723a2c9"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4e7db3b4535db169f9c796e1"}, {"code": "#(apply * % (range 2 %))", "problem": 42, "user": "4e7dd982535db169f9c796ee"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e7c4290535db169f9c796bc"}, {"code": "(fn n! [x] \n  (apply * \n         (rest (range 1 \n                      (+ x 1)))))", "problem": 42, "user": "4e77c1db535d324fb2983d72"}, {"code": "(fn fac  [x] \n    (if (> x 1)\n      (* x (fac (- x 1)))\n      1\n)\n    )", "problem": 42, "user": "4e78c208535db95036265722"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e7dfab0535db169f9c796f9"}, {"code": "(fn [x]\n  (reduce * (range 1 (+ x 1))))", "problem": 42, "user": "4e7d4544535db169f9c796d0"}, {"code": "(fn f [n] (if (<= n 1) 1 (* n (f (dec n)))))", "problem": 42, "user": "4e7e55ab535db169f9c79711"}, {"code": "#(apply *(range 1(inc%)))", "problem": 42, "user": "4e7eff9e535db966e863cc38"}, {"code": "#(apply * (take % (iterate inc 1)))", "problem": 42, "user": "4e7e33a3535db169f9c79708"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e7f4147535db966e863cc3d"}, {"code": "(fn [x] (reduce * (range 1 (+ 1 x))))", "problem": 42, "user": "4e78dc98535db95036265724"}, {"code": "(fn reduce-fact [x]\n  (reduce (fn [a b] (* a b)) 1 (range 1 (inc x))))", "problem": 42, "user": "4e7f51eb535db966e863cc3f"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4e7e93f5535db169f9c7971a"}, {"code": "(fn [n] (reduce * 1 (range 1 (+ n 1))))", "problem": 42, "user": "4e7f7e48535db966e863cc42"}, {"code": "(fn factorial [x]\n  (if (= x 1)\n    1\n    (* x (factorial (dec x)))))", "problem": 42, "user": "4e726914535d5021c1a89661"}, {"code": "(fn [fac]\n  (reduce * (range 1 (inc fac)))  \n)", "problem": 42, "user": "4e7e05a6535db169f9c796fe"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4db858d1535d1e037afb218c"}, {"code": "(fn myfac [i]\n  (if (= 1 i)\n        1\n        (* i (myfac (dec i)))))", "problem": 42, "user": "4e7ada51535db169f9c796ae"}, {"code": "(fn [x]\n  (loop [start x\n         result 1]\n         (if (> start 0)\n            (recur (dec start) (* start result))\n            result)))", "problem": 42, "user": "4e7e241a535db169f9c79705"}, {"code": "(fn [x]\n  (loop [x x ret 1]\n    (if (= 1 x)\n      ret\n      (recur (dec x) (* x ret)))))", "problem": 42, "user": "4e80aa10535db62dc21a62b1"}, {"code": "#(loop [cnt % acc 1]  (if (zero? cnt) acc (recur (dec cnt) (* acc cnt))))", "problem": 42, "user": "4e6799cc535d8ccf87e9fe7f"}, {"code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "problem": 42, "user": "4e80d71b535db62dc21a62b7"}, {"code": "#(apply * (range 1 (+ % 1)))", "problem": 42, "user": "4e794004535db169f9c796a1"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e5867d1535d8a8b8723a291"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e6ea1f5535d5021c1a8960e"}, {"code": "(fn fac [x]\n   (loop [i x, r 1]\n     (if (> i 0)\n       (recur (dec i) (* r i))\n       r)))", "problem": 42, "user": "4e7dcdb5535db169f9c796e9"}, {"code": "#(apply * (range 1 (+ % 1)))", "problem": 42, "user": "4e823f41535db62dc21a62c8"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e7e4d5c535db169f9c7970f"}, {"code": "#(apply * (map inc (range %)))", "problem": 42, "user": "4e6ebd4a535d5021c1a89610"}, {"code": "(fn [n]\r\n    (loop [index n total 1]\r\n\t   (if (= index 0)\r\n\t       total\r\n\t       (recur (dec index) (* index total)))))", "problem": 42, "user": "4e821ca5535db62dc21a62c2"}, {"code": "#(apply * (range 2 (inc %)))", "problem": 42, "user": "4e837808535db62dc21a62d9"}, {"code": "#(apply * (range 2 (inc %1)))", "problem": 42, "user": "4e010277535d04ed9115e78f"}, {"code": "#(apply * % (range 1 %))", "problem": 42, "user": "4e823ed7535db62dc21a62c7"}, {"code": "(fn myfact [x] (if (> x 1) (* (myfact (dec x)) x) x))", "problem": 42, "user": "4e836a16535db62dc21a62d6"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4db1f7d223724b71670a9c07"}, {"code": "(fn f [n]\n  (if (= n 0)\n      1\n      (* n (f (dec n)))))", "problem": 42, "user": "4e73a9dc535dff18050a9c77"}, {"code": "(fn [x] (reduce * (take x (iterate inc 1))))", "problem": 42, "user": "4e7f32ee535db966e863cc3a"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e8612f8535db62dc21a62f2"}, {"code": "(fn f [x] (if (<= x 1) x (* x (f (dec x)))))", "problem": 42, "user": "4e8681b7535dae1a5effa438"}, {"code": "(fn [x] (apply * (range 1 (inc x))))", "problem": 42, "user": "4db8ec47535d1e037afb219d"}, {"code": "#(reduce * (range 1 (+ 1 %)))", "problem": 42, "user": "4e860e85535db62dc21a62f1"}, {"code": "(fn f [x] (if (> x 1) \n  (* x (f (dec x)))\n  1))", "problem": 42, "user": "4e86a443535dc036d0eaab83"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4e8510e7535db62dc21a62e7"}, {"code": "#(reduce * (rest (range (inc %))))", "problem": 42, "user": "4e1fe800535d04ed9115e811"}, {"code": "(fn f[n]\n    (loop [i 1 m n]\n\t     (if (= m 1)\n\t\t i\n\t\t (recur (* i m) (dec m)))))", "problem": 42, "user": "4e842ebb535db62dc21a62df"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e80e0f2535db62dc21a62b8"}, {"code": "(fn fac [x] \n  (if (= x 1) \n      1\n      (* x (fac (dec x)))))", "problem": 42, "user": "4e7263a1535d5021c1a8965f"}, {"code": "(fn [n] (apply * (range 1 (+ n 1))))", "problem": 42, "user": "4e8944b6535d4ef0aa30db98"}, {"code": "#(reduce * (range 2 (inc %)))", "problem": 42, "user": "4e894068535d4ef0aa30db97"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4dfe65a1535d04ed9115e787"}, {"code": "(fn [n]\n  (loop [accu 1\n   n n]\n    (if (< n 2)\n      accu\n      (recur (* accu n) (- n 1)))))", "problem": 42, "user": "4e82c062535db62dc21a62cc"}, {"code": "(fn [x] (loop [result 1\n               i      x]\n               (if (= 0 i)\n                   result\n                   (recur (* i result) (dec i)))))", "problem": 42, "user": "4daf36c2edd6309eace4d175"}, {"code": "(fn [x]\n  (reduce * (reverse (range 1 (inc x)))))", "problem": 42, "user": "4e6a4954535d8ccf87e9fec0"}, {"code": "(fn [n] (reduce * (rest (range (+ 1 n)))))", "problem": 42, "user": "4e89de60535d3e98b8023285"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e897fc5535de4250bdfe493"}, {"code": "(fn fact [x]\n  (if (= x 1) 1 (* x (fact (dec x)))))", "problem": 42, "user": "4e89f46c535d3e98b8023288"}, {"code": "#(loop [cnt % acc 1]\n     (if (or (zero? cnt) (== 1 cnt)) acc\n         (recur (dec cnt) (* acc cnt))))", "problem": 42, "user": "4e89e939535d3e98b8023287"}, {"code": "#(loop [counter 1 result 1] (if (= counter %) (* result counter) (recur (inc counter) (* result counter))))", "problem": 42, "user": "4e8aef69535d65386fec2114"}, {"code": "(fn fact [x]\n  (if (< x 2)\n    1\n    (* x (fact (dec x)))))", "problem": 42, "user": "4e8a0c82535d3e98b802328d"}, {"code": "#(reduce * (take % (iterate inc 1)))", "problem": 42, "user": "4e8c1d97535d65386fec2127"}, {"code": "#(apply * (range 2 (inc %)))", "problem": 42, "user": "4e89f9e5535d3e98b8023289"}, {"code": "(fn f42 [x]\n  (if (<= x 2)\n    x\n    (* x (f42 (dec x)))))", "problem": 42, "user": "4e88feef535d8b9bb0147ca8"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4dcfbc44535d5973398f92a7"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e6a61d8535d8ccf87e9fed8"}, {"code": "(fn [n]\n    (nth\n      ((fn lzfact [a b]\n        (cons a (lazy-seq (lzfact (* a b) (inc b)))))\n      1 1)\n      n))", "problem": 42, "user": "4e8e8c24535d65386fec2143"}, {"code": "(fn fact [x]\n  (if (= x 0)\n    1\n    (* x (fact (- x 1)))))", "problem": 42, "user": "4e84f77c535db62dc21a62e5"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e8b557c535d65386fec2119"}, {"code": "(fn fact [n] (if (= n 1) 1 (* n (fact (dec n)))))", "problem": 42, "user": "4e83844a535db62dc21a62da"}, {"code": "(fn fac [n]\n  (if (< n 1)\n    1\n    (* n (fac (- n 1)))))", "problem": 42, "user": "4e8f5eba535d65386fec214c"}, {"code": "(comp (partial reduce *) (partial range 1) inc)", "problem": 42, "user": "4dc0ff08535d020aff1edf84"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4db016af838c48654951d9b9"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4e6f8431535d5021c1a8961e"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e79ff2a535db169f9c796a9"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4dfd018c535d04ed9115e77f"}, {"code": "#(reduce * (take % (iterate dec %)))", "problem": 42, "user": "4e89ddf9535d3e98b8023284"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4e8df08f535d65386fec213e"}, {"code": "(fn [x]\n  (if (= 0 x)\n\t    1\n\t    (reduce #(* %1 %2) 1 (range 1 (inc x)))))", "problem": 42, "user": "4e8dc25f535d65386fec213a"}, {"code": "(fn fact [n]\n  (if-not (= n 1) (* n (fact (- n 1))) 1))", "problem": 42, "user": "4e8dbab3535d65386fec2139"}, {"code": "(fn fact [n]\n  (if (= n 1)\n    1\n    (* n (fact (dec n)))))", "problem": 42, "user": "4e8f4f64535d65386fec2149"}, {"code": "(fn f [x]\n  (if (> x 1)\n    (* (f (- x 1)) x)\n    1\n  )\n)", "problem": 42, "user": "4e8b98fc535d65386fec2124"}, {"code": "#(reduce * (range 1 (+ % 1)))", "problem": 42, "user": "4e8a460e535d65386fec2109"}, {"code": "#(reduce * (range 1 (+ 1 %)))", "problem": 42, "user": "4e8b73e4535d65386fec2120"}, {"code": "(fn f [a] (if (= a 1) 1 (* a (f (- a 1)))))", "problem": 42, "user": "4e7e0bdc535db169f9c796ff"}, {"code": "(fn [n]\n  (letfn [(factorial [x]\n  (if (= x 1)\n      1\n      (* x (factorial (dec x)))))]\n   (factorial n)))", "problem": 42, "user": "4e6a73d0535d8ccf87e9fee7"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4db92654535d1e037afb21a0"}, {"code": "(fn [x] (reduce * (range 1 (+ x 1 ))))", "problem": 42, "user": "4e8d5edd535d65386fec2134"}, {"code": "(fn [n]\n    (loop [i 1 f 1]\n    (if (= i n)\n\t      f\n\t    (recur (inc i) (* (+ i 1) f)))))", "problem": 42, "user": "4e7d2448535db169f9c796c8"}, {"code": "(fn [x] \n  (loop [result 1 base x]\n    (if (= base 0)\n      result\n      (recur (* result base) (dec base)))))", "problem": 42, "user": "4e697e41535d8ccf87e9fe9c"}, {"code": "(fn [x] (reduce * (range 1 (+ x 1))))", "problem": 42, "user": "4e8d5911535d65386fec2133"}, {"code": "(fn [x]\r\n           (loop [cou 1 acc 1]\r\n             (cond \r\n               (> cou x) acc\r\n               :else (recur (inc cou) (* acc cou)))))", "problem": 42, "user": "4e920f44535dbda64a6f6afd"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e781a2e535d324fb2983d74"}, {"code": "(fn [n]\n  (loop [i 1 coll 1]\n    (if (== i n)\n      (* i coll)\n      (recur (inc i) (* i coll)))))", "problem": 42, "user": "4e955b95535dbda64a6f6b33"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e9660ec535dbda64a6f6b44"}, {"code": "#(reduce * (range 2 (inc %)))", "problem": 42, "user": "4e951ce5535dbda64a6f6b2e"}, {"code": "#(apply * (take % (iterate inc 1)))", "problem": 42, "user": "4e96557d535dbda64a6f6b43"}, {"code": "(fn [x] (reduce * 1 (range 1 (inc x))))", "problem": 42, "user": "4e976f79535dbda64a6f6b55"}, {"code": "(fn [x]\n    (apply * (range 2 (inc x))))", "problem": 42, "user": "4e8b6f4d535d65386fec211e"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4e8f1ac6535d65386fec2146"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e8ad1d2535d65386fec2110"}, {"code": "#(apply * % (range 2 %))", "problem": 42, "user": "4db85bdd535d1e037afb218d"}, {"code": "#(* (apply * (range 1 %)) %)", "problem": 42, "user": "4e9609ad535dbda64a6f6b3e"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e994541535dbda64a6f6b64"}, {"code": "#(* (reduce * (rest (range %))) %)", "problem": 42, "user": "4e8d86d5535d65386fec2136"}, {"code": "#(apply * (range 2 (inc %)))", "problem": 42, "user": "4db13ff51254ad5b4805fa68"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e9b230c535dbda64a6f6b75"}, {"code": "(fn fact \n  ([val] (fact val 1))\n  ([val accum] \n    (if (= val 1)\n      accum\n      (fact (dec val) (* val accum)))))", "problem": 42, "user": "4e98a6d0535dbda64a6f6b5e"}, {"code": "#(apply * (map inc (range %)))", "problem": 42, "user": "4e94a8b5535dbda64a6f6b16"}, {"code": "#(apply * (rest (range (+ 1 %))))", "problem": 42, "user": "4e9b22e2535dbda64a6f6b74"}, {"code": "(fn a [x] (if (> x 0) (* x (a (dec x))) 1))", "problem": 42, "user": "4e85cda3535db62dc21a62f0"}, {"code": "(fn [x] (loop [mx x c 1] (if (= mx 0) c (recur (dec mx) (* mx c)))))", "problem": 42, "user": "4e9629c2535dbda64a6f6b3f"}, {"code": "#(apply * (range 1 (+ % 1)))", "problem": 42, "user": "4e7f3891535db966e863cc3b"}, {"code": "#(reduce * 1 (range 1 (inc %)))", "problem": 42, "user": "4e951f44535dbda64a6f6b30"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4e81e29b535db62dc21a62bd"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e9dafe1535dbda64a6f6b89"}, {"code": "(fn factorial [n] \n           (loop [n_i n acc 1]\n             (if\n               (= n_i 0)\n               acc\n               (recur (dec n_i) (* acc n_i))\n               )\n             )\n           )", "problem": 42, "user": "4e9de526535dbda64a6f6b8e"}, {"code": "#(reduce * (rest (range (inc %))))", "problem": 42, "user": "4e975bce535dbda64a6f6b53"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e9e0640535dbda64a6f6b91"}, {"code": "(fn [n]\n  (loop [acc 1 i n]\n    (if (zero? i)\n      acc\n      (recur (* acc i) (dec i)))))", "problem": 42, "user": "4e9fd521535d7eef3080729a"}, {"code": "#(apply * (loop [n % l '()] (if-not (= n 0) (recur (dec n) (conj l n)) l)))", "problem": 42, "user": "4e9e7ce3535dbda64a6f6b98"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4e9e6bd6535dbda64a6f6b96"}, {"code": "#(loop \n  [x 1 result 1] \n    (if (> x %) result (recur (inc x) (* x result))))", "problem": 42, "user": "4e9ff8d0535d7eef3080729c"}, {"code": "(fn ! [n]\n  (if (= n 1)\n    1\n    (* n (! (dec n)))))", "problem": 42, "user": "4e9528ef535dbda64a6f6b32"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4e8516d0535db62dc21a62e8"}, {"code": "(fn fact [n]\n  (cond (= n 1) 1\n        true (* n (fact (- n 1)))))", "problem": 42, "user": "4ea01955535d7eef3080729f"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4ea09fa4535d7eef308072aa"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4daee8e9edd6309eace4d166"}, {"code": "(fn [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "4ea092f4535d7eef308072a6"}, {"code": "#(reduce * 1 (range 1 (inc %)))", "problem": 42, "user": "4ea1b9e4535d7eef308072b8"}, {"code": "(fn [n]\n    (apply * (for [i (range 1 (inc n))] i)))", "problem": 42, "user": "4e59b02c535d8a8b8723a2a2"}, {"code": "(fn fact [n]\n  (condp = n\n    0 1\n    1 1\n    (* n (fact (- n 1)))))", "problem": 42, "user": "4e9e12b2535dbda64a6f6b92"}, {"code": "(fn [x] \r\n(loop [a x b 1]\r\n(if (zero? a) b \r\n(recur (dec a) (* a b)))))", "problem": 42, "user": "4ea09441535d7eef308072a7"}, {"code": "(fn [n]\n  (reduce * 1 (take n (iterate #(+ 1 %) 1))))", "problem": 42, "user": "4ea348ad535d7eef308072c4"}, {"code": "#(apply * (range 1 (+ 1 %)))", "problem": 42, "user": "4ea2ddf1535d7eef308072bf"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4dbd2aa3535d020aff1edf40"}, {"code": "(fn [number]\n  (apply * (range 1 (inc number)))\n)", "problem": 42, "user": "4e8a6bb0535d65386fec210b"}, {"code": "(fn [n]\r\n  (apply * (range 1 (inc n))))", "problem": 42, "user": "4e8ddf32535d65386fec213c"}, {"code": "(fn [n] (reduce #(* %1 %2) 1 (drop 1 (range (inc n)))))", "problem": 42, "user": "4e9c81e8535dbda64a6f6b80"}, {"code": "(fn [n] \n  (loop [ctr n, acc 1]\n    (if (= 1 ctr)\n      acc\n      (recur (dec ctr) (* acc ctr)))))", "problem": 42, "user": "4ea4fe1f535d7eef308072cf"}, {"code": "(fn fac [x] (if (> x 1)\n                    (* x (fac (dec x)))\n                    1))", "problem": 42, "user": "4e967c4a535dbda64a6f6b47"}, {"code": "#(reduce (fn [a b] (* a b)) 1 (range 1 (inc %)))", "problem": 42, "user": "4ea41fc2535d7eef308072cb"}, {"code": "#(reduce * (range 1 (+ 1 %)))", "problem": 42, "user": "4ea0cfb0535d7eef308072ae"}, {"code": "(fn [n]\n  (loop [r 1 n n]\n    (if (zero? n)\n      r\n      (recur (* r n) (dec n)))))", "problem": 42, "user": "4ea67906535d7eef308072e4"}, {"code": "#(reduce * (take % (iterate dec %)))", "problem": 42, "user": "4ea629da535d7eef308072e2"}, {"code": "#(reduce * (range 1 (inc %1)))", "problem": 42, "user": "4ea5e794535d7eef308072df"}, {"code": "#(reduce * (range 2 (+ 1 %)))", "problem": 42, "user": "4e7650c5535d324fb2983d68"}, {"code": "(fn[i] (reduce * (range 2 (+ 1 i))))", "problem": 42, "user": "4e8a0d5d535d3e98b802328e"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4ea57300535d7eef308072d5"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4dad76588e77d6ed63f12a44"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4e9d6a65535dbda64a6f6b87"}, {"code": "(fn myfac [x]\n  (if (= x 1)\n    1\n    (* x (myfac (dec x)))\n  )\n)", "problem": 42, "user": "4e932f38535dbda64a6f6b0c"}, {"code": "(fn fac[x]\r\n  (loop [result 1 cnt x]\r\n    (if (> cnt 0)\r\n      (recur (* result cnt)(dec cnt))\r\n      result\r\n      )))", "problem": 42, "user": "4e9def6b535dbda64a6f6b8f"}, {"code": "(fn [x] (apply * (take x (iterate inc 1))))", "problem": 42, "user": "4e86d3cf535dceadca46984c"}, {"code": "(fn [x]\r\n         (loop [i x sum 1]\r\n          (if (zero? i)\r\n            sum\r\n            (recur (dec i) (* i sum)))))", "problem": 42, "user": "4e9fde3c535d7eef3080729b"}, {"code": "(fn [x] (reduce * (range 1 (inc x))))", "problem": 42, "user": "4dbb0f2d535d1e037afb21b1"}, {"code": "(fn fact [x]\n  (if (> x 1)\n    (* x (fact (dec x)))\n    1\n    )\n  )", "problem": 42, "user": "4eaa96e1535d7eef3080730d"}, {"code": "#(loop [cnt % acc 1]\n       (if (zero? cnt)\n            acc\n          (recur (dec cnt) (* acc cnt))))", "problem": 42, "user": "4ea85846535d7eef308072f9"}, {"code": "#(loop [cnt % ans 1] (if (= cnt 1) ans\n(recur (dec cnt) (* ans cnt))))", "problem": 42, "user": "4ea9b80c535d7eef30807306"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4ea1ecfa535d7eef308072bb"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4eab612d535d7eef30807316"}, {"code": "(fn fac[x] (if (= x 1) 1 (* x (fac (dec x)))))", "problem": 42, "user": "4ea365e2535d7eef308072c5"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4ead6418535d7eef3080731f"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4eae5fe4535d7eef30807325"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4eaf08ce535d7eef3080732d"}, {"code": "#(reduce *(range 1(+ 1%)))", "problem": 42, "user": "4eb07be3535d7eef3080733b"}, {"code": "(fn [n]\n  (loop [cnt n acc 1]\n    (if (zero? cnt)\n      acc\n      (recur (dec cnt) (* acc cnt)))))", "problem": 42, "user": "4ea68edb535d7eef308072e6"}, {"code": "(fn fac [x] (if (= x 1) 1 (* x (fac (- x 1)))))", "problem": 42, "user": "4eb0a757535d7eef3080733d"}, {"code": "#(apply * (range 1 (+ 1 %)))", "problem": 42, "user": "4eaede1f535d7eef30807329"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e949d18535dbda64a6f6b15"}, {"code": "(fn pow [x]\n  (if (= x 1)\n    1\n    (* x (pow (- x 1)))))", "problem": 42, "user": "4eb0afed535d7eef3080733e"}, {"code": "(fn recfac [n]\n  (if (= n 1)\n  1\n  (* n (recfac (dec n)))))", "problem": 42, "user": "4ea7999e535d7eef308072ee"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4e7dfd48535db169f9c796fa"}, {"code": "(fn [n]\n  (reduce (fn [a b] (* a b)) (range 1 (+ n 1))))", "problem": 42, "user": "4eb1dd39535d7eef30807345"}, {"code": "(fn [i]\n  (loop [i i ret 1]\n    (if (> i 1)\n(recur (dec i) (* ret i))\nret)))", "problem": 42, "user": "4eb27fad535d7eef3080734a"}, {"code": "#(reduce * (take % (iterate inc 1)))", "problem": 42, "user": "4eb2e6ca535d7eef3080734f"}, {"code": "(fn [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "4e47f4f3535dc968683fc4bb"}, {"code": "#(loop [n % a 1] (if (= n 1) a (recur (dec n) (* n a))))", "problem": 42, "user": "4eb5750a535d7eef30807366"}, {"code": "(fn f1\n  [x]\n  (if (< x 2) \n    1\n    (* x (f1 (dec x)))))", "problem": 42, "user": "4ea95e56535d7eef30807302"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4eb66737535d7eef3080736b"}, {"code": "(fn fact [i] (cond (= 0 i) 1\n            (= 1 i) 1\n            (= 2 i) 2\n            :else (* (fact (- i 1)) i)))", "problem": 42, "user": "4eb44d78535d7eef30807360"}, {"code": "(fn fact [n] \n  (cond (or (= 0 n) (= 1 n)) 1\n        :else (* n (fact (- n 1)))))", "problem": 42, "user": "4e051b04535d04ed9115e7a4"}, {"code": "#(reduce * (range 1 (+ 1 %)))", "problem": 42, "user": "4eb01df4535d7eef30807337"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e8b73f1535d65386fec2121"}, {"code": "(fn [n]\r\n   (apply * (range 1 (inc n))))", "problem": 42, "user": "4eb80ce6535d7eef3080737d"}, {"code": "(fn teste [x]\n  (if (< x 2) 1\n    (* x (teste (- x 1)))\n  )\n)", "problem": 42, "user": "4ea3f035535d7eef308072ca"}, {"code": "#(reduce * % (range 1 %))", "problem": 42, "user": "4ea76541535d7eef308072eb"}, {"code": "(fn [no]\n  (loop [cnt no acc 1]\n    (if (zero? cnt) acc\n    (recur (dec cnt) (* acc cnt)))))", "problem": 42, "user": "4eb404ba535d7eef3080735a"}, {"code": "(fn rec [x]\n  (if(<= x 1) 1\n     (* x(rec(dec x)))))", "problem": 42, "user": "4e9dd9ab535dbda64a6f6b8d"}, {"code": "#(reduce * (map inc (range %1)))", "problem": 42, "user": "4eabb245535d7eef30807319"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4ea55757535d7eef308072d3"}, {"code": "#(apply * (range 1 (+ 1 %)))", "problem": 42, "user": "4eb2d0ae535d7eef3080734e"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4eb97b2e535dfed6da9c6d54"}, {"code": "(fn [n] (reduce #(* %1 %2) (map inc (range n))))", "problem": 42, "user": "4e9519b4535dbda64a6f6b2d"}, {"code": "#(apply * (take % (iterate inc 1)))", "problem": 42, "user": "4eb97234535dfed6da9c6d53"}, {"code": "(fn fatorial [x]\n  (loop [x x acc 1]\n    (prn x acc)\n    (if(< x 2)\n      acc\n        (recur(dec x) (* acc x))\n    )\n  )\n)", "problem": 42, "user": "4e94aab8535dbda64a6f6b1f"}, {"code": "(fn fatorial[x]\r\n  (if(< x 2)\r\n    1\r\n  (* x (fatorial (- x 1)))\r\n  )\r\n)", "problem": 42, "user": "4eb7ff08535d7eef30807379"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4e6e2ac4535d5021c1a895ff"}, {"code": "(fn[x](loop [ cnt x acc 1]\n        (if(zero? cnt)\n            acc\n            (recur (dec cnt)(* acc cnt)))))", "problem": 42, "user": "4e8e21fc535d65386fec2141"}, {"code": "(fn ! [i]\n  (if (= 1 i) 1\n    (* i (! (dec i)))))", "problem": 42, "user": "4eb9c82d535dfed6da9c6d5c"}, {"code": "#(apply * (range % 1 -1))", "problem": 42, "user": "4ebb78a2535dfed6da9c6d70"}, {"code": "(fn f [v]\n  (if (= v 1) 1 (* v (f (dec v)))))", "problem": 42, "user": "4eac5bc1535d7eef3080731b"}, {"code": "(fn fac [x] (if (= x 1) 1 (* x (fac (dec x)))))", "problem": 42, "user": "4eb2eae5535d7eef30807351"}, {"code": "#(nth (map (fn [n] (reduce * (range 1 (inc n)))) (range)) %)", "problem": 42, "user": "4e58c019535d8a8b8723a297"}, {"code": "(fn [x]\n  (reduce * (range 1 (inc x))))", "problem": 42, "user": "4ebc08a8535dfed6da9c6d7c"}, {"code": "(fn [n]\n  (reduce * 1 (range 1 (inc n))))", "problem": 42, "user": "4dbdc9da535d020aff1edf4c"}, {"code": "#(apply * (range 1 (+ 1 %)))", "problem": 42, "user": "4e82f85d535db62dc21a62ce"}, {"code": "#(loop [num % prod 1]\n  (if (= 1 num)\n    prod\n    (recur (dec num)(* prod num))))", "problem": 42, "user": "4ebc0f84535dfed6da9c6d7e"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4eb25069535d7eef30807348"}, {"code": "#(apply * % (range 1 %))", "problem": 42, "user": "4e1350af535d04ed9115e7d8"}, {"code": "(fn [x]\n  (reduce * (range 1 (inc x))))", "problem": 42, "user": "4dadb891c9a9d6ed3699dc57"}, {"code": "#(->> % (range) (map inc) (apply *))", "problem": 42, "user": "4ebf45c3535dfed6da9c6d9d"}, {"code": "(fn [n]\n  (apply * (range 1 (inc n))))", "problem": 42, "user": "4e924a69535dbda64a6f6b01"}, {"code": "#(reduce * (take % (iterate dec %)))", "problem": 42, "user": "4e9c4e02535dbda64a6f6b7e"}, {"code": "#(apply * % (range 2 %))", "problem": 42, "user": "4ec0c7ba535dfed6da9c6da4"}, {"code": "(fn x[a] (if (= a 0) 1 (* a (x (dec a)))))", "problem": 42, "user": "4ea0c284535d7eef308072ad"}, {"code": "(fn fac [n]\n  (if (zero? n)\n    1\n    (* n (fac (- n 1)))))", "problem": 42, "user": "4ec12577535dfed6da9c6da8"}, {"code": "(fn [n]\n  (loop [ret n k (dec n)]\n    (if (= 0 k) ret (recur (* ret k) (dec k)))))", "problem": 42, "user": "4ec132a0535dfed6da9c6da9"}, {"code": "(fn [n]  (reduce * (map inc (range n))))", "problem": 42, "user": "4ebd4448535dfed6da9c6d8f"}, {"code": "#(apply * (range 1 (inc %1)))", "problem": 42, "user": "4ebb20c0535dfed6da9c6d6f"}, {"code": "#(apply * % (range 1 %))", "problem": 42, "user": "4ec16c21535dfed6da9c6dac"}, {"code": "(fn factorial [x]\n  (condp = x\n    1 1\n    (* x (factorial (dec x)))))", "problem": 42, "user": "4ec2fe3f535dcc7ae8597d4f"}, {"code": "(fn [n]\n  (apply * (take n (iterate inc 1))))", "problem": 42, "user": "4ec21058535dfed6da9c6dba"}, {"code": "(fn [n] (apply * (range 1 (+ n 1))))", "problem": 42, "user": "4ec34578535dcc7ae8597d51"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4ebe766d535dfed6da9c6d94"}, {"code": "(fn factorial [x] (let [count-down (fn count-down [c] (when (> c 0) (lazy-seq (cons c (count-down (dec c)))))), num-list (count-down x)] (reduce (fn [a b] (* a b)) num-list)))", "problem": 42, "user": "4ec12516535dfed6da9c6da7"}, {"code": "(fn my-factorial [n]\n    (if (= n 1) \n        n\n        (* n (my-factorial (- n 1)))\n    )\n)", "problem": 42, "user": "4ec17677535dfed6da9c6dad"}, {"code": "#(loop [i % r %] \n  (if (= i 1) \n    r\n    (recur (dec i) (* r (dec i)))))", "problem": 42, "user": "4dadc6f2c9a9d6ed4099dc57"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4dbf7a31535d020aff1edf75"}, {"code": "(fn [n]\n    (loop [cnt n acc 1]\n       (if (zero? cnt)\n            acc\n\t          (recur (dec cnt) (* acc cnt)))))", "problem": 42, "user": "4ec5bec6535d6d7199dd36b3"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4ec5d40d535d6d7199dd36b9"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4ec6157b535d6d7199dd36c2"}, {"code": "#((fn [x y] (if (= x 0) y (recur (dec x) (* x y)))) % 1)", "problem": 42, "user": "4ec6688d535d6d7199dd36cc"}, {"code": "(fn [n] (loop [n n ret 1] (if (zero? n) ret (recur (dec n) (* n ret)))))", "problem": 42, "user": "4ec2f192535dcc7ae8597d4c"}, {"code": "(fn [num]\n  (reduce * (range 1 (inc num))))", "problem": 42, "user": "4ec42c11535dcc7ae8597d5f"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4eb51942535d7eef30807365"}, {"code": "(fn [N]\n  (loop [n N total 1]\n    (if (zero? n)\n      total\n      (recur (dec n) (* n total)))))", "problem": 42, "user": "4e117dea535d04ed9115e7c9"}, {"code": "(fn [i]\n  (loop [this i fact 1]\n      (if (<= this 1)\n        fact\n        (recur (- this 1) (* fact this)))))", "problem": 42, "user": "4e951f2c535dbda64a6f6b2f"}, {"code": "(fn fact [x]\n  (if (= x 0)\n    1\n    (* x (fact (- x 1)))))", "problem": 42, "user": "4ec07699535dfed6da9c6da2"}, {"code": "#(apply * % (range 2 %))", "problem": 42, "user": "4ec812d9535d6d7199dd36f0"}, {"code": "(fn [x] (reduce #(* %1 %2) 1 (range 1 (inc x))))", "problem": 42, "user": "4e0d5a5a535d04ed9115e7b5"}, {"code": "(fn [x] (apply * (range 1 (+ x 1))))", "problem": 42, "user": "4ec2f1d9535dcc7ae8597d4d"}, {"code": "(fn fact [i] (if (= i 1) \n  1\n  (* i (fact (- i 1)))))", "problem": 42, "user": "4dbecb06535d020aff1edf6a"}, {"code": "(fn myfac [n]\n  (if (= n 1)\n    1\n    (* n (myfac (dec n)))))", "problem": 42, "user": "4ecaf637535d6d7199dd370c"}, {"code": "(fn fact [n] (if (< n 3)\n  n\n  (* n (fact (dec n)))))", "problem": 42, "user": "4ec4ac86535dcc7ae8597d64"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4ec28d86535dfed6da9c6dbc"}, {"code": "#(apply * (range 1 (+ 1 %)))", "problem": 42, "user": "4ecab3b7535d6d7199dd3709"}, {"code": "#(loop [n % acc 1] \n  (if (= n 0) acc (recur (dec n) (* acc n))))", "problem": 42, "user": "4e25176e535d04ed9115e829"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4ec74de3535d6d7199dd36df"}, {"code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "problem": 42, "user": "4e52777f535d302ef430da76"}, {"code": "(fn [n] \n  (reduce *\n    (range 1 (inc n))))", "problem": 42, "user": "4e6f578c535d5021c1a8961b"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4ec3c4a0535dcc7ae8597d5a"}, {"code": "(fn [n]\n  (loop [i n\n         acc 1]\n    (if (= i 1)\n      acc\n      (recur (- i 1) (* i acc)))))", "problem": 42, "user": "4eaa47bc535d7eef30807309"}, {"code": "(fn [l] (reduce * (take l (iterate inc 1))))", "problem": 42, "user": "4ebef65e535dfed6da9c6d9b"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4ec70f26535d6d7199dd36dd"}, {"code": "#(reduce * (range % 0 -1))", "problem": 42, "user": "4ecb1641535d6d7199dd370e"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e9a8c0e535dbda64a6f6b72"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4ecf42b4535d1f5ad70dba3c"}, {"code": "#(loop [x % r 1] (if (= x 1) r (recur (dec x) (* r x))))", "problem": 42, "user": "4eb13d60535d7eef3080733f"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4ecbb249535df97575fdabdf"}, {"code": "#(apply * (range 1 (+ 1 %)))", "problem": 42, "user": "4ecfb458535d44c135fd68bb"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4ed06ea6535d44c135fd68c4"}, {"code": "#(reduce * (take % (iterate inc 1)))", "problem": 42, "user": "4ec6357a535d6d7199dd36c5"}, {"code": "#(apply * (range 1 (inc %))\n)", "problem": 42, "user": "4ec75829535d6d7199dd36e1"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4ecc147b535d23f0362276f7"}, {"code": "(fn [n] (reduce * 1 (range 1 (inc n))))", "problem": 42, "user": "4ed188c8535d44c135fd68cf"}, {"code": "#(apply * (range 1 (+ % 1)))", "problem": 42, "user": "4ed19f00535d44c135fd68d1"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4db091b7838c48654951d9c2"}, {"code": "#(loop [n %1 acc 1]\n  (if (> n 0)\n      (recur (dec n) (* n acc))\n      acc))", "problem": 42, "user": "4ec60dc4535d6d7199dd36c0"}, {"code": "(fn [x]\n  (loop [this_x x, result 1]\n    (if (= 1 this_x)\n      result\n      (recur (dec this_x) (* result this_x)))))", "problem": 42, "user": "4ec5cdb0535d6d7199dd36b8"}, {"code": "(fn [x] (apply * (range 1 (inc x))))", "problem": 42, "user": "4eb9ce75535dfed6da9c6d5e"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4eb955da535dfed6da9c6d50"}, {"code": "#(reduce * (range 1 (+ 1 %)))", "problem": 42, "user": "4ebc829e535dfed6da9c6d86"}, {"code": "(fn [acc n] (if (zero? n) acc (recur (* n acc) (dec n)))) 1", "problem": 42, "user": "4ed292ac535d44c135fd68d9"}, {"code": "(fn [n]                                                                                                                                                      \n  ((fn f [a n]                                                                                                                                                         \n     (if (> n 1)                                                                                                                                                       \n       (recur (* n a) (dec n))                                                                                                                                         \n       a)) 1 n))", "problem": 42, "user": "4ec75077535d6d7199dd36e0"}, {"code": "(fn fac [n]\n  (if (= 1 n)\n1\n(* n (fac (dec n)))))", "problem": 42, "user": "4ed2b168535d44c135fd68dd"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4ecfa05c535d44c135fd68b9"}, {"code": "(fn [n]\n  (reduce (fn [total x] (* total x)) (take n (iterate (partial + 1) 1))))", "problem": 42, "user": "4e6e7018535d5021c1a8960b"}, {"code": "(fn [x] (reduce * (range 1 (inc x))))", "problem": 42, "user": "4eb59464535d7eef30807369"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4e5af45e535d8a8b8723a2b1"}, {"code": "(fn a [x]\n   (if (= 0 x) \n     1 \n     (* x (a (dec x)))))", "problem": 42, "user": "4e6cf521535de274dd8d818b"}, {"code": "(fn fact [x] \n  (if (= x 1)\n    1\n    (* x (fact (dec x)))))", "problem": 42, "user": "4ebbf772535dfed6da9c6d76"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4ecaaa25535d6d7199dd3708"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e75500f535d7a570dd295c1"}, {"code": "(fn fac [x] (if (= x 1) x\n             (* x (fac (dec x)))))", "problem": 42, "user": "4ea4e98a535d7eef308072ce"}, {"code": "(fn f [i](\n  if (= i 0)\n    1\n    (* i (f (dec i)))))", "problem": 42, "user": "4ed42c78535d10e5ff6f52c7"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4ecc8dea535d23f0362276fd"}, {"code": "(fn factorial [n] (if (= n 1) 1 (* n (factorial (dec n)))))", "problem": 42, "user": "4ed500bb535d10e5ff6f52d3"}, {"code": "(fn [x] (loop [result 1 x x] (if (= x 1) result (recur (* result x) (dec x)))))", "problem": 42, "user": "4ed55b5d535d10e5ff6f52d8"}, {"code": "(fn fact [x]\n  (if (<= x 1) 1 (* x (fact (dec x)))))", "problem": 42, "user": "4ed4798f535d10e5ff6f52cc"}, {"code": "#(->> % inc (range 1) (reduce *))", "problem": 42, "user": "4ece7617535d23f03622770c"}, {"code": "(fn [x] (reduce * (range 1 (inc x))))", "problem": 42, "user": "4e89ff3d535d3e98b802328a"}, {"code": "(fn fac\n  ([n] (fac n 1))\n  ([n a]\n     (if (<= n 1) a (recur (dec n) (* n a)))))", "problem": 42, "user": "4e7f8f85535db966e863cc44"}, {"code": "#(apply * % (range 2 %))", "problem": 42, "user": "4ecf1f51535d1f5ad70dba3a"}, {"code": "(fn[n]\n  (reduce * (range 2 (inc n))))", "problem": 42, "user": "4ec64981535d6d7199dd36c7"}, {"code": "#(apply * % (range 2 %))", "problem": 42, "user": "4ed69ea4535d10e5ff6f52e3"}, {"code": "(fn fact [n]\n   (cond\n        (= n 1) 1\n  :else (* n (fact (dec n)))))", "problem": 42, "user": "4ec7def0535d6d7199dd36e9"}, {"code": "(fn [x] (reduce * (range 1 (inc x))))", "problem": 42, "user": "4ea11921535d7eef308072af"}, {"code": "#(reduce * (range 1 (+ 1 %)))", "problem": 42, "user": "4e65027c535d8ccf87e9fe6e"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4ed1f84f535d44c135fd68d3"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4eca40cd535d6d7199dd3703"}, {"code": "(fn [x]\n  (reduce * (range 1 (+ x 1))))", "problem": 42, "user": "4ed6238d535d10e5ff6f52de"}, {"code": "(fn x-fac [v] (if (= v 0) 1 (* (x-fac (dec v)) v)))", "problem": 42, "user": "4eccb190535d23f0362276fe"}, {"code": "#(reduce * 1 (range 1 (inc %)))", "problem": 42, "user": "4ed94d69535d10e5ff6f5303"}, {"code": "(fn [x] (reduce * (range 1 (inc x))))", "problem": 42, "user": "4ec5c948535d6d7199dd36b7"}, {"code": "(fn [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "4ed0e139535d44c135fd68c7"}, {"code": "(fn factorial [x]\n  (if (zero? x)\n    1\n    (* x (factorial (dec x)))))", "problem": 42, "user": "4eda7cc3535d10e5ff6f530e"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4edab806535d10e5ff6f5311"}, {"code": "#(apply * (range 2 (inc %)))", "problem": 42, "user": "4ec5aa1f535d6d7199dd36b0"}, {"code": "(fn [n] (reduce * (range 2 (inc n))))", "problem": 42, "user": "4e86fd2d535dceadca46984d"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4ed6ac40535d10e5ff6f52e4"}, {"code": "(fn factorial [n]\n  (cond (= 1 n) 1\n  :else\n  (* n (factorial (dec n)))))", "problem": 42, "user": "4ecdb0bb535d23f036227709"}, {"code": "(fn fac [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "4ed72e51535d10e5ff6f52ee"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4ed27f9f535d44c135fd68d5"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4ec18451535dfed6da9c6db0"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4ede8789535d10e5ff6f5337"}, {"code": "(fn [x]\r\n  (loop [n x\r\n         total 1]\r\n    (if (= n 1)\r\n      total\r\n      (recur (- n 1) (* total n)))))", "problem": 42, "user": "4e570b60535d8a8b8723a286"}, {"code": "(fn fac [x]\n  (if (= x 0) 1\n      (* x (fac (- x 1)))))", "problem": 42, "user": "4ede8e1d535d10e5ff6f5339"}, {"code": "(fn [s]\n    (reduce * (range 1 (+ 1 s))))", "problem": 42, "user": "4eae2f9e535d7eef30807324"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4db4c93f535dc0f10411755c"}, {"code": "(fn fact[i]\r\n  (apply * (range 1 (+ i 1))))", "problem": 42, "user": "4edeac6b535d10e5ff6f533a"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4ecfe525535d44c135fd68bf"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e94aa18535dbda64a6f6b1e"}, {"code": "(fn [x]\n (reduce * (range 1 (inc x))))", "problem": 42, "user": "4edf92f0535d10e5ff6f5341"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e7e8684535db169f9c79717"}, {"code": "(fn f [n] \n  (if (= 1 n)\n    1\n    (* n (f (dec n)))))", "problem": 42, "user": "4edd038c535d10e5ff6f5327"}, {"code": "(fn fact [x] (if (= x 1) 1 (* x (fact (- x 1)))))", "problem": 42, "user": "4ed82830535d10e5ff6f52f7"}, {"code": "(fn [x] (reduce * (range 1 (inc x))))", "problem": 42, "user": "4edd9d79535d10e5ff6f532b"}, {"code": "(fn [i] ((fn facr[act res max] (\n  if (< max act)\n    res\n    (recur (inc act) (* act res) max))) 1 1 i))", "problem": 42, "user": "4ece9ca9535d23f03622770f"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4db85c8e535d1e037afb218f"}, {"code": "(fn fac [n] (if (zero? n) 1 (* n (fac (dec n)))))", "problem": 42, "user": "4dbde85b535d020aff1edf52"}, {"code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "problem": 42, "user": "4ee2da14535d10e5ff6f536c"}, {"code": "(fn [x]\n (letfn [(fac [n] (if (= n 1) 1 (* n (fac (- n 1)))))]\n   (fac x)))", "problem": 42, "user": "4ec79f99535d6d7199dd36e4"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4ed9fe5f535d10e5ff6f5308"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4ee3b586535d10e5ff6f5371"}, {"code": "(fn [x]\n  (first (last (take (inc x)\n                     (iterate\n                      (fn [[a b]] [(*' a b) (inc b)])\n                      [1 1])))))", "problem": 42, "user": "4ee26f01535d10e5ff6f5368"}, {"code": "#(reduce * 1 (range 1 (inc %)))", "problem": 42, "user": "4ee40938535d10e5ff6f5375"}, {"code": "(fn [n]\n  (loop [v 1 x n]\n    (if (> x 0)\n      (recur (* v x) (dec x))\n      v)))", "problem": 42, "user": "4ee4f4a9535d1385b2869d85"}, {"code": "(fn [n] (reduce #(* % %2) (rest (range (inc n)))))", "problem": 42, "user": "4edf5dc6535d10e5ff6f5340"}, {"code": "(fn [n]\r\n    (loop [cnt n acc 1]\r\n       (if (zero? cnt)\r\n          acc\r\n          (recur (dec cnt) (* acc cnt)))))", "problem": 42, "user": "4eddcbbf535d10e5ff6f532d"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4ed7b617535d10e5ff6f52f3"}, {"code": "(fn [n] (reduce * (range 1 (+ n 1))))", "problem": 42, "user": "4ee75ec2535d93acb0a66867"}, {"code": "(fn r [x] (if (= 1 x) 1 (* x (r (dec x)))))", "problem": 42, "user": "4ee67364535d93acb0a6685f"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4edfd846535d10e5ff6f5345"}, {"code": "(fn [x]\n  (loop [acc x n (dec x)]\n    (if (> n 0)\n      (recur (* acc n) (dec n))\n      acc)))", "problem": 42, "user": "4ee88269535d93acb0a6687f"}, {"code": "(fn [n]\n  (loop [n n\n         acc 1]\n  (if (= n 0)\n    acc\n    (recur (dec n) (* acc n)))))", "problem": 42, "user": "4dad8d4bc9a9d6ed1799dc57"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4ee7ef87535d93acb0a66872"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4ee82539535d93acb0a66878"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4ee6400c535d93acb0a6685b"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4ee7d177535d93acb0a6686f"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4eb30868535d7eef30807355"}, {"code": "(fn fact [n]\n  (if (< 0 n)\n    (* n (fact (- n 1)))\n    1))", "problem": 42, "user": "4ee82223535d93acb0a66877"}, {"code": "#(apply * (take-while pos? (iterate dec %)))", "problem": 42, "user": "4ee63d8d535d93acb0a66859"}, {"code": "(fn [n]\n    (loop [acc 1\n           n n]\n      (if (zero? n)\n        acc\n        (recur (* acc n) (dec n)))))", "problem": 42, "user": "4e5be681535d8a8b8723a2bc"}, {"code": "(fn fact[n](if(= 1 n) 1 (* n (fact(- n 1)))))", "problem": 42, "user": "4ee9ff32535d93acb0a66897"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4e95f5a5535dbda64a6f6b3b"}, {"code": "(fn fctrl [x] (reduce * (range 1 (inc x))))", "problem": 42, "user": "4edfb618535d10e5ff6f5343"}, {"code": "(fn [x] (reduce * (range 1 (inc x))))", "problem": 42, "user": "4ee9d697535d93acb0a66895"}, {"code": "(fn fac[x] \n  (if (<= x 1) 1 (* x (fac (- x 1))))\n)", "problem": 42, "user": "4ee8092f535d93acb0a66875"}, {"code": "#((fn [x y] (if (= y 0) x (recur (* x y) (- y 1)))) 1 %)", "problem": 42, "user": "4eebfd03535d93acb0a668ab"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4ee9ddb8535d93acb0a66896"}, {"code": "#(reduce * (rest (range (inc %))))", "problem": 42, "user": "4ee868be535d93acb0a6687d"}, {"code": "(fn f [x] (if (zero? x) 1 (* x (f (dec x)))))", "problem": 42, "user": "4eebc5da535d93acb0a668aa"}, {"code": "#((fn ! [x]\n  (if (= x 1)\n\t\t1\n\t\t(* x  (! (- x 1))))) %)", "problem": 42, "user": "4ee91d00535d93acb0a6688b"}, {"code": "(fn [x] (apply * (range 1 (inc x))))", "problem": 42, "user": "4ec3650f535dcc7ae8597d56"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4edee6a2535d10e5ff6f533e"}, {"code": "(fn [n] \n  (reduce * (range 1 (inc n))))", "problem": 42, "user": "4ee01905535d10e5ff6f534c"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4ee88bfb535d93acb0a66881"}, {"code": "(fn fc [x]\n  (if (= 1 x) 1\n    (* x (fc (dec x)))))", "problem": 42, "user": "4eeae8f0535d93acb0a668a2"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e6a0667535d8ccf87e9fe9e"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4eecdd66535d93acb0a668b9"}, {"code": "(fn f \n  ([x] (f x 1))\n  ([x r]\n    (if (<= x 1)\n      r\n      (recur (dec x) (* x r)))))", "problem": 42, "user": "4dac61e18cc9d6edb9beb0b3"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4daea889edd6309eace4d15b"}, {"code": "#(reduce * (range 2 (inc %)))", "problem": 42, "user": "4ef0a39b535dced4c769f20c"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4ef0a38e535dced4c769f20b"}, {"code": "(fn [n] (loop [i n f n] (if (= i 1) f (recur (dec i) (* f (dec i))))))", "problem": 42, "user": "4eef1164535d305ff5cb7f19"}, {"code": "#(apply * (range 1 (+ % 1)))", "problem": 42, "user": "4ec6297b535d6d7199dd36c4"}, {"code": "#(apply * % (range 2 %))", "problem": 42, "user": "4ef2d243535dced4c769f221"}, {"code": "(fn [n]\n  (loop [x n acc 1]\n    (if (> x 1)\n      (recur (dec x) (* acc x))\n      acc)))", "problem": 42, "user": "4ef1ee67535dced4c769f219"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4da3e51330acd6ed10482a68"}, {"code": "#(apply * % (range 2 %))", "problem": 42, "user": "4ef49c2c535dced4c769f238"}, {"code": "(partial (fn [r n]\n            (if (> n 0)\n              (recur (* r n) (dec n))\n              r))\n          1)", "problem": 42, "user": "4ef2a142535dced4c769f21e"}, {"code": "(fn fact [n] (reduce *\n  (or (seq (range 1 (inc n))) [1])))", "problem": 42, "user": "4edecdae535d10e5ff6f533c"}, {"code": "#(apply * (conj (range 1 %) %))", "problem": 42, "user": "4ef41f26535dced4c769f230"}, {"code": "#(reduce * 1 (range 1 (inc %)))", "problem": 42, "user": "4ef4acf8535dced4c769f23c"}, {"code": "(fn ! [x] (if (= 1 x) 1 (* x (! (dec x)))))", "problem": 42, "user": "4eee5c7f535d93acb0a668c6"}, {"code": "(fn f [n] (if (= n 0) 1 (* n (f (dec n)))))", "problem": 42, "user": "4ef667c4535dced4c769f24c"}, {"code": "#(reduce * (range % 1 -1))", "problem": 42, "user": "4ef4e5fa535dced4c769f242"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4ef5c7ce535dced4c769f248"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4ef355e3535dced4c769f228"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4ef77c82535dced4c769f253"}, {"code": "(fn[x] (reduce * (range 1 (inc x))))", "problem": 42, "user": "4daea587edd6309eace4d15a"}, {"code": "(fn [n]\n        (loop [acc 1 i n]\n           (if (= i 0)\n               acc\n               (recur (* i acc) (dec i)))))", "problem": 42, "user": "4ef5c847535dced4c769f249"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4dd88803535d2dad7130b5d9"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4ec5d62c535d6d7199dd36ba"}, {"code": "(fn fib [x]\n  (if (= x 1)\n      1\n      (* x (fib (dec x)))))", "problem": 42, "user": "4ef992c8535dced4c769f268"}, {"code": "(fn [n] (reduce #(* %1 %2) 1 (range 2 (+ n 1))))", "problem": 42, "user": "4ef0a39b535dced4c769f20d"}, {"code": "(fn fact [n]\n  (cond (= n 0) 1\n        true (* n (fact (- n 1)))))", "problem": 42, "user": "4ef6f5ea535dced4c769f250"}, {"code": "(fn [num] (loop [n num\n   place 1\n\t max num]\n    (do\n      (if (= place num)\n\tn\n\t(recur (* n place) (inc place) max)))))", "problem": 42, "user": "4ef9b021535dced4c769f269"}, {"code": "(fn factorial [n]\n    (loop [counter n acc 1]\n       (if (zero? counter)\n            acc\n          (recur (dec counter) (* acc counter)))))", "problem": 42, "user": "4eeb8f68535d93acb0a668a9"}, {"code": "#(reduce * % (range 1 %))", "problem": 42, "user": "4ef4c1ff535dced4c769f23e"}, {"code": "(fn [x](loop [cnt x acc 1](if (zero? cnt) acc (recur (dec cnt)(* acc cnt)))))", "problem": 42, "user": "4ed2dd98535d44c135fd68e2"}, {"code": "#(reduce * (range 1 (+ % 1)))", "problem": 42, "user": "4ef8d47c535dced4c769f261"}, {"code": "(fn [n]\n  (loop [np n\n        result 1]\n    (if (= np 1)\n      result\n      (recur (dec np) (* result np)))))", "problem": 42, "user": "4efb92ce535dced4c769f27a"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4efb0ae1535dced4c769f273"}, {"code": "(fn fct [n]\n  (if (= 0 n)\n    1\n    (* n (fct (- n 1)))))", "problem": 42, "user": "4ef57a7f535dced4c769f246"}, {"code": "#(reduce *(range 1 (inc %)))", "problem": 42, "user": "4ebc3974535dfed6da9c6d7f"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e9be708535dbda64a6f6b79"}, {"code": "#(reduce * (range 1 (+ % 1)))", "problem": 42, "user": "4ec49231535dcc7ae8597d63"}, {"code": "(fn my-fac [num]\r\n    (reduce * 1 (range 1 (inc num))))", "problem": 42, "user": "4eee3e6a535d93acb0a668c3"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4efcac3a535de96065cf507e"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4efb2fd7535dced4c769f274"}, {"code": "#(apply * (range % 1 -1))", "problem": 42, "user": "4e8768f6535dceadca469850"}, {"code": "#(reduce * 1 (range 1 (inc %)))", "problem": 42, "user": "4ee3afde535d10e5ff6f5370"}, {"code": "(fn [i]\n    (loop [n i\n           acc 1]\n  \t  (if \n      \t(<= n 1) acc\n      \t(recur (dec n) (* n acc)))))", "problem": 42, "user": "4eee5459535d93acb0a668c5"}, {"code": "(fn ! [n] (reduce * (range 1 (+ n 1))))", "problem": 42, "user": "4efd98fa535de96065cf5086"}, {"code": "(fn [n] (reduce * 1 (range 1 (inc n))))", "problem": 42, "user": "4effb663535dcb61093f6a2e"}, {"code": "(fn [n] (loop [acc 1 n n] (if (zero? n) acc (recur (* acc n) (dec n)))))", "problem": 42, "user": "4eecc9ad535d93acb0a668b4"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4ed9354f535d10e5ff6f5301"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4ee67d74535d93acb0a66861"}, {"code": "#(reduce * (range 1 (+% 1)))", "problem": 42, "user": "4efb87f7535dced4c769f279"}, {"code": "#(reduce (fn [a b] (* a b)) (range 1 (inc %)))", "problem": 42, "user": "4f017593535dcb61093f6a36"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4ed3c783535d44c135fd68f6"}, {"code": "(fn factorial [n]\r\n(reduce * (range 1 (inc n))))", "problem": 42, "user": "4f00c74f535dcb61093f6a31"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f01ff83535dcb61093f6a3a"}, {"code": "(fn factorial [N]\n   (reduce * (range 1 (+ 1 N))))", "problem": 42, "user": "4ee9c8d0535d93acb0a66892"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4f031eac535dcb61093f6a67"}, {"code": "(fn fact [x]\n  (if (= x 1)\n    1\n    (* x (fact (- x 1)))))", "problem": 42, "user": "4e2ef93d535deb9a81d77f0f"}, {"code": "#(reduce * (range 2 (inc %)))", "problem": 42, "user": "4db8f6c4535d1e037afb219e"}, {"code": "#(apply * (range 1 (+ 1 %)))", "problem": 42, "user": "4f01c938535dcb61093f6a39"}, {"code": "(fn my-factorial [x]\n  (reduce #(* %1 %2) 1 (range 1 (+ x 1))))", "problem": 42, "user": "4eb2c45e535d7eef3080734d"}, {"code": "#(reduce * (take % (iterate inc 1)))", "problem": 42, "user": "4f036d9b535dcb61093f6ac1"}, {"code": "(fn fact [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "4ef0eaef535dced4c769f211"}, {"code": "(fn fac [n]\n  (cond\n        (= n 1) 1\n        :else (* n (fac (dec n)))))", "problem": 42, "user": "4ee82ce9535d93acb0a6687a"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f03d0fe535dcb61093f6b6d"}, {"code": "(fn f [x] (if (= x 1) 1 (* x (f (dec x)))))", "problem": 42, "user": "4f04165d535dcb61093f6b9c"}, {"code": "#(reduce * (map inc (range %)))", "problem": 42, "user": "4f03822f535dcb61093f6b03"}, {"code": "#(reduce * (map inc (range %)))", "problem": 42, "user": "4f043ed1535dcb61093f6bb4"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f0397ee535dcb61093f6b30"}, {"code": "(fn [x]\n  (loop [f 1 n x]\n    (if (= 1 n)\n      f\n      (recur (* f n) (dec n)))))", "problem": 42, "user": "4f036894535dcb61093f6aad"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f040bbf535dcb61093f6b95"}, {"code": "(fn a [n] (if (= 1 n) 1 (* n (a (dec n)))))", "problem": 42, "user": "4ef6e689535dced4c769f24f"}, {"code": "(fn [n]\n  (loop [n n r 1]\n    (if (= n 0) r\n      (recur (- n 1) (* r n)))))", "problem": 42, "user": "4f038017535dcb61093f6afa"}, {"code": "(fn fact [x]\n  (if (= x 1)\n      1\n      (* x (fact (dec x)))))", "problem": 42, "user": "4f036fad535dcb61093f6ac7"}, {"code": "(fn f [x]\n  (if (> x 1)\n      (* x (f (- x 1)))\n    x)\n  )", "problem": 42, "user": "4ed87228535d10e5ff6f52fa"}, {"code": "#(apply * % (range 2 %))", "problem": 42, "user": "4f03857e535dcb61093f6b0d"}, {"code": "(fn fact [n]\n  (if (= n 1) 1 (* n (fact (- n 1)))))", "problem": 42, "user": "4f04a06d535dcb61093f6bd9"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f039f14535dcb61093f6b3e"}, {"code": "(fn fact [n]\n  ((fn facts [n result]\n    (if (= 0 n)\n      result\n      (recur (dec n) (* n result))))\n    n 1))", "problem": 42, "user": "4f047902535dcb61093f6bcc"}, {"code": "#(apply * (map inc (range %)))", "problem": 42, "user": "4f031639535dcb61093f6a59"}, {"code": "#(apply * % (range 2 %))", "problem": 42, "user": "4f039a8b535dcb61093f6b36"}, {"code": "#(loop [n % fact 1] (if (= 0 n) fact (recur (dec n) (* fact n))))", "problem": 42, "user": "4f037a34535dcb61093f6ae9"}, {"code": "(fn [x] (loop [x x s 1] (if (> x 0) (recur (dec x) (* s x)) s)))", "problem": 42, "user": "4f031883535dcb61093f6a5e"}, {"code": "(fn f [n] (if (> n 0) (* n (f (dec n))) 1))", "problem": 42, "user": "4f0514b4535dcb61093f6bf0"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f047c07535dcb61093f6bcd"}, {"code": "#(reduce * (rest (range (inc %))))", "problem": 42, "user": "4f038bcd535dcb61093f6b1d"}, {"code": "(fn fac [x]\n  ( if (< x 2)\n  1\n  (* x (fac (- x 1)))))", "problem": 42, "user": "4f04256d535dcb61093f6ba7"}, {"code": "#(reduce * (range 1 (+ % 1)))", "problem": 42, "user": "4f058c73535dcb61093f6bf9"}, {"code": "(fn f! [x]\n  (if (= x 1) x (* x (f! (dec x)))))", "problem": 42, "user": "4f0381db535dcb61093f6b02"}, {"code": "(fn fact [n]\n  (if (< n 1)\n    1\n    (* n (fact (dec n)))))", "problem": 42, "user": "4f04f847535dcb61093f6beb"}, {"code": "(comp (partial reduce *) (partial range 1) inc)", "problem": 42, "user": "4ec5a5f9535d6d7199dd36ad"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f062d4a535dcb61093f6c08"}, {"code": "(fn [x]\n (apply * (range 1 (inc x))) \n)", "problem": 42, "user": "4f00f997535dcb61093f6a34"}, {"code": "(fn [n]\n  (loop [acc 1 n n]\n    (if (= n 0)\n        acc\n        (recur (* acc n) (dec n)))))", "problem": 42, "user": "4dadaa5cc9a9d6ed2f99dc57"}, {"code": "(fn [n]\n  (loop [n n curr 1]\n    (if (= n 0)\n        curr\n        (recur (dec n) (* curr n)))))", "problem": 42, "user": "4f03ebf7535dcb61093f6b7f"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f0412f8535dcb61093f6b99"}, {"code": "(fn fact [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "4f036d6e535dcb61093f6ac0"}, {"code": "#(loop [c % f 1] (if (= c 1) f (recur (dec c) (* f c))))", "problem": 42, "user": "4e707714535d5021c1a89638"}, {"code": "(fn myfact [n]\n  (if (<= n 1)\n    1\n    (* n (myfact (- n 1)))))", "problem": 42, "user": "4f03d4dc535dcb61093f6b6e"}, {"code": "(fn f [n]\n  (if (= n 1)\n  1\n  (* n (f (- n 1)))))", "problem": 42, "user": "4ef0f1a1535dced4c769f212"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e6a6be7535d8ccf87e9fee1"}, {"code": "#(loop [i % acc 1]\n  (if (== 1 i)\n     acc\n     (recur (dec i) (* acc i))))", "problem": 42, "user": "4dbdc898535d020aff1edf4a"}, {"code": "(fn fac[x]\n  (if (= x 1)\n    1\n    (* x (fac (dec x)))))", "problem": 42, "user": "4f0388e8535dcb61093f6b17"}, {"code": "(fn f [x] (if (= x 1) 1 (* x (f (dec x)))))", "problem": 42, "user": "4f0664bd535dcb61093f6c0f"}, {"code": "(fn [x]\n  (apply * (range x 0 -1)))", "problem": 42, "user": "4f0348b4535dcb61093f6a84"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f038567535dcb61093f6b0c"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f04b66b535dcb61093f6bdd"}, {"code": "(fn fact [n]\r\n    (reduce * (conj (range 1 n) n)))", "problem": 42, "user": "4f039524535dcb61093f6b2c"}, {"code": "(fn [x] (reduce * (range 1 (inc x))))", "problem": 42, "user": "4f07056c535dcb61093f6c1d"}, {"code": "#(apply * % (range 2 %))", "problem": 42, "user": "4f083048535dcb61093f6c33"}, {"code": "(fn [n] (loop [result n m (dec n)] \n(if (= m 0) result (recur (* m result) (dec m)))))", "problem": 42, "user": "4ef4ab95535dced4c769f23b"}, {"code": "(fn [x] (reduce * (take-while (partial >= x) (iterate inc 1))))", "problem": 42, "user": "4f03193e535dcb61093f6a61"}, {"code": "(fn [num] (apply * (take num (iterate #(dec %) num))))", "problem": 42, "user": "4ef89fb0535dced4c769f260"}, {"code": "(fn [x]\n  (loop [acc 1 \n    n x]\n    (if (= n 0)\n      acc\n      (recur (* acc n) (- n 1)))))", "problem": 42, "user": "4f0365fc535dcb61093f6aa4"}, {"code": "(fn fact [n]\n  (loop [num n result 1]\n    (if (= num 1)\n      result\n      (recur (dec num) (* result num)))))", "problem": 42, "user": "4e95a440535dbda64a6f6b37"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f0660ee535dcb61093f6c0d"}, {"code": "(fn [x]\n  (loop [f 1\n        x x]\n      (if (<= x 1)\n        f\n        (recur (* f x) (dec x)))))", "problem": 42, "user": "4dc1e1e4535d020aff1edf90"}, {"code": "(fn [n]\n  (loop [i n ret 1]\n    (if (> i 0)\n      (recur (dec i) (* ret i))\n      ret)))", "problem": 42, "user": "4f050dec535dcb61093f6bef"}, {"code": "(fn fac [n] (if (= n 1) 1 (* n (fac (dec n)))))", "problem": 42, "user": "4f048ebc535dcb61093f6bd2"}, {"code": "#(reduce * (range 1 (+ 1 %)))", "problem": 42, "user": "4f067029535dcb61093f6c12"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f0891a2535dcb61093f6c3b"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f06dcad535dcb61093f6c16"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f08b15b535dcb61093f6c40"}, {"code": "(fn fac [x]\n  (if (zero? x) 1 (* x (fac (dec x)))))", "problem": 42, "user": "4f038499535dcb61093f6b09"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4f039bbe535dcb61093f6b39"}, {"code": "#(apply * (range 1 (+ % 1)))", "problem": 42, "user": "4f047542535dcb61093f6bc7"}, {"code": "#(apply * (range 2 (inc %)))", "problem": 42, "user": "4f0a4e7e535d0136e6c222f4"}, {"code": "(fn [x]\n  (reduce * (range 1 (inc x))))", "problem": 42, "user": "4f03154a535dcb61093f6a58"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4edb1774535d10e5ff6f5315"}, {"code": "(fn [x] (reduce * (range 1 (+ x 1))))", "problem": 42, "user": "4f0318e6535dcb61093f6a5f"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f052eaf535dcb61093f6bf3"}, {"code": "(fn [i]\n  (reduce * (for [ii (range i)]\n    (+ ii 1))))", "problem": 42, "user": "4f082ad1535dcb61093f6c32"}, {"code": "(fn [n] (reduce #(* %1 %2) (range 1 (inc n))))", "problem": 42, "user": "4f0b2028535d0136e6c222ff"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4e7e3cc4535db169f9c7970a"}, {"code": "(fn [x] \n  (loop [counter x fact 1]\n    (if (= counter 0)\n      fact\n      (recur (dec counter) (* fact counter)))))", "problem": 42, "user": "4f032f30535dcb61093f6a73"}, {"code": "#(loop [n %\n        a 1]\n  (if (= 0 n)\n    a\n  (recur (dec n) (* a n))))", "problem": 42, "user": "4f0333f6535dcb61093f6a77"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4eaa5c51535d7eef3080730a"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f037bb5535dcb61093f6aec"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f017b4e535dcb61093f6a37"}, {"code": "(fn [x] \n  (loop [cptr x acc 1]\n  (if (zero? cptr) \n     acc\n     (recur (dec cptr) (* acc cptr))))\n)", "problem": 42, "user": "4eaa66eb535d7eef3080730b"}, {"code": "(fn myFact \n    ([x y]\n        (if (= x 1)\n            y\n        (myFact (dec x) (* x y))))\n    ([x] (myFact x 1)))", "problem": 42, "user": "4f03b3fb535dcb61093f6b52"}, {"code": "#(reduce * (range 1 (+ % 1)))", "problem": 42, "user": "4f089f1a535dcb61093f6c3c"}, {"code": "(fn fac [i] \n  (cond\n    (< i 2) 1\n    :else   (* i (fac (dec i)))))", "problem": 42, "user": "4eeaf88f535d93acb0a668a3"}, {"code": "#(apply *\n  (range 1 (inc %)))", "problem": 42, "user": "4f0bc223535d0136e6c22307"}, {"code": "(fn [x] (reduce #(* %1 %2) 1 (range 1 (inc x))))", "problem": 42, "user": "4f0c4518535d0136e6c2230b"}, {"code": "(fn [n]\n  (reduce #(* % %2) 1 \n          (take n (iterate inc 1))))", "problem": 42, "user": "4efec33f535dcb61093f6a2a"}, {"code": "#(reduce * (range 2 (inc %)))", "problem": 42, "user": "4e2d84bf535deb9a81d77f09"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4f0ce26c535d0136e6c22312"}, {"code": "(fn [f] (reduce * (range 1 (inc f))))", "problem": 42, "user": "4ebca352535dfed6da9c6d88"}, {"code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "problem": 42, "user": "4f03ac2d535dcb61093f6b4a"}, {"code": "(fn bang [n]\n  (reduce * (range 1 (inc n))))", "problem": 42, "user": "4f07bc41535dcb61093f6c2c"}, {"code": "(fn [x]\n  (reduce * (range 1 (inc x))))", "problem": 42, "user": "4e7d1c22535db169f9c796c5"}, {"code": "(fn factorial [x]\n  (if (= x 0)\n    1\n    (* x (factorial (- x 1)))))", "problem": 42, "user": "4f0a2ed1535d0136e6c222f3"}, {"code": "(fn fac[n] (reduce * (take n (iterate inc 1))))", "problem": 42, "user": "4ec1b80c535dfed6da9c6db6"}, {"code": "(fn f [x] (if (zero? x) 1 (* x (f (- x 1)))))", "problem": 42, "user": "4eff81ca535dcb61093f6a2d"}, {"code": "(fn fact [n]  \n  (if (zero? n) 1\n      (* n (fact (- n 1)))))", "problem": 42, "user": "4f0ef874535d0136e6c22328"}, {"code": "#(loop [value 1 num % result 1]\n     (if (> value num)\n\t       result\n\t       (recur (inc value) num (* result value))))", "problem": 42, "user": "4f066916535dcb61093f6c10"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4f0446f9535dcb61093f6bb8"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4f0f174c535d0136e6c22330"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4ebcb8ff535dfed6da9c6d8a"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4f10175e535d64f603146411"}, {"code": "#(letfn [(factorial [x result] (if (< x 1) result (factorial (dec x) (* x result))))] (factorial % 1))", "problem": 42, "user": "4ef60a02535dced4c769f24b"}, {"code": "(fn [x]\n  (reduce * (range 1 (inc x))))", "problem": 42, "user": "4f08a8a2535dcb61093f6c3d"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4f0f36a7535d0136e6c22336"}, {"code": "(fn f [x] (if (= x 1) 1 (* x (f (dec x)))))", "problem": 42, "user": "4f0f9df7535d0136e6c22342"}, {"code": "#(reduce * (range 1 (+ 1 %)))", "problem": 42, "user": "4f0e995e535d0136e6c22326"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f1052b9535d64f603146418"}, {"code": "(fn fac [n] (if (pos? n) (* n (fac (dec n))) 1))", "problem": 42, "user": "4e4be570535dc968683fc4d8"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f128865535d64f603146428"}, {"code": "#(reduce * 1 (range 1 (+ % 1)))", "problem": 42, "user": "4f13047d535d64f60314642c"}, {"code": "(fn [x] (reduce * (take x (iterate \n  (partial + 1) 1))))", "problem": 42, "user": "4f00e9c7535dcb61093f6a33"}, {"code": "#(-> %\n  inc \n  ((partial range 1)) \n  ((partial reduce *)))", "problem": 42, "user": "4ee7d113535d93acb0a6686e"}, {"code": "(fn factorial [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "4f03bf5e535dcb61093f6b5d"}, {"code": "(fn fact [x]\n      (if (= x 0) 1\n          (* x (fact(- x 1)))))", "problem": 42, "user": "4f030af7535dcb61093f6a49"}, {"code": "#(loop [x % res 1]\n  (if (= x 1) res\n    (recur (dec x) (* res x))\n))", "problem": 42, "user": "4f12ab23535d64f603146429"}, {"code": "(fn [x] (reduce * (range 1 (inc x))))", "problem": 42, "user": "4e6698b9535d8ccf87e9fe7a"}, {"code": "(fn fa [x]\n  (cond\n    (= x 1) 1\n    :else (* x (fa (dec x)))\n)\n)", "problem": 42, "user": "4f0df199535d0136e6c2231e"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4ede361a535d10e5ff6f5332"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f141dee535d64f603146434"}, {"code": "(fn fac [x] (if (= x 1) 1 (* x (fac(dec x)))))", "problem": 42, "user": "4f048f67535dcb61093f6bd3"}, {"code": "(fn my-fac [n]\r\n    (reduce * (range 1 (inc n))))", "problem": 42, "user": "4f149e0f535d64f60314643d"}, {"code": "(fn [x] (reduce #(* % %2) (take x (iterate inc 1))))", "problem": 42, "user": "4f0f03ce535d0136e6c2232a"}, {"code": "(fn fact [n]\n  (if (= n 0)\n    1\n    (* n (fact (dec n)))))", "problem": 42, "user": "4e93600b535dbda64a6f6b0e"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f1595da535d64f603146444"}, {"code": "(fn fact [x] (apply * (range 1 (inc x))))", "problem": 42, "user": "4f0cc259535d0136e6c22310"}, {"code": "#(reduce * 1 (range 1 (inc %)))", "problem": 42, "user": "4efccd24535de96065cf5080"}, {"code": "(fn factorial [x] (if (< x 2) 1 (* x (factorial (dec x)))))", "problem": 42, "user": "4f16ef8a535d64f603146451"}, {"code": "#(apply * (range 1 (+ % 1)))", "problem": 42, "user": "4f1684c7535d64f60314644b"}, {"code": "(fn fact [x] (if (= x 1) 1 (* x (fact (dec x)))))", "problem": 42, "user": "4f17ab99535d64f603146457"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4f0f40d3535d0136e6c2233b"}, {"code": "(fn [x]\n  (apply *(range 1 (inc x))))", "problem": 42, "user": "4f11b078535d64f603146422"}, {"code": "(fn [v] (reduce #(* %1 %2) (range 1 (inc v))))", "problem": 42, "user": "4f0e4ebd535d0136e6c22322"}, {"code": "#( reduce * ( range 1 (inc %1) ))", "problem": 42, "user": "4f030775535dcb61093f6a43"}, {"code": "#(apply * (rest (range (inc %))))", "problem": 42, "user": "4f0c84ce535d0136e6c2230e"}, {"code": "(fn [x] (reduce * (range 1 (inc x))))", "problem": 42, "user": "4e6b6294535d8ccf87e9ff11"}, {"code": "(fn my-fact [x]\n  (loop [i x ret x]\n    (if (= i 1)\n      ret\n      (recur (dec i) (* ret (dec i))))))", "problem": 42, "user": "4f04d312535dcb61093f6be7"}, {"code": "(fn [a]\n  ((fn myFac [a result]\n    (if (= a 1)\n      result\n      (myFac\n        (dec a)\n        (* a result)\n      )\n    )\n  ) a 1)\n)", "problem": 42, "user": "4f16d6ed535d64f60314644f"}, {"code": "(fn factorial [n]\n  (loop [c 1, fact 1]\n    (if (= c n)\n      (* fact c)\n      (recur (inc c) (* fact c)))))", "problem": 42, "user": "4f159ea6535d64f603146445"}, {"code": "(partial nth (cons 1 (reductions * (rest (range)))))", "problem": 42, "user": "4f1b0ab3535d64f603146474"}, {"code": "#(reduce * (take-while pos? (iterate dec %)))", "problem": 42, "user": "4f1b92d1535d64f60314647b"}, {"code": "(fn [x]\n  (loop [cnt x acc 1]\n    (if (zero? cnt)\n      acc\n      (recur (dec cnt) (* acc cnt)))))", "problem": 42, "user": "4f037d9e535dcb61093f6af2"}, {"code": "(fn [n]\n  (apply * (range 1 (inc n))))", "problem": 42, "user": "4ec3b393535dcc7ae8597d59"}, {"code": "(fn fact [n]\n  (if (= 0 n) 1\n  (* n (fact (- n 1)))))", "problem": 42, "user": "4edffe54535d10e5ff6f5347"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4f0d093b535d0136e6c22313"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4ed845a8535d10e5ff6f52f8"}, {"code": "(fn [x] (apply * (range 1 (inc x))))", "problem": 42, "user": "4f16213f535d64f603146449"}, {"code": "(fn [running n]\n  (if (< n 2)\nrunning\n(recur (* n running) (- n 1))\n)\n) 1", "problem": 42, "user": "4f2004a1535d64f6031464a7"}, {"code": "(fn fac [n]\n  (if (< n 2) \n    1\n    (* n (fac (- n 1)))))", "problem": 42, "user": "4f03396d535dcb61093f6a7b"}, {"code": "(fn f[x]\n  (if (< x 2)\n    1\n    (* x (f (dec x)))))", "problem": 42, "user": "4f1fd734535d64f6031464a5"}, {"code": "(fn factorial [n]\n  (if (= 0 n)\n    1\n    (* n (factorial (dec n)))))", "problem": 42, "user": "4e9a3a03535dbda64a6f6b70"}, {"code": "(fn fact [n]\n  (loop [x n acc 1]\n    (if (zero? x)\n      acc\n      (recur (dec x) (* acc x)))))", "problem": 42, "user": "4f1c2a3a535d64f603146480"}, {"code": "(fn [n]\n  (loop [s 1,size n]\n    (if (= size 1)\ns\n(recur (* s size) (dec size)))))", "problem": 42, "user": "4ef2d6c5535dced4c769f222"}, {"code": "(fn  ! [x] (if (= x 1 ) 1 (* x (! (dec x)))))", "problem": 42, "user": "4ea31da2535d7eef308072c1"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f246938e4b0d66497709fec"}, {"code": "(fn f[x] (\r\n  if (= 1 x) \r\n    1 \r\n    (* x (f (dec x)))\r\n))", "problem": 42, "user": "4f245d77e4b0d66497709feb"}, {"code": "(fn fac [i]\n  (if (zero? i)\n    1\n    (* i (fac (dec i)))))", "problem": 42, "user": "4f215350e4b0d66497709fd0"}, {"code": "(fn [m]\n  (loop [f 1\n         n m]\n    (cond (zero? n) f\n     :else (recur (* f n) (dec n)))))", "problem": 42, "user": "4f230dfbe4b0d66497709fe0"}, {"code": "#(apply * (range 1 (+ % 1)))", "problem": 42, "user": "4eb02674535d7eef30807338"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4f1abbfb535d64f60314646e"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f251302e4b0d66497709ff0"}, {"code": "#(reduce * (range 1 (+ % 1)))", "problem": 42, "user": "4eea4d84535d93acb0a6689c"}, {"code": "(fn func [x]\n  (loop [x x\n         o 1]\n    (if (= x 0)\n      o\n      (recur (- x 1) (* o x))\n      )\n    )\n  )", "problem": 42, "user": "4ee88f29535d93acb0a66882"}, {"code": "(fn [n]\n  (loop [res n\n         n n]\n    (if (<= n 1) res\n        (recur (* res (dec n)) (dec n)))))", "problem": 42, "user": "4f27dd9ce4b0d6649770a00e"}, {"code": "(fn [n]\n    (loop [cnt n acc 1]\n       (if (zero? cnt)\n            acc\n          (recur (dec cnt) (* acc cnt)))))", "problem": 42, "user": "4e6ac593535d8ccf87e9ff02"}, {"code": "(fn [e] (reduce * (range e 0 -1)))", "problem": 42, "user": "4f26c487e4b0d6649770a006"}, {"code": "#(apply * (rest (range (+ % 1))))", "problem": 42, "user": "4ef0b523535dced4c769f20e"}, {"code": "#(apply * (range 2 (+ % 1)))", "problem": 42, "user": "4e8ad247535d65386fec2111"}, {"code": "#(reduce * (range 1 (+ % 1)))", "problem": 42, "user": "4f26d6d9e4b0d6649770a007"}, {"code": "#(apply * (map inc (range %)))", "problem": 42, "user": "4f294c48e4b0d6649770a023"}, {"code": ";#(reduce * (range 1 (inc %)))\n\n;* inneh\u00e5ller redan en \"intern\" reduce,\n;ingen id\u00e9 att anropa * med tv\u00e5 args f\u00f6r\n;hela rangen... b\u00e4ttre att applya hela rangen\n;p\u00e5 funktionen direkt\n#(apply * (range 1 (inc %)))", "problem": 42, "user": "4f07c8c3535dcb61093f6c2d"}, {"code": "(fn fac [n]\n  (if (= n 0) 1 (* n (fac (- n 1))))\n)", "problem": 42, "user": "4f2a6169e4b0d6649770a03d"}, {"code": "(fn [val]\n    (loop [i val, ret 1]\n        (if (= i 1)\n            ret\n            (recur (dec i) (* ret i)) )))", "problem": 42, "user": "4f2965ffe4b0d6649770a029"}, {"code": "(fn my-fact [num]\n  (if (= num 1) \n    1\n    (* num (my-fact (dec num)))))", "problem": 42, "user": "4f21838fe4b0d66497709fd2"}, {"code": "#(reduce * % (range 1 %))", "problem": 42, "user": "4f280840e4b0d6649770a010"}, {"code": "#(apply * (take % (iterate inc 1)))", "problem": 42, "user": "4f2a35ace4b0d6649770a03a"}, {"code": "#(reduce * (range 1 (inc %1)))", "problem": 42, "user": "4f29cdc8e4b0d6649770a033"}, {"code": "(fn [n]\n  (if (< n 2)\n    1\n    (reduce * (range 1 (+ n 1)))))", "problem": 42, "user": "4f2a7174e4b0d6649770a03e"}, {"code": "#( reduce * 1 (range 1 (+ % 1)))", "problem": 42, "user": "4e6279e3535d8ccf87e9fe60"}, {"code": "#(loop [n % r 1] (if (< n 2) r (recur (dec n) (* r n))))", "problem": 42, "user": "4efd8b67535de96065cf5085"}, {"code": "#(reduce * (drop 1 (range (inc %))))", "problem": 42, "user": "4e1248b1535d04ed9115e7cf"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f2c593ee4b0d6649770a053"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f03688d535dcb61093f6aac"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4f2d5f5de4b0d6649770a05a"}, {"code": "(fn [x] (reduce * (range 1 (inc x))))", "problem": 42, "user": "4f1d1299535d64f603146487"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4f1d1d95535d64f603146488"}, {"code": "(fn[x](reduce * (range 1 (inc x))))", "problem": 42, "user": "4f2046b7535d64f6031464ab"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e243bcb535d04ed9115e825"}, {"code": "(fn f [x] (if (= 0 x) 1 (* (f (dec x)) x)))", "problem": 42, "user": "4f0f01c0535d0136e6c22329"}, {"code": "(fn foo [n] (if (<= n 1) 1 (* n (foo (- n 1)))))", "problem": 42, "user": "4f2ef48be4b0d6649770a06c"}, {"code": "(fn fac [x] (if (< x 1) 1\n            (* x (fac(dec x)))))", "problem": 42, "user": "4f2aff4de4b0d6649770a044"}, {"code": "#(apply * (range 1 (+ 1 %)))", "problem": 42, "user": "4e6a5a32535d8ccf87e9fed0"}, {"code": "(fn [x] (reduce * (range x 0 -1)))", "problem": 42, "user": "4f18677d535d64f603146459"}, {"code": "(fn [n]\n  (reduce * (map inc (range n))))", "problem": 42, "user": "4f28c979e4b0d6649770a01a"}, {"code": "(fn fib [x]\n  (loop [n x\n         fib 1]\n    (cond\n     (<= n 1) fib\n     :else (recur (dec n) (* fib n)))))", "problem": 42, "user": "4f192b29535d64f603146464"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4f2de7e9e4b0d6649770a061"}, {"code": "#(reduce * (range % 0 -1))", "problem": 42, "user": "4f2e0369e4b0d6649770a064"}, {"code": "(fn fact [n]\n  (cond\n    (= n 1) 1\n    :else (* n (fact (dec n)))))", "problem": 42, "user": "4f31519ae4b0d6649770a086"}, {"code": "(fn [n]\n    (loop [cnt n acc 1]\n       (if (zero? cnt)\n            acc\n          (recur (dec cnt) (* acc cnt)))))", "problem": 42, "user": "4edb314d535d10e5ff6f5317"}, {"code": "#(reduce * (range 1 (+ 1 %)))", "problem": 42, "user": "4ee1f2ba535d10e5ff6f535f"}, {"code": "(fn [i]\n  (loop [i i, r 1]\n    (if (= 0 i) r (recur (dec i) (* r i)))))", "problem": 42, "user": "4f301d02e4b0d6649770a072"}, {"code": "(fn fib [x] (if (= 0 x) 1 (* (fib (dec x)) x)))", "problem": 42, "user": "4f31ad57e4b0d6649770a089"}, {"code": "(fn [n] \n   (loop [x n accum 1]\n     (if (= x 0) accum \n       (recur (dec x) (* accum x)))))", "problem": 42, "user": "4f2f6678e4b0d6649770a06e"}, {"code": "(fn [n]\n  (loop [acc 1 i 1]\n    (if (> i n)\n      acc\n      (recur (* acc i) (+ i 1)))))", "problem": 42, "user": "4f036d18535dcb61093f6abe"}, {"code": "#(reduce * (take % (iterate inc 1)))", "problem": 42, "user": "4eb9353f535dfed6da9c6d4e"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4dc1bd76535d020aff1edf8d"}, {"code": "#(reduce * (take % (iterate dec %)))", "problem": 42, "user": "4e36e647535deb9a81d77f36"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e8fb386535d65386fec2150"}, {"code": "#(reduce * (range 1 (+ % 1)))", "problem": 42, "user": "4f2582bae4b0d66497709ff6"}, {"code": "(fn ! [x]\n  (if (= 1 x)\n    1\n    (* x (! (dec x)))))", "problem": 42, "user": "4f32a7f1e4b0d6649770a095"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4ea84250535d7eef308072f5"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f341320e4b0e243712b1eb4"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f2b0951e4b0d6649770a045"}, {"code": "(fn [x]\r\n     (loop [x1 x, acc 1]\r\n\t      (if (= 1 x1)\r\n\t\t  acc\r\n\t\t  (recur (dec x1) (* acc x1)))))", "problem": 42, "user": "4f34eb87e4b0e243712b1eba"}, {"code": "(fn [n]\n    (loop [cnt n acc 1]\n       (if (zero? cnt)\n            acc\n          (recur (dec cnt) (* acc cnt)))))", "problem": 42, "user": "4e526cc4535d302ef430da74"}, {"code": "#(apply * (range 2 (inc %)))", "problem": 42, "user": "4ef48422535dced4c769f236"}, {"code": "#(reduce * (take % (iterate inc 1)))", "problem": 42, "user": "4f378631e4b0e243712b1ed3"}, {"code": "(fn _factorial [x]\n    (if (= x 1)\n      x\n      (* x (_factorial (dec x)))))", "problem": 42, "user": "4e48b61d535dc968683fc4be"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f3444b7e4b0e243712b1eb6"}, {"code": "(fn [n]\r\n  ((fn [n res]\r\n     (if (= 1 n)\r\n       res\r\n       (recur (dec n) (* res n)))) n 1))", "problem": 42, "user": "4f359c7ee4b0e243712b1ec4"}, {"code": "#(reduce * (range 1 (+ 1 %)))", "problem": 42, "user": "4f35e662e4b0e243712b1ec6"}, {"code": "(fn [x] (reduce * (range 1 (+ x 1))))", "problem": 42, "user": "4f384abde4b0e243712b1eda"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f2c2ccbe4b0d6649770a050"}, {"code": "(fn [x] (reduce * (range 1 (inc x))))", "problem": 42, "user": "4f339c04e4b0d6649770a09c"}, {"code": "(fn [n]\n  (loop [i n fact n]\n    (if (= i 1)\n    fact\n    (recur (- i 1) (* fact (- i 1))))))", "problem": 42, "user": "4f043bbd535dcb61093f6bb2"}, {"code": "#(loop [n % r 1]\n         (if (> n 0)\n           (recur (dec n) (* r n))\n           r))", "problem": 42, "user": "4f1bee08535d64f60314647e"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4f39f902e4b0e243712b1efe"}, {"code": "(fn [x]\n  (reduce * (range 1 (inc x))))", "problem": 42, "user": "4f29eb2ae4b0d6649770a037"}, {"code": "(fn [x]\n   (letfn [(fact [n]\n      (if (= n 0) 1\n  (* n (fact (- n 1)))))]\n (fact x)))", "problem": 42, "user": "4e6a52cb535d8ccf87e9feca"}, {"code": "(fn [n]\n  (loop [i 1 result 1]\n    (if (> i n) result\n        (recur (inc i) (* result i)))))", "problem": 42, "user": "4f38d6bbe4b0e243712b1ee2"}, {"code": "#(apply * % (range 2 %))", "problem": 42, "user": "4f15de56535d64f603146448"}, {"code": "(fn [n]\n  (loop [cnt n acc 1]\n    (if (zero? cnt)\n      acc\n      (recur (dec cnt) (* acc cnt)))))", "problem": 42, "user": "4f36f5f2e4b0e243712b1ece"}, {"code": "(fn [n] (loop [i n a 1] (if (zero? i) a (recur (dec i) (* a i)))) )", "problem": 42, "user": "4f3c0c0fe4b0e243712b1f3d"}, {"code": "(fn [x]\n  (reduce * (take x (iterate dec x))))", "problem": 42, "user": "4f329974e4b0d6649770a093"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4f312c35e4b0d6649770a084"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4f3cd535e4b0e243712b1f56"}, {"code": "(fn [n] (reduce * (range 1 (+ n 1))))", "problem": 42, "user": "4f3ca5a6e4b0e243712b1f53"}, {"code": "(fn fac [x] (if (== x 1) 1 (* x (fac(dec x)))))", "problem": 42, "user": "4f3cc2fbe4b0e243712b1f55"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4ddbf54e535d02782fcbe9ff"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e372223535deb9a81d77f39"}, {"code": "(fn [n & acc]\n  (cond (nil? acc) (recur n 1)\n        (= 1 n) acc\n        :else (recur (dec n) (* n acc))))", "problem": 42, "user": "4f343e60e4b0e243712b1eb5"}, {"code": "(fn [x] (apply * (range 1 (+ x 1))))", "problem": 42, "user": "4f0f3725535d0136e6c22337"}, {"code": "(fn [n] (\n        (fn [n a]\n            (if (= n 1)\n                a\n                (recur (- n 1)\n                        (* n a))\n            )\n        )\n        n 1))", "problem": 42, "user": "4f404dcee4b0e243712b1fb0"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e1b8106535d04ed9115e801"}, {"code": "#(reduce * (range 1 (+ 1 %)))", "problem": 42, "user": "4ec1e953535dfed6da9c6db8"}, {"code": "(fn [x]\n  (loop [accum 1 n x]\n    (if (= n 1)\n      accum\n      (recur (* accum n) (dec n)))))", "problem": 42, "user": "4f107e0e535d64f60314641c"}, {"code": "(fn [n]\n  (reduce * (range 1 (+ n 1))))", "problem": 42, "user": "4f418eaee4b0d7d3c9f3fce9"}, {"code": "(fn f [n]\n  (if\n    (= n 0) 1\n    (* n (f (- n 1)))))", "problem": 42, "user": "4f3d83b5e4b0e243712b1f69"}, {"code": "#(reduce * (take % (iterate inc 1)))", "problem": 42, "user": "4ef77edb535dced4c769f254"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f17df72535d64f603146458"}, {"code": "(fn ff[x] (if(> x 1)(* x (ff (- x 1))) 1 ))", "problem": 42, "user": "4f4003d9e4b0e243712b1fa5"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f4274f2e4b0d7d3c9f3fd00"}, {"code": "#(reduce * (range 1 (+ 1 %)))", "problem": 42, "user": "4f426a7ae4b0d7d3c9f3fcff"}, {"code": "(fn [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "4f0da4e4535d0136e6c22319"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f3e2fbbe4b0e243712b1f7e"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4ebaf790535dfed6da9c6d6e"}, {"code": "#(apply * (range 1 (inc %)) )", "problem": 42, "user": "4f3976aee4b0e243712b1eea"}, {"code": "#(reduce * 1 (range 1 (inc %)))", "problem": 42, "user": "4e6ec58c535d5021c1a89611"}, {"code": "#(loop [a % b 1] (if (= a 1) b (recur (dec a) (* a b))))", "problem": 42, "user": "4eb9d8f8535dfed6da9c6d61"}, {"code": "(fn [x]\n  (loop [n 1 acc 1]\n    (if (> n x)\n      acc\n      (recur (inc n) (* acc n)))))", "problem": 42, "user": "4f40f055e4b0e243712b1fc2"}, {"code": "#(reduce * (range 1 (inc %1)))", "problem": 42, "user": "4f3c772de4b0e243712b1f4c"}, {"code": "(fn [number]\n  (reduce *\n    (map inc \n      (range number))))", "problem": 42, "user": "4ee259a1535d10e5ff6f5366"}, {"code": "(fn fac [x] (if (= 1 x) x (* (fac (- x 1)) x)))", "problem": 42, "user": "4f307b02e4b0d6649770a079"}, {"code": "(fn\n  [size & result]\n  (if (> size 0)\n    (recur (dec size) (* size (if (nil? result) 1 result)))\n    result))", "problem": 42, "user": "4f4544e1e4b0d56e7bb92b7a"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4f387c2ee4b0e243712b1edd"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f065217535dcb61093f6c0c"}, {"code": "#(apply * (take % (iterate (partial + 1) 1)))", "problem": 42, "user": "4f474f43e4b0d56e7bb92bb7"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4f382eb7e4b0e243712b1ed9"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f38b7d9e4b0e243712b1ee0"}, {"code": "#(reduce * (range 1 (+ 1 %)))", "problem": 42, "user": "4ec6f4ee535d6d7199dd36dc"}, {"code": "(fn fac [n] (if (> n 1) (* n (fac (dec n))) 1))", "problem": 42, "user": "4f46df00e4b0d56e7bb92bac"}, {"code": "#(->> % inc range rest (apply *))", "problem": 42, "user": "4f2baf1ae4b0d6649770a04c"}, {"code": "(fn fact [n] (if (< n 1) 1 (* n (fact (dec n)))))", "problem": 42, "user": "4f482e3be4b0d56e7bb92bd4"}, {"code": "#(reduce * (range 1 (+ 1 %)))", "problem": 42, "user": "4f4319ebe4b0d7d3c9f3fd13"}, {"code": "#(reduce * (take-while (partial < 0) (iterate dec %)))", "problem": 42, "user": "4f2f7e87e4b0d6649770a06f"}, {"code": "(fn find-fac [x]\n     (if (zero? x) 1\n       (* x (find-fac (dec x)))))", "problem": 42, "user": "4eb6f065535d7eef30807372"}, {"code": "(fn f [n]\n  (if (= 1 n) 1\n   (* n (f (- n 1)))))", "problem": 42, "user": "4f3242bae4b0d6649770a08f"}, {"code": "(fn [n]\n  (if (= n 0)\n      1\n      (reduce * (take n (iterate inc 1)))))", "problem": 42, "user": "4f4ba29ae4b03ad3f0c10c7a"}, {"code": "(fn [x] (apply * (range 1 (inc x))))", "problem": 42, "user": "4f3ec266e4b0e243712b1f8c"}, {"code": "(fn fac [x] (if (= x 1) 1 (* x (fac (dec x)))))", "problem": 42, "user": "4f03ba9c535dcb61093f6b58"}, {"code": "#(reduce * (range 1 (+ % 1)))", "problem": 42, "user": "4f3024bfe4b0d6649770a074"}, {"code": "#(apply * (range 1 (+ % 1)))", "problem": 42, "user": "4f4ac35ae4b0d56e7bb92c18"}, {"code": "(fn fac[n]\n  ( reduce * (range 1 (inc n))))", "problem": 42, "user": "4f4c6b21e4b03ad3f0c10c8f"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f3e5e87e4b0e243712b1f83"}, {"code": "(fn [num] (reduce #(* %1 %2) (range 1 (inc num))))", "problem": 42, "user": "4f2acb29e4b0d6649770a040"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f4e7c01e4b03ad3f0c10cc9"}, {"code": "#(loop [x % y 1] \n  (if (= 0 x) y\n              (recur (- x 1)\n                     (* y x))))", "problem": 42, "user": "4f4bbda0e4b03ad3f0c10c7b"}, {"code": "(fn fac [n]\n  (loop [x 1 mult n]\n  (if (zero? mult)\n    x\n    (recur (* x mult) (dec mult)))))", "problem": 42, "user": "4f4e91a9e4b03ad3f0c10cca"}, {"code": "#(reduce * 1 (range 1 (inc %)))", "problem": 42, "user": "4f4e4ecbe4b03ad3f0c10cbf"}, {"code": "(fn fact [n]\n  (reduce * (rest (range (inc n)))))", "problem": 42, "user": "4f282da7e4b0d6649770a013"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4f4fac2ae4b03ad3f0c10ce5"}, {"code": "#(reduce * 1 (rest (range (inc %))))", "problem": 42, "user": "4f047177535dcb61093f6bc6"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4f4f0287e4b03ad3f0c10cd7"}, {"code": "(fn ! [n]\n  (loop [i n acc 1]\n    (if (zero? i)\n        acc\n        (recur (dec i) (* acc i)))))", "problem": 42, "user": "4f50c414e4b03ad3f0c10d0d"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f3e6244e4b0e243712b1f85"}, {"code": "(fn factorial [arg]\n    (cond (= arg 1) 1\n          :else (* arg (factorial (dec arg)))))", "problem": 42, "user": "4f4a8707e4b0d56e7bb92c12"}, {"code": "(fn fac [x]\n  (if (= x 1)\n    x\n    (* x (fac (- x 1)))))", "problem": 42, "user": "4f4f08c8e4b03ad3f0c10cd8"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4db2f208535df7e46ed9b6c9"}, {"code": "(fn [x] (reduce * (range 1 (inc x))))", "problem": 42, "user": "4f4ff5a8e4b03ad3f0c10cf3"}, {"code": "(fn fact [n]\n  (reduce * (range 1 (inc n))))", "problem": 42, "user": "4db8d37d535d1e037afb219c"}, {"code": "#(\n(fn fact [x acc] (if (< x 2) acc (recur (- x 1) (* acc x)))) % 1)", "problem": 42, "user": "4f51e8a4e4b03ad3f0c10d2d"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f5030a9e4b03ad3f0c10cfd"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f25c4c4e4b0d66497709ffc"}, {"code": "(fn fib [n] (if (= 1 n) 1 (* n (fib (dec n)))))", "problem": 42, "user": "4f0404df535dcb61093f6b91"}, {"code": "(fn [x]\n  (loop [x x\n         acc 1]\n    (if (< x 2)\n        acc\n        (recur (dec x) (* acc x)))))", "problem": 42, "user": "4ed60c9c535d10e5ff6f52dd"}, {"code": "(fn factorial[x]\n  (if (= x 1) x (* x (factorial (dec x))))\n)", "problem": 42, "user": "4f542fd9e4b0a7574ea717db"}, {"code": "(fn [n] (reduce * (range 1 (+ 1 n))))", "problem": 42, "user": "4f2893d0e4b0d6649770a019"}, {"code": "(fn [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "4f569218e4b0a7574ea71826"}, {"code": "(fn fact [n]\n  (if (<= n 1) 1\n  (* (fact (dec n)) n)))", "problem": 42, "user": "4f566178e4b0a7574ea71820"}, {"code": "#(reduce * (range 1 (+ 1 %)))", "problem": 42, "user": "4f5694cae4b0a7574ea71827"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f567cdbe4b0a7574ea71824"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f4e6d21e4b03ad3f0c10cc5"}, {"code": "(fn myFact [x n] (if (<= x n)\n  \t\t\t(* x (myFact (+ 1 x) n))\n\t\t\t\t1  \n\t\t\t)\n\t)\n1", "problem": 42, "user": "4f3bfce2e4b0e243712b1f38"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4f45c72be4b0d56e7bb92b8a"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4f4a5ca6e4b0d56e7bb92c0f"}, {"code": "(fn fac[n] (if (> n 1) (* n (fac (dec n))) 1))", "problem": 42, "user": "4e8b1fa2535d65386fec2118"}, {"code": "#(reduce * (range 1 (+ 1 %)))", "problem": 42, "user": "4f29afc7e4b0d6649770a02e"}, {"code": "(fn [x]\n  (loop [y x z 1]\n    (if (= 1 y)\n      z\n      (recur (dec y) (* z y)))))", "problem": 42, "user": "4dd9d299535d2dad7130b5dd"}, {"code": "(fn factorial [x]\r\n  (if (= x 0)\r\n    1\r\n    (* x (factorial(- x 1)))))", "problem": 42, "user": "4f54e6f8e4b0a7574ea717ef"}, {"code": "#(reduce * 1 (range 1 (inc %)))", "problem": 42, "user": "4f569a3ce4b0a7574ea71828"}, {"code": "(fn [n]\r\n  (apply * (range 1 (inc n))))", "problem": 42, "user": "4f50be5de4b03ad3f0c10d0c"}, {"code": "#(reduce * 1 (range 1 (inc %)))", "problem": 42, "user": "4f4fbed7e4b03ad3f0c10ce8"}, {"code": "(fn factorial [n]\r\n  (reduce * (range 1 (inc n))))", "problem": 42, "user": "4f500769e4b03ad3f0c10cf8"}, {"code": "(fn [n]\n  (apply * (range 1 (inc n))))", "problem": 42, "user": "4f4be1cae4b03ad3f0c10c81"}, {"code": "(fn [n]\r\n  (apply * (range 1 (inc n))))", "problem": 42, "user": "4f4feb95e4b03ad3f0c10cf0"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f528bcde4b03ad3f0c10d3e"}, {"code": "#(reduce * (rest (rest (range (inc %)))))", "problem": 42, "user": "4f5c0549e4b0030a34fb2b1a"}, {"code": "(fn myfact [x] (if (= x 1) 1 (* x (myfact (- x 1)))))", "problem": 42, "user": "4f524d11e4b03ad3f0c10d34"}, {"code": "#(nth (map first (iterate (fn [[fact n]]\n           (vector (* fact n) (inc n)))\n            [1 1]))\n      %)", "problem": 42, "user": "4f5cc3b8e4b0030a34fb2b2b"}, {"code": "(fn [n] (apply * (range 1 (inc n))))", "problem": 42, "user": "4f57a153e4b0a7574ea7183a"}, {"code": "(fn fact [n]\n  (if (= n 1) 1\n    (* n (fact (dec n)))))", "problem": 42, "user": "4eca2cea535d6d7199dd3702"}, {"code": "(fn [n]\n  (loop [tot 1\n         i   1]\n     (if (> i n) tot\n        (recur (* tot i) (inc i)))))", "problem": 42, "user": "4f036fb3535dcb61093f6ac8"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e5fdd68535d8ccf87e9fe4f"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4f54ecf1e4b0a7574ea717f0"}, {"code": "(fn f[a]\n  (if (= a 1)\n      1\n    (*  a  (f (dec a)))))", "problem": 42, "user": "4e53bf5e535d8a8b8723a275"}, {"code": "#(reduce * (rest (range (inc %))))", "problem": 42, "user": "4f504739e4b03ad3f0c10d00"}, {"code": "(fn [n] (apply * (range 1 (+ 1 n))))", "problem": 42, "user": "4f6010e7e4b0defedf855fa1"}, {"code": "#(reduce * (range 1 (+ % 1)))", "problem": 42, "user": "4f4ec77ae4b03ad3f0c10cd0"}, {"code": "{1 1 3 6 5 120 8 40320}", "problem": 42, "user": "4f614976e4b0defedf855fbb"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e7f5a0b535db966e863cc41"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4f6160a7e4b0defedf855fbe"}, {"code": "(fn fact [x] (if (= 1 x) 1 (* x (fact (dec x)))))", "problem": 42, "user": "4f565bebe4b0a7574ea7181e"}, {"code": "(fn [x]\n  (loop [fact 1 n x]\n    (if (= 1 n)\n      fact\n      (recur (* fact n) (dec n)))))", "problem": 42, "user": "4f604bdee4b0defedf855fa7"}, {"code": "(fn factorial [n]\n  (reduce * (range 1 (inc n))))", "problem": 42, "user": "4efa3d4b535dced4c769f270"}, {"code": "(fn fct [n]\n  (if (= n 0)\n    1\n    (* n (fct (dec n)))))", "problem": 42, "user": "4f611127e4b0defedf855fb4"}, {"code": "(fn fac [n]\n  (apply * (take n (iterate inc 1))))", "problem": 42, "user": "4f63777be4b0defedf855fe4"}, {"code": "(fn fact [n]\n  (if (= n 1)\n    1\n    (* n (fact (- n 1)))))", "problem": 42, "user": "4f559d2ce4b0a7574ea71808"}, {"code": "(fn factorial [num]\n  (loop [tot 1 n num]\n    (if (= 0 n)\n      tot\n      (recur (* tot n) (- n 1)))))", "problem": 42, "user": "4f03fb59535dcb61093f6b89"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f547d2ce4b0a7574ea717e3"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4f58fe71e4b0a7574ea7185f"}, {"code": "(fn [n]\r\n  (loop [c n acc 1]\r\n    (if (zero? c)\r\n      acc\r\n      (recur (dec c) (* c acc)))))", "problem": 42, "user": "4f629697e4b0defedf855fd6"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f651f66e4b07046d9f4ef3c"}, {"code": "#(reduce * (range 1 (+ % 1)))", "problem": 42, "user": "4e1fe7f1535d04ed9115e810"}, {"code": "(fn [n] (apply * (range 1 (inc n))))", "problem": 42, "user": "4f65eec7e4b07046d9f4ef48"}, {"code": "(fn [n]\n  (cond\n    (= n 0) 0\n    (= n 1) 1\n    :else (reduce * n (range 1 n))))", "problem": 42, "user": "4f5155a3e4b03ad3f0c10d1b"}, {"code": "(fn [a] (reduce * (range 1 (+ 1 a))))", "problem": 42, "user": "4f62b29ce4b0defedf855fd9"}, {"code": "(fn [num] \n  (loop [x num result 1]\n  (if (= x 1) result\n  (recur (dec x) (* x result)))))", "problem": 42, "user": "4eb8ec4a535dfed6da9c6d4b"}, {"code": "(fn [fact]\n  (reduce * \n    (range 1 (inc fact))))", "problem": 42, "user": "4f61be97e4b0defedf855fc5"}, {"code": "(fn fac [n]\n  (if (= 0 n) 1 (* n (fac (dec n)))))", "problem": 42, "user": "4e568873535d8a8b8723a283"}, {"code": "#(reduce * (range 1 (+ % 1)))", "problem": 42, "user": "4f6688d6e4b07046d9f4ef5d"}, {"code": "(fn pp [x] (if (= 1 x) x (* x (pp (dec x)))))", "problem": 42, "user": "4f62ef0ce4b0defedf855fdc"}, {"code": "#(apply * (range 1 (+ % 1)))", "problem": 42, "user": "4f4bd422e4b03ad3f0c10c7e"}, {"code": "#(loop [total 1 last %1]\n  (if (= last 1)\n    total\n    (recur (* total last) (dec last))\n  )\n)", "problem": 42, "user": "4ddc56e1535d02782fcbea04"}, {"code": "(fn\n  fac\n  [n]\n    (if (< n 2)\n      1\n      (* n (fac (- n 1)))))", "problem": 42, "user": "4e6ac7a8535d8ccf87e9ff03"}, {"code": "(fn f [n] (cond (> n 1) (* n (f(- n 1))) :else 1))", "problem": 42, "user": "4f6e1c40e4b07046d9f4efd4"}, {"code": "(fn [n]\n  \t\t(reduce * (range 1 (inc n))))", "problem": 42, "user": "4f4daa4ae4b03ad3f0c10cac"}, {"code": "#(loop [ans 1 n %] (if (<= n 1) ans (recur (* ans n) (dec n))))", "problem": 42, "user": "4f5edeb0e4b0030a34fb2b57"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4ef2da4f535dced4c769f224"}, {"code": "#_(fn f [n] (if (= 0 n) 1 (* n (f (dec n)))))\n\n#_#(reduce * (range 1 (inc %)))\n\n{1 1 3 6 5 120 8 40320}", "problem": 42, "user": "4f1bb9d8535d64f60314647d"}, {"code": "(fn fic_n [num]\r\n  (nth \r\n     ((fn iter[s n]\r\n      (let [sum (* s n)]\r\n      (lazy-seq (cons\r\n            sum\r\n            (iter sum (inc n) )\r\n            )\r\n                )\r\n      )\r\n    )\r\n    1 1 \r\n    ) (- num 1)\r\n     )\r\n)", "problem": 42, "user": "4f6d9d7ee4b07046d9f4efcd"}, {"code": "{1 1, 3 6, 5 120, 8 40320}", "problem": 42, "user": "4f6fbb68e4b07046d9f4efeb"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f6b4237e4b07046d9f4efa9"}, {"code": "#(reduce * (range 1 (+ % 1)))", "problem": 42, "user": "4f6fd95fe4b07046d9f4efee"}, {"code": "(fn my-fact [n]\n  (if (= n 1)\n    1\n    (* n (my-fact (dec n)))))", "problem": 42, "user": "4f70183ee4b07046d9f4eff3"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4f6a2ff2e4b07046d9f4ef98"}, {"code": "(fn [n] (apply * (range 1 (inc n))))", "problem": 42, "user": "4f6845d2e4b07046d9f4ef74"}, {"code": "#(reduce * (map inc (range %)))", "problem": 42, "user": "4f68c485e4b07046d9f4ef7c"}, {"code": "(fn [x] \n  (reduce * (range 1 (inc x))))", "problem": 42, "user": "4f65ef6de4b07046d9f4ef49"}, {"code": "#(loop [c % r 1] (if (= c 0) r (recur (dec c) (* c r))))", "problem": 42, "user": "4f69f34fe4b07046d9f4ef90"}, {"code": "(fn [n]\n       (loop [ret 1\n              n n]\n         (if (zero? n)\n           ret\n           (recur (* ret n) (dec n)))))", "problem": 42, "user": "4f463dfde4b0d56e7bb92b99"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f71f782e4b07046d9f4f018"}, {"code": "(fn factorial [n]\r\n  (reduce * (range 1 (+ n 1))))", "problem": 42, "user": "4f71db68e4b07046d9f4f015"}, {"code": "(comp (partial reduce *) rest range inc)", "problem": 42, "user": "4f706cc3e4b07046d9f4eff7"}, {"code": "(fn f [n] (if (> 2 n) 1 (* n (f (- n 1)))))", "problem": 42, "user": "4f724e56e4b07046d9f4f027"}, {"code": "#(apply * % (range 1 %))", "problem": 42, "user": "4f726dd2e4b07046d9f4f034"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4f734e93e4b07046d9f4f043"}, {"code": "#(loop [y 1 x % r 1] (if (> y x) r (recur (inc y) x (* r y))))", "problem": 42, "user": "4eb298c1535d7eef3080734b"}, {"code": "#(reduce * (take % (iterate inc 1)))", "problem": 42, "user": "4f71ba6ee4b07046d9f4f012"}, {"code": "(fn [n] (apply * (range 1 (+ n 1))))", "problem": 42, "user": "4f689a17e4b07046d9f4ef77"}, {"code": "(fn [x] (reduce * (range 1 (inc x))))", "problem": 42, "user": "4f6ba647e4b07046d9f4efaf"}, {"code": "(fn fc [x]\n  (if (= x 1) 1\n  (* x (fc (- x 1)))))", "problem": 42, "user": "4f74271ae4b044e54cd9a8f6"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4f725201e4b07046d9f4f02f"}, {"code": "(fn [n] (apply * (range 1 (inc n))))", "problem": 42, "user": "4f70afb8e4b07046d9f4effb"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f71347ae4b07046d9f4f009"}, {"code": "(fn fac [c] (if (= 0 c) 1 (* c (fac (dec c)))))", "problem": 42, "user": "4f713878e4b07046d9f4f00a"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4dafba62838c986e7473b5f7"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4f7207d3e4b07046d9f4f019"}, {"code": "#( reduce * (range 1 (+ %1 1) ))", "problem": 42, "user": "4f70a967e4b07046d9f4effa"}, {"code": "(fn [x]\n  (loop [input x\n        accum 1]\n        (if (= input 1) accum\n        (recur (dec input) (* accum input)))))", "problem": 42, "user": "4f617f66e4b0defedf855fc0"}, {"code": "#(reduce * (range 1 (+ % 1)))", "problem": 42, "user": "4f6f777de4b07046d9f4efe5"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f6ba7bce4b07046d9f4efb0"}, {"code": "(fn [x]\n    (loop [n x f 1]\n        (if (= n 1)\n            f\n            (recur (dec n) (* f n)))))", "problem": 42, "user": "4e89dbce535d3e98b8023283"}, {"code": "(fn fact [n]\n  (if (<= n 1) 1\n      (* n (fact (dec n)))))", "problem": 42, "user": "4f74fe77e4b0fbe0118ec552"}, {"code": "(fn [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "4f761a78e4b0fbe0118ec56c"}, {"code": "(fn [n]\n  (loop [acc 1, iter n]\n    (if (= iter 1)\n      acc\n      (recur (* iter acc) (dec iter)))))", "problem": 42, "user": "4f7a9416e4b06e829148e19b"}, {"code": "#(apply * (take % (iterate inc 1)))", "problem": 42, "user": "4f725466e4b07046d9f4f030"}, {"code": "(fn[x]\n  (loop [piv (dec x) fact x]\n    (if (zero? piv)\n      fact\n      (recur (dec piv) (* fact piv)))))", "problem": 42, "user": "4f6236abe4b0defedf855fcd"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f7d5328e4b06e829148e1bf"}, {"code": "#(first (nth (iterate (fn [x] [(* (first x) (inc (last x))) (inc (last x))]) [1 0]) %))", "problem": 42, "user": "4ec53cef535d6d7199dd3686"}, {"code": "#(apply * (take % (iterate dec %)))", "problem": 42, "user": "4f7b6b90e4b06e829148e1a4"}, {"code": "(fn fac [n]\n  (if (= n 1)\n    1\n    (* (fac (dec n)) n)))", "problem": 42, "user": "4f7e29dde4b06e829148e1ca"}, {"code": "(fn fac [x]\n  (if (< x 1)\n    1\n    (* x (fac (- x 1)))))", "problem": 42, "user": "4f7f0827e4b06e829148e1d5"}, {"code": "(fn fact [n]\n  (if (= n 1)\n    1\n    (* n (fact (dec n)))))", "problem": 42, "user": "4f70bcf9e4b07046d9f4effe"}, {"code": "#(apply * (range 1 (+ % 1)))", "problem": 42, "user": "4f7869c2e4b0fbe0118ec589"}, {"code": "(fn [n]\n  (apply * (range 1 (inc n))))", "problem": 42, "user": "4f7d91e6e4b06e829148e1c3"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4f461e57e4b0d56e7bb92b92"}, {"code": "(fn [x]\n  (reduce * (range 1 (inc x))))", "problem": 42, "user": "4f7fc9a1e4b033992c121bee"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f8058d1e4b033992c121bf1"}, {"code": "(fn [x]\n  (apply * (map inc (take x (range)))))", "problem": 42, "user": "4f82e14be4b033992c121c0c"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f7b6f12e4b06e829148e1a5"}, {"code": "(fn iter\n  ([n] (iter 1 n))\n  ([a n] (if (= n 0) a\n             (recur (* a n) (dec n)))))", "problem": 42, "user": "4f8345c6e4b033992c121c1b"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f49e869e4b0d56e7bb92c02"}, {"code": "(fn [x] (loop [n x result 1] (if (= 1 n) result (recur (- n 1) (* result n)))))", "problem": 42, "user": "4f122bfe535d64f603146426"}, {"code": "#(reduce * (range 1 (inc %) ) )", "problem": 42, "user": "4e81e93d535db62dc21a62bf"}, {"code": "(fn [x] (reduce * (range 1 (inc x))))", "problem": 42, "user": "4eeccfc0535d93acb0a668b5"}, {"code": "#( apply * % (range 1 % ) )", "problem": 42, "user": "4f83ee95e4b033992c121c26"}, {"code": "(fn factorial [x] (if (< x 1) 1 (* x (factorial (- x 1)))))", "problem": 42, "user": "4f84f6c3e4b033992c121c3d"}, {"code": "(fn f [x]\n  (if (<= x 1) \n    1\n    (* x (f (dec x)))\n  )\n)", "problem": 42, "user": "4f84400de4b033992c121c2e"}, {"code": "#(reduce * (range 1 (+ % 1)))", "problem": 42, "user": "4ea5727f535d7eef308072d4"}, {"code": "(fn fact [x]\n  (cond (= x 1) 1\n        :else (* x (fact (- x 1)))))", "problem": 42, "user": "4f7250cce4b07046d9f4f02a"}, {"code": "#(apply * (range % 1 -1))", "problem": 42, "user": "4f85b7b5e4b033992c121c49"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f7c2ac4e4b06e829148e1ad"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4dc78527535d8a4b2fd7428f"}, {"code": "#(reduce * 1 (range 1 (inc %)))", "problem": 42, "user": "4f7f9665e4b033992c121bea"}, {"code": "(fn fac [x]\n  (if (= x 0)\n    1\n    (* x (fac (- x 1)))))", "problem": 42, "user": "4f85ef29e4b033992c121c4d"}, {"code": "(fn fac [n] (if (= 1 n) n (* n (fac (dec n)))))", "problem": 42, "user": "4f88942be4b033992c121c6a"}, {"code": "(fn [n]\n    (loop [cnt n acc 1]\n       (if (zero? cnt)\n            acc\n          (recur (dec cnt) (* acc cnt)))))", "problem": 42, "user": "4f82f1b9e4b033992c121c0f"}, {"code": "#(* (apply * (range 1 (inc %))))", "problem": 42, "user": "4f83665ee4b033992c121c1c"}, {"code": "(fn fact [x] (if (= x 0) 1 (* x (fact (dec x)))))", "problem": 42, "user": "4f8b20fce4b02e764a0a5178"}, {"code": "(fn [x]\n  (loop [x x y 1]\n    (if (= x 0)\n      y\n      (recur (dec x) (* x y)))))", "problem": 42, "user": "4f6c6d69e4b07046d9f4efba"}, {"code": "#(reduce * (range 1 (+ 1 %)))", "problem": 42, "user": "4f8b56dae4b02e764a0a517e"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4f8592e6e4b033992c121c47"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f8aa1c1e4b02e764a0a516e"}, {"code": "#(apply * (range 1 (+ 1 %)))", "problem": 42, "user": "4f8ab084e4b02e764a0a5171"}, {"code": "#(reduce * 1 (range 1 (inc %)))", "problem": 42, "user": "4f73536ee4b07046d9f4f044"}, {"code": "(fn [x] (reduce * (range 1 (inc x))))", "problem": 42, "user": "4f748b54e4b044e54cd9a8fa"}, {"code": "#(reduce * 1 (range 1 (+ 1 %)))", "problem": 42, "user": "4f8bbb27e4b02e764a0a5182"}, {"code": "(fn [x]\n  (loop [curr-x x\n         acc-x  1]\n    (if (<= curr-x 1) acc-x\n        (recur (- curr-x 1)\n               (* acc-x curr-x)))))", "problem": 42, "user": "4e0febe6535d04ed9115e7be"}, {"code": "(fn fact [n]\n  (if (zero? n) 1\n    (* n (fact (dec n)))))", "problem": 42, "user": "4f42ae16e4b0d7d3c9f3fd09"}, {"code": "#(reduce * (range 1 (inc %1)))", "problem": 42, "user": "4f88ae35e4b033992c121c6d"}, {"code": "(fn fct[n]\n  (if (= 1 n) \n     1\n    (* n (fct (dec n)))\n  )\n)", "problem": 42, "user": "4f8ea1f7e4b0d4e659cdde69"}, {"code": "(fn [n0]\n  (loop [n (dec n0)  f n0]\n    (if (= n 0)\n      f\n      (recur (dec n) (* n f)))))", "problem": 42, "user": "4f90e238e4b0dcca54ed6c94"}, {"code": "(fn [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "4f8bb50ce4b02e764a0a5181"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4f8c5f4fe4b02e764a0a5198"}, {"code": "(fn [x] \n  (loop [a 1\n         b 1]\n    (if (= x (dec b))\n      a\n      (recur (* a b) (inc b)))))", "problem": 42, "user": "4f410b63e4b0e243712b1fc5"}, {"code": "#(reduce * % (range 2 %))", "problem": 42, "user": "4f91a38ae4b0dcca54ed6c9f"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f92709de4b0dcca54ed6cad"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f727023e4b07046d9f4f035"}, {"code": "(fn factorial [n]\n  (apply * (range 2 (inc n))))", "problem": 42, "user": "4f891abde4b033992c121c77"}, {"code": "(fn [n]\n  (apply * (range 1 (inc n))))", "problem": 42, "user": "4f91fd31e4b0dcca54ed6ca8"}, {"code": "(fn [x]\n  (reduce * (range 1 (inc x))))", "problem": 42, "user": "4f7ab8c7e4b06e829148e19c"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4f92884de4b0dcca54ed6caf"}, {"code": "(fn f [n] (if (< n 2) 1 (* n (f (dec n)))))", "problem": 42, "user": "4f9120d8e4b0dcca54ed6c96"}, {"code": "#(reduce * 1\n  (range 1 (inc %)))", "problem": 42, "user": "4f6511eee4b07046d9f4ef3a"}, {"code": "(fn [n] (loop [x n y 1] (if (= x 1) y (recur (dec x) (* x y)))))", "problem": 42, "user": "4f9336ece4b0dcca54ed6cb7"}, {"code": "(fn my-factorial\n    ([x] (my-factorial x 1))\n    ([x sum] \n      (if (= x 1)\n        sum\n      (my-factorial (dec x) (* sum x)))))", "problem": 42, "user": "4f8490fae4b033992c121c34"}, {"code": "(fn [n] (reduce * (range 1 (+ n 1))))", "problem": 42, "user": "4f8ac2bde4b02e764a0a5172"}, {"code": "#(reduce * (range 2 (inc %)))", "problem": 42, "user": "4f9597e0e4b0dcca54ed6cd4"}, {"code": ";#(apply * (range 1 (inc %)))\n(fn ff [n] (if (zero? n) 1 (* n (ff (dec n)))))", "problem": 42, "user": "4f9510b5e4b0dcca54ed6cc7"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f951375e4b0dcca54ed6cc8"}, {"code": "#(reduce * (range 1 (+ 1 %)))", "problem": 42, "user": "4e778d36535d324fb2983d71"}, {"code": "(fn fact [x]\r\n  (if (zero? x)\r\n    1\r\n    (* x (fact (dec x)))))", "problem": 42, "user": "4f20c040e4b0d66497709fcb"}, {"code": "(fn fac\n  ([num] (fac num 1))\n  ([num acc] \n    (if (= 0 num)\n    acc\n    (recur (- num 1) (* num acc)))))", "problem": 42, "user": "4ec6c878535d6d7199dd36d5"}, {"code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "problem": 42, "user": "4f890488e4b033992c121c76"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f954dbce4b0dcca54ed6ccd"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f969214e4b0dcca54ed6cdd"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4dc21233535d020aff1edf92"}, {"code": "(fn [inp] \n  (->> (rest (range inp)) (reduce * inp)))", "problem": 42, "user": "4f9754d4e4b0dcca54ed6ce9"}, {"code": "(fn [n] (apply * (take n (iterate inc 1))))", "problem": 42, "user": "4f98ead0e4b0dcca54ed6cf8"}, {"code": "#(apply * (range 1 (+ % 1)))", "problem": 42, "user": "4f8db862e4b02e764a0a51b2"}, {"code": "(fn fact \n  ([x] (fact 1 x)) \n  ([accum x] (if (zero? x) accum (fact (* accum x) (dec x)))))", "problem": 42, "user": "4f17aa97535d64f603146456"}, {"code": "#(reduce * (take % (iterate inc 1)))", "problem": 42, "user": "4f3fb586e4b0e243712b1f9c"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f991ec1e4b0dcca54ed6cfb"}, {"code": "(fn [n]\n  (loop [cnt n acc 1]\n    (if (zero? cnt) acc\n      (recur (dec cnt) (* acc cnt)))))", "problem": 42, "user": "4f98da04e4b0dcca54ed6cf7"}, {"code": "(fn [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "4f97d8f3e4b0dcca54ed6ced"}, {"code": "(fn f [n]\n  (if (< n 1) \n    1\n    (* (f (- n 1)) n)\n   ))", "problem": 42, "user": "4f9920a3e4b0dcca54ed6cfc"}, {"code": "(fn [n] (\n ( fn [step accum] (\n    if (= step 1)\n     accum\n      (recur (- step 1) (* accum step) )\n   )\n) n 1)\n)", "problem": 42, "user": "4f8da0e2e4b02e764a0a51b1"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f82f9f7e4b033992c121c10"}, {"code": "(fn fact [x]\n  (if (= x 1)\n    1\n    (* x (fact (dec x)))))", "problem": 42, "user": "4f9174d0e4b0dcca54ed6c9b"}, {"code": "(fn [x]\n  (reduce * (range 2 (inc x))))", "problem": 42, "user": "4f9b5a1ce4b0dcca54ed6d16"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f9d53f3e4b0dcca54ed6d21"}, {"code": "(fn [x]\n  (reduce * (range 1 (inc x))))", "problem": 42, "user": "4f9c7b0fe4b0dcca54ed6d1c"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f2b1893e4b0d6649770a047"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4ee77f15535d93acb0a66868"}, {"code": "(fn [n]\n    (loop [n n val 1]\n      (if (= n 1)\n        val\n        (recur (dec n) (* val n)))))", "problem": 42, "user": "4db3393e535df7e46ed9b6cc"}, {"code": "#(apply * % (range 1 %))", "problem": 42, "user": "4f9fe2b9e4b0dcca54ed6d40"}, {"code": "(fn\n  [x]\n    (reduce * (range 1 (inc x))))", "problem": 42, "user": "4f9d87fce4b0dcca54ed6d24"}, {"code": "#(apply * % (range 1 %))", "problem": 42, "user": "4f9d8083e4b0dcca54ed6d23"}, {"code": "(fn [x]\n  (reduce #(* %1 %2) (range 1 (inc x))))", "problem": 42, "user": "4f73f78de4b044e54cd9a8f3"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4f465096e4b0d56e7bb92b9a"}, {"code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "problem": 42, "user": "4f969a66e4b0dcca54ed6cde"}, {"code": "(fn [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "4fa2fa5ee4b081705acca186"}, {"code": "#(reduce * (take %1 (iterate inc 1)))", "problem": 42, "user": "4f5595d4e4b0a7574ea71805"}, {"code": "#(apply * (range 1 (+ % 1)))", "problem": 42, "user": "4f9f7daae4b0dcca54ed6d37"}, {"code": "(fn fact\n([n] (fact n 1))\n([n a] (cond (or (= n 0) (= n 1)) a\n             :default (recur (dec n) (* a n)))))", "problem": 42, "user": "4f9c4080e4b0dcca54ed6d1a"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f7d25b4e4b06e829148e1ba"}, {"code": "(fn [x] (reduce * 1 (range 1 (inc x))))", "problem": 42, "user": "4fa4ef2ee4b081705acca1a9"}, {"code": "#(apply * (range 1 (+ % 1)))", "problem": 42, "user": "4e65f9d4535d8ccf87e9fe73"}, {"code": "(fn f [x]\n  (if (> x 1)\n    (* x (f (dec x)))\n  1))", "problem": 42, "user": "4f7b3d53e4b06e829148e1a0"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4fa3f91fe4b081705acca196"}, {"code": "#(reduce * (take % (iterate inc 1)))", "problem": 42, "user": "4fa0a4b1e4b0dcca54ed6d4f"}, {"code": "(fn my-factorial\n  [n]\n  (if (> n 1)\n    (* n (my-factorial (dec n)))\n    1))", "problem": 42, "user": "4fa27e18e4b0dcca54ed6d68"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4fa5406fe4b081705acca1ac"}, {"code": "#(apply * (range 2 (inc %)))", "problem": 42, "user": "4f40ccd9e4b0e243712b1fc0"}, {"code": "(fn factorial [n]\n  (reduce * (range 1 (+ n 1))))", "problem": 42, "user": "4fa17b00e4b0dcca54ed6d5f"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4fa6440ee4b081705acca1b5"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4fa5ddfde4b081705acca1b1"}, {"code": "(fn factorial[x]\n  (if (<= x 1) 1 (* x  (factorial (- x 1)))))", "problem": 42, "user": "4fa4d900e4b081705acca1a7"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4fa30027e4b081705acca187"}, {"code": "(fn[v]\n  (loop [res 1 val v]\n    (if (= 1 val)\n      res\n    (recur (* res val)\n          (- val 1)))))", "problem": 42, "user": "4fa67274e4b081705acca1b8"}, {"code": "#(last (take (inc %) (map last (iterate (fn [[x y]] [(inc x) (* x y)]) [1 1]))))", "problem": 42, "user": "4fa58500e4b081705acca1ae"}, {"code": "#(loop [n % bang 1]\n       (if (zero? n) bang\n           (recur (dec n) (* n bang))))", "problem": 42, "user": "4fa6d532e4b081705acca1be"}, {"code": "#(->> % \n   (range)\n   (map inc)\n   (reduce *))", "problem": 42, "user": "4f9acea6e4b0dcca54ed6d10"}, {"code": "(fn [x] (reduce * (range 1 (inc x))))", "problem": 42, "user": "4fa820fde4b081705acca1ce"}, {"code": "(fn fac [x] (if (= x 0) 1 (* x (fac (- x 1)))))", "problem": 42, "user": "4fa85ae4e4b081705acca1d3"}, {"code": "#(reduce *  % (range 1 %))", "problem": 42, "user": "4f9970b3e4b0dcca54ed6cfd"}, {"code": "(fn [n] (apply * (range 1 (inc n))))", "problem": 42, "user": "4fa39b3ee4b081705acca191"}, {"code": "#(apply * (range 1 (+ 1 %)))", "problem": 42, "user": "4fa96e80e4b081705acca1df"}, {"code": "(fn [n]\n  (loop [m n, result 1]\n    (if (zero? m)\n      result\n      (recur (dec m) (* result m)))))", "problem": 42, "user": "4faa9593e4b081705acca1f9"}, {"code": "(fn [n]\n  ;; so I could use reduce, but let's practice\n  ;; tail recursion :)\n  (loop [acc 1 n n]\n    (if (= 1 n)\n      acc\n      (recur (* acc n) (dec n))\n      )\n    )\n  )", "problem": 42, "user": "4f91f5b1e4b0dcca54ed6ca7"}, {"code": "(fn [n]\n  (loop [current n fact 1]\n    (if (= current 1)\n      fact\n      (recur (dec current) (* fact current)))))", "problem": 42, "user": "4ebbb6bc535dfed6da9c6d71"}, {"code": "(fn fact [x]\n  (let [seq (range 1 (+ x 1))]\n    (reduce * seq)))", "problem": 42, "user": "4fab336be4b081705acca216"}, {"code": "#(if (zero? %2) %1 (recur (* %2 %) (- %2 1))) 1", "problem": 42, "user": "4faae01ae4b081705acca206"}, {"code": "#(apply * (take % (iterate inc 1)))", "problem": 42, "user": "4fa069c3e4b0dcca54ed6d4a"}, {"code": "#(reduce * (map inc (range %1)))", "problem": 42, "user": "4fabb1dce4b081705acca21a"}, {"code": "(fn [x] (apply * (drop 1 (range (inc x)))))", "problem": 42, "user": "4fa99ee1e4b081705acca1e4"}, {"code": "(comp (partial apply *) (comp (partial apply range) (juxt (constantly 1) inc)))", "problem": 42, "user": "4db396c7535df7e46ed9b6cf"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4facd2fae4b081705acca22f"}, {"code": "(fn fact [n]\n  (if (< n 2)\n\t 1\n     (* n (fact (dec n)))\n\t)\n)", "problem": 42, "user": "4faacc04e4b081705acca201"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f4d0a52e4b03ad3f0c10c9d"}, {"code": "#(reduce * (take % (iterate inc 1)))", "problem": 42, "user": "4fab31a8e4b081705acca215"}, {"code": "(fn [n]\r\n  (apply * (range 1 (inc n))))", "problem": 42, "user": "4f68a9bbe4b07046d9f4ef79"}, {"code": "#(reduce * (range 1 (+ % 1)))", "problem": 42, "user": "4f72147ae4b07046d9f4f01b"}, {"code": "#(reduce * (range 1 (+ % 1)))", "problem": 42, "user": "4fad77a6e4b081705acca23a"}, {"code": "(fn [n]\n  (loop [x n res 1]\n    (if (= 0 x) res\n        (recur (dec x) (* res x)))))", "problem": 42, "user": "4fadbc3fe4b081705acca23f"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4facff22e4b081705acca230"}, {"code": "#(loop [n % r 1]\n  (if (= n 1) r\n      (recur (dec n) (* r n))))", "problem": 42, "user": "4fae258de4b081705acca246"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4fad33e8e4b081705acca236"}, {"code": "(fn fact [x]\n  (if (= x 1)\n      1\n      (* x (fact (dec x)))))", "problem": 42, "user": "4fa67030e4b081705acca1b7"}, {"code": "#(apply * (range 1 (+ 1 %)))", "problem": 42, "user": "4f99cfc2e4b0dcca54ed6d02"}, {"code": "#(loop [p 1 cnt %1]\n  (if (zero? cnt)\n    p\n    (recur (* p cnt)\n            (dec cnt))))", "problem": 42, "user": "4faec810e4b081705acca24e"}, {"code": "#((fn this [i tot] \n  (cond (= i 1) tot\n    true (this (dec i) (* i tot)))) % 1)", "problem": 42, "user": "4fad89f0e4b081705acca23b"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4fab259ae4b081705acca212"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4fac1d77e4b081705acca223"}, {"code": "(fn [x] (loop [result 1 current x]\n  (if (= 0 current) result\n      (recur (* result current) (dec current)))))", "problem": 42, "user": "4f3e05a8e4b0e243712b1f79"}, {"code": "(fn fac [n]\n  (reduce * 1 (range 1 (inc n))))", "problem": 42, "user": "4e8338d6535db62dc21a62d3"}, {"code": "(fn fact [x] (\n  loop [count x acc 1] (\n    if (zero? count) \n      acc\n      (recur (dec count) (* count acc))\n)))", "problem": 42, "user": "4faff4b9e4b081705acca25d"}, {"code": "#(reduce * (range 1, (inc %)))", "problem": 42, "user": "4f8386c5e4b033992c121c1d"}, {"code": "(fn [n] (apply * (map inc (range n))))", "problem": 42, "user": "4fb2101ce4b081705acca284"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4f82ed48e4b033992c121c0e"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f9a0064e4b0dcca54ed6d03"}, {"code": "(fn factorial [n]\n  (if (<= n 1)\n    n\n    (* n ( factorial (- n 1)))))", "problem": 42, "user": "4f9a7dc0e4b0dcca54ed6d0b"}, {"code": "#(letfn [(fac [n acc]\n            (if (<= n 0)\n                acc\n                (fac (- n 1) (* n acc))))]\n    (fac %1 1))", "problem": 42, "user": "4fb4099be4b081705acca2a9"}, {"code": "(fn fact[x](if (= x 0) 1 (* x (fact (dec x)))))", "problem": 42, "user": "4fb069b1e4b081705acca266"}, {"code": "(fn [x] (reduce * (range 1 (inc x))))", "problem": 42, "user": "4fa6a491e4b081705acca1bc"}, {"code": "#(loop [acc 1 i %]\r\n  (if (zero? i)\r\n    acc\r\n    (recur (* acc i) (dec i))))", "problem": 42, "user": "4e7dec83535db169f9c796f3"}, {"code": "(fn fact [x]\n  (letfn [(fac [a b]\n    (if (== a 0)\n        b\n        (fac (- a 1) (* a b))))]\n    (fac x 1)))", "problem": 42, "user": "4f859146e4b033992c121c46"}, {"code": "#(apply * (range % 1 -1))", "problem": 42, "user": "4fb3b865e4b081705acca2a2"}, {"code": "#(reduce * (range 1 (+ 1 %)))", "problem": 42, "user": "4faa7f87e4b081705acca1f6"}, {"code": "(fn fac [n]\n  (if (= 0 n)\n      1\n      (* n (fac (dec n)))))", "problem": 42, "user": "4fab0c0ae4b081705acca20d"}, {"code": "(fn facty [n] \n  (reduce * (range 1 (inc n))))", "problem": 42, "user": "4f6bab49e4b07046d9f4efb1"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4fb54e50e4b081705acca2bb"}, {"code": "(fn f [n]\n   (if (< n 2) 1\n      (* n (f (dec n)))\n   )  \n)", "problem": 42, "user": "4fb4d4ede4b081705acca2b1"}, {"code": "(fn un [n]\n  (if (= 0 n) 1 (* (un (- n 1)) n)\n\t\t)\n\t)", "problem": 42, "user": "4f9a5d3ae4b0dcca54ed6d08"}, {"code": "(fn fact [x] (if (= 1 x) 1 (* x (fact (dec x)))))", "problem": 42, "user": "4fb510b5e4b081705acca2b8"}, {"code": "(fn [n] (reduce (fn [n acc] (* n acc)) (range 1 (inc n))))", "problem": 42, "user": "4fba7d1ee4b081705acca2e0"}, {"code": "(fn [n] (loop [count n acc 1]\n    (if (= count 1) acc (recur (- count 1) (* acc count)))))", "problem": 42, "user": "4e6eff83535d5021c1a89615"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e83bb61535db62dc21a62dd"}, {"code": "(fn [n]\n (loop [cnt n acc 1] \n(if (zero? cnt) \nacc\n(recur (dec cnt) (* acc cnt)))))", "problem": 42, "user": "4f32135ae4b0d6649770a08e"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e6a4541535d8ccf87e9feb8"}, {"code": "#(apply * (range 1 (+ % 1)))", "problem": 42, "user": "4edfdfa2535d10e5ff6f5346"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4fabbb97e4b081705acca21d"}, {"code": "(fn [n] (apply * (range 1 (inc n)) ))", "problem": 42, "user": "4eca7a87535d6d7199dd3705"}, {"code": "(fn [n] (reduce * (take n (iterate #(+ 1 %) 1))))", "problem": 42, "user": "4fb3fec7e4b081705acca2a7"}, {"code": "#(reduce * (range 1 (+ % 1)))", "problem": 42, "user": "4f7e07f4e4b06e829148e1c9"}, {"code": "#(reduce * \n  (map (fn [x] (+ x 1)) (range %)))", "problem": 42, "user": "4f8b27b3e4b02e764a0a5179"}, {"code": "(fn fact! \n  ([num]\n    (fact! num 1))\n  ([num acc]\n    (if (> num 1)\n      (fact! (dec num) (* acc num))\n      acc)))", "problem": 42, "user": "4faafccde4b081705acca209"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4f05ea25535dcb61093f6c02"}, {"code": "(fn [n]\n  (loop [f 1 n n]\n    (if (zero? n) f\n      (recur (* f n) (dec n)))))", "problem": 42, "user": "4fbd24d2e4b081705acca2ff"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4faac363e4b081705acca200"}, {"code": "#(reduce * (range 1 (+ % 1)))", "problem": 42, "user": "4fb3dd1ee4b081705acca2a5"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4ee85476535d93acb0a6687c"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4fb37882e4b081705acca2a0"}, {"code": "(fn f[s]\n  (if (< s 2)\n    s\n    (* s (f (dec s)))))", "problem": 42, "user": "4fc13433e4b081705acca32b"}, {"code": "#(reduce * % (range 1 %))", "problem": 42, "user": "4fa9da14e4b081705acca1e7"}, {"code": "#(reduce * 1 (range 1 (inc %)))", "problem": 42, "user": "4fbfe9a4e4b081705acca31f"}, {"code": "(fn fact[n] (if (= 0 n) 1 (* n (fact (- n 1)))))", "problem": 42, "user": "4fbd12a5e4b081705acca2fd"}, {"code": "#(reduce * 1 (range 1 (inc %)))", "problem": 42, "user": "4fc0853ae4b081705acca327"}, {"code": "#(reduce * (take-while (partial > (inc %)) (iterate inc 1)))", "problem": 42, "user": "4fb86dc9e4b081705acca2d8"}, {"code": "(fn [x]\n  ((fn [c fa]\n    (if (> c 1)\n      (recur (dec c) (* fa c))\n      fa)) x 1))", "problem": 42, "user": "4fbe42b7e4b081705acca30f"}, {"code": "#(apply * (range % 0 -1))", "problem": 42, "user": "4fa11204e4b0dcca54ed6d56"}, {"code": "(fn [n]\n  (letfn [(fac [n]\n            (if (= n 0)\n              1\n              (* n (fac (- n 1)))))]\n    (fac n)))", "problem": 42, "user": "4fb4f42ae4b081705acca2b4"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4fc4eadee4b081705acca353"}, {"code": "(fn factorial [n]\n    (apply * (range 1 (inc n))))", "problem": 42, "user": "4fbdcb87e4b081705acca30a"}, {"code": "(fn fact--range\n  [n] {:pre [(integer? n), (not (neg? n))]}\n  (apply *' (range 1 (inc n))))", "problem": 42, "user": "4fc6305de4b0ee37620e180b"}, {"code": "(fn fac [x] (if (= x 0) 1 (* x (fac (dec x)))))", "problem": 42, "user": "4f515bd3e4b03ad3f0c10d1f"}, {"code": "(fn ! [n]\n  (if (zero? n) 1\n      (* n (! (- n 1)))))", "problem": 42, "user": "4fb1d907e4b081705acca282"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4fb65f2fe4b081705acca2c7"}, {"code": "#(reduce * 1 (range 1 (inc %)))", "problem": 42, "user": "4fc0221ce4b081705acca322"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4fb79872e4b081705acca2d2"}, {"code": "(fn [n]\n  (apply * (range 1 (inc n))))", "problem": 42, "user": "4fc8c8d8e4b0ee37620e183b"}, {"code": "(fn [x]\n  (reduce * (range 1 (inc x))))", "problem": 42, "user": "4fc92595e4b0ee37620e1843"}, {"code": "(fn ! [n]\n  (if (= n 1)\n    1\n    (* n (! (- n 1)))))", "problem": 42, "user": "4fc50441e4b081705acca36f"}, {"code": "(fn fac\n  ([n] (fac n 1))\n  ([n r]\n    (if (= n 1)\n      r\n      (recur (dec n) (* r n)))))", "problem": 42, "user": "4fbb9d80e4b081705acca2ea"}, {"code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "problem": 42, "user": "4fc7db47e4b0ee37620e182a"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4fc18846e4b081705acca331"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4fca1cd6e4b0ee37620e184c"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4fba0877e4b081705acca2dd"}, {"code": "(fn fact [n]\n  (if (= n 1)\n    1\n    (* n (fact (- n 1)))))", "problem": 42, "user": "4fc50bcbe4b081705acca375"}, {"code": "(fn [num] \n  (reduce (fn [x y] (* x y) )  (range 1 (inc num))))", "problem": 42, "user": "4fbd292fe4b081705acca300"}, {"code": "(fn fact [n]\n  (reduce * (range 1 (+ n 1))))", "problem": 42, "user": "4fc52278e4b081705acca37c"}, {"code": "(fn fact [n]\n  (if (= 1 n)\n    1\n    (* n (fact (dec n)))\n))", "problem": 42, "user": "4fcad14ce4b0ee37620e1856"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f7431d2e4b044e54cd9a8f7"}, {"code": "(fn factorial [n]\n  (reduce * (range 1 (+ n 1))))", "problem": 42, "user": "4fcaf7a4e4b0ee37620e1857"}, {"code": "(fn fac [n] (if (= n 1) 1 (* n (fac (- n 1)))))", "problem": 42, "user": "4fb2f9b2e4b081705acca294"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4f61c3cfe4b0defedf855fc6"}, {"code": "(fn fact [x]\n  (loop [n 1, x x]\n    (if (<= x 0) n\n      (recur (* n x) (dec x)))))", "problem": 42, "user": "4fcbc18ae4b0ee37620e185c"}, {"code": "#( reduce * (range 1 (inc %)) )", "problem": 42, "user": "4fc43a8ee4b081705acca346"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4fc8f1fee4b0ee37620e183f"}, {"code": "#(apply * ((fn [x] (range 1 (inc x))) %))", "problem": 42, "user": "4f826548e4b033992c121c08"}, {"code": "#(apply * % (range 1 %))", "problem": 42, "user": "4fbacdbae4b081705acca2e5"}, {"code": "#(loop [sum 1 current %]\n  (if (= 0 current)\n    sum\n    (recur (* sum current) (dec current))))", "problem": 42, "user": "4ee52c44535d1385b2869d88"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4fc67081e4b0ee37620e1813"}, {"code": "#(apply * (range 2 (inc %)))", "problem": 42, "user": "4fce5474e4b0d4b2a7a9d451"}, {"code": "#(reduce * (range 1 (inc %)))\n;#(apply * (range 1 (inc %)))\n\n;(fn fact [x]\n;  (if (<= x 1) 1\n;    (* x (fact (dec x)))))", "problem": 42, "user": "4fcc103fe4b0ee37620e185f"}, {"code": "(fn [x] ( reduce * (range 1 (inc x))))", "problem": 42, "user": "4fccdc75e4b0ee37620e186d"}, {"code": "(fn fac[n] (cond (= n 1) 1 (> n 1) (* n (fac (- n 1)))))", "problem": 42, "user": "4f148418535d64f60314643a"}, {"code": "(fn myfact [x]\n  ;(reduce * (vec (range 1 (inc x)))))\n  (reduce * (range 1 (inc x))))", "problem": 42, "user": "4fc2e302e4b081705acca33a"}, {"code": "(fn F [x] (if (= 1 x) 1 (* x (F (dec x)))))", "problem": 42, "user": "4fc7b079e4b0ee37620e1827"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f94d3a5e4b0dcca54ed6cc5"}, {"code": "(fn fac [x]\n  (if (<= x 1) 1\n  (* x (fac (- x 1))))\n  )", "problem": 42, "user": "4ec56b5b535d6d7199dd369f"}, {"code": "(fn fac [n] (if (< n 1) 1 (* n (fac (- n 1)))))", "problem": 42, "user": "4fcebce4e4b03432b189f404"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4fbcbd50e4b081705acca2f9"}, {"code": "#(apply * (range 1 (+ 1 %1)))", "problem": 42, "user": "4fc4dca8e4b081705acca350"}, {"code": "#(loop [n % res 1]\n  (if (= n 0)\n    res\n    (recur (dec n) (* res n))))", "problem": 42, "user": "4ecbd630535df97575fdabe1"}, {"code": "; #(apply * (map inc (range %)))\n#(reduce * (map inc (range %)))", "problem": 42, "user": "4fd22e70e4b04c3a95aa041c"}, {"code": "#(reduce * (range 2 (inc %)))", "problem": 42, "user": "4daf4d2fedd6309eace4d178"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4fb12b35e4b081705acca275"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4fc8b012e4b0ee37620e1838"}, {"code": "(fn fact [x] (\r\n  apply * (range 1 (+ 1 x))\r\n))", "problem": 42, "user": "4fd459cfe4b0d4de60cee36b"}, {"code": "#(reduce * (range 1 (+ % 1)))", "problem": 42, "user": "4fc863a9e4b0ee37620e1831"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4fc52d79e4b081705acca386"}, {"code": "#(apply * (range 1 (+ 1 %)))", "problem": 42, "user": "4fb23582e4b081705acca28a"}, {"code": "(fn [x] (\n    reduce #(* %1 %2) (range 1 (inc x))\n   ))", "problem": 42, "user": "4fcf5292e4b03432b189f40e"}, {"code": "(fn fact-fun\n  [n]\n  (loop [n n acc 1]\n    (cond\n     ;; assume a starting n > 0\n     (= 1 n) acc\n     :else (recur (dec n) (* acc n)))))", "problem": 42, "user": "4fd16778e4b04c3a95aa040f"}, {"code": "(fn fact [n]\n  (cond\n    (= n 0) 1\n    (= n 1) 1\n    (> n 1) (* n (fact (- n 1)))\n    )\n  )", "problem": 42, "user": "4fc3b0d4e4b081705acca343"}, {"code": "#(loop [cnt % acc 1] (if (zero? cnt) acc (recur (dec cnt) (* cnt acc))))", "problem": 42, "user": "4e929dd0535dbda64a6f6b05"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4fd2529ae4b04c3a95aa041f"}, {"code": "#(loop [n %1 prod 1]\n       (if (zero? n) prod\n          (recur (dec n) (* n prod))))", "problem": 42, "user": "4fd11a93e4b04c3a95aa040a"}, {"code": "(fn [n]\n  (reduce * 1 (range 1 (inc n))))", "problem": 42, "user": "4fccb31be4b0ee37620e1868"}, {"code": "#(reduce * (range 1 (inc %1)))", "problem": 42, "user": "4fadbb17e4b081705acca23e"}, {"code": "#(reduce * 1 (range 1 (inc %)))", "problem": 42, "user": "4fd29d7ce4b04c3a95aa0424"}, {"code": "(fn [n] (loop [n n res 1] (if (> n 1) (recur (dec n) (* res n)) res)))", "problem": 42, "user": "4fd7962ee4b0dab7d829f385"}, {"code": "(fn fac [x] (cond\n  \t\t\t\t\t (= x 2) 2\n\t\t\t\t\t\t (= x 1) 1\n\t\t\t\t\t\t :else (* x (fac (dec x)))))", "problem": 42, "user": "4fd8544be4b0dab7d829f390"}, {"code": "#(loop [f % n (dec %)]\n  (if (zero? n) f (recur (* f n) (dec n))))", "problem": 42, "user": "4fd96694e4b05e33b9224f37"}, {"code": "(fn g [x]\n  (if (> x 0)\n    (* x (g (dec x)))\n    1))", "problem": 42, "user": "4fd2789ee4b04c3a95aa0422"}, {"code": "(fn [n]\n  (reduce * (range 1 (+ 1 n))))", "problem": 42, "user": "4fda016ae4b05e33b9224f42"}, {"code": "(fn [n]\n  (loop [ans 1 m n]\n    (if (= m 1)\n      ans\n      (recur (* ans m) (dec m)))))", "problem": 42, "user": "4fd2e5d8e4b04c3a95aa0427"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4fc6d2c1e4b0ee37620e181b"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4fc93728e4b0ee37620e1844"}, {"code": "#(apply * % (range 2 %))", "problem": 42, "user": "4ead2841535d7eef3080731e"}, {"code": "(fn fac [n] (if (> n 1) (* n (fac (dec n))) 1))", "problem": 42, "user": "4fca2ef0e4b0ee37620e184e"}, {"code": "(fn fac [n]\n  (if (= n 1)\n\t    n\n\t    (* n (fac (dec n)))))", "problem": 42, "user": "4eb99b3d535dfed6da9c6d57"}, {"code": "(fn [x] (reduce * (range 1 (inc x))))", "problem": 42, "user": "4fdd155be4b05e33b9224f76"}, {"code": "(fn [x] (apply * (range 2 (inc x))))", "problem": 42, "user": "4fd6f4d8e4b0dab7d829f37b"}, {"code": "(fn [x] (if (= x 1) 1 (if (= x 3) 6 (if (= x 5) 120 (if (= x 8) 40320)))))", "problem": 42, "user": "4fdda40de4b05e33b9224f7c"}, {"code": "(fn factorial[n] (\n  reduce #(* %1 %2) (range 1 (inc n))\n  )\n)", "problem": 42, "user": "4fce75cfe4b03432b189f400"}, {"code": "(fn fact \n  [n] (if (= n 1) 1 (* (fact (dec n)) n)))", "problem": 42, "user": "4fc66c43e4b0ee37620e1812"}, {"code": "(fn [x] (reduce * (rest (range (+ x 1)))))", "problem": 42, "user": "4fd6028ce4b0d4de60cee37b"}, {"code": "(fn factorial [x]\n        (if (< x 2)\n            1\n            (* x (factorial (dec x)))))", "problem": 42, "user": "4fb591aee4b081705acca2c0"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4ee6166e535d93acb0a66854"}, {"code": "(fn fact [n]\n  (if (= 1 n)\n      1\n      (* n (fact (dec n)))))", "problem": 42, "user": "4fdd27f3e4b05e33b9224f78"}, {"code": "(fn [x]\n  (\n    (fn [x acc]\n      (if (= x 1) acc\n        (recur (dec x) (* x acc))))\n    x 1)\n)", "problem": 42, "user": "4fd153cee4b04c3a95aa040e"}, {"code": "#(apply * (range % 1 -1))", "problem": 42, "user": "4dad8c92c9a9d6ed1699dc57"}, {"code": "#(reduce * (range 1 (inc %1)))", "problem": 42, "user": "4f85a75ce4b033992c121c48"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4fd0af0ee4b04c3a95aa0405"}, {"code": "#(last (take % (map first (iterate (fn [[tot x]] [(* tot x) (inc x)]) [1 2]))))", "problem": 42, "user": "4fd15334e4b04c3a95aa040d"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4ed2a31c535d44c135fd68db"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4fd1fa71e4b04c3a95aa0418"}, {"code": "(fn [x]\r\n  (reduce #(* % %2) (take x (iterate #(+ 1 %) 1))))", "problem": 42, "user": "4fd9f5dbe4b05e33b9224f41"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4fcd155de4b065de69964ca3"}, {"code": "#(reduce * (take % (iterate (partial + 1) 1)))", "problem": 42, "user": "4fbfbd4fe4b081705acca31c"}, {"code": "(fn fac [n]\r\n  (if (<= n 1)\r\n      1\r\n      (* n (fac (dec n)))))", "problem": 42, "user": "4fcc6cb3e4b0ee37620e1861"}, {"code": "(fn [ s ] \n    (loop [index 1  answer 1]\n    (if (> index s)\n        answer\n        (recur (inc index)  (* answer index) ) ) ) )", "problem": 42, "user": "4fdf750be4b05e33b9224f9c"}, {"code": "(fn [n] (loop [n n x 1] (if (zero? n) x (recur (dec n) (* x n)))))", "problem": 42, "user": "4fc34787e4b081705acca33e"}, {"code": "(fn[x]\n  (if (= x 1) 1\n  (if (= x 3) 6\n  (if (= x 5) 120 40320\n))))", "problem": 42, "user": "4fe1279fe4b0dd6cd5ce3630"}, {"code": "#(reduce * (take % (iterate inc 1)))", "problem": 42, "user": "4fe2501ae4b0dd6cd5ce3644"}, {"code": "#(reduce * 1 (range 1 (+ % 1)))", "problem": 42, "user": "4f56d6f3e4b0a7574ea7182c"}, {"code": "(fn fac [n]\r\n  (loop [n n\r\n         result 1]\r\n    (if (zero? n)\r\n      result\r\n      (recur (dec n) (* result n)))))", "problem": 42, "user": "4fe54ee8e4b0e8f79898fec3"}, {"code": "#(loop [i % acc 1]\n    (if (< i 2) \n      acc \n      (recur (- i 1) (* i acc))\n    )\n  )", "problem": 42, "user": "4fe588b6e4b0e8f79898fec5"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4fdc3065e4b05e33b9224f6b"}, {"code": "(fn fact [x]\n  (if (= x 0)\n    1\n    (* x (fact (dec x)))))", "problem": 42, "user": "4fde492be4b05e33b9224f8a"}, {"code": "(fn factorial [n]\n  (if (zero? n)\n    1\n    (* n (factorial (dec n)))))", "problem": 42, "user": "4fb57e06e4b081705acca2bf"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4fe13ad7e4b0dd6cd5ce3632"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4fe84c74e4b07c9f6fd12c3c"}, {"code": "(fn [x]\n  (loop [tmp x ret 1]\n    (if (= tmp 1) ret\n(recur (dec tmp) (* ret tmp)))))", "problem": 42, "user": "4fdf5403e4b05e33b9224f98"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4fdec88fe4b05e33b9224f8e"}, {"code": "#(apply * % (range 2 %))", "problem": 42, "user": "4fdf4e2be4b05e33b9224f96"}, {"code": "#(apply * (map inc (range %)))", "problem": 42, "user": "4fe8aef4e4b07c9f6fd12c6c"}, {"code": "(fn [x] (reduce * (range 1 (inc x))))", "problem": 42, "user": "4fe1597fe4b0dd6cd5ce3633"}, {"code": "(fn [n]\n  ((fn iter [result i]\n    (if (> i n)\n      result\n      (iter (* result i) (+ i 1))))\n  1 1))", "problem": 42, "user": "4fe8e771e4b0547ebccb2431"}, {"code": "(fn [x]\n  (reduce * (range 1 (inc x))))", "problem": 42, "user": "4f81fcbfe4b033992c121c03"}, {"code": "#(->> % inc (range 1) (reduce *))", "problem": 42, "user": "4fe8d862e4b0547ebccb2428"}, {"code": "(fn [x1](loop [x x1 s x1] (if (< x 2) s (recur (dec x) (* s (dec x))))))", "problem": 42, "user": "4eda05c1535d10e5ff6f5309"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4fe868d1e4b07c9f6fd12c3f"}, {"code": "(fn factorial [n]\r\n  (apply * (range 1 (inc n))))", "problem": 42, "user": "4e7e4a1f535db169f9c7970c"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4fe88f78e4b07c9f6fd12c45"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4fe9d647e4b0547ebccb2472"}, {"code": "(fn [x] (reduce #(* %1 %2) (range 1 (+ x 1))))", "problem": 42, "user": "4f07ad89535dcb61093f6c2a"}, {"code": "(fn fact [n]\n  (if (= n 0)\n    1\n    (* n (fact (- n 1)))))", "problem": 42, "user": "4fe89efae4b07c9f6fd12c5b"}, {"code": "(fn f [n]\n  (if (< n 2)\n     1\n     (* n (f (- n 1)))))", "problem": 42, "user": "4fe87e56e4b07c9f6fd12c40"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4feada56e4b0140c20fb9c11"}, {"code": "#(apply * (rest (range (+ % 1))))", "problem": 42, "user": "4fdf2b50e4b05e33b9224f93"}, {"code": "#((fn fact [x n]\r\n      (if (<= n 1) x (fact (* n x) (dec n)))) 1 %)", "problem": 42, "user": "4fea08a9e4b0547ebccb2484"}, {"code": "(fn fact [x]\n  (if (<= x 1) 1 \n    (* x (fact (- x 1)))))", "problem": 42, "user": "4fea46ede4b0140c20fb9c03"}, {"code": "#(reduce *(take % (iterate dec %)))", "problem": 42, "user": "4fe21889e4b0dd6cd5ce3641"}, {"code": "#(apply * (range 1 (+ 1 %)))", "problem": 42, "user": "4fe9de74e4b0547ebccb2475"}, {"code": "(fn [n]\n  ((fn [n acc]\n    (if (zero? n)\n      acc\n      (recur (dec n) (* n acc))))\n    n 1))", "problem": 42, "user": "4fdb881ee4b05e33b9224f5e"}, {"code": "(fn fact [n] (if (= 1 n) 1 (* n (fact (dec n)))))", "problem": 42, "user": "4fea2de5e4b0140c20fb9bfe"}, {"code": "(fn fact [n]\n  (let [f (fn fac [p n]\n    (if (< 2 n)\n      (fac (* p (dec n)) (dec n))\n      p))]\n    (f n n) ))", "problem": 42, "user": "4e8f5dd1535d65386fec214b"}, {"code": "(fn [n]\n(letfn [\n  (fact\n    ([] (fact 1 1))\n    ([n f] (lazy-seq\n      (cons\n        f\n        (fact (inc n) (* n f))))))]\n  (nth (fact) n)\n))", "problem": 42, "user": "4fe89db2e4b07c9f6fd12c59"}, {"code": "(fn factorial [n](apply * (rest (range (inc n)))))", "problem": 42, "user": "4fae4c11e4b081705acca248"}, {"code": "(fn [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "4febb4dae4b0681fd128dc98"}, {"code": "#(reduce * (range 1 (+ % 1)))", "problem": 42, "user": "4f1ae082535d64f603146470"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4fe8da4de4b0547ebccb2429"}, {"code": "(fn f [x]\n  (if (= 1 x)\n    1\n    (* x (f (dec x)))))", "problem": 42, "user": "4fe9231ce4b0547ebccb2445"}, {"code": "(fn  [n]\n  (loop [n n a 1]\n    (if (<= n 1)\n        a\n        (recur (- n 1) (* a n)))))", "problem": 42, "user": "4feef09ae4b0678c553fc30e"}, {"code": "(fn factorial [n]\r\n  (loop [result 1 n n]\r\n    (if (= n 1)\r\n      result\r\n      (recur (* result n) (dec n)))))", "problem": 42, "user": "4fd170fce4b04c3a95aa0411"}, {"code": "(fn [i]\n  (reduce * (range 1 (inc i))))", "problem": 42, "user": "4feff3b6e4b0678c553fc31e"}, {"code": "#_ (fn f [n]\n  (if (= n 0)\n    1\n    (* n (f (dec n)))))\n\n#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4fe8b6afe4b07c9f6fd12c76"}, {"code": "(fn factorial \n  ([n] (factorial n 1))\n  ([n acc] (if (zero? n) acc (recur (dec n) (* n acc)))))", "problem": 42, "user": "4ff01fa9e4b0678c553fc321"}, {"code": "(fn add1[x] (apply * (range 1 (+ x 1) 1)))", "problem": 42, "user": "4fedec00e4b0d2a5fc2962eb"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4da8dd6e30acd6ed12482a68"}, {"code": "(fn [n]\r\n  (reduce * (range 1 (inc n))))", "problem": 42, "user": "4ff07688e4b0678c553fc324"}, {"code": "(fn [n] (apply * (range 1 (inc n))))", "problem": 42, "user": "4e95c771535dbda64a6f6b39"}, {"code": "(fn fact [x] (if (or (= 0 x)  (= 1 x)) 1 (* x (fact (dec x)))))", "problem": 42, "user": "4fd65b2be4b0d4de60cee37e"}, {"code": "(fn f [a] (if (= 0 a) 1 (-> a dec f (* a))))", "problem": 42, "user": "4ff07229e4b0678c553fc323"}, {"code": "(fn [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "4e84a7dd535db62dc21a62e2"}, {"code": "#(reduce * (take % (iterate dec %)))", "problem": 42, "user": "4fe15ffee4b0dd6cd5ce3634"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4fe83efbe4b07c9f6fd12c3b"}, {"code": "(fn fac [n]\r\n  (if (= 0 n)\r\n    1\r\n    (* n (fac (dec n)))))", "problem": 42, "user": "4ff304f4e4b0678c553fc343"}, {"code": "(fn [a] (loop [n a accum 1] (if (= n 1) accum (recur (dec n)  (* accum n)))))", "problem": 42, "user": "4db2cd84535df7e46ed9b6c6"}, {"code": "(fn fact [x] (if (< x 1) 1 (* x (fact (- x 1)))))", "problem": 42, "user": "4fd7b919e4b0dab7d829f38a"}, {"code": "(fn [n]\n  \t(reduce * 1 (rest (range (inc n)))))", "problem": 42, "user": "4e6a63fd535d8ccf87e9feda"}, {"code": "(fn fact [n] (if (= 0 n) 1 (* n (fact (- n 1)))))", "problem": 42, "user": "4ff2430ae4b0678c553fc336"}, {"code": "(fn [n] (reduce * (take n (iterate inc 1))))", "problem": 42, "user": "4ff201d7e4b0678c553fc330"}, {"code": "(fn [x]\n  (apply *\n    (for [i (range 1 (inc x))] i)))", "problem": 42, "user": "4ff5744ae4b0678c553fc36a"}, {"code": "(fn fact [i]\n  (apply * (range 1 (inc i))))", "problem": 42, "user": "4fedd2cae4b0198f34b063ba"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4ff50604e4b0678c553fc365"}, {"code": "(fn fac [n]\n  (if (= n 1) 1\n  (* n (fac (- n 1)))))", "problem": 42, "user": "4ff4c9dae4b0678c553fc360"}, {"code": "(fn [n]\r\n  (reduce * (range 1 (inc n))))", "problem": 42, "user": "4fb4ca71e4b081705acca2b0"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4ff6aea8e4b0678c553fc381"}, {"code": "(fn fact [a]\r\n\t\t(apply * (range 1 (inc a))))", "problem": 42, "user": "4feddf2ee4b0198f34b063be"}, {"code": "(fn [x]\n  (reduce * (range 1 (inc x))))", "problem": 42, "user": "4ff3e771e4b0678c553fc356"}, {"code": "(fn [a]\n  (apply * (take a (iterate inc 1))))", "problem": 42, "user": "4fea1f9ee4b0547ebccb248b"}, {"code": "#(reduce *(range 1 (inc %1)))", "problem": 42, "user": "4f95900ce4b0dcca54ed6cd3"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4ff4f5c4e4b0678c553fc362"}, {"code": "#(reduce * 1 (range 1 (inc %)))", "problem": 42, "user": "4fba77fae4b081705acca2df"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4fcc70b3e4b0ee37620e1862"}, {"code": "(fn [x]\n  (reduce * (range 1 (inc x))))", "problem": 42, "user": "4ff743fde4b0678c553fc38d"}, {"code": "(fn ! [x]\n  (if (< x 1)\n    1\n    (* x (! (dec x)))))", "problem": 42, "user": "4f0324d2535dcb61093f6a69"}, {"code": "#(reduce * (range 1 (+ % 1)))", "problem": 42, "user": "4ff673b3e4b0678c553fc37d"}, {"code": "(fn fact [x]\n  (if (< x 1) 1\n    (* x (fact (- x 1)))))", "problem": 42, "user": "4ff83003e4b0678c553fc396"}, {"code": "#(apply * (range 2 (inc %)))", "problem": 42, "user": "4ff9a200e4b0678c553fc3ab"}, {"code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "problem": 42, "user": "4ff9d4e5e4b0678c553fc3b0"}, {"code": "#(reduce * 1 (range 1 (inc %)))", "problem": 42, "user": "4fefd624e4b0678c553fc31b"}, {"code": "(fn [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "4fc9a977e4b0ee37620e1847"}, {"code": "#(reduce * (range 1 (+ 1 %)))", "problem": 42, "user": "4f230adde4b0d66497709fdf"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4fe89297e4b07c9f6fd12c4c"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e9c3648535dbda64a6f6b7d"}, {"code": "(fn fact [n] (if (= n 1) 1 (* n (fact (- n 1)))))", "problem": 42, "user": "4ff9cfd6e4b0678c553fc3af"}, {"code": "(fn fak [x] (if (= x 0) (* 1) (* x (fak (- x 1)))))", "problem": 42, "user": "4ff6ed6ae4b0678c553fc384"}, {"code": "#((fn [n acc]\n     (if (= n 0)\n       acc\n       (recur (- n 1) (* n acc)))) % 1)", "problem": 42, "user": "4ff355a1e4b0678c553fc34d"}, {"code": "(fn [n] (reduce #(* % %2) 1 (range 1 (inc n))))", "problem": 42, "user": "4f244f26e4b0d66497709fea"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4ffb38e8e4b0678c553fc3c6"}, {"code": "#(apply * (range % 0 -1))", "problem": 42, "user": "4e57d1e2535d8a8b8723a289"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4ff67852e4b0678c553fc37e"}, {"code": "(fn fact [x] (if (= x 0) 1 (* x (fact (dec x)))))", "problem": 42, "user": "4ffb61a1e4b0678c553fc3d1"}, {"code": "#(apply * (range 1N (inc %)))", "problem": 42, "user": "4ec7c32c535d6d7199dd36e6"}, {"code": "(fn [x] (reduce * (take-while #(> % 0) (iterate dec x))))", "problem": 42, "user": "4fdb02aae4b05e33b9224f56"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4fe8e719e4b0547ebccb2430"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4ff889f2e4b0678c553fc399"}, {"code": "(fn fact [n]\n  (if (> n 2)\n    (* n (fact (- n 1)))\n    n\n    )\n  )", "problem": 42, "user": "4faa6184e4b081705acca1f1"}, {"code": "(fn factorial [x]\n  (if (< x 2)\n      1\n      (* x (factorial (dec x)))))", "problem": 42, "user": "4ffe0915e4b0678c553fc3ec"}, {"code": "(fn [n] (reduce #(* %1 %2) 1 (range 1 (inc n))))", "problem": 42, "user": "4fe1a734e4b0dd6cd5ce3637"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4ffe4d43e4b0678c553fc3f1"}, {"code": "(fn fact[n] (loop [i 1 rez 1] (if (= i n) (* rez i) (recur (inc i) (* rez i)))))", "problem": 42, "user": "4e539f7e535d8a8b8723a272"}, {"code": "(fn [n]\n  (apply * (range 1 (inc n)))\n)", "problem": 42, "user": "4ffb3c50e4b0678c553fc3c8"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4ff76effe4b0678c553fc390"}, {"code": "(fn [n] (loop [rslt 1\n               num  n]\n               (if (= num 1)\n                   rslt\n                   (recur (* num rslt) (dec num)))))", "problem": 42, "user": "4ff8a89de4b0678c553fc39d"}, {"code": "(fn [n]\n  (reduce * 1 (range 1 (inc n))))", "problem": 42, "user": "4ffa213ee4b0678c553fc3b7"}, {"code": "#(loop [a %1 c 1 b 1]\n  (if (> c a)\n      b\n      (recur a (inc c) (* b c))))", "problem": 42, "user": "4ffe8193e4b0678c553fc3f4"}, {"code": "(fn [x]\n  (reduce * (take x (iterate dec x))))", "problem": 42, "user": "4ec9549d535d6d7199dd36fe"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "500159b3e4b0678c553fc419"}, {"code": "(fn fac [n] (if (= n 1) 1 (* n (fac (dec n)))))", "problem": 42, "user": "4fe8a3bde4b07c9f6fd12c61"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4eed6b32535d93acb0a668bc"}, {"code": "(fn [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "5003bb77e4b0678c553fc442"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5003deb9e4b0678c553fc445"}, {"code": "#(apply * (range 1 (+ % 1)))", "problem": 42, "user": "4ffa8affe4b0678c553fc3bd"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4fecd35fe4b0681fd128dcab"}, {"code": "#(reduce * (rest (range (+ 1 %))))", "problem": 42, "user": "4ed90014535d10e5ff6f52fe"}, {"code": "(fn [x] (reduce * (range 1 (inc x))))", "problem": 42, "user": "4ebbc2dd535dfed6da9c6d73"}, {"code": "#(reduce * (range % 0 -1))", "problem": 42, "user": "5003ee7de4b0678c553fc446"}, {"code": "(fn [x] (reduce * 1 (take x (iterate #(inc %) 1))))", "problem": 42, "user": "50045388e4b0678c553fc44e"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5002b6e5e4b0678c553fc42c"}, {"code": "(fn fac [x] \n  (if (> x 0) \n    (* (fac (dec x)) \n    x\n  ) 1))", "problem": 42, "user": "50013694e4b0678c553fc417"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5005b57de4b0678c553fc46a"}, {"code": "(fn fact [n]\n       (if (= n 0)\n       1\n       (* (fact (dec n)) n))\n       )", "problem": 42, "user": "4e4ca885535dc968683fc4df"}, {"code": "(fn [n] (loop [rst 1, x n]\n          (if (= x 1)\n               rst\n               (recur (* rst x) (- x 1)))))", "problem": 42, "user": "4fd0cb0ee4b04c3a95aa0407"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4f30896ce4b0d6649770a07b"}, {"code": "(fn[x] \n(loop [fact x n x]\n (if (= n 1)\n   fact\n  (recur (* fact (- n 1)) (- n 1))\n)))", "problem": 42, "user": "4ffd92e7e4b0678c553fc3e3"}, {"code": "(fn fact [n]\n  (if (= n 1)\n    1\n    (* n (fact (dec n)))\n  )\n)", "problem": 42, "user": "4fff00ede4b0678c553fc3fc"}, {"code": "(fn factorial [n]\n  (cond \n  (= n 1) 1\n   \t:else (* n (factorial (dec n)))))", "problem": 42, "user": "4fa09916e4b0dcca54ed6d4e"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4fbef9a6e4b081705acca316"}, {"code": "(fn fac[val]\n    (reduce * (range 1 (inc val))))", "problem": 42, "user": "50057f23e4b0678c553fc466"}, {"code": "#(reduce * 1 (range 1 (inc %)))", "problem": 42, "user": "4e944706535dbda64a6f6b11"}, {"code": "#(apply * (range 1 (+ % 1)))", "problem": 42, "user": "50090fc7e4b0144d4f561e44"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e260220535deb9a81d77ef0"}, {"code": "(fn fact[x]\n  (if (<= x 1) 1 (* x (fact (- x 1)))))", "problem": 42, "user": "50054b5ce4b0678c553fc45f"}, {"code": "(fn [n]\n  (loop [n n\n        result 1]\n        (if (= 1 n)\n          result\n        (recur (dec n) (* result n)))))", "problem": 42, "user": "4ffb529be4b0678c553fc3cd"}, {"code": "(fn ! [n]\n  (if (= n 1) 1\n  (* n (! (dec n)))))", "problem": 42, "user": "4eb6d3ab535d7eef30807370"}, {"code": "(fn fl [n] \n  (if (= n 1)\n    1\n    (* n (fl (- n 1)))))", "problem": 42, "user": "4fff57f1e4b0678c553fc3fe"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "500933a6e4b046cdb195e074"}, {"code": "(fn [i]\r\n  (reduce * (take i (iterate inc 1)))\r\n  )", "problem": 42, "user": "4fa719c0e4b081705acca1bf"}, {"code": "#(loop [f 1 i 1] (if (> i %) f (recur (* i f) (inc i))))", "problem": 42, "user": "500aa15ee4b03d00572d2d76"}, {"code": "(fn [n]\n  (reduce * (range 1 (+ 1 n))))", "problem": 42, "user": "50097962e4b03d00572d2d6c"}, {"code": "(fn [n] (reduce * (range 1 (+ n 1))))", "problem": 42, "user": "500cb910e4b05f7c30cfa698"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "500d8c49e4b07ccb9a7ddb00"}, {"code": "(fn f [n] (if (= n 0) 1 (* n (f (- n 1) ) )))", "problem": 42, "user": "4fe9cea4e4b0547ebccb2471"}, {"code": "(fn m-factorial [n]\n    (reduce #(* %1 %2) 1 (range 1 (inc n))))", "problem": 42, "user": "500cc693e4b05f7c30cfa69a"}, {"code": "(fn [n] (loop [c 1 t 1] (if (> c n) t (recur (inc c) (* t c)))))", "problem": 42, "user": "4fe900a6e4b0547ebccb243a"}, {"code": "(fn [x] (apply * x (range 1 x)))", "problem": 42, "user": "500d1db4e4b05f7c30cfa69f"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "5009fd0ae4b03d00572d2d70"}, {"code": "#(->> % (inc) (range 1 ) (apply * ) )", "problem": 42, "user": "5007cdb9e4b0b17c647f5227"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "500900dee4b0144d4f561e42"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "500854c4e4b028e089d3518c"}, {"code": "(fn [n]\n  (loop [acc 1, i n]\n    (if (zero? i)\n      acc\n      (recur (* acc i) (dec i)))))", "problem": 42, "user": "500ff421e4b0ae202717946f"}, {"code": "(fn [n]\n  (apply * (range 1 (inc n))))", "problem": 42, "user": "500f49c2e4b03ec779321688"}, {"code": "#(loop [x % sol 1]\n  (if (= x 1)\n      sol\n      (recur (- x 1) (* sol x))))", "problem": 42, "user": "5012614ee4b02a085b99dc79"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4ff9f5c5e4b0678c553fc3b4"}, {"code": "#(apply * (range 2 (inc %)))", "problem": 42, "user": "4fae0b85e4b081705acca245"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "500ee13be4b00fff93030fa1"}, {"code": "#(apply * % (range 1 %))", "problem": 42, "user": "5014718fe4b094324338f8e3"}, {"code": "(fn [x] (reduce * (range 1 (inc x))))", "problem": 42, "user": "4f8320e9e4b033992c121c18"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4ff2f0a9e4b0678c553fc341"}, {"code": "#(apply * (range 1 (+ % 1)))", "problem": 42, "user": "4f942227e4b0dcca54ed6cbe"}, {"code": "(fn fac [n]\n  (if (= n 1) \n    1 \n    (* n (fac (dec n)))))", "problem": 42, "user": "5007f751e4b0b17c647f522b"}, {"code": "(fn [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "501284d9e4b030d97e4db710"}, {"code": "#(loop [i 1 acc 1]\n              (if (> i %)\n                acc\n                (recur (inc i) (* i acc))))", "problem": 42, "user": "50142490e4b07d18bdaaf70a"}, {"code": "(fn a [n]\n  (if (< n 2) 1\n    (* n (a (dec n)))))", "problem": 42, "user": "4fda8f57e4b05e33b9224f4e"}, {"code": "(fn fact [x] (if (= x 1) x (* x (fact (- x 1)))))", "problem": 42, "user": "50063098e4b0678c553fc47a"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5014754de4b094324338f8e5"}, {"code": "(fn fact [n]\n  (if (< n 1) 1\n    (* n (fact (- n 1)))))", "problem": 42, "user": "50127fbfe4b030d97e4db70f"}, {"code": "(fn fact [x]\n  (if (> x 1)\n    (* (fact (dec x)) x)\n    1))", "problem": 42, "user": "5012aefce4b0c8732600222a"}, {"code": "(fn fact [n] (if (= n 1) 1 (* n (fact (- n 1)))))", "problem": 42, "user": "4f625f68e4b0defedf855fd2"}, {"code": "(fn fac [a] (cond\n  (= 1 a) 1\n  :else (* a (fac (dec a)))))", "problem": 42, "user": "5013141de4b0f26a0e3320a9"}, {"code": "#(reduce * (take % (iterate inc 1)))", "problem": 42, "user": "50166470e4b052339a490e76"}, {"code": "#(reduce *(range 1(+ 1%)))", "problem": 42, "user": "5017eface4b02f523d7cc5e7"}, {"code": "(fn a [n] (if (> n 1) (* n (a (dec n))) n))", "problem": 42, "user": "4fe97adde4b0547ebccb245e"}, {"code": "#(apply * (range 1 (inc %1)))", "problem": 42, "user": "4f9f9ff5e4b0dcca54ed6d3a"}, {"code": "(fn[x] \n  (reduce * (range 1 (inc x)) ))", "problem": 42, "user": "500b61b1e4b03d00572d2d81"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4fe4c09ee4b0e8f79898febb"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "501688f7e4b052339a490e7a"}, {"code": "#(reduce * (range 1 (+ 1 %)))", "problem": 42, "user": "5017f840e4b02f523d7cc5e8"}, {"code": "(fn fact [n] (reduce * (take-while #(> % 0) (iterate dec n))))", "problem": 42, "user": "5018ed15e4b011a2e0bf6412"}, {"code": "#(reduce * (reverse (take % (iterate inc 1))))", "problem": 42, "user": "50182f53e4b02f523d7cc5ec"}, {"code": "#(reduce * (range 1 (+ 1 %)))", "problem": 42, "user": "4ff76222e4b0678c553fc38e"}, {"code": "#(reduce * (take %(iterate inc 1)))", "problem": 42, "user": "4ff10dd2e4b0678c553fc32a"}, {"code": "(fn fact [n]\n   (letfn [(_fact [f i]\n                  (if (<= i 0)\n                    f\n                    (do (println \"next is \" (dec i) \", \" (* n i)) (recur (* f i) (dec i) ))))]\n     (_fact 1 n)))", "problem": 42, "user": "500ea957e4b00fff93030f9b"}, {"code": "#(loop [x % fac 1] \n  (if (= x 1) \n    fac \n    (recur (dec x) (* x fac))))", "problem": 42, "user": "4ee528fb535d1385b2869d87"}, {"code": "(fn fact [x]\n  (\n    if(= x 0) 1 (* x (fact (dec x)))\n  )\n)", "problem": 42, "user": "4fb7b80ae4b081705acca2d4"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "500e91aae4b00fff93030f99"}, {"code": "#(reduce * (range 2 (+ % 1)))", "problem": 42, "user": "4ff78679e4b0678c553fc392"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4fb5033ce4b081705acca2b5"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f9ff06ce4b0dcca54ed6d41"}, {"code": "(fn [x] (reduce * (range 1 (inc x))))", "problem": 42, "user": "4e61bb60535d8ccf87e9fe5c"}, {"code": "#(reduce * (take % (iterate inc 1)))", "problem": 42, "user": "501d34f6e4b066e56b9d0b1e"}, {"code": "(fn fac [x]\n  (when (> x 0)\n    (loop [y x res 1]\n      (if(<= y 1)\n        res\n        (recur (dec y) (* y res))))))", "problem": 42, "user": "4ed8b598535d10e5ff6f52fc"}, {"code": "(fn [n]\n  (loop [x n fac 1]\n    (if (= x 1)\n      fac\n      (recur (dec x) (* fac x)))))", "problem": 42, "user": "50052fd0e4b0678c553fc45d"}, {"code": "#(loop [x % a 1]\r\n       (if (= 0 x)\r\n            a\r\n          (recur (- x 1) (* a x))))", "problem": 42, "user": "5007c7c7e4b0b17c647f5226"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "500f336be4b03ec779321687"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4fea9154e4b0140c20fb9c0a"}, {"code": "(fn [x] (reduce * (range 1 (inc x))))", "problem": 42, "user": "501dfd54e4b051153f3b5b80"}, {"code": "#(apply * (range 1 (+ % 1)))", "problem": 42, "user": "500ec491e4b00fff93030f9e"}, {"code": "(fn asdf [x] (reduce * (for [y (range 1 (inc x))] y)))", "problem": 42, "user": "5012036ce4b0a040369c12f4"}, {"code": "(fn [x]\n  (reduce #(* %1 %2) 1 (range 1 (inc x))))", "problem": 42, "user": "501c1492e4b086d93747d180"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4e6a5158535d8ccf87e9fec5"}, {"code": "#(reduce * (range 2 (inc %)))", "problem": 42, "user": "5020692be4b0cb6ebc0a42f6"}, {"code": "(fn fact[x] (if (= 1 x) 1 (* x (fact (dec x)))))", "problem": 42, "user": "4fcf642ee4b03432b189f410"}, {"code": "#(loop [n % res 1]\n  (if (< n 2)\n    res\n    (recur (dec n) (* res n))))", "problem": 42, "user": "4f1e4ab5535d64f603146496"}, {"code": "(fn [k] \n  (loop [k k fac 1]\n    (if (= k 0)\n      fac\n      (recur (dec k) (* fac k)))))", "problem": 42, "user": "502421ebe4b09f7ee7fb4377"}, {"code": "(fn [x]\n  (loop [result 1\n        i 1]\n        (if (not= i x)\n          (recur (* result (inc i)) (inc i))\n          result)) \n)", "problem": 42, "user": "4fe610fde4b0e8f79898fece"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4f1af7e4535d64f603146471"}, {"code": "(fn [x]\n  ((fn [x y]\n    (if (= x 0) y\n      (recur (- x 1) (* x y)))) x 1))", "problem": 42, "user": "50270618e4b01614d1633feb"}, {"code": "(fn factorial [n]\n  ( if ( = n 1 ) \n    1\n    ( * n  (factorial ( - n 1 ) ) ) ) )", "problem": 42, "user": "5026916fe4b0c969f0b056e1"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "501d52a8e4b066e56b9d0b20"}, {"code": "#(apply * (range % 0 -1))", "problem": 42, "user": "50223ee2e4b0846bc458ae48"}, {"code": "(fn ! [x]\r\n  (if (= 1 x) 1\r\n    (* x (! (dec x)))))", "problem": 42, "user": "4dade9e9c9a9d6ed4799dc57"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5028cd0fe4b01614d1633ffc"}, {"code": "(fn f [n]\n  (if (= n 1)\n    1\n    (* n (f (dec n)))))", "problem": 42, "user": "4fb1325de4b081705acca276"}, {"code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "problem": 42, "user": "5028bce0e4b01614d1633ffb"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "50052d38e4b0678c553fc45c"}, {"code": "(fn [n]\n  (loop [m n, acc 1]\n    (if (<= m 1) acc (recur (dec m) (* acc m)))))", "problem": 42, "user": "502ac96de4b0614b5299611b"}, {"code": "(fn [n]\n  (reduce * (range n 0 -1)))", "problem": 42, "user": "4fd9d162e4b05e33b9224f3c"}, {"code": "(fn [n]\n  (reduce * (range 1 (+ 1 n))))", "problem": 42, "user": "502a5fa4e4b09e8f859a9fbd"}, {"code": "#(apply * (range % 1 -1))", "problem": 42, "user": "502ad2cae4b0614b5299611f"}, {"code": "(fn fac [x] (if (= 1 x) 1 (* x (fac (- x 1)))))", "problem": 42, "user": "502873a8e4b01614d1633ff8"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f2942ace4b0d6649770a01e"}, {"code": "#(reduce * (range 1 ( inc %1) ))", "problem": 42, "user": "502952c9e4b0b33e9bf6fdf1"}, {"code": "(fn fact [n] \n  (if (= n 0)\n      1\n      (* n (fact (dec n)))))", "problem": 42, "user": "501fa1aee4b0cb6ebc0a42eb"}, {"code": "(fn fac [x] \n  (if (= x 1) 1 (* x (fac (dec x)))))", "problem": 42, "user": "5025b93ce4b0c969f0b056df"}, {"code": "(fn f [n]\n  (if (= n 0) 1 (* n (f (- n 1)))))", "problem": 42, "user": "4e8a880b535d65386fec210d"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "502d387fe4b0d96a44ab202f"}, {"code": "(fn [v]\n  (loop [i v retval 1]\n    (if (< i 2)\n      retval\n      (recur (dec i) (* retval i)\n             ))))", "problem": 42, "user": "5020a3fbe4b0cb6ebc0a42f8"}, {"code": "(fn [n] \n  (reduce * 1 (range 1 (inc n))))", "problem": 42, "user": "4fb01e53e4b081705acca260"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4ff66816e4b0678c553fc37a"}, {"code": "(fn fact [x] (if (= 0 x) 1 (* x (fact (- x 1)))))", "problem": 42, "user": "502ed81ee4b06efe12e8cc7b"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4dea9fae535d08e6dec9fe02"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "502a4fdfe4b09dd42f6f3644"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "502b0804e4b063e52107afad"}, {"code": "(fn [n]\r\n  (loop [a n\r\n   b 1]\r\n    (if-not (> a 1)\r\n      b\r\n      (recur (dec a) (* b a)))))", "problem": 42, "user": "4fdc067fe4b05e33b9224f69"}, {"code": "(fn fact [x] \n  (if (= 0 x) 1 (* x (fact (- x 1)))))", "problem": 42, "user": "50295775e4b0b33e9bf6fdf2"}, {"code": "#(reduce *  (map inc (range %)))", "problem": 42, "user": "5032b398e4b00c0952a257eb"}, {"code": "(fn [x]\n  (apply * (range 1 (+ 1 x))))", "problem": 42, "user": "5030f16fe4b05b7df5a0b84b"}, {"code": "#(reduce * 1 (range 1 (inc %)))", "problem": 42, "user": "502904e0e4b0feaf66e22fad"}, {"code": "(fn [n]\n  (loop [n n s 1]\n    (if (= n 1) s\n      (recur (dec n) (* s n)))))", "problem": 42, "user": "5029fccee4b023940c84aa47"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "5032b066e4b00c0952a257ea"}, {"code": "#(loop [x % f 1]\n  (if (= 1 x) f\n    (recur (dec x) (* f x))))", "problem": 42, "user": "502bb7c0e4b0194ad32ea1a3"}, {"code": "#(apply * (take % (iterate dec %)))", "problem": 42, "user": "503255d0e4b0e78df07b092b"}, {"code": "(fn factorial [a]\n  (reduce * (range 1 (+ a 1))))", "problem": 42, "user": "5027fc0ce4b01614d1633ff2"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "502cff22e4b0b2ab8d5c7e72"}, {"code": "#(loop [sum 1 mul %]\n  (if (= mul 1)\n    sum\n    (recur (* sum mul) (dec mul))))", "problem": 42, "user": "5033a1fbe4b062bc5d7ae155"}, {"code": "(fn [x]\n  (apply * (range 1 (inc x))))", "problem": 42, "user": "502d39f8e4b0d96a44ab2032"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "50336c6be4b0c6c1199c710f"}, {"code": "#(letfn [(f [fact n]\n  (if (= n 0) fact\n    (recur (* n fact) (dec n))))\n  ] (f 1 %))", "problem": 42, "user": "502a9fdee4b095a7adb898b4"}, {"code": "#(reduce * (range 1 (inc %)) )", "problem": 42, "user": "4e952463535dbda64a6f6b31"}, {"code": "(fn [x]\n     (loop [res 1\n              ind 1]\n         (if (<= ind x)\n           (recur(* res ind ) (inc ind))\n           res\n         )\n         )\n     )", "problem": 42, "user": "50255bafe4b0b0b8afb15aa8"}, {"code": "#(reduce * (range 1 (+ 1 %)))", "problem": 42, "user": "5029131ae4b0b6c928ad61ff"}, {"code": "(fn [x]\n  (reduce * (range 1 (inc x))\n  )\n)", "problem": 42, "user": "50254e70e4b0b0b8afb15aa7"}, {"code": "(fn [n]\n  (reduce * (take n (iterate inc 1))))", "problem": 42, "user": "502940a9e4b061fd216be4b8"}, {"code": "(fn f [n]\n  (if (= n 1)\n    1\n    (* n (f (dec n)))))", "problem": 42, "user": "50361b6be4b0fbe0a74d26be"}, {"code": "(fn ! [x] (if (zero? x) 1 (* x (! (dec x)))))", "problem": 42, "user": "5034b0e1e4b062bc5d7ae167"}, {"code": "(fn f [n] (if (= n 1) 1 (* (f (- n 1)) n)))", "problem": 42, "user": "50352431e4b0a84c1d88f620"}, {"code": "#(apply * (take % (iterate dec %)))", "problem": 42, "user": "5034a14de4b062bc5d7ae165"}, {"code": "#(reduce * (range 1 (+ 1 %)))", "problem": 42, "user": "502cd12fe4b0532a782a5e39"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f3ae998e4b0e243712b1f1f"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4ded27db535d08e6dec9fe0a"}, {"code": "(fn [n]\r\n    (loop [cnt n acc 1]\r\n       (if (zero? cnt)\r\n            acc\r\n          (recur (dec cnt) (* acc cnt)))))", "problem": 42, "user": "500a0a11e4b03d00572d2d73"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5038f8d2e4b088a6a14ca75f"}, {"code": "(fn factorial [n]\n  (if (= n 1)\n    1\n  (* n (factorial (- n 1)))))", "problem": 42, "user": "4f1f8fae535d64f6031464a3"}, {"code": "#(reduce * (take % (rest (range))))", "problem": 42, "user": "503917a0e4b088a6a14ca763"}, {"code": "#(loop [p 1 n %]\n  (if (zero? n) p (recur (* p n) (dec n))))", "problem": 42, "user": "503a234de4b088a6a14ca76d"}, {"code": "#(reduce * (range % 0 -1))", "problem": 42, "user": "502d4ea0e4b02fc10c6c6e46"}, {"code": "(fn factorial\n  [x] (reduce * (range 1 (inc x))))", "problem": 42, "user": "503a5623e4b07a1917cc34d3"}, {"code": "#(loop [rst 1 multis %]\n  (if (= multis 1)\n    rst\n    (recur (* rst multis) (dec multis))))", "problem": 42, "user": "50399468e4b088a6a14ca768"}, {"code": "#(reduce * (range 1 (+ 1 %)))", "problem": 42, "user": "5035503de4b0ed9c821488f8"}, {"code": "(fn [n]\n  (loop [c n\n         f 1]\n    (if (zero? c) f\n      (recur (dec c) (* f c)))))", "problem": 42, "user": "4f58d92fe4b0a7574ea71858"}, {"code": "#(apply * (range 2 (+ 1 %)))", "problem": 42, "user": "503354c3e4b0c6c1199c710c"}, {"code": "(fn [val]\n  (reduce (fn [val1 val2] (* val1 val2)) 1\n          (range 1 (+ val 1))))", "problem": 42, "user": "4f03818e535dcb61093f6b00"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "50392c7ee4b088a6a14ca765"}, {"code": "(fn fac [n] (reduce * 1 (range 1 (inc n))))", "problem": 42, "user": "503be1f0e4b0fc0f99c2e549"}, {"code": "(fn [n]\r\n  (apply * (range 1 (inc n))))", "problem": 42, "user": "5036dea0e4b0af0658af77a4"}, {"code": "#(* % (apply * (range 1 %)))", "problem": 42, "user": "503b6995e4b07a1917cc34dd"}, {"code": "(fn [n]\n     (loop [acc n, i n]\n       (let [i- (dec i)]\n         (if (= i- 0)\n           acc\n           (recur (* acc i-) i-)))\n       ))", "problem": 42, "user": "4f616892e4b0defedf855fbf"}, {"code": "(fn [n]\n   (reduce * (map inc (range n))))", "problem": 42, "user": "503ca47fe4b06c4e0e1fa24f"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5036eba7e4b0af0658af77a5"}, {"code": "(fn [x] (reduce #(* %1 %2) (range 1 (inc x))))", "problem": 42, "user": "503d129fe4b06c4e0e1fa254"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "503de5aae4b06c4e0e1fa259"}, {"code": "(fn fac [x] (if (> x 1) (* x (fac (dec x))) 1))", "problem": 42, "user": "5012ec0ae4b0c87326002230"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "502d39c5e4b0d96a44ab2031"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e8708e3535dceadca46984e"}, {"code": "(fn [n]\n  (apply * (range 1 (inc n))))", "problem": 42, "user": "4fcf763de4b03432b189f413"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "50427899e4b0add3005c0fc2"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4fd81472e4b0dab7d829f38e"}, {"code": "(fn fact [n]\n  (loop [n n, total 1]\n     (if (zero? n)\n         total\n         (recur (dec n) (* total n)))))", "problem": 42, "user": "5032e6c8e4b0e4096af89718"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4fb266a5e4b081705acca28c"}, {"code": "(fn fac [n]\n  (if (< n 2)\n    1\n    (* n (fac (- n 1)))))", "problem": 42, "user": "50435852e4b034ff00315d22"}, {"code": "(fn [n] \n  (apply * (range 1 (inc n)) ))", "problem": 42, "user": "4f038ed6535dcb61093f6b24"}, {"code": "#(apply * (range 1 (+ % 1)))", "problem": 42, "user": "4db0114d838c48654951d9b8"}, {"code": "(fn fact\n  [n]\n    (if (> n 0)\n      (* n (fact (dec n)))\n      1))", "problem": 42, "user": "4fab1ea1e4b081705acca210"}, {"code": "#(apply * (rest (range (inc %))))", "problem": 42, "user": "50454778e4b01f6c9a8b236a"}, {"code": "#(reduce * (rest (range (inc %))))", "problem": 42, "user": "50293245e4b08353e5d459cf"}, {"code": "(fn [n] \n  (loop [num n acc 1]\n    (if (zero? num)\n      acc\n      (recur (dec num) (* acc num)))))", "problem": 42, "user": "503e7f06e4b06c4e0e1fa268"}, {"code": "#(apply * (take % (iterate inc 1)))", "problem": 42, "user": "5046b003e4b011c5dfee7727"}, {"code": "(fn fac [n]\n  (cond \n    (= n 1) 1\n    :else (* n (fac (- n 1))) \n      ))", "problem": 42, "user": "5031eb3be4b000fc67a99a84"}, {"code": "#(\n  reduce * 1 (range 1 (+ 1 %)))", "problem": 42, "user": "4f0385b9535dcb61093f6b0e"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "50479524e4b0371827a27bc4"}, {"code": "#(reduce * (rest (range (inc %))))", "problem": 42, "user": "50464831e4b011c5dfee771f"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "50431cbce4b034ff00315d1c"}, {"code": "#(reduce * (reverse (range 1 (inc %))))", "problem": 42, "user": "50481532e4b0ec70b3ef8d96"}, {"code": "(fn fac [x] \n   (cond\n   (= x 1) 1\n   :else (* x (fac (- x 1)))\n  )\n)", "problem": 42, "user": "5048202fe4b0ec70b3ef8d9a"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4f902831e4b0dcca54ed6c8b"}, {"code": "(fn [x] (apply * (range 1 (inc x))))", "problem": 42, "user": "5048f98ee4b06e644c63f1af"}, {"code": "#(reduce * (take % (iterate dec %)))", "problem": 42, "user": "50378996e4b0af0658af77ae"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "50432da5e4b034ff00315d1e"}, {"code": "(fn anon [x]\n  (cond\n    (= x 1) 1\n    true (* x (anon (dec x)))))", "problem": 42, "user": "503cc8cae4b06c4e0e1fa251"}, {"code": "#(apply * (range 1 (+ % 1)))", "problem": 42, "user": "5045ac21e4b01f6c9a8b2371"}, {"code": "#(reduce * (take % (iterate inc 1)))", "problem": 42, "user": "5047bbd1e4b0ec70b3ef8d90"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f702dcae4b07046d9f4eff4"}, {"code": "(fn [n] (reduce * (range 1 (+ 1 n))))", "problem": 42, "user": "504d0116e4b022602c20b089"}, {"code": "(fn [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "504457c0e4b01f6c9a8b2360"}, {"code": "(fn [x]\n  (reduce * (range 1 (inc x))))", "problem": 42, "user": "4db2cc55535df7e46ed9b6c5"}, {"code": "(fn fact [x]\n  (if (= x 1)\n    1\n    (* x (fact (- x 1)))))", "problem": 42, "user": "504e05cfe4b078edc5f5939d"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "504e14c2e4b078edc5f593bf"}, {"code": "(fn [n]\n  (reduce * (range 1 (+ n 1))))", "problem": 42, "user": "504e48ace4b0f6ff3350c498"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5041b3c0e4b06d8231e4facf"}, {"code": "(fn f [x] (if (< x 2) 1 (* x (f (dec x)))))", "problem": 42, "user": "504e2600e4b0f6ff3350c46f"}, {"code": "(fn fact [n] (if (= 1 n) 1 (* n (fact (dec n)))))", "problem": 42, "user": "504e13fce4b078edc5f593bc"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "504ed350e4b069badc5a33d1"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5043a536e4b034ff00315d24"}, {"code": "#(loop [n % ret 1 ] (if (= n 1) ret (recur (dec n) (* n ret))))", "problem": 42, "user": "50463347e4b011c5dfee771e"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "504e397ee4b0f6ff3350c485"}, {"code": "#(reduce * (take % (iterate inc 1)))", "problem": 42, "user": "503f923fe4b00d1a725ff2ad"}, {"code": "(fn [n]\n  (loop [n n r 1]\n    (if (zero? n) r (recur (dec n) (* n r)))))", "problem": 42, "user": "4dd29ede535dae65d5c462da"}, {"code": "(fn factorial [n] (cond (= n 1) 1 :else (* n (factorial (- n 1)))))", "problem": 42, "user": "504dff92e4b078edc5f5938a"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "504f44cfe4b0a02f9cffde65"}, {"code": "(fn [n] (apply * (take n (iterate inc 1))))", "problem": 42, "user": "504e9011e4b069badc5a33b7"}, {"code": "(fn [x] (reduce * (range 1 (+ x 1))))", "problem": 42, "user": "504e108ce4b078edc5f593b3"}, {"code": "#(reduce * 1 (range 1 (inc %)))", "problem": 42, "user": "504f2071e4b0e7ad84dbc4be"}, {"code": "(fn f [n] (if (= n 0) 1 (* n (f (dec n)))))", "problem": 42, "user": "504e15a8e4b078edc5f593c1"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4fc5a693e4b0ee37620e17fc"}, {"code": "(fn [x]\r\n  (loop [x x\r\n         sum 1]\r\n    (if (zero? x)\r\n      sum\r\n      (recur (dec x) (* sum x)))))", "problem": 42, "user": "504e2333e4b0f6ff3350c46c"}, {"code": "(fn [x]\n  (loop [n x acc 1]\n    (if (> n 0)\n      (recur (dec n) (* acc n))\n      acc)))", "problem": 42, "user": "5050b107e4b063148f524126"}, {"code": "(fn fact[n] \n  (if (= n 1) \n    n \n    (* n (fact (- n 1)))\n  )\n)", "problem": 42, "user": "504e685fe4b0f6ff3350c4ae"}, {"code": "#(loop [i % n 1]\r\n  (if (= i 1)\r\n    n\r\n    (recur (dec i) (* n i))))", "problem": 42, "user": "50456731e4b01f6c9a8b236b"}, {"code": "(fn [n]\r\n  (loop [cnt n acc 1]\r\n    (if (zero? cnt)\r\n      acc\r\n      (recur (dec cnt) (* cnt acc)))))", "problem": 42, "user": "50436470e4b034ff00315d23"}, {"code": "(fn fact [n]\n  (loop [n n fact 1]\n    (if (< n 1) fact\n    (recur (dec n) (* n fact)))))", "problem": 42, "user": "504f5804e4b0a02f9cffde72"}, {"code": "#(apply * (rest (range (inc %))))", "problem": 42, "user": "504f865ee4b0a02f9cffde90"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "504e9f5ce4b069badc5a33bd"}, {"code": "(fn [n] \n   (loop [s 1 n n]\n       (if (< n 2)\n           s\n           (recur (* s n) (dec n)))))", "problem": 42, "user": "50435689e4b034ff00315d21"}, {"code": "(fn [n]\n    (apply * (range 1 (inc n))))", "problem": 42, "user": "504e1abee4b0f6ff3350c45d"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4dd59d8b535dae65d5c462eb"}, {"code": "(fn fac [n]\n  (if (< n 2)\n    1\n    (* n (fac (dec n)))))", "problem": 42, "user": "503e6047e4b06c4e0e1fa266"}, {"code": "#(apply * (range 2 (inc %)))", "problem": 42, "user": "504e04a4e4b078edc5f59397"}, {"code": "#(reduce * (range 1 (+ % 1)))", "problem": 42, "user": "504e1fdde4b0f6ff3350c468"}, {"code": "(fn fac [x] (if (zero? x) 1 (* (fac (dec x)) x)))", "problem": 42, "user": "504ffb8fe4b0a02f9cffdeae"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "50548ce8e4b0b1b9d1860ead"}, {"code": "(fn [n]\r\n  (loop [cnt n result 1]\r\n    (if (zero? cnt)\r\n      result\r\n      (recur (dec cnt) (* cnt result)))))", "problem": 42, "user": "4fee04a0e4b0678c553fc308"}, {"code": "#(reduce * (take %1 (iterate inc 1)))", "problem": 42, "user": "50555c06e4b0ce54f56f03fa"}, {"code": "#(loop [x %\n        acc 1]\n  (if (= x 0)\n    acc\n    (recur (dec x) (* x acc))))", "problem": 42, "user": "4f045946535dcb61093f6bba"}, {"code": "(fn  f [i] (if (< i 3) i\n          (* i (f (dec i)))))", "problem": 42, "user": "5055899de4b0ce54f56f03fd"}, {"code": "(fn my-fact [x] (if (= x 1)\n                    x\n                    (* x (my-fact (dec x)))))", "problem": 42, "user": "5053de37e4b0b1b9d1860ea8"}, {"code": "(fn fact [n]\n  (if (= n 0) 1 (* n (fact (- n 1)))))", "problem": 42, "user": "4ff769bce4b0678c553fc38f"}, {"code": "#(apply * % (range 2 %))", "problem": 42, "user": "4ebbc1f6535dfed6da9c6d72"}, {"code": "#(apply * (range 1 (inc %)))\n;; obvious solution, which should be avoided\n;; since recursion is evil\n; (fn factorial [x]\n;   (if (= x 1) 1 (* x (factorial (dec x)))))", "problem": 42, "user": "5054c853e4b0b1b9d1860eb3"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "504f57c7e4b0a02f9cffde71"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5048bcf8e4b06e644c63f1ae"}, {"code": "(fn fact [n]\n  (if (= n 1)\n    n\n    (* n (fact (dec n)))))", "problem": 42, "user": "504ec4d3e4b069badc5a33c9"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "504f2efae4b0e7ad84dbc4c9"}, {"code": "#(last\n  (take (inc %) \n    (map last\n      (iterate\n        (fn [fact]\n          (conj fact (* (last fact) (count fact))))\n        [1]))))", "problem": 42, "user": "504c8165e4b09724c857af31"}, {"code": "(fn fac [n]\n  (if (< n 1)\n    1\n    (* n (fac (dec n)))))", "problem": 42, "user": "504e3afae4b0f6ff3350c488"}, {"code": "#(loop [x %1 acc 1]\n   (if (= x 1)\n       acc\n       (recur (dec x) (* x acc))))", "problem": 42, "user": "5057242fe4b0012181721986"}, {"code": "(fn [x] ((fn [a x] (if (= x 1) a (recur (* a x) (- x 1)))) 1 x))", "problem": 42, "user": "504f3f13e4b0a02f9cffde60"}, {"code": "#(reduce * (take % (iterate dec %)))", "problem": 42, "user": "504f3fa3e4b0a02f9cffde62"}, {"code": "(fn fact\n  ([n] (fact n 1))\n  ([n a] (if (zero? n) a (recur (dec n) (* n a)))))", "problem": 42, "user": "4fca2a13e4b0ee37620e184d"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "50586354e4b06522596eba78"}, {"code": "#(loop [total %1\n        left (- %1 1)]\n  (if (= 0 left)\n    total\n    (recur (* total left) (- left 1))))", "problem": 42, "user": "4e814706535db62dc21a62bb"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5040edf4e4b0ff5d2cc40db5"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4fc6e1a8e4b0ee37620e181d"}, {"code": "(fn [x]\n  ((fn [x y]\n     (if (= x 0)\n       y\n       (recur (- x 1) (* x y)))) x 1))", "problem": 42, "user": "50517ebfe4b0a561d07d8f06"}, {"code": "(fn [x]\r\n  (apply *  (range 1 (inc x))))", "problem": 42, "user": "4f9aa97ae4b0dcca54ed6d0e"}, {"code": "(fn [n]\n ((fn [acc x]\n   (if (= x 0)\n    acc\n    (recur (* acc x) (dec x)))) 1 n))", "problem": 42, "user": "505bd09fe4b032b709c81373"}, {"code": "#(loop [N % RESULT 1]\n  (if (zero? N)\n    RESULT\n    (recur (dec N) (* RESULT N))))", "problem": 42, "user": "505a2f3be4b03d2efce48c5b"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "50563ae2e4b0ce54f56f0405"}, {"code": "(fn my-fact [n]\n  (if (zero? n)\n    1\n        (* (my-fact (dec n)) n) ))", "problem": 42, "user": "5020d2aee4b0cb6ebc0a42fb"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "505d4b21e4b0e6aca564be07"}, {"code": "(fn fac [x]\n    (if (= x 1) \n        x\n        (* x (fac (- x 1)))))", "problem": 42, "user": "50588af1e4b06522596eba7d"}, {"code": "(fn [i] (reduce * i (range 1 i)))", "problem": 42, "user": "4f1427f8535d64f603146435"}, {"code": "(fn [x] (reduce * (map inc (range x))))", "problem": 42, "user": "504e8e48e4b069badc5a33b3"}, {"code": "(fn [n]\n  (loop [cur n res 1]\n    (if (zero? cur)  res\n        (recur (dec cur) (* res cur))\n    )\n  )\n)", "problem": 42, "user": "505c6432e4b032b709c81378"}, {"code": "(fn [n]\n  (reduce #(* %1 %2) (range 1 (+ n 1))))", "problem": 42, "user": "505aa653e4b021387fb89857"}, {"code": "(fn [n]\n    (loop [n n, r 1]\n      (if (= n 1) r\n          (recur (- n 1) (* r n)))))", "problem": 42, "user": "5055e7f4e4b0ce54f56f0401"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5054bc87e4b0b1b9d1860eb0"}, {"code": "(fn fact [x] (if (= x 1) 1 (* x (fact (- x 1)))))", "problem": 42, "user": "505dcfc8e4b0e6aca564be0d"}, {"code": "(fn factorial [maxn]\n  (loop [i (- maxn 1) acc maxn]\n    (if (< i 1)\n      acc\n      (recur (- i 1) (* acc i)))))", "problem": 42, "user": "4f046d70535dcb61093f6bc5"}, {"code": "(fn [n]\n  (loop [n n r 1]\n    (if (= n 1)\n      r\n      (recur (dec n) (* n r)))))", "problem": 42, "user": "4ed98b40535d10e5ff6f5307"}, {"code": "(fn [numero]\n    (letfn [\n            (factorial [numero]\n                       (if (= numero 1)\n                           numero\n                           (* numero (factorial (dec numero)))\n                         )\n              )\n           ]\n           (factorial numero)\n      )\n  )", "problem": 42, "user": "5058afbbe4b06522596eba81"}, {"code": "(fn fw [x] (if (= x 1) 1 (* x (fw (dec x))) ) )", "problem": 42, "user": "504f65bae4b0a02f9cffde7e"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5060d137e4b0dc10a69545a0"}, {"code": "(fn fac [n]\n  ( if (= 1 n) 1 (* n (fac (- n 1)))))", "problem": 42, "user": "5060c117e4b024449d699b5d"}, {"code": "( fn fact [x] ( if ( = x 1 ) 1 ( * ( fact ( - x 1 ) ) x ) ) )", "problem": 42, "user": "5061cc17e4b0a30dc9a35d34"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "50310b8be4b05b7df5a0b84d"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "504e72cee4b0f6ff3350c4b4"}, {"code": "(fn fac [n]\n  (if (= n 1) 1\n    (* n (fac (- n 1)))))", "problem": 42, "user": "504ec46de4b069badc5a33c8"}, {"code": "(fn [n]\n  (apply * (range 1 (inc n))))", "problem": 42, "user": "50630247e4b05ac47bc68d6b"}, {"code": "(fn [n]\n  (apply * (range 1 (inc n))))", "problem": 42, "user": "50611456e4b0dc10a69545a5"}, {"code": "(fn [x]\n  (loop [x x acc 1]\n    (if (or (= 0 x) (= 1 x))\n        acc\n        (recur (dec x) (* acc x)))))", "problem": 42, "user": "5063b9a0e4b075d771da6f9d"}, {"code": "(fn fact [n] (if (= 1 n) 1 (* n (fact (dec n)))))", "problem": 42, "user": "504f191ae4b0e7ad84dbc4ba"}, {"code": "(fn b [x] (* (if (= 1 x) x  (b (- x 1)\r\n)   ) x  )  )", "problem": 42, "user": "50646c01e4b007509339a58b"}, {"code": "(fn fact[x]\r\n(if (<= x 1) 1 (* x (fact (- x 1)))))", "problem": 42, "user": "505dd5c4e4b0e6aca564be0e"}, {"code": "#(reduce * (map inc (range %)))", "problem": 42, "user": "505fc8e3e4b08f2a82ad10b6"}, {"code": "#(reduce (fn [r e] (* r e)) 1 (range 1 (inc %)))", "problem": 42, "user": "5063fe48e4b075d771da6f9e"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "50645e12e4b007509339a58a"}, {"code": "#(loop [n %, res 1]\n    (if (zero? n) \n  \t  res\n      (recur (dec n) (* res n))\n      )\n    )", "problem": 42, "user": "505e3b57e4b011187b721f39"}, {"code": "(fn fact[x]\n  (loop [i x,ans 1]\n    (if(= i 1) ans (recur (- i 1) (* ans i ) ) )))", "problem": 42, "user": "5065bd94e4b0148eb3925aed"}, {"code": "(fn f [x] (if (< x 2) 1 (* x (f (- x 1)))))", "problem": 42, "user": "5054c7e1e4b0b1b9d1860eb2"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "504e3aaae4b0f6ff3350c487"}, {"code": "(fn FACT [x](if(= x 1) 1 (* x (FACT (- x 1)))))", "problem": 42, "user": "5062bc46e4b05ac47bc68d68"}, {"code": "#(reduce * 1 (range 1 (inc %)))", "problem": 42, "user": "50668a06e4b03d366d7cb2b2"}, {"code": "(fn fact [n]\n  (if (= n 1) 1\n      (* n (fact (- n 1)))))", "problem": 42, "user": "4f8b05d2e4b02e764a0a5176"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "505f55d3e4b08f2a82ad10b0"}, {"code": "(fn [n]\n  (reduce * 1 (take n (iterate inc 1))))", "problem": 42, "user": "504db141e4b021508a333965"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "50657775e4b0deb876850599"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5057852ce4b0012181721992"}, {"code": "#(reduce * (take % (iterate inc 1)))", "problem": 42, "user": "5065faf9e4b0313a384e5645"}, {"code": "(fn [v] (apply * (range 1 (inc v))))", "problem": 42, "user": "4edb4c7c535d10e5ff6f5318"}, {"code": "(fn [numb] \n  (loop [n numb result 1] \n    (if (= 1 n) result \n      (recur (dec n) (* result n)))))", "problem": 42, "user": "50621cbde4b0341461c88951"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "5041bdf3e4b06d8231e4fad0"}, {"code": "#(apply * (rest (range (inc %))))", "problem": 42, "user": "50015be1e4b0678c553fc41a"}, {"code": "(fn [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "4dbac43b535d1e037afb21ac"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4fcf254ce4b03432b189f40d"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "506617c3e4b03d366d7cb2ab"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "506a1985e4b01dc6af13f83e"}, {"code": "(fn fact [x]\n  (if (= 1 x)\n    1\n    (* x (fact (dec x)))))", "problem": 42, "user": "506b8242e4b0eda3100c090a"}, {"code": "(fn fact [n] (if (zero? n) 1 (* n (fact (dec n)))))", "problem": 42, "user": "506ab9bae4b05d3b7762c74c"}, {"code": "(fn factorial [x]\n    (reduce * (range 1 (+ 1 x))))", "problem": 42, "user": "506b0a9ce4b0a2a5463de380"}, {"code": "#(reduce * 1 (range 1 (inc %)))", "problem": 42, "user": "506b016de4b0a2a5463de37f"}, {"code": "(fn fact[x] (if (== x 1) 1 (* x (fact (- x 1)))))", "problem": 42, "user": "506717e2e4b03d366d7cb2ba"}, {"code": "(fn [x] (reduce * (range 1 (inc x))))", "problem": 42, "user": "506b18c8e4b0a2a5463de383"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "506e0e5ae4b09350ab4199eb"}, {"code": "(fn [n] (apply * (range 1 (inc n))))", "problem": 42, "user": "4f9fb08ae4b0dcca54ed6d3c"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "506ef8c3e4b09350ab4199f4"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "507056b8e4b07bd6ad9b9f29"}, {"code": "(fn tmp [n]\n        (loop [acc 1 i 1]\n              (if (> i n)\n                  acc\n                (recur (* acc i) (inc i)))))", "problem": 42, "user": "50705072e4b07bd6ad9b9f27"}, {"code": "(fn [x] (reduce * (range 1 (inc x))))", "problem": 42, "user": "5042de0de4b034ff00315d1b"}, {"code": "(fn factorial [n]\n  (reduce * (map inc (range n)))\n  )", "problem": 42, "user": "500a214de4b03d00572d2d74"}, {"code": "#(apply * (range 1 (inc %1)))\n;#(loop [n %1 r 1]\n;  (if (= 1 n)\n;    r\n;    (recur (dec n) (* r n))\n;))", "problem": 42, "user": "5070e31ee4b0e3170b5a8678"}, {"code": "(fn fact [n] (if (= n 0) 1 (* (fact (dec n)) n)))", "problem": 42, "user": "506fd0afe4b07bd6ad9b9f23"}, {"code": "(fn fact \n    ([n]\n      (fact n 1))\n    ([n m]\n      (if (= n 1)\n        m\n        (recur (dec n) (* m n)))))", "problem": 42, "user": "506f1e12e4b09350ab4199f9"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f3b5219e4b0e243712b1f2a"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "503efe01e4b06c4e0e1fa26f"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5071b614e4b0e3170b5a867d"}, {"code": "(fn mf [n] \r\n    (if (= n 1) \r\n       1 \r\n       (* n (mf (dec n)))))", "problem": 42, "user": "5071e520e4b0e3170b5a8683"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "506ec408e4b09350ab4199f1"}, {"code": "#(reduce * (range 1 (+ 1 %)))", "problem": 42, "user": "4f4c8faae4b03ad3f0c10c93"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "503f872ee4b00d1a725ff2ac"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5046f909e4b03b02161376b5"}, {"code": "#(reduce * (take % (iterate inc 1)))", "problem": 42, "user": "50618c62e4b0a30dc9a35d33"}, {"code": "#(reduce * (take % (iterate inc 1)))", "problem": 42, "user": "505f5e2fe4b08f2a82ad10b2"}, {"code": "(fn [a]\r\n  (loop [n a\r\n   m 1]\r\n    (if (zero? n)\r\n      m\r\n      (recur (dec n) (* n m)))))", "problem": 42, "user": "507437c2e4b054001656acd0"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "50481b70e4b0ec70b3ef8d98"}, {"code": "(fn [n]\r\n  (reduce * (take n (iterate inc 1) )))", "problem": 42, "user": "50576483e4b001218172198b"}, {"code": "#(apply * % (range 2 %))", "problem": 42, "user": "4e6961f0535d8ccf87e9fe9b"}, {"code": "(fn factorial [from]\n  (reduce * (range 1 (inc from))))", "problem": 42, "user": "50763574e4b0a894bb95bf3d"}, {"code": "#(reduce (fn [acc x] (* acc x)) (range 1 (+ % 1)))", "problem": 42, "user": "50783762e4b0fc74642bff67"}, {"code": "(fn [x]\n  (apply * (range 1 (inc x))))", "problem": 42, "user": "4fc7ddffe4b0ee37620e182b"}, {"code": "#(apply * % (range 1 %))", "problem": 42, "user": "507a08e4e4b08327cd804a67"}, {"code": "(fn [n] ((fn fa [n1 ac] (if (> n1 n) ac (fa (+ n1 1) (* ac n1)))) 1 1))", "problem": 42, "user": "506f5d68e4b082ae7d1032c7"}, {"code": "(fn fac [x]\n  (if (or (= x 0) (= x 1))\n    1 \n    (* x (fac (- x 1)))\n))", "problem": 42, "user": "506755b3e4b03d366d7cb2bc"}, {"code": "(fn [x]\n  (reduce * 1 (range 1 (inc x))))", "problem": 42, "user": "504eff22e4b0e7ad84dbc4a9"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "507b7dbee4b09034bfeeb71e"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4fb1d7ace4b081705acca281"}, {"code": "#(first (nth (iterate (fn [[a b]] [(reduce * (range 1 b)) (inc b)]) [2 2]) %))", "problem": 42, "user": "507a9b29e4b08327cd804a6e"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f32ef71e4b0d6649770a098"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "50799992e4b08327cd804a62"}, {"code": "(fn [n]\n  (apply * (map inc (range n))))", "problem": 42, "user": "4fceef7ae4b03432b189f40a"}, {"code": "(fn fac [i] \n  (if (< i 3) i \n    (* (fac (- i 1)) i)))", "problem": 42, "user": "507a396be4b08327cd804a69"}, {"code": "(fn fact [n]\n  (if (= n 1) 1\n     (* n (fact (- n 1)))))", "problem": 42, "user": "507db411e4b03c76e5499e06"}, {"code": "(fn fact [n]\n  (cond (= n 1) 1\n        :else (* n (fact (dec n)))))", "problem": 42, "user": "50366589e4b0fbe0a74d26c3"}, {"code": "#( (fn fact[x y] ( if(= x 1) y (fact (dec x) (* y x)))) %1 1)", "problem": 42, "user": "5034b623e4b062bc5d7ae168"}, {"code": "(fn fac [n]\n  (cond (= n 0) 1\n        :default (* n (fac (dec n)))))", "problem": 42, "user": "5074b3ece4b054001656acd5"}, {"code": "#(apply * % (range 2 %))", "problem": 42, "user": "5060ae00e4b07251188e4459"}, {"code": "(fn [n]\n  (loop [acc 1 d n]\n    (if (zero? d)\n       acc\n       (recur (* acc d) (dec d)))))", "problem": 42, "user": "5080d6e3e4b01a93d3f38e4b"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "5065b810e4b0148eb3925aec"}, {"code": "#(nth (reductions * (iterate inc 1)) (dec %))", "problem": 42, "user": "507c7c8be4b0b083f3ff82ef"}, {"code": "(fn [n] (reduce #(* %1 %2) 1 (map inc (range n))))", "problem": 42, "user": "507eddf4e4b06ce648bcdbfa"}, {"code": "(fn myf [x] \n  (if \n    (= 1 x) \n     1 \n    (* x (myf (- x 1)))\n  )\n)", "problem": 42, "user": "506b437de4b0eda3100c0906"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4fda108ee4b05e33b9224f46"}, {"code": "(fn fact [x] (if (= x 1) 1 (* x (fact (dec x)))))", "problem": 42, "user": "50807940e4b01a93d3f38e44"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "508157b2e4b0946d0443855c"}, {"code": "#(reduce * (range 1 (+ % 1)))", "problem": 42, "user": "507ef25ce4b0f753b6f9788e"}, {"code": "#(reduce * (range 1 (+ % 1)))", "problem": 42, "user": "4e72dd5d535d5021c1a89667"}, {"code": "(fn [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "5084cb7de4b0fb8f40674bfb"}, {"code": "#(apply * % (range 2 %))", "problem": 42, "user": "4f7beb36e4b06e829148e1ab"}, {"code": "(fn [n] (reduce * (range n 0 -1)))", "problem": 42, "user": "5078dedae4b08327cd804a5d"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "507e68abe4b085af06e3afd2"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4db1b5841254ad5b4805fa70"}, {"code": "#(apply * (range 2 (+ 1 %)))", "problem": 42, "user": "5088082ae4b0198722bd9854"}, {"code": "#(apply * (range 2 (+ % 1)))", "problem": 42, "user": "5089fc3ae4b016a21070049f"}, {"code": "#(apply * (range 1 (+ 1 %)))", "problem": 42, "user": "50843a4ae4b0c98812d0788b"}, {"code": "(fn my! [n]\n  (if (= n 1) 1 (* n (my! (dec n)))))", "problem": 42, "user": "50812debe4b01a93d3f38e4c"}, {"code": "(fn fac [n] (if (= n 1) n (* (fac (dec n)) n)))", "problem": 42, "user": "4fdb0c0ae4b05e33b9224f57"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "508b95a0e4b0be79e5b189c6"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "508bed64e4b0be79e5b189cf"}, {"code": "(fn [x] (apply * (range 1 (inc x))))", "problem": 42, "user": "4db86aee535d1e037afb2193"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "5069c09be4b01dc6af13f837"}, {"code": "(fn [num]\n  (loop [n num total 1 ret 1]\n    (if ( = num total)\n      (* ret total)\n      (recur\n        num\n        (+ total 1)\n        (* ret total)\n      )\n    )\n  )\n)", "problem": 42, "user": "4fc8f671e4b0ee37620e1840"}, {"code": "(fn [x] (reduce * (take x (iterate inc 1))))", "problem": 42, "user": "5069874de4b01dc6af13f832"}, {"code": "(fn [x] \n  (loop [cnt x\n        acc 1]\n        (if (zero? cnt)\n            acc\n            (recur (dec cnt) (* acc cnt)))))", "problem": 42, "user": "4f0378eb535dcb61093f6ae1"}, {"code": "#(apply * (map inc (range %)))", "problem": 42, "user": "5082ccb3e4b06a522e8c7af3"}, {"code": "#(loop [cnt % acc 1] (if (zero? cnt) acc (recur (dec cnt) (* acc cnt))))", "problem": 42, "user": "4f49108ae4b0d56e7bb92be5"}, {"code": "(fn [x] (reduce * (range 1 (inc x))))", "problem": 42, "user": "4dd0e8f7535da60f04a96e57"}, {"code": "(fn factorial [a]\r\n  (if (= a 1) a\r\n  (* a (factorial (dec a)))))", "problem": 42, "user": "502ac868e4b0614b5299611a"}, {"code": "#(reduce * % (range 1 %))", "problem": 42, "user": "50901b2ee4b0ea685a20f774"}, {"code": "#(reduce * (range 1 (inc %1)))", "problem": 42, "user": "508bf05ae4b0f17d83ea26aa"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5013193ae4b0f26a0e3320ab"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "509160dae4b0742c82730aef"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e5f034b535d8a8b8723a2d9"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "500ec210e4b00fff93030f9d"}, {"code": "(fn f [x]\n  (if (= 1 x)\n        1\n     (* x (f (dec x)))))", "problem": 42, "user": "507fbd77e4b089ade05efbd3"}, {"code": "(fn [a] (reduce * (range 1 (inc a))))", "problem": 42, "user": "50813b88e4b09292fd669443"}, {"code": "#(apply *(range 1 (inc %)))", "problem": 42, "user": "5086ca15e4b004985b776e62"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4dda44f2535d02782fcbe9f1"}, {"code": "(fn [n]\n  (loop [n n, r 1]\n    (if (= n 0)\n      r\n      (recur (dec n) (* n r)))))", "problem": 42, "user": "4f856adfe4b033992c121c44"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "5084c43be4b0fb8f40674bfa"}, {"code": "(fn [n] (loop [res 1 i n] (if (= i 1) res (recur (* res i) (dec i)))))", "problem": 42, "user": "4e7dbe0c535db169f9c796e3"}, {"code": "(fn f [i]\n  (if (= 1 i)\n    1\n    (* i (f (dec i)))))", "problem": 42, "user": "508ee17ae4b0706b2ed3ef8d"}, {"code": "(fn [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "5089d52ce4b03217b26a539d"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "5097b556e4b00ad8bab4e970"}, {"code": "(fn foo [x] (if (= x 0) 1 (* x (foo (dec x)) )) )", "problem": 42, "user": "5078300de4b0fc74642bff66"}, {"code": "(fn factorial [x] (if (= x 1) 1 (* (factorial (dec x)) x)))", "problem": 42, "user": "508dc047e4b0f17d83ea26c3"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "50970f51e4b00ad8bab4e950"}, {"code": "(fn [x]\n  (loop [total 1\n         fact x]\n    (if (zero? fact)\n      total\n      (recur (* total fact) (- fact 1)))))", "problem": 42, "user": "4f5576c2e4b0a7574ea71801"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5097a95fe4b00ad8bab4e96e"}, {"code": "(fn fk [x]\n  (if (= 1 x)\n    1\n     (* x (fk (dec x)))))", "problem": 42, "user": "50981062e4b04e098a4c7268"}, {"code": "(fn [n]\n  (loop [cur n\n         result 1]\n         (if (= cur 1) result\n            (recur (dec cur) (* result cur)))))", "problem": 42, "user": "50959df3e4b087f34d351ab4"}, {"code": "#(reduce * (range 1 (+ 1 %)))", "problem": 42, "user": "5098f5d6e4b0cae2931060a4"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "50053d6ce4b0678c553fc45e"}, {"code": "(fn fac [n]\n  (if (= n 1)\n      1\n      (* n (fac (- n 1)))))", "problem": 42, "user": "5097ea89e4b087ccf61a7af4"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "5089ebfee4b03217b26a539f"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "509b152be4b0412cdea6eb1e"}, {"code": "(fn f [x] (if (= x 1) 1 (* x (f (- x 1)))))", "problem": 42, "user": "50928084e4b097f48cc3856c"}, {"code": "(fn fib [a] (if(> a 0) (* a (fib(- a 1))) 1))", "problem": 42, "user": "5097c837e4b00ad8bab4e973"}, {"code": "(fn fact [x]\n  (loop [x x p 1]\n    (if (= x 1) p\n      (recur (dec x) (* p x)))))", "problem": 42, "user": "502f4c89e4b0842eb223d8b9"}, {"code": "(fn [a]\n (loop [x a y 1]\n  (if (> x 0)\n   (recur (dec x)(* x y))\n   y)\n ))", "problem": 42, "user": "507e5cf8e4b085af06e3afd1"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4fa313bbe4b081705acca188"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "509b89b3e4b03049c49bd678"}, {"code": "(fn ! [a] (if (<= a 1) 1 (* a (! (dec a)))))", "problem": 42, "user": "508d8ab2e4b0f17d83ea26be"}, {"code": "(fn fac [x] (if (= x 1) x (* x (fac(dec x)))))", "problem": 42, "user": "50982769e4b04e098a4c726a"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "509e8da7e4b08df8156e9e2f"}, {"code": "(fn [n] ((fn [n cur]\n  (if (= n 1) cur (recur (dec n) (* n cur)))) n 1))", "problem": 42, "user": "5093bc30e4b097f48cc38584"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "509dc716e4b08df8156e9e27"}, {"code": "#(reduce * (range 1 (+ 1 %)))", "problem": 42, "user": "50868795e4b004985b776e5e"}, {"code": "(fn [x]\r\n  (reduce * (range 1 (inc x))))", "problem": 42, "user": "508453abe4b0c98812d07891"}, {"code": "(fn [n]\n  (reduce #(* %1 %2) n  (drop 1 (range n)))\n  )", "problem": 42, "user": "4ecd1143535d23f036227702"}, {"code": "(fn fact \n  ([a] (fact a 1))\n  ([a b] \n    (if (= a 1)\n      b\n      (recur (dec a) (* b a)\n)\n)\n)\n)", "problem": 42, "user": "4ff8aa3fe4b0678c553fc39e"}, {"code": "(fn [n]\n  (apply * (range 1 (inc n))))", "problem": 42, "user": "4f2cdd42e4b0d6649770a055"}, {"code": "(fn [n] \n  (loop [k n v 1] \n    (if (= 1 k) \n      v\n      (recur (dec k) (* v k)))))", "problem": 42, "user": "5054e37fe4b0b1b9d1860eb6"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5038381ce4b0803468ea2c6b"}, {"code": "#(reduce * (range 1  (inc %)))", "problem": 42, "user": "4f956072e4b0dcca54ed6ccf"}, {"code": "(fn fac [n] (if (= 1 n) 1 (* n (fac (dec n)))))", "problem": 42, "user": "50a2f901e4b029e8bace362a"}, {"code": "(fn [x] (reduce * (range 1 (inc x))))", "problem": 42, "user": "509c7949e4b085ae113522b0"}, {"code": "#(apply * (range 2 (inc %)))", "problem": 42, "user": "50996a38e4b0cae2931060b3"}, {"code": "(fn fact [_n]\n  (loop [n _n acc 1]\n  (if (> n 0)\n       (recur (dec n) (* acc n) )\n    acc)))", "problem": 42, "user": "5097ddfce4b087ccf61a7af0"}, {"code": "#(reduce * (range 1 (inc %1)))", "problem": 42, "user": "50a5f72fe4b0aa96157e2611"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5098bcfee4b0cae2931060a1"}, {"code": "(fn [n]\n  (loop [acc 1 i 1]\n        (if (> i n)\n            acc\n            (recur (* acc i) (inc i)))))", "problem": 42, "user": "508c3d42e4b0f17d83ea26b2"}, {"code": "(fn factorial [x]\n  (if (= x 1) \n    1\n    (* x (factorial (dec x)))\n  )\n)", "problem": 42, "user": "50217818e4b00bba4502f7a7"}, {"code": "(fn [x]\n  (->> (+ x 1)\n    (range 1)\n    (reduce *)))", "problem": 42, "user": "50989786e4b04e098a4c7274"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "509c03f3e4b085ae113522a8"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "50a7b76de4b090657f4a5cdc"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "509f3bc9e4b08df8156e9e39"}, {"code": "(fn [num]\n  (loop [n num, acc 1]\n    (if (= n 0)\n      acc\n      (recur (dec n) (* acc n)))))", "problem": 42, "user": "50a83794e4b054305ba5a831"}, {"code": "(fn f [n] (if (> n 0) (* (f (dec n)) n) 1))", "problem": 42, "user": "5027b41ee4b01614d1633fee"}, {"code": "(fn fart [n]\n  (if (= 1 n)\n   n\n  (* n (fart (- n 1)))))", "problem": 42, "user": "508dbd56e4b0f17d83ea26c2"}, {"code": "(fn \n  [x]\n  (loop [result 1, i x]\n    (if (> i 0)\n      (recur (* result i) (dec i))\n      result)))", "problem": 42, "user": "50a01937e4b08df8156e9e47"}, {"code": "(fn ! [n] (if (= 1 n) 1 (* n (! (dec n)))))", "problem": 42, "user": "4f9a737fe4b0dcca54ed6d0a"}, {"code": "#(reduce * (range % 1 -1))", "problem": 42, "user": "50a6b5e8e4b0aa96157e262a"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4dbe5390535d020aff1edf5c"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "50982cc7e4b04e098a4c726c"}, {"code": "(fn fac [n]\n  (if (= n 0) 1 (* n (fac (dec n)))))", "problem": 42, "user": "50a83315e4b054305ba5a830"}, {"code": "#(loop [n % prod 1]\n  (if (< n 2) prod\n    (recur (dec n) (* prod n))))", "problem": 42, "user": "4ed152d5535d44c135fd68cc"}, {"code": "(fn fact [a] \n  (if (= a 0) \n    1 \n    (* a (fact (- a 1)))))", "problem": 42, "user": "50a9504de4b07e35d68b27ae"}, {"code": "#(reduce * ( range 1 (+ 1 %)))", "problem": 42, "user": "50a482c1e4b0344e360f3bb7"}, {"code": "(fn [x] (last (take x (reductions *(iterate inc 1)))))", "problem": 42, "user": "50a4cbbee4b0344e360f3bc2"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "502ade49e4b0614b52996120"}, {"code": "#(reduce * (range 1 (+ 1 %)))", "problem": 42, "user": "506406c8e4b075d771da6f9f"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "509c2c55e4b085ae113522ab"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "5092fe10e4b097f48cc3857e"}, {"code": "(fn [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "50ab8ae3e4b01d6eb43ce9a0"}, {"code": "#(apply * (take % (iterate inc 1)))", "problem": 42, "user": "50a4f36be4b0344e360f3bc9"}, {"code": "(fn  [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "50ae22c3e4b0a40c9cfb08d0"}, {"code": "#(apply * (range 1 (+ 1 %)))", "problem": 42, "user": "50ac81b9e4b071b89ef2622f"}, {"code": "(fn [n]\r\n   (apply * (range 1 (inc n))))", "problem": 42, "user": "50ab44b2e4b0f65d68208509"}, {"code": "(fn f [x]\n  (if (= x 1) 1 (* x (f (dec x)))))", "problem": 42, "user": "50ad7888e4b0a40c9cfb08c7"}, {"code": "#(apply * (take % (iterate dec %)))", "problem": 42, "user": "4eec82fe535d93acb0a668ae"}, {"code": "#(reduce * 1 (range 1 (inc %)))", "problem": 42, "user": "50608ea0e4b07251188e4456"}, {"code": "#(reduce * (take % (iterate dec %)))", "problem": 42, "user": "5099aea3e4b0efbae1fbc0a0"}, {"code": "(fn fact [n]\n  (if (= 1 n)\n    n\n    (* n (fact (dec n)))))", "problem": 42, "user": "4f03f3b7535dcb61093f6b85"}, {"code": "(fn myfact [number]\r\n  (loop [index number out number]\r\n      (if (= index 1) out\r\n        (recur (dec index) (* out (dec index)))\r\n)))", "problem": 42, "user": "50a85af1e4b054305ba5a833"}, {"code": "#(reduce * (map inc (range %)))", "problem": 42, "user": "5078d366e4b08327cd804a5b"}, {"code": "#(reduce * 1 (range 1 (inc %)))", "problem": 42, "user": "50aab057e4b056ee0193586b"}, {"code": "(fn [n] (loop [i 1 total 1] (if (= i n) total (recur (inc i) (* total (inc i))))))", "problem": 42, "user": "508a2c2fe4b016a2107004a1"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4ea8f887535d7eef30807300"}, {"code": "(fn fact\n  [n]\n (reduce * (take n (range 1 (inc n)))))", "problem": 42, "user": "501b1a8ee4b0b12d9c5f4d81"}, {"code": "#(reduce * (range 1 (+ 1 %)))", "problem": 42, "user": "50afa883e4b0c3f5ed5c29a2"}, {"code": "#(reduce * (range 1 (+ % 1)))", "problem": 42, "user": "50aca31fe4b071b89ef26230"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "508e13abe4b0f17d83ea26c7"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4fe9ef2fe4b0547ebccb2479"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "5097cfcbe4b00ad8bab4e977"}, {"code": "(fn [n] (apply * (range 1 (+ n 1))))", "problem": 42, "user": "50956c2be4b087f34d351ab2"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "50b11fbce4b009df37c708cb"}, {"code": "(fn [n]\n    (reduce\n      *\n      (rest (range (inc n))))\n    )", "problem": 42, "user": "4f253a49e4b0d66497709ff3"}, {"code": "#(apply * (take % (iterate dec %)))", "problem": 42, "user": "50b67515e4b08fb537db98f3"}, {"code": "(fn fact [n]\n  (cond\n    (> n 0) (* n (fact (- n 1)))\n    :else 1))", "problem": 42, "user": "50b65966e4b0a86f8358ca6c"}, {"code": "(fn fac [x] (if (= 1 x) 1 (* x (fac (dec x)))))", "problem": 42, "user": "50b4383fe4b001349b2f4abf"}, {"code": "(fn f [x]\n  (if (<= x 1)\n      1\n      (* x (f (dec x)))))", "problem": 42, "user": "50b668dde4b08fb537db98f2"}, {"code": "(fn [ a]\n  (loop [ total 1 x a ] \n    (if (= x 1)\n      total\n      (recur (* total x) (dec x)))))", "problem": 42, "user": "4f0386ac535dcb61093f6b13"}, {"code": "(fn fact\n  ([n] (fact 1 n))\n  ([a n] (if (= n 1)\n            a\n            (fact (* a n) (dec n))\n         )\n  )\n)", "problem": 42, "user": "50b8de6ce4b0cba0e598b652"}, {"code": "#(apply * (rest (range (inc %))))", "problem": 42, "user": "50112acee4b0d82cfac69f4c"}, {"code": "(fn f [i t n]\r\n  (if (> i n)\r\n    t\r\n    (recur (inc i) (* i t) n))) 1 1", "problem": 42, "user": "50b8e9a4e4b0cba0e598b656"}, {"code": "(fn factorial [n]\n  (if (= 1 n)\n    1\n    (* n (factorial (dec n)))))", "problem": 42, "user": "50ba3acae4b03e68e4411c78"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "50b0cffae4b009df37c708c5"}, {"code": "(fn [n]\n  (loop [n n acc 1]\n    (or (and (zero? n) acc)\n        (recur (dec n) (* n acc)))))", "problem": 42, "user": "50ba4b9ee4b03e68e4411c7b"}, {"code": "#(reduce * 1 (range 1 (inc %1)))", "problem": 42, "user": "4f03e7b3535dcb61093f6b7c"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "50acbd15e4b071b89ef26234"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4fdf566fe4b05e33b9224f99"}, {"code": "(fn fact[a] \n  (if\n    (= a 1)\n    1\n    (* a (fact (dec a)))\n  )\n)", "problem": 42, "user": "4f6fe5e4e4b07046d9f4efef"}, {"code": "(fn fact [n]\n  (if (= n 1)\n    1\n    (* n (fact (dec n)))))", "problem": 42, "user": "50b64b55e4b0a86f8358ca6b"}, {"code": "(fn fac [n]\n  (if (zero? n)\n    1\n    (* n (fac (dec n)))))", "problem": 42, "user": "50bb9fefe4b0594b91591c36"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "50bd6033e4b0594b91591c66"}, {"code": "(fn [n]\n  ((fn f [n i]\n    (if (= 1 n)\n        i\n        (recur (dec n) (* i n)))) n 1))", "problem": 42, "user": "50bb646de4b03e68e4411ca3"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "50b47c46e4b0c464d223d1b8"}, {"code": "(fn factorial [x] ( if (= x 1) 1 (* x (factorial (dec x)))))", "problem": 42, "user": "50b51c06e4b0c464d223d1c1"}, {"code": "#(reduce * (take % (iterate inc 1)))", "problem": 42, "user": "50ae0d24e4b0a40c9cfb08ce"}, {"code": "(fn f[x] (if (= 0 x) 1 (* x (f (- x 1)))))", "problem": 42, "user": "5093ca51e4b097f48cc38585"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f327844e4b0d6649770a092"}, {"code": "#(reduce * ((fn[x] (range 1 (inc x))) %1) )", "problem": 42, "user": "50b25f2ce4b03ea88043355f"}, {"code": "#(loop [a % r 1] (if (= a 1) r (recur (dec a) (* a r))))", "problem": 42, "user": "50921f9ae4b09a7d0b586de1"}, {"code": "(fn fac [n]\n  (if (= n 1)\n    n\n    (* n (fac (dec n))))\n)", "problem": 42, "user": "504e0136e4b078edc5f5938e"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "509251f3e4b09a7d0b586de5"}, {"code": "(fn [ret x ]\n  (if\n  ( = x 1) ret \n(recur (* ret x ) (- x 1)))) 1", "problem": 42, "user": "50bfe725e4b080409b860f26"}, {"code": "#(reduce * 1 (range 1 (inc %)))", "problem": 42, "user": "4f89d489e4b033992c121c7e"}, {"code": "#(\n  reduce * ( take % ( iterate inc 1 ) )\n)", "problem": 42, "user": "50bf7b72e4b0ffd967a66cc1"}, {"code": "(fn fc [n] (loop [n n acc 1] (if (= n 0) acc (recur (dec n) (* acc n) )) ) )", "problem": 42, "user": "50b81a93e4b0cba0e598b64b"}, {"code": "(fn fact [n] \n  (if (= n 1)\n  1\n  (* n (fact (- n 1)))\n  ))", "problem": 42, "user": "50ae5659e4b0a40c9cfb08d2"}, {"code": "(fn [x]\n  (loop [n x fact 1]\n    (if (= n 1)\n      fact\n      (recur (dec n) (* n fact))\n    )\n  )\n)", "problem": 42, "user": "50bfbf25e4b05ae8c1cbbd9b"}, {"code": "#(reduce * 1 (range 1 (inc %)))", "problem": 42, "user": "509eeb3be4b08df8156e9e37"}, {"code": "(fn [n]\n   (loop [x n f 1]\n     (if (= x 1)\n     f\n     (recur (dec x) (* x f)))))", "problem": 42, "user": "50478418e4b0371827a27bc3"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "50afc0f9e4b0c3f5ed5c29a3"}, {"code": "(fn fact [x] (if (> x 1)\n                 (* x\n                    (fact (- x 1)))\n                 1))", "problem": 42, "user": "508c33ece4b0f17d83ea26b1"}, {"code": "#(reduce * (take % (rest (range))))", "problem": 42, "user": "50c8697ce4b00bb60fe0c53f"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4ec79cac535d6d7199dd36e3"}, {"code": "#(reduce * (range 1 (+ % 1)))", "problem": 42, "user": "50c84ba2e4b00bb60fe0c53e"}, {"code": "(fn fact [x] (if (= x 1) 1 (* x (fact (dec x)))))", "problem": 42, "user": "50c6fad1e4b00bb60fe0c52d"}, {"code": "#(reduce * (range 2 (inc %)))", "problem": 42, "user": "50c9e5e3e4b0a409464667d7"}, {"code": "(partial\n  (fn f [acc n]\n    (if (< n 2) acc (f (* acc n) (dec n))))\n  1)", "problem": 42, "user": "50c9ece0e4b0a409464667d8"}, {"code": "#(reduce * (range 1 (+ % 1)))", "problem": 42, "user": "50503117e4b0a02f9cffdeb5"}, {"code": "(fn f [x] (if (= x 0) 1 (* x (f (dec x)))))", "problem": 42, "user": "4dad86e0c9a9d6ed0f99dc57"}, {"code": "#(apply * (map inc (range %)))", "problem": 42, "user": "50cb4cf6e4b0f78a8e1645b4"}, {"code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "problem": 42, "user": "50ca2faee4b0a409464667dc"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "50c75d38e4b00bb60fe0c532"}, {"code": "(fn ! [n]\n  (if (= n 0)\n    1\n    (* n (! (- n 1)))))", "problem": 42, "user": "50b29029e4b03ea880433563"}, {"code": "(fn [n] (loop [curr n result 1]\n  (if (= curr 0) result\n                 (recur (dec curr) (* curr result)))))", "problem": 42, "user": "50ce09e6e4b0ffc302be4bc6"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "50cf66ffe4b0e61f11ddcd92"}, {"code": "(fn x [i]\n  (if (= 1 i)\n   1\n   (* i (x (- i 1)))\n  ))", "problem": 42, "user": "50bddea1e4b0594b91591c85"}, {"code": "(fn [n]\n\t(reduce * (range 1 (inc n))))", "problem": 42, "user": "50c4baa6e4b0210b849018b0"}, {"code": "#(reduce * (range % 0 -1))", "problem": 42, "user": "4f072644535dcb61093f6c20"}, {"code": "(fn fak [n] (if (< n 2) 1 (* n (fak (- n 1)))))", "problem": 42, "user": "50d242c0e4b06ad58337ed0f"}, {"code": "#(reduce * 1 (drop 1 (range (inc %))))", "problem": 42, "user": "50733b31e4b0e3170b5a869a"}, {"code": "(fn [n] (reduce * (range n 1 -1)))", "problem": 42, "user": "4e68c465535d8ccf87e9fe8a"}, {"code": "(fn [x] (apply * (range 1 (+ 1 x))))", "problem": 42, "user": "4eb0175b535d7eef30807336"}, {"code": "(fn fac [x] (if (= x 1) 1 (* x (fac (dec x)))))", "problem": 42, "user": "50d4dde8e4b09cc622d65a72"}, {"code": "(fn factorial [n]\n  (if (< n 1)\n    1\n    (* n (factorial (- n 1)))))", "problem": 42, "user": "50d4e75ce4b09cc622d65a74"}, {"code": "(fn [x] \n (letfn [(fac [y acum]\n              (if (= 0 y)\n                  acum\n                  (fac (dec y) (* acum y))))]\n                      \n  (fac x 1)))", "problem": 42, "user": "50ccf729e4b0f7a459302aac"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "50d04a92e4b00b15ecee975a"}, {"code": "(fn fac [x]\n   (if\n     (<= x 1)\n     x\n     (*\n      x\n      (fac\n       (- x 1)))))", "problem": 42, "user": "50d2fa5ce4b049d4ed5650cf"}, {"code": "(fn [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "50b24a2fe4b03ea88043355c"}, {"code": "#(reduce * (range 1 (+ 1 %)))", "problem": 42, "user": "4e71a12c535d5021c1a8964f"}, {"code": "(fn [x] (reduce * (range 1 (inc x))))", "problem": 42, "user": "4f173f8a535d64f603146453"}, {"code": "(fn [n] (reduce * 1 (range 1 (inc n))))", "problem": 42, "user": "4f03f197535dcb61093f6b84"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "50d0b466e4b00b15ecee9764"}, {"code": "#(nth (map first (iterate (fn [[a b]] [ (* a b) (inc b) ]) [1 1])) %)", "problem": 42, "user": "50d324dde4b049d4ed5650d7"}, {"code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "problem": 42, "user": "50d4909ce4b09cc622d65a6c"}, {"code": "#(reduce * ( range 1 (inc %)))", "problem": 42, "user": "4fa7de4ce4b081705acca1c9"}, {"code": "(fn [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "50cf94bde4b0abc485cb9bb2"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "50d882d4e4b01f0871336e69"}, {"code": "(fn [n] (loop [fac 1\n                e 1]\n           (if (> e n)\n             fac\n             (recur (* fac e) (inc e)))))", "problem": 42, "user": "50cae881e4b0f75dcc9a6e51"}, {"code": "#(apply * % (range 2 %))", "problem": 42, "user": "50d916eae4b0fd36a4b89221"}, {"code": "#(loop [i %, sum 1]\n   (if (= 1 i) sum\n     (recur (dec i) (* sum i))))", "problem": 42, "user": "50d4c940e4b09cc622d65a71"}, {"code": "#(reduce * 1 (range 1 (inc %)))", "problem": 42, "user": "50d8f4b6e4b01f0871336e74"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "504eb604e4b069badc5a33c4"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "50d4309de4b09cc622d65a66"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "50c4a354e4b0210b849018af"}, {"code": "#(reduce * 1 (range 1 (inc %)))", "problem": 42, "user": "50b8914ce4b0cba0e598b64d"}, {"code": "#( reduce * (range 1 (+ % 1)) )", "problem": 42, "user": "50cf2267e4b0e61f11ddcd8c"}, {"code": "#(reduce * (rest (range (inc %))))", "problem": 42, "user": "50d8de3fe4b01f0871336e72"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "50bc23e4e4b0594b91591c3c"}, {"code": "#(reduce * (take % (iterate inc 1)))", "problem": 42, "user": "503539dee4b0ed9c821488f6"}, {"code": "#(reduce * (range 1 (+ % 1)))", "problem": 42, "user": "50493b52e4b06e84b772a23e"}, {"code": "#(apply * (range 2 (inc %)))\n\n; #(reduce * (range % 1 -1))", "problem": 42, "user": "503f4759e4b00d1a725ff2a9"}, {"code": "#(apply * (take % (iterate inc 1)))", "problem": 42, "user": "50dc2cd7e4b02e6ac9592c86"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "50d86fe2e4b01f0871336e67"}, {"code": "(fn fact [x] (if (> x 1) (* x (fact (dec x))) 1))", "problem": 42, "user": "50a8cc97e4b0a9a42786e8db"}, {"code": "(fn [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "50d93c53e4b0fd36a4b89223"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "50de11b2e4b061dbdced7217"}, {"code": "#(reduce * (rest (range (inc %))))", "problem": 42, "user": "50bd13dee4b0594b91591c65"}, {"code": "#(apply * % (range 1 %))", "problem": 42, "user": "50d4c626e4b09cc622d65a70"}, {"code": "#(apply * (seq (map (fn [x] (+ 1 x)) (range %))))", "problem": 42, "user": "4eb3fcba535d7eef30807359"}, {"code": "(fn [y]\n    (loop [x y factorial 1]\n    (if (= x 0)\n    \tfactorial\n\t(recur (- x 1) (* x factorial)))))", "problem": 42, "user": "4f1c2336535d64f60314647f"}, {"code": "(fn [n] (reduce * (range 1N (inc n))))", "problem": 42, "user": "5095f761e4b0ba05ca7aebfd"}, {"code": "(fn factorial [n]\n  (if (zero? n)\n    1\n    (* n (factorial (dec n)))))", "problem": 42, "user": "50a7ef7fe4b090657f4a5ce0"}, {"code": "#(reduce * 1 (range 1 (inc %)))", "problem": 42, "user": "4fedd993e4b0198f34b063bc"}, {"code": "(fn fac [n]\n  (if (= 1 n) 1\n       (* n (fac (dec n)))))", "problem": 42, "user": "5021f0b3e4b00bba4502f7ac"}, {"code": "(fn [x*] (loop [x x* acc 1] (if (= x 0) acc (recur (dec x) (* acc x)))))", "problem": 42, "user": "50e0d5a3e4b061dbdced723d"}, {"code": "(fn [n] (loop [i n acc 1] (if (= i 1) acc (recur (dec i) (* i acc)))))", "problem": 42, "user": "50e3cf55e4b01912b3285c45"}, {"code": "(fn fact [n] (if (= n 1) 1 (* n (fact (- n 1)))))", "problem": 42, "user": "50dfb660e4b061dbdced7228"}, {"code": "#(reduce * (range 2 (inc %)))", "problem": 42, "user": "50e3f311e4b0463d32072487"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "50e3ec87e4b0463d32072486"}, {"code": "(fn [k] (reduce * 1 (range 2 (inc k))))", "problem": 42, "user": "50e3ddd4e4b01912b3285c47"}, {"code": "(fn factorial [n]\n  (reduce * (range 1 (inc n)))\n)", "problem": 42, "user": "50e496e8e4b0cb9ec68fbca0"}, {"code": "#((fn [r f] (if (= f 0) r (recur (* r f) (dec f)))) 1 %)", "problem": 42, "user": "50e008d1e4b061dbdced722a"}, {"code": "(fn [in]\n  (loop [x in result 1]\n   (if (= x 1) \n     result \n     (recur (dec x) (* result x))\n    )\n  )\n )", "problem": 42, "user": "4fc5273ce4b081705acca37f"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "50e4ff72e4b049a987753897"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "50d46d53e4b09cc622d65a69"}, {"code": "(fn fac [x] (if (<= x 1) x (* x (fac (dec x)))))", "problem": 42, "user": "50df6dd0e4b061dbdced7225"}, {"code": "#(reduce * (range 1 (+ 1 %)))", "problem": 42, "user": "50e82c31e4b0ebbe794eb7da"}, {"code": "#(reduce * % (next (range %)))", "problem": 42, "user": "50d0d4c8e4b00b15ecee976a"}, {"code": "(fn [x]\n  (loop [r (dec x)\n         result x]\n    (if (<= r 1)\n      result\n      (recur (dec r) (* result r)))))", "problem": 42, "user": "50e87427e4b0ebbe794eb7e8"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e79f28b535db169f9c796a8"}, {"code": "(fn fact [h] (if (zero? h) 1 (* h (fact (dec h)))))", "problem": 42, "user": "4f98b69ae4b0dcca54ed6cf4"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "50e8a340e4b0ebbe794eb7ed"}, {"code": "(fn fact [n] (if (= n 1) 1 (* n (fact (dec n)))))", "problem": 42, "user": "50e8ff6be4b0ebbe794eb7f3"}, {"code": "(fn [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "50e448bae4b0463d3207248d"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "50e7dd5de4b077ad597af36b"}, {"code": "(fn [n]\n  (loop [x 1 m n]\n    (if (> m 0)\n      (recur (* m x) (- m 1))\n      x)))", "problem": 42, "user": "4e7e8485535db169f9c79716"}, {"code": "(fn fac [n]\n  (if (= 1 n)\n    1\n    (* n (fac (dec n)))))", "problem": 42, "user": "50e47fa5e4b0cb9ec68fbc9c"}, {"code": "#(apply * (range 1 ( + 1 %)))", "problem": 42, "user": "50e5bca5e4b09ae9427b0e75"}, {"code": "#(reduce * (range 1 (inc %1)))", "problem": 42, "user": "50d179c7e4b05a71a896ef56"}, {"code": "(fn factorial [a]\n\t(reduce * 1 (range 1 (+ a 1))))", "problem": 42, "user": "50ed8a5fe4b06330c1f87c3d"}, {"code": "#(apply *(range 1(inc %)))", "problem": 42, "user": "50ed4626e4b01236b1d4983c"}, {"code": "#(apply * (rest (range (inc %))))", "problem": 42, "user": "50ef77a4e4b0bdaecbb47d99"}, {"code": "#(reduce * 1 (take % (iterate inc 1)))", "problem": 42, "user": "5047782ce4b0371827a27bc2"}, {"code": "#(reduce * (range 1 (inc %1)))", "problem": 42, "user": "50ee851ee4b06330c1f87c5b"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "50ef9a7ae4b0bdaecbb47d9e"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "50ed5d1be4b06330c1f87c37"}, {"code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "problem": 42, "user": "50ef4e2be4b0a78662fa2653"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "50e19748e4b0ec0e353386e5"}, {"code": "(fn [n]\n  (loop [result 1\n         x n]\n    (if (= x 1)\n      result\n      (recur (* result x) (dec x)))))", "problem": 42, "user": "50ed3c6be4b01236b1d4983b"}, {"code": "(fn fact [n]\n  (if (zero? n)\n    1\n    (* n (fact (dec n)))))", "problem": 42, "user": "50f0d000e4b0c5f4fa5ddb6f"}, {"code": "#(reduce * (take-while (partial < 0) (iterate dec %)))", "problem": 42, "user": "4ff3df0fe4b0678c553fc355"}, {"code": "(fn [n] (reduce * (range 1  (inc n)) ) )", "problem": 42, "user": "50ef3e5de4b0a78662fa2652"}, {"code": "(fn [n] \n  (loop [cnt n acc 1]\n    (if (zero? cnt)\n      acc\n      (recur (dec cnt) (* acc cnt)))))", "problem": 42, "user": "4f6fd91ae4b07046d9f4efed"}, {"code": "#( reduce * (take % (iterate inc 1)))", "problem": 42, "user": "50eafeaae4b0346a3e988cbb"}, {"code": "(fn [number]\n  (loop [number number acc 1]\n    (if (zero? number)\n      acc\n      (recur (dec number) (* acc number)))))", "problem": 42, "user": "50ee145de4b06330c1f87c53"}, {"code": "(fn [x]\n  (reduce #(* % %2) 1 (range 1 (inc x))))", "problem": 42, "user": "50eebf46e4b06330c1f87c61"}, {"code": "(fn [n]\n    (reduce * (range 1 (+ n 1))))", "problem": 42, "user": "50e4a5a9e4b0cb9ec68fbca3"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4ec1b090535dfed6da9c6db5"}, {"code": "(fn [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "50ed9e8de4b06330c1f87c44"}, {"code": "(fn [x]\n  (apply * (range 1 (inc x)))\n  )", "problem": 42, "user": "4edf95a8535d10e5ff6f5342"}, {"code": "(fn [n]\n  (apply * (range 2 (inc n))))", "problem": 42, "user": "50e4b066e4b0cb9ec68fbca6"}, {"code": "(fn [a]\n  (loop [a a b 1]\n    (if (zero? a)\n      b\n      (recur (dec a) (* b a)))))", "problem": 42, "user": "50ef56dfe4b0bdaecbb47d94"}, {"code": "(fn fac [x]\n  (if (< x 2) x\n    (* x (fac (dec x)))))", "problem": 42, "user": "4ffc10aae4b0678c553fc3d6"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4fbf2818e4b081705acca317"}, {"code": "(fn [n] (reduce * (take n (drop 1 (range)))))", "problem": 42, "user": "503c02e5e4b0fc0f99c2e54e"}, {"code": "#(reduce * (range 1 (+ 1 %)))", "problem": 42, "user": "50ec8d93e4b04edc3377704c"}, {"code": "(fn fact [n]\n   (if (= n 1)\n       1\n       (* n (fact (dec n)))))", "problem": 42, "user": "50f1dedbe4b0897c4366dcd8"}, {"code": "(fn f [n] (if (= n 1) 1 (* n (f (dec n)))))", "problem": 42, "user": "50f0ec9ce4b0d527ce5b30df"}, {"code": "#(reduce * % (range 1 %))", "problem": 42, "user": "50f17c0de4b06d9538fe2123"}, {"code": "(fn a [x] (if (= x 1) 1 (* x (a (dec x)))))", "problem": 42, "user": "50f07b21e4b0bdaecbb47dc2"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "50e111f7e4b084616e11c663"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "50742549e4b054001656accf"}, {"code": "#(reduce * (range 1 (+ 1 %)))", "problem": 42, "user": "50ec69e0e4b04edc3377704a"}, {"code": "(fn factorial \n  [n]\n  (if (= 1 n)\n    1\n    (* n (factorial (- n 1)))))", "problem": 42, "user": "4fc8769be4b0ee37620e1833"}, {"code": "(fn fact [n]\n  (if (= n 0)\n    1\n    (* n (fact (- n 1)))))", "problem": 42, "user": "50bfb5fbe4b05ae8c1cbbd9a"}, {"code": "#(reduce * (take % (iterate inc 1)))", "problem": 42, "user": "50d8739ae4b01f0871336e68"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4ec601ff535d6d7199dd36be"}, {"code": "#(reduce * (take % (iterate inc 1)))", "problem": 42, "user": "50eddbc4e4b06330c1f87c4b"}, {"code": "(fn [n]\n  (loop [cnt n\n         acc 1]\n    (if (> cnt 0)\n      (recur (dec cnt) (* acc cnt))\n      ;else\n      acc\n      )\n    )\n  )", "problem": 42, "user": "50fb084ee4b0d10d794c19dd"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "50fbf811e4b0d10d794c19f1"}, {"code": "(fn f [n]\n(reduce * (range 1 (+ 1 n)))\n  )", "problem": 42, "user": "50f4894be4b004d364930528"}, {"code": "#(reduce * 1 (range 1 (inc %)))", "problem": 42, "user": "50ec4ed7e4b04edc33777046"}, {"code": "#(apply * (take % (iterate inc 1)))", "problem": 42, "user": "50ebd63ce4b04edc3377703c"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "50f3bd98e4b041536e2eca3a"}, {"code": "(fn factorial [x] (if (= x 0) 1 (* x (factorial (dec x)))))", "problem": 42, "user": "50ef311fe4b0a78662fa2651"}, {"code": "(fn fact [x] (if (= x 0) 1 (* x (fact (- x 1)))))", "problem": 42, "user": "50f2e5cee4b0ec8ee6fa8643"}, {"code": "#(reduce * (range 1 (+ 1 %)))", "problem": 42, "user": "4f55ab5ee4b0a7574ea71809"}, {"code": "(fn [x] (reduce * (range 1 (inc x))))", "problem": 42, "user": "50b19a91e4b03ea880433552"}, {"code": "(fn foo [n] (if (= n 1) 1 (* n (foo (- n 1)))))", "problem": 42, "user": "50f9c7fde4b0e7c80cb15a52"}, {"code": "(fn [x] (reduce * (range 1 (inc x))))", "problem": 42, "user": "50fbdacfe4b0d10d794c19f0"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "50fe2b87e4b03cd852b4e84b"}, {"code": "(fn fact [x] (if (< x 2) 1 (* x (fact (- x 1)))))", "problem": 42, "user": "505caadfe4b0bcb5664c3d3e"}, {"code": "(fn [num] (loop [n num res 1]\n            (if (= n 1) res\n              (recur (dec n) (* n res)))))", "problem": 42, "user": "50fac9e3e4b07934dda8b0d1"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5099a280e4b0cae2931060bb"}, {"code": "(fn fac [n] (if (= 0 n) 1 (* n (fac (- n 1)))))", "problem": 42, "user": "506aa040e4b05d3b7762c749"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4fd93c42e4b05e33b9224f35"}, {"code": "(fn fact [number] \n  (if (= number 1)\n    1\n    (* (fact (dec number)) number)))", "problem": 42, "user": "50ed1ce7e4b01236b1d49839"}, {"code": "#(reduce * (rest (range (inc %))))", "problem": 42, "user": "51008b6fe4b0700a7a02d6e4"}, {"code": "(fn [n]\n  (reduce * 1 (range 1 (+ n 1))))", "problem": 42, "user": "5006b7d2e4b0678c553fc48c"}, {"code": "#(reduce * (map inc (range %)))", "problem": 42, "user": "5102489de4b00c483ae176f6"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "51040eb2e4b0432126ba9bb4"}, {"code": "#(loop [n % f 1]\n        (if (= n 1)\n            f\n            (recur (dec n) (* f n))))", "problem": 42, "user": "50f3ce2ee4b041536e2eca3d"}, {"code": "(fn fact\n  [x]\n  (reduce * 1 (range 1 (inc x))))", "problem": 42, "user": "5101192ae4b0bef64c30e266"}, {"code": "#(loop [fac 1 end %] (if (= end 1) fac (recur (* fac end) (dec end))))", "problem": 42, "user": "51059d33e4b0380e797c7d5c"}, {"code": "(fn fact [n]\n  (loop [nn n\n         s 1]\n    (cond (= nn 1) s\n          :else (recur (dec nn) (* s nn)))))", "problem": 42, "user": "5106bc8ae4b01150e115ebec"}, {"code": "#(reduce * (take % (iterate inc 1)))", "problem": 42, "user": "5103807fe4b00c483ae17703"}, {"code": "(fn [x] (reduce * 1 (range 1 (inc x))))", "problem": 42, "user": "5106c803e4b01150e115ebee"}, {"code": "#(apply * (range % 0 -1))", "problem": 42, "user": "4fa05b99e4b0dcca54ed6d47"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "50471d36e4b03b02161376b6"}, {"code": "(fn f [n] (if (<= n 1) 1 (* n (f (- n 1)))))", "problem": 42, "user": "50bce014e4b0594b91591c63"}, {"code": "#(reduce * 1 (rest (range (inc %))))", "problem": 42, "user": "51095588e4b0e34872b3efa5"}, {"code": "(fn fac [x] \n  (cond \n   (> x 1) (* x (fac (- x 1)))\n  :else 1))", "problem": 42, "user": "4f23e1cde4b0d66497709fe4"}, {"code": "(fn[x] (reduce *(range 1 (+ 1 x) )) )", "problem": 42, "user": "50fec710e4b0219f3bc8bd97"}, {"code": "(fn f [x] (if (= x 1) 1 (* x (f (dec x)))))", "problem": 42, "user": "510931ede4b0c71f76895663"}, {"code": "(fn [x] (apply * (range 1 (inc x))))", "problem": 42, "user": "50e4f4e9e4b049a987753896"}, {"code": "(fn factorial [n]\n  (apply * (range 1 (inc n)))\n  )", "problem": 42, "user": "510a3cd4e4b06956752d35ad"}, {"code": "(fn [n] (reduce #(* %2 %) (range 1 (inc n))))", "problem": 42, "user": "510cda21e4b078ea71921126"}, {"code": "#(reduce * 1 (range 1 (inc %)))", "problem": 42, "user": "5008d149e4b0144d4f561e41"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "510db6cde4b078ea71921145"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "510d9d61e4b078ea71921141"}, {"code": "#(apply * (range % 0 -1))", "problem": 42, "user": "5107b86de4b05b2b4eee7495"}, {"code": "(fn [x] (let [values (range 1 (inc x))]\n          (reduce * values)))", "problem": 42, "user": "507a33dee4b08327cd804a68"}, {"code": "#(reduce * (take %1 (iterate dec %1)))", "problem": 42, "user": "4e964f4a535dbda64a6f6b42"}, {"code": "#(reduce * (map inc (range %)))", "problem": 42, "user": "5102ac9de4b00c483ae176fa"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "510d3dc6e4b078ea71921132"}, {"code": "(partial #(if (= %2 1)\n             %1\n             (recur (* %1 %2) (dec %2)))\n          1)", "problem": 42, "user": "51105c7fe4b04c71fce993ef"}, {"code": "(fn [x] (reduce * (rest (take (inc x) (range)))))", "problem": 42, "user": "510c123be4b078ea7192110e"}, {"code": "(fn fac [n] (if (= n 0) 1 (* n (fac (dec n)))))", "problem": 42, "user": "5102ef6be4b00c483ae176fc"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "511026b1e4b04c71fce993ec"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "50afdf00e4b0c3f5ed5c29a5"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "510e1584e4b07438aa321458"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "50f9739ce4b0e7c80cb15a4d"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "50b35486e4b03ea88043356a"}, {"code": "#(apply * (range 1 (+ 1 %)))", "problem": 42, "user": "50fe91c1e4b03cd852b4e84e"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "510b704ee4b078ea71921100"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "511278bbe4b0350614f07a75"}, {"code": "(fn fac [n]\n  (if (= n 1)\n    1\n    (* n (fac (- n 1)))))", "problem": 42, "user": "510cd1dde4b078ea71921124"}, {"code": "(fn [n]\n  (loop [n n\n         acc 1]\n    (if (> n 1)\n      (recur (dec n) (* acc n))\n      acc)))", "problem": 42, "user": "511442d0e4b0e9c109bb74d5"}, {"code": "(fn [n] (reduce * (-> n inc range rest ) ))", "problem": 42, "user": "5115c7e4e4b0ce5098ee73c2"}, {"code": "(fn [n]\n  (loop [f 1\n         n n]\n    (if (= n 1) f\n    \t(recur (* f n) (dec n)))))", "problem": 42, "user": "5081566ce4b0946d0443855b"}, {"code": "(fn ! [n]\n   (if (= n 1)\n     1\n     (* n (! (- n 1)))\n     )\n   )", "problem": 42, "user": "5106dc1be4b01150e115ebf0"}, {"code": "(fn [x] \n  (reduce * (range 1 (+ x 1))))", "problem": 42, "user": "4e74e119535d7a570dd295bc"}, {"code": "(fn fact \n  [x] \n  (if (= x 0) \n    1\n  \t(* x (fact (dec x)))))", "problem": 42, "user": "5114ab7be4b0ce5098ee73b5"}, {"code": "(fn [n]\n  (loop [n n\n         acc 1]\n    (if (= n 0)\n      acc\n      (recur (dec n) (* acc n)))))", "problem": 42, "user": "50e3e108e4b01912b3285c48"}, {"code": "#(apply * (range 2 (inc %)))", "problem": 42, "user": "4fe8fda4e4b0547ebccb2438"}, {"code": "(fn fac [x]\n  (cond\n   \t(= 1 x) 1\n   \t:else (* x (fac (dec x)))))", "problem": 42, "user": "51195e77e4b055cfb310d499"}, {"code": "#(reduce *(take % (iterate inc 1)))", "problem": 42, "user": "5115cf87e4b0ce5098ee73c3"}, {"code": "#(apply * (range 2 (inc %)))", "problem": 42, "user": "4ecc1d85535d23f0362276f8"}, {"code": "(fn factorial [x]\n  (if (= 0 x)\n    1\n    (* x (factorial (dec x)))))", "problem": 42, "user": "51181009e4b0e0897831a60f"}, {"code": "#(loop [n % tot 1]\n   (if (= n 0)\n     tot\n     (recur (dec n) (* tot n))))", "problem": 42, "user": "4fed24a5e4b0681fd128dcaf"}, {"code": "(fn fact [n]\n  (if (<= n 1) 1\n    (* n (fact (dec n)))))", "problem": 42, "user": "5119f3d5e4b06c8af0111818"}, {"code": "#(reduce * (range % 0 -1))", "problem": 42, "user": "510967aae4b07c05fdf6dc0f"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "50589113e4b06522596eba7f"}, {"code": "(fn fact [n]\n  (loop [i 1\n         f 1]\n    (if (= i n)\n      f\n      (recur (inc i) (* f (inc i))))))", "problem": 42, "user": "511c91ace4b00c2a1fa7ff7a"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4f8c813de4b02e764a0a519f"}, {"code": "(fn fac\n  [x]\n  (apply * (range 1 (+ 1 x))))", "problem": 42, "user": "511720eae4b0063b4e3e16da"}, {"code": "(fn [n]\n  (loop [i 1 value 1]\n    (if (<= i n)\n      (recur (inc i)\n             (* value i))\n      value)))", "problem": 42, "user": "511aa6f5e4b0c87c59c9670c"}, {"code": "(fn [n]\n  (reduce * (range 1 (+ 1 n))))", "problem": 42, "user": "511060fae4b04c71fce993f1"}, {"code": "#(reduce * (range % 0 -1))", "problem": 42, "user": "511618b1e4b0d4f670fd2fdf"}, {"code": "(fn fact [n]\n  (cond\n   (= 1 n) 1\n   :else (* n (fact (dec n)))\n  )\n)", "problem": 42, "user": "511cca27e4b00c2a1fa7ff7d"}, {"code": "(fn fac [a] (if (== a 1) 1 (* a (fac (dec a)))))", "problem": 42, "user": "510a6bece4b06956752d35af"}, {"code": "(fn [n]\n  (let [f (fn [n a] \n            (if (= n 0)\n              a\n              (recur (dec n) (* n a))))]\n    (f n 1)))", "problem": 42, "user": "4e50ad74535dc968683fc4ec"}, {"code": "(fn fact [x] (if (<= x 1) 1 (* x (fact (- x 1)))))", "problem": 42, "user": "511a98d7e4b0c87c59c96707"}, {"code": "#(reduce * (range 1 (+ % 1)))", "problem": 42, "user": "5100d7dbe4b04f1d96d946df"}, {"code": "(fn [x]\n  ((fn fac0 [y z]\n     (if (= 0 y) z \n         (fac0 (dec y) (* y z)))) x 1))", "problem": 42, "user": "5099283ce4b0cae2931060af"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4fca4c37e4b0ee37620e184f"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "511f88eee4b085952a83535f"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "511c44fde4b00c2a1fa7ff77"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "511b810ce4b07ab9ec456182"}, {"code": "#(reduce (fn [acc i](* acc i)) (range 1 (inc %)))", "problem": 42, "user": "511ac026e4b0c87c59c9670e"}, {"code": "(fn [x] (reduce * 1 (range x 0 -1)))", "problem": 42, "user": "50e54fe4e4b049a9877538a0"}, {"code": "(fn [n]\n  (loop [c n fact 1]\n    (if (zero? c)\n      fact\n      (recur (dec c) (* c fact))\n      )\n    )\n  )", "problem": 42, "user": "512339fce4b03b44edbed434"}, {"code": "(fn fact [x] (if (<= x 1) x (* x (fact (dec x)))))", "problem": 42, "user": "510cba32e4b078ea71921121"}, {"code": "#(loop [f 1 n %] (if (= 0 n ) f (recur (* f n) (dec n))))", "problem": 42, "user": "4ff2ff7ce4b0678c553fc342"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "510dc185e4b078ea71921146"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "511623cbe4b0d4f670fd2fe1"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "512474ede4b02c3f2a072cce"}, {"code": "(fn [x]\n  (loop [x x\n         res 1]\n    (if (= x 1)\n      res\n      (recur (dec x) (* res x)))))", "problem": 42, "user": "5123ac8ee4b061b4c6f0e0b1"}, {"code": "#(reduce * (range 1 (+ %1 1)))", "problem": 42, "user": "510acd6ee4b078ea719210f4"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "511ac2ede4b0c87c59c9670f"}, {"code": "#(apply * (range 1 (+ % 1)))", "problem": 42, "user": "5125834ae4b05d10e3e395fa"}, {"code": "(fn fact [x]\n\t(if (= x 1) 1\n      (* x (fact (- x 1)))\n     )\n)", "problem": 42, "user": "511a0374e4b06c8af011181a"}, {"code": "(fn [n]\n  (letfn [(iter [product cnt]\n            (if (= cnt 1)\n              product\n              (recur (* cnt product) (dec cnt))))]\n    (iter 1N n)))", "problem": 42, "user": "5125745ae4b05d10e3e395f9"}, {"code": "(fn facto [n]\n  (if (= n 1)\n    1\n    (* n (facto(dec n)))))", "problem": 42, "user": "50d3b03fe4b030b634c368b9"}, {"code": "#(apply * (range 1 (+ 1 %)))", "problem": 42, "user": "51256b40e4b05d10e3e395f8"}, {"code": "(fn [n]\n  (reduce * (range 2 (inc n))))", "problem": 42, "user": "4dada426c9a9d6ed2a99dc57"}, {"code": "#(reduce * 1 (range 1 (inc %)))", "problem": 42, "user": "4fbbcf0ce4b081705acca2ee"}, {"code": "#(apply * (range 1 (+ % 1)))", "problem": 42, "user": "51284226e4b03a34742b4308"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "51281b25e4b03a34742b4304"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5127e504e4b03a34742b4302"}, {"code": "(fn [n] (if (<= n 1) 1 (->> (range 1 (inc n)) (apply *))))", "problem": 42, "user": "5126dbabe4b083bb8f88cf0e"}, {"code": "(fn [x] (reduce #(* %1 %2) 1 (range 1 (inc x))))", "problem": 42, "user": "5105ed16e4b01150e115ebe2"}, {"code": "(fn fac [n]\n  (if (= n 0)\n    1\n    (* n (fac (- n 1)))))", "problem": 42, "user": "4e9a1512535dbda64a6f6b6e"}, {"code": "#(reduce * 1 (range 1 (inc %)))", "problem": 42, "user": "511aa2a4e4b0c87c59c9670a"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5117c31ee4b0e0897831a60c"}, {"code": "#(nth [1 1 2 6 24 120 720 5040 40320] %)", "problem": 42, "user": "5125d963e4b05d10e3e395fe"}, {"code": "(fn factcat\n     ([x accum]\n       (cond\n         (< x 0) 0\n         (= x 0) accum\n         :else\n         (recur (- x 1) (* x accum))\n         )\n       )\n     ([x] (factcat x 1))\n   )", "problem": 42, "user": "502be4fae4b08f5602f232eb"}, {"code": "(fn [a]\n      (apply * (drop 1 (range (+ a 1)))))", "problem": 42, "user": "4e028764535d04ed9115e790"}, {"code": "#(reduce * (take % (iterate inc 1)))", "problem": 42, "user": "511d11d7e4b022853b0e079f"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5121cccee4b05ae5a5823c12"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4fe8d1b5e4b0547ebccb2425"}, {"code": "(fn [x] (reduce * (range 1 (inc x))))", "problem": 42, "user": "512832dfe4b03a34742b4306"}, {"code": "(fn f [x] (if (< x 1) 1 (* (f (dec x)) x)))", "problem": 42, "user": "502d3912e4b0d96a44ab2030"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4e55b3dc535d8a8b8723a27f"}, {"code": "(fn fact [x] \n  (if (= x 1) \n    1\n    (* x (fact (- x 1)))))", "problem": 42, "user": "4ea0a7c7535d7eef308072ab"}, {"code": "(fn fac [x]\n  (if (= 1 x) 1\n    (* x (fac (dec x)))\n  )\n)", "problem": 42, "user": "512b9e59e4b04d059cf1fd17"}, {"code": "#(reduce * (map inc (range %)))", "problem": 42, "user": "512d3304e4b040332b905b2d"}, {"code": "#(reduce * (-> % inc range next))", "problem": 42, "user": "51057b2be4b06d28cacc92e8"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4f525fdce4b03ad3f0c10d37"}, {"code": "(fn f [n] (if (= n 1) 1 (* n (f (- n 1)))))", "problem": 42, "user": "512f06c5e4b0762be4c7aad7"}, {"code": "(fn [n]\n  (apply * (range 1 (inc n))))", "problem": 42, "user": "4e6a4641535d8ccf87e9feb9"}, {"code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "problem": 42, "user": "512eb723e4b0b740abc5982b"}, {"code": "(fn [n]\n  (loop [cnt n acc 1]\n    (if (zero? cnt)\n        acc\n      (recur (dec cnt) (* acc cnt)))))", "problem": 42, "user": "5131d817e4b06942423563ca"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "51307b84e4b08c712d3fae39"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "50d3ec8be4b030b634c368bb"}, {"code": "(fn ! [f]\n  (if (= f 1)\n    1\n    (* f (! (- f 1)))))", "problem": 42, "user": "5132c6f0e4b021281ec7b6d3"}, {"code": "(fn factorial [n] (if (> n 1) (* n  (factorial (- n 1))) 1))", "problem": 42, "user": "5131c922e4b06942423563c9"}, {"code": "(fn fact [v] (if (= 0 v) 1 (* v (fact (dec v)))))", "problem": 42, "user": "50fa01bce4b07934dda8b0ba"}, {"code": "#(reduce * (take % (iterate inc 1)))", "problem": 42, "user": "511b9017e4b00c2a1fa7ff6b"}, {"code": "#(apply * (range 1 (inc %1)))", "problem": 42, "user": "512b7a05e4b04d059cf1fd14"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "50ed8fd1e4b06330c1f87c3f"}, {"code": "#(loop [i % res 1] (cond (= i 1) res :else (recur (dec i) (* i res))))", "problem": 42, "user": "5128554ee4b03a34742b430a"}, {"code": "(fn [n]\n  (loop [n n res 1]\n    (if (= n 1)\n      res\n      (recur (dec n) (* res n)))))", "problem": 42, "user": "51000111e4b00d7ad4cab15e"}, {"code": "#(reduce * (take % (iterate inc 1)))", "problem": 42, "user": "4de52c87535d08e6dec9fdf0"}, {"code": "(fn fc [n]\n  (if (= n 1)\n    1\n    (* n (fc (dec n)))))", "problem": 42, "user": "504e12ade4b078edc5f593b7"}, {"code": "(fn [n] (reduce * 1 (range 1 (+ n 1))))", "problem": 42, "user": "51365524e4b04ac1f358dd52"}, {"code": "(fn [n] (reduce * (range 1 (+ n 1))))", "problem": 42, "user": "5133e51ae4b0d7a043de8cf6"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "51364acfe4b04ac1f358dd51"}, {"code": "(fn fact [n]\n  (cond\n    (== n 1) 1\n    :else (* n (fact (dec n)))))", "problem": 42, "user": "4f05a9cf535dcb61093f6bfc"}, {"code": "(fn [n]\n  (apply * (range 1 (inc n))))", "problem": 42, "user": "51367626e4b04ac1f358dd53"}, {"code": "(fn [x]\n  (reduce * (range 1 (inc x))))", "problem": 42, "user": "51377c10e4b04059df19f305"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "51352899e4b082aeb3a3f03b"}, {"code": "(comp first (partial nth (iterate (fn [[f n]] [(* f n) (inc n)]) [1 1])))", "problem": 42, "user": "5137c3b0e4b0509a8b470482"}, {"code": "(fn [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "512b8728e4b04d059cf1fd16"}, {"code": "(fn [x] (reduce * (range 1 (inc x))))", "problem": 42, "user": "5137efaae4b0a5db03d727d2"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f55f4b1e4b0a7574ea7180d"}, {"code": "(fn ! [x] (if(> x 1) ( * (!(- x 1)) x) 1))", "problem": 42, "user": "5139c00ee4b067e25a345ebc"}, {"code": "(fn [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "511f9625e4b085952a835362"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "50b78ac9e4b0cf3e51c3046a"}, {"code": "#(apply * (range 1 (+ % 1)))", "problem": 42, "user": "5124619ae4b02c3f2a072ccd"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5139ff96e4b067e25a345ec1"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "513b77f3e4b00f740c76c403"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "513a4babe4b067e25a345eca"}, {"code": "(fn [n] (loop [cnt 1 fac 1] (do (if (<= cnt n) (recur (inc cnt) (* fac cnt)) fac))))", "problem": 42, "user": "5138d08be4b0a5db03d727db"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "513d121fe4b0e544971636a2"}, {"code": "(fn [x] (reduce * (loop [coll [] i x] (if (= i 1) coll (recur (conj coll i) (dec i))))))", "problem": 42, "user": "513ca934e4b0b86ece9f3228"}, {"code": "(fn foob [x] (reduce * (range 1 (inc x))))", "problem": 42, "user": "50f53694e4b057d4c52de881"}, {"code": "(fn [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "513f0565e4b051389b345b3b"}, {"code": "(fn [n]\n\t\t(reduce * (range 1 (inc n))))", "problem": 42, "user": "51205867e4b0e88f5a20c40f"}, {"code": "(fn factorial [x]\n  (apply * (rest (range (inc x)))))", "problem": 42, "user": "4fb804f7e4b081705acca2d6"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "50e3fe8fe4b0463d32072488"}, {"code": "(fn [n] (reduce * 1 (range 1 (inc n))))", "problem": 42, "user": "513bb7a6e4b04402f587b77d"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "513edd13e4b051389b345b39"}, {"code": "(fn [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "51411e3be4b05ca1a0b379f3"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "50a3e2eae4b0ceace084d49a"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "513dcc1ce4b0825f97f7f964"}, {"code": "(fn [n] \n   (reduce * (range 1 (inc n))))", "problem": 42, "user": "51392535e4b0a5db03d727e1"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "51424cc8e4b0b50abeb46b34"}, {"code": "(fn fact [x] (if (= x 1 ) 1 (* x (fact (dec x)))) )", "problem": 42, "user": "513f400ae4b051389b345b3f"}, {"code": "(fn factorial [x]\n  (if(== x 1)\n    1\n    (* x (factorial(- x 1)))\n   )\n)", "problem": 42, "user": "50edcc53e4b06330c1f87c49"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5142ea50e4b0c172af7558ca"}, {"code": "(fn [number]\n  (loop [x number accum 1]\n    (if (= 0 x) accum\n      (recur (dec x)(* accum x)))))", "problem": 42, "user": "512e7402e4b0b740abc59826"}, {"code": "(fn [n]\n    (loop [cnt n acc 1]\n       (if (zero? cnt)\n            acc\n          (recur (dec cnt) (* acc cnt)))))", "problem": 42, "user": "51416934e4b03d51af0d04f0"}, {"code": "(fn fact[f]\n  (if (= 1 f) 1 (* f (fact (dec f))))\n)", "problem": 42, "user": "513f53c6e4b051389b345b40"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5141fafbe4b0b50abeb46b28"}, {"code": "(fn [n]\n  (loop [ret 1 idx 1]\n    (if (> idx n)\n      ret\n      (recur (* ret idx) (inc idx)))))", "problem": 42, "user": "513cb853e4b0b86ece9f322b"}, {"code": "(fn [x] (reduce * (range 1 (inc x))))", "problem": 42, "user": "4f47eab2e4b0d56e7bb92bc6"}, {"code": "(fn [x]\n  (loop [n x\n         result 1]\n    (if (zero? n)\n      result\n      (recur (dec n) (* result n))\n    )\n  )\n)", "problem": 42, "user": "512a8ef7e4b0ff5c4bc1f99e"}, {"code": "(fn [n] (apply * (range 1 (+ 1 n))))", "problem": 42, "user": "50e135f4e4b084616e11c667"}, {"code": "(fn fac [n]\n  (if (= n 0) 1\n      (* n (fac (dec n)))))\n;#(reduce * (range 1 (inc %)))", "problem": 42, "user": "505b9084e4b032b709c81371"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5140b7bae4b076604f1aa55b"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "50ef96a1e4b0bdaecbb47d9d"}, {"code": "(fn [n] (apply * (range 1 (+ 1 n))))", "problem": 42, "user": "51430fb2e4b0c172af7558ce"}, {"code": "(fn [n]\n  (loop [k n, result 1]\n    (if (zero? k)\n      result\n      (recur (dec k) (* k result)))))", "problem": 42, "user": "4dcc2435535d5973398f9290"}, {"code": "(fn factorial [x] \n  (if (= x 1)\n  1\n  (* x (factorial (dec x))) ))", "problem": 42, "user": "513486bde4b0230e9f713b41"}, {"code": "#(reduce * (range 1 (+ 1 %)))", "problem": 42, "user": "514721c6e4b0d520409ed392"}, {"code": "(fn [n] (reduce * (filter (partial < 0)(range (inc n)))) )", "problem": 42, "user": "5142e808e4b0c172af7558c9"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "5145832be4b0e8879607340a"}, {"code": "(fn [n] \n  (reduce * \n          (take n (iterate inc 1)))\n  )", "problem": 42, "user": "5135a74ae4b04ac1f358dd46"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "514b66f4e4b0bd81940b86cb"}, {"code": "(fn fact [n]\n  (if (= n 1)\n    1\n    (* (fact (- n 1)) n)))", "problem": 42, "user": "513fb358e4b00f13ea1bd893"}, {"code": "#(reduce * (range 1 (inc %1)))", "problem": 42, "user": "4fb4303fe4b081705acca2ac"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "514d8084e4b019235f6c0588"}, {"code": "(fn ! [n] (if (= n 1) 1 (* n (! (dec n)))))", "problem": 42, "user": "50723bbae4b0e3170b5a868b"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f5d0f25e4b0030a34fb2b33"}, {"code": "#(reduce * (map inc (range %)))", "problem": 42, "user": "514cfa27e4b019235f6c057d"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "514457fbe4b0b4fb4ace5f43"}, {"code": "(fn fac [n]\n  (if (> n 1)\n    (* n (fac (dec n)))\n    1))", "problem": 42, "user": "514e9a14e4b019235f6c0597"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "514d2c7ee4b019235f6c0582"}, {"code": "(fn fa [n]\n  (if (< n 3)\n    n\n    (* n (fa (- n 1)))))", "problem": 42, "user": "5110b8bae4b04c71fce993f4"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "514d398ee4b019235f6c0583"}, {"code": "(fn [n]\n  (reduce * (range 1 (+ n 1))))", "problem": 42, "user": "51508efce4b0c51f0585bbb4"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "51502056e4b098b221effc25"}, {"code": "(fn fact [n]\n  (if (= n 0)\n    1\n    (* n (fact (- n 1)))))", "problem": 42, "user": "5151a6bee4b03e678e393ad3"}, {"code": "#(apply * (take % (iterate inc 1)))", "problem": 42, "user": "4f50d933e4b03ad3f0c10d11"}, {"code": "(fn fact [n]\n  (if (= n 0)\n    1\n    (* n (fact (- n 1)))))", "problem": 42, "user": "5151d574e4b03e678e393ae0"}, {"code": "(fn [x]\n    (loop [n x f 1]\n        (if (= n 1)\n            f\n            (recur (dec n) (* f n)))))", "problem": 42, "user": "5151aa14e4b03e678e393ad4"}, {"code": "(fn factorial [x] \n  (if (> x 1) \n    (* x (factorial (- x 1))\n       ) \n    \t1 \n    )\n  )", "problem": 42, "user": "513bafa4e4b04402f587b77c"}, {"code": "#(apply * (range % 0 -1))", "problem": 42, "user": "51037468e4b00c483ae17702"}, {"code": "#(loop [n %1 acc 1]\n   (if (not= 0 n)\n     (recur (dec n) (* acc n))\n     acc))", "problem": 42, "user": "51460e4ce4b04ef915e37314"}, {"code": ";;#(reduce (fn [res item](* res (+ 1 item))) 1 (range %))\n#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5016ac54e4b052339a490e7b"}, {"code": "(fn fac [n]\n  (if (= 1 n)\n    1\n    (* n (fac (- n 1)))))", "problem": 42, "user": "4ef2eb4d535dced4c769f226"}, {"code": "#(reduce * (range 1 (+ 1 %)))", "problem": 42, "user": "51533ecde4b0252ac4b16619"}, {"code": "(fn f [n] (if (= 1 n) 1 (* n (f (dec n)))))", "problem": 42, "user": "514def61e4b019235f6c0591"}, {"code": "(fn fact [n]\n  (cond\n  (= 1 n) 1\n   :else (* n (fact (- n 1)))\n   ) )", "problem": 42, "user": "51427a8be4b0b50abeb46b37"}, {"code": "#(reduce * % (range 2 %))", "problem": 42, "user": "4f296a80e4b0d6649770a02a"}, {"code": "#(apply * (range 1 (+ 1 %)))", "problem": 42, "user": "50ba5113e4b03e68e4411c7d"}, {"code": "(fn fac[x]\n  (if (= x 1)\n    1\n    (let [prev (- x 1)]\n      (* x (fac prev)))))", "problem": 42, "user": "4e58ef07535d8a8b8723a299"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5140c505e4b049dea086df40"}, {"code": "#(reduce * % (range 1 %))", "problem": 42, "user": "514afd1be4b0bd81940b86c6"}, {"code": "(fn [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "51558136e4b06c5f6a1490a8"}, {"code": "(fn [n] (reduce #(* %1 %2) 1 (take n (iterate inc 1))) )", "problem": 42, "user": "5150a7d7e4b03e678e393abb"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "514f0723e4b019235f6c0599"}, {"code": "(fn fact [input]\n  (reduce * (range 2 (inc input))))", "problem": 42, "user": "515737f0e4b0b0b4b87062d0"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "51473a70e4b0d520409ed394"}, {"code": "(fn f [n] (if (= n 1) 1 (* n (f (- n 1)))))", "problem": 42, "user": "5152020de4b03e678e393ae7"}, {"code": "(fn [n] (reduce * (range 1 (+ n 1))))", "problem": 42, "user": "51547920e4b084ca81ee2e1c"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "515828b8e4b0a069fd272c71"}, {"code": "(fn fac [n] (if (zero? n) 1 (* n (fac (dec n)))))", "problem": 42, "user": "504e71cbe4b0f6ff3350c4b3"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "50e1bdd8e4b019fc399ce17f"}, {"code": "#(reduce * (range % 0 -1))", "problem": 42, "user": "515a6151e4b0394f658fe241"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "514e4ae4e4b019235f6c0594"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "514d7e29e4b019235f6c0587"}, {"code": "(fn ! [x]\n  (if (= 1 x) x\n    (* x (! (dec x)))))", "problem": 42, "user": "515c9f14e4b069911535cf16"}, {"code": "#(reduce * (range 1 (+ 1 %)))", "problem": 42, "user": "515efd01e4b02c55805ea238"}, {"code": "(fn factorial [x]\n    (if (= 1 x)\n      x\n      (* x (factorial (dec x)))\n    )\n)", "problem": 42, "user": "513b43ede4b067e25a345ed3"}, {"code": "#(reduce * (range 1 (+ 1 %)))", "problem": 42, "user": "5073e7fde4b054001656accb"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "515ead6be4b049add99a053e"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "515cf9b5e4b00901442db1d4"}, {"code": "(fn factorial [n]\n  (\n   (fn fac [n acc]\n     (if\n       (= n 0)\n       acc\n       (recur (- n 1) (* acc n))\n       )\n     )\n   ; Case for n<0 or non-integral here\n   n 1)\n  )", "problem": 42, "user": "515f8a0de4b0e2be8aa20bce"}, {"code": "(fn [n]\n   (reduce * (range 1 (inc n))))", "problem": 42, "user": "50f48298e4b004d364930527"}, {"code": "#(loop [n 1 fac 1]\n   (if (= n %)\n     fac\n     (recur (inc n) (* (inc n) fac))))", "problem": 42, "user": "515bed3be4b0388ca8ca1525"}, {"code": "(fn [x] (loop [x x acc 1] (if (= x 0) acc (recur (dec x) (* acc x)))))", "problem": 42, "user": "515ef58be4b02c55805ea237"}, {"code": "#(reduce * (rest (range (+ % 1))))", "problem": 42, "user": "515ffbfbe4b0e2be8aa20bdd"}, {"code": "(fn [i] (apply * (range 1 (+ i 1))))", "problem": 42, "user": "515e38ace4b049add99a0538"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "504ee511e4b0e7ad84dbc4a4"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "515e8ce2e4b049add99a053d"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "50705886e4b07bd6ad9b9f2a"}, {"code": "(fn [l] (reduce #(* %1 %2) (range 1 (inc l))))", "problem": 42, "user": "515d6281e4b00901442db1dc"}, {"code": "#(reduce * 1 (take % (iterate inc 1)))", "problem": 42, "user": "51592b81e4b0394f658fe22c"}, {"code": "#(apply * % (range 2 %))", "problem": 42, "user": "4f437751e4b0d7d3c9f3fd20"}, {"code": "(fn fac [x] (if (> x 1) (* (fac (dec x)) x) 1))", "problem": 42, "user": "5162757ee4b03cfa3774b3fe"}, {"code": "(fn fac [x] (reduce * (range x 1 -1)))", "problem": 42, "user": "515f2a85e4b0595cf3d1da44"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "51170b49e4b0063b4e3e16d9"}, {"code": "(fn fi [x] (if (> x 1) (* (fi (dec x)) x) x))", "problem": 42, "user": "512bb7ede4b04d059cf1fd18"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5166e80de4b060c690c1f4c5"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "50fb46e6e4b0d10d794c19e5"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "51670895e4b013fc800656c1"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5141bc82e4b02fd87f5064c5"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4fdbc075e4b05e33b9224f61"}, {"code": "(fn [n0]\n    (loop [n n0\n           res 1]\n      (if (= 1 n)\n        res\n        (recur (dec n) (* res n)))))", "problem": 42, "user": "5165a235e4b079ad97ec44ac"}, {"code": "#(apply * (map inc (range %)))", "problem": 42, "user": "512700c4e4b083bb8f88cf14"}, {"code": "(fn xxx [n]\n  (if (> n 0)\n    (* n (xxx (dec n)))\n    1))", "problem": 42, "user": "5163a7bbe4b055933a9ca02f"}, {"code": "#(apply * (range 1 (+ % 1)))", "problem": 42, "user": "5168d4ebe4b03f62cda68cdf"}, {"code": "#(reduce * (range 1 (+ % 1)))", "problem": 42, "user": "50f3ba98e4b041536e2eca39"}, {"code": "(fn [n]\n  (reduce #(* % %2) (range 1 (+ n 1))))", "problem": 42, "user": "51696bcde4b03f62cda68ce7"}, {"code": "#(reduce * (for [x (range %)] (inc x)))", "problem": 42, "user": "51631002e4b017b283c712c1"}, {"code": "(fn [n]\n  (loop [v n res 1]\n    (cond \n     (= v 0) res\n     :else (recur (dec v) (* res v)))))", "problem": 42, "user": "5154fa3fe4b0179c5115f4e6"}, {"code": "(fn\n  [n]\n  (loop\n    [iters n\n     accum 1]\n    (if (= iters 1)\n      accum\n      (recur (dec iters) (* iters accum)))))", "problem": 42, "user": "4e6fe3a6535d5021c1a89629"}, {"code": "(fn [n]\n    (reduce * (range 1 (+ n 1))))", "problem": 42, "user": "50bf6f93e4b0ffd967a66cbf"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5150f87ae4b03e678e393ac7"}, {"code": "(comp (partial apply *) rest range inc)", "problem": 42, "user": "5079fd71e4b08327cd804a66"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5115e112e4b0ce5098ee73c4"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5143952fe4b0b4fb4ace5f38"}, {"code": "(fn f\n  ([n] (f 1 n))\n  ([s n] \n    (if (= n 1) \n      s\n      (f (* s n) (dec n)))))", "problem": 42, "user": "516e9d9be4b06aac486e5b2b"}, {"code": "(fn [n]\n  (loop [result 1 x 1]\n    (if (< x n)\n      (recur (* result (inc x)) (inc x))\n      result)))", "problem": 42, "user": "50b1d166e4b03ea880433554"}, {"code": "#(apply * (take % (iterate inc 1)))", "problem": 42, "user": "511d6a01e4b022853b0e07a5"}, {"code": "(fn fact [n]\n  (if (= 1 n)\n    1\n    (* (fact (dec n)) n)))", "problem": 42, "user": "516f06dce4b06aac486e5b39"}, {"code": "(fn fact [n]\n  (loop [n n\n         result 1]\n    (if (= n 1)\n      result\n      (recur (dec n) (* result n)))))", "problem": 42, "user": "516ff477e4b034fe8eaf70f3"}, {"code": "(fn [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "51696ee7e4b03f62cda68ce8"}, {"code": "(fn f[n] (let [fa (fn ff[x acc]\n                    (cond\n           \t\t\t  (= x 0) acc\n                      :else (ff (dec x) (* acc x) )\n                    )\n                   )\n               ]     \n           (fa n 1)\n          )\n  )", "problem": 42, "user": "4fb03cf4e4b081705acca262"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "516ea313e4b06aac486e5b2c"}, {"code": "(fn f [n]\n  (if (= n 1)\n    1\n    (* n (f (- n 1)))))", "problem": 42, "user": "5153316ce4b0252ac4b16611"}, {"code": "(fn f [n]\n  (loop [cnt n result 1]\n    (if (= cnt 0)\n      result\n      (recur (dec cnt) (* result cnt))\n      )))", "problem": 42, "user": "516bc02ce4b005fd0cdf85c5"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "5164867fe4b003cf19fdde3e"}, {"code": "#(apply * (range 1 (+ 1 %)))", "problem": 42, "user": "50a2e3fbe4b029e8bace3629"}, {"code": "#(apply * (range 2 (inc %)))", "problem": 42, "user": "51652141e4b003cf19fdde48"}, {"code": "(fn [number]\n  (loop [total 1 n 1]\n    (if (> n number) total\n      (recur (* total n) (+ n 1))\n    )\n  )\n)", "problem": 42, "user": "4f7683dae4b0fbe0118ec56f"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "516dc88ae4b046df6fbb76a1"}, {"code": "(fn [i]\n  (loop [n i res 1]\n    (if (= n 1)\n      res\n      (recur (dec n) (* n res)))))", "problem": 42, "user": "51684318e4b03f62cda68cd6"}, {"code": "(fn [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "516933ece4b03f62cda68ce4"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5134973ce4b0230e9f713b42"}, {"code": "(fn my-fact\n  ([n] (my-fact n 1))\n  ([n a]\n     (if (zero? n) a\n         (recur (dec n) (* a n)))))", "problem": 42, "user": "51740b65e4b0d277d717bc67"}, {"code": "(fn fact\n\t[x]\n\t(loop [i x result 1]\n\t\t(if (= i 1)\n\t\t\tresult\n\t\t\t(recur (- i 1) (* result i)))))", "problem": 42, "user": "51701a9ce4b034fe8eaf70f5"}, {"code": "(fn [x] (apply * (range 1 (inc x))))", "problem": 42, "user": "51227a00e4b068a9582e656b"}, {"code": "(fn [n]\n   (reduce * (map inc (range n))))", "problem": 42, "user": "51736d4de4b00f4b6b0490d7"}, {"code": "(fn fact [n]\n  (if (< n 2)\n    1\n    (* n (fact (dec n)))))", "problem": 42, "user": "5175616ae4b0dea9bbfba576"}, {"code": "#(reduce * (range 2 (inc %)))", "problem": 42, "user": "5173726be4b098276e74652c"}, {"code": "(fn p42 [n]\n  (reduce * (range 1 (inc n)))\n)", "problem": 42, "user": "51750fc5e4b07031762f2ee6"}, {"code": "(fn [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "515ebde3e4b01e5d11ccd0a8"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5164d97ee4b003cf19fdde43"}, {"code": "#(* (reduce * (range 1 %)) %)", "problem": 42, "user": "516eb196e4b06aac486e5b2e"}, {"code": "(fn fact\n  ([n] (fact n 1))\n  ([n acc]\n     (if (<= n 1)\n       acc\n       (recur (dec n) (* n acc)))))", "problem": 42, "user": "5170643ee4b004f79986ad89"}, {"code": "(fn [x] (reduce * (range 1 (+ x 1))))", "problem": 42, "user": "510fd798e4b04c71fce993dc"}, {"code": "(fn [x]\n  (loop [p 1 c 1 m x]\n    (if (> c m)\n      p\n      (recur (* c p)\n             (inc c)\n             m))))", "problem": 42, "user": "509331d9e4b097f48cc38580"}, {"code": "(fn [n]\n    (loop [cnt n acc 1]\n       (if (zero? cnt)\n            acc\n          (recur (dec cnt) (* acc cnt)))))", "problem": 42, "user": "51778122e4b085adf681d89d"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "51780f88e4b03d69594194c9"}, {"code": "#(reduce (fn [a b] (* a b)) (rest (range (+ 1 %))))", "problem": 42, "user": "51757af0e4b085adf681d873"}, {"code": "(fn [n] ((fn [i f] (if (> i n) f (recur (inc i) (* f i)) )) 1 1))", "problem": 42, "user": "51729002e4b044b2ef48a850"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f7e7cbde4b06e829148e1cf"}, {"code": "#(apply * (take % (iterate inc 1)))", "problem": 42, "user": "515ff4b9e4b0e2be8aa20bd9"}, {"code": "#(reduce * (range 1 (+ % 1)))", "problem": 42, "user": "517531c6e4b07031762f2eea"}, {"code": "(fn factorial [x]\n  (reduce * (range 1 (inc x))))", "problem": 42, "user": "517a025ce4b01aacecbecbe6"}, {"code": "#(apply * (range 2 (inc %)))", "problem": 42, "user": "517adc6ce4b0925c997201c4"}, {"code": "(fn f [x] (if (< x 1) 1 (* x (f (- x 1)))))", "problem": 42, "user": "515fb48fe4b0e2be8aa20bd5"}, {"code": "(fn [n]\n    (loop [i n, acc n]\n        (if (= i 1) \n            acc\n            (recur (dec i) (* acc (dec i))))))", "problem": 42, "user": "51789dfae4b03d69594194d7"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "50cfcad6e4b00b15ecee9752"}, {"code": "(fn fac [n]\n  (if (<= n 1)\n    1\n    (* n (fac (dec n)))))", "problem": 42, "user": "517bf28de4b07ef0e56148d5"}, {"code": "#(loop [s 1 p %]\n   (if (= 1 p)\n     s\n     (recur (* s p) (dec p))))", "problem": 42, "user": "5163b06be4b055933a9ca030"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "517bbbfce4b07ef0e56148cf"}, {"code": "#(reduce * (range 2 (inc %)))", "problem": 42, "user": "5093a80be4b097f48cc38583"}, {"code": "#(apply * (take % (iterate inc 1)))", "problem": 42, "user": "51789599e4b03d69594194d6"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "51780bfce4b0f89a8f53839c"}, {"code": "#(reduce * (take % (iterate dec %)))", "problem": 42, "user": "517e5a91e4b0329b27fa9f55"}, {"code": "#(apply * % (range 2 %))", "problem": 42, "user": "4ed286d4535d44c135fd68d7"}, {"code": "(fn [x] (reduce * (range 1 (+ 1 x))))", "problem": 42, "user": "51803613e4b04f45bde7d8fd"}, {"code": "(fn\n  [n]\n  (reduce * 1 (range 1 (inc n))))", "problem": 42, "user": "51804bcbe4b04f45bde7d901"}, {"code": "#(loop [fac 1   n  %1]\n     (if  (= 0 n)   fac\n        (recur (* fac n) (dec n)\n)))", "problem": 42, "user": "517945dce4b0684c1c981a43"}, {"code": "#(reduce * (take-while (partial >= %) (iterate inc 1)))", "problem": 42, "user": "5166b491e4b060c690c1f4be"}, {"code": "(fn [m]\n  (loop [s 1 n m]\n    (if (= n 0)\n      s\n      (recur (* s n) (dec n)))))", "problem": 42, "user": "50b9d991e4b04934c218a4a9"}, {"code": "#(reduce * (take % (iterate inc 1)))", "problem": 42, "user": "5180a93fe4b0e3fc13e244e8"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "50fe9d60e4b03cd852b4e84f"}, {"code": "(fn fac [n]\n  (if (<= n 1) 1 (* n (fac (dec n)))))", "problem": 42, "user": "517b59b8e4b0925c997201d0"}, {"code": "(fn [x]\n   (loop [n x f 1]\n     (if (= n 1) f\n       (recur (dec n) (* f n)))))", "problem": 42, "user": "517e9f92e4b09104ecebe7e4"}, {"code": "(fn f [x] (if (= x 1) 1 (* x (f (- x 1)))))", "problem": 42, "user": "50fe2420e4b03cd852b4e84a"}, {"code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "problem": 42, "user": "51383346e4b0a5db03d727d4"}, {"code": "(fn [n] (apply *(range 1(inc n))))", "problem": 42, "user": "518139bee4b06547fbae1149"}, {"code": "#(apply * (range 1 (+ 1 %)))", "problem": 42, "user": "517e6671e4b0329b27fa9f56"}, {"code": "(fn fac [n]\n  (loop [n n acc 1]\n    (if (= n 0)\n      acc\n      (recur (dec n) (* acc n)))))", "problem": 42, "user": "51750cd4e4b07031762f2ee5"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "5170ea06e4b0d70c8bbbf235"}, {"code": "(fn factorial [x]\n  (apply * (rest (take (+ 1 x) (iterate inc 0)))))", "problem": 42, "user": "5186571de4b0da5a5be3bad1"}, {"code": "#(reduce * (range 1 (+ % 1)))", "problem": 42, "user": "5184f9e9e4b02826a645f39e"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "511ffbabe4b0e88f5a20c40c"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "518696c1e4b0c40be512d708"}, {"code": "(fn [x]\n    (loop [s x r 1]\n        (if (zero? s)\n            r\n            (recur (dec s) (* r s)))))", "problem": 42, "user": "5179fd22e4b01aacecbecbe5"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4e6a3b79535d8ccf87e9feb3"}, {"code": "(fn fac [n]\n  (if (zero? n)\n      1\n      (* (fac (dec n)) n)))", "problem": 42, "user": "5186134ce4b0da5a5be3bac7"}, {"code": "#(reduce * (take % (iterate inc 1)))", "problem": 42, "user": "517dc49be4b0fcc7c5d37d38"}, {"code": "(fn [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "5160195ae4b0e2be8aa20be3"}, {"code": "#(loop [c % a 1] (if (= 0 c) a (recur (- c 1) (* a c))))", "problem": 42, "user": "517bc969e4b07ef0e56148d0"}, {"code": "(fn foo [n] (if (or (= n 0) (= n 1)) 1 (* n (foo (dec n)) )))", "problem": 42, "user": "516733fce4b079759a74a5e9"}, {"code": "(fn fact [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "4ec4d723535dcc7ae8597d65"}, {"code": "(fn fact [x] \n  (if (= 0 x)\n    1\n    (* x (fact (dec x)))))", "problem": 42, "user": "4fecebe1e4b0681fd128dcac"}, {"code": "(fn [number]\n  (loop [number number\n         factorial 1]\n    (if (= number 0) factorial\n    \t(recur (dec number) (* number factorial)))))", "problem": 42, "user": "5152bc4ee4b001f44f99bfef"}, {"code": "#(reduce * (range 1 (inc %1)))", "problem": 42, "user": "51805d22e4b0e3fc13e244df"}, {"code": "(fn [x]\n  (loop [i 1 v 1]\n    (if (<= i x)\n      (recur (inc i) (* v i))\n      v)))", "problem": 42, "user": "51899891e4b0288ada3dbdab"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "517e25c6e4b0329b27fa9f51"}, {"code": "#(loop [result 1 current %1]\n   (if (> current 0)\n     (recur (* result current) (dec current))\n     result))", "problem": 42, "user": "518ccf6be4b05e6c8537e386"}, {"code": "#(apply * (range 1 (+ % 1)))", "problem": 42, "user": "518b761ae4b0f028e99addee"}, {"code": "#(reduce * 1 (range 1 (inc %)))", "problem": 42, "user": "51897709e4b0288ada3dbdaa"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "51823a97e4b0f2adb733651e"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "5161c6a7e4b009fba0926e38"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5159849ce4b0394f658fe236"}, {"code": "(fn fac [n] (if (= n 1) 1 (* n (fac (dec n)))))", "problem": 42, "user": "518df0f0e4b0c929d50502e1"}, {"code": "#(reduce * % (range 1 %))", "problem": 42, "user": "518ec633e4b0cd6ff516769e"}, {"code": "(fn [n]\n  (loop [x n y 1]\n  (if (<= x 1) y (recur (dec x) (* x y)))\n  ))", "problem": 42, "user": "5140771ae4b076604f1aa555"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "51771cb1e4b085adf681d895"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4dcd327b535d5973398f929b"}, {"code": "(fn [x] (loop[zV 1 cD x](if(>= cD 0)\n                          (recur\n                           (if(or(= cD 1)(= cD 0))\n                             (* zV 1)\n                             (* zV cD)\n                             )\n                           (- cD 1)\n                           )\n                          zV\n                     )\n          )\n  )", "problem": 42, "user": "5177cacde4b0261ae665b877"}, {"code": "(fn factorial [n]\n  (if (= n 0) 1 (* n (factorial (- n 1)))))", "problem": 42, "user": "516282c3e4b0e6d3c4734711"}, {"code": "(fn [n]\n  (reduce #(* %1 %2) (range 1 (inc n))))", "problem": 42, "user": "519136e9e4b0f8ef0be96c01"}, {"code": "(fn f [x] (if (<= x 1) 1 (* x (f (- x 1)))))", "problem": 42, "user": "5154b16be4b0179c5115f4e2"}, {"code": "(fn factorial \n    ([n] \n        (factorial n 1)) \n    ([n acc] \n        (if  (= n 0)   acc \n             (recur (dec n) (* acc n)))))", "problem": 42, "user": "5191045ee4b0f8ef0be96bf3"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "503be880e4b0fc0f99c2e54a"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "51933b41e4b0c663c5d86ca2"}, {"code": "(fn fact ([n] (fact 1 n)) ([acc n] (if (zero? n) acc (fact (* acc n) (dec n)))))", "problem": 42, "user": "5194cd85e4b05be8c43d2381"}, {"code": "(fn [x] (reduce * (range 1 (inc x))))", "problem": 42, "user": "4f16d3fd535d64f60314644e"}, {"code": "(fn [value] \n\t(loop [value value fact 1] \n\t\t(if (zero? value) fact (recur (dec value) (* fact value)))\n\t)\n)", "problem": 42, "user": "5167d0ede4b0c5a4140a3097"}, {"code": "#(reduce * (range 1 (+ %1 1)))", "problem": 42, "user": "5143824ae4b0b4fb4ace5f36"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "518a8c4be4b0df82f5685903"}, {"code": "(fn fact\n  [n]\n  (if (< n 2)\n    1\n    (* n (fact (- n 1)))))", "problem": 42, "user": "5194675fe4b0142f60b4aedf"}, {"code": "#(reduce * 1 (range 1 (inc %)))", "problem": 42, "user": "5197f674e4b068aa333628f6"}, {"code": "#(apply * (rest (range (inc %))))", "problem": 42, "user": "51980f7ce4b068aa333628f7"}, {"code": "#(loop [acc 1 left %]\n   (if (<= left 1) acc\n     (recur (* acc left) (dec left))))", "problem": 42, "user": "5196568fe4b04c0af7ff3c1c"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4dada913c9a9d6ed2d99dc57"}, {"code": "#(loop [fac %\n       result 1]\n  (if\n    (<= fac 1) result\n    (recur (dec fac) (* result fac))\n  )\n)", "problem": 42, "user": "518e6966e4b051adb72789ec"}, {"code": "(fn [n] (apply * (range 1 (inc n))))", "problem": 42, "user": "51990df9e4b068aa333628fc"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f409e29e4b0e243712b1fb6"}, {"code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "problem": 42, "user": "519b231ee4b0ac1b7dced6a2"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "519b2570e4b0ac1b7dced6a3"}, {"code": "(fn ! [n]\n  (if (= n 1)\n    1\n    (* n (! (dec n)))))", "problem": 42, "user": "5073de20e4b054001656acca"}, {"code": "(fn [number]\n  (loop [n number fact 1]\n    (if (> n 0)\n      (recur (dec n) (* fact n))\n      fact\n      )\n    )\n  )", "problem": 42, "user": "51377188e4b04059df19f303"}, {"code": "#(reduce * (take % (iterate inc 1)))", "problem": 42, "user": "50377d53e4b0af0658af77ad"}, {"code": "(fn factorial [x] (if (> x 0) (* x (factorial (dec x))) 1))\n;solution better than mine\n;#(reduce * (range 1 (inc %)))", "problem": 42, "user": "519126d5e4b0f8ef0be96bff"}, {"code": "#(reduce * 1 (range 1 (inc %)))", "problem": 42, "user": "5199ca05e4b022efe2b3ba88"}, {"code": "#(apply * ( take % ( iterate inc 1 )))", "problem": 42, "user": "518c5236e4b087e178201de0"}, {"code": "#(reduce * (map inc (range %)))", "problem": 42, "user": "5194f482e4b05be8c43d2385"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "51131da8e4b0350614f07a83"}, {"code": "#(reduce * (range 1 (+ % 1)))", "problem": 42, "user": "5192ce1de4b0024e2d75f7d2"}, {"code": "#(reduce * (map inc (range %)))", "problem": 42, "user": "5191e91de4b08962174cf733"}, {"code": "#(apply * (range 1 (inc %1)))", "problem": 42, "user": "516385cee4b055933a9ca02d"}, {"code": "#(reduce * 1 (range 1 (inc %)))", "problem": 42, "user": "519db0ede4b037b32803f9b9"}, {"code": "(fn [x] (reduce * (range 1 (inc x))))", "problem": 42, "user": "5195b8cce4b04c0af7ff3c08"}, {"code": "(fn fac [n] (if (= n 1) 1 (* n (fac (dec n)))))", "problem": 42, "user": "519b7d76e4b02a926d9a436e"}, {"code": "(fn fact [n]\n  \n  (cond \n   (= 0 n) 1\n   (= 1 n) 1\n   :else (* n (fact (- n 1)) )\n   )\n  \n  \n  )", "problem": 42, "user": "5180dc04e4b06b8caf33fa01"}, {"code": "(fn factorial [x] (if (= x 1) 1 (* x (factorial (dec x)))))", "problem": 42, "user": "50a3f23ae4b08bbd0eb4ed2f"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "51a05bede4b0b292b01ee3f4"}, {"code": "(fn fact [x]\n  (if (> x 1) \n    (* x (fact (- x 1)))\n    1))", "problem": 42, "user": "51a2569ee4b00957e520db7d"}, {"code": "(fn [n]\n  (loop [product 1 counter 1]\n    (if (> counter n)\n      product\n      (recur (* counter product) (+ counter 1)))))", "problem": 42, "user": "51991a89e4b068aa333628fd"}, {"code": "#(reduce * (range 1 (inc %1)))", "problem": 42, "user": "4e57afc5535d8a8b8723a288"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "51a10b2ce4b0b292b01ee3fe"}, {"code": "#(reduce * % (range 2 %))", "problem": 42, "user": "4fe9f0f6e4b0547ebccb247b"}, {"code": "#(reduce * (range % 1 -1))", "problem": 42, "user": "506ba58be4b0eda3100c090b"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "51a477eee4b0def3c5c58692"}, {"code": "#(reduce * (range 1 (+ 1 %1)))", "problem": 42, "user": "51a865dfe4b08d8ec191b80f"}, {"code": "(fn [n] (reduce * (take n (iterate inc 1))))", "problem": 42, "user": "51a768e0e4b0da5f497bde84"}, {"code": "(fn fac [x]\n  (if (= x 1)\n    1\n    (* (fac (dec x)) x)))", "problem": 42, "user": "51197750e4b057cba170bc99"}, {"code": "(fn fa [x]\n  (if (= x 1)\n    x\n    (* x (fa (dec x)))))", "problem": 42, "user": "51a671d4e4b0740bfd1afd21"}, {"code": "#(apply * (range 2 (inc %)))", "problem": 42, "user": "519964cbe4b0aa09cbc0b849"}, {"code": "(fn [n] (apply * (range 1 (inc n))))", "problem": 42, "user": "518a59b3e4b02bf06f6bbb4b"}, {"code": "(fn fact [x]\n  (if (= x 0)\n    1\n    (* x (fact (dec x)))))", "problem": 42, "user": "51a8f0c6e4b08d8ec191b821"}, {"code": "(fn fact\n  [n]\n  (loop [c n\n         coll []]\n  \t(if (> c 0)\n      (recur (dec c) (conj coll c))\n      (apply * coll))))", "problem": 42, "user": "51a9dbc9e4b04e3dc0c27b1e"}, {"code": "(fn [x] \n  (nth  \n   ((fn fact [a b] \n      (lazy-seq \n         (cons a (fact (* a b) (inc b))\n          )\n       )\n      ) 1 1 )\n   x )\n)", "problem": 42, "user": "51aab611e4b04e3dc0c27b2d"}, {"code": "(fn fa [n]\n  (cond\n   (= n 1) 1\n   :else (* n (fa (dec n)))))", "problem": 42, "user": "50bc4e73e4b0594b91591c3d"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "50f69a3ce4b0035e89151844"}, {"code": "(fn [num]\n  (loop [n num\n         fact 1]\n    (if (= 1 n)\n      fact\n      (recur (- n 1) (* fact n)))))", "problem": 42, "user": "4e09392a535d04ed9115e7ae"}, {"code": "#( reduce * (range 1 (inc %) ) )", "problem": 42, "user": "51aa4eede4b04e3dc0c27b25"}, {"code": "#(reduce * (range 2 (inc %)))", "problem": 42, "user": "516db4f6e4b046df6fbb76a0"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5183f5d7e4b02826a645f393"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "506cad7de4b0a302964c548e"}, {"code": "(fn [n]\n  (apply * (range 1 (inc n))))", "problem": 42, "user": "4e723bcb535d5021c1a8965c"}, {"code": "(fn [x]\n    (reduce (fn [a b] (* a b)) 1 (range 1 (+ x 1))))", "problem": 42, "user": "5141abf1e4b02fd87f5064c3"}, {"code": "#(reduce * (take % (iterate dec %)))", "problem": 42, "user": "51a7b4fee4b0da5f497bde8b"}, {"code": "(fn [n]\n  (apply * (range 1 (inc n))))", "problem": 42, "user": "51ac6360e4b09397d510976c"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "51a1659de4b00957e520db72"}, {"code": "(fn [x] (loop [d x res 1] (if (= 1 d) res (recur (- d 1) (* res d)))))", "problem": 42, "user": "51a7f74be4b08d8ec191b802"}, {"code": "(fn [n]\n  (apply * (range 1 (inc n))))", "problem": 42, "user": "511ad71fe4b07ab9ec45617d"}, {"code": "#(reduce * (range 1 (+ % 1)))", "problem": 42, "user": "51a54fb4e4b0def3c5c586a3"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "519291c1e4b08962174cf74b"}, {"code": "(fn fact [x] (if(= x 0) 1 (* x (fact (dec x)))))", "problem": 42, "user": "51ab1718e4b04e3dc0c27b2f"}, {"code": "(fn f [n]\n  (if (< n 2) 1\n    (* n (f (dec n)))))", "problem": 42, "user": "51ad0ab8e4b09397d510977b"}, {"code": "(fn [n] (loop [s 1 acc 1] (if (> s n) acc (recur (inc s) (* acc s)))))", "problem": 42, "user": "51a3c9cde4b0e77c4ca60bf9"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "510b0480e4b078ea719210fa"}, {"code": "#(reduce * (map inc (range %)))", "problem": 42, "user": "51a417dde4b0def3c5c58688"}, {"code": "(fn fib [x] (if (> x 1) (* x (fib (dec x))) x))", "problem": 42, "user": "51b091e9e4b0c53cf2e68a68"}, {"code": "(fn [n]\n  (loop [x n\n         v 1]\n    (cond\n      (= x 0) (* v 1)\n      (= x 1) (* v 1)\n      :else (recur (dec x) (* v x)))))", "problem": 42, "user": "4e68ed35535d8ccf87e9fe92"}, {"code": "#(reduce * (take % (iterate inc 1)))", "problem": 42, "user": "51b0fc95e4b0c53cf2e68a72"}, {"code": "(fn fact [x] (if (> x 1) (* x (fact (- x 1))) 1))", "problem": 42, "user": "51b3a2c8e4b0f094dd986fa6"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "51b38769e4b026427ecf067f"}, {"code": "(fn fact [n]\n  (if (= n 0)\n    1\n    (* n (fact (dec n)))))", "problem": 42, "user": "5192dd39e4b0c663c5d86c9e"}, {"code": "(fn fact [n]\n  (if (> n 0)\n    (* n (fact (dec n)))\n    1))", "problem": 42, "user": "51b24defe4b02f8f128bb963"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "50d4593ee4b09cc622d65a68"}, {"code": "#(loop [f 1\n        n %]\n   (if (zero? n)\n       f\n     (recur (* f n) (dec n))))", "problem": 42, "user": "51ab1da1e4b04e3dc0c27b30"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "51afa3d9e4b0c53cf2e68a51"}, {"code": "(fn [n]\n  (loop [n n\n         acc 1]\n    (if (= 1 n)\n      acc\n      (recur (dec n) (* acc n)))))", "problem": 42, "user": "4fd11132e4b04c3a95aa0409"}, {"code": "(fn [n] (loop [n n final n]\n    (if (= n 1)\n      final\n      (recur (dec n) (* final (dec n))))))", "problem": 42, "user": "4db6d993535d1e037afb2180"}, {"code": "#(loop [i % s 1] (if (= i 1) s (recur (dec i) (* s i))))", "problem": 42, "user": "51b1ef95e4b02f8f128bb95e"}, {"code": "#(reduce * (range 1 (+ 1 %)))", "problem": 42, "user": "50a5b7e9e4b0aa96157e2610"}, {"code": "(fn faci [n]\n  (loop [i 0 f 1]\n    (if (= i n)\n      f\n      (recur (inc i) (* f (inc i))))))", "problem": 42, "user": "51672d15e4b079759a74a5e7"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "51aa5434e4b04e3dc0c27b26"}, {"code": "(fn f [a] (if (= a 1)\n          1\n          (* a (f (- a 1)))\n          )\n )", "problem": 42, "user": "51aeb1f4e4b09397d5109794"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "518ad8fce4b06da86c1973c1"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "505d70e8e4b0e6aca564be09"}, {"code": "#(reduce * (range 1 (+ 1 %)))", "problem": 42, "user": "51b3f109e4b0f094dd986fa9"}, {"code": "(fn [n]\n  (loop [acc 1\n         n n]\n    (if (< n 2)\n      acc\n      (recur (* n acc) (- n 1)))))", "problem": 42, "user": "4f4e78fee4b03ad3f0c10cc8"}, {"code": "#(->> % (inc) (range 1) (reduce *))", "problem": 42, "user": "51b793d3e4b0d906fcd71d38"}, {"code": "(fn [x] (reduce * (range 1 (+ x 1))))", "problem": 42, "user": "51b7b521e4b0d906fcd71d3a"}, {"code": "#(loop [x % f 1]\n   (if (= x 0)\n     f\n     (recur (dec x) (* x f))))", "problem": 42, "user": "5136f659e4b04059df19f2fd"}, {"code": "(fn [x] (reduce * (range 1 (inc x))))", "problem": 42, "user": "5190772de4b09156e89b2a0a"}, {"code": "(fn fac [n]\n  (if (= n 1) 1\n      (* n (fac (dec n)))))", "problem": 42, "user": "51b76227e4b0d906fcd71d35"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f99bf3ee4b0dcca54ed6d01"}, {"code": "(fn [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "51bc2f6ae4b0fe3ecfb46452"}, {"code": "(fn fac [n] (if (= n 0) 1 (* n (fac (dec n)))))", "problem": 42, "user": "51b91b08e4b0e871ca4958f8"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4fa340b4e4b081705acca18c"}, {"code": "(fn fact1 [n]\n  (reduce * (drop 1 (range (+ n 1)))))", "problem": 42, "user": "51b73a91e4b0d906fcd71d33"}, {"code": "(fn factorials\n  ([n] (factorials n 1))\n  ([n r]\n     (if (= n 1)\n       (* r n)\n       (recur (- n 1) (* n r)))))", "problem": 42, "user": "51b86a0fe4b09e0e347b2e78"}, {"code": "(fn fact [n]\n  (->> n (+ 1) range rest (reduce *)))", "problem": 42, "user": "51baff1be4b0fe3ecfb46443"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4ebf11bc535dfed6da9c6d9c"}, {"code": "#(reduce * (rest (range (+ 1 %))))", "problem": 42, "user": "51bb970be4b0fe3ecfb4644e"}, {"code": "#(reduce * (rest (range (inc %1))))", "problem": 42, "user": "51ae350fe4b09397d5109790"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "51b90b88e4b050a1176cd6a2"}, {"code": "#(reduce * (map-indexed + (repeat % 1)))", "problem": 42, "user": "51b8e0dce4b050a1176cd69f"}, {"code": "(fn fac [%] (if (< % 2) 1 (* % (fac (dec %)))))", "problem": 42, "user": "51bf4560e4b013aa0d74b817"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "51bec919e4b013aa0d74b800"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "514b83b4e4b0bd81940b86ce"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "51beb32ae4b013aa0d74b7fd"}, {"code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "problem": 42, "user": "51c342e9e4b0851ac09658f3"}, {"code": "(fn foo [x] (if (= x 1) x (* (foo (dec x)) x)))", "problem": 42, "user": "51c330a9e4b0851ac09658f2"}, {"code": "#(reduce * (range 1 (inc %1)))", "problem": 42, "user": "51b9dc12e4b0e871ca49590c"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "51bd1a0de4b0df1216cefd93"}, {"code": "#(reduce * (range 2 (inc %)))", "problem": 42, "user": "51b9d1f0e4b0e871ca49590b"}, {"code": "(fn my-factorial2\n  [n]\n  (letfn [(fac-help [initial accumulator]\n          (if (zero? initial) \n            accumulator\n           (fac-help (dec initial) (* accumulator initial)))\n           )]\n  (fac-help n 1))\n  )", "problem": 42, "user": "51aa7298e4b04e3dc0c27b28"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "51c09719e4b0c9c82288293c"}, {"code": "(fn\n   [num]\n   (reduce #(* %1 %2) (range 1 (inc num))))", "problem": 42, "user": "51c3c6a6e4b0851ac09658f8"}, {"code": "#(\n  (fn ! [n x]\n    (cond\n     \t(= n x) x\n     \t(> n x) (* (! n (+ x 1)) x)\n     )\n    ) % 1)", "problem": 42, "user": "50d6d7eee4b0159555a1fc76"}, {"code": "(fn [n]\n    (loop [cnt n acc 1]\n      (if (zero? cnt)\n        acc\n        (recur (dec cnt) (* acc cnt)))))", "problem": 42, "user": "4f75469ee4b0fbe0118ec55a"}, {"code": "(fn fact [n] (if (= n 1) 1 (* n (fact (- n 1)))))", "problem": 42, "user": "51c1d159e4b0d204dbe2ca18"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "51c9c6cde4b09ce160bef5b1"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "51793056e4b0684c1c981a41"}, {"code": "(fn [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "4f52ae00e4b03ad3f0c10d42"}, {"code": "(fn [x] (let [xx (range 1 (inc x))] (reduce * xx) ))", "problem": 42, "user": "51c9fe91e4b09ce160bef5b6"}, {"code": "(fn ! [x] (if (= 1 x) 1 (* x (! (dec x)))))", "problem": 42, "user": "51ba59e4e4b0fe3ecfb4642d"}, {"code": "#(reduce * 1 (range 1 (inc %)))", "problem": 42, "user": "51c8301ee4b07ef393169e4d"}, {"code": "#(reduce * (range 1 (+ % 1)))", "problem": 42, "user": "51cacda3e4b068dadb8f2227"}, {"code": "(fn fac [nm]\n  ((fn [prev curr]\n    (let [nxt (- curr 1)]\n      (if (= curr 1)\n        prev\n        (recur (* prev nxt) nxt)))) nm nm))", "problem": 42, "user": "51c76864e4b07ef393169e3f"}, {"code": "(fn [x] (reduce * (range 1 (inc x))))", "problem": 42, "user": "51c73959e4b07ef393169e3e"}, {"code": "(fn fact [x]\n  (loop [i x f 1]\n    (if (= i 1)\n      f\n      (recur (dec i) (* f i))\n    )\n  )\n)", "problem": 42, "user": "51c9a705e4b09ce160bef5ab"}, {"code": "(fn f\n  [n]\n  (cond\n   (= n 1) 1\n   :else (* n (f (- n 1)))))", "problem": 42, "user": "518c0f4ee4b0f028e99addf7"}, {"code": "#(reduce * (range % 0 -1))", "problem": 42, "user": "51cbdee1e4b08d8387cbede1"}, {"code": "(fn [x] (loop [c x a 1] (if (pos? c) (recur (dec c) (* a c)) a)))", "problem": 42, "user": "51ba4482e4b0fe3ecfb4642b"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "51c858c3e4b07ef393169e55"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "51c6eabde4b07ef393169e3c"}, {"code": "(fn fact [N]\n  (if (= N 0)\n    1\n    ( * N (fact (dec N)))))", "problem": 42, "user": "51ccc179e4b02254fc794879"}, {"code": "(fn [n] (reduce * (map inc ( range n))))", "problem": 42, "user": "4f03c039535dcb61093f6b5e"}, {"code": "#(reduce * (range % 0 -1))", "problem": 42, "user": "51d08d67e4b067c365486351"}, {"code": "(fn [x] (loop[x x ans 1]\n  (if (= x 1)\n    ans\n    (recur (dec x) (* x ans)))))", "problem": 42, "user": "51cb073ce4b068dadb8f2233"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "51cdd3f0e4b0e42293a2254b"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "517cc671e4b0bbbf1f12af0a"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "51caca2ae4b068dadb8f2226"}, {"code": "#(apply * (range 1 (+ % 1)))", "problem": 42, "user": "51ca7906e4b08b1cbd0d9487"}, {"code": "(fn [n]\n           (loop [n n r 1]\n                (if (= n 0)\n                    r\n                    (recur (dec n) (* n r)))))", "problem": 42, "user": "51d10b1fe4b067c36548635e"}, {"code": "(fn fct [x] (if (zero? x) 1 (* x (fct (- x 1)))))", "problem": 42, "user": "51cf126ae4b0e42293a2256b"}, {"code": "(fn [x]\n  (loop [n x f 1]\n    (if (= n 1)\n      f\n      (recur (dec n) (* n f ))\n      )))", "problem": 42, "user": "51d33b03e4b099f3b6acddfd"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "51cc5cb3e4b02254fc79486f"}, {"code": "(fn [n]\n    (apply * (take n (iterate inc 1)))\n)", "problem": 42, "user": "51d1111ce4b067c36548635f"}, {"code": "(fn factorial [n]\n  (reduce * (range 1 (inc n))))", "problem": 42, "user": "51d1875be4b0cfcf579466c0"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "51bdc609e4b0ff155d51d2b3"}, {"code": "#(reduce * (rest (range (+ 1 %))))", "problem": 42, "user": "50bfd849e4b042992946c649"}, {"code": "(fn factorial [x]\n  (if (<= x 1)\n    1\n    (* x (factorial (dec x)))))", "problem": 42, "user": "51d360d1e4b099f3b6acddff"}, {"code": "#(reduce * (take %1 (iterate inc 1)))", "problem": 42, "user": "51cbaf14e4b08d8387cbedda"}, {"code": "(fn factorial \n  [n]\n  (apply * (range 1 (inc n))))", "problem": 42, "user": "51585807e4b0a069fd272c75"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "51d4ed02e4b013d740b70dec"}, {"code": "(fn fact [i] (if (= i 1) 1 (* i (fact (dec i)))))", "problem": 42, "user": "51c19873e4b0d204dbe2ca0d"}, {"code": "(fn [x]\n  (loop [n x f 1]\n    (if (= n 1)\n      f\n      (recur (dec n)(* f n)))))", "problem": 42, "user": "4eb7b049535d7eef30807377"}, {"code": "(fn [n]\n  (loop [cnt n acc 1]\n    (if (zero? cnt)\n      acc\n      (recur (dec cnt) (* acc cnt)))))", "problem": 42, "user": "51d662fce4b0154f82ab92ef"}, {"code": "#(reduce * (range 2 (inc %)))", "problem": 42, "user": "516d2a46e4b06f078fab252f"}, {"code": "(fn y [x] (if (= x 1) 1 (* x (y (dec x)))))", "problem": 42, "user": "51d5f2bee4b01da06753aa97"}, {"code": "(fn fac [n]\n          (if (== 1 n)\n              1\n             (* n (fac (dec n)))))", "problem": 42, "user": "51c4690fe4b06b70b3e207e1"}, {"code": "(fn [x] (apply * (for [i (range 1 (+ x 1))] i)))", "problem": 42, "user": "50214ffae4b0ef1d2d4433bc"}, {"code": "(fn fact [n] (if (= n 1) 1 (* n (fact (dec n)))))", "problem": 42, "user": "51d381b5e4b099f3b6acde01"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "51d5af00e4b01da06753aa93"}, {"code": "(fn fact [x]\n  (if (= 1 x)\n    1\n    (* x (fact (dec x)))))", "problem": 42, "user": "504dffe2e4b078edc5f5938b"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "50955676e4b087f34d351ab1"}, {"code": "(fn fct [x]\n  (if (zero? x) \n      1      \n    (* x (fct (- x 1)))\n  )\n)", "problem": 42, "user": "51ac80bbe4b09397d5109770"}, {"code": "(fn [n] (reduce * (drop 1 (take (+ n 1) (range))))\n  )", "problem": 42, "user": "518aec06e4b06da86c1973c2"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "51d19c24e4b0cfcf579466c3"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "51cec7b1e4b0e42293a2255b"}, {"code": "(fn fact [n]\n  (if \n    (= 1 n)\n    n\n    (* n (fact (dec n)))))", "problem": 42, "user": "51d96ad0e4b02ceefd94774f"}, {"code": "(fn f [n]\n  (if (= n 0) 1\n  \t(* n (f (dec n)))))", "problem": 42, "user": "5175533fe4b0dea9bbfba575"}, {"code": "(fn [n]\n  (apply * (take n (iterate dec n))))", "problem": 42, "user": "51da7e49e4b02ceefd947768"}, {"code": "(fn fact [x]\n  (reduce * (range 1 (inc x))))", "problem": 42, "user": "51ac7e9be4b09397d510976f"}, {"code": "(fn [x]\n  (loop [x1 x acc 1]\n    (if (<= x1 0)\n      acc\n      (recur (dec x1) (* acc x1))\n    )\n   )\n )", "problem": 42, "user": "51db8244e4b0e067a9bbadc7"}, {"code": "(fn fact [index]\n   (loop [index index acc 1]\n     (if (zero? index)\n       acc\n       (recur (- index 1) (* acc index)))))", "problem": 42, "user": "4ede0511535d10e5ff6f5330"}, {"code": "#(reduce * (take % (iterate dec %)))", "problem": 42, "user": "51d46133e4b013d740b70de2"}, {"code": "(fn [n] \n (reduce (fn [x y] (* x y)) 1 (range 1  (+ n 1) )))", "problem": 42, "user": "518644bce4b0da5a5be3baca"}, {"code": "(fn factorial [n]\n  (reduce * (range 1 (inc n))))", "problem": 42, "user": "51daa721e4b02ceefd94776f"}, {"code": "(fn [n]\n  (loop [n n\n         acc 1]\n    (if (= 0 n)\n     acc\n    (recur (- n 1) (* acc n)))))", "problem": 42, "user": "51da565ae4b02ceefd947765"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "51e00020e4b01188f0627534"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "51db9e1ee4b0e067a9bbadc9"}, {"code": "#(reduce * (range 1 (inc %1)))", "problem": 42, "user": "51da52dbe4b02ceefd947763"}, {"code": "(fn fact [n]\n  (reduce *\n          (range 1 (inc n))))", "problem": 42, "user": "51df505be4b01188f062752a"}, {"code": "(fn [n]\n  (loop [m n\n         acc 1]\n    (if (zero? m)\n      acc\n      (recur (dec m) (* acc m)))))", "problem": 42, "user": "4f03afcc535dcb61093f6b4d"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4ec6a616535d6d7199dd36d2"}, {"code": "#(loop [n % acc 1]\n    (if (zero? n) acc\n      (recur (dec n) (* acc n))))", "problem": 42, "user": "51b66b31e4b02e5820733406"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "51b2e850e4b026427ecf067b"}, {"code": "#(reduce * (take % (iterate inc 1)))", "problem": 42, "user": "51e1c176e4b06a68e693eafb"}, {"code": "(fn\n  [x]\n  (reduce * (range 1 (+ x 1))))", "problem": 42, "user": "51ab734ee4b04e3dc0c27b34"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "51d9eb05e4b02ceefd947755"}, {"code": "(fn fact [n]\n  (if (= n 1) 1 (* n (fact (dec n)))))", "problem": 42, "user": "51e0198ee4b01188f0627539"}, {"code": "(fn fac [n] \n  (if (= n 0) \n    1\n    (* n (fac (dec n)))\n    )\n  )", "problem": 42, "user": "51e24a04e4b01e5198146430"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "50e90813e4b033b0e80d11e7"}, {"code": "#(reduce * (map inc (range %)))", "problem": 42, "user": "51e3cf8ee4b0efabf93c02a3"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "51e41f4be4b0efabf93c02ac"}, {"code": "(fn [x] (reduce * (range 1 (+ 1 x))))", "problem": 42, "user": "51ac36c1e4b09397d5109765"}, {"code": "(fn [n] \n  (reduce * (range 1 (+ n 1))))", "problem": 42, "user": "51ce1320e4b0e42293a22551"}, {"code": "(fn [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "516199bbe4b009fba0926e36"}, {"code": "(fn [x]\n\t(loop [current 1\n     \t   result 1]\n\t\t (if (<= current x)\n\t\t \t(recur (+ current 1) (* current result))\n\t\t \tresult)))", "problem": 42, "user": "51d49b75e4b013d740b70de6"}, {"code": "(fn fac [n] (if (<= n 1) 1 (* n (fac (dec n)))))", "problem": 42, "user": "51e1a1fae4b06a68e693eaf6"}, {"code": "(fn [x]\n\t(reduce * (range 2 (inc x))))", "problem": 42, "user": "51e51e73e4b0efabf93c02c6"}, {"code": "#(reduce * (range 1 (inc %1)))", "problem": 42, "user": "51d59859e4b01da06753aa92"}, {"code": "(fn [x] (reduce * (range 1 (+ x 1))))", "problem": 42, "user": "5047eadde4b0ec70b3ef8d94"}, {"code": "(fn fact [x]\n  ((fn iter[y n] \n     (if (= n 1)\n       y\n       (iter (* y n) (dec n))))\n   1 x))", "problem": 42, "user": "51db27dbe4b094966a2cd688"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "51e23b80e4b01e519814642b"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "51e58e02e4b0efabf93c02d0"}, {"code": "#(reduce * (take % (iterate dec %)))", "problem": 42, "user": "51b3d998e4b0f094dd986fa8"}, {"code": "#((fn [res cur]\n    (if (> cur 0)\n      (recur (* res cur) (dec cur))\n      res))\n  1 %)", "problem": 42, "user": "51e89428e4b006d205356a51"}, {"code": "#(apply * (map inc (range %)))", "problem": 42, "user": "51df825de4b01188f062752b"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "51ba8f82e4b0fe3ecfb46434"}, {"code": "((fn [r] \n  ((fn [f] (f f)) \n    (fn [y] \n      (r (fn [x] ((y y) x)))))) \n  (fn [fact] \n    (fn [n] \n      (if \n        (= 0 n) 1 \n        (* n (fact (- n 1)))))))", "problem": 42, "user": "5022292ee4b0846bc458ae46"}, {"code": "(fn [x]\n  (loop [x x fact 1]\n    (if (zero? x)\n      fact\n      (recur (dec x) (* x fact)))))", "problem": 42, "user": "51e595a6e4b0efabf93c02d8"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "51dc5033e4b09c47a74ce109"}, {"code": "(fn [x] (reduce * (range 1 (+ 1 x))))", "problem": 42, "user": "50856bd1e4b004985b776e4c"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "51eca2ace4b069f463c22cd0"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "51d11f5de4b067c365486360"}, {"code": "(fn factorial [n]\n  (if (<= n 1)\n    1\n    (* n (factorial (- n 1)))))", "problem": 42, "user": "51dd6a7ce4b0c33a4e1da409"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "51eb0374e4b0f1f103a0d156"}, {"code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "problem": 42, "user": "51eb3aace4b0f1f103a0d159"}, {"code": "(fn f ([x] (f (dec x) x))\n      ([x acc]\n        (if-not (zero? x) (recur (dec x) (* x acc))\n                           acc)))", "problem": 42, "user": "51eadb98e4b0f1f103a0d153"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "50cf21dee4b0e61f11ddcd8b"}, {"code": "#(reduce * (range 1 (+ 1 %)))", "problem": 42, "user": "51dd55dae4b0c33a4e1da404"}, {"code": "(fn [x] (reduce (fn [y z] (* y z)) (range 1 (inc x))))", "problem": 42, "user": "51e28063e4b08e53a149f0f2"}, {"code": "(fn [n]\n  (reduce * (take n (iterate inc 1))))", "problem": 42, "user": "4e8dd6cb535d65386fec213b"}, {"code": "#(loop [cnt % acc 1]\n       (if (zero? cnt)\n            acc\n          (recur (dec cnt) (* acc cnt))\n       )\n  )", "problem": 42, "user": "5029f263e4b023940c84aa45"}, {"code": "(fn [n]\n  (reduce * (take-while #(> % 0) (iterate dec n))))", "problem": 42, "user": "51ef66a7e4b0871fa145d9a5"}, {"code": "(fn fact [x]\n  (if (= 0 x)\n    1\n    (* x (fact (dec x)))))", "problem": 42, "user": "51eff50fe4b0249c592fbdf0"}, {"code": "(fn [n] (apply * (range 1 (inc n))))", "problem": 42, "user": "4e46e48b535dc968683fc4b7"}, {"code": "#(loop [count % acc 1]\n                      (if (zero? count) acc\n                        (recur (dec count) (* acc count))))", "problem": 42, "user": "51bf0ccee4b013aa0d74b811"}, {"code": "(fn fac [x] \n  (if (= x 1) \n    1 \n    (* x (fac (- x 1)))\n   )\n)", "problem": 42, "user": "51eec1a6e4b0871fa145d98d"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "51efd397e4b0249c592fbdeb"}, {"code": "#(loop [res 1 x 1]  (if (> x %) res (recur (* x res) (+ x 1))))", "problem": 42, "user": "51f2851fe4b0210f90e7454b"}, {"code": "(fn [x]\n    (loop [n x f 1]\n        (if (= n 1)\n            f\n            (recur (dec n) (* f n)))))", "problem": 42, "user": "51ec9114e4b069f463c22ccd"}, {"code": ";#(loop [n %\n;        fac 1]\n;   (if (= n 1)\n;     fac\n;     (recur (dec n) (* fac n))))\n#(reduce * (range 1 (+ 1 %)))", "problem": 42, "user": "51f28a64e4b0210f90e7454e"}, {"code": "(fn fact [n]\n           (if (zero? n)\n             1\n             (* n (fact (dec n)))))", "problem": 42, "user": "4fea24e0e4b0547ebccb248d"}, {"code": "(comp (partial reduce *) (partial map inc) range)", "problem": 42, "user": "511b233ae4b07ab9ec456180"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "51e780dae4b0730ab87cf353"}, {"code": "#(apply * (take % (iterate dec %)))", "problem": 42, "user": "51f13b80e4b06a20a2523f38"}, {"code": "#(reduce * 1 (range 1 (+ % 1)))", "problem": 42, "user": "511937eee4b055cfb310d495"}, {"code": "(fn a [n]\n  (if (= n 1)\n    1\n    (* n (a (dec n)))\n    )\n  )", "problem": 42, "user": "51e6a2bce4b0ab43cc26c21d"}, {"code": "#(apply * (map inc (range %1)))", "problem": 42, "user": "51f59607e4b0abb92f97f9d5"}, {"code": "(fn fac [n] (if (<= n 1) 1 (* n (fac (dec n)))))", "problem": 42, "user": "51f55bdae4b0abb92f97f9d0"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "51f04e89e4b0274c496158cd"}, {"code": "#(* (reduce * (range 1 (inc %))))", "problem": 42, "user": "5180af54e4b0e3fc13e244e9"}, {"code": "#(apply * (range % 0 -1))", "problem": 42, "user": "51f805b0e4b06ff1c25c52e2"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "51f0ade4e4b0274c496158d9"}, {"code": "(fn fac [x] (if (= x 1) 1 (* x (fac (- x 1)))))", "problem": 42, "user": "51ed09b6e4b0bb507043158b"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "50aedb8ce4b0a40c9cfb08d4"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "51f40975e4b0fca5e8b4822e"}, {"code": "#(reduce * (rest (range (+ % 1))))", "problem": 42, "user": "51f8397ce4b09be9c177e529"}, {"code": "#(apply * (take % (iterate dec %)))", "problem": 42, "user": "512c0f84e4b03a42b6300232"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "51db1abae4b094966a2cd685"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5046ee3ee4b03b02161376b4"}, {"code": "#(apply * (drop 1 (range (inc %))))", "problem": 42, "user": "4f592f83e4b0030a34fb2ad2"}, {"code": "(fn [n] (apply * (take n (iterate dec n))))", "problem": 42, "user": "51f98843e4b09be9c177e54e"}, {"code": "(fn [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "518279abe4b0353c468deb65"}, {"code": "#(reduce * (range 1 (+ % 1)))", "problem": 42, "user": "51fa1375e4b0f1313d4689c9"}, {"code": "(fn [x]\n  (apply * (range 1 (inc x))))", "problem": 42, "user": "51f2ab8be4b0210f90e74554"}, {"code": "(fn factorial1 [x]\n  (if (> x 1)\n    (* x (factorial1 (dec x)))\n    1))", "problem": 42, "user": "51f82769e4b09be9c177e527"}, {"code": "#((comp first last) \n  (take % \n        (iterate \n         (fn [[x y]] (vector (* (inc y) x) (inc y))) \n         [1 1])))", "problem": 42, "user": "51facf22e4b0f1313d4689f0"}, {"code": "#(loop [n % a 1] (if (zero? n) a (recur (dec n) (* a n))))", "problem": 42, "user": "51f9b1d0e4b09be9c177e550"}, {"code": "(fn [n]\n    (loop [cnt n acc 1]\n       (if (zero? cnt)\n            acc\n          (recur (dec cnt) (* acc cnt)))))", "problem": 42, "user": "51f8277be4b09be9c177e528"}, {"code": "(fn fac [x]\n  (loop [i 1\n         res 1]\n    (if (<= i x)\n      (recur (inc i) (* res i))\n      res)))", "problem": 42, "user": "4fa3c137e4b081705acca193"}, {"code": "[1 1 2 6 24 120 720 5040 40320]", "problem": 42, "user": "51dd9370e4b0c33a4e1da40c"}, {"code": "(fn fact [a]\n  (if (= a 0)\n    1\n    (* a (fact (dec a))))\n  )", "problem": 42, "user": "504e90bae4b069badc5a33b8"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4f93539de4b0dcca54ed6cba"}, {"code": "#(apply * (range 1 (+ % 1)))", "problem": 42, "user": "51a584c7e4b051b01d55f44e"}, {"code": "(fn factorial [x]\n  (if (= x 1)\n    1\n    (* x (factorial (dec x)))))", "problem": 42, "user": "51db0d99e4b06aa4d4669a9d"}, {"code": "#(reduce * (range 1 (+ % 1)))", "problem": 42, "user": "51ca9af6e4b08b1cbd0d948a"}, {"code": "#(reduce * (rest (range (inc %))))", "problem": 42, "user": "5201572be4b0d7096e99ddbb"}, {"code": "(fn [n] \n  (loop [nn n\n         acc 1]\n  \t(cond \n   \t\t(>= 1 nn) acc\n   \t\t:else (recur (dec nn) (* nn acc))\n     )\n    )\n  )", "problem": 42, "user": "51d67516e4b0154f82ab92f0"}, {"code": "#(reduce (fn [memo x] (* memo x))\n         (range 1 (+ 1 %)))", "problem": 42, "user": "51891c96e4b04c2714a2670e"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "51944aaae4b0142f60b4aedc"}, {"code": "(fn [n]\n  (letfn [(fact-rec [num res]\n                    (if (= num 1)\n                      res\n                      ;else\n                      (recur (- num 1) (* res num))))]\n    (fact-rec n 1)))", "problem": 42, "user": "51fe9d7ce4b0f1313d468a70"}, {"code": "#(reduce *' (range 1 (inc %)))", "problem": 42, "user": "50c781bbe4b00bb60fe0c535"}, {"code": "#(apply * (range 1 (+ % 1)))", "problem": 42, "user": "519f0f81e4b087743fad219b"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5201d2f3e4b0b2e020a18f22"}, {"code": "(fn[a](let [b (inc a)] (reduce * (take-while #(< % b) (iterate inc 1)))))", "problem": 42, "user": "516ab8c2e4b081287f204e9e"}, {"code": "#(reduce * (range 1 (+ % 1)))", "problem": 42, "user": "51f297a3e4b0210f90e74552"}, {"code": "(fn [n]\n  (loop [fac 1 n n]\n    (if (> n 1)\n      (recur (* fac n) (dec n))\n      fac)))", "problem": 42, "user": "511a5328e4b09045b2b16946"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "52039e12e4b0fb7e47ea51ff"}, {"code": "#(reduce * 1 (map inc (range %)))", "problem": 42, "user": "5202cfe7e4b030ee0c5b2702"}, {"code": "(fn fac [x] (if (= x 1) 1 (* (fac (- x 1)) x)))", "problem": 42, "user": "51f7dd27e4b06ff1c25c52dc"}, {"code": "#(reduce * 1 (range 1 (inc %)))", "problem": 42, "user": "52016fd3e4b0b2e020a18f10"}, {"code": "#(reduce * 1 (range 1 (+ 1 %) 1))", "problem": 42, "user": "5203bc27e4b0fb7e47ea5204"}, {"code": "(fn f [x]\n  (if (= x 1) \n    1\n    (* x (f (dec x)))))", "problem": 42, "user": "52069fade4b0bf4f1882c82c"}, {"code": "#(reduce * (range 1 (inc %1)))", "problem": 42, "user": "4e580746535d8a8b8723a28c"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "51fa7154e4b0f1313d4689da"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "52084f75e4b01ce6bbf31dde"}, {"code": "#(apply *' (rest (range (inc' %))))", "problem": 42, "user": "52000564e4b023d2eb508ca8"}, {"code": "#(apply * (range 1 (inc %1)))", "problem": 42, "user": "52015698e4b0d7096e99ddba"}, {"code": "(fn [n] (reduce #(* % %2) 1 (range 1 (inc n))))", "problem": 42, "user": "5201ff99e4b0b2e020a18f26"}, {"code": "#(reduce * (rest (range (inc %))))", "problem": 42, "user": "52029e5de4b030ee0c5b26fc"}, {"code": "(fn fac [n]\n  (cond\n   (= n 1) 1\n   true (* n (fac (- n 1)))))", "problem": 42, "user": "52091d57e4b0e152394d76f0"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "514c2d05e4b02b8cbb2a9278"}, {"code": "(fn factorial [number]\n  (if (< number 2)\n    1\n    (* number (factorial (- number 1)))))", "problem": 42, "user": "51f64e71e4b06ff1c25c52bf"}, {"code": "(fn [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "5080a697e4b01a93d3f38e49"}, {"code": "#(->> % (inc) (range 1) (reduce *))", "problem": 42, "user": "4f4ff836e4b03ad3f0c10cf4"}, {"code": "(fn ! [x] (if (< x 1) 1 (* x (! (dec x)))))", "problem": 42, "user": "4f88f57ae4b033992c121c73"}, {"code": "#(reduce (fn [x y] (* x y)) (rest (range (inc %))))", "problem": 42, "user": "51f66e0ee4b06ff1c25c52c3"}, {"code": "(fn [x] (reduce * (range 1 (inc x))))", "problem": 42, "user": "52016690e4b0b2e020a18f0f"}, {"code": "(fn [n]\n  (->> (iterate inc 1) (take n) (reduce *)))", "problem": 42, "user": "520612a7e4b0bf4f1882c81c"}, {"code": "(fn [n]\n  (reduce * (range 1 (+ 1 n))))", "problem": 42, "user": "520c5b9ee4b0b022ef140c94"}, {"code": "(fn [n]\n  (apply * (range 1 (inc n))))", "problem": 42, "user": "520a576be4b0e152394d7714"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "52090654e4b0e152394d76ee"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "520b67b5e4b0b022ef140c83"}, {"code": "(fn [n]\n  (loop [cnt n acc 1]\n    (if (zero? cnt)\n      acc\n      (recur (dec cnt) (* acc cnt)))))", "problem": 42, "user": "4fa176c7e4b0dcca54ed6d5e"}, {"code": "(fn fac [x] (if (<= x 1) 1 (* x (fac (dec x)))))", "problem": 42, "user": "51a3738ce4b0e77c4ca60bf0"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "520e32a2e4b066f3ea161c93"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5208a3a2e4b0301979a6c235"}, {"code": "#(reduce * (range 1 (+ % 1)))", "problem": 42, "user": "519c4111e4b0a1d87b003458"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "520aaac2e4b01da9d47a99e6"}, {"code": "#(loop [n %\n        total 1]\n   (if (zero? n)\n     total\n     (recur (dec n) (* total n))))", "problem": 42, "user": "5191ac45e4b0d428d29dc1b6"}, {"code": "#(reduce * (range 2 (inc %)))", "problem": 42, "user": "5201cf92e4b0b2e020a18f21"}, {"code": "(fn [n]\n  (loop [i 2\n         sum 1]\n    (if (> i n)\n      sum\n      (recur (inc i) (* sum i)))))", "problem": 42, "user": "4e99819a535dbda64a6f6b66"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "520c9489e4b0b022ef140c98"}, {"code": "#(apply * (map inc (range %)))", "problem": 42, "user": "5186448fe4b0da5a5be3bac9"}, {"code": "(fn [x] (reduce * (range x 0 -1)))", "problem": 42, "user": "5174ade2e4b07031762f2edf"}, {"code": "(fn [n]\n   (loop [cnt n acc 1]\n       (if (zero? cnt)\n            acc\n        (recur (dec cnt) (* acc cnt)))))", "problem": 42, "user": "520332f7e4b030ee0c5b2714"}, {"code": "#(reduce * (range % 0 -1))", "problem": 42, "user": "51e61772e4b0efabf93c02e2"}, {"code": "(fn [n]\n  ((fn impl [n r]\n    (if (= n 0)\n      r\n      (impl (- n 1) (* r n))))\n   n 1))", "problem": 42, "user": "521392bce4b0d32679a5065e"}, {"code": "(fn f [n]\n  (if (= 0 n)\n    1\n    (* n (f (dec n)))))", "problem": 42, "user": "5213ffd3e4b0961f15ac4d7d"}, {"code": "(fn f [x]\n  (reduce * (range 1 (inc x))))", "problem": 42, "user": "5208495ce4b0c1501ba9e6da"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "520cb8c4e4b0b022ef140c9a"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5211d195e4b07aea8afc4f76"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5213dbc3e4b0961f15ac4d74"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "513fab65e4b00f13ea1bd891"}, {"code": "(fn [x] (reduce * 1 (range 1 (+ x 1))))", "problem": 42, "user": "52154514e4b02f6d8ea676c0"}, {"code": "#(->> [1 %]\n      (iterate (fn [[acc i]]\n                 [(* acc i) (dec i)]))\n      (drop-while (comp pos? second))\n      (ffirst))", "problem": 42, "user": "51f9527fe4b09be9c177e549"}, {"code": "(fn f [n] (if (zero? n) 1 (* n (f (dec n)))))", "problem": 42, "user": "520242bae4b030ee0c5b26e3"}, {"code": "(fn [x]\n  (apply * (rest (range (+ 1 x)))))", "problem": 42, "user": "50d5c19ce4b0159555a1fc61"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "5151c184e4b03e678e393add"}, {"code": "#(reduce * (range 1 (+ % 1)))", "problem": 42, "user": "52117ea7e4b07aea8afc4f70"}, {"code": "(fn fac [x]\n  (reduce * (range 1 (inc x))))", "problem": 42, "user": "52173464e4b082aa80a88c75"}, {"code": "(fn fac [n] (if (= n 0) 1 (* n (fac (- n 1)))))", "problem": 42, "user": "51fc44c5e4b0f1313d468a1b"}, {"code": "(fn fact [x]\n  (cond (= 0 x) 1\n        (= 1 x) 1\n        :else (* x (fact (dec x)))))", "problem": 42, "user": "52153bdde4b0961f15ac4daa"}, {"code": "(fn [x] \n  (loop [a x ans 1]\n    (if (= a 1) ans (recur (dec a) (* a ans)))))", "problem": 42, "user": "52196842e4b0890f2f822bfa"}, {"code": "(fn fac [x]\n  (cond (= 0 x) 1\n        :else (* x (fac (dec x)))))", "problem": 42, "user": "5219e575e4b0c4ef0be82ffd"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "52160dbee4b0bf4bffd29cb3"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "521249f5e4b06aa6d1666ba2"}, {"code": "(fn ! [x]\n  (if (= x 1)\n    1\n    (* x (! (dec x)))))", "problem": 42, "user": "521a4ff5e4b0c4ef0be83004"}, {"code": "(fn [n]\n  (loop [acc 1 x n]\n    (if (= x 1) acc (recur (* acc x) (dec x)))))", "problem": 42, "user": "52199105e4b0c4ef0be82ff9"}, {"code": "(fn [x] (loop [n x acc 1] \n          (if (= 1 n) \n            acc \n            (recur (dec n) (* n acc)))))", "problem": 42, "user": "4e7e8ea5535db169f9c79719"}, {"code": "(fn fac [x] (if (<= x 1) 1 (* x (fac (- x 1))))  )", "problem": 42, "user": "5213348ae4b0d32679a50652"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "521c6a1ae4b0c4ef0be83083"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "521679e9e4b0bf4bffd29cca"}, {"code": "(fn fac [x]\n   (if (= x 1) 1\n     (* x (fac (dec x)))))", "problem": 42, "user": "521672bde4b0bf4bffd29cc8"}, {"code": "#(apply * (take % (iterate inc 1)))", "problem": 42, "user": "51b965dde4b0e871ca495905"}, {"code": "#(loop [x % res 1] (if (= x 1) res (recur (dec x) (* x res))))", "problem": 42, "user": "52161db6e4b0bf4bffd29cb8"}, {"code": "(fn [x] (reduce #(* % %2) (drop 1 (take (inc x) (range)\n                               )\n                         )\n         )\n  )", "problem": 42, "user": "52105865e4b080a8d9b9d639"}, {"code": "(fn factorial [n]\n  (if (= n 1) 1\n    (* n (factorial (- n 1)))))", "problem": 42, "user": "521bf7cfe4b0c4ef0be83066"}, {"code": "(fn fact [n]\n  (if (= 1 n)\n    1\n    (* n (fact (dec n)))))", "problem": 42, "user": "521b9f92e4b0c4ef0be8304c"}, {"code": "#(loop [n % x %] (if (< n 3) x (recur (dec n) (* (dec n) x))))", "problem": 42, "user": "51a91ac2e4b08d8ec191b822"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "51f79238e4b06ff1c25c52d7"}, {"code": "(fn f [n]\n  (if (= n 1)\n    1\n    (* n (f (dec n)))))", "problem": 42, "user": "5213d7aae4b0961f15ac4d72"}, {"code": "#(reduce * (range 1 (+ % 1)))", "problem": 42, "user": "521e8227e4b0dd19981ad082"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "520693e1e4b0bf4f1882c829"}, {"code": "(fn [x] (reduce * (range 1 (inc x))))", "problem": 42, "user": "5210e5c5e4b080a8d9b9d63f"}, {"code": "#(apply * (range 1 (+ 1 %)))", "problem": 42, "user": "510ee996e4b07438aa321462"}, {"code": "(fn !\n    ([n] (! n 1))\n    ([n fact]\n     (cond (or (= n 1) (= n 0)) (or fact 1)\n          :else (recur (dec n) (* n (or fact 1))))))", "problem": 42, "user": "50c113bee4b096f585049c37"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "521b73f5e4b0c4ef0be83043"}, {"code": "(fn [n]\n  (apply * (range 1 (+ n 1))))", "problem": 42, "user": "5220a770e4b0e6a83c8925a3"}, {"code": "(fn fac [n]\n  (if (<= n 1)\n    1\n    (* n (fac (- n 1)))))", "problem": 42, "user": "5220bc0fe4b0e6a83c8925a7"}, {"code": "#(reduce * (rest (range (inc %))))", "problem": 42, "user": "5216933be4b000d124d989cf"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "521dceeae4b050d5da042802"}, {"code": "(fn [x]\n   (loop [num x, acc 1]\n     (if (= num 1)\n       acc\n       (recur (dec num) (* acc num)))))", "problem": 42, "user": "4feded14e4b0d2a5fc2962ec"}, {"code": "#(reduce * (range % 0 -1))", "problem": 42, "user": "5222000ce4b0e6a83c8925ea"}, {"code": "(fn fact [x]\n  (reduce * (map inc (range x))))", "problem": 42, "user": "522048b3e4b0e6c71e0c0c16"}, {"code": "(fn [x]\n  ((fn [y res]\n     (if (= y 0)\n       res\n       (recur (dec y) (* y res))\n       )\n     )\n   x 1)\n  )", "problem": 42, "user": "52213426e4b0e6a83c8925c4"}, {"code": "(fn foo [x] (if (= 1 x)\n              x\n              (* x (foo (dec x)))))", "problem": 42, "user": "5210ac52e4b080a8d9b9d63e"}, {"code": "(fn [n]\n  (apply * (range 1 (inc n))))", "problem": 42, "user": "5224a46ce4b01819a2de42e5"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "51e6a311e4b0ab43cc26c21e"}, {"code": "(fn fact [n]\n  (if (= n 0)\n    1\n    (* n (fact (dec n)))\n  )\n)", "problem": 42, "user": "4fb710f4e4b081705acca2cd"}, {"code": "#(loop [x % r 1] (if (> x 0) (recur (dec x) (* r x)) r))", "problem": 42, "user": "4daec4a0edd6309eace4d15e"}, {"code": "(fn factorial [n]\n  (if (= n 0)\n    1    \n    (* (factorial (dec n)) n)))", "problem": 42, "user": "521b339fe4b0c4ef0be83031"}, {"code": "(fn [n] (reduce * 1 (range 1 (inc n))))", "problem": 42, "user": "52244a77e4b01819a2de42d1"}, {"code": "(fn [n]\n  ((fn [current accumulator]\n    (if (= current 1)\n      accumulator\n      (recur (- current 1) (* accumulator current)))) n 1))", "problem": 42, "user": "520f46f9e4b0101e4be6fcee"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5167e4a2e4b0c5a4140a3099"}, {"code": "(fn [f]\n  (loop [x f ret 1]\n\t(if (> x 0)\n      (recur (dec x) (* ret x))\n      ret)))", "problem": 42, "user": "51ef31dfe4b0871fa145d9a0"}, {"code": "(fn ! [n] (if (= n 0) 1 (* n (! (dec n)))))", "problem": 42, "user": "5225666be4b01819a2de4300"}, {"code": "(fn fac [x]\n  (if (= x 1)\n    x\n  \t(* x (fac (dec x)))))", "problem": 42, "user": "5225a0f5e4b01819a2de430e"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "522454f4e4b01819a2de42d3"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "51843616e4b02826a645f398"}, {"code": "#(apply * (rest (range (inc %))))", "problem": 42, "user": "522600cfe4b0f4c7e20d29c8"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "52253004e4b01819a2de42fa"}, {"code": ";(fn [n]\n;  (loop [i 1 f 1]\n;    (if (<= i n) (recur (inc i) (* f i)) f)))\n\n(fn [n]\n  (reduce * (range 1 (inc n))))", "problem": 42, "user": "5207d70ae4b03bd50ef54675"}, {"code": "#(apply * (map inc (range %)))\n#_(fn [x] \n  (loop [c 1\n         r 1]\n    (if (< x c)\n      r\n      (recur (inc c)\n             (* r c)))))", "problem": 42, "user": "51e5a627e4b0efabf93c02db"}, {"code": "(fn [n]\n  (reduce * 1 (range 1 (inc n))))", "problem": 42, "user": "522b922ee4b0d34ee08e71c3"}, {"code": "(fn [x] (reduce * (take x (iterate inc 1))))", "problem": 42, "user": "522404d8e4b01819a2de42c0"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "51508905e4b098b221effc2d"}, {"code": "(fn [x]\n  (loop [result 1 n x]\n    (if (= n 0)\n      result\n      (recur (* result n) (- n 1)))))", "problem": 42, "user": "51857e64e4b0da5a5be3babe"}, {"code": "(fn fact\n  ([n acc]\n   (if (<= n 1)\n     acc\n     (fact (dec n) (* acc n))))\n  ([n]\n   (fact n 1)))", "problem": 42, "user": "52277ab9e4b0186687e23a4f"}, {"code": "(fn bad-fact [n]\n  (if (= 0 n)\n    1\n    (* n (bad-fact (dec n)))))", "problem": 42, "user": "52127ee4e4b0d32679a5063c"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "51a058dae4b0b292b01ee3f3"}, {"code": "#(reduce * % (range 1 %))", "problem": 42, "user": "522eb5cce4b01cdb292c5f0c"}, {"code": "(fn factorial [x]\n  (loop [n x, acc 1]\n    (if (zero? n)\n      acc\n      (recur (dec n) (* n acc)))))", "problem": 42, "user": "522d0360e4b0806774ddfef7"}, {"code": "(fn fact [n]\n (apply * (range 1 (+ 1 n)))\n )", "problem": 42, "user": "5228f870e4b0186687e23a98"}, {"code": "(fn [x] (reduce * (range 1 (+ x 1))))", "problem": 42, "user": "5125029de4b0ce9225d2ed3e"}, {"code": "(fn f [n]\n  (cond\n    (< n 2) 1\n\t:else (* n (f (- n 1)))\n        ))", "problem": 42, "user": "522a1248e4b0590a43906cf3"}, {"code": "(fn [n](reduce * (range 1 (inc n))))", "problem": 42, "user": "5230d9bde4b0035e815da397"}, {"code": "{1 1 3 6 5 120 8 40320}", "problem": 42, "user": "51aefceee4b09397d5109797"}, {"code": "(fn [n]\n  (loop [n n\n         prod 1]\n    (if (= n 1)\n      prod\n      (recur (dec n) (* n prod)))))", "problem": 42, "user": "510591dde4b06d28cacc92eb"}, {"code": "(fn fact [n]\n  (if (= n 1)\n    1\n    (* n (fact (dec n)))))", "problem": 42, "user": "522f988be4b032bbe3424168"}, {"code": "(fn [x]\n    (loop [n x f 1]\n        (if (= n 1)\n            f\n            (recur (dec n) (* f n)))))", "problem": 42, "user": "522eba30e4b01cdb292c5f0e"}, {"code": "(fn[x] (->> x (+ 1) (range 1) (reduce *)))", "problem": 42, "user": "506c0a02e4b0eda3100c090d"}, {"code": "(fn [x] (reduce * (range 1 (+ 1 x))))", "problem": 42, "user": "514fd753e4b0b449e54b8e00"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "51c611c4e4b03a28d42333bf"}, {"code": "#(reduce * (take % (iterate inc 1)))", "problem": 42, "user": "522e6c01e4b01cdb292c5f01"}, {"code": "(fn [n] (reduce * (take n (iterate inc 1))))", "problem": 42, "user": "4ddbd600535d02782fcbe9fb"}, {"code": "(fn f [n]\n  (if (= n 1)\n    n\n    (* (f (- n 1)) n)))", "problem": 42, "user": "52318843e4b0e2e8de81d1e8"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "50467ee2e4b011c5dfee7723"}, {"code": "(fn [n]\n  (apply * (take n (iterate inc 1))))", "problem": 42, "user": "523361d8e4b0f0b72fabf405"}, {"code": "#(reduce * 1 (take % (iterate inc 1)))", "problem": 42, "user": "5233ad08e4b07e3ee2be83ac"}, {"code": "(fn fac [x]\n  (cond \n  \t(> x 0) (* x (fac (dec x)))\n   \t:else 1\n  ))", "problem": 42, "user": "51cc5f20e4b02254fc794870"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "508fd6bae4b0ea685a20f76b"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "508923d5e4b06d8254e936e8"}, {"code": "(fn [n]\n  (loop [i n acc 1]\n    (if (<= i 1)\n      acc\n      (recur (dec i) (* i acc)))))", "problem": 42, "user": "516abecae4b081287f204e9f"}, {"code": "(fn [x] (reduce * (range 1 (+ 1 x))))", "problem": 42, "user": "5231d8fae4b0e2e8de81d1fb"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5229211be4b04c906c9c6a63"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "52381b2ae4b0fae3832e99ef"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "52394c03e4b0d705d026ef09"}, {"code": "(fn fac\n  [d]\n  (loop [acc 1 curr d]\n    (if (= 1 curr)\n      acc\n      (recur (* acc curr) (dec curr))\n      )))", "problem": 42, "user": "50573ed8e4b0012181721987"}, {"code": "(fn [n] (loop [n n fac 1] (if (= n 1) fac (recur (dec n) (* n fac)))))", "problem": 42, "user": "5235a902e4b0a643f2dcb750"}, {"code": "(fn [n] (reduce (fn [f i] (* f i)) 1 (range 1 (inc n))))", "problem": 42, "user": "4f43894ee4b0d7d3c9f3fd21"}, {"code": "#(apply * (range 1 (+ % 1)))", "problem": 42, "user": "520f2265e4b0101e4be6fce7"}, {"code": "(fn [n] (apply * (map inc (range n))))", "problem": 42, "user": "4f04e8b0535dcb61093f6be9"}, {"code": "(fn fact [n]\n   (if (or (= n 0) (= n 1))\n      1\n      (* n (fact (dec n)))))", "problem": 42, "user": "523bd9c0e4b07becd5be2201"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "523b10dfe4b02f719975bdb8"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5213d81de4b0961f15ac4d73"}, {"code": "#(apply * (range 1  (inc %)))", "problem": 42, "user": "523b4e91e4b07becd5be21ef"}, {"code": "(fn fac [n]\n  (if (or (= n 0) (= n 1))\n    1\n    (* n (fac (dec n)))))", "problem": 42, "user": "523b82efe4b07becd5be21f0"}, {"code": "(fn [x] (apply * (range 1 (inc x))))", "problem": 42, "user": "523a9fc9e4b081681ca7adca"}, {"code": "(fn fact [n] (reduce * (range 1 (+ n 1))))", "problem": 42, "user": "5239caa6e4b0d705d026ef27"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "5234f716e4b05e80434a505f"}, {"code": "#(loop[x % result 1] (if (zero? x) result (recur (dec x) (* result x))))", "problem": 42, "user": "52271ffee4b04e78ff2e19a9"}, {"code": "#(reduce * % (range 1 %))", "problem": 42, "user": "523d02b0e4b0dbf0c3017289"}, {"code": "(fn [x]\n  (loop [c x r 1]\n    (if (= c 1) r\n      (recur (dec c) (* c r)))))", "problem": 42, "user": "523bc0e6e4b07becd5be21f9"}, {"code": "#(if (zero? %)\n  1\n  (loop [i 1 ans 1]\n    (if (> i %) ans (recur (inc i) (* i ans)))\n  )\n)", "problem": 42, "user": "51f09f3de4b0274c496158d7"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "523b1988e4b02f719975bdbc"}, {"code": "(fn [a]\n  (reduce * 1 (take a (iterate #(- % 1) a))))", "problem": 42, "user": "4fec550de4b0681fd128dca6"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5236b6bce4b05f3be1c7c8fe"}, {"code": "(fn [to] (loop [fr 1 acc 1] (if (= fr (+ 1 to)) acc (recur (inc fr) (* acc fr)))))", "problem": 42, "user": "52319066e4b0e2e8de81d1e9"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "523dd963e4b06956f8342ca1"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "523f0bbfe4b01c266ffa7f91"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "5201ada5e4b0b2e020a18f14"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "50aa60bee4b056ee01935865"}, {"code": "(fn [n] (apply * (take n (iterate #(+ 1 %) 1))))", "problem": 42, "user": "5220909fe4b0e6a83c89259f"}, {"code": "(fn fact [n]\n  (if (= n 1)\n    1\n    (* n (fact (dec n)))))", "problem": 42, "user": "4f03641a535dcb61093f6a9b"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "52379c46e4b0fae3832e99db"}, {"code": "#(loop [n % f 1]\n        (if (= n 1)\n            f\n            (recur (dec n) (* f n))))", "problem": 42, "user": "5240e8ebe4b0ad64fa010349"}, {"code": "(fn factorial [n]\n    (if (or (zero? n)\n            (= n 1))\n      1\n      (* n (factorial (dec n)))))", "problem": 42, "user": "511e763ce4b03e81d390ac29"}, {"code": "(fn fac [n] \n  (if (= 1 n) \n    1\n\t(* n (fac (- n 1))))\n \t)", "problem": 42, "user": "52382d91e4b0fae3832e99f0"}, {"code": "(fn fact [n]     \n     (if (<= n 1)\n       1\n       (* n (fact (- n 1) ))\n       ))", "problem": 42, "user": "523288fee4b035af41902a88"}, {"code": "(fn ! [x]\n  (if (= x 1)\n    1\n    (* (! (- x 1)) x)))", "problem": 42, "user": "52393e16e4b0d705d026ef06"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5230793be4b0035e815da383"}, {"code": "(fn fac [_]\n  (if (< _ 2)\n    1\n    (* _ (fac (dec _)))))", "problem": 42, "user": "51cd75d6e4b02254fc79488c"}, {"code": "(fn [n]\n  \n  (loop [n n result 1]\n    \n    (if (= n 1)\n      \n      result\n      (recur (dec n) (* result n))\n      \n      )\n    \n    \n    )\n  )", "problem": 42, "user": "518d1b5be4b070277754617b"}, {"code": "(fn [n] (apply * (range 2 (inc n))))", "problem": 42, "user": "523c6451e4b07becd5be2222"}, {"code": "(fn [x] (reduce #(* %1 %2)(range 1 (inc x))))", "problem": 42, "user": "52166e50e4b0bf4bffd29cc6"}, {"code": "#(reduce * (range 2 (inc %)))", "problem": 42, "user": "523ed522e4b057c4b7cd0a78"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5241fe85e4b076e5d3121f42"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "52437703e4b076204b44fabf"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "504f0036e4b0e7ad84dbc4aa"}, {"code": "(fn fac [x] \n  (if (= x 0)\n    1 \n  \t(* (fac (- x 1)) x)))", "problem": 42, "user": "5243d9a2e4b076204b44fadf"}, {"code": "#(reduce * (range 1 (+ % 1)))", "problem": 42, "user": "524025bce4b0ad64fa01030f"}, {"code": "(fn[x] (reduce #(* % %2) (range 1 (inc x))))", "problem": 42, "user": "519dbf26e4b037b32803f9bd"}, {"code": "(fn f [n] (if (zero? n) 1 (* n (f (dec n)))))", "problem": 42, "user": "51cfc616e4b0e42293a22578"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4ff58b05e4b0678c553fc36b"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5241eb78e4b076e5d3121f3a"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5245fbbbe4b09dbe66b56183"}, {"code": "#(reduce * (range 1 (+ 1 %)))", "problem": 42, "user": "51b0e7b3e4b0c53cf2e68a6e"}, {"code": "#(reduce * 1 (range 1 (inc %)))", "problem": 42, "user": "52487654e4b05ef8e38e63dc"}, {"code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "problem": 42, "user": "52479487e4b05ef8e38e6373"}, {"code": "#(reduce * (map inc (range %)))", "problem": 42, "user": "5246e945e4b0644eb7b0783b"}, {"code": "#(apply * (rest (range (inc %))))", "problem": 42, "user": "523b1a65e4b02f719975bdbd"}, {"code": "#(if (< % 2) 1 (apply * (rest (range (inc %)))))", "problem": 42, "user": "5245af03e4b08ba239308124"}, {"code": "#(reduce * (range 1 (+ 1 %1)))", "problem": 42, "user": "5248c4c7e4b05ef8e38e63e8"}, {"code": "(fn [limit] (let [values (range 1 (inc limit))]\n              (reduce #(* %1 %2) 1 values)\n  \n              ))", "problem": 42, "user": "50550f43e4b0b1b9d1860eb7"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "522f483ce4b032bbe342415a"}, {"code": "#(reduce * (range 1 (+ % 1)))", "problem": 42, "user": "52485723e4b05ef8e38e63d2"}, {"code": "#(reduce * (range 1 (+ 1 %1)))", "problem": 42, "user": "522d3a16e4b0e26240291d50"}, {"code": "(fn [limit]\n   (apply * (range 1 (inc limit)))\n   )", "problem": 42, "user": "511d4a52e4b022853b0e07a1"}, {"code": "#(reduce * (take % (iterate inc 1)))", "problem": 42, "user": "51f66891e4b06ff1c25c52c1"}, {"code": "(fn [x] (reduce * (range 1 (inc x))))", "problem": 42, "user": "5236cd89e4b0e010857b4e45"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "52463059e4b09dbe66b56198"}, {"code": "(fn fac [x] (if (= x 1) 1 (* x (fac (- x 1)))))", "problem": 42, "user": "524d0ba5e4b0752c4cb68cd2"}, {"code": "(fn go [n]\n  (case n\n    0 1\n    (* n (go (- n 1)))))", "problem": 42, "user": "524cdd51e4b0752c4cb68ccc"}, {"code": "(fn fac [x]\n  (if (= x 1)\n    1\n    (* x (fac (dec x)))))", "problem": 42, "user": "524be8e0e4b09eba1c0223f1"}, {"code": "(fn fun2 [x]\n  (reduce * (take x (iterate inc 1)) ) \n)", "problem": 42, "user": "52132f8de4b0d32679a50651"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f601623e4b0defedf855fa3"}, {"code": "#(apply * (take % (iterate inc 1)))", "problem": 42, "user": "51618519e4b009fba0926e35"}, {"code": "#(reduce * (range 1 (+ % 1)))", "problem": 42, "user": "524dd1c3e4b0f245900d275c"}, {"code": "#(reduce * (take % (iterate dec %)))", "problem": 42, "user": "524feb3fe4b0541d1855b81f"}, {"code": "#(apply * (range % 1 -1))", "problem": 42, "user": "524f61bee4b0541d1855b80f"}, {"code": "(fn [n]\n  (reduce #(* % %2) (range 1 (inc n))))", "problem": 42, "user": "525078b6e4b0541d1855b832"}, {"code": "(fn fact [x]\n                 (if (= x 1) 1\n                     (* x (fact (dec x)))))", "problem": 42, "user": "524a74b3e4b05ef8e38e64a7"}, {"code": "#(reduce * (map (partial + 1) (range %)))", "problem": 42, "user": "524e6b68e4b0541d1855b7db"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "524ae8e6e4b09eba1c0223b5"}, {"code": "(fn self [x]\n  (if (= x 0)\n    1\n    (* x (self (dec x)))))", "problem": 42, "user": "524b90fae4b09eba1c0223df"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "52525a0ee4b0541d1855b8a2"}, {"code": "(fn [n] (reduce * (rest (range (inc n)))))", "problem": 42, "user": "5245d29ae4b09dbe66b56174"}, {"code": "(fn r [x]\n   (loop [i 1 sum 1]\n     (if (= i x) (* i sum) (recur (inc i) (* i sum)))))", "problem": 42, "user": "523eb110e4b057c4b7cd0a67"}, {"code": "(fn fac[n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "52452225e4b0d8acf9ed6ae6"}, {"code": "(fn fact[x]\n  (if (<= x 1) 1 (* x  (fact (- x 1))  )))", "problem": 42, "user": "5224060de4b01819a2de42c3"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "525431dfe4b0541d1855b970"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "52527192e4b0541d1855b8af"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "524469dee4b0d8acf9ed6a9d"}, {"code": "(fn [x] (apply * (range 1 (inc x))))", "problem": 42, "user": "520a9897e4b01da9d47a99e1"}, {"code": "(fn fact [x]\n (apply * (range 2 (inc x))))", "problem": 42, "user": "52471ac0e4b05ef8e38e6354"}, {"code": "(fn [n]\n  (apply * (range 1 (inc n))))", "problem": 42, "user": "5254f908e4b0541d1855b9ba"}, {"code": "(fn[x](apply * (range 2 (inc x))))", "problem": 42, "user": "525493bbe4b0541d1855b991"}, {"code": "(fn factorial-using-reduce [n]\n  (reduce * (range 1 (inc n))))", "problem": 42, "user": "4eb2f89a535d7eef30807353"}, {"code": "(fn [n] (apply * (range 1 (+ n 1))))", "problem": 42, "user": "4ef7a483535dced4c769f258"}, {"code": "(fn [x] (apply * (range 1 (inc x))))", "problem": 42, "user": "51553ea7e4b06c5f6a1490a2"}, {"code": "(fn [x] (reduce * (range 1 (inc x))))", "problem": 42, "user": "5217c26fe4b0a4bccb16cab8"}, {"code": "#(reduce * (range 1 (+ % 1)))", "problem": 42, "user": "5256627ce4b0541d1855ba1a"}, {"code": "#(reduce * (range 1 (+ % 1)))", "problem": 42, "user": "5255b719e4b0541d1855b9ef"}, {"code": "(fn f\n   ([x]\n      (if (zero? x)\n          1\n          (* x (f (dec x)))\n      )\n   ))", "problem": 42, "user": "51d28e15e4b0d13b04db0d9b"}, {"code": "(fn [x] (reduce * (range 1 (+ x 1))))", "problem": 42, "user": "524740e7e4b05ef8e38e635d"}, {"code": "(fn fn42 [n]\n  (apply * (range 1 (inc n))))", "problem": 42, "user": "5042bb9ae4b034ff00315d16"}, {"code": "(fn fact [n] (if (= n 1) 1 (* n (fact (- n 1)))))", "problem": 42, "user": "52474ec2e4b05ef8e38e6361"}, {"code": "#(loop [n % acc 1] (if (zero? n) acc (recur (dec n) (* acc n))))", "problem": 42, "user": "52474de3e4b05ef8e38e6360"}, {"code": "(fn fac [x]\n  (if (= x 1)\n    1\n    (* x (fac (- x 1)))\n    )\n  )", "problem": 42, "user": "52586d24e4b0cb4875a45cb0"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5250a13ee4b0541d1855b839"}, {"code": "#(reduce * 1 (range 1 (+ 1 %)))", "problem": 42, "user": "50aca92ee4b071b89ef26232"}, {"code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "problem": 42, "user": "524ab5f2e4b09eba1c02239d"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "5250a9abe4b0541d1855b83b"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5259a16ee4b0cb4875a45ce1"}, {"code": "(fn [n] (apply * (range 1 (inc n))))", "problem": 42, "user": "51269362e4b083bb8f88cf09"}, {"code": "(fn [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "525b12b1e4b0cb4875a45d04"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5234870ee4b05e80434a505c"}, {"code": "(fn f [n] (if (= 1 n) 1 (* n (f (dec n)))))", "problem": 42, "user": "5252b59de4b0541d1855b8cf"}, {"code": "(fn fac                                                                                                                                                                                    \n [n]                                                                                                                                                                                        \n(reduce * (filter pos? (range (inc n)))))", "problem": 42, "user": "50fc48dde4b0d10d794c19f6"}, {"code": "#(last (take (inc %) \n              ((fn facrec [prod lazyseq]\n                 (cons prod\n                       (lazy-seq (facrec (* prod (first lazyseq))\n                                         (rest lazyseq)))))\n               1\n               (iterate inc 1))))", "problem": 42, "user": "4f80db02e4b033992c121bf9"}, {"code": "(fn myfn [n1]\n\t(reduce * (map inc (range n1))\n    )\n)", "problem": 42, "user": "525ba7bbe4b0cb4875a45d28"}, {"code": "(fn fact [num]\n( loop [x num y 1]\n(if (<= x 0) y\n(recur (dec x) ( * y x)))))", "problem": 42, "user": "5225b16de4b0d2f5d1e2c0ed"}, {"code": "(fn f [n] (if (> n 0) (* n (f (dec n))) 1))", "problem": 42, "user": "525b0b51e4b0cb4875a45d01"}, {"code": "#(reduce * (take % (range 1 (+ 1 %))))", "problem": 42, "user": "4f944f60e4b0dcca54ed6cc2"}, {"code": "(fn [pos]\n  (reduce * (range 1 (+ pos 1))))", "problem": 42, "user": "525e859ee4b0cb4875a45dae"}, {"code": "(fn [n] (reduce * (range 1 (+ n 1))))", "problem": 42, "user": "525c575be4b0cb4875a45d38"}, {"code": "#(reduce * 1 (take % (iterate inc 1)))", "problem": 42, "user": "509a25b7e4b0efbae1fbc0a8"}, {"code": "(fn [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "5244fa73e4b0d8acf9ed6acb"}, {"code": "#( reduce * ( range 1 (+ % 1 )) )", "problem": 42, "user": "515919fbe4b0394f658fe229"}, {"code": "(fn ! [n]\n    (if (= n 1)\n      1\n      (* n (! (dec n)))))", "problem": 42, "user": "51aa2b4fe4b04e3dc0c27b21"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "51622fb8e4b009fba0926e3f"}, {"code": "#(reduce * (rest (range (inc %))))", "problem": 42, "user": "524fafdfe4b0541d1855b818"}, {"code": "(fn\n  [n]\n  (reduce * (reverse (range 1 (inc n)))))", "problem": 42, "user": "525fffb8e4b03e8d9a4a702b"}, {"code": "(fn [n] (apply * (range 1 (inc n))))", "problem": 42, "user": "525f51bde4b0cb4875a45dc8"}, {"code": "(fn [n]\n  (loop [cnt n acc 1]\n    (if (zero? cnt)\n      acc\n      (recur (dec cnt) (* acc cnt)))))", "problem": 42, "user": "524a554de4b05ef8e38e64a2"}, {"code": "(fn [n] (reduce * (range 1 (+ n 1))))", "problem": 42, "user": "5256a1d4e4b0541d1855ba29"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "525cc137e4b0cb4875a45d46"}, {"code": "(fn [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "524f4162e4b0541d1855b806"}, {"code": "(fn [n] (apply * (range 1 (+ n 1))))", "problem": 42, "user": "52618ea3e4b03e8d9a4a7064"}, {"code": "#(apply * (range 1 (+ 1 %)))", "problem": 42, "user": "525d490ae4b0cb4875a45d70"}, {"code": "#(reduce * (take % (iterate dec %)))", "problem": 42, "user": "524c7fcfe4b0752c4cb68cbd"}, {"code": "(fn [x] (reduce * (range 1 (+ 1 x))))", "problem": 42, "user": "525bcae9e4b0cb4875a45d30"}, {"code": "(fn [x]\n  (loop [result 1 num 1]\n    (if (< num x)\n      (recur (* result num) (inc num))\n      (* result num))))", "problem": 42, "user": "4e5cac7c535d8a8b8723a2c3"}, {"code": "(fn [n] (loop [n n ret 1] (if (= 0 n) ret (recur (dec n) (* ret n)))))", "problem": 42, "user": "509e62a8e4b08df8156e9e2e"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "524f213be4b0541d1855b7ff"}, {"code": "(fn fattoriale [n]\n  (if (zero? n)\n    1\n    (* n (fattoriale (dec n)))))", "problem": 42, "user": "525947f1e4b0cb4875a45cd8"}, {"code": "(fn n! [n]\n  (if (= n 1) 1 (* n (n! (dec n)))\n   \n   )\n  )", "problem": 42, "user": "5252cbe7e4b0541d1855b8d2"}, {"code": "(fn [n]\n   (loop [current 1\n          total 1]\n     (if (<= current n)\n       (recur (inc current) (* current total))\n       total)))", "problem": 42, "user": "52090567e4b0e152394d76ed"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "52655949e4b03e8d9a4a710b"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "525ed5f4e4b0cb4875a45db8"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "525d416fe4b0cb4875a45d67"}, {"code": "(fn fact [n]\n  (if (= n 1)\n    1\n    (* n\n       (fact (- n 1)))))", "problem": 42, "user": "5264b4a9e4b03e8d9a4a70e0"}, {"code": "#(reduce * (range 1 (+ % 1)))", "problem": 42, "user": "517e12e3e4b0fcc7c5d37d3c"}, {"code": "(fn fact [i]\n  (if (= i 1) i (* i (fact (dec i))))\n  )", "problem": 42, "user": "5263b5e6e4b03e8d9a4a70b7"}, {"code": "(fn [n]\n    (reduce * (range 1 (inc n)) ))", "problem": 42, "user": "52342722e4b07e3ee2be83c0"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5012da69e4b0c8732600222d"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "525a8875e4b0cb4875a45cf6"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "5250779ee4b0541d1855b82f"}, {"code": "(fn fact! [n]\n  (if (< n 2)\n    n\n    (* n (fact! (dec n)))))", "problem": 42, "user": "501948b3e4b0b6630b101db5"}, {"code": "#(apply * (map inc (range %)))", "problem": 42, "user": "52667ecfe4b03e8d9a4a713e"}, {"code": "#(apply * (take  % (iterate inc 1)))", "problem": 42, "user": "51ca82e9e4b08b1cbd0d9488"}, {"code": "(fn [n] \n  (reduce * (range 1 (inc n))))", "problem": 42, "user": "52616198e4b03e8d9a4a705e"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5268f5b4e4b03e8d9a4a71cf"}, {"code": "(fn [i] (apply * (range 1 (inc i))))", "problem": 42, "user": "52593207e4b0cb4875a45cd3"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "525a643be4b0cb4875a45cf1"}, {"code": "(fn fact [x] \n  (cond\n   (< x 2) 1\n   :else (* x (fact (dec x)))))", "problem": 42, "user": "525aa499e4b0cb4875a45cf7"}, {"code": "(fn [n]\n    (apply * (range 1 (inc n))))", "problem": 42, "user": "526302eee4b03e8d9a4a70a2"}, {"code": "(fn [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "525ee103e4b0cb4875a45dbb"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "52664945e4b03e8d9a4a712f"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "526952b8e4b03e8d9a4a71e4"}, {"code": "(fn ft [x]\n  (if (< x 2) 1\n    (* (ft (dec x)) x)))", "problem": 42, "user": "52112be7e4b07aea8afc4f68"}, {"code": "#(apply * (take % (iterate inc 1)))", "problem": 42, "user": "51dc1202e4b09c47a74ce107"}, {"code": "(fn factorial [n]\n  (loop [cont 1, acc 1]\n    (if (> cont n) acc\n    (recur (+ cont 1) (* acc cont))))\n)", "problem": 42, "user": "524b1a95e4b09eba1c0223c2"}, {"code": "#(reduce (fn [a b] (* a b)) 1 (range 1 (inc %1)))", "problem": 42, "user": "5268eb68e4b03e8d9a4a71c6"}, {"code": "#(apply * (take %  (iterate inc 1)))", "problem": 42, "user": "52628bb0e4b03e8d9a4a7089"}, {"code": "#(apply * (range 2 (inc %)))", "problem": 42, "user": "4ec11b79535dfed6da9c6da6"}, {"code": "(fn [x] (apply * (take x (iterate dec x))))", "problem": 42, "user": "5261aebbe4b03e8d9a4a7066"}, {"code": "(fn fac [n] (if (= 1 n) n (* n (fac (dec n)))))", "problem": 42, "user": "5116e176e4b0063b4e3e16d7"}, {"code": "#(reduce (fn [f i] (* f i)) (range 1 (inc %)))", "problem": 42, "user": "526c2340e4b03e8d9a4a7281"}, {"code": "(fn [n]\n  (reduce * (range 1 (+ 1 n))))", "problem": 42, "user": "526439a4e4b03e8d9a4a70cc"}, {"code": "#(reduce * (take % (iterate dec %)))", "problem": 42, "user": "512318b6e4b03b44edbed433"}, {"code": "(fn [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "526dd90de4b03e8d9a4a72fe"}, {"code": "(fn [n]\n  (apply * (range 1 (inc n))))", "problem": 42, "user": "5244cf39e4b0d8acf9ed6ac5"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f05872b535dcb61093f6bf8"}, {"code": "(fn fact [x] (reduce * (range 1 (inc x))))", "problem": 42, "user": "526e84b5e4b03e8d9a4a732d"}, {"code": "(fn fct [n]\n  (if (> n 1)\n    (* n (fct (dec n)))\n    1)\n  )", "problem": 42, "user": "5267d9bde4b03e8d9a4a7188"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "526f9715e4b03e8d9a4a7372"}, {"code": "(fn fact [n] \n  (if (= n 0) \n    1 \n    (* n \n       (fact (dec n))\n       )\n    )\n  )", "problem": 42, "user": "526ee63de4b03e8d9a4a733f"}, {"code": "(fn [n]\n  (apply * (range 1 (inc n))))", "problem": 42, "user": "526e5be8e4b03e8d9a4a731c"}, {"code": "(fn [x] (reduce * 1 (range 1 (+ 1 x))))", "problem": 42, "user": "51f4d46ee4b0fca5e8b48243"}, {"code": "(fn [x]\n  (reduce * (range 1 (inc x))))", "problem": 42, "user": "5262efade4b03e8d9a4a709f"}, {"code": "(fn [x]\n  (case x\n    0 1\n    1 1\n  (reduce * 1 (next (range (inc x))))))", "problem": 42, "user": "523bde95e4b07becd5be2202"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5260341ee4b03e8d9a4a7034"}, {"code": "(fn fac [num]\n  \t(if (= num 1) 1 (* num (fac (- num 1)))))", "problem": 42, "user": "5271605ae4b03e8d9a4a73ed"}, {"code": "#(reduce * (range 2 (inc %)))", "problem": 42, "user": "523acf7be4b0aa37f082ed90"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5269c150e4b03e8d9a4a71f8"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5264301fe4b03e8d9a4a70ca"}, {"code": "(fn factorial\n  [x]\n  (if (= x 0) 1\n  (* x (factorial (- x 1)))\n  )\n)", "problem": 42, "user": "51f549c4e4b0abb92f97f9cb"}, {"code": "(fn fact[n] (if (= n 1) \n            1 \n            (* n (fact (- n 1)))))", "problem": 42, "user": "5271b940e4b03e8d9a4a73fb"}, {"code": "(fn [n]\n  (apply * (range 1 (inc n)))\n  )", "problem": 42, "user": "5250b7a5e4b0541d1855b83e"}, {"code": "(fn [x] (apply * (range 1 (inc x))))", "problem": 42, "user": "5272669de4b03e8d9a4a742e"}, {"code": "(fn [n]\n  (loop[mul 1\n        n n]\n    (if(= n 1)\n      mul\n      (recur ( * mul n ) ( dec n)))))", "problem": 42, "user": "5273562ae4b03e8d9a4a7479"}, {"code": "#(reduce * (reverse(range 1 (inc %))))", "problem": 42, "user": "526f79aee4b03e8d9a4a736a"}, {"code": "#(apply * (map inc (range %)))", "problem": 42, "user": "526e3f74e4b03e8d9a4a7312"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "52727d52e4b03e8d9a4a7439"}, {"code": "(fn fac [n]\n  (loop [n n\n         res 1]\n    (if (< n 2)\n      \tres\n      \t(recur (- n 1) (* res n)))))", "problem": 42, "user": "52736ca1e4b03e8d9a4a747e"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5272d4b7e4b03e8d9a4a7453"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "51422945e4b0b50abeb46b2e"}, {"code": "(fn fac [n]                                              \n    (if (< n 2)                                            \n      1                                                    \n      (* n (fac (dec n)))))", "problem": 42, "user": "526397f1e4b03e8d9a4a70b6"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "526d6968e4b03e8d9a4a72d9"}, {"code": "#(reduce * 1 (range 1 (inc %)))", "problem": 42, "user": "527513d8e4b03e8d9a4a74bd"}, {"code": "(fn [n] (loop [cnt n acc 1] (if (zero? cnt) acc (recur (dec cnt) (* acc cnt)))))", "problem": 42, "user": "51ecb0fee4b0bb5070431583"}, {"code": "(fn [x] (apply * (range 1 (inc x))))", "problem": 42, "user": "5255bf1ee4b0541d1855b9f1"}, {"code": "(fn fact [n]\n    (if (= n 1) 1 (* n (fact (dec n)))))", "problem": 42, "user": "5256c8c7e4b0541d1855ba37"}, {"code": "#(reduce * (range 1 (+ 1 %)))", "problem": 42, "user": "50be9b4ae4b00fb48fed2ef6"}, {"code": "(fn ff [x] \n  (if (= x 1) 1 (* (ff (dec x)) x)))", "problem": 42, "user": "5274eb56e4b03e8d9a4a74bb"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "514f6679e4b0b449e54b8df5"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "526bc746e4b03e8d9a4a7271"}, {"code": "#(reduce * (rest (range (inc %))))", "problem": 42, "user": "5276aa0de4b03e8d9a4a74ea"}, {"code": "(fn [n] \n  (loop [n n x 1]\n    (if (zero? n) x\n      (recur (dec n) (* n x)))))", "problem": 42, "user": "526f2e16e4b03e8d9a4a7353"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "527818f7e4b03e8d9a4a7519"}, {"code": "(fn fact [x]\n    (loop [n x f 1]\n        (if (= n 1)\n            f\n            (recur (dec n) (* f n)))))", "problem": 42, "user": "50651de3e4b0b1b6c8b1d85f"}, {"code": "(fn a [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "527a8eb7e4b03e8d9a4a755f"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "51e38568e4b0c611d6113e43"}, {"code": "( fn fac [x]\n  \t ( if ( = x 1) 1 ( * x (fac( -  x 1 )))))", "problem": 42, "user": "527b856fe4b03e8d9a4a758d"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4db03885838c48654951d9bd"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "527675cbe4b03e8d9a4a74e2"}, {"code": "#(reduce * (range 1 (+ % 1)))", "problem": 42, "user": "52561be5e4b0541d1855ba08"}, {"code": "#((fn fac [n acc] (if (= 0 n) acc (fac (dec n) (* acc n)))) % 1)", "problem": 42, "user": "52747090e4b03e8d9a4a74a5"}, {"code": "#(apply * (range 1 (+ %1 1)))", "problem": 42, "user": "5277b9b5e4b03e8d9a4a750d"}, {"code": "#(apply * (take % (iterate inc 1)))", "problem": 42, "user": "527236d4e4b03e8d9a4a741f"}, {"code": "(fn factorial [x]\n  (if (= x 1)\n      1\n      (* x (factorial (- x 1)))))", "problem": 42, "user": "52767b2ce4b03e8d9a4a74e4"}, {"code": "(fn [n]\n  (loop [n n\n        acc 1]\n   (if (= n 1)\n     acc\n     (recur (dec n) (* acc n)))))", "problem": 42, "user": "5272ccf1e4b03e8d9a4a7450"}, {"code": "(fn factorial [x]\n  (if (= x 0) \n    1\n    (* x (factorial (dec x)))))", "problem": 42, "user": "521cd8e4e4b0c4ef0be8309f"}, {"code": "#(if (= %2 1) % (recur (* % %2) (dec %2))) 1", "problem": 42, "user": "5262c73fe4b03e8d9a4a7098"}, {"code": "(fn fact[n](if (zero? n) 1 (* n (fact (dec n)))))", "problem": 42, "user": "526a3412e4b03e8d9a4a721e"}, {"code": "(fn fac [n] (if (= n 1) \n              1\n              (* n (fac (- n 1)))))", "problem": 42, "user": "527ccaf4e4b0757a1b17136d"}, {"code": "#(reduce * (take % (iterate dec %)))", "problem": 42, "user": "522f39a8e4b032bbe3424159"}, {"code": "(fn[x] (apply * (take x (iterate inc 1 ))))", "problem": 42, "user": "52810225e4b0757a1b171418"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "502f6c56e4b0842eb223d8bb"}, {"code": "(fn ! [x] (if (= 1 x) x (*' x (! (dec x)))))", "problem": 42, "user": "5284b506e4b0239c8a67addc"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "519ef784e4b087743fad2198"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "511dada0e4b0a5c68a34840c"}, {"code": "#(reduce * (range % 0 -1))", "problem": 42, "user": "50feab26e4b03cd852b4e850"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "52851da0e4b0239c8a67adea"}, {"code": "(fn ! [x] (if (= x 1) x (* x (! (dec x)))))", "problem": 42, "user": "527ba29de4b03e8d9a4a7594"}, {"code": "#(apply * (take % (iterate inc 1)))", "problem": 42, "user": "527fd663e4b0757a1b1713de"}, {"code": "#(apply * (range % 0 -1))", "problem": 42, "user": "522a01ade4b0590a43906ced"}, {"code": "#(reduce * \n         (range 1 \n                (inc %)))", "problem": 42, "user": "52890634e4b0239c8a67ae5e"}, {"code": "#(reduce * 1 (range 2 (inc %)))", "problem": 42, "user": "5285920be4b0239c8a67adfb"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "527dc2aee4b0757a1b17138d"}, {"code": "#(reduce * (range 1 (+ % 1)))", "problem": 42, "user": "5289bba9e4b0239c8a67ae69"}, {"code": "(fn [n] \n  (loop [n n acc 1]\n    (if (< n 2)\n      acc\n      (recur (dec n) (* n acc)))))", "problem": 42, "user": "528b08efe4b0239c8a67ae8a"}, {"code": "(fn fak [n] (cond (= n 0) 1 :else (* n (fak (- n 1)))))", "problem": 42, "user": "528b9efee4b0239c8a67aea0"}, {"code": "(fn [n] (apply * (range 1 (inc n))))", "problem": 42, "user": "528bba38e4b0239c8a67aea9"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "52446511e4b0d8acf9ed6a9a"}, {"code": "(fn factorial\n  [n]\n  (if (= 1 n) \n    n\n    (* n (factorial (- n 1)))))", "problem": 42, "user": "5277da8ee4b03e8d9a4a7514"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "528d1094e4b0239c8a67aebe"}, {"code": "(fn fac [n]\n  (loop [x 1\n         i 2]\n    (if (> i n)\n      x\n      (recur (* x i)\n             (inc i)))))", "problem": 42, "user": "4f35b2ace4b0e243712b1ec5"}, {"code": "(fn [n]\n  (reduce (fn [x y]\n            (* x y))\n          1\n          (range 1 (inc n))))", "problem": 42, "user": "5282c03be4b0757a1b171461"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "52808897e4b0757a1b171404"}, {"code": "(fn [x] \n  (reduce * (rest (range (inc x)))))", "problem": 42, "user": "52737333e4b03e8d9a4a747f"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "528a791ae4b0239c8a67ae77"}, {"code": "#(reduce * (take % (iterate inc 1)))", "problem": 42, "user": "52741177e4b03e8d9a4a749b"}, {"code": "(fn [n] \n  (reduce * (range 1 (inc n))))", "problem": 42, "user": "4e7e032b535db169f9c796fc"}, {"code": "(fn [x] (apply * (range 1 (inc x))))", "problem": 42, "user": "4ea5ba92535d7eef308072d9"}, {"code": "(fn f\n  ([n] (f n 1))\n  ([n a]\n    (if (< n 1)\n      a\n      (f (dec n) (* a n)))))", "problem": 42, "user": "52753740e4b03e8d9a4a74c1"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5290257ae4b0239c8a67af03"}, {"code": "(fn fact [x]\n  (loop [result 1\n         index 1]\n    (if (or (= x 1) (> index x))\n      result\n      (recur (* result index) (inc index)))))", "problem": 42, "user": "5098db05e4b0cae2931060a2"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "528e64b7e4b0239c8a67aedd"}, {"code": "(fn [x]\n   (reduce (fn [a b] (* a b)) 1 (range 1 (inc x)))\n   )", "problem": 42, "user": "528ce039e4b0239c8a67aebc"}, {"code": "(fn fac [x] (reduce * (range 1 (inc x))))", "problem": 42, "user": "4fbd6210e4b081705acca303"}, {"code": "(fn[num](reduce * (take num (iterate inc 1))))", "problem": 42, "user": "52840004e4b0239c8a67adc1"}, {"code": "(comp (partial reduce *) next range inc)", "problem": 42, "user": "528e95efe4b0239c8a67aee2"}, {"code": "(fn [x] (reduce * (range 1 (inc x))))", "problem": 42, "user": "5294e44de4b02ebb4ef75016"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "52951156e4b02ebb4ef7501b"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "52950ab6e4b02ebb4ef7501a"}, {"code": "(fn [x]\n  (reduce * (range 1 (inc x))))", "problem": 42, "user": "4f3656d1e4b0e243712b1ec9"}, {"code": "(fn \n   [x] (if (= x 1) \n         1\n         (reduce * (range 1 (inc x)))\n   ))", "problem": 42, "user": "51e7c1f1e4b0a3e081b8cbef"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "5287f34ee4b0239c8a67ae43"}, {"code": "#(apply * (range 1 (+ 1 %)))", "problem": 42, "user": "527094f0e4b03e8d9a4a73b3"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "50928ecfe4b097f48cc38570"}, {"code": "#( reduce * (range 1 (+ % 1)))", "problem": 42, "user": "5296008fe4b02ebb4ef7502a"}, {"code": "(fn my-factorial [x] (if (< 0 x)\n                            (* (my-factorial (- x 1)) x)\n                            1))", "problem": 42, "user": "5296aa9be4b02ebb4ef75034"}, {"code": "(fn fac [x] (if (= x 0) 1 (* x (fac (- x 1)))))", "problem": 42, "user": "529862dfe4b02ebb4ef75055"}, {"code": "(fn m-fact [x]\n  (if (= x 0)\n    1\n    (* x (m-fact (dec x)))))", "problem": 42, "user": "4f6e7073e4b07046d9f4efd8"}, {"code": "(fn fact [n]\n  (if (zero? n) 1 (* (fact (dec n)) n)))", "problem": 42, "user": "52990271e4b02ebb4ef7506d"}, {"code": "(fn fact [x]\n  (if (= x 1) 1\n    (* x (fact (dec x)))))", "problem": 42, "user": "524ad140e4b09eba1c0223a9"}, {"code": "#(apply * % (range 2 %))", "problem": 42, "user": "51ad244fe4b09397d510977f"}, {"code": "(fn fact [n]\n  (reduce * (range 1 (inc n))))", "problem": 42, "user": "50294c28e4b0b33e9bf6fdef"}, {"code": "#(reduce * (range 1 (+ % 1)))", "problem": 42, "user": "52140b53e4b0961f15ac4d7e"}, {"code": "(fn [num] (apply * (range 1 (inc num))))", "problem": 42, "user": "51c214bce4b0d204dbe2ca1c"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "528b01a0e4b0239c8a67ae89"}, {"code": "(fn fact_ [x]\n  (if (= x 0) 1\n      (* x (fact_ (- x 1)))))", "problem": 42, "user": "5294c95fe4b02ebb4ef75013"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4e72187b535d5021c1a8965b"}, {"code": "(fn [x] (reduce * (range 1 (inc x))))", "problem": 42, "user": "528e510ee4b0239c8a67aeda"}, {"code": "(fn [n] (reduce * (range 1 (+ n 1))))", "problem": 42, "user": "529e2383e4b04e0c58e87b8b"}, {"code": "(fn fact [n]\n  (if (<= n 1)\n    1\n    (* n (fact (dec n)))))", "problem": 42, "user": "529a73bde4b02ebb4ef75096"}, {"code": "(fn fact ([n] (fact n 1))\n  ([n acc]\n   (if (zero? n) acc (recur (dec n) (* acc n)))\n   ))", "problem": 42, "user": "51e05dfae4b01188f0627543"}, {"code": "#(reduce * (range % 1 -1))", "problem": 42, "user": "52774dd2e4b03e8d9a4a74ff"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "52614bc1e4b03e8d9a4a705c"}, {"code": "(fn [n]\n  (letfn [(iter [n count result]\n                (if (> count n)\n                  result\n                  (iter n (+ 1 count) (* count result))))]\n    (iter n 1 1)))", "problem": 42, "user": "5298c83de4b02ebb4ef75064"}, {"code": "(fn fact [n]\n  (if (= 0 n) 1\n  \t(* n (fact (dec n)))))", "problem": 42, "user": "529ce629e4b04e0c58e87b6e"}, {"code": "#(reduce * (range 1 (+ % 1)))", "problem": 42, "user": "5273b883e4b03e8d9a4a748f"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "526934d6e4b03e8d9a4a71dd"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "509fe759e4b08df8156e9e43"}, {"code": "(fn [n]\n(apply *(range 1 (inc n))))", "problem": 42, "user": "52a04f0ee4b04e0c58e87bc1"}, {"code": "#(reduce * (map inc (range %)))", "problem": 42, "user": "52a1acb2e4b04e0c58e87bdb"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5298cc88e4b02ebb4ef75065"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "528e25b9e4b0239c8a67aed5"}, {"code": "#(reduce * (range 1 (+ %1 1)))", "problem": 42, "user": "52a09e05e4b04e0c58e87bc9"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "52a32876e4b04e0c58e87bfb"}, {"code": "(fn factorial [n]\n  (apply * (range 1 (inc n))))", "problem": 42, "user": "4fe91fa2e4b0547ebccb2440"}, {"code": "(fn [x] \n  (loop [curr 1 acc 1]\n    (if (= curr x) \n      (* acc curr)\n      (recur (inc curr) (* curr acc)))))", "problem": 42, "user": "5226f8e9e4b04e78ff2e199a"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "528e1c88e4b0239c8a67aed1"}, {"code": "#(reduce * (range 1 (inc %1)))", "problem": 42, "user": "5290ffaee4b0239c8a67af10"}, {"code": "#(reduce * (range 1 (+ % 1)))", "problem": 42, "user": "52a503e4e4b0c58976d9abe1"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "528652fbe4b0239c8a67ae14"}, {"code": "(fn factorial[x](if (= x 1) 1 (* x (factorial (dec x)))\n                  \n                  ))", "problem": 42, "user": "52a1edd6e4b04e0c58e87be4"}, {"code": "#(reduce * (take % (iterate dec %)))", "problem": 42, "user": "4ec1619b535dfed6da9c6dab"}, {"code": "(fn [n]\n  (loop [acc 1 n n]\n    (if (<= n 1)\n      acc\n      (recur (* acc n) (dec n)))))", "problem": 42, "user": "4f77b68de4b0fbe0118ec581"}, {"code": "#(apply * (-> % inc range rest))", "problem": 42, "user": "529e8ba9e4b04e0c58e87b99"}, {"code": "#(reduce * (range 1 (+ % 1)))", "problem": 42, "user": "52a144b0e4b04e0c58e87bd6"}, {"code": "#(reduce * (range %1 0 -1))", "problem": 42, "user": "52a0fa82e4b04e0c58e87bd1"}, {"code": "(fn factor [n] \n (if (= n 1)\n   1\n  (* n (factor (- n 1))\n  )\n )\n)", "problem": 42, "user": "528cf6f7e4b0239c8a67aebd"}, {"code": "(fn factorial [n]\n  (reduce * (map inc (range n))))", "problem": 42, "user": "52a6ed15e4b0c58976d9ac0a"}, {"code": "#(reduce *(range 1 (+ % 1)))", "problem": 42, "user": "5294b190e4b02ebb4ef75011"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5273e006e4b03e8d9a4a7495"}, {"code": "(fn f [x] (if (= 1 x) x (* x (f (dec x)))))", "problem": 42, "user": "52a88c4de4b0c58976d9ac30"}, {"code": "(fn fac [n]\n  (if (< n 2) 1 (* n (fac (- n 1)))))", "problem": 42, "user": "529e3a4fe4b04e0c58e87b92"}, {"code": "#(reduce * (take % (iterate dec %)))", "problem": 42, "user": "529d292fe4b04e0c58e87b74"}, {"code": "#(reduce * (range 1 (+ %1 1)))", "problem": 42, "user": "515896f2e4b059418b97f0a8"}, {"code": "#(apply * (range 1 (+ 1 %)))", "problem": 42, "user": "528a3e14e4b0239c8a67ae72"}, {"code": "#(reduce * (range % 0 -1))", "problem": 42, "user": "5298d3f4e4b02ebb4ef75068"}, {"code": "(fn factorial\n  [n]\n  (if\n      (> n 0)\n    (* n (factorial (dec n)))\n    1))", "problem": 42, "user": "5289f1f4e4b0239c8a67ae6d"}, {"code": "(fn fact [n] (cond (= 0 n) 1\n              \t   (= 1 n) 1\n              \t   :else (* n (fact (- n 1)))))", "problem": 42, "user": "52a5d1f3e4b0c58976d9abf1"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "51929214e4b08962174cf74c"}, {"code": "(fn [x] (apply * (range 1 (inc x))))", "problem": 42, "user": "52295917e4b04c906c9c6a6f"}, {"code": "#(loop [aux (dec %) result %]\n   (if(<= aux 1)\n     result\n     (recur (dec aux) (* result aux ) )\n   )\n)", "problem": 42, "user": "4e94addc535dbda64a6f6b21"}, {"code": "(fn fac[n] (if (> n 1) (* n (fac (dec n))) 1))", "problem": 42, "user": "529d4f4be4b04e0c58e87b79"}, {"code": "(fn [x] (first (last (take x (iterate (fn [[mul cnt]] [(* cnt mul) (+ cnt 1) ]) [1 2])))))", "problem": 42, "user": "529d2abce4b04e0c58e87b75"}, {"code": "(fn fact [x] (apply * (take x(iterate dec x))))", "problem": 42, "user": "52a28e1ce4b04e0c58e87bf0"}, {"code": "(fn fac [n]\n  (case n\n    1 1\n    (* n (fac (dec n)))))", "problem": 42, "user": "5254ef3de4b0541d1855b9b8"}, {"code": "(fn fact[n]\n  (if (> n 1)\n    (* n (fact (dec n)))\n    1))", "problem": 42, "user": "52ab6de1e4b0c58976d9ac78"}, {"code": "(fn fatorial [n]\n  (if ( = n 1) 1 \n    (* (fatorial (- n 1)) n)\n  )\n)", "problem": 42, "user": "528a1068e4b0239c8a67ae6f"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "52acc552e4b0c58976d9ac8c"}, {"code": "#(loop [acc %1 fac 1] (if (= 0 acc) fac (recur (dec acc) (* acc fac))))", "problem": 42, "user": "52a5f1e6e4b0c58976d9abf4"}, {"code": "(fn fact [n] (if (zero? n) 1 (* n (fact (dec n)))))", "problem": 42, "user": "5143db4fe4b0b4fb4ace5f3d"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "52a5e784e4b0c58976d9abf3"}, {"code": "(fn [num] (reduce * (range 1 (inc num))))", "problem": 42, "user": "52a779fce4b0c58976d9ac1a"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "52a62e16e4b0c58976d9abf9"}, {"code": "(fn [n]  (reduce * (range 1 (+ 1 n))))", "problem": 42, "user": "51eab308e4b0f1f103a0d150"}, {"code": "(fn factorial\n  [n]\n  (apply * (range 1 (inc n))))", "problem": 42, "user": "51937eb3e4b04df54c098022"}, {"code": "#(reduce * (range 1, (inc %)))", "problem": 42, "user": "52ac41fee4b0c58976d9ac85"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "527c036ee4b03e8d9a4a75a5"}, {"code": "#(reduce * (range % 0 -1))", "problem": 42, "user": "527c040be4b03e8d9a4a75a7"}, {"code": "#(\n  (fn fac[x a]\n   \t(if (> x 0)\n    (fac (- x 1) (* a x)) a) )\n\n  %1 1)", "problem": 42, "user": "52ab61f5e4b0c58976d9ac75"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4fa38e3fe4b081705acca190"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4ee8b9c9535d93acb0a66884"}, {"code": "(fn fac [n]\n  (if (zero? n)\n    1\n    (* n (fac (dec n)))))", "problem": 42, "user": "52aa4a67e4b0c58976d9ac62"}, {"code": "(fn [n]\n  (apply * (range 1 (inc n))))", "problem": 42, "user": "52b1d41ce4b0c58976d9ace6"}, {"code": "#(loop [fac 1 n %] \n        (if (= n 1)\n          fac\n          (recur (* n fac) (dec n))))", "problem": 42, "user": "52a8ca0fe4b0c58976d9ac36"}, {"code": "#(reduce * % (range 1 %))", "problem": 42, "user": "527ba695e4b03e8d9a4a7596"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "52aad30ce4b0c58976d9ac6d"}, {"code": "#(loop [n %1, acc 1]\n   (if (= n 1)\n     acc\n     (recur (dec n) (* acc n))))", "problem": 42, "user": "52b405e1e4b0c58976d9ad15"}, {"code": "(fn [n] (loop [x n f 1] (if (= x 0) f (recur (- x 1) (* f x)))))", "problem": 42, "user": "52b43468e4b0c58976d9ad1b"}, {"code": "(fn [n]\n  (loop [n n\n         p 1]\n    (if (= n 1)\n      p\n      (recur (dec n) (* n p)))))", "problem": 42, "user": "4fc3a72ae4b081705acca342"}, {"code": "#(reduce * (range % 0 -1))", "problem": 42, "user": "52b5edd1e4b0c58976d9ad3c"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "524f4256e4b0541d1855b808"}, {"code": "#(reduce * (take-while (fn [x] (> x 0)) (iterate dec %)))", "problem": 42, "user": "52b5137de4b0c58976d9ad36"}, {"code": "(fn [x] (reduce (fn [a b] (* a b)) (range 1 (inc x))))", "problem": 42, "user": "526fce6fe4b03e8d9a4a7383"}, {"code": "(fn factorial [x] (if (== x 1) 1 (* x (factorial (dec x)))))", "problem": 42, "user": "52b60e94e4b0c58976d9ad3e"}, {"code": "#(reduce * (range 1 (inc %1)))", "problem": 42, "user": "52a1c6cee4b04e0c58e87be1"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "52b65f26e4b0c58976d9ad43"}, {"code": "(fn [n]\n  (loop [r 1N n n]\n    (if (<= n 1)\n      r\n      (recur (* r n) (dec n)))))", "problem": 42, "user": "529b5301e4b02ebb4ef7509f"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "52b453b0e4b0c58976d9ad21"}, {"code": "(fn [x]\n  (reduce * (range 1 (+ 1 x))))", "problem": 42, "user": "52a55adee4b0c58976d9abe7"}, {"code": "(fn f [x]\n  (if (> x 1)\n    (* x (f (dec x)))\n    1))", "problem": 42, "user": "52b0323ee4b0c58976d9acc6"}, {"code": "(fn mfactorical [n]\n  (if (< n 2)\n    1\n    (* n (mfactorical (dec n)))))", "problem": 42, "user": "51852961e4b0da5a5be3babb"}, {"code": "#(loop [n %1 acc 1] (if (= n 0) acc (recur (dec n) (* acc n))))", "problem": 42, "user": "52b8af15e4b07a9af57922b5"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "52aa16d1e4b0c58976d9ac5a"}, {"code": "#(reduce * (range % 0 -1))", "problem": 42, "user": "52b42d7ee4b0c58976d9ad19"}, {"code": "(fn fac\n  [x]\n  (if (= x 1)\n    1\n    (* (fac (dec x)) x)\n    )\n  )", "problem": 42, "user": "505b0431e4b021387fb8985e"}, {"code": "(fn [original]\n  (loop [total 1 current original]\n    (if (= 0 current)\n      total\n      (recur (* total current) (dec current)))))", "problem": 42, "user": "52b94f15e4b07a9af57922ba"}, {"code": "#(reduce * (range 1 (+ 1 %)))", "problem": 42, "user": "52ba6d0be4b07a9af57922d2"}, {"code": "#(loop [n 1 r 1]\n   (if (<= n %)\n     (recur (inc n) (* r n))\n     r)\n)", "problem": 42, "user": "52ba2af3e4b07a9af57922cc"}, {"code": "(fn fact [x] (if (>= 1 x) 1 (* x (fact (dec x)))))", "problem": 42, "user": "52ba43d0e4b07a9af57922cd"}, {"code": "#(reduce * (range 1 (+ 1 %)))", "problem": 42, "user": "52963cc7e4b02ebb4ef7502d"}, {"code": "(fn [n] (reduce * 1 (range 1 (inc n))))", "problem": 42, "user": "52976262e4b02ebb4ef75041"}, {"code": "(fn [x]\n    (reduce *\n            (range 1 (inc x))))", "problem": 42, "user": "52b2d16ae4b0c58976d9acf8"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "52bb123ae4b07a9af57922de"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "52b02329e4b0c58976d9acc5"}, {"code": "#(reduce *  (take % (iterate inc 1)))", "problem": 42, "user": "52a9154ee4b0c58976d9ac3b"}, {"code": "(fn [l] (reduce * (map #(+ 1 %) (range l))))", "problem": 42, "user": "52bb27fee4b07a9af57922df"}, {"code": "(fn [n]\n  (reduce * (range 1 (+ n 1))))", "problem": 42, "user": "527cd633e4b0757a1b17136f"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "52b80827e4b0c58976d9ad56"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4fc50525e4b081705acca370"}, {"code": "(fn [x]\n  (loop [i x r 1]\n    (if (= i 0)\n      r\n      (recur (- i 1) (* r i)))))", "problem": 42, "user": "52b9c62ce4b07a9af57922c3"}, {"code": "#(reduce * (range % 0 -1))", "problem": 42, "user": "52ab51c4e4b0c58976d9ac73"}, {"code": "(fn [n] (reduce #(* %1 %2) (rest (range (+ 1 n)))))", "problem": 42, "user": "52bb81d7e4b07a9af57922e8"}, {"code": "(fn fact [n]\n    ( if (= n 1) 1\n          (* n (fact (dec n)))\n     )\n )", "problem": 42, "user": "52763696e4b03e8d9a4a74d7"}, {"code": "(fn [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "52baea85e4b07a9af57922d9"}, {"code": "(fn help [x]\n  (if (= x 0)\n    1\n    (* x (help (dec x)))))", "problem": 42, "user": "527c166de4b03e8d9a4a75b3"}, {"code": "#(apply * 1 (range 1 (inc %)))", "problem": 42, "user": "52bdb689e4b07a9af5792306"}, {"code": "(fn [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "52bc6f5ee4b07a9af57922f6"}, {"code": "(fn f [x] (if (== 0 x) 1 (* x (f (dec x)))))", "problem": 42, "user": "52b7a904e4b0c58976d9ad51"}, {"code": "(fn [x] (reduce * (range 1 (inc x))))", "problem": 42, "user": "52470d42e4b05ef8e38e6350"}, {"code": "#(apply * % (range 2 %))", "problem": 42, "user": "52bf29fde4b07a9af579232e"}, {"code": "#(loop [res 1 x %]\n    ( if (> x 0)\n      (recur (* res x) (dec x))\n      res)\n )", "problem": 42, "user": "52b577c9e4b0c58976d9ad39"}, {"code": "(fn fac ([n] (fac 1 n))\n        ([acc n] (if (<= n 1)\n                     acc\n                     (recur (* acc n) (- n 1))\n                 )\n        )\n)", "problem": 42, "user": "52bf8e35e4b07a9af579233a"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4eda8d7c535d10e5ff6f530f"}, {"code": "#(reduce * (take % (iterate inc 1)))", "problem": 42, "user": "52bdf6bde4b07a9af579230d"}, {"code": "(fn [y]\n  (loop [prod 1 num y]\n    (if (= 1 num)\n      prod\n      (recur (* prod num) (dec num)))));", "problem": 42, "user": "50a4d1d3e4b0344e360f3bc6"}, {"code": "(fn fac [n]\n  (loop [n n\n         result 1]\n    (if (<= n 1)\n      result\n      (recur (dec n) (* result n)))))", "problem": 42, "user": "4f3a979de4b0e243712b1f10"}, {"code": "#(reduce * (range 1 (+ %1 1)))", "problem": 42, "user": "4f99ae4ae4b0dcca54ed6d00"}, {"code": "#(loop [cnt %1 acc 1]\n       (if (zero? cnt)\n            acc\n          (recur (dec cnt) (* acc cnt))))", "problem": 42, "user": "50dcb2f4e4b02e6ac9592c91"}, {"code": "#(reduce * (range % 0 -1))", "problem": 42, "user": "50772e6ae4b0fc74642bff5d"}, {"code": "(fn fact [n] (if (zero? n) 1 (* n (fact (dec n)))))", "problem": 42, "user": "52be5d55e4b07a9af579231e"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "52be23dbe4b07a9af5792316"}, {"code": "(fn f [x] (reduce * (rest (range (inc x)))))", "problem": 42, "user": "52bf936ee4b07a9af579233b"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "52bbe6e1e4b07a9af57922ef"}, {"code": "(fn factorial [n]\n  (if (zero? n)\n    1\n    (* n (factorial (dec n)))))", "problem": 42, "user": "523f1245e4b01c266ffa7f95"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "5167d60de4b0c5a4140a3098"}, {"code": "(fn solution [k]\n  (if\n    (zero? k)\n    1\n    (* k (solution (dec k)))\n  )\n)", "problem": 42, "user": "52b49aebe4b0c58976d9ad2b"}, {"code": "(fn [n]\n  (loop [current n\n         total 1]\n    (if (> current 1)\n      (recur (dec current) (* total current))\n      total)))", "problem": 42, "user": "52c1cc8be4b07a9af579236b"}, {"code": "#(reduce (fn [x y] (* x y)) (range 1 (inc %)))", "problem": 42, "user": "4fc559eae4b0ee37620e17f3"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "52c00263e4b07a9af579233f"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4ebede00535dfed6da9c6d9a"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "52c25645e4b07a9af579237d"}, {"code": "(fn [number] (apply * (range 1 (+ number 1))))", "problem": 42, "user": "52c3a0f4e4b0c2d177d620c6"}, {"code": "(fn [n]\n  (apply * (range 1 (inc n))))", "problem": 42, "user": "52c580c2e4b0c2d177d620f5"}, {"code": "#(reduce * (map inc (range %)))", "problem": 42, "user": "52c4af71e4b0c2d177d620e1"}, {"code": "#(loop [x % y 1] \n\t(if (zero? x) y\n\t\t(recur (- x 1) (* y x))))", "problem": 42, "user": "52b79d8ee4b0c58976d9ad50"}, {"code": ";;(fn ! [x] (if (= 1 x) 1 (* x (! (dec x)))))\n#(reduce * (range 1 (inc %)))", "problem": 42, "user": "52c4fe42e4b0c2d177d620e9"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "52c61564e4b0c2d177d62109"}, {"code": "(fn [x] (reduce * (take x (iterate dec x))))", "problem": 42, "user": "52c52ef2e4b0c2d177d620ef"}, {"code": "(fn factorial-fun [x]\n  (loop [i 1 a 1]\n    (if (> i x)\n      a\n      (recur (inc i) (* a i)))))", "problem": 42, "user": "515bbcd9e4b0388ca8ca1521"}, {"code": "#(apply * (range 1 (+ % 1)))", "problem": 42, "user": "52bacfa8e4b07a9af57922d6"}, {"code": "#(apply * (range 2 (+ 1 %)))", "problem": 42, "user": "528e1f30e4b0239c8a67aed4"}, {"code": "(fn fact [n] (if (< n 2) 1 (* n (fact (dec n)))))", "problem": 42, "user": "52c69672e4b0c2d177d62110"}, {"code": "(fn my-fact\n        ([n] (my-fact n 1))\n        ([n ret]\n           (if (= 1 n)\n             ret\n             (my-fact (dec n) (* ret n)))))", "problem": 42, "user": "52c58561e4b0c2d177d620f8"}, {"code": "(fn ! [x] (if (= x 1) 1 (* x (! (dec x)))))", "problem": 42, "user": "52be58d7e4b07a9af579231d"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "52c6a0abe4b0c2d177d62111"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "52a23af1e4b04e0c58e87beb"}, {"code": "(fn [x]\n  (reduce * 1 (range 1 (+ x 1))))", "problem": 42, "user": "527ce61de4b0757a1b171374"}, {"code": "(fn [x] (loop [cnt x, acc 1] (if (zero? cnt) acc (recur (dec cnt) (* acc cnt)))))", "problem": 42, "user": "52bd9cb7e4b07a9af5792304"}, {"code": "(fn [x]\n                  (loop [n x acc 1]\n                    (if (> n 1)\n                      (recur (dec n) (* acc n))\n                      acc)))", "problem": 42, "user": "52c6f6dee4b0c2d177d62118"}, {"code": "(fn [n]\n  (loop [acc 1 i 1]\n    (if (> i n) \n        acc \n        (recur (* acc i) (inc i))))\n)", "problem": 42, "user": "52c17e42e4b07a9af5792367"}, {"code": "(fn [x](reduce * (range 1 (inc x))))", "problem": 42, "user": "52c58440e4b0c2d177d620f7"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "52c804dee4b0c2d177d6212b"}, {"code": "(fn [num]\n  (if (= 1 num)\n  (reduce * (range 1 num))\n  (reduce * (range 1 (inc num)))))", "problem": 42, "user": "523089f8e4b0035e815da388"}, {"code": "#(apply * (range 1 (+ % 1)))", "problem": 42, "user": "52c73194e4b0c2d177d6211e"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "528ba1d9e4b0239c8a67aea2"}, {"code": "(fn [n]\n  (apply * (range 1 (inc n))))", "problem": 42, "user": "52ba2639e4b07a9af57922cb"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "508f97c0e4b0ea685a20f768"}, {"code": "(fn [x] (reduce #(* %1 %2) 1 (range 1 (inc x))))", "problem": 42, "user": "52c1bd29e4b07a9af579236a"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "52c8758be4b0c2d177d62135"}, {"code": "(fn fac [n] (if (zero? n) 1 (* n (fac (dec n)))))", "problem": 42, "user": "52cc582ae4b07d0d72b27362"}, {"code": "(fn fact [n]\n  (if (= n 0)\n    1\n    (* (fact (- n 1)) n)))", "problem": 42, "user": "52cc09c1e4b07d0d72b27356"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "52bc6cb2e4b07a9af57922f5"}, {"code": "#(apply * (range 1 (+ % 1)))", "problem": 42, "user": "52cc85abe4b07d0d72b27367"}, {"code": "#(reduce * (range % 0 -1))", "problem": 42, "user": "52c5c1c8e4b0c2d177d620fc"}, {"code": "#(reduce * (range % 1 -1))", "problem": 42, "user": "52cb6bb0e4b07d0d72b2734c"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "52828298e4b0757a1b17145b"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "52cca65be4b07d0d72b2736b"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "52ce2aace4b07d0d72b2738b"}, {"code": "(fn [n]\n  (apply * (range 1 (inc n))))", "problem": 42, "user": "526698c9e4b03e8d9a4a7144"}, {"code": "#(loop [n %\n        fact 1]\n   (if (zero? n)\n     fact\n     (recur (dec n) (* fact n))))", "problem": 42, "user": "505345d9e4b0517ede0d0a06"}, {"code": "(fn [n] (reduce #(* %1 %2) 1 (range 1 (inc n))))", "problem": 42, "user": "52caeb25e4b071a8d36bd3e7"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "52c49401e4b0c2d177d620de"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "52c3dffee4b0c2d177d620cb"}, {"code": "#(reduce * (map inc (range %)))", "problem": 42, "user": "5238ca2de4b0d705d026eef6"}, {"code": "(fn foo [n]\n    (if (= n 1)\n      1\n      (* n (foo (dec n)))))", "problem": 42, "user": "52cdc676e4b07d0d72b2737f"}, {"code": "#(reduce * (range 1 (+ 1 %)))", "problem": 42, "user": "52c1f404e4b07a9af5792370"}, {"code": "(fn [n]\n  (loop [i n res 1]\n    (if (> i 0)\n      (recur (dec i) (* res i))\n      res  \n    )\n  )\n)", "problem": 42, "user": "5094057fe4b097f48cc38593"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "52d0902ee4b07d0d72b273bd"}, {"code": "#(apply * (range 1 (+ 1 %)))", "problem": 42, "user": "52bbd09ee4b07a9af57922ee"}, {"code": "(fn [n]\n   (loop [x n r 1]\n     (if (= x 1)\n       r\n       (recur (dec x) (* r x)))))", "problem": 42, "user": "51ea4e35e4b0f1f103a0d148"}, {"code": "(fn [x] (reduce * (take x (iterate dec x))))", "problem": 42, "user": "529952a4e4b02ebb4ef75081"}, {"code": "(fn f [n] \n  (if (= n 1)\n   1\n   (* n (f (dec n)))))", "problem": 42, "user": "52ce4cafe4b07d0d72b2738e"}, {"code": "(fn\n  [num]\n  (->> num\n    inc\n    (range 1)\n    (reduce *)))", "problem": 42, "user": "4f541874e4b0a7574ea717d8"}, {"code": "(fn [x]\n  (loop [counter x factorial 1]\n    (if (zero? counter)\n      factorial\n      (recur (dec counter) (* factorial counter))\n      )\n    )\n  )", "problem": 42, "user": "52cc7c40e4b07d0d72b27364"}, {"code": "(fn [x]\n  (loop [n x\n         a 1]\n    (if (> n 1)\n      (recur (- n 1) (* a n))\n      a)))", "problem": 42, "user": "52d251fae4b099d49816f0a9"}, {"code": ";(fn fact [n]\n;  (if (or (= n 1) (= n 0))\n;    1\n;    (* n (fact (dec n)))))\n\n#(apply * (range 1 (inc %)))", "problem": 42, "user": "52d00832e4b07d0d72b273b4"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "52d340ebe4b099d49816f0c1"}, {"code": "#(apply * (take % (iterate inc 1)))", "problem": 42, "user": "4ed45563535d10e5ff6f52c9"}, {"code": "(fn foo [n] (if (= n 1) 1 (* n (foo (dec n)))))", "problem": 42, "user": "52cc92e9e4b07d0d72b27368"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "52cdb7efe4b07d0d72b2737c"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "51b41150e4b0f094dd986fac"}, {"code": "(fn fun\n  [n]\n  (reduce * (range 1 (inc n))))", "problem": 42, "user": "52d39acce4b099d49816f0c7"}, {"code": "(fn [x] (reduce * (range 1 (inc x))))", "problem": 42, "user": "52b2a819e4b0c58976d9acf1"}, {"code": "(fn [x] (reduce * (range 1 (+ 1 x))))", "problem": 42, "user": "52ce8648e4b07d0d72b27390"}, {"code": "#(reduce * (range % 1 -1))", "problem": 42, "user": "52d10680e4b07d0d72b273c3"}, {"code": "(fn [n]\n  (loop [n n\n         acc 1]\n    (if (= n 0)\n      acc\n      (recur (dec n) (* n acc)))))", "problem": 42, "user": "52ca9513e4b071a8d36bd3e4"}, {"code": "(fn factorial [n]\n  (loop [product 1\n         current 1]\n    (println product)\n    (println current)\n    (if (= current n)\n      (* product current)\n      (recur (* product current) (+ 1 current)))))", "problem": 42, "user": "4fe89475e4b07c9f6fd12c4f"}, {"code": "(fn ! [c]\n \t(if (= 0 c) 1\n      (* c (! (dec c)))))", "problem": 42, "user": "52c81954e4b0c2d177d6212e"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "52cefb7ee4b07d0d72b27397"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "52d3f666e4b09f7907dd1327"}, {"code": "#(apply * (map inc (range %)))", "problem": 42, "user": "52cdec62e4b07d0d72b27382"}, {"code": "#(apply * (map inc (range %)))", "problem": 42, "user": "52cdec6ce4b07d0d72b27383"}, {"code": "(fn [n] (reduce *' (range 1 (inc n))))", "problem": 42, "user": "51a97f7ae4b08d8ec191b827"}, {"code": "(fn [n] (loop [n n\n               f 1]\n          (if (< n 2)\n            f\n            (recur (- n 1) (* n f)))))", "problem": 42, "user": "52d17182e4b0d9f9285948dd"}, {"code": "#((fn [x f]\n   (if (not= x 0)\n     (recur (dec x) (* f x))\n     f)\n   ) % 1)", "problem": 42, "user": "52cd093fe4b07d0d72b27376"}, {"code": "#(loop [x % result 1] (if (= x 0) result (recur (- x 1) (* result x))))", "problem": 42, "user": "52d4acc8e4b09f7907dd1333"}, {"code": "(fn [n] (apply * (range 1 (inc n))))", "problem": 42, "user": "4f8c6bf6e4b02e764a0a519b"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "52b35a6ee4b0c58976d9ad07"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "52d7f7efe4b09f7907dd1380"}, {"code": "#(apply * (range 1 (inc %1)))", "problem": 42, "user": "50e8cac5e4b0ebbe794eb7ef"}, {"code": "#(reduce * (rest (range (+ 1 %))))", "problem": 42, "user": "52c3b3e5e4b0c2d177d620c8"}, {"code": "(fn fact [x]\n  (if (= x 1)\n    1\n    (* x (fact (- x 1)))))", "problem": 42, "user": "52d7b0ade4b09f7907dd137c"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "52d02380e4b07d0d72b273b7"}, {"code": "(fn [number]\n  (loop [n number f 1]\n    (if (zero? n)\n      f\n      (recur (dec n) (* n f)))))", "problem": 42, "user": "52c672e2e4b0c2d177d6210e"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "52af7a5ce4b0c58976d9acbd"}, {"code": ";(fn my\n;  ([x] (my (dec x) x))\n;  ([x out]\n;   (if (= 0 x)\n;     out\n;     (recur (dec x) (* out x)))))\n\n;(fn fact [x]\n;  (if (= x 1)\n;    x\n;    (* x (fact (dec x)))))\n\n#(reduce * (range 1 (inc %)))", "problem": 42, "user": "52d469c8e4b09f7907dd1330"}, {"code": "(fn f42 [n] (reduce * (range 1 (+ n 1))))", "problem": 42, "user": "52bf0116e4b07a9af5792328"}, {"code": "#(apply * (rest (range (+ 1 %))))", "problem": 42, "user": "52cf5450e4b07d0d72b273a4"}, {"code": "(fn my-fac [n]\n    (if (= n 0)\n      1\n      (*' (my-fac (dec n)) n)))", "problem": 42, "user": "52a7634ae4b0c58976d9ac16"}, {"code": "(fn fact [x]\n  (if (<= x 1) 1\n    (* x (fact (- x 1)))))", "problem": 42, "user": "52d6889ae4b09f7907dd1361"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "52d2e54ae4b099d49816f0b9"}, {"code": "(fn fac[n]\n  (letfn [(%fac [acc n]\n                (if (= n 1)\n                  acc\n                  (recur (* acc n) (- n 1))))]\n    (%fac 1 n)))", "problem": 42, "user": "51f8e057e4b09be9c177e53d"}, {"code": "(fn [n]\n  (loop [acc 1 n n]\n  (if (> n 1)\n    (recur (* acc n) (dec n))\n    acc)))", "problem": 42, "user": "521ed5b4e4b0e6c71e0c0bc0"}, {"code": "(fn fac [x] \n  (cond (= x 0) 1\n        (= x 1) 1\n        :default (* x (fac (dec x)))))", "problem": 42, "user": "52ceffaae4b07d0d72b27398"}, {"code": "#(apply * (take % (drop 1 (range))))", "problem": 42, "user": "52c884a2e4b0c2d177d62136"}, {"code": "#(reduce * (map inc(range %)))", "problem": 42, "user": "52ca720fe4b071a8d36bd3e2"}, {"code": "(fn fac [n]\n  (loop [x n, result 1]\n    (if (= x 0)\n      result\n      (recur (dec x) (* result x)))))", "problem": 42, "user": "52cf084ce4b07d0d72b27399"}, {"code": "(fn fac [x] (reduce * (range 2 (inc x))))", "problem": 42, "user": "52dad8bde4b09f7907dd13be"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "52d809bde4b09f7907dd1384"}, {"code": "(fn factorial \n  [number]\n  (if (= number 1)\n    1\n    (* number (factorial (dec number)))))", "problem": 42, "user": "52daf558e4b09f7907dd13c1"}, {"code": "#(apply * (range 2 (inc %)))", "problem": 42, "user": "52cca96ae4b07d0d72b2736e"}, {"code": "(fn [n]\n  (loop [i 1\n         a 1]\n    (if (> i n)\n      a\n      (recur (inc i) (* i a)))))", "problem": 42, "user": "52b94e26e4b07a9af57922b9"}, {"code": "(fn [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "5112bbdde4b0350614f07a7c"}, {"code": "#(->> (iterate inc 1)  (take %) (apply *))", "problem": 42, "user": "52c60945e4b0c2d177d62108"}, {"code": "#(reduce * (range % 0 -1))", "problem": 42, "user": "5224cf82e4b01819a2de42ef"}, {"code": "(fn [numb] (reduce * (map #(+ 1 %) (range numb))))", "problem": 42, "user": "52dbfe84e4b09f7907dd13c9"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "521d709ae4b050d5da0427ef"}, {"code": "#(reduce * (range 1 (+ 1 %)))", "problem": 42, "user": "52dde81fe4b09f7907dd13eb"}, {"code": "(fn fact[n]\n  (if (= n 1) \n    1\n    (* n (fact (dec n)))))", "problem": 42, "user": "52c1ede2e4b07a9af579236d"}, {"code": "#(reduce * (take % (iterate inc 1)))", "problem": 42, "user": "52d66ca0e4b09f7907dd135c"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "52cc4fd6e4b07d0d72b27360"}, {"code": "(fn factorial\n  [x]\n  (reduce * (range 1 (inc x))))", "problem": 42, "user": "52dd6cc8e4b09f7907dd13e2"}, {"code": "(fn fact [n]\n  (if (> n 1)\n    (* n (fact (dec n)))\n    1\n    )\n  )", "problem": 42, "user": "52d92f13e4b09f7907dd13a2"}, {"code": "(fn f [x]\n  (if (= 1 x)\n    x\n    (* x (f (dec x)))))", "problem": 42, "user": "52deb735e4b09f7907dd13f7"}, {"code": "(fn [coll]\n  (reduce (fn ([a] a)\n              ([a b] (* a b))) (rest (range (+ 1 coll)))))", "problem": 42, "user": "52d51535e4b09f7907dd133a"}, {"code": "(fn factorial [start]\n  (loop [start start\n         result 1]\n    (if (= start 0)\n      result\n    (recur (dec start) (* result start)\n    )))\n  )", "problem": 42, "user": "5204f2b1e4b0bf4f1882c7f5"}, {"code": "#(reduce * (range 2(inc %)))", "problem": 42, "user": "52d8eb78e4b09f7907dd139d"}, {"code": "(fn [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "4e1e1576535d04ed9115e806"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "52bb4be0e4b07a9af57922e2"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "51e3a549e4b0c611d6113e47"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "52df232fe4b09f7907dd13fc"}, {"code": "(fn fac [x]\n  (if (<= x 1) \n    1\n    (* x (fac (dec x)))\n    ))", "problem": 42, "user": "52c8a8b9e4b0c2d177d62139"}, {"code": "(fn [x] (loop [factor x\n                result 1]\n           (if (> factor 1)\n             (recur (dec factor) (* result factor))\n             result)))", "problem": 42, "user": "52d9aaa1e4b09f7907dd13ae"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "52d00a05e4b07d0d72b273b5"}, {"code": "#(apply * (range % 0 -1))", "problem": 42, "user": "52e32d55e4b09f7907dd143e"}, {"code": "(fn f [n] (if (> n 1) (* n (f (- n 1))) 1))", "problem": 42, "user": "52d66152e4b09f7907dd1357"}, {"code": "(fn fact [x] (if (= x 0) 1 (* x (fact (- x 1)))))", "problem": 42, "user": "52e48632e4b09f7907dd1450"}, {"code": "(fn f[n]\n   (loop [x 1, i n] (if (<= i 1) x (recur (* x i) (dec i))))\n)", "problem": 42, "user": "52e295fae4b09f7907dd1437"}, {"code": "#(apply * (range 1 (+ % 1)))", "problem": 42, "user": "52c7f036e4b0c2d177d62126"}, {"code": "(partial\n (fn [a, x]\n   (if (> x 1)\n     (recur (* x a) (dec x))\n     a)) 1)", "problem": 42, "user": "511b900ae4b00c2a1fa7ff6a"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "52d6a9c2e4b09f7907dd1365"}, {"code": "(fn fact [n]\n  (if (zero? n)\n    1\n    (* n (fact (dec n)))))", "problem": 42, "user": "52e41c22e4b09f7907dd144b"}, {"code": "(fn fact [n]\n  (if (= n 1)\n    1\n    (* n (fact (- n 1)))))", "problem": 42, "user": "52e59ca5e4b09f7907dd1464"}, {"code": "#(reduce * (range 1 (inc %1)))", "problem": 42, "user": "513caa36e4b0b86ece9f3229"}, {"code": "x", "problem": 42, "user": "52e635b3e4b09f7907dd146f"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "52e0e646e4b09f7907dd1416"}, {"code": "#(if(= 1 %) % (reduce * (range 2 (+ 1 %))))", "problem": 42, "user": "52e68e61e4b09f7907dd1479"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "51f2a491e4b0210f90e74553"}, {"code": "(fn fact [x] (if (> x 0) (* x (fact (dec x))) 1))", "problem": 42, "user": "52e253fce4b09f7907dd1432"}, {"code": "(fn [n] (let [f (fn ff [x] (if (< x 2) 1 (* x (ff (dec x)))))] (f n)))", "problem": 42, "user": "52dfc89be4b09f7907dd1405"}, {"code": "#(apply * (range 1 (+ % 1)))", "problem": 42, "user": "52e3912ee4b09f7907dd1446"}, {"code": "(fn [n]\n  (apply * (range 1 (inc n))))", "problem": 42, "user": "50ee68fce4b06330c1f87c59"}, {"code": "(fn [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "52e276d9e4b09f7907dd1436"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "52e54040e4b09f7907dd145c"}, {"code": "#(apply * (range 1 (+ % 1)))", "problem": 42, "user": "525fea5ae4b03e8d9a4a7026"}, {"code": "(fn [n] (apply * (range 1 (inc n))))", "problem": 42, "user": "52d83c2ce4b09f7907dd138d"}, {"code": "(fn x[v] (if (= v 1)\n           1\n           (* v (x (dec v)))))", "problem": 42, "user": "52bdd135e4b07a9af579230a"}, {"code": "(fn foo [x] (\n              if (> x 1) \n              (* x (foo (dec x))) \n              1)\n  )", "problem": 42, "user": "52e7afe1e4b09f7907dd148b"}, {"code": "(fn [n] (apply * (rest (range (inc n)))))", "problem": 42, "user": "52b9c5e8e4b07a9af57922c2"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "52d7a930e4b09f7907dd1379"}, {"code": "(fn fact [n] (if (<= n 1) n (* n (fact (dec n)))))", "problem": 42, "user": "4ef9c8f9535dced4c769f26b"}, {"code": "#(reduce * (range 1 (+ % 1)))", "problem": 42, "user": "51d42f44e4b013d740b70ddb"}, {"code": "#(reduce * 1 (range 1 (inc %)))", "problem": 42, "user": "52dc2bc8e4b09f7907dd13ca"}, {"code": "(fn fact[n] (if (< n 1) 1  (* n (fact (- n 1)))))", "problem": 42, "user": "52e73b36e4b09f7907dd1483"}, {"code": "(fn [x] (loop [cnt x acc 1] (if (zero? cnt) acc (recur (dec cnt) (* cnt acc)))))", "problem": 42, "user": "52e75667e4b09f7907dd1485"}, {"code": "(fn fc [n]\n      (cond\n       (= n 0) 1\n       (= n 1) 1\n       :else (* n (fc (- n 1 )))\n       )\n    )", "problem": 42, "user": "51f81925e4b09be9c177e526"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "52e3e6a8e4b09f7907dd1448"}, {"code": "(fn fac [x] \n  (cond\n    (= x 0) 1\n    :else (* x (fac (- x 1)))))", "problem": 42, "user": "52d49445e4b09f7907dd1332"}, {"code": "(fn fac[x](if(<= x 1) 1 (* x (fac (- x 1)))))", "problem": 42, "user": "52e807b3e4b09f7907dd1490"}, {"code": "(fn factorial\n  [x]\n  (cond\n   (= x 0) 1\n   (> x 0) (* x (factorial (- x 1)))))", "problem": 42, "user": "529223cbe4b0239c8a67af26"}, {"code": "#(reduce * (range 1 (+ % 1)))", "problem": 42, "user": "4fb99483e4b081705acca2da"}, {"code": "(fn [start] \n  (apply * (take-while #(> % 0) (iterate dec start))))", "problem": 42, "user": "52430d3ce4b076204b44faa5"}, {"code": "(fn factorial [n]\n  (if (zero? n) 1 (* n (factorial (dec n)))))", "problem": 42, "user": "52efd3d9e4b05e3f0be25ed4"}, {"code": "(fn [a] (apply * (take a (iterate dec a))))", "problem": 42, "user": "51910da7e4b0f8ef0be96bf9"}, {"code": "(fn [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "52d660eae4b09f7907dd1356"}, {"code": "(fn fac [n]\n  (if (zero? n)\n    1\n    (* n (fac (- n 1)))))", "problem": 42, "user": "52f07ccee4b05e3f0be25edf"}, {"code": "(fn factorial [n]\n  (if (= n 1)\n    1\n    (* n (factorial (dec n)))))", "problem": 42, "user": "52ec1dfbe4b0705949c4444b"}, {"code": "#(reduce * (take % (iterate inc 1)))", "problem": 42, "user": "50c2fbebe4b00e537d00253c"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "51bd255ce4b0df1216cefd94"}, {"code": "(fn [x] (apply * (drop 1 (range (inc x)))))", "problem": 42, "user": "52a5a8ebe4b0c58976d9abed"}, {"code": "#(loop [curr 1 res 1] (if (> curr %) res (recur (inc curr) (* res curr))))", "problem": 42, "user": "52570aeae4b0541d1855ba42"}, {"code": "; version 1.0\n;#(loop [ x 1 y % ] \n;  (if \n;    (zero? y) \n;    x \n;    (recur \n;      (* y x) \n;      (dec y) \n;    )    \n;  )\n;)\n\n#(apply * (take % (iterate inc 1)))", "problem": 42, "user": "52f1bc81e4b05e3f0be25eef"}, {"code": "(fn [n]\n  (loop [n n\n         acc 1]\n    (if (> n 0)\n      (recur (- n 1) (* acc n))\n      acc)))", "problem": 42, "user": "52f528f0e4b05e3f0be25f2a"}, {"code": "(fn f [n]\n(reduce * (range 1 (inc n))))", "problem": 42, "user": "52812b9fe4b0757a1b171423"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "528f82d8e4b0239c8a67aef4"}, {"code": "(fn [n]\n    (loop [n n\n           a 1]\n      (if (= n 1)\n        a\n        (recur (dec n) (* a n)))))", "problem": 42, "user": "52d7f9a8e4b09f7907dd1381"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "51f2b8f1e4b0210f90e74556"}, {"code": "(fn [i]\n  (reduce * (range 1 (inc i))))", "problem": 42, "user": "51ab4082e4b04e3dc0c27b31"}, {"code": "(fn [n]\n  (apply (partial * 1) (range 1 (inc n))))", "problem": 42, "user": "529c6995e4b04e0c58e87b61"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "52dfe1d2e4b09f7907dd1406"}, {"code": "#(reduce * (range 1 (+ %1 1)))", "problem": 42, "user": "52f5eefbe4b09b582c12c9cb"}, {"code": "(fn [x]\n  (reduce * (range 1 (+ x 1))))", "problem": 42, "user": "52a32b52e4b04e0c58e87bfc"}, {"code": "(fn fact[n]\n  (if (= n 1) 1 (* n (fact (- n 1)))))", "problem": 42, "user": "52f10094e4b05e3f0be25ee8"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4feaa579e4b0140c20fb9c0b"}, {"code": "#(apply * (range 1 (+ % 1)))", "problem": 42, "user": "52f772e2e4b047fd55836fc3"}, {"code": "#(reduce * (range 1 (+ 1 %)))", "problem": 42, "user": "52f4fae4e4b05e3f0be25f27"}, {"code": "#(reduce * 1 (range 1 (inc %)))", "problem": 42, "user": "529dfc6de4b04e0c58e87b8a"}, {"code": "(fn factorial [x] (if (= 1 x) 1 (* x (factorial (- x 1)))))", "problem": 42, "user": "52f5f8b4e4b09b582c12c9cc"}, {"code": "#(reduce * (range 1 (+ 1 %)))", "problem": 42, "user": "52d838bee4b09f7907dd138b"}, {"code": "#(apply * (range 1 (+ 1 %)))", "problem": 42, "user": "52f8f4d1e4b047fd55836fde"}, {"code": "#(loop [n % x 1] (if (= n 1) x (recur (dec n) (* x n))))", "problem": 42, "user": "52f89125e4b047fd55836fd4"}, {"code": "(fn [x] \n  (loop [curr x\n        total 1]\n    (if (= curr 0)\n      total\n      (recur (dec curr) (* curr total)))))", "problem": 42, "user": "52fa4f48e4b047fd55836ff7"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "52efc98de4b05e3f0be25ed2"}, {"code": "(fn [x] (loop [xx x total 1] (if (> 2 xx) total (recur (- xx 1) (* total xx)))))", "problem": 42, "user": "52eee533e4b05e3f0be25ecb"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "52bf6946e4b07a9af5792334"}, {"code": "(fn [x] (apply * (range 1 (inc x))))", "problem": 42, "user": "52f9ce6de4b047fd55836ff0"}, {"code": "(fn [x] (loop [n 1 sum 1]\n          (if (< x n)\n            sum\n            (recur (+ n 1) (* sum n)))))", "problem": 42, "user": "52f304b4e4b05e3f0be25f07"}, {"code": "#(loop [target % x 1 accum 1] (if (= x target)  (* accum target) (recur target (+ x 1) (* accum x))))", "problem": 42, "user": "52fa250ee4b047fd55836ff3"}, {"code": "(fn [x] (reduce * (take x (iterate inc 1))))", "problem": 42, "user": "52fa57ece4b047fd55836ff8"}, {"code": "(fn ! [x] (if (= x 0) 1 (* x (! (dec x)))))", "problem": 42, "user": "52faec2ee4b047fd55837004"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "50b79c5fe4b0cf3e51c3046c"}, {"code": "#(apply *  %  (range 1 %))", "problem": 42, "user": "529b44afe4b02ebb4ef7509d"}, {"code": "#(loop\n   [x %1\n    acc 1]\n   (cond \n    (= x 1) acc\n    :else (recur (- x 1) (* acc x))))", "problem": 42, "user": "52fc89b2e4b047fd55837019"}, {"code": "(fn factorial [x]\n  (if (> x 1)\n    (* x (factorial (- x 1)))\n    1)\n  )", "problem": 42, "user": "52e980b3e4b09f7907dd14af"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "52d96f7ce4b09f7907dd13a8"}, {"code": "(fn fac [x]\n  (if (== x 0)\n    1\n    (* x (fac (dec x)))))", "problem": 42, "user": "51b89503e4b050a1176cd69a"}, {"code": "#(first (last (take % (iterate (fn [[result number]] [(* result number) (dec number)]) [1 %]))))", "problem": 42, "user": "52fb903ee4b047fd5583700b"}, {"code": "(fn [n]\n  (reduce * 1 (range 1 (inc n))))", "problem": 42, "user": "52f2b450e4b05e3f0be25efd"}, {"code": "(fn [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "51a3b135e4b0e77c4ca60bf6"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "52da20c7e4b09f7907dd13b3"}, {"code": "(fn factorial [n] \n  (if (= 0 n) \n    1 \n    (* n (factorial (dec n)))))", "problem": 42, "user": "528a2de7e4b0239c8a67ae71"}, {"code": "(fn [x] \n  (loop [x x result 1]\n    (if (= x 1)\n      result\n      (recur (dec x) (* x result))\n      )))", "problem": 42, "user": "52fcfeeee4b047fd55837027"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5300aa1de4b0d8b024fd3710"}, {"code": "(fn [n] (apply *' (range 1 (inc n))))", "problem": 42, "user": "5300f68de4b0d8b024fd3714"}, {"code": "(fn [X] (reduce * 1 (range 1 (+ X 1))))", "problem": 42, "user": "5300c383e4b0d8b024fd3712"}, {"code": "(fn mike-stinkt\n  [n]\n  (apply *' (range 1 (inc n))))", "problem": 42, "user": "5300b750e4b0d8b024fd3711"}, {"code": "#(reduce * (range % 0 -1))", "problem": 42, "user": "52f381f3e4b05e3f0be25f10"}, {"code": "(fn [y] (apply * (map (fn [x] (+ x 1))(range y))))", "problem": 42, "user": "512fba16e4b0a88bb1e00aae"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "52eb400ee4b0705949c4443b"}, {"code": ";(fn fact [n] (if (= 1 n) 1 (* n (fact (dec n)))))\n#(reduce * (map inc (range %)))", "problem": 42, "user": "52f426fce4b05e3f0be25f1e"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "512587ade4b05d10e3e395fb"}, {"code": "#(reduce * (take-while pos? (iterate dec %1)))", "problem": 42, "user": "528f4462e4b0239c8a67aef0"}, {"code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "problem": 42, "user": "52fe3a9de4b047fd55837039"}, {"code": "#(apply * (range 2 (inc %)))", "problem": 42, "user": "5302b580e4b0d8b024fd3732"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "518c1079e4b0f028e99addf8"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4faf897be4b081705acca257"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "52fb64b7e4b047fd55837009"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "5302bb37e4b0d8b024fd3734"}, {"code": "#(reduce * (range 1 (+ % 1)))", "problem": 42, "user": "52f3af46e4b05e3f0be25f14"}, {"code": "#(reduce * (range 1 (+ 1 %)))", "problem": 42, "user": "53029281e4b0d8b024fd372e"}, {"code": "(fn [n]\n (loop [cnt n acc 1]\n  (if (= cnt 0)\n    acc\n    (recur (dec cnt) (* acc cnt)))))", "problem": 42, "user": "52cee992e4b07d0d72b27395"}, {"code": "#(loop [acc 1 x %] (if (< x 2) acc (recur (* x acc) (dec x))))", "problem": 42, "user": "5301157ae4b0d8b024fd3717"}, {"code": "(fn f[x](if (= x 1) 1 (* x (f (- x 1)))))", "problem": 42, "user": "52f818a6e4b047fd55836fcc"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "52ffb7f2e4b0d8b024fd370b"}, {"code": "#(loop [n %1 f 1]\n   (if (> n 1)\n     (recur (dec n) (* f n))\n     f\n   )\n)", "problem": 42, "user": "5176afd2e4b085adf681d889"}, {"code": "#(reduce * (range 1 (+ 1 %)))", "problem": 42, "user": "530578ede4b0d8b024fd3760"}, {"code": "(fn[x](reduce * (range 1 (inc x))))", "problem": 42, "user": "5302d79ce4b0d8b024fd3736"}, {"code": "#(reduce * 1 (range 1 (inc %)))", "problem": 42, "user": "5152f82ee4b03f948212e718"}, {"code": "#(reduce * (range 1 (+ % 1)))", "problem": 42, "user": "5307e4ece4b02e82168697a9"}, {"code": "(fn [n] (reduce * 1 (range 1 (inc n))))", "problem": 42, "user": "53070615e4b02e821686979e"}, {"code": "(fn fact [i]\n  (if (> i 1)\n    (* i (fact (dec i)))\n    i))", "problem": 42, "user": "53098be4e4b02e82168697b7"}, {"code": "(fn fact [x]\n  (if (<= x 1) 1\n    (* x (fact (dec x)))))", "problem": 42, "user": "4dad8a6dc9a9d6ed1399dc57"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "528c51a5e4b0239c8a67aeb4"}, {"code": "(fn [n]\n  (reduce * (drop 1 (range (inc n))))\n)", "problem": 42, "user": "530c462ae4b02e82168697d9"}, {"code": "(fn [x]\n  ((fn fact [acc curr x]\n    (if (> curr x)\n      acc\n      (fact (* acc curr) (+ 1 curr) x)\n    )\n  ) 1 1 x)\n)", "problem": 42, "user": "5303a027e4b0d8b024fd3745"}, {"code": "(fn [n] (reduce #(* %1 %2) 1 (range 1 (+ 1 n))))", "problem": 42, "user": "52c45ac8e4b0c2d177d620d9"}, {"code": "(fn [x] (reduce (fn [acc el] 1 (* acc el)) (range 1 (inc x))))", "problem": 42, "user": "5226f9b8e4b04e78ff2e199b"}, {"code": "(fn f [n] (if (zero? n) 1 (* n (f (dec n)))))", "problem": 42, "user": "530caf86e4b02e82168697df"}, {"code": "(fn [x]\n  (loop\n    [total 1\n     n x]\n    (if (= 0 n)\n      total\n      (recur\n       (* total n)\n       (- n 1)))))", "problem": 42, "user": "530d85dee4b08068f379eca8"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "530e9729e4b08068f379ecbc"}, {"code": "#(reduce * (take % (iterate inc 1)))", "problem": 42, "user": "51583ee4e4b0a069fd272c72"}, {"code": "#(apply * (range 1 (+ % 1)))", "problem": 42, "user": "52f7ac81e4b047fd55836fc6"}, {"code": "(fn [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "5138ccc7e4b0a5db03d727d9"}, {"code": "(fn [x]\n    (loop [c x\n           r 1]\n      (if (= c 1)\n        r\n        (recur (- c 1) (* r c)))))", "problem": 42, "user": "530b9714e4b02e82168697cf"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "53034738e4b0d8b024fd373e"}, {"code": "(fn [x]\n  (loop [n x\n         acc 1]\n    (if (<= n 1)\n      acc\n      (recur (dec n) (* acc n)))))", "problem": 42, "user": "5310e389e4b08068f379ecdb"}, {"code": "(fn fac [x] (if (<= x 1) 1 (* x (fac (dec x)))))", "problem": 42, "user": "5302b580e4b0d8b024fd3733"}, {"code": "#(apply * (rest (range (inc %))))", "problem": 42, "user": "5301a13ae4b0d8b024fd371e"}, {"code": "(fn [n]\n  (reduce * 1 (range 1 (inc n))))", "problem": 42, "user": "4ff505c8e4b0678c553fc364"}, {"code": "#(apply * (take % (iterate inc 1)))", "problem": 42, "user": "530e5469e4b08068f379ecb7"}, {"code": "(fn factorial-fun [x]\n      (if (= x 1)\n        1\n        (* x (factorial-fun (- x 1)))))", "problem": 42, "user": "52e17e66e4b09f7907dd1423"}, {"code": "(fn [x] (reduce * (range 1 (+ x 1))))", "problem": 42, "user": "52ecd34ee4b0705949c44457"}, {"code": "#(reduce * (map inc (range %)))", "problem": 42, "user": "53110f32e4b08068f379ece4"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5300158ae4b0d8b024fd370f"}, {"code": "(fn [n]\n  (last\n   (take n (\n  \n    (fn factorial\n        ([] (factorial 1 1))\n        ([x y] (cons (* x y) (lazy-seq (factorial (* x y) (inc y)))))\n    )\n   ))\n  )\n)", "problem": 42, "user": "53153466e4b08068f379ed23"}, {"code": "(fn my-factorial [n]\n  (if (zero? n)\n    1\n    (* n (my-factorial (dec n)))))", "problem": 42, "user": "5310e7aee4b08068f379ecdc"}, {"code": "(fn [n]\n  (apply * (conj (range 1 (inc n)) 1))\n  )", "problem": 42, "user": "531490bde4b08068f379ed17"}, {"code": "(fn factorial2 [x]\n (second \n   (first \n     (drop (dec x) \n           (take x \n                 (iterate \n                   (fn [[i f]]  [(inc i) (* f (inc i))]) \n                   [1 1]))))))", "problem": 42, "user": "52c00e4fe4b07a9af5792342"}, {"code": "(fn fact [x] (cond (= x 1) 1 :else (* x (fact (- x 1)))))", "problem": 42, "user": "5313a2bfe4b08068f379ed0b"}, {"code": "(fn [n] (apply * (take-last n (range (inc n)))))", "problem": 42, "user": "53069e16e4b02e8216869798"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5315a4f0e4b08068f379ed2e"}, {"code": "(fn fact [n] (if (= n 1) 1 (* n (fact (dec n)))))", "problem": 42, "user": "5314c8f7e4b08068f379ed1d"}, {"code": "; This is a lazy-seq right up until nth is called.\n\n(fn [n]\n  (nth \n    (map #(second %) (iterate (fn [[x y]] [(inc x) (* (inc x) y)]) [0N 1N])) \n    n))", "problem": 42, "user": "4eed26af535d93acb0a668bb"}, {"code": "#(reduce * (take % (iterate inc 1)))", "problem": 42, "user": "531488f3e4b08068f379ed16"}, {"code": "(fn [x]\n   (reduce * (range 1 (+ 1 x)))\n )", "problem": 42, "user": "531843c1e4b08068f379ed6c"}, {"code": "(letfn [(factorial [n]\n                   (if (> n 0)\n                     (* n (factorial (dec n)))\n                     1))\n        ]\n  factorial)", "problem": 42, "user": "53162640e4b08068f379ed40"}, {"code": "(fn fac [n]\n  (if (zero? n)\n    1\n    (* n (fac (dec n))) ))", "problem": 42, "user": "53120cb5e4b08068f379ecf0"}, {"code": "#(->> % inc (range 1) (reduce *))", "problem": 42, "user": "530cb5b8e4b02e82168697e0"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "53134005e4b08068f379ed07"}, {"code": "(fn fac[n] (reduce * ((partial range 1) (inc n)) ))", "problem": 42, "user": "4f320253e4b0d6649770a08d"}, {"code": "#(reduce * 1 (range 1 (inc %)))", "problem": 42, "user": "5315ec83e4b08068f379ed39"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "531576b4e4b08068f379ed29"}, {"code": "(fn [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "507330e6e4b0e3170b5a8698"}, {"code": "(fn fact [x] (if (= x 1) x (* (fact (- x 1)) x)))", "problem": 42, "user": "531bad96e4b08068f379ed93"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4ff4bed0e4b0678c553fc35f"}, {"code": "(fn [z] (letfn [(fact [n] (if (zero? n) 1 (* n (fact (dec n)))))] (fact z)))", "problem": 42, "user": "52265e41e4b04e78ff2e1981"}, {"code": "(fn my-fac\n  [x]\n  (reduce * (range x 1 -1)))", "problem": 42, "user": "531a3914e4b08068f379ed88"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "531bfb69e4b08068f379ed97"}, {"code": "#(reduce * (range % 0 -1))", "problem": 42, "user": "52be0263e4b07a9af579230e"}, {"code": "#(reduce * (range 1 (inc %)))\n\n;;#(loop [n % f 1]\n;;   (if (= n 1)\n;;     f\n;;     (recur (dec n) (* f n))))", "problem": 42, "user": "52d2f457e4b099d49816f0ba"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "531c7f0de4b08068f379eda4"}, {"code": "(fn fac[n]\n  \"Yes, I know this is wildly profligate with the use of stack! ;)\"\n  (if \n    (<= n 1)\n    1\n    (* n (fac (dec n) ) )\n  )\n)", "problem": 42, "user": "531cd41ee4b08068f379eda9"}, {"code": "#(loop [c %\n         rt 1]\n    (if (= c 0)\n      rt\n      (recur (- c 1) (* c rt))))", "problem": 42, "user": "53150a4de4b08068f379ed22"}, {"code": "(fn factor[n] (if (< n 2) 1 (* (factor (dec n)) n)))", "problem": 42, "user": "5311b367e4b08068f379eced"}, {"code": "(fn [x]\n\t(loop [cnt x acc 1]\n\t\t(if (zero? cnt) acc\n\t\t  (recur (dec cnt) (* acc cnt)))))", "problem": 42, "user": "531dc21be4b08068f379edb1"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "531ba143e4b08068f379ed91"}, {"code": "#(reduce * 1 (range 1 (inc %)))", "problem": 42, "user": "52dd4fb4e4b09f7907dd13df"}, {"code": "(fn [x]\n  (loop [x x ret 1]\n    (if (zero? x) ret\n      (recur (dec x) (* x ret)))))", "problem": 42, "user": "531c57ace4b08068f379ed9b"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "531dfaf5e4b08068f379edb3"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "531c0619e4b08068f379ed98"}, {"code": "#(loop [n %\n        multiplied 1]\n  (if (zero? n)\n    multiplied\n    (recur (dec n) (* n multiplied)))\n  )", "problem": 42, "user": "52cb19abe4b07d0d72b27348"}, {"code": "(fn [x]\n  (apply * (range 1 (inc x))))", "problem": 42, "user": "4f9b3532e4b0dcca54ed6d13"}, {"code": "(fn fac [n] (if (= n 0) 1 (* n (fac (- n 1)))))", "problem": 42, "user": "52d1e364e4b0d9f9285948e7"}, {"code": "#(reduce * (take % (iterate inc 1)))", "problem": 42, "user": "531f1e63e4b08068f379edc2"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "52f53589e4b05e3f0be25f2c"}, {"code": "(fn [n]\n  (loop [n n\n         result 1]\n    (if (> n 1)\n      (recur (dec n) (* result n))\n      result)))", "problem": 42, "user": "531e5c81e4b08068f379edba"}, {"code": "(fn [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "532347dde4b09d4e7a9b54cc"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5323a414e4b09d4e7a9b54d1"}, {"code": "(fn f [c]\n  (if (> c 1)\n    (* c (f (dec c)))\n    1\n    )\n  )", "problem": 42, "user": "5149c2f1e4b0829bd132edb0"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4fd5418ee4b0d4de60cee372"}, {"code": "(fn [n] \n  (loop [n n res 1] \n    (if (zero? n)\n      res \n      (recur (dec n) (* res n)))))", "problem": 42, "user": "531f7a2de4b08068f379edc6"}, {"code": "#(reduce * (-> % inc range next))", "problem": 42, "user": "532418f3e4b09d4e7a9b54d8"}, {"code": "#(loop [x % acc 1]\n   (if (= x 0)\n     acc\n     (recur (- x 1) (* acc x))))", "problem": 42, "user": "5322d370e4b09d4e7a9b54c7"}, {"code": "(fn [num]\n\t    ((fn [t c num]\n\t       (if (> c num)\n\t          t\n\t       (recur (* t c) (inc c) num) ) ) 1 1 num ) )", "problem": 42, "user": "530c15f7e4b02e82168697d6"}, {"code": "(comp (partial apply *) (partial range 1) inc)", "problem": 42, "user": "5326c5f7e4b09d4e7a9b54f2"}, {"code": "(fn fac [n]\n  (if (= n 0) 1 (* n (fac (dec n)))))", "problem": 42, "user": "51bdebece4b0ff155d51d2b7"}, {"code": "#(loop [n % r 1] (if (> n 0) (recur (dec n) (* r n)) r))", "problem": 42, "user": "53244c9de4b09d4e7a9b54db"}, {"code": "(fn fac [x] (if (= x 1) 1 (* x (fac (dec x))) ))", "problem": 42, "user": "531f0a26e4b08068f379edbf"}, {"code": "(fn [x]\n  (reduce #(* %1 %2) (rest (range (+ x 1))))\n  )", "problem": 42, "user": "52d42021e4b09f7907dd132a"}, {"code": "#(reduce * (range 1 (+ % 1)))", "problem": 42, "user": "532afdc5e4b09d4e7a9b552e"}, {"code": "(fn fac [n]\n   (if (zero? n)\n     1\n     (* n (fac (dec n)))))", "problem": 42, "user": "53224d45e4b09d4e7a9b54c0"}, {"code": "#(reduce * (range 1 (+ 1 %)))", "problem": 42, "user": "518ee4f9e4b0cd6ff51676a5"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "532b9075e4b09d4e7a9b5533"}, {"code": "(fn [x]\n  (loop [x x factorial 1]\n    (if (= x 0)\n      factorial\n      (recur (dec x) (* factorial x)))))", "problem": 42, "user": "4dbe04b2535d020aff1edf56"}, {"code": "(fn factor\n  ([num] (factor num 1))\n  ([num result]\n   (if (> num  1) (recur (dec num) (* num result))\n       result\n   )\n   )\n)", "problem": 42, "user": "5302ac7fe4b0d8b024fd3731"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "532cb6bbe4b019098a6f8b33"}, {"code": "(fn\n  [n]\n  (apply * (range 1 (+ n 1))))", "problem": 42, "user": "52ba447ee4b07a9af57922ce"}, {"code": "(comp (partial apply *)\n      (partial range 1)\n      inc)", "problem": 42, "user": "532ab0bde4b09d4e7a9b5527"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "5004034ce4b0678c553fc447"}, {"code": "(fn [x]\n  (loop [num x result 1] \n   (if (<= num 1)\n     result\n     (recur (- num 1) (* num result)))))", "problem": 42, "user": "5314318ee4b08068f379ed13"}, {"code": "(fn [x]\n  (apply * (range 1 (inc x))))", "problem": 42, "user": "531016d0e4b08068f379ecd1"}, {"code": "(fn [n] (reduce (fn [ret a] (* ret a)) 1 (range 1 (inc n))))", "problem": 42, "user": "532e0b20e4b019098a6f8b45"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "52fba50ce4b047fd5583700d"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "532c0507e4b09d4e7a9b553c"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "52fc34cee4b047fd55837015"}, {"code": "(fn factorial [n]\n     (if (<= n 1)\n       1\n       (* n (factorial (- n 1)))))", "problem": 42, "user": "532727bae4b09d4e7a9b54fa"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "532686e6e4b09d4e7a9b54ef"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "53315c78e4b019098a6f8b67"}, {"code": "(fn ! [n] (if (= n 0) 1 (* n (! (- n 1)))))", "problem": 42, "user": "5318f85ae4b08068f379ed76"}, {"code": "#(reduce \n\t(fn [s i] (* s i)) \n  \t1\n\t(range 1 (inc %1)))", "problem": 42, "user": "53300924e4b019098a6f8b55"}, {"code": "(fn fact [x]\n  (if (> x 0) (* x (fact (dec x))) 1))", "problem": 42, "user": "52d5bee0e4b09f7907dd1344"}, {"code": "(fn fact [n]\n        (if (<= n 1)\n          1\n          (* n (fact (dec n)))))", "problem": 42, "user": "532bce35e4b09d4e7a9b5536"}, {"code": "(fn [n] (loop [cnt n acc 1] (if (zero? cnt) acc (recur (dec cnt) (* acc cnt)))))", "problem": 42, "user": "52a7c82ae4b0c58976d9ac21"}, {"code": "(fn [x] (apply * (range 1 (inc x))))", "problem": 42, "user": "525ab6cfe4b0cb4875a45cf9"}, {"code": "#(apply * (range % 0 -1))", "problem": 42, "user": "533018b2e4b019098a6f8b56"}, {"code": "#(reduce * (range 1 (+ 1 %)))", "problem": 42, "user": "5314b0cae4b08068f379ed1c"}, {"code": "; (fn fact\n;   ([n res]\n;    (if (= n 0)\n;      res\n;      (recur (dec n) (* res n))))\n;   ([n]\n;    (fact n 1)))\n\n;; more clojurey\n(fn [n]\n  (loop [res 1\n         current 0]\n    (if (= current n)\n      res\n      (recur (* res (inc current)) (inc current)))))", "problem": 42, "user": "53322cece4b019098a6f8b73"}, {"code": "(fn fac [x]\n  (if (= 1 x)\n    1\n    (* x (fac (dec x)))))", "problem": 42, "user": "527a5b84e4b03e8d9a4a7558"}, {"code": "(fn [x]\n  (apply * (range 1 (+ x 1))))", "problem": 42, "user": "51f5539fe4b0abb92f97f9cd"}, {"code": "#(loop [acc 1\n        a   %]\n   (if (= a 1) acc\n     (recur (* acc a) (dec a))))", "problem": 42, "user": "52a7fec0e4b0c58976d9ac25"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "532db3e7e4b019098a6f8b3d"}, {"code": "#(reduce * (range 1 (+ % 1)))", "problem": 42, "user": "532631e1e4b09d4e7a9b54ea"}, {"code": "#(apply * % (range 1 %))", "problem": 42, "user": "52e683c0e4b09f7907dd1477"}, {"code": "(fn [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "531902b1e4b08068f379ed77"}, {"code": "(fn [n] (reduce * (take n (iterate dec n))))", "problem": 42, "user": "53219cece4b09d4e7a9b54b7"}, {"code": "#(reduce * (map inc (range %)))", "problem": 42, "user": "531792d9e4b08068f379ed5e"}, {"code": "(fn [x] (loop [cur x res 1] (if (= cur 1) res (recur (dec cur) (* res cur)))))", "problem": 42, "user": "52baefbae4b07a9af57922da"}, {"code": "#(apply * (take % (iterate dec %)))", "problem": 42, "user": "52facb9de4b047fd55837002"}, {"code": ";; #(last (nth (iterate (fn [[n prod]] [(inc n) (* prod n)]) [1 1]) %))\n#(reduce * (range 1 (inc %)))", "problem": 42, "user": "533696b9e4b0e30313ee6c7c"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4fceda40e4b03432b189f407"}, {"code": "#(loop [total 1\n         am %]\n    (if (= am 0)\n      total\n      (recur (* total am)\n             (dec am))))", "problem": 42, "user": "5336ca32e4b0e30313ee6c80"}, {"code": "(fn [n]\n  (apply * (range 1 (+ n 1))))", "problem": 42, "user": "504f6721e4b0a02f9cffde7f"}, {"code": "#(loop [result 1\n        iter 1]\n   (if (> iter %)\n     result\n     (recur (* result iter) (inc iter))))", "problem": 42, "user": "531d34cfe4b08068f379edac"}, {"code": "(fn [x] (reduce * (range 1 (inc x))))", "problem": 42, "user": "52474133e4b05ef8e38e635e"}, {"code": "#(apply * (take % (range 1 (inc %))))", "problem": 42, "user": "527c4071e4b0757a1b17135a"}, {"code": "(fn fact [n] (if (< n 1) 1 (* n (fact (- n 1)))))", "problem": 42, "user": "53388e2de4b0e30313ee6c9c"}, {"code": "#(reduce * (range 1 (+ % 1)))", "problem": 42, "user": "532b43c3e4b09d4e7a9b5531"}, {"code": "(fn fact [x] (apply * (take x(iterate dec x))))", "problem": 42, "user": "53340d3ce4b019098a6f8b89"}, {"code": "(fn fact [x] (apply * (take x(iterate dec x))))", "problem": 42, "user": "533a7427e4b0e30313ee6cbb"}, {"code": "(fn fact [x] (apply * (take x(iterate dec x))))", "problem": 42, "user": "533aac38e4b0e30313ee6cbe"}, {"code": "#(apply * (take % (iterate inc 1)))", "problem": 42, "user": "533056a4e4b019098a6f8b5b"}, {"code": "(fn fact\n  [n]\n  (if (= n 1)\n    1\n    (* n (fact (- n 1)))))", "problem": 42, "user": "53334cb2e4b019098a6f8b81"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "52d2ca1ce4b099d49816f0b4"}, {"code": "#(reduce * (range 1 (+ 1 %)))", "problem": 42, "user": "5334d4f2e4b0656e627bfd71"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "506d5e4ce4b0a302964c5493"}, {"code": "#(reduce * 1 (range 1 (+ 1 %)))", "problem": 42, "user": "520fff3ce4b080a8d9b9d633"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4eadc217535d7eef30807321"}, {"code": "(fn [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "514a13cee4b0829bd132edb4"}, {"code": "#(apply * (range % 0 -1))", "problem": 42, "user": "53377725e4b0e30313ee6c89"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "5339c08ee4b0e30313ee6cad"}, {"code": "(fn fact [x]\n  (if (= x 0) 1 (* x (fact (dec x)))))", "problem": 42, "user": "533ab9abe4b0e30313ee6cbf"}, {"code": "(fn [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "5339c105e4b0e30313ee6cae"}, {"code": "#(apply * (take % (iterate inc 1)))", "problem": 42, "user": "530262c8e4b0d8b024fd3728"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5281a445e4b0757a1b17143a"}, {"code": "(fn [n] \n  (loop [res 1\n         cur n]\n    (if (< cur 1) res\n      (recur (* cur res) (- cur 1)))))", "problem": 42, "user": "533ee560e4b085b17e897d98"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "523ea111e4b057c4b7cd0a65"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "531619c1e4b08068f379ed3d"}, {"code": "(fn [b] (loop [c b fac 1] (if (= c 1) fac (recur (dec c) (* fac c)))))", "problem": 42, "user": "5318594ee4b08068f379ed6d"}, {"code": "(fn ff [n] (if (= n 1) 1 \n             (* n (ff (dec n)))\n                ))", "problem": 42, "user": "5311cd03e4b08068f379ecef"}, {"code": "(fn factorial\n  ([n] (factorial n 1))\n  ([n result]\n  \t(if (= n 1)\n    \tresult\n    \t(recur (dec n) (* n result)))))", "problem": 42, "user": "5341b141e4b00652c8746ecf"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "51da631be4b02ceefd947766"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "533f1584e4b085b17e897d9b"}, {"code": "(fn factorial\n\t[n]\n\t(if (= n 1)\n\t  1\n\t  (* n (factorial (- n 1)))))", "problem": 42, "user": "5339af7de4b0e30313ee6cab"}, {"code": "(fn\n  [x]\n  (loop [i 2\n         results 1]\n    (cond\n     (= x 0) 0\n     (= x 1) 1\n     (= i x) (* i results)\n     :else (recur (inc i) (* i results)))))", "problem": 42, "user": "4eddc5f4535d10e5ff6f532c"}, {"code": "(fn [n] (reduce * 1 (range 1 (inc n))))", "problem": 42, "user": "52a9406de4b0c58976d9ac43"}, {"code": "#(loop [n %\n        acc 1]\n   (if (zero? n)\n     acc\n     (recur (dec n) (* acc n))))", "problem": 42, "user": "533d2ea5e4b085b17e897d7a"}, {"code": "#(reduce * (take-while (partial >= %) (iterate inc 1)))", "problem": 42, "user": "524d90c0e4b0a16e35cf6ded"}, {"code": "(fn [n] (apply * (range 1 (inc n))))", "problem": 42, "user": "533f09e1e4b085b17e897d9a"}, {"code": "(fn myfactorial [n]\n  (reduce * (range 1 (inc n))))", "problem": 42, "user": "5344a0efe4b084c2834f4a2d"}, {"code": "#(apply * (range % 0 -1))", "problem": 42, "user": "53460d02e4b084c2834f4a39"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "53468f6ce4b084c2834f4a3f"}, {"code": "(fn [n] (reduce * 1 (range 1 (inc n))))", "problem": 42, "user": "533b1dc4e4b0e30313ee6cc7"}, {"code": "(fn fact [n] (if (zero? n) 1 (* n (fact (dec n)))))", "problem": 42, "user": "5346db4be4b084c2834f4a45"}, {"code": "#(reduce * (range 1 (+ % 1)))", "problem": 42, "user": "53307da1e4b019098a6f8b5e"}, {"code": "(fn [n]\n  (loop [n n\n         acc 1]\n    (if (= n 1)\n      acc\n      (recur (dec n) (* acc n)))))", "problem": 42, "user": "5346f409e4b084c2834f4a46"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4e705861535d5021c1a89635"}, {"code": "#(apply * (range % 1 -1))", "problem": 42, "user": "526a7025e4b03e8d9a4a722a"}, {"code": "(fn [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "53286389e4b09d4e7a9b5504"}, {"code": "#(reduce * (range 1 (+ 1 %1)))", "problem": 42, "user": "5349ac2be4b084c2834f4a67"}, {"code": "(fn [x]\n  (reduce * (range 1 (inc x))))", "problem": 42, "user": "534941d1e4b084c2834f4a60"}, {"code": "(fn factorial [n]\n  (if (= n 0)\n    1\n    (* n (factorial (- n 1)))\n    )\n  )", "problem": 42, "user": "5349a39de4b084c2834f4a65"}, {"code": "(fn      f[n](if(zero? n) 1(* n(f(dec n)))))", "problem": 42, "user": "53415755e4b00652c8746ecd"}, {"code": "(fn [num]\n  (reduce * (take num (iterate dec num))))", "problem": 42, "user": "53487737e4b084c2834f4a59"}, {"code": "(fn fb [x] (if (= 1 x)\n             \t1\n             \t(* x (fb (dec x)))\n           ))", "problem": 42, "user": "5340ee60e4b00652c8746ec9"}, {"code": "(fn [n]\n  (loop [x 1 r 1]\n    (if (> x n) r\n      (recur (inc x) (* r x)))))", "problem": 42, "user": "51ab70c3e4b04e3dc0c27b33"}, {"code": "(fn [x] (apply * (range 1 (inc x))))", "problem": 42, "user": "4f551054e4b0a7574ea717f5"}, {"code": "(fn fact [n] (if (= n 0) 1 (* n (fact (- n 1)))))", "problem": 42, "user": "4ddb696b535d02782fcbe9fa"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "50fc299ee4b0d10d794c19f2"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "500e6c4ee4b04a05d36fcc05"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5348236ee4b084c2834f4a54"}, {"code": "#(reduce * (map inc (range %)))", "problem": 42, "user": "534bde26e4b084c2834f4a81"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "4f386f61e4b0e243712b1edc"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "534bd9c1e4b084c2834f4a80"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "532a111ee4b09d4e7a9b5520"}, {"code": "(fn my-fact [x]\n  (if (= x 1)\n    1\n    (* x (my-fact (dec x)))))", "problem": 42, "user": "5347870be4b084c2834f4a4b"}, {"code": "(fn fact [n]\n  (reduce #(* %1 %2) (range 1 (inc n))))", "problem": 42, "user": "5349da55e4b084c2834f4a68"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "52de249ae4b09f7907dd13ed"}, {"code": "(fn fact [x] (if (< x 2) x\n              (* x (fact (- x 1)))))", "problem": 42, "user": "531541a0e4b08068f379ed25"}, {"code": "(fn  [n]\n  (loop [s (next (conj (vec(range n)) n))\n         res 1]\n    (if-not s res (recur (next s)\n                     (* res (first s))))))", "problem": 42, "user": "516081e7e4b009fba0926e28"}, {"code": "(fn [n]\n  (loop [x n\n         a 1]\n    (if (= x 1)\n      a\n      (recur (dec x) (* a x)))))", "problem": 42, "user": "51515a19e4b03e678e393acc"}, {"code": "#(reduce * (take % (iterate dec %)))", "problem": 42, "user": "52ee9ac7e4b05e3f0be25ec9"}, {"code": "(partial (fn fact [x y] \n           (if (= y 1) \n             x \n             (fact (* x y) (dec y))\n             )\n           ) \n         1)", "problem": 42, "user": "534c734de4b084c2834f4a93"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "534e9ed4e4b084c2834f4ab8"}, {"code": "#(loop [x 1 y (range 1 (inc %))] (if (empty? y) x (recur (* x (first y)) (rest y))))", "problem": 42, "user": "52ac2db3e4b0c58976d9ac82"}, {"code": "(fn fac [n]\n  (if (= n 1)\n    1\n    (* n (fac (dec n)))\n    ))", "problem": 42, "user": "534815bde4b084c2834f4a53"}, {"code": "(fn factorial\n  [n]\n  (reduce * (range 1 (inc n))))", "problem": 42, "user": "53383c74e4b0e30313ee6c92"}, {"code": "{1 1 3 6 5 120 8 40320}", "problem": 42, "user": "53500869e4b084c2834f4ad3"}, {"code": "#(reduce * (rest (range (inc %))))", "problem": 42, "user": "534e118ee4b084c2834f4aad"}, {"code": "(fn fact [x] \n  (if (= x 1) 1 (* x (fact (dec x)))))", "problem": 42, "user": "534efe66e4b084c2834f4ac1"}, {"code": "#(apply * (range 1 (+ % 1)))", "problem": 42, "user": "5348cab4e4b084c2834f4a5e"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "534d1173e4b084c2834f4a98"}, {"code": "#(reduce * (range 2 (inc %)))", "problem": 42, "user": "534b0598e4b084c2834f4a75"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "533a399de4b0e30313ee6cb9"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "534e4a29e4b084c2834f4ab0"}, {"code": "{1 1 3 6 5 120 8 40320}", "problem": 42, "user": "5336a339e4b0e30313ee6c7d"}, {"code": "(fn fac [x] (if \n              (= 1 x) 1 \n              (* x (fac (dec x)))))", "problem": 42, "user": "533b9cace4b0e30313ee6cd1"}, {"code": "(fn [n]\n  (apply * (range 1 (inc n))))", "problem": 42, "user": "5344fe13e4b084c2834f4a32"}, {"code": "(fn [x] (apply * (map inc (range x))))", "problem": 42, "user": "532df9c5e4b019098a6f8b42"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "53121863e4b08068f379ecf3"}, {"code": "(fn [x]\n  (loop [x x\n         acc 1]\n    (if (= x 0) acc\n    (recur (dec x) (* x acc)))))", "problem": 42, "user": "531308c1e4b08068f379ed04"}, {"code": "#(->> (inc %) (range 1) (reduce *))", "problem": 42, "user": "52761edae4b03e8d9a4a74d4"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "50f10f7be4b06d9538fe211a"}, {"code": "#(reduce * (range % 0 -1))", "problem": 42, "user": "5256c4c1e4b0541d1855ba36"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "535526a2e4b04ce2eb3ed259"}, {"code": "(fn f [n] (if (zero? n) 1 (* n (f (dec n)))))", "problem": 42, "user": "5353afa0e4b084c2834f4b03"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5312cdaae4b08068f379ed03"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "535778dee4b04ce2eb3ed27d"}, {"code": "#(reduce * (take % (drop 1 (range))))", "problem": 42, "user": "53498f88e4b084c2834f4a64"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "5357b241e4b04ce2eb3ed282"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "52046600e4b0c283853240c5"}, {"code": "(fn ! [n]\n  (if (<= n 1)\n    1\n    (* n (! (- n 1)))))", "problem": 42, "user": "5356e04fe4b04ce2eb3ed271"}, {"code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "problem": 42, "user": "5225271fe4b01819a2de42f9"}, {"code": "(fn fact [n] \n    (if (> n 0) (* n (fact (dec n))) 1))", "problem": 42, "user": "530b8580e4b02e82168697cc"}, {"code": "(fn ff[x] \n  \n  (\n   if( <= x 1)  x \n    \n   (* x ( ff (- x 1)))))", "problem": 42, "user": "534d639ae4b084c2834f4a9e"}, {"code": "(fn fact [x]\n  (reduce * 1 (range 1 (inc x))))", "problem": 42, "user": "52dc3bc8e4b09f7907dd13cb"}, {"code": "(fn fun [x] (reduce * (range 1 (inc x))))", "problem": 42, "user": "53287dace4b09d4e7a9b5507"}, {"code": "(fn [n]\n  (loop [n n, v 1]\n    (cond \n     (zero? n) v\n     :else (recur (dec n) (* v n)))))", "problem": 42, "user": "53597288e4b04ce2eb3ed29c"}, {"code": "(fn [x] (reduce * 1 (range 1 (+ x 1))))", "problem": 42, "user": "534dd600e4b084c2834f4aaa"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "53513d28e4b084c2834f4ae3"}, {"code": "(fn fact[%] (if (= % 1) 1 (* (fact (dec %)) %)))", "problem": 42, "user": "53566247e4b04ce2eb3ed266"}, {"code": "#(loop [x % n 1]\n   (if (= x 1)\n   n\n   (recur (dec x) (* n x))))", "problem": 42, "user": "5356dcbee4b04ce2eb3ed270"}, {"code": "(fn fac [n] \n    (if (= n 0)\n      1\n      (* n (fac (dec n))))\n    )", "problem": 42, "user": "535aba96e4b04ce2eb3ed2a8"}, {"code": "(fn [x] (loop [n x r 1] (if (zero? n) r (recur (dec n) (* n r)))))", "problem": 42, "user": "53512b55e4b084c2834f4ae0"}, {"code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "problem": 42, "user": "52271a85e4b04e78ff2e19a7"}, {"code": "(fn factorial [n]\n  (if (> n 0)\n  (* n (factorial (dec n)))\n  1\n  )\n  )", "problem": 42, "user": "52dced9de4b09f7907dd13d7"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "53523ae0e4b084c2834f4aee"}, {"code": "#(apply * (range 2 (inc %)))", "problem": 42, "user": "535d4b0ae4b04ce2eb3ed2be"}, {"code": "#(apply * (range 1 (inc %1)))", "problem": 42, "user": "534f1c94e4b084c2834f4ac5"}, {"code": "#(reduce * 1 (range 1 (+ 1 %)))", "problem": 42, "user": "535a18e3e4b04ce2eb3ed2a4"}, {"code": "(fn fac [x] (if (> x 1) (* x (fac (- x 1))) 1))", "problem": 42, "user": "535920b2e4b04ce2eb3ed294"}, {"code": "#(apply * (range % 1 -1))", "problem": 42, "user": "535d2533e4b04ce2eb3ed2bc"}, {"code": "#(* % (reduce * (range 1 %)))", "problem": 42, "user": "535d910ae4b04ce2eb3ed2c5"}, {"code": "(fn [x]\n    (loop [n x f 1]\n        (if (= n 1)\n            f\n            (recur (dec n) (* f n)))))", "problem": 42, "user": "52ccbb48e4b07d0d72b2736f"}, {"code": "#( reduce * (range 1 (+ % 1)))", "problem": 42, "user": "5360e12ce4b0243289761e3a"}, {"code": "(fn f [x]\n  (if (= 0 x)\n    1\n    (* x (f (dec x)))))", "problem": 42, "user": "536102efe4b0243289761e3e"}, {"code": "(fn fac [x] (if (= 1 x) 1 (* x (fac (dec x)))))", "problem": 42, "user": "53480973e4b084c2834f4a52"}, {"code": "(fn [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "5360d41fe4b0243289761e39"}, {"code": "(fn fact [n]\n  (if (< n 2)\n    1\n    (* n (fact (dec n)))))", "problem": 42, "user": "536254a5e4b0243289761e50"}, {"code": "(fn [n]\n    (reduce * 1 (range 1 (inc n))))", "problem": 42, "user": "53489329e4b084c2834f4a5b"}, {"code": "(fn factorial\n  [n]\n  (loop [i n\n         acc 1]\n    (if (= i 1)\n      acc\n      (recur (dec i) (* acc i)))))", "problem": 42, "user": "5338387de4b0e30313ee6c91"}, {"code": "(fn [n] (reduce * (range 2 (+ n 1))))", "problem": 42, "user": "53638ed2e4b0243289761e5b"}, {"code": "#(reduce * (map inc (range 0 %)))", "problem": 42, "user": "50fd4838e4b033b9c38d78ce"}, {"code": "(fn [x]\n  (reduce * (map inc (range x))))", "problem": 42, "user": "5361a4f2e4b0243289761e47"}, {"code": "#(loop [n 1 f 1] (if (= n %) f (let [nn (inc n)] (recur nn (* f nn)))))", "problem": 42, "user": "53629381e4b0243289761e54"}, {"code": "(fn [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "53527551e4b084c2834f4af0"}, {"code": "#(reduce *(take % (iterate inc 1)))", "problem": 42, "user": "535944d6e4b04ce2eb3ed296"}, {"code": "(fn factoral [input]\n  (if (= input 1)\n    input\n    (* input (factoral (dec input)))))", "problem": 42, "user": "532ecd44e4b019098a6f8b49"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "53528cd3e4b084c2834f4af2"}, {"code": "(fn fact [i]\n  (if \n    (= i 1) \n    1\n  \t(* i (fact (- i 1)))))", "problem": 42, "user": "5364697ce4b0243289761e62"}, {"code": "(fn factr [n]\n        (loop [n n\n               result 1]\n          (if (= 1 n)\n            result\n            (recur (dec n) (* n result)))))", "problem": 42, "user": "536581e4e4b0243289761e6d"}, {"code": "#(reduce * (take % (rest (range))))\n\n;(fn x [n] (if (= n 1) 1 (* n (x (dec n)))))", "problem": 42, "user": "5354bb38e4b084c2834f4b0a"}, {"code": "(fn f [n]\n\t(if (< n 2)\n\t1\n\t(* n (f (dec n)))))", "problem": 42, "user": "534bfa81e4b084c2834f4a87"}, {"code": "(fn fact [x]\n  (if (<= x 1) x (* x (fact (dec x)))))", "problem": 42, "user": "5338e33fe4b0e30313ee6ca1"}, {"code": "(fn fact [n]\n  (cond\n        (= n 0) 1\n        (<= n 2) n\n        :else (* n (fact (dec n)))))", "problem": 42, "user": "5368a275e4b0243289761e8f"}, {"code": "(fn fact [n]\n        (if (= 1 n)\n          1\n          (* n (fact (dec n)))))", "problem": 42, "user": "5369d072e4b0243289761ea1"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "536973e5e4b0243289761e9e"}, {"code": "(fn [x]\n  (reduce * (range 1 (inc x))))", "problem": 42, "user": "512eb1e7e4b0b740abc5982a"}, {"code": "(fn fact [ n ] (if (= 1 n) 1 (* n (fact (dec n)))))", "problem": 42, "user": "52c42bc2e4b0c2d177d620d0"}, {"code": "(fn my-fact [n]\n      (if (or (= n 0) (= n 1))\n        1\n        (* n (my-fact (- n 1)))\n        )\n      )", "problem": 42, "user": "536827f1e4b0243289761e8a"}, {"code": "#(reduce * (range 1 (inc %1)))", "problem": 42, "user": "536aa86de4b0243289761eb1"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "535eaa73e4b04ce2eb3ed2d4"}, {"code": "(fn [p]\n\t(nth (map second (iterate (fn [[a b]] [(inc a) (* b (inc a))]) '[1 1])) (dec p)))", "problem": 42, "user": "53664e3be4b0243289761e74"}, {"code": "#(reduce * 1 (take % (iterate inc 1)))", "problem": 42, "user": "536d83cee4b0fc7073fd6e5e"}, {"code": "(fn [n]\n  (loop [n n, acc 1]\n    (if (= n 0) \n      acc\n      (recur (dec n) (* acc n)))))", "problem": 42, "user": "536ca4bde4b0fc7073fd6e49"}, {"code": "(fn [n] (apply * (range 1 (inc n))))", "problem": 42, "user": "53347274e4b0656e627bfd6b"}, {"code": "(fn [n]\n  (loop [n n f 1]\n    (if (zero? n)\n      f\n      (recur (dec n)\n             (* f n)))))", "problem": 42, "user": "5369a4b1e4b0243289761e9f"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "524b0645e4b09eba1c0223bf"}, {"code": "(fn f [n] (if (= n 1) 1 (* n (f (- n 1)))))", "problem": 42, "user": "535197f2e4b084c2834f4ae4"}, {"code": "(fn fac [a] (if (>= 0 a) 1 (* a (fac (dec a)))))", "problem": 42, "user": "4dca56b6535d5973398f9287"}, {"code": "#(apply * (range 1 (inc %1)))", "problem": 42, "user": "53691dc7e4b0243289761e97"}, {"code": "#(reduce * (range 1 (+ 1%)))", "problem": 42, "user": "536e86b0e4b0fc7073fd6e72"}, {"code": "(fn f [n]\n  (if (= n 1)\n    1\n    (* n (f (dec n)))))", "problem": 42, "user": "536f5900e4b0fc7073fd6e7b"}, {"code": "#(apply * (range 1 (inc %1)))", "problem": 42, "user": "536ecd9fe4b0fc7073fd6e76"}, {"code": "(fn [n]\n  (loop [n n\n         f 1]\n    (if (= n 1)\n      f\n      (recur (dec n) (* f n)))))", "problem": 42, "user": "4fe9ea87e4b0547ebccb2476"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "536e0930e4b0fc7073fd6e66"}, {"code": "(fn [x] (loop [n x accum 1] (if (> n 1) (recur (dec n) (* n accum)) accum)))", "problem": 42, "user": "53403110e4b085b17e897da6"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "53716539e4b0fc7073fd6eb1"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5370ef22e4b0fc7073fd6ea0"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "5228b015e4b0186687e23a8a"}, {"code": "(fn [x] (reduce * (take x (iterate inc 1))))", "problem": 42, "user": "536f2faee4b0fc7073fd6e79"}, {"code": "#(loop [n 1 rv 1]\n   (if (<= n %)\n     (recur (inc n) (* n rv))\n     rv))", "problem": 42, "user": "534f13b2e4b084c2834f4ac4"}, {"code": "#(reduce * (range 1 (+ 1 %)))", "problem": 42, "user": "536bc59fe4b0243289761ec3"}, {"code": "(fn [n] (reduce * (rest (range (inc n)))))", "problem": 42, "user": "536c7470e4b0fc7073fd6e3e"}, {"code": "(fn jfactorial\n  [num]\n  (loop [tots 1 cur num]\n    (if (> cur 0)\n      (recur (* tots cur) (- cur 1))\n      tots)))", "problem": 42, "user": "534ff8a6e4b084c2834f4ad1"}, {"code": "(fn factorial [n]\n   (apply * (range 1 (+ 1 n))))\n;multiplies all the numbers within a range of 1 to (n + 1) because the maximum is exclusive", "problem": 42, "user": "53713ebee4b0fc7073fd6ead"}, {"code": "(fn fact [val] (if (> 1 val) 1 (* val (fact (dec val)))))", "problem": 42, "user": "534d5ab7e4b084c2834f4a9c"}, {"code": "#(reduce * 1 (range 1 (inc %)))", "problem": 42, "user": "536f62aee4b0fc7073fd6e7c"}, {"code": "(fn [x]\n  (reduce * (range 1 (inc x))))", "problem": 42, "user": "536eb396e4b0fc7073fd6e74"}, {"code": "(fn fact [x]\n  \t(if (< x 1) 1 \n      (* x (fact (- x 1)))))", "problem": 42, "user": "532c9dc9e4b019098a6f8b30"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "53736ffce4b06d7f452d9e11"}, {"code": "#(apply * (map (partial + 1) (range %)))", "problem": 42, "user": "4ec53f8c535d6d7199dd368b"}, {"code": "(fn [seed] (reduce * (range 1 (inc seed))))", "problem": 42, "user": "536a37efe4b0243289761eaa"}, {"code": "(fn [x] (reduce * (range 1 (inc x))))", "problem": 42, "user": "535943b3e4b04ce2eb3ed295"}, {"code": "#(reduce * (range 1 (+ 1 %)))", "problem": 42, "user": "534c1c64e4b084c2834f4a8a"}, {"code": "(fn fac [n] (if (= 1 n) 1 (* n (fac (dec n)))))", "problem": 42, "user": "536b9d8ae4b0243289761ebe"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "535056a7e4b084c2834f4adb"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "53720c5ce4b0493c815db704"}, {"code": "#(apply * (range 1(inc %)))", "problem": 42, "user": "53578543e4b04ce2eb3ed280"}, {"code": "#(reduce * (take-while (partial >= %) (iterate inc 1)))", "problem": 42, "user": "53712c03e4b0fc7073fd6ea9"}, {"code": "(fn fact [i]\n   (if (> i 0)\n     (* i (fact (- i 1))) 1))", "problem": 42, "user": "535e518ee4b04ce2eb3ed2cf"}, {"code": "(fn [n] (letfn [(t\n                    ([n] (t n 1))\n                    ([n result] (if (<= n 1) result (recur (dec n) (* n result)))))]\n            (t n)))", "problem": 42, "user": "500e7063e4b04a05d36fcc07"}, {"code": "(fn [x]\n  (reduce * (range 1 (inc x))))", "problem": 42, "user": "5317d78ee4b08068f379ed63"}, {"code": ";; Works as expected for natural numbers.\n;; Rounds n down if it's not an integer.\n;; Incorrectly returns 1 for negative inputs.\n(fn factorial [n]\n   (apply * (range 1 (inc n))))\n\n;; Can't handle non-natural numbers.\n;;(fn factorial [n]\n;;  (if (or (= n 0)\n;;          (= n 1))\n;;      1\n;;      (* n (factorial (dec n)))))", "problem": 42, "user": "53713ed9e4b0fc7073fd6eaf"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5356d00ee4b04ce2eb3ed26f"}, {"code": "(fn factorial [n]\n  (reduce * 1 (range 1 (+ n 1))))", "problem": 42, "user": "53695439e4b0243289761e9a"}, {"code": "(fn [n] (apply * (range 1 (inc n))))", "problem": 42, "user": "536673a8e4b0243289761e76"}, {"code": "#(apply #'* (range 1 (inc %)))", "problem": 42, "user": "4e8849c5535d8b9bb0147ca4"}, {"code": "(fn fact [x]\n  ( if ( = x 1 )\n  \t1\n  \t(* x ( fact ( - x 1 ) ) ) )\n  )", "problem": 42, "user": "5372c830e4b06d7f452d9dff"}, {"code": "#(apply * % (range 1 %))", "problem": 42, "user": "52ae886de4b0c58976d9acab"}, {"code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "problem": 42, "user": "53779a26e4b06839e8705e38"}, {"code": "(fn [n]\r\n  (last (last (take n (iterate (fn [[m acc]] [(dec m) (* acc m)]) [n 1])))))", "problem": 42, "user": "5376966ae4b06839e8705e27"}, {"code": "(fn fac [x]\n  (if (zero? x)\n  1\n  (* x (fac (- x 1)))))", "problem": 42, "user": "5371167fe4b0fc7073fd6ea7"}, {"code": "#(reduce * (range % 0 -1))", "problem": 42, "user": "536b2048e4b0243289761eb7"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "53730973e4b06d7f452d9e05"}, {"code": "(fn [n]\n  (reduce #(* %1 %2) (range 1 (inc n))))", "problem": 42, "user": "5370f8ede4b0fc7073fd6ea2"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5370b386e4b0fc7073fd6e9b"}, {"code": "#(reduce (fn [x y] (* x y)) 1 (range 1 (inc %)))", "problem": 42, "user": "5339edfbe4b0e30313ee6cb3"}, {"code": "(fn [n]\n(reduce * (rest (range (+ n 1)))))", "problem": 42, "user": "4f7cbf4ae4b06e829148e1b7"}, {"code": "(fn f [n]\n  (if (< n 2) 1\n    (* (f (dec n)) n)))", "problem": 42, "user": "4f92de49e4b0dcca54ed6cb2"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "536d260be4b0fc7073fd6e55"}, {"code": "#(apply * (range % 0 -1))", "problem": 42, "user": "53572767e4b04ce2eb3ed277"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5379306fe4b06839e8705e50"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "53791ab7e4b06839e8705e4d"}, {"code": "#(reduce * (map inc (range %)))", "problem": 42, "user": "4f849f76e4b033992c121c36"}, {"code": "#(loop [factor % answer 1]\n      (if (= factor 1) answer\n        (recur (dec factor) (* answer factor))))", "problem": 42, "user": "537bde5de4b06839e8705e73"}, {"code": "#(reduce * (conj (range 1 %) %))", "problem": 42, "user": "52fe869be4b047fd5583703f"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "50c4ff23e4b0210b849018b8"}, {"code": "(fn [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "53767991e4b06839e8705e25"}, {"code": "(fn fact\n  [n]\n  (if (<= n 1)\n       1\n      (* n (fact (dec n)))))", "problem": 42, "user": "53736f65e4b06d7f452d9e0f"}, {"code": "(fn F [X] \n  (if (< X 2) 1 \n    (* X (F (- X 1)))\n    ))", "problem": 42, "user": "536c77f1e4b0fc7073fd6e3f"}, {"code": "#(loop [v 1\n        n %]\n   (if (zero? n) v\n     (recur (* v n) (dec n))))", "problem": 42, "user": "537e745ae4b06839e8705ea6"}, {"code": "(fn[x] (reduce * (range 1 (inc x))))", "problem": 42, "user": "525cc912e4b0cb4875a45d48"}, {"code": "(fn [n] (loop [ n n acc 1 ]\n          (if (<= n 1) acc\n            (recur (dec n) (* n acc)))))", "problem": 42, "user": "53800d99e4b06839e8705ebd"}, {"code": "#(apply * (take % (iterate inc 1)))", "problem": 42, "user": "53733312e4b06d7f452d9e0a"}, {"code": "(fn fac [x]\n  (if (= x 0) 1 (* x (fac (dec x)))))", "problem": 42, "user": "53778b90e4b06839e8705e36"}, {"code": "(fn factor [n]\n  (reduce * (range 1 (inc n))))", "problem": 42, "user": "52b71bd2e4b0c58976d9ad4d"}, {"code": "(fn [x]\n  (reduce * (range 1 (inc x))))", "problem": 42, "user": "537f6df1e4b06839e8705eb5"}, {"code": "(fn [x] (reduce * (#(range 1 (inc %))x)))", "problem": 42, "user": "537e4259e4b06839e8705e9e"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "537f4652e4b06839e8705eb1"}, {"code": "#(loop [res 1 n 1] (if (> n %) res (recur (* res n) (inc n))))", "problem": 42, "user": "53820087e4b06839e8705ecf"}, {"code": "#(reduce * (range % 0 -1))", "problem": 42, "user": "519e70d5e4b0acf32bc6a42c"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "53834ed3e4b06839e8705edb"}, {"code": "#(reduce * 1 (range 1 (inc %)))", "problem": 42, "user": "508147cde4b0a20aab17b93a"}, {"code": "(fn [c] (reduce * (range 2 (inc c))))", "problem": 42, "user": "53806e5be4b06839e8705ec1"}, {"code": "(fn [n] (reduce * (take (inc n) (cons 1 (drop 1 (range))))))", "problem": 42, "user": "52e55e16e4b09f7907dd1460"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "537f9e34e4b06839e8705ebb"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "538557aee4b06839e8705f02"}, {"code": "#(reduce * (range % 0 -1))", "problem": 42, "user": "538538b2e4b06839e8705efe"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "534e1f56e4b084c2834f4aae"}, {"code": "#(reduce * (rest (range (inc %))))", "problem": 42, "user": "52eaba10e4b09f7907dd14c2"}, {"code": "(fn [xo]\n  (let [f\n    (fn [xi accum]\n      (loop [x xi a accum]\n        (if (= x 1)\n          a\n          (recur (dec x) (* a x)))))]\n    (f xo 1)))", "problem": 42, "user": "4e6a48da535d8ccf87e9febe"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "52b43708e4b0c58976d9ad1d"}, {"code": "(fn [x] (apply * (take x (iterate inc 1))))", "problem": 42, "user": "53858594e4b06839e8705f05"}, {"code": "#(apply * (range 1 (+ 1 %1)))", "problem": 42, "user": "511688d5e4b0b3e208dba05a"}, {"code": "#(reduce * (range 2 (inc %)))", "problem": 42, "user": "537943c0e4b06839e8705e52"}, {"code": "(fn [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "53864493e4b06839e8705f10"}, {"code": "#(reduce * (range 1 (inc %) ))", "problem": 42, "user": "5360f043e4b0243289761e3c"}, {"code": "(fn fact [n] (cond (> n 0) (* n (fact (- n 1))) :else 1))", "problem": 42, "user": "537bca8be4b06839e8705e71"}, {"code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "problem": 42, "user": "53889587e4b0640c7a9a589e"}, {"code": "(fn [arg]\n  (reduce * (range 1 (inc arg))))", "problem": 42, "user": "537881a4e4b06839e8705e46"}, {"code": "(fn [n] \n         (loop [ctn n acc 1]\n               (if (= 1 ctn)\n                 acc\n                 (recur (dec ctn) (* acc ctn))\n               ))\n         \n  )", "problem": 42, "user": "53852e84e4b06839e8705efd"}, {"code": "(fn fib [n]\n  (cond\n   (= n 1) 1\n   (= n 2) 2\n   :else (* n (fib (dec n)))))", "problem": 42, "user": "5374adc3e4b06d7f452d9e27"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "53838742e4b06839e8705ee0"}, {"code": "(fn fac [num]\n  (reduce * 1 (range 1 (inc num))))", "problem": 42, "user": "536f871de4b0fc7073fd6e7f"}, {"code": "#(apply * (map inc (range %)))", "problem": 42, "user": "5364ab34e4b0243289761e64"}, {"code": "#(loop [n % f 1] (if (= n 1) f (recur (dec n) (* n f))))", "problem": 42, "user": "534eecaee4b084c2834f4abf"}, {"code": "(fn factorial [n]\n  (if (= n 0)\n    1\n    (* n (factorial (dec n)))))", "problem": 42, "user": "5379ed48e4b06839e8705e5a"}, {"code": "(fn f [n]\n  (if (<= n 1)\n    1\n    (* n (f (dec n)))))", "problem": 42, "user": "538be6afe4b0640c7a9a58c9"}, {"code": "(fn [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "538b1644e4b0640c7a9a58c0"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4f7426fde4b044e54cd9a8f5"}, {"code": "(fn [x] (reduce * (range 1 (+ 1 x))))", "problem": 42, "user": "5372eaf2e4b06d7f452d9e03"}, {"code": "(fn [n]\n  (loop [n n result 1]\n    (if (zero? n) result\n      (recur (dec n) (* n result)))))", "problem": 42, "user": "51a4416ae4b0def3c5c5868c"}, {"code": "(fn [x]\n  (loop [result 1\n         x x]\n    (if (= 1 x)\n      result\n      (recur (* result x) (dec x)))))", "problem": 42, "user": "538d464ee4b0b51d73faae69"}, {"code": "(fn fac [x] (if (= x 0) 1 (* x (fac (dec x)))))", "problem": 42, "user": "53410c24e4b00652c8746eca"}, {"code": "[0 1 0 6 0 120 0 0 40320]", "problem": 42, "user": "538d8bb8e4b0b51d73faae71"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "537d6d44e4b06839e8705e8c"}, {"code": "(fn [n]\n  (reduce * (take n (iterate inc 1))))", "problem": 42, "user": "53863845e4b06839e8705f0f"}, {"code": "(fn [n] (reduce * (range 1 (+ n 1))))", "problem": 42, "user": "538e29d1e4b0b51d73faae80"}, {"code": "#(loop [n % r 1] (if (< n 2) r (recur (- n 1) (* r n))))", "problem": 42, "user": "538d7e2ee4b0b51d73faae70"}, {"code": "#(if (<= % 1) % (apply * (map inc (range %))))", "problem": 42, "user": "53874820e4b06839e8705f1b"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "4fe8a1f8e4b07c9f6fd12c5f"}, {"code": "(fn [n]\n  (loop [x n result 1]\n    (if (<= x 1)\n      result\n      (recur (dec x) (* result x)))))", "problem": 42, "user": "538c3424e4b0b51d73faae58"}, {"code": "(fn [x] \n     (loop [y x acc 1]\n       (if (= y 1) \n         acc\n         (recur (- y 1) (* acc y)))))", "problem": 42, "user": "4f03645f535dcb61093f6a9d"}, {"code": "#(apply * (take % (iterate inc 1)))", "problem": 42, "user": "538de891e4b0b51d73faae78"}, {"code": "(fn fact [n]\n  (if (<= n 1)\n    1\n    (* n (fact (- n 1)))))", "problem": 42, "user": "5390952be4b0b51d73faae9c"}, {"code": "(fn [n] ((fn [a n] (if (<= n 1) a (recur (* a n) (dec n)))) 1 n))", "problem": 42, "user": "530bf87ee4b02e82168697d5"}, {"code": "(fn factorial [x]\n  (apply * (take x (iterate dec x))))", "problem": 42, "user": "5383668ee4b06839e8705edd"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "5393a2e1e4b0b51d73faaebf"}, {"code": "(fn [n] (reduce * (range 1 (+ 1 n))))", "problem": 42, "user": "53710c09e4b0fc7073fd6ea5"}, {"code": "(fn fact [n]\n  (if (= n 0)\n    1\n    (* n (fact (dec n)))))", "problem": 42, "user": "5393653be4b0b51d73faaebc"}, {"code": "(fn [x]\n  (loop [a x\n         res 1]\n    (if (= 1 a) res\n      (recur (dec a) (* a res)))))", "problem": 42, "user": "52ee46e5e4b05e3f0be25ec5"}, {"code": "(fn f42 [x]\n  (apply * (take x (iterate dec x))))", "problem": 42, "user": "535aee3be4b04ce2eb3ed2aa"}, {"code": "(fn [n] \n    (apply * (range 1 (+ n 1)))\n  )", "problem": 42, "user": "5394265ee4b0b51d73faaec6"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5392b849e4b0b51d73faaeb1"}, {"code": "(fn f [x] (cond (= x 1) 1 :else (* x (f (- x 1)))))", "problem": 42, "user": "5394c22ae4b0b51d73faaed0"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5394aa77e4b0b51d73faaecd"}, {"code": "#(reduce * (range % 0 -1))", "problem": 42, "user": "539378fbe4b0b51d73faaebd"}, {"code": "#(reduce * 1 (range 1 (+ 1 %)))", "problem": 42, "user": "53886d2fe4b0640c7a9a589d"}, {"code": "(fn f [n]\n  (reduce * (take n (iterate inc 1))))", "problem": 42, "user": "538c9144e4b0b51d73faae5d"}, {"code": "#(apply * (range 1 (+ % 1)))", "problem": 42, "user": "528410bbe4b0239c8a67adc2"}, {"code": "#(reduce * (range % 0 -1))", "problem": 42, "user": "52a3a7ebe4b04e0c58e87c02"}, {"code": "(fn fact [n] (if (= 1 n) 1 (* (fact (dec n)) n)))", "problem": 42, "user": "53940789e4b0b51d73faaec3"}, {"code": "(fn ! [x] (if (= 1 x) 1 (* x (! (dec x) ))))", "problem": 42, "user": "4f47d84fe4b0d56e7bb92bc3"}, {"code": "(fn [n] (loop [f n acc 1]\n             (if (= f 1)\n              (* f acc)\n              (recur (dec f) (* acc f))\n             )))", "problem": 42, "user": "5368fedee4b0243289761e93"}, {"code": "#(apply * (range 1 (inc %)))", "problem": 42, "user": "53973e7be4b0b51d73faaee6"}, {"code": "#(loop [n % f 1]\n   (if (= n 1)\n     f\n     (recur (dec n) (* f n))))", "problem": 42, "user": "539755d9e4b0b51d73faaee8"}, {"code": "(fn fac [no]  \n  (if (= 1 no) 1\n      (* no (fac (dec no)))))", "problem": 42, "user": "510ec1bce4b07438aa321461"}, {"code": "(fn\n  [n]\n  (loop [cnt n acc 1]\n    (if (zero? cnt)\n      acc\n      (recur (dec cnt) (* acc cnt)))))", "problem": 42, "user": "523d06aae4b0dbf0c301728b"}, {"code": "#(apply * (range 1 (+ 1%)))", "problem": 42, "user": "53979a87e4b0b51d73faaef0"}, {"code": "(fn fac [n]\n                    (loop [cnt n\n                           acc 1]\n                      (if (zero? cnt)\n                        acc \n                        (recur (dec cnt) (* acc cnt)))))", "problem": 42, "user": "537e104ce4b06839e8705e9a"}, {"code": "#(reduce * (map inc (range %)))", "problem": 42, "user": "53976599e4b0b51d73faaeea"}, {"code": "(fn r[n] \n  (if (= 1 n)\n  \t1\n  \t(* n (r (- n 1)))))", "problem": 42, "user": "52a0237de4b04e0c58e87bbe"}, {"code": "(fn   [n]\n  (loop [i 1, acc 1]\n    (cond (> i n) acc\n          :else (recur (inc i) (* acc i)))))", "problem": 42, "user": "538e36c7e4b0b51d73faae81"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "538a8d28e4b0640c7a9a58ba"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "539a2901e4b0b51d73faaf0f"}, {"code": "(fn fac [n] \n   (if \n     (= n 0) \n     1 \n     (* n (fac (dec n)))))", "problem": 42, "user": "538c6db7e4b0b51d73faae5a"}, {"code": "(fn fact [n]\n  (if (= n 1)\n    1\n    (* n (fact (dec n)))))", "problem": 42, "user": "539ad6b7e4b0b51d73faaf18"}, {"code": "#(reduce * (map inc (range %)))", "problem": 42, "user": "53908e6be4b0b51d73faae9a"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5398305fe4b0b51d73faaef6"}, {"code": "(fn [n] (reduce * (range 1 (+ n 1))))", "problem": 42, "user": "539b5fcee4b0b51d73faaf1e"}, {"code": "(fn fact [x]\n    (loop [n x f 1]\n        (if (= n 1)\n            f\n            (recur (dec n) (* f n)))))", "problem": 42, "user": "539cacbde4b0b51d73faaf2f"}, {"code": "(fn [x]\n   (reduce #(* % %2) 1 (range 1 (inc x))))", "problem": 42, "user": "538fe131e4b0b51d73faae91"}, {"code": "(fn [n] (apply * (take n (iterate inc 1))))", "problem": 42, "user": "5189a51ae4b0288ada3dbdad"}, {"code": "(fn [n] (apply * (range 1 (inc n))))", "problem": 42, "user": "50b63c5ee4b0a86f8358ca69"}, {"code": "(fn [num]\n  (loop [cur num\n         res 1]\n    (if(= 1 cur)\n      res\n      (recur (dec cur)(* res cur))\n     )))", "problem": 42, "user": "53862316e4b06839e8705f0e"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "539ddf25e4b0b51d73faaf3e"}, {"code": "#(reduce * (range 1 (inc %1)))", "problem": 42, "user": "536c1531e4b0fc7073fd6e36"}, {"code": "#(reduce * (map inc (range %)))", "problem": 42, "user": "5327c591e4b09d4e7a9b54ff"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "539ec9f9e4b0ca733b974491"}, {"code": "#(loop [n % r 1]\n   (if (= n 1) r\n       (recur (- n 1) (* r n))))", "problem": 42, "user": "536e5055e4b0fc7073fd6e6b"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "5325cef5e4b09d4e7a9b54e7"}, {"code": "#(reduce * (take % (iterate dec %)))", "problem": 42, "user": "50dfc83fe4b061dbdced7229"}, {"code": "(fn [n](\n        apply * (range 1 (inc n))))", "problem": 42, "user": "53a065c2e4b0ca733b9744ad"}, {"code": "(fn [n] (reduce * (range 1 (inc n))))", "problem": 42, "user": "53a1b5c8e4b0ca733b9744c1"}, {"code": "(fn factorial [n]\n  (loop [i n, acc 1]\n    (if (<= i 1)\n      acc\n      (recur (dec i) (* i acc)))))", "problem": 42, "user": "53a074a4e4b0ca733b9744af"}, {"code": "(fn [n] ( #( if (= 0 %1) %2 (recur (- %1 1) (* %1 %2))) n 1))", "problem": 42, "user": "539c9e26e4b0b51d73faaf2e"}, {"code": "(fn [n]\n  (if (== n 0) 1 (reduce * (range 1 (+ n 1)))))", "problem": 42, "user": "538e864ee4b0b51d73faae87"}, {"code": "(fn [num]\n  (reduce * (range 1 (+ num 1))))", "problem": 42, "user": "5391bc62e4b0b51d73faaea7"}, {"code": "#(reduce * (range 1 (inc %1)))", "problem": 42, "user": "52e657e4e4b09f7907dd1472"}, {"code": "#(reduce * (take %1 (iterate dec %1)))", "problem": 42, "user": "53a068cbe4b0ca733b9744ae"}, {"code": "#(reduce * 1 (range 1 (+ 1 %)))", "problem": 42, "user": "52fac708e4b047fd55836fff"}, {"code": "(fn [n] (reduce * (range 1 (+ 1 n))))", "problem": 42, "user": "5374ad7de4b06d7f452d9e26"}, {"code": "(fn [x]\n  (reduce #(* %1 %2) (range 1 (+ x 1)))\n)", "problem": 42, "user": "53a36fd7e4b0f1fc74538834"}, {"code": "#(reduce * (range 1 (inc %)))", "problem": 42, "user": "53a0ce51e4b0ca733b9744b6"}, {"code": "#(loop [cnt % acc 1]\n       (if (zero? cnt)\n            acc\n          (recur (dec cnt) (* acc cnt))\n))", "problem": 42, "user": "53a26cede4b0f1fc7453882a"}, {"code": "(fn [n] (reduce * 1  (range 1 (inc n))))", "problem": 42, "user": "52d24f60e4b099d49816f0a8"}, {"problem": 42, "code": "(fn my-fact [n] (if (= n 1) 1 (* n (my-fact (- n 1)))))", "user": "539b4268e4b0b51d73faaf1c"}, {"problem": 42, "code": "(fn [n] (reduce * (range n 0 -1)))", "user": "53a5bc3ae4b0ef122a8689c3"}, {"problem": 42, "code": "(fn fact [x] (if (= x 1) 1 (* x (fact (dec x)))))", "user": "53a739b0e4b0ef122a8689d0"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "4f041de1535dcb61093f6ba5"}, {"problem": 42, "code": "#(apply * (range 1 (+ 1 %)))", "user": "53a5c7ffe4b0ef122a8689c4"}, {"problem": 42, "code": "(fn\n  [x]\n  (reduce * (into [] (range 1 (+ 1 x)))))", "user": "53a8d9efe4b047364c04442d"}, {"problem": 42, "code": "(fn factorial ([n] (factorial n 1))\n              ([n prod]\n               (if (= n 0)\n                 prod\n                 (recur (dec n) (* prod n)))))", "user": "52d885afe4b09f7907dd1398"}, {"problem": 42, "code": "#(loop [x %\n        ret 1]\n   (if (< 1 x)\n     (recur (dec x) (* ret x))\n     ret))", "user": "539f4e9ee4b0ca733b974498"}, {"problem": 42, "code": "(fn [x]\n  (reduce * (map inc (range x))))", "user": "53a19dece4b0ca733b9744c0"}, {"problem": 42, "code": "#(reduce * (range % 1 -1))", "user": "53aa1528e4b047364c04443f"}, {"problem": 42, "code": "(fn [a] (apply * (range 1 (inc a))))", "user": "5396c94be4b0b51d73faaee3"}, {"problem": 42, "code": "(fn fact [n] \n  (if (< n 2) \n     1\n     (* n (fact (dec n)))\n  )   \n)", "user": "50d3317ee4b049d4ed5650da"}, {"problem": 42, "code": "#(if (= %2 1) % (recur (* %2 %) (dec %2))) 1", "user": "539c9d7ee4b0b51d73faaf2d"}, {"problem": 42, "code": "(fn [x]\n  (loop [acc 1\n         x x]\n    (if (zero? x)\n      acc\n      (recur (* acc x) (dec x)))))", "user": "51c116d4e4b0c9c822882942"}, {"problem": 42, "code": "(fn my-factorial\n  [num]\n  (if (= num 1)\n    1\n    (* num (my-factorial (dec num)))))", "user": "53ac4719e4b047364c04445c"}, {"problem": 42, "code": "(fn fac [x] (if (= x 1) 1 (* x (fac (dec x)))))", "user": "53aaaf7ae4b047364c044444"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "53a7e3b9e4b047364c044423"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "526e5159e4b03e8d9a4a7316"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %1)))", "user": "53a94b63e4b047364c044434"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %1)))", "user": "539f3397e4b0ca733b974496"}, {"problem": 42, "code": "(fn [fact]                                                                                                                                                    \n  (loop [n 1                                                                                                                                                  \n         sum 1]                                                                                                                                               \n    (print (str \" \" sum))                                                                                                                                     \n    (if (> n fact) sum                                                                                                                                        \n    (recur (inc n)(* sum n)))))", "user": "52a3c66ce4b04e0c58e87c04"}, {"problem": 42, "code": "#(reduce * (range % 0 -1))", "user": "532f8569e4b019098a6f8b4f"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "52f0ea04e4b05e3f0be25ee6"}, {"problem": 42, "code": "#(reduce * ((fn[n] (range 1 (inc n))) %))", "user": "5376f0d0e4b06839e8705e2c"}, {"problem": 42, "code": "#(reduce * (range 2 (inc %)))", "user": "538f4c1de4b0b51d73faae8c"}, {"problem": 42, "code": "(fn f [x] \n  (if (= 1 x)\n    1\n    (* x (f (- x 1)))))", "user": "53abf519e4b047364c044456"}, {"problem": 42, "code": "(fn [x] (apply * (take x (iterate dec x))))", "user": "53a0ab8ce4b0ca733b9744b3"}, {"problem": 42, "code": "(fn [num]\n  (apply * (take num (iterate dec num))))", "user": "53ae16e2e4b047364c044472"}, {"problem": 42, "code": "(fn [x]\n  (reduce * (range 1 (inc x))))", "user": "53a7771ee4b047364c04441b"}, {"problem": 42, "code": "(fn factorial [x] (if (= x 1) 1 (* x (factorial (dec x)))))", "user": "53b12c76e4b047364c04448a"}, {"problem": 42, "code": "(fn factorial [n]\n  (reduce * (range 1 (+ 1 n)))\n)", "user": "53ac1992e4b047364c04445a"}, {"problem": 42, "code": "(fn [v]\n  (reduce * (range 1 (inc v))))", "user": "53ae0c50e4b047364c044471"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "53b15e6ee4b047364c04448f"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "51a4d802e4b0def3c5c5869a"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "53b182a5e4b047364c044491"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "53acaf1fe4b047364c04445f"}, {"problem": 42, "code": "#(loop [n %1\n        acc 1]\n   (if (= n 1) \n     acc\n     (recur (- n 1) (* acc n))\n     )\n   )", "user": "5245e320e4b09dbe66b56177"}, {"problem": 42, "code": "(fn [n] (reduce * (range n 1 -1)))", "user": "53acca34e4b047364c044460"}, {"problem": 42, "code": "#(reduce * (map inc (range %)))", "user": "53a2be95e4b0f1fc7453882d"}, {"problem": 42, "code": ";while iterator's ordinal's not reached input, multiply the last iteration by the ordinal\n\n#(loop [ordinal 1\n       result 1]\n  (if (> ordinal %)\n    result\n    (recur (inc ordinal) (* result ordinal))\n  )\n   )", "user": "53ad28ede4b047364c044462"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5329b493e4b09d4e7a9b5515"}, {"problem": 42, "code": "#(loop [n % r 1]\n   (if (= 0 n)\n     r\n     (recur (dec n) (* n r))))", "user": "52d07cc5e4b07d0d72b273bb"}, {"problem": 42, "code": "(fn [n] (loop[b n m 1] (if (= b 1) m (recur (dec b) (* m b)) )) )", "user": "53b3ea79e4b047364c0444ab"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "53b2a7f8e4b047364c04449c"}, {"problem": 42, "code": "(fn fac [n] (reduce * (range 1 (inc n))))", "user": "53b39d82e4b047364c0444a6"}, {"problem": 42, "code": "(fn fact\n    [n]\n    (if (= n 0)\n      1\n      (* n (fact (dec n)))))", "user": "4f867b25e4b033992c121c51"}, {"problem": 42, "code": "#(reduce * (range % 0 -1))", "user": "5382704be4b06839e8705ed4"}, {"problem": 42, "code": "(fn [x]\n\"Find the factorial\"\n(reduce * (range 1 (inc x))))", "user": "5391ab43e4b0b51d73faaea6"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "53b71b94e4b047364c0444cd"}, {"problem": 42, "code": "#(apply * (range 2 (inc %)))", "user": "539fa040e4b0ca733b97449f"}, {"problem": 42, "code": "(fn factorial [n]\n  (if (= 1 n)\n    1\n    (* n (factorial (dec n)))))", "user": "539c88e1e4b0b51d73faaf2c"}, {"problem": 42, "code": "(fn [n]\n  (loop [n n\n         acc 1]\n    (if (zero? n)\n      acc\n      (recur (dec n) (* n acc)))))", "user": "53ab94cae4b047364c044450"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "53b4bddae4b047364c0444b9"}, {"problem": 42, "code": "(fn fact ([x] (reduce * (range 1 (inc x)))))", "user": "534aa5d3e4b084c2834f4a6b"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "53b7c21ae4b047364c0444d4"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "4eab6c0a535d7eef30807317"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "53bb512ce4b047364c044503"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "53aeb3ebe4b047364c044477"}, {"problem": 42, "code": "(fn my-fac [x]\n  (if (= x 1) 1\n    (* x (my-fac (dec x)))))", "user": "53bc279ae4b047364c04450e"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "4ecaa5da535d6d7199dd3707"}, {"problem": 42, "code": "(fn fac [n]\n  (if (= n 0)\n    1\n    (* n (fac (dec n)))\n    ))", "user": "53bd6fcfe4b0d9a98559a6d0"}, {"problem": 42, "code": "(fn [x] (reduce (fn [acc y] (* acc y)) 1 (map (partial + 1) (range x))))", "user": "53bd6ad0e4b0d9a98559a6cf"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5310e968e4b08068f379ecdd"}, {"problem": 42, "code": "(fn [x] (apply * (rest (range (inc x)))))", "user": "52cf1e25e4b07d0d72b2739c"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "53be3ee7e4b0d9a98559a6df"}, {"problem": 42, "code": "(fn my-fac [n]\n  (reduce * (range 1 (inc n))))", "user": "53bf0913e4b0c98a41f5cc99"}, {"problem": 42, "code": "(fn factor[x] (if (= x 1) 1 (* (factor (dec x)) x)))", "user": "53b890e1e4b047364c0444df"}, {"problem": 42, "code": "(fn fact [n] (if (= n 0)\n               1\n               (* n (fact (- n 1)))))", "user": "53c051a5e4b0c98a41f5ccae"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "53beacf9e4b0d9a98559a6e3"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "53aef31ce4b047364c04447b"}, {"problem": 42, "code": "(fn [n]\n    (loop [cnt n acc 1]\n      (if (zero? cnt)\n        acc\n        (recur (dec cnt) (* acc cnt)))))", "user": "53a94512e4b047364c044433"}, {"problem": 42, "code": "(fn [x]\n    (loop [n x f 1]\n        (if (= n 1)\n            f\n            (recur (dec n) (* f n)))))", "user": "53a899e0e4b047364c04442b"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "52b434c9e4b0c58976d9ad1c"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (+ x 1))))", "user": "53c126fce4b00fb29b22125b"}, {"problem": 42, "code": "(fn [n]\n  (loop [i 1 p 1]\n    (if (> i n)\n      p\n      (recur (inc i) (* p i)))))", "user": "53bab6fae4b047364c0444fb"}, {"problem": 42, "code": "(fn fact [n]\n  (if (= n 1)\n    1\n    (* n (fact (dec n)))\n    ))", "user": "53c1ce3ee4b00fb29b221268"}, {"problem": 42, "code": "(fn FactorialFun [n]\n  (apply * (range 1 (+ 1 n))))", "user": "53b88e6ee4b047364c0444de"}, {"problem": 42, "code": "(fn [n]\n  (let [nn (range 1 (inc n))]\n    (reduce #(* %1 %2) 1 nn)))", "user": "53b22df6e4b047364c044497"}, {"problem": 42, "code": "#(reduce * (range % 0 -1))", "user": "53bd8d27e4b0d9a98559a6d6"}, {"problem": 42, "code": "(fn [x] (loop [x x y 1]\n          (if (= x 1)\n          \ty\n          (recur (dec x) (* y x)))\n         ))", "user": "5367bc60e4b0243289761e81"}, {"problem": 42, "code": "(fn fact [n]\n    (reduce (fn [m n]\n                (* m n)) 1 (range 1 (+ n 1))))", "user": "53b4344de4b047364c0444b4"}, {"problem": 42, "code": "#(->> (iterate inc 1)\n      (take %)\n      (reduce *))", "user": "53c38b8ce4b00fb29b22127b"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (inc x))))", "user": "5312807fe4b08068f379ecfc"}, {"problem": 42, "code": "(fn factorial [n]\n  (apply * (range 1 (inc n))))", "user": "5018878ce4b029375d2a5056"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "53c51dc5e4b00fb29b221288"}, {"problem": 42, "code": "(fn factorial [n]\n  (loop [n n\n          acc 1]\n    (if (= 0 n)\n      acc\n      (recur (dec n)(* n acc)))))", "user": "51fa63b3e4b0f1313d4689d5"}, {"problem": 42, "code": "(fn fac[n]\n  (if (= n 1)\n     1\n     (* n (fac (- n 1)))))", "user": "52ff6ea0e4b0d8b024fd3707"}, {"problem": 42, "code": "(fn [n] (reduce * (take n (iterate dec n))))", "user": "53b952eee4b047364c0444e6"}, {"problem": 42, "code": "(fn [n]\n    (reduce * (rest (range (inc n)))))", "user": "53c3397be4b00fb29b221279"}, {"problem": 42, "code": "(fn fact [x] (if (<= x 1) 1 (* x (fact (- x 1)))))", "user": "53342a1ce4b019098a6f8b8b"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "53ad2bbbe4b047364c044464"}, {"problem": 42, "code": "(fn f [x]\n  (if (= x 1)\n    1\n    (* x (f (- x 1)))))", "user": "53c74cfce4b00fb29b2212a7"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %1)))", "user": "538db083e4b0b51d73faae74"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "53c649d3e4b00fb29b221297"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "53c349f5e4b00fb29b22127a"}, {"problem": 42, "code": "(fn my-factorial \n  [n]\n   (cond\n    (= n 0) 1\n    (= n 1) 1\n    :else (if (< 1 n) (* n (my-factorial (dec n))))))", "user": "53b85932e4b047364c0444db"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "53cb321fe4b00fb29b2212d1"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "53ce1daee4b00fb29b2212ec"}, {"problem": 42, "code": "(fn [n]\n    (loop [n n \n          acc 1]\n      (if (= 1 n) acc\n        (recur (dec n) (* n acc)))))", "user": "53cbe808e4b00fb29b2212d4"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (inc x))))", "user": "53cdb2c4e4b00fb29b2212e5"}, {"problem": 42, "code": "(fn fact [x] (if (= x 0) 1 (* x (fact (dec x)))))", "user": "53cd4920e4b00fb29b2212de"}, {"problem": 42, "code": "(fn factorial [x] (if ( > x 1) (* x (factorial (- x 1))) 1))", "user": "4f05c087535dcb61093f6c00"}, {"problem": 42, "code": "(fn facr [n] (reduce * (range 1 (inc n))))", "user": "53ced9fee4b00fb29b2212f8"}, {"problem": 42, "code": "#(loop [cnt % acc 1]\n     (if (zero? cnt) \n       acc\n       (recur (dec cnt) (* cnt acc))\n       ))", "user": "534fa9dae4b084c2834f4acf"}, {"problem": 42, "code": "(fn [n]\n  (loop [n n\n         r 1]\n    (if (> n 1)\n      (recur (dec n) (* n r))\n      r)))", "user": "51b8d3d5e4b050a1176cd69d"}, {"problem": 42, "code": "(fn F1[x] (if (= x 1) 1 (* (F1 (dec x )) x)))", "user": "53ca23e3e4b00fb29b2212c6"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "53c0bc5fe4b00fb29b221257"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "53ca41dae4b00fb29b2212c8"}, {"problem": 42, "code": "(fn[x] (apply * (take x (iterate dec x))))", "user": "534db51be4b084c2834f4aa6"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "5227eacee4b0186687e23a5e"}, {"problem": 42, "code": "(fn [x] (reduce *' 1 (range 1 (inc x))))", "user": "538ca203e4b0b51d73faae5f"}, {"problem": 42, "code": "(fn meep [c] (if (= 0 c) 1 (* c (meep (- c 1)))))", "user": "53cff414e4b00fb29b221304"}, {"problem": 42, "code": "(fn fac [x]\n  (if (= x 1)\n    1\n    (* x (fac (dec x)))))", "user": "53c9d29ae4b00fb29b2212c2"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (range 1 (+ n 1))))", "user": "53b05a36e4b047364c044481"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "51c8f1d8e4b07ef393169e5d"}, {"problem": 42, "code": "(fn factorial' [x]\n  (if (< x 1)\n    1\n    (* x (factorial' (dec x)))))", "user": "53d612cbe4b0e771c3025452"}, {"problem": 42, "code": "(fn [x] (apply * (range 1 (inc x))))", "user": "53d3856fe4b00fb29b22132b"}, {"problem": 42, "code": "#(loop [i % retval 1]\n   (if (= i 0)\n     retval\n     (recur (dec i) (* retval i))))", "user": "51071f2ee4b05b2b4eee748e"}, {"problem": 42, "code": "(fn\n    [n]\n    (loop [N n\n           result 1]\n       (if (= N 1)\n         result\n         (recur (- N 1) (* N result)))))", "user": "53d6b266e4b0e771c3025459"}, {"problem": 42, "code": "(fn f [n]\n  (if (zero? n)\n    1\n    (* n (f (- n 1)))\n    ))", "user": "53d78b64e4b0e771c3025466"}, {"problem": 42, "code": "(fn [n]\n  (reduce #(* % %2) 1 (range 1 (inc n))))", "user": "530c3d88e4b02e82168697d8"}, {"problem": 42, "code": "#(reduce * (range % 1 -1))", "user": "53d5d24de4b0e771c302544a"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "53ce4cd4e4b00fb29b2212ef"}, {"problem": 42, "code": "(fn factorial-of [num]\n  (reduce * (range 1 (inc num))))", "user": "53d40508e4b00fb29b221332"}, {"problem": 42, "code": "(fn f\n  ([x] (f x 1))\n  ([x y] (if (zero? x) y (recur (- x 1) (* y x)))))", "user": "51febd40e4b0f1313d468a76"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "53d91412e4b0e771c3025474"}, {"problem": 42, "code": "#(reduce * (reverse (range 1 (inc %))))", "user": "53d5a63be4b0e771c3025449"}, {"problem": 42, "code": "#(apply * (take % (iterate inc 1)))", "user": "53d5e45ae4b0e771c302544e"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "53663e82e4b0243289761e73"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "53d0d7a9e4b00fb29b22130c"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "user": "4ea8570f535d7eef308072f8"}, {"problem": 42, "code": "#(reduce * (range % 0 -1))", "user": "53da19fde4b0e771c3025484"}, {"problem": 42, "code": "(fn f [n] (cond (= n 1) 1 :else (* n (f (dec n)))))", "user": "4e6b8ac8535d8ccf87e9ff19"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "53cdbad1e4b00fb29b2212e6"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "53d920d9e4b0e771c3025475"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "53d6cf90e4b0e771c302545c"}, {"problem": 42, "code": "(fn fac [n]\n  (if (= n 1)\n    1\n    (* n (fac (dec n)))))", "user": "53dcf474e4b0d874e779ae25"}, {"problem": 42, "code": "(fn [x]\n  (reduce * (range 1 (inc x))))", "user": "53d2afede4b00fb29b221321"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "53dcdde4e4b0d874e779ae24"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "53bed4b5e4b0c98a41f5cc94"}, {"problem": 42, "code": "(fn fac [n]\n  (if (> 1 n)\n    1\n    (* n (fac (dec n)))))", "user": "53ddd44be4b0d874e779ae2e"}, {"problem": 42, "code": "(fn fac [n]\n  (if (= n 1)\n    1\n    (* n (fac (dec n)))))", "user": "53dd37aee4b0d874e779ae28"}, {"problem": 42, "code": "#(loop [x %\n         acc 1]\n    (if(= x 0) \n      acc\n      (recur (- x 1) (* acc x))\n    ))", "user": "53da8fede4b0e771c30254a3"}, {"problem": 42, "code": "(fn fac [x] (if (= x 1) 1 (* x (fac (dec x)))))", "user": "53de622ce4b0d874e779ae34"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "539dcb24e4b0b51d73faaf3d"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "53968a70e4b0b51d73faaee0"}, {"problem": 42, "code": "#(reduce * \n           (take % \n                 (range 1 (inc %))))", "user": "53a83c74e4b047364c044426"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "52cda980e4b07d0d72b2737b"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "53da70a4e4b0e771c302549d"}, {"problem": 42, "code": ";(fn [n]\n;  (reduce * (rest (take (inc n) (range)))))\n\n(fn [n]\n  (reduce * (take n (iterate inc 1))))", "user": "52f32c24e4b05e3f0be25f0d"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "53dc05d4e4b094d41abdfefa"}, {"problem": 42, "code": "#(->> % inc (range 1) (reduce *))", "user": "53dfdf01e4b0d874e779ae46"}, {"problem": 42, "code": "#(apply * % (range 1 %))", "user": "53ded676e4b0d874e779ae3b"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "53e19461e4b0d874e779ae59"}, {"problem": 42, "code": "(fn [n]                                                                                                                                                            \n  (loop [acc 1 \n         n n]\n    (if (= 1 n)\n      acc\n      (recur (* acc n) (dec n)))))", "user": "53e241a6e4b036ad0777e3f0"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "53dadf1de4b0e771c30254ad"}, {"problem": 42, "code": "(fn factorial [n]\n  (if (= n 0)\n      1\n      (* n (factorial (- n 1)))))", "user": "53dc94c8e4b094d41abdfefc"}, {"problem": 42, "code": "(fn factorial [n] (if (= n 0) 1\n                    (if (= n 1) 1\n                      (* n (factorial (- n 1))))))", "user": "53e2ac1ae4b036ad0777e3f3"}, {"problem": 42, "code": "#(apply * 1 (rest (range (inc %))))", "user": "4eea1a41535d93acb0a66899"}, {"problem": 42, "code": "(fn factorial [n]\n  (loop [fact 1\n         thenum n]\n    (if (zero? thenum)\n      fact\n      (recur (* fact thenum) (dec thenum)))))", "user": "53d87449e4b0e771c302546d"}, {"problem": 42, "code": "#(apply * (rest (range (+ 1 %))))", "user": "53e2b212e4b036ad0777e3f4"}, {"problem": 42, "code": "#(reduce * (range % 1 -1))", "user": "50232eeae4b0b5d8b1bd2397"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "53d4dadde4b00fb29b221337"}, {"problem": 42, "code": "(fn [i]\n  (reduce * (range 1 (inc i))))", "user": "530bae80e4b02e82168697d0"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "516d227fe4b06f078fab252d"}, {"problem": 42, "code": "#(reduce * 1 (range 2 (inc %)))", "user": "53e4fa2ce4b036ad0777e454"}, {"problem": 42, "code": "#(reduce * (take % (iterate inc 1)))", "user": "53d28800e4b00fb29b22131e"}, {"problem": 42, "code": "#(apply *' (take % (iterate inc 1)))", "user": "5377a23ce4b06839e8705e39"}, {"problem": 42, "code": "(fn [n]\n    (loop [cnt n acc 1]\n       (if (zero? cnt)\n            acc\n          (recur (dec cnt) (* acc cnt)))))", "user": "53844970e4b06839e8705eef"}, {"problem": 42, "code": "#(reduce * (range % 1 -1))", "user": "53ac4c6fe4b047364c04445d"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "user": "53e27bf1e4b036ad0777e3f2"}, {"problem": 42, "code": "(fn [n] (reduce * 1 (range 1 (+ n 1))))", "user": "53e150e5e4b0d874e779ae53"}, {"problem": 42, "code": "(fn fact [x] (if (= x 1) 1 (* x (fact (dec x)))))", "user": "53e91473e4b036ad0777e495"}, {"problem": 42, "code": "(fn [product counter max-count]\n  (if (> counter max-count)\n    product\n    (recur (* counter product)\n               (inc counter)\n               max-count))) 1 1", "user": "53dfd77fe4b0d874e779ae45"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "53d88bd5e4b0e771c302546e"}, {"problem": 42, "code": "(fn fact [n]\n  (loop [curr (dec n) res n]\n    (if (= curr 0)\n      res\n      (recur (dec curr) (* res curr)))))", "user": "53e30fcae4b036ad0777e3fc"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "528d6b10e4b0239c8a67aec3"}, {"problem": 42, "code": "#(apply * (take % (iterate inc 1)))", "user": "4f1ff504535d64f6031464a6"}, {"problem": 42, "code": "#(reduce * (map inc (range %)))", "user": "53e76bb2e4b036ad0777e47d"}, {"problem": 42, "code": "(fn fact [in] \n   (cond  \n     (= 1 in)\n      1\n     :else\n       (* (fact (dec in)) in)\n     ))", "user": "53e15371e4b0d874e779ae54"}, {"problem": 42, "code": "(fn [x]\n    (loop [n x f 1]\n        (if (= n 1)\n            f\n            (recur (dec n) (* f n)))))", "user": "53e3e852e4b036ad0777e407"}, {"problem": 42, "code": "#(reduce * (take % (iterate inc 1)))", "user": "53e4b5a3e4b036ad0777e44b"}, {"problem": 42, "code": "#(nth (map first (iterate (fn [[x y]] [(* x (inc y)) (inc y)]) [1 1])) (dec %))", "user": "53ecac57e4b0d648e757f4b3"}, {"problem": 42, "code": "#(reduce * (rest (range (inc %))))", "user": "53e9a15be4b036ad0777e4ae"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "53eb8ceae4b036ad0777e4fb"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "53d0c837e4b00fb29b22130b"}, {"problem": 42, "code": "(fn [n]\n  (apply * (range 1 (inc n))))", "user": "5343753ae4b084c2834f4a1b"}, {"problem": 42, "code": "(fn [n]\n  (loop [x n f 1]\n    (if (= 1 x) f (recur (dec x) (* f x)))))", "user": "52fc181ce4b047fd55837013"}, {"problem": 42, "code": "(fn fact [x]\n  (reduce #(* %2 %1) (map #(+ 1 %) (range x))))", "user": "53e92821e4b036ad0777e499"}, {"problem": 42, "code": "(fn factorial\n  [n]\n  (if (= n 1)\n    1\n    (* n (factorial (dec n)))))", "user": "53e57ba2e4b036ad0777e45c"}, {"problem": 42, "code": "(fn f [n]\n   (if (<= n 0)\n     1\n     (* n (f (dec n)))))", "user": "53ea5307e4b036ad0777e4e2"}, {"problem": 42, "code": "(fn my-factorial\n  ([n] (my-factorial n 1))\n  ([n acc]\n    (cond\n      (= n 1)\tacc\n      true      (recur (dec n) (* n acc))\n    )\n  )\n)", "user": "53edb628e4b0d648e757f4c8"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "user": "53bf9cfbe4b0c98a41f5cca4"}, {"problem": 42, "code": "(fn fact [n]\n  (if (= n 1)\n    n\n    (* n (fact (dec n)))))", "user": "53e3f7a8e4b036ad0777e408"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (+ n 1))))", "user": "53dfbc75e4b0d874e779ae44"}, {"problem": 42, "code": "#(apply * (rest (range (inc %))))", "user": "53e92aafe4b036ad0777e49a"}, {"problem": 42, "code": "(fn [n] (reduce * 1 (range 1 (inc n))))", "user": "53ee7f2ee4b0d648e757f4cf"}, {"problem": 42, "code": "(fn fact [n]\n  (if (= n 1)\n    1\n    (* n (fact (dec n)))))", "user": "53edb464e4b0d648e757f4c7"}, {"problem": 42, "code": "(fn [n] (reduce * (range 2 (inc n))))", "user": "53ea72b6e4b036ad0777e4e5"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "53f1c05ee4b0742d9025b0e1"}, {"problem": 42, "code": "(fn fac [x] (if (= x 1)\n            1\n            (* x (fac (dec x))))\n        )", "user": "53ecd01fe4b0d648e757f4b9"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "534bfc71e4b084c2834f4a88"}, {"problem": 42, "code": "(fn ! [n]\n  (if (> n 1)\n    (* n (! (- n 1)))\n    1))", "user": "52eb2ec9e4b0705949c44439"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "523578efe4b0a643f2dcb74c"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "53e8cefde4b036ad0777e48d"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "53d70f3be4b0e771c302545f"}, {"problem": 42, "code": "#(reduce * (map inc (range %)))", "user": "523630eee4b05f3be1c7c8e8"}, {"problem": 42, "code": "(fn [x]\n  (loop [mult x result 1]\n    (if (= mult 1)\n      result\n      (recur\n        (dec mult)\n        (* result mult)\n      )\n    )\n  ) \n)", "user": "53f17931e4b0742d9025b0dd"}, {"problem": 42, "code": "(fn [n] (loop [i 1\n               acc 1]\n            (if (> i n) acc \n              (recur (+ i 1) (* acc i))\n              )    \n          ))", "user": "537b1083e4b06839e8705e64"}, {"problem": 42, "code": "#(reduce * (take % (iterate dec %)))", "user": "53f152bce4b0742d9025b0dc"}, {"problem": 42, "code": "#(apply * % (range 1 %))", "user": "53ed2fafe4b0d648e757f4c1"}, {"problem": 42, "code": "(fn [n] (apply * (range 1 (inc n))))", "user": "5052ab7ee4b0a561d07d8f20"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "53ea3a63e4b036ad0777e4dc"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "538d70abe4b0b51d73faae6e"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "53ef78bee4b0742d9025b0cd"}, {"problem": 42, "code": "(comp\n         (partial reduce *' 1)\n         (partial range 1)\n         (partial + 1))", "user": "53f592b7e4b0db01ade6f9d0"}, {"problem": 42, "code": "(fn factorial [value]\n \t(if(= value 1)\n      value\n      (* value (factorial (dec value)))))", "user": "53f50c03e4b0db01ade6f9ca"}, {"problem": 42, "code": "(fn [n] \n  (loop [accum 1 nn n]\n    (if (zero? nn) accum\n      (recur (* accum nn) (dec nn)))))", "user": "52fdbf3ae4b047fd55837032"}, {"problem": 42, "code": "(fn factorial\n  [x]\n  (if\n    (= x 1) x\n    (* (factorial (dec x)) x)))", "user": "53f3d96ee4b0742d9025b0fa"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "53f035c2e4b0742d9025b0d2"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "53f67bcfe4b0db01ade6f9e1"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "53f12b77e4b0742d9025b0da"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "513e8141e4b02b2a3d8235c1"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "53f6d555e4b0db01ade6f9e5"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "53e9681de4b036ad0777e4a4"}, {"problem": 42, "code": "#(loop [n %\n        acc 1]\n   (if (= n 1)\n     acc\n     (recur (dec n) (* acc n))\n   )\n )", "user": "53f7820be4b0de5c41848560"}, {"problem": 42, "code": "(fn [n] (apply * (range 1 (+ n 1))))", "user": "53214efbe4b09d4e7a9b54b2"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (inc x))))", "user": "53f6566ee4b0db01ade6f9de"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "53f5f740e4b0db01ade6f9d8"}, {"problem": 42, "code": "(fn -fac [x]\n  (if (= 1 x) 1 (* x (-fac (- x 1)))))", "user": "53bd7080e4b0d9a98559a6d1"}, {"problem": 42, "code": "(fn f [x] (if (= x 1) 1 (* x (f (dec x)))))", "user": "53cd421ce4b00fb29b2212dd"}, {"problem": 42, "code": "(fn f[x] (if (<= x 1) 1 (* x (f (dec x)))))", "user": "5398123ee4b0b51d73faaef3"}, {"problem": 42, "code": "(fn [n]\n  (letfn [(go [m]\n              (if (< m 2) 1\n                (* m (go (dec m)))\n                ))]\n    (go n)))", "user": "53ef7f77e4b0742d9025b0ce"}, {"problem": 42, "code": "(fn fact [n]\n   (if (> n 1)\n     (* n (fact (dec n)))\n     1))", "user": "53ed6976e4b0d648e757f4c4"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "53fa3524e4b0de5c41848578"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "53f35c34e4b0742d9025b0f4"}, {"problem": 42, "code": "(fn factor [x]\n    (if (= x 1) 1\n      (* x (factor (dec x)))))", "user": "53f75957e4b0de5c4184855d"}, {"problem": 42, "code": "(fn fact [n]\n  (if (zero? n) 1 (* n (fact (- n 1)))))", "user": "53fb5256e4b0de5c4184857f"}, {"problem": 42, "code": "(fn peu [x](if (= x 1) 1 (* x (peu (dec x)))))", "user": "53fc8424e4b0de5c418485b3"}, {"problem": 42, "code": "(fn factorial [n]\n  (reduce * (range 1 (+ 1 n))))", "user": "50c13f77e4b096f585049c3b"}, {"problem": 42, "code": "(fn fac [n] (if (> n 1) (* n (fac (dec n))) 1))", "user": "507516d0e4b054001656acda"}, {"problem": 42, "code": "#(reduce * (take % (iterate inc 1)))", "user": "525b4e8de4b0cb4875a45d0f"}, {"problem": 42, "code": "#(reduce * (take % (iterate dec %)))", "user": "52c08c59e4b07a9af5792351"}, {"problem": 42, "code": "(fn [n]\n  (loop [n n\n         acc 1]\n    (if (= 1 n)\n      acc\n      (recur (dec n) (* acc n)))))", "user": "4dadb5f4c9a9d6ed3399dc57"}, {"problem": 42, "code": "(fn [n] (reduce #(* %1 %2) (range 1 (inc n))))", "user": "53f77b6ae4b0de5c4184855f"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (+ x 1))))", "user": "53d86564e4b0e771c302546b"}, {"problem": 42, "code": "(fn fact [n] (reduce * (range 1 (inc n))))", "user": "53fd66a4e4b0de5c418485e3"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "53c06438e4b0c98a41f5ccb0"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "53fe1c3be4b0de5c418485f2"}, {"problem": 42, "code": "(fn  f [x] (if(= x 1) 1 (* x (f (dec x))) ))", "user": "53fdc4b8e4b0de5c418485ea"}, {"problem": 42, "code": "#(apply * (range 1 (inc %1)))", "user": "53fddd71e4b0de5c418485eb"}, {"problem": 42, "code": "#(apply * (take % (iterate dec %)))", "user": "53f3a4ace4b0742d9025b0f7"}, {"problem": 42, "code": "(fn factorial\n  [num]\n  (if (= num 1)\n    num\n    (* num (factorial (- num 1))))\n   )", "user": "53fe459ae4b0de5c418485f4"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "53fe1b42e4b0de5c418485f1"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "53fcdd1ae4b0de5c418485dd"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "53e1e1f1e4b0d874e779ae5e"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5400fc30e4b0de5c4184861b"}, {"problem": 42, "code": "(fn factorial [n]\n  (if (= n 0)\n    1\n    (* n (factorial (dec n)))))", "user": "53217912e4b09d4e7a9b54b3"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "524b827ce4b09eba1c0223d7"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "540479e7e4b0addc1aec665a"}, {"problem": 42, "code": "(fn factorial [n]\n  (reduce * 1N (take n (map inc (range)))))", "user": "54008b88e4b0de5c4184860d"}, {"problem": 42, "code": "(fn fact [n] (if (= 1 n) 1 (* n (fact (dec n)))))", "user": "53350264e4b0656e627bfd73"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "53fb4843e4b0de5c4184857d"}, {"problem": 42, "code": "(fn[s]\n   (loop [acc 1\n          num 1]\n     (if (= num (inc s))\n       acc\n       (recur (* num acc) (inc num)))))", "user": "53d10553e4b00fb29b22130f"}, {"problem": 42, "code": "(fn [x]\n  (loop [i 1\n         result 1]\n    \t(if (>= i x)\n    \t\tresult\n    \t\t(recur (inc i) (* result (inc i)))\n    \t)\n  ))", "user": "54021f13e4b0df28a13c62cc"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "53fc713be4b0de5c418485a0"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5401aefbe4b0df28a13c62c7"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "5405ae2be4b0addc1aec6671"}, {"problem": 42, "code": "#(loop [sv % acc 1]\n   (if (zero? sv)\n     acc\n     (recur (dec sv) (* sv acc))))", "user": "509b1204e4b0412cdea6eb1d"}, {"problem": 42, "code": "(fn fac [x] (if (= 0 x) 1 (* x (fac (dec x)))))", "user": "52ed7458e4b0a18b0f5dd9ed"}, {"problem": 42, "code": "(fn fac [n] (if (zero? n) 1 (* n (fac (dec n)))))", "user": "53fcb8f7e4b0de5c418485d4"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "54084784e4b0addc1aec66c9"}, {"problem": 42, "code": "#(loop [x % y 1] (if (= x 0) y (recur (dec x) (* y x))))", "user": "53a442a6e4b0b62ce300572d"}, {"problem": 42, "code": "(fn [fact] (apply * (range 1 (inc fact))))", "user": "5251b11be4b0541d1855b87b"}, {"problem": 42, "code": "(fn\n  [n]\n  (apply * (range 1 (inc n))))", "user": "540b2dcbe4b0addc1aec66f4"}, {"problem": 42, "code": "(fn [n] (loop [acc n\n               iter (dec n)]\n          (if (= iter 0)\n            acc\n            (recur (* acc iter) (dec iter)))))", "user": "53de7484e4b0d874e779ae35"}, {"problem": 42, "code": "(fn myfac [n]\n  (apply * (range 1 (inc n))))", "user": "53e8c684e4b036ad0777e48b"}, {"problem": 42, "code": "(fn foo [x] (if (= x 1) 1 (* x (foo (dec x)))))", "user": "54078851e4b0addc1aec66bd"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "4f392fc8e4b0e243712b1ee7"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "54023bbfe4b0df28a13c62cd"}, {"problem": 42, "code": "(fn factorial [x] (if (= x 1) 1 (* (factorial (dec x)) x)))", "user": "54091b82e4b0addc1aec66d5"}, {"problem": 42, "code": "#(reduce * (map inc (range %)))", "user": "540d7dd1e4b0addc1aec6713"}, {"problem": 42, "code": "(fn [n] (apply * (range 1 (inc n))))", "user": "54094824e4b0addc1aec66da"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "53cfa79ce4b00fb29b2212ff"}, {"problem": 42, "code": "(fn [n]\n  (loop [n n acc 1]\n    (if (zero? n)\n      acc\n      (recur (dec n) (* n acc)))))", "user": "540e17c3e4b0addc1aec6719"}, {"problem": 42, "code": "(fn [n]\n  (apply * (range 1 (inc n))))", "user": "540f2c48e4b0addc1aec6727"}, {"problem": 42, "code": "(fn [n]\n  (loop [cnt n acc 1]\n    (if (zero? cnt) acc\n      (recur (dec cnt) (* acc cnt))))\n)", "user": "5409f8eae4b0addc1aec66e6"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "53b9bb15e4b047364c0444ed"}, {"problem": 42, "code": "(fn [n]\n  (apply * (range n 0 -1)))", "user": "540d5085e4b0addc1aec670e"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "52bc0dade4b07a9af57922f1"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (+ x 1))))", "user": "5409a12fe4b0addc1aec66df"}, {"problem": 42, "code": "(fn [n]\n  (loop [prod-so-far 1 i n]\n    (if (<= i 1)\n      prod-so-far\n      (recur (* prod-so-far i) (dec i)))))", "user": "540e0637e4b0addc1aec6717"}, {"problem": 42, "code": "(fn [x]\n  (loop [res 1\n         val x]\n    (if (> val 1)\n      (recur (* res val)\n             (- val 1))\n      res)))", "user": "4fec08e8e4b0681fd128dc9d"}, {"problem": 42, "code": "#(loop [n % total 1] (if (= n 1) total (recur (dec n) (* total n))))", "user": "52ec2b9ae4b0705949c4444f"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "53f2370ee4b0742d9025b0e7"}, {"problem": 42, "code": "#(loop [n % res 1]\n   (if (= 1 n)\n     res\n     (recur (dec n) (* n res))))", "user": "4fad9da0e4b081705acca23c"}, {"problem": 42, "code": "(fn [x] (loop [prod 1 input x] (if (= input 1) prod (recur (* prod input) (dec input)))))", "user": "53ed03f0e4b0d648e757f4bb"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "53f6bfd9e4b0db01ade6f9e4"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "540c54a7e4b0addc1aec6700"}, {"problem": 42, "code": "(fn fact [x]\n  (if (= x 1)\n    1\n    (* x (fact (- x 1)))))", "user": "541475afe4b01498b1a719eb"}, {"problem": 42, "code": "(letfn [(f [n]\n           (if (= n 1)\n             1\n             (* n (f (dec n)))))]\n  f)", "user": "540470dae4b0addc1aec6658"}, {"problem": 42, "code": "#(reduce * (take %1 (iterate inc 1)))", "user": "53e76728e4b036ad0777e47c"}, {"problem": 42, "code": "(fn [x] (apply * (range 1 (inc x))))", "user": "54133900e4b01498b1a719de"}, {"problem": 42, "code": "(fn [n]\n  (letfn [(factorial [n]\n                     (if (= 1 n) 1\n                       (* n (factorial (dec n)))))]\n    (factorial n)))", "user": "531571ece4b08068f379ed27"}, {"problem": 42, "code": "#(apply *' (range 1 (inc %1)))", "user": "541096bde4b01498b1a719b2"}, {"problem": 42, "code": "(fn facto [n] \n    (if (= n 1) \n      1 \n      (* n (facto (- n 1))))\n    )", "user": "53d64811e4b0e771c3025456"}, {"problem": 42, "code": "(fn my-fact [n]\n  (if (= 1 n)\n    1\n    (* n (my-fact (dec n)))))", "user": "54125eeee4b01498b1a719d3"}, {"problem": 42, "code": "(fn fac [n] (if (= n 0) 1 (* n (fac (dec n)))))", "user": "5417385fe4b01498b1a71a08"}, {"problem": 42, "code": "(fn [n] \n  (reduce * \n          (range 1 (+ 1 n))\n          )\n  )", "user": "540b4c4de4b0addc1aec66f6"}, {"problem": 42, "code": "#(apply * (range % 0 -1))", "user": "54139cd4e4b01498b1a719e3"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "540f09b9e4b0addc1aec6725"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "541619e8e4b01498b1a719f9"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "53e0001be4b0d874e779ae48"}, {"problem": 42, "code": "(fn [n]\n  (reduce *' (range 1 (inc n))))", "user": "5412d5d2e4b01498b1a719d9"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "54051338e4b0addc1aec6662"}, {"problem": 42, "code": "#(reduce * (drop 1 (range (+ 1 %))))", "user": "53eaa804e4b036ad0777e4ea"}, {"problem": 42, "code": "(fn factorial [n]\n  (if (= n 0)\n    1\n    (* n (factorial (dec n)))))", "user": "540ff039e4b01498b1a7199b"}, {"problem": 42, "code": "(fn\n  !\n  [x]\n  (if \n    (= x 1) \n    1 \n    (* x (! (dec x)))))", "user": "54187e84e4b01498b1a71a1b"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "53fd0a22e4b0de5c418485e1"}, {"problem": 42, "code": "(fn f [x] (if (= x 1) 1 (* x (f (dec x)))))", "user": "541404c2e4b01498b1a719e7"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "541b37d2e4b01498b1a71a64"}, {"problem": 42, "code": "(fn [x] (apply * (range 1 (inc x))))", "user": "51c1b644e4b0d204dbe2ca12"}, {"problem": 42, "code": "(fn [x] (apply * (range 1 (+ x 1))))", "user": "541c1e46e4b01498b1a71a70"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5282f54be4b0239c8a67ada0"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "54149f2fe4b01498b1a719ec"}, {"problem": 42, "code": "(fn mfact \n  [n]\n  (loop [cn 1 result n]\n    (if (>= cn n)\n      result\n      (recur (inc cn) (* result cn)))))", "user": "540efe2ee4b0addc1aec6724"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "52541fe6e4b0541d1855b964"}, {"problem": 42, "code": "(fn [n]\n                (letfn [(fact-iter [result next]\n                          (if (> next n)\n                            result\n                            (recur (* result next) (inc next))))]\n                  (fact-iter 1 1)))", "user": "541ae7dbe4b01498b1a71a61"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "541f5b37e4b01498b1a71a97"}, {"problem": 42, "code": "(fn [x] (loop [result 1\n               i x]\n          (if (= i 0)\n            result\n            (recur (* result i) (- i 1)))))", "user": "540c288ae4b0addc1aec66ff"}, {"problem": 42, "code": "(fn fact [x]\n  (if (= 1 x)\n  1\n  (* x (fact(- x 1)))))", "user": "5395cea3e4b0b51d73faaeda"}, {"problem": 42, "code": "; get {1 1 3 6 5 120 8 40320}\n#(apply * (range 1 (inc %)))", "user": "541f6bc0e4b01498b1a71a98"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "511036c5e4b04c71fce993ee"}, {"problem": 42, "code": "(fn rfac [x]\n  (if (> x 1)\n    (* (rfac (dec x)) x)\n    1))", "user": "52d6d490e4b09f7907dd1369"}, {"problem": 42, "code": "#(loop [n %, p 1]\n    (if (= n 0) p (recur (dec n) (* n p))))", "user": "53ff8c31e4b0de5c41848603"}, {"problem": 42, "code": "#(loop [x % \n            tmp 1]\n        (if (or (= x 0) (= x 1))\n            tmp\n            (recur (- x 1) (* tmp x))))", "user": "54213a8fe4b01498b1a71aaf"}, {"problem": 42, "code": "#(->> (range 1 (inc %))\n      (apply *))", "user": "5412ef7ee4b01498b1a719da"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "541168dee4b01498b1a719c3"}, {"problem": 42, "code": "(fn [n]\n  (->> n inc (range 1) (apply *))\n)", "user": "516ee939e4b06aac486e5b34"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5415d115e4b01498b1a719f7"}, {"problem": 42, "code": "#(reduce * (take % (iterate inc 1)))", "user": "54084089e4b0addc1aec66c7"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "541ad1c1e4b01498b1a71a5c"}, {"problem": 42, "code": "#(reduce * 1 (take % (iterate dec %)))", "user": "54246d6de4b01498b1a71aec"}, {"problem": 42, "code": "(fn [n]\n  (->> (iterate dec n)\n       (take n)\n       (reduce *)))", "user": "54246fcce4b01498b1a71aed"}, {"problem": 42, "code": "(fn fac [n]\n    (if (= n 1)\n      1\n      (* n (fac (dec n)))))", "user": "52b2f9cae4b0c58976d9acfb"}, {"problem": 42, "code": "(partial (fn [i n]\n  (if (> n 1)\n    (recur (* i n) (dec n))\n    i)) 1)", "user": "5370d152e4b0fc7073fd6e9d"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "54227fc6e4b01498b1a71ac0"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "54159032e4b01498b1a719f5"}, {"problem": 42, "code": "(fn [n]\n  (reduce * 1 (range 1 (inc n))))", "user": "5424c523e4b01498b1a71b03"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (inc x))))", "user": "54299d4be4b01498b1a71b3d"}, {"problem": 42, "code": "(fn [x] (reduce * 1 (range 1 (inc x))))", "user": "4dfceeb9535d04ed9115e77e"}, {"problem": 42, "code": "(fn fact\n  ([x f] (if (= x 0) f (fact (dec x) (* f x))))\n  ([x] (fact x 1))\n)", "user": "54257124e4b01498b1a71b09"}, {"problem": 42, "code": "(fn fact\n  [i]\n  (if (= i 1)\n    1\n    (* i (fact (dec i)))\n    ))", "user": "54258a7fe4b01498b1a71b0c"}, {"problem": 42, "code": "#(loop [n %\n        fact 1]\n   (if (= n 1)\n     fact\n     (recur (dec n) (* fact n))))", "user": "54194782e4b01498b1a71a29"}, {"problem": 42, "code": "(fn [x] (apply * (range 1 (inc x))))", "user": "51ca5378e4b08b1cbd0d9480"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "5425d454e4b01498b1a71b13"}, {"problem": 42, "code": "(fn myfact [n]\n   (if (> n 1) (* n (myfact (- n 1))) 1))", "user": "5429986ce4b01498b1a71b3b"}, {"problem": 42, "code": "#(apply * (take %\n        (iterate dec %)\n        ))", "user": "541074f1e4b01498b1a719ac"}, {"problem": 42, "code": "(fn fac [x] (if (<= x 1) 1 (* x (fac (dec x)))))", "user": "542d2385e4b0dad94371f2b2"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "542c22bde4b0dad94371f29e"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "540e8d13e4b0addc1aec671e"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "54302691e4b0dad94371f2d7"}, {"problem": 42, "code": "#(apply * % (range 2 %))", "user": "53a01fb1e4b0ca733b9744a6"}, {"problem": 42, "code": "(fn [x]\n  (loop [ans 1\n         nxt x]\n    (if (<= nxt 1)\n      ans\n      (recur (* ans nxt) (- nxt 1)))))", "user": "5430bc79e4b0dad94371f2dd"}, {"problem": 42, "code": "(fn this [x]\n  (if (= x 1) 1 (* x (this (- x 1)))))", "user": "542da97ae4b0dad94371f2ba"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "53f78944e4b0de5c41848561"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (+ x 1))))", "user": "542c2de0e4b0dad94371f29f"}, {"problem": 42, "code": "#(case %2 0 % (recur (* % %2) (- %2 1))) 1", "user": "542f574be4b0dad94371f2d0"}, {"problem": 42, "code": "(fn [n]\r\n   (loop [i n\r\n          ret 1]\r\n     (if (= 0 i) ret\r\n         (recur (dec i) (*' ret i)))))", "user": "542b764ae4b0dad94371f28d"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "542edb4ae4b0dad94371f2c8"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "53765e1ae4b06839e8705e23"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (+ n 1))))", "user": "53dfe311e4b0d874e779ae47"}, {"problem": 42, "code": "(fn factorial [x]\n  (loop [a x\n         out 1]\n    (if (> a 0)\n      (recur (- a 1) (* out a))\n      out\n      )\n    )\n  )", "user": "53b685e0e4b047364c0444c7"}, {"problem": 42, "code": "(fn fact [n]\n  (cond\n    (= n 1) 1\n    :else (* (fact (dec n)) n)))", "user": "54336443e4b0b6b47310fcde"}, {"problem": 42, "code": "(fn fact [n]\n  (if (zero? n)\n    1\n    (* n (fact (dec n)))))", "user": "542db41be4b0dad94371f2bb"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "54296802e4b01498b1a71b38"}, {"problem": 42, "code": "#(apply * (map inc (range %)))", "user": "53a12b57e4b0ca733b9744ba"}, {"problem": 42, "code": "(fn _ [x]\n    (letfn [(fac-inc [x current]\n              (if (zero? x)\n                current\n                (recur (dec x) (* current x ) )\n                ))]\n      (fac-inc x 1N)))", "user": "5433a07be4b0b6b47310fce0"}, {"problem": 42, "code": "(fn fact [n]\n  (if (<= n 1)\n    '1\n    (* n (fact (dec n)))\n  )\n)", "user": "5433c591e4b0b6b47310fce3"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "53a511aae4b0b62ce3005735"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5423dc6ae4b01498b1a71ad5"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (+ x 1) )))", "user": "542baf7ce4b0dad94371f291"}, {"problem": 42, "code": "#(apply * (range % 0 -1))", "user": "54349368e4b0b6b47310fcf1"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "542c44f8e4b0dad94371f2a1"}, {"problem": 42, "code": "(fn [x] \n  (loop [n x f 1]\n        (if (= n 1)\n            f\n            (recur (dec n) (* f n)))))", "user": "5412646de4b01498b1a719d4"}, {"problem": 42, "code": "(fn fact [acc x] \n  (if \n    (= 1 x)\n    acc\n    (fact (* acc x) (dec x)))) 1", "user": "53da3fcde4b0e771c3025497"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "532a033be4b09d4e7a9b551f"}, {"problem": 42, "code": "#(reduce * (take % (iterate inc 1)))", "user": "54344721e4b0b6b47310fcea"}, {"problem": 42, "code": "#(->> % inc range rest (reduce *))", "user": "53e745a1e4b036ad0777e479"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "52ee0de4e4b05e3f0be25ec1"}, {"problem": 42, "code": "(fn [n]\n  (reduce * n (rest (range n))))", "user": "541709b0e4b01498b1a71a06"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "542c1f73e4b0dad94371f29d"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))\n\n;#(last (take % (map first (iterate (fn [[acc n]] [(* acc n) (inc n)]) [1 2]))))\n\n;#(last (take % \n;   ((fn fac [acc n] (cons acc (lazy-seq (fac (* acc n) (inc n))))) 1 2)))", "user": "54397533e4b032a45b86931d"}, {"problem": 42, "code": "(fn [x]\n   (reduce * \n           (take x \n                 (iterate dec x))))", "user": "51eda45ce4b0bb507043159b"}, {"problem": 42, "code": ";(fn fac [n] (if (<= n 1) 1 (* n (fac (dec n))))) ;recursive\n;#(reduce * (range 1 (inc %)))\n#(apply * (range 1 (inc %)))", "user": "54380631e4b032a45b86930f"}, {"problem": 42, "code": "(fn fac [n]\n   (case n\n     0 1\n     (* n (fac (dec n)))))", "user": "54393c3fe4b032a45b86931a"}, {"problem": 42, "code": "#(reduce * (range % 0 -1))", "user": "54324be1e4b0dad94371f2ed"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "543a68d3e4b032a45b869326"}, {"problem": 42, "code": "#(reduce * (map inc (range %)))", "user": "543c39e0e4b032a45b86933d"}, {"problem": 42, "code": "(fn factorial [x]\n  (reduce * (range 1 (inc x))))", "user": "540271aee4b0df28a13c62d0"}, {"problem": 42, "code": "(fn [n]\n  (loop [res 1 cnt n]\n    (cond (= cnt 0) \n          res\n          :else\n          (recur (* res cnt) (dec cnt)))))", "user": "54055aa9e4b0addc1aec6665"}, {"problem": 42, "code": "(fn [x] \n  (reduce * (range 1 (inc x))))", "user": "51568fbae4b04360f2428e67"}, {"problem": 42, "code": "(fn silnia [n]\n  (if (= n 1)\n    1\n    (* n (silnia(- n 1)))))", "user": "543d5c61e4b032a45b86934d"}, {"problem": 42, "code": "#(reduce * (rest (range (+ 1 %))))", "user": "543bce4fe4b032a45b869335"}, {"problem": 42, "code": "(fn factorial [n]\n  (if (< n 2)\n    1\n    (* n (factorial (dec n)))))", "user": "53f891eee4b0de5c4184856d"}, {"problem": 42, "code": "(fn fact\n  [n]\n  (if (< n 2)\n    1\n    (* n (fact (dec n)))))", "user": "52561295e4b0541d1855ba03"}, {"problem": 42, "code": "(fn [n]\n  (loop [count 1\n         result 1]\n    (if (= count n)\n      (* n result)\n      (recur (inc count) (* count result)))))", "user": "539043e7e4b0b51d73faae97"}, {"problem": 42, "code": "(fn [n] (apply * (range 1 (inc n))))", "user": "5385e633e4b06839e8705f08"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "543f854fe4b032a45b86935b"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "543d07e8e4b032a45b869346"}, {"problem": 42, "code": "#(* % (reduce * (range 1 %)))", "user": "53c1b787e4b00fb29b221266"}, {"problem": 42, "code": "(fn fact\n  [arg]\n  (if (= 0 arg)\n    1\n    (* arg (fact (- arg 1)))\n    )\n  )", "user": "54410a71e4b032a45b869367"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "52f8b86de4b047fd55836fdb"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "543d89dfe4b032a45b869350"}, {"problem": 42, "code": "#(reduce * (take % (rest (range))))", "user": "543ed417e4b032a45b869358"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (+ 1 n))))", "user": "54431b6ee4b032a45b869385"}, {"problem": 42, "code": "; #(reduce * (range 1 (inc %)))\n\n#(->> % inc (range 1) (reduce *))", "user": "541e2ff8e4b01498b1a71a8a"}, {"problem": 42, "code": "(fn fac [n]\n  (if (= n 1)\n    1\n    (* n (fac (dec n)))))", "user": "542cb77ae4b0dad94371f2aa"}, {"problem": 42, "code": "#(apply * (take % (iterate inc 1)))", "user": "54448e84e4b032a45b869393"}, {"problem": 42, "code": "(fn myfac [n]\n  (loop [current n\n         result 1]\n    (if(zero? current)\n      result\n      (recur (dec current) (* current result)))))", "user": "544257b4e4b032a45b869379"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5392bfdee4b0b51d73faaeb2"}, {"problem": 42, "code": "#(apply *' (take % (iterate inc 1)))", "user": "50666699e4b03d366d7cb2b0"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (+ x 1))))", "user": "5441f5e8e4b032a45b869375"}, {"problem": 42, "code": "(fn [x]\n  (->> (inc x) (range 1) (apply *)))", "user": "543496e1e4b0b6b47310fcf2"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5315ba94e4b08068f379ed34"}, {"problem": 42, "code": "#(loop [n % fact 1] (if (> n 0) (recur (dec n) (* fact n)) fact))", "user": "4f1ef6a0535d64f60314649b"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "54468ebfe4b032a45b8693b1"}, {"problem": 42, "code": "(fn fact[x]\n  (if (<= x 1) 1 (* x  (fact (- x 1)))))", "user": "530a6cbae4b02e82168697be"}, {"problem": 42, "code": "(fn [x] (reduce #(* %1 %2) (range 1 (inc x))))", "user": "5447e08ce4b032a45b8693c3"}, {"problem": 42, "code": "(fn [x]\n   (apply * (range 1 (inc x)))\n   )", "user": "54458995e4b032a45b86939e"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5267c74be4b03e8d9a4a7183"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "540997ede4b0addc1aec66dd"}, {"problem": 42, "code": "(fn [n]\n            (reduce #(* %1 %2) (map inc (range n))))", "user": "512655b7e4b05d10e3e39603"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (inc x))))", "user": "54461393e4b032a45b8693a5"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (inc x))))", "user": "54487527e4b032a45b8693cc"}, {"problem": 42, "code": "(fn  [n] (reduce * (range 1 (inc n))))", "user": "544ac9b5e4b0e39780006959"}, {"problem": 42, "code": "#(reduce * (range 1 (+ %1 1)))", "user": "54464734e4b032a45b8693ab"}, {"problem": 42, "code": "(fn fac [num]\n  (if (= 0 num) 1\n    (* num (fac (- num 1)))))", "user": "544b9df2e4b0e39780006968"}, {"problem": 42, "code": "#(->> % inc range rest (reduce *))", "user": "542789efe4b01498b1a71b25"}, {"problem": 42, "code": "(fn [n & rs]\n  (if (< n 2) \n    (reduce * rs)\n    (recur (dec n) (conj rs n))))", "user": "54468fd3e4b032a45b8693b2"}, {"problem": 42, "code": "(fn ! [n]\n  (loop [cnt n acc 1]\n    (if (zero? cnt)\n      acc\n      (recur (dec cnt) (* acc cnt)))))", "user": "52a45a7be4b0c58976d9abd8"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (inc x))))", "user": "5446ebc2e4b032a45b8693b8"}, {"problem": 42, "code": "(fn [x]\n  (loop [xx x\n         acc 1]\n    (if (= xx 1)\n      acc\n      (recur (dec xx) (* acc xx)))))", "user": "531a3d5fe4b08068f379ed89"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5233564ae4b0f0b72fabf403"}, {"problem": 42, "code": "(fn [n] (loop [c n r 1] (if (<= c 1) r (recur (dec c) (* c r)))))", "user": "53320dd1e4b019098a6f8b71"}, {"problem": 42, "code": "#(->> % (inc) (range 1) (reduce *))", "user": "544e8369e4b0e39780006987"}, {"problem": 42, "code": "(fn fact [x] (if (<= x 1) 1 (* x (fact(dec x)))))", "user": "5437eca1e4b032a45b86930d"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "4db2eac3535df7e46ed9b6c8"}, {"problem": 42, "code": "(fn fac [x] (if (= x 1) 1 (* x (fac (dec x)))))", "user": "544fbabce4b0e39780006999"}, {"problem": 42, "code": "(fn\n  [x]\n  (loop\n    [n x\n     acc 1]\n    (if (= n 1)\n      acc\n      (recur (dec n) (* acc n)))))", "user": "542d5fa9e4b0dad94371f2b5"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "544b699ce4b0e39780006964"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5122925ae4b068a9582e656d"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "53dcb9b2e4b0d874e779ae23"}, {"problem": 42, "code": "(fn ff [x] (if (< x 2) 1 (* x (ff (- x 1)))))", "user": "544e1794e4b0e39780006980"}, {"problem": 42, "code": "(fn factorial [x] (if (= x 1) 1 (* x (factorial (dec x)))))", "user": "545188ebe4b0e397800069b2"}, {"problem": 42, "code": "(fn [x]\n  (loop [f 1, n x]\n    (if (= 1 n)\n      f\n      (recur (* f n) (dec n))\n)))", "user": "54524afbe4b0e397800069bc"}, {"problem": 42, "code": "#(apply * (take % (iterate inc 1)))", "user": "5457e5f1e4b01be26fd74613"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "53b7aa6ce4b047364c0444d1"}, {"problem": 42, "code": "(fn factorial\n  [x]\n  (if (zero? x)\n    1\n    (* (factorial (dec x)) x)))", "user": "52d84ea7e4b09f7907dd1390"}, {"problem": 42, "code": "#(apply * (range 1 (inc %1)))", "user": "544cf5d7e4b0e39780006977"}, {"problem": 42, "code": "#(apply * (range 2 (inc %)))", "user": "54512df2e4b0e397800069ae"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5414b7c4e4b01498b1a719ed"}, {"problem": 42, "code": "(fn fact [n]\n (* n\n  (if (< n 2)\n   1\n   (fact (dec n)))))", "user": "54580586e4b01be26fd74616"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5453b522e4b0e397800069d0"}, {"problem": 42, "code": "(fn [x]\n  (loop [res 1 cnt x]\n    (if (= cnt 0) res\n      (recur (* res cnt) (- cnt 1)))))", "user": "54381729e4b032a45b869310"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "52e16face4b09f7907dd1421"}, {"problem": 42, "code": "(fn f [x] (if (= x 1)  1 (* x (f (dec x)))))", "user": "52149e21e4b0961f15ac4d94"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "544a8fbbe4b0e39780006957"}, {"problem": 42, "code": "(fn fact [n]\n  (if (zero? n)\n    1\n    (* n (fact (- n 1)))))", "user": "545801f6e4b01be26fd74615"}, {"problem": 42, "code": "#(second (nth (iterate (fn [[f s]] [(inc f) (* f s)]) [1 1]) %))", "user": "5454b84ce4b0e397800069d9"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5454bd9be4b0e397800069db"}, {"problem": 42, "code": "(fn fac [n] (if (<= n 1) 1 (* n (fac (dec n)))))", "user": "53b14289e4b047364c04448b"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "5367f0a7e4b0243289761e88"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5417bc50e4b01498b1a71a0f"}, {"problem": 42, "code": "(fn fac\n   [n]\n   (apply * n (range 2 n)))", "user": "545e9cf1e4b01be26fd7467f"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5461368ce4b01be26fd7469b"}, {"problem": 42, "code": "#(let [f (fn [n r] (if (= n 0) r (recur (- n 1) (* n r)) ))] (f % 1))", "user": "545eb56be4b01be26fd74682"}, {"problem": 42, "code": "#(reduce * (take % (drop 1 (range))))", "user": "54185dc3e4b01498b1a71a19"}, {"problem": 42, "code": "(fn [n]\n  (reduce * 1 (range 1 (inc n))))", "user": "526e1bd0e4b03e8d9a4a730b"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (range 1 (inc n)))\n  )", "user": "515d414be4b00901442db1db"}, {"problem": 42, "code": "(fn [x]\n  (if (zero? x)\n    1\n    (apply * (range 1 (inc x)))))", "user": "534b1930e4b084c2834f4a76"}, {"problem": 42, "code": "(fn [n] (apply * (range 1 (inc n))))", "user": "5363d242e4b0243289761e5c"}, {"problem": 42, "code": "(fn fac [n]\n  (cond (= n 0) 1\n        true (* n (fac (dec n)))))", "user": "5461c402e4b01be26fd746a6"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "546280d8e4b01be26fd746b0"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "546176e7e4b01be26fd746a2"}, {"problem": 42, "code": "#(reduce * (map inc (range %)))", "user": "5465712ee4b01be26fd746dc"}, {"problem": 42, "code": "(fn -fact [x]\n  (cond\n    (= 0 x) 1\n    (< 0 x) (* x (-fact (- x 1)))\n  )\n)", "user": "546113ffe4b01be26fd74699"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5455c2f3e4b080a794c2c87d"}, {"problem": 42, "code": "(fn factorial [n]\n  (if (= n 0)\n    1\n    (* n (factorial (- n 1)))))", "user": "54651982e4b01be26fd746d4"}, {"problem": 42, "code": "(fn [x]\n    (loop [n x f 1]\n        (if (= n 1)\n            f\n            (recur (dec n) (* f n)))))", "user": "504f9ae1e4b0a02f9cffde9c"}, {"problem": 42, "code": "#(loop [a %, b (dec a)]\n   (if (zero? b)\n     a\n     (recur (* a b) (dec b))))", "user": "540c8f3fe4b0addc1aec6705"}, {"problem": 42, "code": "(fn fact[n] (if (= n 0) 1 (* n (fact (dec n))) ))", "user": "54651ef5e4b01be26fd746d5"}, {"problem": 42, "code": "#(loop [n % acc 1]\n   (if (= n 0)\n     acc\n     (recur (dec n) (* n acc))))", "user": "54630e6be4b01be26fd746bc"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "545537c1e4b0e397800069dd"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5458a729e4b01be26fd74622"}, {"problem": 42, "code": "(fn [n]\n  (loop [product\t1\n         index\t\t1]\n    (if (> index n)\n      product\n      (recur (* product index) (+ index 1)))))", "user": "5468033ee4b00cfc9eacc133"}, {"problem": 42, "code": "#(apply * (take % (iterate inc 1)))", "user": "5464a536e4b01be26fd746cf"}, {"problem": 42, "code": "(fn fact [x]\n  (if (= x 1)\n    1\n  \t(* x (fact (dec x)))))", "user": "54651faee4b01be26fd746d6"}, {"problem": 42, "code": "(fn [n]\n         (let [b #(if (= %1 1)\n           %2\n           (recur (dec %1) (* %2 %1)))]\n           (b n 1)))", "user": "544e9022e4b0e3978000698b"}, {"problem": 42, "code": "(fn fact [n]\n  (if (= n 0)\n    1\n    (* n (fact (- n 1)))))", "user": "5469e7cce4b00cfc9eacc14c"}, {"problem": 42, "code": "(fn [n]\n  (loop [i 1 ans 1]\n    (if (= i (+ n 1))\n      ans\n      (recur (inc i) (* ans i)))))", "user": "52526161e4b0541d1855b8a6"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "543bb568e4b032a45b869334"}, {"problem": 42, "code": "(fn f [n] \n  (if (= n 1)\n    1\n    (* n (f (dec n)))))", "user": "52b9cfb9e4b07a9af57922c5"}, {"problem": 42, "code": "(fn [n] (reduce #(* %1 %2)  (range 1 (inc n))))", "user": "54638c8fe4b01be26fd746c2"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "53572176e4b04ce2eb3ed276"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "53ea5851e4b036ad0777e4e4"}, {"problem": 42, "code": "(fn [x] (apply * (range 1 (inc x))))", "user": "5146fd44e4b0d12420447958"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "54485727e4b032a45b8693c6"}, {"problem": 42, "code": "(fn [n] (reduce * (take n (rest (range)))))", "user": "52a90056e4b0c58976d9ac39"}, {"problem": 42, "code": "(fn [x]\n  (reduce * (take x (iterate inc 1))))", "user": "541f89a5e4b01498b1a71a99"}, {"problem": 42, "code": "(comp (partial reduce * 1) (partial range 1) inc)", "user": "545bd22fe4b01be26fd7465a"}, {"problem": 42, "code": "#(apply * (take % (iterate dec %)))", "user": "546c1b2ce4b00cfc9eacc174"}, {"problem": 42, "code": "(fn [x] (reduce * (range x 0 -1)))", "user": "53baa9c0e4b047364c0444fa"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "546a6dbbe4b00cfc9eacc156"}, {"problem": 42, "code": "#(apply * (for [x (iterate dec %) :while (> x 0)] x))", "user": "5465febde4b01be26fd746e1"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "54058126e4b0addc1aec6667"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5462ce20e4b01be26fd746b8"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "546dd4f6e4b00cfc9eacc194"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5461873de4b01be26fd746a3"}, {"problem": 42, "code": "#(apply * (map inc (take % (range))))", "user": "52540bcce4b0541d1855b952"}, {"problem": 42, "code": "(fn [n]\n  (loop [cnt 1 n n]\n    (if (= n 1)\n      cnt\n      (recur (* n cnt) (dec n)))))", "user": "541ddadbe4b01498b1a71a84"}, {"problem": 42, "code": "(fn [n]\n  (loop [product 1\n         n n]\n    ;(pprint {:product product :n n})\n    (if (< n 2)\n      product\n      (recur (* n product) (dec n)))))", "user": "546c4c5fe4b00cfc9eacc178"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "546f81e3e4b00cfc9eacc1ae"}, {"problem": 42, "code": "(fn [n]\n  (loop [n n\n         r 1]\n    (if (<= n 1)\n      r\n      (recur (dec n) (* r n)))))", "user": "546ed28be4b00cfc9eacc1a5"}, {"problem": 42, "code": "(fn fact [x] (if (<= x 1) 1 (* x (fact (dec x)))))", "user": "546c1f73e4b00cfc9eacc175"}, {"problem": 42, "code": "(fn [n]\n  (reduce * 1 (range 1 (+ n 1))))", "user": "546d41bde4b00cfc9eacc18c"}, {"problem": 42, "code": "(fn [n]\n  (loop [fact 1\n         k 1]\n    (if (> k n)\n      fact\n      (recur (* k fact) (inc k)))))", "user": "545944a2e4b01be26fd74627"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "user": "541cf6dfe4b01498b1a71a7a"}, {"problem": 42, "code": "(fn [n]\n  (apply * (range 1 (inc n))))", "user": "5456e4e7e4b080a794c2c883"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5470699ae4b00cfc9eacc1b6"}, {"problem": 42, "code": "#(reduce * (map inc (range %)))", "user": "5472cba1e4b094393f72dd7a"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "53613db8e4b0243289761e41"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "54508859e4b0e397800069a3"}, {"problem": 42, "code": "(fn[n] (reduce * (range 1 (inc n))))", "user": "546fa7a7e4b00cfc9eacc1b1"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "54630cdae4b01be26fd746bb"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "547584d9e4b0c51c1f4d729b"}, {"problem": 42, "code": "(fn [x] \n   (loop [start 1 result 1]\n      (if (> start x)\n       result\n       (recur (inc start) (* result start))\n      )\n    )\n )", "user": "54696e4ce4b00cfc9eacc147"}, {"problem": 42, "code": "(fn [n]\n  (loop [iter n result 1]\n    (if (= 0 iter)\n      result\n      (recur (dec iter) (* result iter)))))", "user": "54734a0de4b0c51c1f4d727b"}, {"problem": 42, "code": "(fn fctr [x] (if (= x 1) 1 (* x (fctr (dec x)))))", "user": "545d5c3be4b01be26fd7466d"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "54684c3be4b00cfc9eacc139"}, {"problem": 42, "code": "#(apply * % (range 1 %))", "user": "5466aabbe4b01be26fd746e8"}, {"problem": 42, "code": "(fn fact [x]\n  (if (= x 1)\n    1\n    (* x (fact (dec x)))))", "user": "546e4ab8e4b00cfc9eacc19c"}, {"problem": 42, "code": "(fn factorial [x] (if (= 0 x) 1 (* x (factorial (dec x)))))", "user": "53703287e4b0fc7073fd6e8f"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5476d6cae4b0c51c1f4d72aa"}, {"problem": 42, "code": "(fn [n]\n  (loop [c n acc 1]\n    (if (= c 1) acc (recur (dec c) (* acc c)))))", "user": "5471f2fbe4b094393f72dd70"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "user": "5478c4fee4b0c51c1f4d72c0"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5479c58de4b0c51c1f4d72c7"}, {"problem": 42, "code": "(fn fac[n]\n  (if (= n 1)\n    1\n    (* n (fac (dec n)))))", "user": "5475d755e4b0c51c1f4d72a0"}, {"problem": 42, "code": "(fn fact [num] (if (= num 1) 1 (* num (fact (- num 1))) ))", "user": "5471f090e4b094393f72dd6e"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5470b3d0e4b00cfc9eacc1bb"}, {"problem": 42, "code": "(fn fact [n] (reduce * (map inc (range n)) ) )", "user": "54797964e4b0c51c1f4d72c6"}, {"problem": 42, "code": "#(apply * (range 1 (+ 1 %)))", "user": "5463fbbde4b01be26fd746ca"}, {"problem": 42, "code": "#(apply * (take (dec %) (iterate inc 2)))", "user": "51dfb9e2e4b01188f0627531"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5478e57de4b0c51c1f4d72c1"}, {"problem": 42, "code": "(fn [n] \n  (reduce * (range 1 (inc n))))", "user": "545f737ce4b01be26fd74688"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "535c2d21e4b04ce2eb3ed2b2"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (inc x))))", "user": "545b9dd9e4b01be26fd74654"}, {"problem": 42, "code": "#(loop [val 1\n        num %]\n   (if (> num 1)\n     (recur (* val num) (dec num))\n     val))", "user": "53a2e6abe4b0f1fc7453882f"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "517e9526e4b09104ecebe7e2"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "547adcb0e4b0c51c1f4d72cf"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "546e0c24e4b00cfc9eacc198"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "547d8e93e4b0c51c1f4d72f4"}, {"problem": 42, "code": "(fn [x] (loop [c 1\n               a 1]\n          (if (< x c)\n            a\n            (recur (inc c) (* a c)))))", "user": "547ad587e4b0c51c1f4d72ce"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "54357066e4b0b6b47310fcfd"}, {"problem": 42, "code": "(fn [x]\n  (apply * (take x (iterate dec x))))", "user": "547fbe01e4b0c51c1f4d7321"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "528c381ce4b0239c8a67aeb2"}, {"problem": 42, "code": "(fn [x] (loop [y x acc 1] (if (>= 1 y) acc (recur (dec y) (* acc y)))))", "user": "5466199ce4b01be26fd746e2"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "547d66a1e4b0c51c1f4d72f2"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "53ed1cb8e4b0d648e757f4be"}, {"problem": 42, "code": "#(apply * (range 1 (+ % 1)))", "user": "548018dbe4b0c51c1f4d732a"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "54764cf1e4b0c51c1f4d72a4"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "54577fefe4b01be26fd7460d"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (+ 1 n))))", "user": "54835682e4b0e286459a118e"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5483d59fe4b0e286459a1194"}, {"problem": 42, "code": "(fn [x]\n  (reduce * (range 1 (inc x))))", "user": "5484143de4b0e286459a1197"}, {"problem": 42, "code": "(fn [n]\n  (loop [f 1\n         x n]\n    (if (<= x 1)\n      f\n      (recur (* f x) (dec x)))))", "user": "5032748ae4b0e78df07b092f"}, {"problem": 42, "code": "#(reduce * (take-while (partial >= %) (iterate inc 1)))\n;(fn [n] (reduce * (take-while (partial >= n) (iterate inc 1))))", "user": "5470cb10e4b094393f72dd65"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "54852ad0e4b0e286459a11a7"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "54856d54e4b0e286459a11aa"}, {"problem": 42, "code": "(\n    fn [x]\n    (\n       reduce * (range 1 (inc x))\n      )\n    )", "user": "547f3434e4b0c51c1f4d7319"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "54848141e4b0e286459a119e"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "54857e3be4b0e286459a11ad"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "54802bd1e4b0e286459a1157"}, {"problem": 42, "code": "(fn factorial [n]\n  (loop [mul n\n         product 1]\n    (if (<= mul 1)\n      product\n      (recur (- mul 1) (* product mul)))))", "user": "542c026ae4b0dad94371f29a"}, {"problem": 42, "code": "(fn fact[x] (if (< 0 x) (* x (fact (dec x))) 1))", "user": "548485f5e4b0e286459a119f"}, {"problem": 42, "code": "(fn facto [n]\n  (if (<= n 1)\n    1\n    (* n (facto (- n 1)))))", "user": "547e3846e4b0c51c1f4d7302"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "513facf5e4b00f13ea1bd892"}, {"problem": 42, "code": "(fn fact [a] (if (= 1 a) a (* a (fact (dec a)))))", "user": "54750ca3e4b0c51c1f4d7294"}, {"problem": 42, "code": "(fn [n]\n    (loop [cnt n acc 1]\n       (if (zero? cnt)\n            acc\n          (recur (dec cnt) (* acc cnt))\n; in loop cnt will take the value (dec cnt)\n; and acc will take the value (* acc cnt)\n)))", "user": "543b9f8ce4b032a45b869332"}, {"problem": 42, "code": "(fn [x] (reduce (fn [old \n                      new]\n                  (* \n                  old  \n                   (inc new))) \n                   1 (range x)))", "user": "5463c452e4b01be26fd746c4"}, {"problem": 42, "code": "(fn f [n] (reduce * (range 1 (inc n))))", "user": "513f86dde4b00f13ea1bd88d"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5486adf7e4b0e286459a11be"}, {"problem": 42, "code": "(fn [n] (apply * (range 1 (+ n 1))))", "user": "54530382e4b0e397800069cc"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "5472d919e4b094393f72dd7b"}, {"problem": 42, "code": "(fn fact [n]\n  (reduce #(* %1 %2) (take n (iterate inc 1))))", "user": "5471f0f3e4b094393f72dd6f"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "54801febe4b0c51c1f4d733c"}, {"problem": 42, "code": "#(apply * % (range 1 %))", "user": "545281bce4b0e397800069c3"}, {"problem": 42, "code": "(fn i [n] (if (= n 1) 1 (* n (i (dec n)))))", "user": "54899701e4b0e286459a11ea"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5488872ee4b0e286459a11d3"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (+ n 1))))", "user": "5485b402e4b0e286459a11b0"}, {"problem": 42, "code": "(fn fact [n] \n  (if (= 0 n) 1\n      (* n (fact (dec n)))))", "user": "542b0592e4b0dad94371f286"}, {"problem": 42, "code": "#(reduce * (range 2 (inc %)))", "user": "535f9a5ce4b04ce2eb3ed2de"}, {"problem": 42, "code": "(fn [x] (apply * (range 1 (+ 1 x))))", "user": "52457931e4b08ba239308107"}, {"problem": 42, "code": "(fn fact\n  [number]\n  (loop [numbers 1\n         result 1]\n    (if (> numbers number)\n      result\n      (recur (inc numbers) (* numbers result)))))", "user": "54411506e4b032a45b869369"}, {"problem": 42, "code": "(fn fac [n] (apply * (range 1 (inc n))))", "user": "548af5b5e4b0e286459a11f8"}, {"problem": 42, "code": "#(apply * (vec (range % 1 -1)))", "user": "543823f1e4b032a45b869311"}, {"problem": 42, "code": "(fn [x] (nth (map second (iterate #(let [n (inc (first %))] [n (* n (second %))]) [1 1])) (dec x)))", "user": "54893618e4b0e286459a11e0"}, {"problem": 42, "code": "(fn [n] (apply * (range 1 (inc n))))", "user": "548c6673e4b0e286459a1209"}, {"problem": 42, "code": "(fn [a] (loop [x a y 1]\n   (if (zero? x)\n     y\n     (recur (dec x) (* y x)))))", "user": "548392fce4b0e286459a1191"}, {"problem": 42, "code": "(fn [x]\n  (loop [acc x i (- x 1)]\n    (if (= 0 i)\n      acc\n      (recur (* acc i) (- i 1)))))", "user": "52a803cee4b0c58976d9ac26"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "548cd813e4b0e286459a1211"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "548cd637e4b0e286459a1210"}, {"problem": 42, "code": "(fn [n]\n  (loop [cnt n acc 1]\n    (if (zero? cnt)\n      acc\n      (recur (dec cnt) (* acc cnt)))))", "user": "5188c249e4b0bdff0e072d54"}, {"problem": 42, "code": "#(letfn [(f [x] (if (= x 1) 1  (* x (f (- x 1)))))] (f %))", "user": "5485bc1be4b0e286459a11b1"}, {"problem": 42, "code": "(fn [n] (apply * (range 1 (inc n))))", "user": "542dc7c7e4b0dad94371f2bd"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "53f4c3d6e4b0db01ade6f9c5"}, {"problem": 42, "code": "(fn [x] (apply * (take x (range 1 (inc x)))))", "user": "54889b50e4b0e286459a11d4"}, {"problem": 42, "code": "(fn [x]\n  (loop [n x f 1]\n    (if (= n 1)\n      f\n      (recur (dec n) (* f n)))))", "user": "548204b2e4b0e286459a117a"}, {"problem": 42, "code": "#(loop [n % fac 1]\n    (println fac)\n    (if (< n 1)\n        fac\n        (recur (dec n) (* fac n))))", "user": "548f5086e4b0e286459a1239"}, {"problem": 42, "code": "(fn [x] \n  (reduce * (rest (range (+ x 1)))))", "user": "548f3ee4e4b0e286459a1237"}, {"problem": 42, "code": "(fn [start]\n  (loop [n start sum 1]\n    (if (= n 0)\n      sum\n      (recur (dec n) (* sum n)))))", "user": "534e60c2e4b084c2834f4ab2"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "539eb153e4b0ca733b97448e"}, {"problem": 42, "code": "(fn [n]\n  (apply * (range 1 (inc n))))", "user": "548fa2dfe4b0e286459a1240"}, {"problem": 42, "code": "(fn [q]\n  (loop [i q\n         accum 1]\n    (if (zero? i) accum\n      (recur (dec i) (* accum i)))))", "user": "54903056e4b0b312c081ff2e"}, {"problem": 42, "code": "(fn factorial\n  [number]\n  (loop [current number\n         result 1]\n    (if (zero? current)\n      result\n      (recur (dec current) (* result current)))))", "user": "548f19a8e4b0e286459a1231"}, {"problem": 42, "code": "(fn factorial\n  ([number] (factorial 1 number 1))\n  ([current max sum] (if (> current max) sum\n    (factorial (+ 1 current) max (* current sum)))))", "user": "548efcb6e4b0e286459a122a"}, {"problem": 42, "code": "(fn factorial [number]\n  (if (= number 1)\n    number\n    (* number (factorial (- number 1)))))", "user": "5491bebbe4b0b312c081ff3c"}, {"problem": 42, "code": "#(apply * % (range 2 %))", "user": "53bcdd41e4b0d9a98559a6c0"}, {"problem": 42, "code": "#(reduce * (range % 1 -1))", "user": "512b07f7e4b078b06821febb"}, {"problem": 42, "code": "#(cond (zero? %1) 1 :else (reduce * (range 1 (inc %1))))", "user": "51d26b0ae4b0d13b04db0d97"}, {"problem": 42, "code": "(fn foo [n]\n  (if (= n 1)\n    1\n    (* (foo (dec n)) n)))", "user": "5493ccbbe4b0b312c081ff50"}, {"problem": 42, "code": "(fn [n] (apply * (rest (range (+ n 1)))))", "user": "5280539ce4b0757a1b1713f3"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "536e5b68e4b0fc7073fd6e6d"}, {"problem": 42, "code": "(fn [x] (loop [m 1, x x] (if (> x 1) (recur (* m x) (dec x)) m)))", "user": "5492164ee4b0b312c081ff3e"}, {"problem": 42, "code": "(fn  [n]\n  (loop [i n sum 1] (if (= i 1) sum (recur (dec i) (* sum i)))))", "user": "5243e37ae4b076204b44fae3"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "549375e4e4b0b312c081ff4e"}, {"problem": 42, "code": "(fn [n]\n  (loop [n n\n         res 1]\n    (if (= 1 n)\n      res\n\t  (recur (dec n) (* res n)))))", "user": "548f37c7e4b0e286459a1234"}, {"problem": 42, "code": "(fn fact [n]\n        (if (<= n 1)\n          1\n          (* n (fact (dec n)))))", "user": "5455510fe4b0e397800069df"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "548c8115e4b0e286459a120c"}, {"problem": 42, "code": "(fn fac\n  [n]\n  (if (= n 0)\n    1\n    (* n (fac (dec n))\n  )))", "user": "54965534e4b0b312c081ff65"}, {"problem": 42, "code": "(fn [n] \n  (apply * (range 1 (inc n))))", "user": "53576356e4b04ce2eb3ed27a"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "534b57bbe4b084c2834f4a78"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "4f0d6686535d0136e6c22318"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "547e6fd2e4b0c51c1f4d730b"}, {"problem": 42, "code": "#(apply * (range 1 (+ % 1)))", "user": "53c83f94e4b00fb29b2212af"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "54975e99e4b0b312c081ff72"}, {"problem": 42, "code": "#(reduce * (range 1N (inc %)))", "user": "54926752e4b0b312c081ff44"}, {"problem": 42, "code": "nth (map second (iterate (fn [[n acc]] [(inc n) (* acc n)]) [1 1]))", "user": "548ade6de4b0e286459a11f6"}, {"problem": 42, "code": "(fn fact [x]\n  (if (= x 1)\n    1\n    (* x (fact(dec x)))))", "user": "543b12cce4b032a45b86932a"}, {"problem": 42, "code": "#(apply * (range % 0 -1))", "user": "549c3e0ce4b0f3d1d8e70f87"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (take n (drop 1 (range))))\n)", "user": "54996971e4b0b312c081ff8d"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "549c22f7e4b0f3d1d8e70f86"}, {"problem": 42, "code": "(fn eh [x]\n  (cond\n   (= x 1) 1\n   :else (* x (eh (- x 1)))))", "user": "549c8bbde4b0f3d1d8e70f8c"}, {"problem": 42, "code": "#(apply * (range  1 (inc%)))", "user": "540217e1e4b0df28a13c62cb"}, {"problem": 42, "code": "(fn factorial [n]\n  (reduce * (range 1 (inc n))))", "user": "548018d1e4b0c51c1f4d7326"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "549e5e52e4b0f3d1d8e70f9e"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "549a999be4b0f3d1d8e70f6f"}, {"problem": 42, "code": "#(apply * (take-while pos? (iterate dec %)))", "user": "5499e23de4b03163384f4706"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "549def9ce4b0f3d1d8e70f99"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (+ x 1))))", "user": "54a01870e4b0f3d1d8e70fb4"}, {"problem": 42, "code": "#(reduce * 1 (range 2 (inc %)))", "user": "549c1713e4b0f3d1d8e70f82"}, {"problem": 42, "code": "#(if (= % 0) 1 (reduce * (range 1 (+ % 1))))", "user": "54769c7ae4b0c51c1f4d72a8"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "53053be9e4b0d8b024fd375b"}, {"problem": 42, "code": "#(reduce * 1 (range 2 (+ % 1)))", "user": "549eb44fe4b0f3d1d8e70fa6"}, {"problem": 42, "code": "(fn fact [x] \n  (if (= x 1)\n    1\n    (* x (fact (- x 1)))))", "user": "548f11a0e4b0e286459a122d"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "549a176ce4b0f3d1d8e70f69"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "549cd548e4b0f3d1d8e70f91"}, {"problem": 42, "code": "(fn [n]\n  (apply * (range 1 (inc n))))\n  \n;#(apply * (range 1 (inc %)))\n\n;(fn [n]\n;  (apply * (range 1 (inc n))))", "user": "5487eb1de4b0e286459a11ca"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "54908cc1e4b0b312c081ff32"}, {"problem": 42, "code": "(fn factorial [n]\n  (reduce (fn [x acc] (* x acc)) (range 1 (+ 1 n))))", "user": "52b9e920e4b07a9af57922c9"}, {"problem": 42, "code": "(fn fc [n]\n  (if (<= n 1)\n    1\n    (* n (fc (dec n)))))", "user": "549dd591e4b0f3d1d8e70f98"}, {"problem": 42, "code": "(fn [c] \n  (apply * \n   (take c (iterate #(inc %) 1))\n   )\n  )", "user": "54a1d643e4b09f271ff37c50"}, {"problem": 42, "code": "(fn my-factorial [n]\n  (if (= n 1)\n    1\n    (* n (my-factorial (dec n)))))", "user": "54a31fdae4b09f271ff37c64"}, {"problem": 42, "code": "(fn [n] (reduce #(* %1 %2) (range 1 (inc n))))", "user": "545b0275e4b01be26fd74648"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "54a70af9e4b09f271ff37c93"}, {"problem": 42, "code": "(fn [x]\n  (loop [sum 1 ct 1]\n    (if (> ct x)\n      sum\n      (recur (* sum ct) (+ ct 1)))))", "user": "532902f8e4b09d4e7a9b550e"}, {"problem": 42, "code": "(fn f [a] (if (= a 0) 1 (* a (f (- a 1)))))", "user": "505006d7e4b0a02f9cffdeaf"}, {"problem": 42, "code": "(fn [n] (apply * (range 1 (inc n))))", "user": "54a7336be4b09f271ff37c95"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "54a677a9e4b09f271ff37c88"}, {"problem": 42, "code": "(fn fact [n] (if (<= n 1) 1 (* n (fact (dec n)))))", "user": "4ea03f70535d7eef308072a1"}, {"problem": 42, "code": "(fn [n]                                                                                                                                                                                                   \n  (apply * (range 1 (inc n))))", "user": "53403f42e4b085b17e897da8"}, {"problem": 42, "code": "(\n  fn f [x] \n    (\n      if (= x 0) 1 (* x (f (- x 1)))\n    )\n)", "user": "54a7efdee4b09f271ff37c9d"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "54a7d707e4b09f271ff37c9b"}, {"problem": 42, "code": "#(apply * (range 1 (+ %1 1)))", "user": "5488537be4b0e286459a11cf"}, {"problem": 42, "code": "#( reduce * (range 1 (inc %) ) )", "user": "54874116e4b0e286459a11c3"}, {"problem": 42, "code": "(fn fact [n]\n  (let [nums (rest (range (+ 1 n)))]\n    (reduce * nums)))", "user": "54a70484e4b09f271ff37c91"}, {"problem": 42, "code": "(fn fac [n] (if (= n 0) 1 (* n (fac (- n 1)))))", "user": "547884d7e4b0c51c1f4d72bd"}, {"problem": 42, "code": "(fn fak [x]\n  (if (> x 1)\n    (* x (fak (dec x)))\n    1\n  )\n)", "user": "54982522e4b0b312c081ff7c"}, {"problem": 42, "code": "#(->> % inc (range 1) (apply *))", "user": "50aa777fe4b056ee01935866"}, {"problem": 42, "code": "#(apply * (range 1 (+ 1 %)))", "user": "4fabbd3ee4b081705acca21e"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "52e12ac5e4b09f7907dd141a"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "54ab6773e4b09f271ff37cc8"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "549ac3cde4b0f3d1d8e70f71"}, {"problem": 42, "code": "(fn [x]\n  (loop [n x t 1]\n    (if (= n 1)\n      t\n      (recur (- n 1) (* t n))\n    )\n  )  \n)", "user": "54aa373de4b09f271ff37cb6"}, {"problem": 42, "code": "(fn fact [n] (if (> n 1) (* n (fact (- n 1))) 1))", "user": "54a854f5e4b09f271ff37ca2"}, {"problem": 42, "code": "(fn fac[x] (case x\n             0 0\n             1 1\n             (* x (fac (dec x)))\n             )\n  )", "user": "54ab46fee4b09f271ff37cc3"}, {"problem": 42, "code": "#(apply * (range 1 (inc %1)))", "user": "515b03fee4b0a102a3e5262a"}, {"problem": 42, "code": "(fn f [x] (if (= x 0) 1 (* x (f (dec x)))))", "user": "54addba9e4b09f271ff37ce9"}, {"problem": 42, "code": "(fn [x] (apply * (range 1 (+ x 1))))", "user": "54ab99f6e4b09f271ff37ccd"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "54b13dbce4b09f271ff37d1c"}, {"problem": 42, "code": "(fn [x] \n  (reduce * (take x (iterate inc 1))))", "user": "520ed237e4b0101e4be6fcd9"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "54ad9d76e4b09f271ff37ce6"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "540459bfe4b0addc1aec6656"}, {"problem": 42, "code": "#(apply * (rest (range (inc %))))", "user": "54af6fb0e4b09f271ff37d08"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "54b13a40e4b09f271ff37d1b"}, {"problem": 42, "code": "(fn [n]\n  (loop [n n acc 1]\n    (if (= n 1)\n      acc\n      (recur (dec n) (* n acc)))))", "user": "54ad4863e4b09f271ff37ce0"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "549cc867e4b0f3d1d8e70f8f"}, {"problem": 42, "code": "#(\n   \n\treduce * (rest (range (+ %1 1)))\n   \n)", "user": "54897284e4b0e286459a11e6"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "52a267c6e4b04e0c58e87bef"}, {"problem": 42, "code": "#(loop [x %\n        multiplier 1]\n    (if (<= x 1)\n      multiplier\n      (recur (dec x) (* multiplier x))))", "user": "528e441be4b0239c8a67aed8"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "53e88247e4b036ad0777e489"}, {"problem": 42, "code": "(fn [n]\n   (loop [acc 1\n          x n]\n    (if (= 1 x)\n      acc\n      (recur (* acc x) (dec x)))))", "user": "54af220ce4b09f271ff37d02"}, {"problem": 42, "code": "(fn f [x]\n  (if (= x 0) 1 (* x (f (- x 1)))))", "user": "54ab502fe4b09f271ff37cc4"}, {"problem": 42, "code": "#(apply * (range 1 (+ 1 %)))", "user": "53e3e353e4b036ad0777e406"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "54ae541ae4b09f271ff37cef"}, {"problem": 42, "code": "#(reduce *(range 1(inc %1)))", "user": "5481be5fe4b0e286459a1172"}, {"problem": 42, "code": "(fn [i]\n  (reduce * (range 1 (inc i))))", "user": "54a1d047e4b09f271ff37c4f"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "54800885e4b0c51c1f4d7323"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "53e8e42ce4b036ad0777e48e"}, {"problem": 42, "code": "(fn [i]\n   (loop [r 1 n i]\n     (if (= n 1)\n       r\n       (recur (* r n) (dec n))\n       ))\n   )", "user": "54b5b3cce4b05787c3b163ab"}, {"problem": 42, "code": "#(reduce * (range 1  (inc %)))", "user": "505d1b01e4b0e6aca564be04"}, {"problem": 42, "code": "#(reduce * (map inc (range %)))", "user": "54b2ec84e4b09f271ff37d33"}, {"problem": 42, "code": "#(reduce \n  (fn [f n] (* (+ 1 n) f))\n  1\n  (range %))", "user": "5463c824e4b01be26fd746c5"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "54b448f2e4b05787c3b1638e"}, {"problem": 42, "code": "(fn [n]\n    (loop [cnt n acc 1]\n       (if (zero? cnt)\n            acc\n          (recur (dec cnt) (* acc cnt)))))", "user": "54898297e4b0e286459a11e7"}, {"problem": 42, "code": "(fn [amount]\n  (reduce * (for [x (range 1 (inc amount))] x)))", "user": "54b2d392e4b09f271ff37d2f"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "50b42cbbe4b001349b2f4abe"}, {"problem": 42, "code": "#(reduce * 1 (rest (range (inc %))))", "user": "54acf5c7e4b09f271ff37cdd"}, {"problem": 42, "code": "#(apply * (take % (iterate inc 1)))", "user": "54b45938e4b05787c3b1638f"}, {"problem": 42, "code": "(fn foo [x] (if (> x 1) (* (foo (dec x)) x) x))", "user": "548a3dc6e4b0e286459a11f2"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "54bad522e4b0ed20f4ff6eb8"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "53e92f82e4b036ad0777e49d"}, {"problem": 42, "code": "(fn[x](loop [result x fac (- x 1)]\n(if(= fac 0) result\n(recur (* result   fac) (- fac 1)))))", "user": "54bbb7dee4b0ed20f4ff6ec1"}, {"problem": 42, "code": "(fn [x]\n  (reduce * (range 1 (inc x))))", "user": "541df619e4b01498b1a71a87"}, {"problem": 42, "code": "(fn fact[i] \n  (if (or (= i 1) (= i 0))\n    1\n    (* (fact (- i 1)) i)))", "user": "54b6c24be4b0ed20f4ff6e7c"}, {"problem": 42, "code": "#(reduce * (rest (range (inc %))))", "user": "525b142fe4b0cb4875a45d05"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "54bd04e7e4b0ed20f4ff6ed8"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "54543484e4b0e397800069d4"}, {"problem": 42, "code": "(fn fact [n] (reduce * (range 1 (inc n))))", "user": "54b04708e4b09f271ff37d11"}, {"problem": 42, "code": "(fn factorial[n]\n      (if (= 0 n)\n        1   \n        (* n (factorial (- n 1)))\n        )   \n      )", "user": "54b90836e4b0ed20f4ff6e9d"}, {"problem": 42, "code": "(fn fc [n] (if (zero? n) 1 (* n (fc (dec n)))))", "user": "54b972bbe4b0ed20f4ff6ead"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "54bec835e4b0ed20f4ff6ef7"}, {"problem": 42, "code": "#(reduce * (rest (range (+ % 1))))", "user": "54be7772e4b0ed20f4ff6eea"}, {"problem": 42, "code": "#(apply *\n  (-> (+ % 1) (range) (rest)))", "user": "54bd91d7e4b0ed20f4ff6ee2"}, {"problem": 42, "code": "(fn f [n] (if (> n 1) (* n (f (dec n))) 1))", "user": "54bc575ce4b0ed20f4ff6ecb"}, {"problem": 42, "code": "(fn fak[i]\n  (if (= i 1)\n  \t1\n    (* i (fak (dec i)))\n  )\n  )", "user": "54bbba99e4b0ed20f4ff6ec2"}, {"problem": 42, "code": "(fn fac [a] (if (= a 1) 1 (* a (fac (- a 1)))))", "user": "54b95f3de4b0ed20f4ff6eab"}, {"problem": 42, "code": "(fn f[x]\n  (if (< x 1)\n    1\n    (* x (f (dec x)))))", "user": "54b10d08e4b09f271ff37d18"}, {"problem": 42, "code": "#(reduce * (->> (inc %) (range 1)))", "user": "540705f0e4b0addc1aec66b1"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "54bfc88ae4b0ed20f4ff6f09"}, {"problem": 42, "code": "#(apply * (range 1 (+ 1 %)))", "user": "54a73c1fe4b09f271ff37c96"}, {"problem": 42, "code": "(fn fac [n] (\n  \tif(= 1 n) 1 (* n (fac (- n 1)))           \n))", "user": "54c0ce91e4b0ed20f4ff6f18"}, {"problem": 42, "code": "(fn fact [n]\n  (apply * (take-while pos? (iterate dec n))))", "user": "4f030cff535dcb61093f6a4d"}, {"problem": 42, "code": "(fn fac\n  ([in] (fac in 1))\n  ([in out]\n   (if (= in 0)\n     out\n     (fac (- in 1) (* out in)))))", "user": "54b2e881e4b09f271ff37d32"}, {"problem": 42, "code": "(fn [x] (apply * (range 1 (inc x))))", "user": "54c23252e4b045293a27f5fc"}, {"problem": 42, "code": "#(apply * (range 1 (inc %) 1))", "user": "5339b53fe4b0e30313ee6cac"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "53ff602fe4b0de5c418485ff"}, {"problem": 42, "code": "(fn\n  [n]\n  (reduce * (take n (iterate inc 1))))", "user": "548db64ce4b0e286459a121c"}, {"problem": 42, "code": "(fn [x]\n\t((fn [x acc] \n  \t\t(if (<= x 1)\n    \t\tacc\n    \t\t(recur (- x 1) (* acc x))\n  \t\t\t)\n  \t\t) x 1)\n  \t)", "user": "54c3e8cee4b045293a27f614"}, {"problem": 42, "code": "(fn [n] (->> n inc (range 1) (reduce *)))", "user": "4e435681535dc968683fc4a1"}, {"problem": 42, "code": "(fn [n]\n  (loop [x n\n         acc 1]\n    (if (<= x 0)\n      acc\n      (recur (dec x) (* acc x)))))", "user": "510fe537e4b04c71fce993dd"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "54c31f1be4b045293a27f609"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "54c11fdae4b0ed20f4ff6f1b"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "54c19050e4b0ed20f4ff6f26"}, {"problem": 42, "code": "(fn fact [n]\n  (loop [counter n result 1]\n    (if (<= counter 1)\n      result\n      (recur (dec counter) (* result counter)))))", "user": "54bd3aefe4b0ed20f4ff6edb"}, {"problem": 42, "code": "#(reduce * (rest (range (inc %))))", "user": "54c271b9e4b045293a27f602"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "54c165e9e4b0ed20f4ff6f23"}, {"problem": 42, "code": "#(apply * (vec (range 1 (+ 1 %))))", "user": "51e8ee6be4b07cae92c04bfd"}, {"problem": 42, "code": "#(apply * (cons % (range 1 %)))", "user": "5235493ee4b05e80434a5064"}, {"problem": 42, "code": "#(apply * (range 1 (+ % 1)))", "user": "535774c2e4b04ce2eb3ed27c"}, {"problem": 42, "code": "(fn f [n] (->> (range n)\n                 (map inc)\n                 (apply *)))", "user": "5493d908e4b0b312c081ff52"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "54aa665fe4b09f271ff37cb8"}, {"problem": 42, "code": "(fn [x] (apply * (range 1 (inc x))))", "user": "54bbe505e4b0ed20f4ff6ec5"}, {"problem": 42, "code": "(fn fact [x] (if (= x 1) 1 (* x (fact (dec x)))))", "user": "546692aee4b01be26fd746e7"}, {"problem": 42, "code": "#(reduce * (map inc (range %)))", "user": "54bc539be4b0ed20f4ff6eca"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "548b8a50e4b0e286459a11ff"}, {"problem": 42, "code": "(fn [n]\n  (loop [cnt n acc 1]\n    (if (= cnt 0)\n      acc\n      (recur (dec cnt) (* cnt acc)))))", "user": "54bebeb9e4b0ed20f4ff6ef4"}, {"problem": 42, "code": "(fn fact [n]\n  (if (= n 0)\n    1\n    (* n (fact (dec n)))\n  )\n)", "user": "54c82b27e4b045293a27f645"}, {"problem": 42, "code": "(fn fac [n] (if (zero? n) 1 (* n (fac (dec n)))))", "user": "54c8d4a8e4b045293a27f654"}, {"problem": 42, "code": "(fn factorial\n  [x]\n  (reduce * (range 1 (inc x))))", "user": "5422c959e4b01498b1a71ac7"}, {"problem": 42, "code": "(fn b [s x]\n  (if (= x 0)\n    s\n    (b (* s x) (- x 1)))) 1", "user": "50d0d2dde4b00b15ecee9768"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "54b8dfece4b0ed20f4ff6e9a"}, {"problem": 42, "code": "(fn [n] \n  (loop [x 1 \n         res 1] \n  \t(if (> x n)\n\t\tres\n\t\t(recur (inc x) (* res x)))))", "user": "54c169ade4b0ed20f4ff6f24"}, {"problem": 42, "code": "(fn fact [x] \n  (cond \n   (= x 1) 1\n   true (* x (fact (- x 1)))))", "user": "4f580a9fe4b0a7574ea71844"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "user": "53bc10f5e4b047364c04450d"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "54c97cb3e4b045293a27f677"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "54c9636fe4b045293a27f66e"}, {"problem": 42, "code": "[0 1 0 6 0 120 0 0 40320]", "user": "54b7f217e4b0ed20f4ff6e8f"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "53838b9ee4b06839e8705ee1"}, {"problem": 42, "code": "#(reduce * (rest (range (+ 1 %))))", "user": "54c9f165e4b045293a27f687"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "user": "54be792ee4b0ed20f4ff6eeb"}, {"problem": 42, "code": "#(reduce * (take % (iterate inc 1)))", "user": "5432df22e4b0dad94371f2f5"}, {"problem": 42, "code": "(fn fact [n]\n  (if (= n 1)\n    1\n    (* n (fact (dec n)))))", "user": "54c13b87e4b0ed20f4ff6f20"}, {"problem": 42, "code": "(fn factorial [n]\n  (if (= 0 n)\n    1\n    (* n (factorial (dec n))))\n  (reduce * (map inc (range n))))", "user": "54ca9ca8e4b057c6fda3a265"}, {"problem": 42, "code": "(comp (partial reduce *) (partial range 1) inc)", "user": "54cbe00ee4b057c6fda3a285"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "53e73fe3e4b036ad0777e478"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "54c641f8e4b045293a27f628"}, {"problem": 42, "code": "(fn [x]\n        ((fn [n so_far]\n          (if (<= n 1)\n              so_far\n              (recur (dec n) (* so_far n)))) x 1))", "user": "5461500be4b01be26fd7469f"}, {"problem": 42, "code": "#(loop [cnt % acc 1]\n   (if (zero? cnt) \n     acc\n     (recur (dec cnt) (* cnt acc))))", "user": "54cbb0fde4b057c6fda3a27b"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "54bc6c75e4b0ed20f4ff6ed0"}, {"problem": 42, "code": "(fn fac [n] (if (= 0 n) 1  (* n (fac (- n 1)))))", "user": "4f577f25e4b0a7574ea71839"}, {"problem": 42, "code": "#(apply * (range % 0 -1))", "user": "54c97a56e4b045293a27f676"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))\n\n;(fn fac [x]\n;  (loop [cnt x result 1]\n;  (if (= 1 cnt) result\n;    (recur (dec cnt) (* result cnt)))))", "user": "546a6e9fe4b00cfc9eacc157"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "541b1f25e4b01498b1a71a63"}, {"problem": 42, "code": "#(reduce * (take % (iterate dec %)))", "user": "54cc4156e4b057c6fda3a28c"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "4fc4eb1ee4b081705acca354"}, {"problem": 42, "code": "(fn [n] (reduce #(* %1 %2) 1 (range 1 (inc n))))", "user": "54c05fd7e4b0ed20f4ff6f12"}, {"problem": 42, "code": "(fn fact [x] (if (> x 1) (* (fact (dec x)) x) x))", "user": "54be3ab6e4b0ed20f4ff6ee7"}, {"problem": 42, "code": "#(apply * (range 1 (inc %1)))", "user": "4e6f4cbc535d5021c1a8961a"}, {"problem": 42, "code": "(fn fact [n] (if (= 1 n) n (* n (fact (- n 1)))))", "user": "54c9e00be4b045293a27f683"}, {"problem": 42, "code": "(fn [x] (apply * (take x (iterate inc 1))))", "user": "54d03026e4b018d918be98de"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "545ddac3e4b01be26fd74676"}, {"problem": 42, "code": "(fn fact [n] (if (> n 0) (* n (fact (- n 1))) 1))", "user": "54cb3497e4b057c6fda3a272"}, {"problem": 42, "code": "(fn f [n]\n  (if (= n 1) 1\n    (* n (f (dec n)))))", "user": "54ce3790e4b057c6fda3a2ab"}, {"problem": 42, "code": "(fn factorial\n  [n]\n  (if\n    (= n 1)\n    n\n    (* n (factorial (- n 1)))))", "user": "54d267e0e4b0e8a36923e5f3"}, {"problem": 42, "code": "(fn my-fac\n  [x]\n  (if (= x 1)\n    1\n    (* x (my-fac (- x 1)))))", "user": "54d000c7e4b018d918be98d7"}, {"problem": 42, "code": "(fn [x] (apply * (range 1 (inc x))))", "user": "54d2b411e4b0e8a36923e5f9"}, {"problem": 42, "code": "(fn fact [n] (if (zero? n) 1 (* n (fact (dec n)))))", "user": "54b07c1ee4b09f271ff37d16"}, {"problem": 42, "code": "(fn [x] (letfn [(fact [acc x] (if (<= x 1) acc (fact (* acc x) (dec x))))] (fact 1 x)))", "user": "54cd651be4b057c6fda3a2a2"}, {"problem": 42, "code": "(fn fac [n]\n   (if (= n 1)\n     1\n     (* n (fac (dec n)))))", "user": "54d26316e4b0e8a36923e5f2"}, {"problem": 42, "code": "(fn [n]\n  (loop [sum 1\n        nn n]\n    (if (<= nn 1)\n      sum\n      (recur (* sum nn) (dec nn))\n    )\n  )\n)", "user": "54d35746e4b0e8a36923e606"}, {"problem": 42, "code": "(fn [x] (loop [i x a 1] (if (> i 0) (recur (dec i) (* a i)) a)))", "user": "54d0e6c5e4b0e8a36923e5d4"}, {"problem": 42, "code": "(fn [end] (apply * (range 1 (inc end))))", "user": "54cad2d5e4b057c6fda3a26c"}, {"problem": 42, "code": "(fn [x]\n  (loop [n x out 1]\n    (if (= n 1)\n      out\n      (recur (dec n) (* out n)))))", "user": "5447e5b7e4b032a45b8693c4"}, {"problem": 42, "code": "(fn fact [x]\n  (if (= 1 x)\n    1\n    (* x (fact (- x 1)))))", "user": "54d468d0e4b0a52adc2e2000"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "54c6619ae4b045293a27f62b"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "54cc26c1e4b057c6fda3a28a"}, {"problem": 42, "code": "(fn [fac] (reduce * (map inc (range fac))))", "user": "54b402dce4b05787c3b16388"}, {"problem": 42, "code": "(fn [n] (apply * (range 1 (inc n))))", "user": "54d6f22de4b0a52adc2e2023"}, {"problem": 42, "code": "(fn [n] (reduce * 1 (rest (range (+ n 1)))))", "user": "541d3c0fe4b01498b1a71a7e"}, {"problem": 42, "code": "(fn x [n] (* n (if (pos? (dec n)) (x (dec n)) 1)))", "user": "538fe171e4b0b51d73faae92"}, {"problem": 42, "code": "(fn foo [n]\n  (if (= 1 n)\n    1\n    (* n (foo (dec n)))))", "user": "54d753ebe4b0a52adc2e2029"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (+ 1 %)))", "user": "54725331e4b094393f72dd76"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "54d70f40e4b0a52adc2e2027"}, {"problem": 42, "code": "#(apply * (range 1 (inc %1)))", "user": "54d7ed8de4b0a52adc2e2034"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "54361d92e4b032a45b8692f7"}, {"problem": 42, "code": "(fn [x]\n  (->> (range 1 (inc x))\n      (apply *)))", "user": "54d412e2e4b0a52adc2e1ffe"}, {"problem": 42, "code": "#(reduce * (take % (iterate inc 1)))", "user": "54c5cc17e4b045293a27f624"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "53f31dafe4b0742d9025b0f0"}, {"problem": 42, "code": "(fn [i]\n  (loop [n i\n         acc 1]\n    (if (= 1 n)\n      acc\n      (recur (dec n) (* acc n)))))", "user": "54d492dbe4b0a52adc2e2001"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "4ec66e84535d6d7199dd36cd"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "54d1cf2ee4b0e8a36923e5eb"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "54c54d7ce4b045293a27f622"}, {"problem": 42, "code": "(fn f [x] (if (> x 1) (* x (f (dec x))) x))", "user": "54dbcbbde4b024c67c0cf774"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "4ee7d6d8535d93acb0a66870"}, {"problem": 42, "code": "(fn [n] \n  (reduce * (range 1 (inc n)))\n  )", "user": "54ccf107e4b057c6fda3a294"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "54d6c80ce4b0a52adc2e2020"}, {"problem": 42, "code": "(fn ([n] (reduce * (take n (iterate inc 1)))))", "user": "54d8cc38e4b0a52adc2e203e"}, {"problem": 42, "code": "(fn factorial [n]\n  (if (= n 0)\n    1\n    (* n (factorial (dec n)))))", "user": "5215661be4b02f6d8ea676c7"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "54dd76c8e4b024c67c0cf794"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "54d4b3a7e4b0a52adc2e2003"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5286a2a9e4b0239c8a67ae1e"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "54ddb556e4b024c67c0cf798"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "54d4ba98e4b0a52adc2e2004"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "54db8ddae4b024c67c0cf767"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "53ba41c2e4b047364c0444f3"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "54db33f1e4b024c67c0cf75d"}, {"problem": 42, "code": "(fn [n]\n  (apply * (range 1 (+ n 1))))", "user": "540d0087e4b0addc1aec670b"}, {"problem": 42, "code": "(fn [x] (reduce #(* %1 %2) 1 (range 1 (inc x))))", "user": "5458474ce4b01be26fd7461b"}, {"problem": 42, "code": "(fn f [n] (if (< n 2) 1 (-> n dec f (* n))))", "user": "5066003ee4b0313a384e5647"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "54dae16de4b024c67c0cf758"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "543c5200e4b032a45b86933e"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "54df2609e4b024c67c0cf7a9"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "54c72b19e4b045293a27f636"}, {"problem": 42, "code": "#(reduce * (rest (range (inc %))))", "user": "54b6aaa2e4b0ed20f4ff6e7a"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "54c8eb61e4b045293a27f658"}, {"problem": 42, "code": "(fn [n]\n  (apply * (take-while #(> % 0) (iterate dec n))))", "user": "54d70bbfe4b0a52adc2e2026"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "54e3df6ae4b024c67c0cf7e3"}, {"problem": 42, "code": "(fn fac [x]\n  (if (= x 1)\n    1\n    (* x (fac (dec x)))))", "user": "54d2892fe4b0e8a36923e5f7"}, {"problem": 42, "code": "#(reduce * (map inc (range %1)))", "user": "54b5ce67e4b05787c3b163ac"}, {"problem": 42, "code": "(fn fact [x] (if (= 1 x) 1 (* x (fact (dec x)))))", "user": "54d5fbe9e4b0a52adc2e2014"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "54d104a5e4b0e8a36923e5d9"}, {"problem": 42, "code": "(fn [x] (apply * (take x (iterate inc 1))))", "user": "54b83ae9e4b0ed20f4ff6e95"}, {"problem": 42, "code": "(fn factorial \n  [n]\n (cond\n    (< n 1) 1\n    :else (* n  (factorial (dec n)))\n  )\n)", "user": "547b4ec6e4b0c51c1f4d72d5"}, {"problem": 42, "code": "#(reduce (fn [sum el] (* sum el)) 1 (take % (iterate inc 1)))", "user": "54b331dbe4b09f271ff37d37"}, {"problem": 42, "code": "#(loop [result 1 x %] ( if (= x 1) result (recur (* result x) (dec x) )))", "user": "54e4edcae4b024c67c0cf7f3"}, {"problem": 42, "code": "(fn\n  [in]\n  (loop [x in, i in]\n    (cond\n     (= x 1) i\n     (= x 0) (* i 1)\n     :else (recur (dec x) (* i (dec x))))))", "user": "54e79094e4b024c67c0cf818"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "54ca130ce4b057c6fda3a250"}, {"problem": 42, "code": "(fn fac [x] (if (zero? x) 1 (* x (fac (dec x)))))", "user": "549a1fede4b0f3d1d8e70f6a"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "54da46e5e4b024c67c0cf753"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "54e85a7fe4b024c67c0cf823"}, {"problem": 42, "code": "#(reduce * (rest (range (inc %))))", "user": "54e3bd3fe4b024c67c0cf7e0"}, {"problem": 42, "code": "(fn fac [n]\n  (if (= n 0) 1 (* n (fac (- n 1)))))", "user": "54e6762be4b024c67c0cf809"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "54e32090e4b024c67c0cf7d9"}, {"problem": 42, "code": "(fn fact\n  ([n]\n   (if (> n 1)\n     (fact (* n (- n 1)) (- n 1))\n     1\n   )\n  )\n  ([acc n]\n   (if (> n 1)\n     (fact (* acc (- n 1)) (- n 1))\n     acc\n   )\n  )\n)", "user": "54e5bdf2e4b024c67c0cf7fe"}, {"problem": 42, "code": "(fn f [n] (if (= n 0) 1 (* (f (dec n)) n)))", "user": "54e2a779e4b024c67c0cf7d3"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "54e51c7be4b024c67c0cf7f7"}, {"problem": 42, "code": "(fn [x] (reduce * (map inc (range x))))", "user": "54e345a1e4b024c67c0cf7db"}, {"problem": 42, "code": "(fn\n  [n]\n  (reduce * (range 1 (inc n))))", "user": "54cbde61e4b057c6fda3a284"}, {"problem": 42, "code": "(fn [x] (reduce * (rest (range (+ x 1)))))", "user": "54eb97c8e4b024c67c0cf84d"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5480cce5e4b0e286459a115f"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "54df3c94e4b024c67c0cf7aa"}, {"problem": 42, "code": "#(loop [i 1 r 1](if (> i %)r (recur (inc i)(* i r))))", "user": "54e19a26e4b024c67c0cf7c6"}, {"problem": 42, "code": "(fn [x](reduce * (range 1 (inc x))))", "user": "54ecd7dde4b024c67c0cf85c"}, {"problem": 42, "code": "(fn factorial [num]\n  (loop [num num\n         acc 1]\n    (if (zero? num)\n      acc\n      (recur (dec num)\n             (* acc num)))))", "user": "53c69ebce4b00fb29b22129c"}, {"problem": 42, "code": "(fn fact [x] (if (= 0 x) 1 (* x (fact (- x 1)))))", "user": "518ba795e4b0f028e99addf0"}, {"problem": 42, "code": "#(reduce * (drop 1 (range (+ 1 %))))", "user": "54e5dc08e4b024c67c0cf800"}, {"problem": 42, "code": "#(loop [n % f 1] (if (= n 1) f (recur (dec n) (* f n))))", "user": "54215735e4b01498b1a71ab2"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "4ec1923f535dfed6da9c6db2"}, {"problem": 42, "code": "(fn m [n] (if (= n 1) 1 (* n (m (dec n)))) )", "user": "54edcf96e4b024c67c0cf866"}, {"problem": 42, "code": "#(apply * (map inc (range %)))", "user": "54cbc9ede4b057c6fda3a27f"}, {"problem": 42, "code": "#(reduce * (drop 1 (range (inc %))))", "user": "54caaa48e4b057c6fda3a267"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "53d9e587e4b0e771c302547c"}, {"problem": 42, "code": "(fn factorial [n]\n  (if (= n 1)\n    1\n    (* n (factorial (dec n)))))", "user": "54a6baaee4b09f271ff37c8a"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "54df7922e4b024c67c0cf7ad"}, {"problem": 42, "code": "(fn [n]\n (reduce * (range 1 (+ n 1))))", "user": "546ff835e4b00cfc9eacc1b4"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "54f0d3fde4b024c67c0cf8a6"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "4f598c87e4b0030a34fb2ada"}, {"problem": 42, "code": "(fn fac [n]\n  (if (= n 1)\n    1\n    (* n (fac (dec n))))\n  )", "user": "546a6c7ce4b00cfc9eacc154"}, {"problem": 42, "code": "#(->> % inc (range 1) (reduce *))", "user": "504e2d18e4b0f6ff3350c47a"}, {"problem": 42, "code": "(partial (fn [fact n] (if (>= 1 n) fact (recur (* fact n) (dec n)))) 1)", "user": "54f2fe9fe4b050824f58f5b8"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (+ n 1))))", "user": "54f4e286e4b0f2f3c5226e8c"}, {"problem": 42, "code": "(fn [i] (reduce * (range 1 (inc i))))", "user": "5498e155e4b0b312c081ff86"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "54e606c3e4b024c67c0cf803"}, {"problem": 42, "code": "(fn fact [x] (apply * (range 1 (inc x))))", "user": "54ecd716e4b024c67c0cf85a"}, {"problem": 42, "code": "(fn factorial [n]\n  (loop [acc 1 cnt 0]\n    (if (= cnt n) acc (recur (* acc (inc cnt)) (inc cnt)))))", "user": "54f1b4e7e4b024c67c0cf8b5"}, {"problem": 42, "code": "(fn [x] (apply * (range 1 (inc x))))", "user": "54f64e99e4b0f2f3c5226ea4"}, {"problem": 42, "code": "(fn [n]\n  (loop[res n i 1]\n    (if (zero? n)\n      1\n      (if (< i n)\n        (recur (* res i) (inc i))\n        res))))", "user": "54e1197fe4b024c67c0cf7c0"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "54eca495e4b024c67c0cf855"}, {"problem": 42, "code": "(fn factorial[n]\n  (if (<= n 1) 1\n    (* n (factorial (dec n)))))", "user": "54b598d6e4b05787c3b163a8"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "54f2a1b8e4b024c67c0cf8cb"}, {"problem": 42, "code": "#(reduce * (rest (range (inc %1))))", "user": "54c74a78e4b045293a27f637"}, {"problem": 42, "code": "#(reduce * (range %1 0 -1))", "user": "54ef4a1ee4b024c67c0cf883"}, {"problem": 42, "code": "(fn fact [x] \n  (loop [y x acc 1] \n    (if (zero? y) \n      acc \n      (recur (dec y) (* y acc))))\n  )", "user": "54f73502e4b01ecee9d88817"}, {"problem": 42, "code": "(fn [n]\n  (loop [index n\n         result 1]\n    (if (= index 1)\n      result\n      (recur (dec index) (* index result)))))", "user": "54edfa10e4b024c67c0cf868"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "54eee3a3e4b024c67c0cf879"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (inc x))))", "user": "54f5fb57e4b0f2f3c5226e9f"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "539c736ce4b0b51d73faaf2b"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "531c7bdde4b08068f379eda2"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "54d9366ce4b0a52adc2e204e"}, {"problem": 42, "code": "(fn factorial\n  [n]\n  (loop [n n\n         res 1]\n    (if (= n 0)\n      res\n      (recur (dec n)\n             (* res n)))))", "user": "54f39cd6e4b050824f58f5c6"}, {"problem": 42, "code": "(fn me [x]\n  (if (= 1 x)\n    x\n    (* x (me (- x 1)))))", "user": "54eff2bee4b024c67c0cf88d"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "54f4a457e4b0f2f3c5226e83"}, {"problem": 42, "code": "(fn fack [x] (if (= x 0) 1 (* x (fack (dec x)))))", "user": "54e0a9c3e4b024c67c0cf7b5"}, {"problem": 42, "code": "(fn f [n]\n  (if (= n 1)\n    1\n    (* n (f (dec n)))))", "user": "521d064fe4b0c4ef0be830a8"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "54fdbe3fe4b07d26eda61d3b"}, {"problem": 42, "code": "#(loop [n 1\n        acc 1]\n   (if (<= n %1)\n     (recur (inc n) (* n acc))\n     acc))", "user": "4f03e60d535dcb61093f6b7a"}, {"problem": 42, "code": "(fn factorial [n]\n  (if (< n 1)\n    1\n    (* n (factorial (dec n)))))", "user": "54fd93bbe4b07d26eda61d36"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "54f9d900e4b01ecee9d88844"}, {"problem": 42, "code": "#(apply * (range 1 (+ % 1)))", "user": "5351fca5e4b084c2834f4aec"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "54ff2342e4b07d26eda61d49"}, {"problem": 42, "code": "(fn factorial [n]\n  (reduce * (range 1 (inc n))))", "user": "534f8c9ae4b084c2834f4acd"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "50e09f60e4b061dbdced7237"}, {"problem": 42, "code": "#(apply * (range 1 (+ % 1)))", "user": "53ef235de4b0d648e757f4d4"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "4f0554aa535dcb61093f6bf5"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "54febf4be4b07d26eda61d45"}, {"problem": 42, "code": "(fn factorial [x]\n  (loop [num x fact 1]\n    (if (pos? num)\n      (recur (dec num) (* fact num))\n      fact)))", "user": "54d0cedde4b0e8a36923e5d2"}, {"problem": 42, "code": "#(reduce * (range 1 ( inc %)))", "user": "54fc7d89e4b07d26eda61d2b"}, {"problem": 42, "code": "(fn fac [x] \n  (if (zero? x)\n    1 \n    (* x (fac (dec x)))))", "user": "54ff2968e4b07d26eda61d4a"}, {"problem": 42, "code": "#(reduce * (take % (iterate inc 1)))", "user": "54c8ac49e4b045293a27f64e"}, {"problem": 42, "code": "(fn f [n] (reduce * (range 1 (inc n))))", "user": "54ff6084e4b07d26eda61d50"}, {"problem": 42, "code": "(fn fac [x] ( if (<= x 0) 1 (* x (fac (- x 1)))))", "user": "54f97e22e4b01ecee9d8883a"}, {"problem": 42, "code": "(fn fac [x]\n  ((fn rec [x total] \n     (if (= x 1)\n       total\n       (rec (dec x) (* total x))\n     )\n   ) x 1)\n)", "user": "55034bf0e4b086ebe8a79c6d"}, {"problem": 42, "code": "(fn [n] (reduce * 1 (range 1 (inc n))))", "user": "54edc818e4b024c67c0cf865"}, {"problem": 42, "code": "#(reduce * (range % 1 -1))", "user": "5504dd64e4b086ebe8a79c83"}, {"problem": 42, "code": "(fn [x]\n  (loop [x x\n         acc 1]\n    (if (= x 1)\n      acc\n      (recur (- x 1) (* acc x)))))", "user": "54b31445e4b09f271ff37d35"}, {"problem": 42, "code": "(fn \n  [x]\n  (loop [i x r 1]\n    (if (= i 0)\n      r\n      (recur (dec i) (* r i)))))", "user": "54bcab07e4b0ed20f4ff6ed5"}, {"problem": 42, "code": "(fn fact [x]\n   (* x (if (pos? (dec x))\n          (fact (dec x)) x)))", "user": "54b67463e4b05787c3b163bc"}, {"problem": 42, "code": "(fn fact [n]\n  (if(zero? n)\n    1\n   \t(* n (fact (dec n)))))", "user": "54d1b6ffe4b0e8a36923e5e6"}, {"problem": 42, "code": "(fn [n] (first (nth (iterate (fn [[a b]] [(* a b) (inc b)]) [1 1]) n)))", "user": "54f6f00fe4b01ecee9d88814"}, {"problem": 42, "code": "(fn [n] (apply * (range 1 (inc n))))", "user": "55058a4fe4b086ebe8a79c89"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (inc x))))", "user": "54eea988e4b024c67c0cf875"}, {"problem": 42, "code": "#(apply * (range 2 (+ 1 %)))", "user": "543be8f0e4b032a45b869337"}, {"problem": 42, "code": "(fn [n]\n  (loop [acc 1 cnt n]\n    (if (zero? cnt)\n      acc\n      (recur (* acc cnt) (dec cnt))\n      )))", "user": "53213810e4b09d4e7a9b54b0"}, {"problem": 42, "code": "(fn [n]\n  (loop [acc 1 n n]\n    (if (= n 1)\n      acc\n      (recur (* acc n) (dec n)))))", "user": "55088bb3e4b06e50f9beb10c"}, {"problem": 42, "code": "#(reduce * (map inc (range %)))", "user": "5507cfd3e4b021ccfedb96ad"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "54ab1b5ae4b09f271ff37cc2"}, {"problem": 42, "code": "(fn fact [x]\n  (if (< x 2) \n    1\n    (* (fact (dec x)) x)))", "user": "550615c0e4b021ccfedb9696"}, {"problem": 42, "code": "(fn fact [num]\n   (if (< num 1)\n     1\n     (* num (fact (- num 1)))))", "user": "5508102ee4b021ccfedb96b0"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "54e24a05e4b024c67c0cf7ce"}, {"problem": 42, "code": "(fn fact [mx]\n    (reduce #(* %1 %2) 1 (range 1 (inc mx))))", "user": "54f09599e4b024c67c0cf89d"}, {"problem": 42, "code": "#(loop [a % acc 1]\n    (if (= a 0) acc (recur (dec a) (* a acc))))", "user": "5505ceb3e4b086ebe8a79c8b"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "user": "549674cde4b0b312c081ff66"}, {"problem": 42, "code": "#(if (= 1 %2) %1 (recur (* %1 %2) (dec %2))) 1", "user": "5501de12e4b07d26eda61d7b"}, {"problem": 42, "code": "#(reduce * (reverse (rest (range (inc %)))))", "user": "54f15cb8e4b024c67c0cf8b1"}, {"problem": 42, "code": "#(reduce * (map inc (range%)))", "user": "54f904c2e4b01ecee9d88832"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "550609b3e4b021ccfedb9695"}, {"problem": 42, "code": "#(reduce * (range 2 (inc %)))", "user": "4fa5c8dde4b081705acca1af"}, {"problem": 42, "code": "(fn f [x] (if (= x 1) 1 (* x (f (- x 1)))))", "user": "550e0373e4b06e50f9beb162"}, {"problem": 42, "code": "(fn my-fact [n]\n  (reduce * (range 1 (inc n))))", "user": "54f773bfe4b01ecee9d8881f"}, {"problem": 42, "code": "(fn [n]\n            (loop [cnt n acc 1]\n              (if (= cnt 1)\n                acc\n                (recur (dec cnt) (* acc cnt)))))", "user": "54c3747de4b045293a27f60e"}, {"problem": 42, "code": "(fn fact [n]\n  (cond (= 0 n)\n        1\n        :else\n        (* n (fact (- n 1)))\n        )\n  )", "user": "550cbb3be4b06e50f9beb155"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "550da0c7e4b06e50f9beb15e"}, {"problem": 42, "code": "#(reduce * (take %1 (iterate inc 1)))", "user": "550174b5e4b07d26eda61d73"}, {"problem": 42, "code": "(fn fun [n]\n    (->> ((fn fac [p acc]\n            (concat [acc] (lazy-seq (fac (inc p) (* (inc p) acc))))) 1 1)\n         (drop (dec n))\n         (first)))", "user": "550c55d0e4b06e50f9beb14d"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %1)))", "user": "550fdc1de4b06e50f9beb17d"}, {"problem": 42, "code": "#(reduce * (map inc (range %)))", "user": "54cbd97ae4b057c6fda3a283"}, {"problem": 42, "code": "(fn [n] (apply * (range 1 (inc n))))", "user": "550aeddae4b06e50f9beb135"}, {"problem": 42, "code": "(fn [n]\n  (apply * (range 1 (inc n))))", "user": "550e8e04e4b06e50f9beb167"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "540a4f20e4b0addc1aec66ef"}, {"problem": 42, "code": "(fn bk-factorial\n  [n]\n  (let [factors (map-indexed (fn [ind _] (inc ind)) (repeat n :foobar))]\n    (reduce * factors)))", "user": "5426fb8fe4b01498b1a71b1f"}, {"problem": 42, "code": "(fn fac [x] \n  (if (= x 0) 1 \n    (* x (fac (dec x)))))", "user": "5510f734e4b06e50f9beb18f"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "5512b15ae4b055c2f668d4b5"}, {"problem": 42, "code": "(fn [x] (second\n           (nth\n             (iterate\n               #(vector\n                 (inc (first %))\n                 (* (first %) (second %))\n\n                 )\n               [1 1]\n               ) x))\n   )", "user": "54e84d1ee4b024c67c0cf822"}, {"problem": 42, "code": "(fn number42 [n]  \n  (reduce * 1 (range 1 (inc n))))", "user": "54074fc5e4b0addc1aec66b6"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5511fd7ee4b06e50f9beb19e"}, {"problem": 42, "code": "(fn fac [n]\n  (apply * (rest (range (inc n)))))", "user": "5512aca6e4b055c2f668d4b4"}, {"problem": 42, "code": "(fn [x]\n(reduce * (rest (range (inc x)))))", "user": "54534c83e4b0e397800069cd"}, {"problem": 42, "code": "(fn [x] (apply * (range 1 (inc x))))", "user": "54d127b7e4b0e8a36923e5de"}, {"problem": 42, "code": "(fn factorial\n  [n]\n  (if (<= n 1)\n    1\n    (* n (factorial (dec n)))))", "user": "542725fce4b01498b1a71b22"}, {"problem": 42, "code": "(fn [n]\n  (loop [n n fact 1]\n    (if (= n 1)\n      fact\n      (recur (dec n) (* n fact)))))", "user": "55151417e4b055c2f668d4da"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "532018efe4b08068f379edcd"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5510aa92e4b06e50f9beb188"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5515b138e4b055c2f668d4ed"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5514a60fe4b055c2f668d4d7"}, {"problem": 42, "code": "(fn [x]\n  (loop [n x r 1]\n    (if (== n 0)\n      r\n      (recur (dec n) (* n r)))))", "user": "55164856e4b06a49daca83b3"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "551535cee4b055c2f668d4df"}, {"problem": 42, "code": "#(apply * % (range 2 %))", "user": "52e087dde4b09f7907dd1412"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (range 1 (+ n 1))))", "user": "54f03f8ce4b024c67c0cf891"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "55170dd9e4b06a49daca83bd"}, {"problem": 42, "code": "#(reduce\n  * (range\n     1 (inc %)))", "user": "54d9f7f1e4b024c67c0cf751"}, {"problem": 42, "code": "(fn fact [i]\n  (if (= 1 i)\n    1\n    (* i (fact (dec i)))))", "user": "550ff2a3e4b06e50f9beb17f"}, {"problem": 42, "code": "(fn [x]\n   (letfn [(fct [x acc]\n             (if (> x 1)               \n               (recur (dec x) (* acc x))\n               acc))]\n     (fct (dec x) x)))", "user": "51bb08a4e4b0fe3ecfb46446"}, {"problem": 42, "code": "(fn [x]\n  (loop [x x\n         r 1]\n    (cond \n     (= x 0) r\n     (= x 1) r\n     :else (recur (dec x) (* r x)))))", "user": "551a64cde4b091ff45eda996"}, {"problem": 42, "code": "(fn [x]\n  (loop [x x acc 1]\n   (if (= x 1)\n     acc\n     (recur (dec x) (* acc x)))))", "user": "551a21ece4b091ff45eda993"}, {"problem": 42, "code": "(fn fact [n] (if (= n 0) 1 (* n (fact (- n 1)))))", "user": "53504a7de4b084c2834f4ad9"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "514f0a28e4b019235f6c059a"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5519c157e4b00ace28fe6e32"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "5515649fe4b055c2f668d4e3"}, {"problem": 42, "code": "#(reduce * (take-while (partial >= %) (iterate inc 1)))", "user": "5510d948e4b06e50f9beb18d"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "50f02de7e4b0bdaecbb47db0"}, {"problem": 42, "code": "(fn f [n] (if (= n 1) 1 (* n (f (- n 1)))))", "user": "54857657e4b0e286459a11ac"}, {"problem": 42, "code": "#(apply * (range % 0 -1))", "user": "54126d0ce4b01498b1a719d5"}, {"problem": 42, "code": "#(loop [n %,\n        acc 1]\n   (if (zero? n)\n     acc\n     (recur (dec n) (* acc n))))", "user": "551ed214e4b08d5046aa8a4d"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %1)))", "user": "54a8fdcee4b09f271ff37ca9"}, {"problem": 42, "code": "#(loop [n %1 acc 1]\n  (if (= 0 n) \n    acc\n    (recur (dec n) (* acc n))))", "user": "4e443201535dc968683fc4a7"}, {"problem": 42, "code": "(fn fact[n]\n  (reduce * (map inc (range n))))", "user": "4dd76bf9535d2dad7130b5d1"}, {"problem": 42, "code": "(fn myfac\n  [n]\n  (if (= 1 n)\n    1\n    (* n (myfac (dec n)))))", "user": "551ecb76e4b08d5046aa8a4c"}, {"problem": 42, "code": "(fn fac [n] \n  (if (= n 0)\n    1\n    (* n (fac (dec n)))))", "user": "5156e767e4b04360f2428e6b"}, {"problem": 42, "code": "(fn ft [n]\n  (if (= n 1) 1 (* n (ft (- n 1))) )\n)", "user": "514504c2e4b021a5ff8301fc"}, {"problem": 42, "code": "(fn ! [n] (if (> n 0) (* n (! (- n 1))) 1))", "user": "5520af03e4b08d5046aa8a64"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "55205564e4b08d5046aa8a60"}, {"problem": 42, "code": "(fn factorial [num] (if (= num 1) 1 (* num (factorial (dec num)))))", "user": "55204412e4b08d5046aa8a5f"}, {"problem": 42, "code": "(fn foo [x] (if (> x 0) (* x (foo (dec x))) 1))", "user": "5520974be4b08d5046aa8a63"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "52b36925e4b0c58976d9ad0b"}, {"problem": 42, "code": "(fn fact2 [x] (apply * (rest (range (inc x)))))", "user": "5517f5c5e4b06a49daca83c7"}, {"problem": 42, "code": "(fn [n]\n  (loop [x n\n         r 1]\n    (if-not (pos? x)\n      r\n      (recur (dec x)\n             (* r x)))))", "user": "512e31e9e4b0b740abc59823"}, {"problem": 42, "code": "#(reduce * % (range 1 %))", "user": "551c66dae4b07993ea3788de"}, {"problem": 42, "code": "(fn fact' [n]\n  (if (= n 1)\n    1\n    (* n (fact'(- n 1)))))", "user": "551ee974e4b08d5046aa8a50"}, {"problem": 42, "code": "(fn factorial [n]\n    (if (> n 0)\n      (* (factorial (dec n)) n)\n      1))", "user": "50c6052ce4b0c9dc10d15c56"}, {"problem": 42, "code": "(fn foo ([x] (foo x 1)) ([x prod] (if (= x 1) prod (foo (- x 1) (* x prod)))))", "user": "5509bec5e4b06e50f9beb121"}, {"problem": 42, "code": "(fn [n] (reduce * (range 2 (inc n))))", "user": "552356fae4b0882d96d091af"}, {"problem": 42, "code": "(fn fact\n  [n]\n  (loop [n n tot 1]\n    (if (< n 2) tot\n      (recur (- n 1) (* n tot)))))", "user": "551afdf8e4b07993ea3788cb"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "55201d18e4b08d5046aa8a5d"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "55183a11e4b06a49daca83ca"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (inc x))))", "user": "5522cd9ae4b0882d96d091ab"}, {"problem": 42, "code": "(fn f [x]\n    (if (= x 0)\n      1\n      (* x (f (dec x)))))", "user": "55092319e4b06e50f9beb113"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "550b5a53e4b06e50f9beb142"}, {"problem": 42, "code": "#(apply * (take % (rest (range))))", "user": "55129632e4b06e50f9beb1aa"}, {"problem": 42, "code": "(fn [x] (apply * (range 1 (inc x))))", "user": "533c2605e4b0e30313ee6cd7"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "552456e3e4b0882d96d091c2"}, {"problem": 42, "code": "(fn f [n]\n  (if (= 0 n)\n    1\n    (* n (f (dec n)))))", "user": "53fcd574e4b0de5c418485d9"}, {"problem": 42, "code": "(fn fact [n] (if (= n 1) 1 (* n (fact (dec n)))))", "user": "55253217e4b0882d96d091ce"}, {"problem": 42, "code": "(fn factorial [n]\n  (if (= n 0)\n    1\n    (* n (factorial (- n 1)))))", "user": "5515c8b1e4b055c2f668d4f2"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5524120fe4b0882d96d091b7"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (+ 1 %)))", "user": "551b8e2ae4b07993ea3788d3"}, {"problem": 42, "code": "(fn fac [n]\n   \n  (if (< n 2) n (* n (fac (dec n)))))", "user": "55218bf0e4b0882d96d09196"}, {"problem": 42, "code": "(fn [x] (loop [i 2 p 1] (if (> i x) p (recur (+ i 1) (* p i)))))", "user": "55280930e4b0ffed3738f93b"}, {"problem": 42, "code": "#(apply * (rest (range (inc %))))", "user": "528b3f5ae4b0239c8a67ae93"}, {"problem": 42, "code": "#(apply * (range 1 (+ 1 %)))", "user": "5484fab9e4b0e286459a11a6"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "551ebcd7e4b08d5046aa8a4a"}, {"problem": 42, "code": "#(reduce * (take % (iterate inc 1)))", "user": "551747e0e4b06a49daca83c1"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "505106fee4b05ab4c7e07d38"}, {"problem": 42, "code": "#(reduce * (take % (iterate inc 1)))", "user": "55249f64e4b0882d96d091c6"}, {"problem": 42, "code": "#(reduce * (map inc (range %)))", "user": "552a672de4b0ffed3738f954"}, {"problem": 42, "code": "#(apply * (range 1 (+ 1 %)))", "user": "5517331ae4b06a49daca83c0"}, {"problem": 42, "code": "#(reduce (fn [m n] (* m n)) 1 (range 1 (inc %1)))", "user": "551589cee4b055c2f668d4e9"}, {"problem": 42, "code": "#(apply * (range 1 (+ 1 %)))", "user": "552694e7e4b0ffed3738f920"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "54db3d82e4b024c67c0cf75f"}, {"problem": 42, "code": "(fn factorial [x] (reduce *(range 1 (inc x))))", "user": "5526383ee4b0ffed3738f917"}, {"problem": 42, "code": "; first attempt\n;(fn new-fact [i] (if (= i 1) 1 (* i (new-fact (dec i)))))\n\n#(apply * (range 1 (inc %)))", "user": "550d9452e4b06e50f9beb15d"}, {"problem": 42, "code": "(fn factorial [n]\n  (if (zero? n)\n    1\n    (* n (factorial (dec n)))))", "user": "551d5cb9e4b07993ea3788e9"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "55253799e4b0882d96d091cf"}, {"problem": 42, "code": "(fn [n]\n  (loop [i 1\n         r 1]\n    (if (> i n)\n      r\n      (recur (inc i) (* i r))\n     )\n   )\n)", "user": "55252392e4b0882d96d091cc"}, {"problem": 42, "code": "(fn fac [num-val]\n  (if (> num-val 1)\n    (* num-val (fac (dec num-val)))\n    num-val\n  ))", "user": "552689cfe4b0ffed3738f91e"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "55240916e4b0882d96d091b6"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "552d9013e4b076ab5578f7ea"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "552bc0f5e4b0ffed3738f968"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "55297a7ae4b0ffed3738f94b"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "54f4adc8e4b0f2f3c5226e86"}, {"problem": 42, "code": "(fn factorial [n] (if (> n 0) (* n (factorial (dec n))) 1))", "user": "55041b5ee4b086ebe8a79c78"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "551dfd81e4b030e6a24d00e0"}, {"problem": 42, "code": "#(apply * % (range 1 %))", "user": "54eee38ce4b024c67c0cf878"}, {"problem": 42, "code": "#(apply * (range % 0 -1))", "user": "550e52dbe4b06e50f9beb165"}, {"problem": 42, "code": "(fn [n]\n  (apply * (range 1 (+ 1 n))))", "user": "54d321b3e4b0e8a36923e602"}, {"problem": 42, "code": "#(reduce (fn [i, sum] (* i sum)) (range 1 (+ % 1)))", "user": "5530b827e4b076ab5578f818"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "552ed75ae4b076ab5578f7f9"}, {"problem": 42, "code": "(fn [v] (reduce * (range 1 (inc v))))", "user": "4df247b8535d08e6dec9fe25"}, {"problem": 42, "code": "#(apply * (range 2 (inc %)))", "user": "5531e445e4b09218d5f44f76"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "534da51fe4b084c2834f4aa4"}, {"problem": 42, "code": "(fn [n]\n  (let [itor (fn [r counter]\n               (cond\n                 (= n 1) r\n                 (< counter n) (let [inc-counter (inc counter)]\n                                 (recur (* r inc-counter) inc-counter))\n                 :else r))]\n    (itor 1 1)))", "user": "51a7fe50e4b08d8ec191b803"}, {"problem": 42, "code": "(fn foo [n] (if (= n 1) n (* n (foo (- n 1)))))", "user": "553024c3e4b076ab5578f80d"}, {"problem": 42, "code": "#(loop [x % f 1] \n\t\t(if (= x 1) \n\t\t\tf \n\t\t\t(recur (dec x) (* f x))\n\t\t\t)\n\t\t)", "user": "548d6b75e4b0e286459a1216"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "552e1c98e4b076ab5578f7ee"}, {"problem": 42, "code": "(fn [num]\n  (loop [start num fac num]\n    (if (= start 1)\n      fac\n      (recur (dec start) (* fac (dec start))))))", "user": "53c92d05e4b00fb29b2212b9"}, {"problem": 42, "code": "(fn fac\n  [n]\n  (if (= n 0)\n    1\n    (* n (fac (- n 1)))))", "user": "55355397e4b09218d5f44fae"}, {"problem": 42, "code": "(fn [n]\n  (loop [i n r 1]\n    (if (= i 0)\n      r\n      (recur (dec i) (* i r)))))", "user": "55316b8ae4b076ab5578f825"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5535e9b8e4b09218d5f44fb3"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "553698fae4b09218d5f44fc0"}, {"problem": 42, "code": "(fn [initial]\n  (loop [n initial acc n]\n    (let [m (- n 1)]\n      (if (= n 1)\n        acc\n      (recur m (* acc m))))))", "user": "5448616be4b032a45b8693c9"}, {"problem": 42, "code": "(fn fact [n] (if (zero? n) 1 ( * (fact (dec n)) n)))", "user": "5537982ae4b09218d5f44fcc"}, {"problem": 42, "code": "(fn [n]\n   (reduce * 1 (range 1 (inc n))))", "user": "51e4b812e4b0efabf93c02bc"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "54fdaeace4b07d26eda61d39"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "553a43cae4b09218d5f44ff2"}, {"problem": 42, "code": "#(reduce * (take % (iterate dec %)))", "user": "553706d1e4b09218d5f44fc7"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "55377460e4b09218d5f44fc9"}, {"problem": 42, "code": "(fn factorial [n]\n  (if (= 1 n)\n    n\n    (* n (factorial (dec n)))))", "user": "5535d34be4b09218d5f44fb0"}, {"problem": 42, "code": "(fn fact [x & valu]\n  (if (= x 1)\n    x\n    (if (empty? valu)\n      (fact x (dec x))\n      (if (= (first valu) 1)\n        x\n      \t(fact (* (first valu) x) (dec (first valu)))))))", "user": "553b87abe4b09218d5f45003"}, {"problem": 42, "code": "(fn [n] \n    (\n      loop[n n\n           acc 1]\n      (if (< n 2)\n        acc\n        (recur (dec n) (* acc n)))))", "user": "5141a8f2e4b02fd87f5064c1"}, {"problem": 42, "code": "(fn fact [n]\n  (apply * (range 1 (inc n))))", "user": "553abb28e4b09218d5f44ffb"}, {"problem": 42, "code": "#(apply * (range 1 (+ 1 %)))", "user": "553c05b7e4b09218d5f45011"}, {"problem": 42, "code": "(fn t [x] (if (= 1 x) 1 (* x (t (dec x)))) )", "user": "553b8fdbe4b09218d5f45004"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "550b5c10e4b06e50f9beb143"}, {"problem": 42, "code": "(fn fac[n] \n  (if (= 0 n)\n    1\n    (apply * (range 1 (inc n)))))", "user": "53161a56e4b08068f379ed3e"}, {"problem": 42, "code": "(fn factorial [n]\n  (if (= n 0)\n    1\n    (* n (factorial (dec n)))))", "user": "553dd883e4b0a04f792994e6"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "550fd845e4b06e50f9beb17c"}, {"problem": 42, "code": "(fn rnth\n  [n]\n  (if (< n 2)\n    1\n    (* n (rnth (- n 1)))\n    )\n)", "user": "553d51c3e4b0a04f792994df"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "553e0b70e4b0a04f792994e8"}, {"problem": 42, "code": "(fn fact [n0]\n  (loop [total 1 n n0]\n    (if (= 1 n) total\n      (recur (* total n) (dec n)))))", "user": "520d3129e4b0b022ef140ca5"}, {"problem": 42, "code": "#(apply * (map inc (range %)))", "user": "54e540c1e4b024c67c0cf7f9"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5531f8e7e4b09218d5f44f79"}, {"problem": 42, "code": "(fn [n] (apply * (range 1 (inc n))))", "user": "52cda397e4b07d0d72b2737a"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "54f86b8ce4b01ecee9d88828"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5540cc0ce4b0a04f79299505"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "553478dce4b09218d5f44f9d"}, {"problem": 42, "code": "(fn [x] (reduce (fn [r x] (* (if (= r 0) 1 r) x)) (range 0 (+ x 1))))", "user": "553c4614e4b09218d5f45014"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "54c46381e4b045293a27f61a"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "55337e61e4b09218d5f44f8e"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (+ %1 1)))", "user": "5509b434e4b06e50f9beb11e"}, {"problem": 42, "code": "#(loop [res 1 x %]\n   (if (pos? x)\n     (recur (* res x) (dec x))\n     res))", "user": "5313d68de4b08068f379ed0f"}, {"problem": 42, "code": "#(reduce * (rest (range (+ 1  %))))", "user": "553bc237e4b09218d5f4500a"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "55274467e4b0ffed3738f92b"}, {"problem": 42, "code": "#(reduce (fn [x y] (if (= 0 x) y (* y x))) (range (+ 1 %)))", "user": "5540fe42e4b0a04f7929950a"}, {"problem": 42, "code": "(fn [n]\n  (loop [prod n\n         n    (dec n)]\n    (if (<= n 0)\n      prod\n    (recur (* prod n) (dec n)))))", "user": "55074092e4b021ccfedb96a4"}, {"problem": 42, "code": "; OMG.  I like my solution better than _pcl's.  \n#(reduce *  (range 1 (inc %)) )", "user": "5535e822e4b09218d5f44fb2"}, {"problem": 42, "code": "#(if (= 1 %)\n   1\n   (reduce * (range 1 (+ % 1))))", "user": "53573d70e4b04ce2eb3ed278"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "550f1c99e4b06e50f9beb171"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "4faf97d8e4b081705acca258"}, {"problem": 42, "code": "(fn fct [x] (if (= 1 x) 1 (* x (fct (dec x)))))", "user": "54c779bee4b045293a27f63b"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "52e851bfe4b09f7907dd149a"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "55381162e4b09218d5f44fda"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %1)))", "user": "543366dde4b0b6b47310fcdf"}, {"problem": 42, "code": "(fn [x] (reduce * (map inc (range x))))", "user": "55483088e4b0a04f79299556"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "552800d7e4b0ffed3738f93a"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5485da80e4b0e286459a11b4"}, {"problem": 42, "code": "(fn factorial [n]\n  (if (= n 1)\n    n\n    (* n (factorial (dec n)))))", "user": "5532a04ee4b09218d5f44f82"}, {"problem": 42, "code": "(fn [s]\n  (loop [s s\n         acc 1]\n  (if (= 1 s)\n    acc\n    (recur (dec s) (* s acc)))))", "user": "4fc57c4ce4b0ee37620e17f6"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "5546704be4b0a04f7929953d"}, {"problem": 42, "code": "(fn [x]\n  (reduce * (range 1 (inc x))))", "user": "54980edae4b0b312c081ff79"}, {"problem": 42, "code": "(fn f[x]\n  (if-not (zero? x)\n    (* x (f (- x 1)))\n    1))", "user": "5548c46be4b0a04f79299560"}, {"problem": 42, "code": "(partial (fn [x n] (if (zero? n) x (recur (* x n) (dec n)))) 1)", "user": "53737e6ce4b06d7f452d9e13"}, {"problem": 42, "code": "(fn [n]\n  (letfn [(f [i x]\n             (if (> i n)\n               x\n               (recur (inc i) (* x i))))]\n    (f 1 1)))", "user": "55495318e4b0a04f79299566"}, {"problem": 42, "code": "#(apply * (loop [x % coll '()]\n    (if (zero? x)\n      coll\n      (recur (dec x) (cons x coll)))))", "user": "553fa883e4b0a04f792994f9"}, {"problem": 42, "code": "#(->> % range (map inc) (reduce *))", "user": "554680cbe4b0a04f7929953e"}, {"problem": 42, "code": "(fn fac [x]\n  (if (= x 0) \n    1\n    (* x (fac (dec x)))))", "user": "554ad20fe4b0a04f7929957a"}, {"problem": 42, "code": "#(reduce * (take % (iterate inc 1)))", "user": "554707bae4b0a04f79299544"}, {"problem": 42, "code": "(fn [x]\n  (let [helper (fn [fac n ]\n                 (if (= n 1) fac\n                  (recur (* n  fac) (dec n) )))]\n    (helper 1 x)))", "user": "54b64fbbe4b05787c3b163b8"}, {"problem": 42, "code": "(fn [n]\n  (loop [n n\n         result 1]\n    (if (= n 0)\n      result\n      (recur (dec n) (* n result)))))", "user": "54f14aa6e4b024c67c0cf8af"}, {"problem": 42, "code": "#(reduce * (map inc (range %)))", "user": "4fcf1755e4b03432b189f40c"}, {"problem": 42, "code": "#(reduce * % (range 1 %))", "user": "554d04bbe4b0a04f792995b4"}, {"problem": 42, "code": "(fn [n]\n  (loop [n n accum 1]\n    (if (= n 1) accum\n        (recur (- n 1) (* accum n)))))", "user": "554dff83e4b00713264bd98d"}, {"problem": 42, "code": ";;(fn factorial[x] (if (= x 0) 1 (* x (factorial (dec x)))))\n\n#(reduce * (range 1 (inc %)))", "user": "55429859e4b0a04f7929951f"}, {"problem": 42, "code": "(letfn [(fact [acc n]\n              (if (< n 2) acc\n                (recur (* n acc) (dec n))))]\n  (partial fact 1))", "user": "554b9c3ee4b0a04f79299594"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "55484800e4b0a04f79299558"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "554b7056e4b0a04f79299583"}, {"problem": 42, "code": "(fn my-factorial\n  [n]\n  (loop [m 1\n         accum 1]\n    (if (= m n) (* m accum)\n      (recur (inc m) (* accum m)))))", "user": "554d386ee4b0a04f792995b8"}, {"problem": 42, "code": "(fn [fac]\n  (reduce * (range 1 (+ 1 fac))))", "user": "554bc026e4b0a04f79299597"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "553b0d95e4b09218d5f44fff"}, {"problem": 42, "code": "(fn [x] (apply * (take x (map inc (range)))))", "user": "554b2151e4b0a04f79299580"}, {"problem": 42, "code": "(fn fct [n]\n  (if (= n 1)\n    1\n    (* n (fct (dec n)))))", "user": "5523fce8e4b0882d96d091b4"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "555093b2e4b00713264bd9ab"}, {"problem": 42, "code": "(fn [n]\n  (apply * (range 1 (inc n))))", "user": "5486e317e4b0e286459a11c0"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "554edb85e4b00713264bd99a"}, {"problem": 42, "code": "#(apply * (take % (iterate inc 1)))", "user": "547c2c6ce4b0c51c1f4d72e3"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5280a1ece4b0757a1b171407"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "554b8572e4b0a04f79299589"}, {"problem": 42, "code": "(fn [n]\n  (loop [x n\n         r 1]\n    (if (= x 1)\n      r\n      (recur (dec x) (* r x)))))", "user": "5283a919e4b0239c8a67adbe"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "53571732e4b04ce2eb3ed275"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "52fbbadde4b047fd5583700f"}, {"problem": 42, "code": "(fn fact [n] (if (> n 0) (* n (fact (- n 1))) 1))", "user": "554d48d3e4b00713264bd988"}, {"problem": 42, "code": "#(apply * (range 1 (+ 1 %)))", "user": "5553b924e4b0deb715856e06"}, {"problem": 42, "code": "(fn [n]\n  (loop [f 1 , n0 n]\n    (if (= 1 n0) f\n      (recur (* f n0) (- n0 1)))))", "user": "55486ee6e4b0a04f7929955a"}, {"problem": 42, "code": "(fn [x]\n  (loop [current 1, i x]\n    (if (= i 0)\n      current\n      (recur (* i current) (dec i)))))", "user": "554884d4e4b0a04f7929955c"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "554ba1d3e4b0a04f79299595"}, {"problem": 42, "code": "(fn fact [n]\n  (if (= n 1)\n    1\n    (* n (fact (- n 1)))))", "user": "554b425ce4b0a04f79299581"}, {"problem": 42, "code": "(fn ffact [n]\n  (if (= n 1)\n    1\n    (* n (ffact (dec n))))\n)", "user": "552d2e4fe4b076ab5578f7e1"}, {"problem": 42, "code": "(fn fact [x] (if (> x 1) (* x (fact (dec x))) 1 ))", "user": "55382530e4b09218d5f44fdd"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "52ce1abfe4b07d0d72b27389"}, {"problem": 42, "code": "(fn [x] (apply * (range 1 (inc x))))", "user": "5545eebee4b0a04f79299539"}, {"problem": 42, "code": "(fn my-fact [n]\n    (if (= n 1)\n      1\n      (* n (my-fact (dec n)))))", "user": "5549ff9ae4b0a04f7929956e"}, {"problem": 42, "code": "(fn fctrl\n\t[x]\n\t(if (= x 1)\n\t\t1\n\t\t(* x (fctrl (dec x)))))", "user": "5545477fe4b0a04f79299531"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %1)))", "user": "5547bcf2e4b0a04f79299551"}, {"problem": 42, "code": "#(reduce (fn [x y] (* x y)) 1 (range 1 (inc %)))", "user": "55536a8ae4b0deb715856e03"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "5550bcece4b00713264bd9ae"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "555521a5e4b0deb715856e12"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "user": "54cad59ee4b057c6fda3a26e"}, {"problem": 42, "code": "(fn factorial [n] (reduce * 1 (range 1 (inc n))))", "user": "554dfe97e4b00713264bd98c"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "555881f5e4b0deb715856e2c"}, {"problem": 42, "code": "(fn [n] (reduce * (drop 1 (range (inc n)))))", "user": "5545f713e4b0a04f7929953a"}, {"problem": 42, "code": "(fn [n]\n  (->> (range n 0 -1)\n       (apply *)))\n\n#_(fn [n]\n  (loop [acc 1, i n]\n    (if (<= i 1)\n      acc\n      (recur (* acc i) (dec i)))))", "user": "53684a2fe4b0243289761e8c"}, {"problem": 42, "code": "(fn [n]\n  (reduce (fn [res x] (* res x)) (range 1 (inc n))))", "user": "553638bae4b09218d5f44fba"}, {"problem": 42, "code": ";(fn [x] (reduce * (range 1 (inc x))))\n#(reduce * (range 1 (inc %)))", "user": "55150524e4b055c2f668d4d9"}, {"problem": 42, "code": "#(reduce * (map inc (range %)))", "user": "554bced1e4b0a04f79299599"}, {"problem": 42, "code": "#(reduce * (map inc (range %)))", "user": "553093bee4b076ab5578f817"}, {"problem": 42, "code": "#(apply * % (range 2 %))", "user": "5552b617e4b0deb715856df8"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "555ac933e4b0deb715856e49"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (+ 1 n))))", "user": "52b89d55e4b07a9af57922b3"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "user": "555b672ce4b0deb715856e50"}, {"problem": 42, "code": "(fn fac [x] (if (not (= x 0)) (* x (fac (dec x))) 1))", "user": "550772cee4b021ccfedb96a8"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "555287a4e4b0deb715856df5"}, {"problem": 42, "code": "(fn fact [n]\n    (if (= 1 n) n (* (fact (dec n)) n)))", "user": "554c0adde4b0a04f7929959e"}, {"problem": 42, "code": "#(reduce * (take-while pos? (iterate dec %)))", "user": "548ce2dbe4b0e286459a1212"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5169b23fe4b03f62cda68cee"}, {"problem": 42, "code": "(fn foo [x] (if (> x 1) (* x (foo (dec x))) 1))", "user": "555b5ae4e4b0deb715856e4f"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "55568a7de4b0deb715856e1c"}, {"problem": 42, "code": "#(apply * % (range 2 %))", "user": "54026d7de4b0df28a13c62cf"}, {"problem": 42, "code": "(fn gfac\n  [x]\n  (loop [x x a 1 b 1]\n    (if (< x 1)\n      a\n      (recur (dec x) (* a b) (inc b)))))", "user": "54070647e4b0addc1aec66b2"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "54fe57f6e4b07d26eda61d42"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "555bd27ae4b0b056612e2244"}, {"problem": 42, "code": "(fn[n] (reduce * (range 1 (+ 1 n))))", "user": "54f296efe4b024c67c0cf8c8"}, {"problem": 42, "code": "(fn [n] (reduce * (take n (iterate inc 1))))", "user": "5515b68de4b055c2f668d4ef"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "554bc64ae4b0a04f79299598"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "user": "55586905e4b0deb715856e2b"}, {"problem": 42, "code": "(fn [n] \n  (if (>= 1 n ) \n    n \n    (apply * (range 1 (inc n)))))", "user": "555f3bfde4b0a2eb076a39c1"}, {"problem": 42, "code": "(fn fact\n  [n]\n  (if (= 1 n) 1 (* n (fact (dec n)))))", "user": "550001d0e4b07d26eda61d57"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "555da2c4e4b0a2eb076a39ae"}, {"problem": 42, "code": "(fn [n] (reduce * 1 (range 1 (inc n))))", "user": "556159fae4b0c656e3ff17c7"}, {"problem": 42, "code": "(fn factorial [n] (if (= n 1) 1 (* n (factorial (- n 1)))))", "user": "555a5731e4b0deb715856e44"}, {"problem": 42, "code": "(fn [n]\n  (loop [prod 1 x n]\n    (if (= x 1)\n      prod\n      (recur (* prod x) (dec x)))))", "user": "5550b5a0e4b00713264bd9ad"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5264383be4b03e8d9a4a70cb"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "53f5666ee4b0db01ade6f9cf"}, {"problem": 42, "code": "(fn ! [n] (if (= n 1) 1 (* (! (- n 1)) n)))", "user": "556086a2e4b0c656e3ff17c1"}, {"problem": 42, "code": "(fn fac [n] (if (= n 1) 1 (* n (fac (- n 1)))))", "user": "4fc04d75e4b081705acca324"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "55631739e4b0c656e3ff17e2"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "555b35f7e4b0deb715856e4b"}, {"problem": 42, "code": "(fn fac [x] (if (= x 1) 1 (* x (fac (dec x)))))", "user": "55645592e4b0c656e3ff1802"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5562f08ae4b0c656e3ff17df"}, {"problem": 42, "code": "(fn factorial\n  [n]\n  (if (<= n 0)\n    1\n    (* n (factorial (dec n)))))", "user": "555f4bade4b0a2eb076a39c2"}, {"problem": 42, "code": "(fn factorial [n]\n  (loop [i n t n]\n    (if (= 1 i)\n      t\n      (let [i (- i 1)]\n        (recur i (* t i))))))", "user": "556405e5e4b0c656e3ff17fb"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (inc x))))", "user": "54f8b6f4e4b01ecee9d8882c"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "4e28ddd1535deb9a81d77efd"}, {"problem": 42, "code": "(fn[v](reduce * 1 (range 1 (inc v))))", "user": "555c6344e4b0b056612e224c"}, {"problem": 42, "code": "(fn [n]\n  (apply * (range 1 (inc n))))", "user": "55663e9be4b0c656e3ff182b"}, {"problem": 42, "code": ";(fn fac [x]\n;  (if (> x 0)\n;    (* x (fac (dec x)))\n;    1))\n\n;#(reduce * (range 1 (inc %)))\n\n#(apply * (range 1 (inc %)))", "user": "54dce62be4b024c67c0cf78b"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %1)))", "user": "5565f616e4b0c656e3ff1823"}, {"problem": 42, "code": "#(reduce *' (range 1 (inc %)))", "user": "5501a1e1e4b07d26eda61d75"}, {"problem": 42, "code": "(fn fak [x]\n(if (= x 1)\n  1\n  (* x (fak (dec x)))))", "user": "55634f38e4b0c656e3ff17e8"}, {"problem": 42, "code": "(fn f [x]\n  (if (= x 1)\n    1\n    (* x (f (dec x)))))", "user": "55670a05e4b0c656e3ff1838"}, {"problem": 42, "code": "#(->> (iterate inc 1)\n      (take %) \n      (reduce *))", "user": "5566d812e4b0c656e3ff1837"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "53b05a75e4b047364c044482"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "552a793ee4b0ffed3738f955"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "55625903e4b0c656e3ff17d7"}, {"problem": 42, "code": ";;#(reduce * (take % (rest (range))))\n#(reduce * (range 1 (inc %)))", "user": "55647a31e4b0c656e3ff1808"}, {"problem": 42, "code": "(fn fac[n] (let [numbers (range 1 (+ n 1))] (reduce * numbers)))", "user": "55654e17e4b0c656e3ff1818"}, {"problem": 42, "code": "(fn [n]\n  (loop [n n acc 1]\n    (if (zero? n)\n      acc\n      (recur (dec n) (* acc n)))))", "user": "501b1efee4b0b12d9c5f4d82"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "555f0789e4b0a2eb076a39bf"}, {"problem": 42, "code": "(fn fac [n]\n  (loop [x n, acc 1]\n    (if ( <= x 1)\n      acc\n      (recur (dec x) (* acc x)))))", "user": "556880dae4b0c656e3ff1856"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5566463ee4b0c656e3ff1831"}, {"problem": 42, "code": "(fn [x]\n  (loop [acc 1\n         pos x]\n    (if (zero? pos)\n      acc\n      (recur (* acc pos) (dec pos)))))", "user": "556a6137e4b09a3098a524e0"}, {"problem": 42, "code": "(fn fact\n  ([n] (fact n 1 1))\n  ([n init accum] \n   (if (> init n)\n     accum\n     (recur n (inc init) (* accum init))\n     )\n   )\n  )", "user": "52c70127e4b0c2d177d6211a"}, {"problem": 42, "code": "(fn factorial [N]\n  (if (= 1 N) \n    1 \n    ( * N \n      (factorial (- N 1)))))", "user": "555df9c8e4b0a2eb076a39b2"}, {"problem": 42, "code": "(fn factorial [x]\n    (if (= x 1)\n      1\n      (* x (factorial (- x 1)))))", "user": "55630cc1e4b0c656e3ff17e0"}, {"problem": 42, "code": "(fn fac [n] (loop [n n,total n] (if (<= n 1) total (recur (dec n) (* total (dec n))))))", "user": "555e9dbfe4b0a2eb076a39bc"}, {"problem": 42, "code": "(fn [num]\n    (loop [m num\n           r 1]\n      (if (= m 0)\n        r\n        (recur (dec m) (* r m)))))", "user": "554a75c9e4b0a04f79299575"}, {"problem": 42, "code": "#(loop [i % acc 1]\n   (if (> i 1)\n     (recur (dec i) (* acc i))\n     acc))", "user": "52c911dde4b0c2d177d6213a"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "556c70dae4b09a3098a524fd"}, {"problem": 42, "code": "(fn factorial [x]\n  (loop [n x sum 1]\n    (cond\n      (= 0 n) sum\n      :else (recur (dec n) (* n sum)))))", "user": "5374f931e4b06d7f452d9e2d"}, {"problem": 42, "code": "#(loop [factorial %1 result 1]\n     (if (< 0 factorial) (recur (dec factorial) (* factorial result)) result)\n   )", "user": "556523fce4b0c656e3ff1815"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "556b83fbe4b09a3098a524ee"}, {"problem": 42, "code": "(fn foo\n  [x]\n  (loop [x x acc 1]\n    (if (zero? x)\n      acc\n      (recur (dec x) (* acc x)))))", "user": "55640c62e4b0c656e3ff17fd"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "524f3e6de4b0541d1855b805"}, {"problem": 42, "code": "(fn factorial [n]\n  (if (= n 1) n\n    (* n (factorial (dec n))))\n  )", "user": "53a0b730e4b0ca733b9744b5"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "550f70bee4b06e50f9beb177"}, {"problem": 42, "code": "(fn fact\n  ([n] (fact n 1 1))\n  ([n x acc] (if (<= x n) \n               (fact n (inc x) (* x acc)) \n               acc ))\n  )", "user": "5564709ee4b0c656e3ff1807"}, {"problem": 42, "code": "(fn [x] (reduce *(take x(iterate dec x))))", "user": "556dd141e4b09a3098a52509"}, {"problem": 42, "code": "(fn [o] (loop [p 1 i o] (if (= i 0) p (recur (* p i) (dec i)))))", "user": "55660248e4b0c656e3ff1824"}, {"problem": 42, "code": "(fn factorial [n]\n  (loop [n n\n         acc 1]\n    (if (= 0 n)\n      acc\n      (recur (dec n) (* acc n)))))", "user": "55647fb1e4b0c656e3ff1809"}, {"problem": 42, "code": "(fn [num]\n   (loop [cur 1 out 1]\n     (if (= cur num)\n       (* cur out)\n       (recur (inc cur) (* cur out))\n       )\n\n     )\n   )", "user": "556f443be4b09a3098a5251e"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "55478ce2e4b0a04f7929954e"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "54a97853e4b09f271ff37cae"}, {"problem": 42, "code": "#(apply * (range 1 (+ 1 %)))", "user": "556cc24ae4b09a3098a52502"}, {"problem": 42, "code": "#(apply * (map inc (range %)))", "user": "55702081e4b09a3098a52529"}, {"problem": 42, "code": "#(reduce * (rest (range (inc %))))", "user": "5565d5e4e4b0c656e3ff181f"}, {"problem": 42, "code": "(fn f [n] (cond (= n 1) n :else (* n (f (- n 1)))))", "user": "556766c1e4b0c656e3ff1840"}, {"problem": 42, "code": "#(reduce * (cons %1 (rest (range %1))))", "user": "53db43aae4b0e771c30254b1"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5189bf9ee4b0288ada3dbdaf"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "51e8736ae4b006d205356a4f"}, {"problem": 42, "code": "(fn [n] (apply * (map inc (range n))))", "user": "556a3243e4b09a3098a524de"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5572fdd7e4b0aa18f790f3f1"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "556f35fee4b09a3098a5251a"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "4ef08bd6535dced4c769f20a"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "5571d6e5e4b09a3098a5253f"}, {"problem": 42, "code": "(fn [index]\n  (loop [i 2 ans 1]\n    (if (> i index)\n      ans\n      (recur (inc i) (* i ans)))))", "user": "556ff203e4b09a3098a52526"}, {"problem": 42, "code": "(fn fac \n  [x]\n  (if (> x 0)\n  (* x (fac (dec x)))\n  1\n  ))", "user": "5554f886e4b0deb715856e10"}, {"problem": 42, "code": "(fn factorial [x]\n  (\n  loop [recx x recres 1]\n    (if (= recx 1)\n      recres\n      (recur (dec recx) (* recres recx))\n    )\n  )\n)", "user": "554756b8e4b0a04f79299549"}, {"problem": 42, "code": "#(apply * (range 1 (+ % 1)))", "user": "550fa523e4b06e50f9beb17a"}, {"problem": 42, "code": "(fn fact [x]\n  (if (<= x 1)\n    1\n    (* x (fact (dec x)))))", "user": "53065acbe4b02e8216869792"}, {"problem": 42, "code": "(fn sm-fact [n]\n (if (= n 0) 1 (* n (sm-fact (dec n)))) \n  \n)", "user": "5575aae2e4b05c286339e065"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "54e1939ce4b024c67c0cf7c5"}, {"problem": 42, "code": "(fn factor[n]\n  (if (= n 1)\n    1\n    (* n (factor (- n 1)))\n  )\n)", "user": "5559b443e4b0deb715856e3c"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "540c6a8ae4b0addc1aec6702"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5573ffb5e4b0aa18f790f3fd"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (+ 1 x))))", "user": "554f7ef2e4b00713264bd9a1"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "536046a9e4b063bf7a5f8fe1"}, {"problem": 42, "code": "(fn [lvl] \n (loop [i 1 res 1]\n   (if (= lvl i)\n     (* i res)\n     (recur (inc i) (* i res))\n   )\n )\n)", "user": "556f2009e4b09a3098a52519"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "52a4879ce4b0c58976d9abdb"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "557a1e18e4b05c286339e09e"}, {"problem": 42, "code": "(fn f [x] (if (= x 1) 1 (* (f (- x 1)) x)))", "user": "557bd432e4b05c286339e0bb"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "52503747e4b0541d1855b828"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "55306b8ae4b076ab5578f812"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "54eb22a0e4b024c67c0cf845"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "557954aae4b05c286339e092"}, {"problem": 42, "code": "(fn fac [x] (if(= x 1 ) x (let [y (- x 1)] (* x (fac y)) ) ))", "user": "55757e81e4b05c286339e063"}, {"problem": 42, "code": "(fn [x]\n  (reduce * (map inc (range x))))", "user": "556ca359e4b09a3098a524ff"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "541b41d1e4b01498b1a71a65"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "51a3cc45e4b0e77c4ca60bfb"}, {"problem": 42, "code": "(fn foo [n] (reduce * (range 1 (inc n))))", "user": "557dbc9de4b05c286339e0cd"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "54708efce4b00cfc9eacc1b9"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "5576f299e4b05c286339e077"}, {"problem": 42, "code": "(fn fac [n]\n  (cond\n   (or (= n 0) (= n 1)) 1\n   :else (* n (fac (dec n)))))", "user": "506f0968e4b09350ab4199f5"}, {"problem": 42, "code": "(fn [x] (reduce * (rest (range (+ x 1)))) )", "user": "557e8326e4b05c286339e0d7"}, {"problem": 42, "code": "#(apply * (rest (range (inc %))))", "user": "5581747fe4b05c286339e0fa"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "5581a6dae4b05c286339e0fe"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "4f04664a535dcb61093f6bc1"}, {"problem": 42, "code": "(fn f [n]\n  (if (= n 1)\n    1\n    (* n (f (- n 1)))))", "user": "5195fadee4b04c0af7ff3c11"}, {"problem": 42, "code": "(fn myfac[x]\n  (if (= x 1) 1\n    (* x (myfac(- x 1)))))", "user": "558378dce4b05c286339e115"}, {"problem": 42, "code": "(fn my-fact [n]\n  (reduce *' 1 (range 1 (inc n))))", "user": "557bcce4e4b05c286339e0b9"}, {"problem": 42, "code": "(fn [n]\n\t(loop [in n acc 1]\n  \t(cond\n     \t(= 0 in) acc\n     \t\"default\" (recur (dec in) (* in acc)))))", "user": "558306dfe4b05c286339e110"}, {"problem": 42, "code": "(fn fact [x]\n  (if (= x 0) \n    1\n    (* x (fact (- x 1)))))", "user": "5583888ae4b05c286339e117"}, {"problem": 42, "code": "(fn [n] (loop [x n y 1] \n          (if (= 1 x) \n            y \n            (recur (- x 1) (* x y)))))", "user": "55632016e4b0c656e3ff17e4"}, {"problem": 42, "code": "(fn factorial [x]\n  (let [s (range 1 (inc x))]\n    (reduce * s)))", "user": "5392500ae4b0b51d73faaeaf"}, {"problem": 42, "code": "#(apply * (map inc (range %)))", "user": "50ec409ce4b04edc33777045"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (+ 1 x))))", "user": "55807091e4b05c286339e0eb"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5579bc24e4b05c286339e098"}, {"problem": 42, "code": "(fn my-factorial\n  [n]\n  (if (= n 1) 1N\n      (* n (my-factorial (dec n)))))", "user": "557e9d17e4b05c286339e0d8"}, {"problem": 42, "code": "(fn x [n]\n  (if (= n 0)\n    1\n    (* n (x (dec n)))))", "user": "52979551e4b02ebb4ef75043"}, {"problem": 42, "code": "(fn factorial[n]\n  (if (= n 0)\n    1\n    (* n (factorial (dec n)))))", "user": "55842c7ee4b05c286339e11d"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "552712e7e4b0ffed3738f92a"}, {"problem": 42, "code": ";; using mundane recursion:: stack limitation!!!\n(fn fact [x]\n  (if (zero? x)\n    1\n    (* x (fact (dec x)))))\n\n;; and using TCO for avoiding the stack limitation -> and get bigger numbers:\n#_(fn big-fact [x]\n  (loop [decremented x\n         fact-num 1N]\n    (if (zero? decremented)\n       fact-num\n       (recur (dec decremented) (* fact-num decremented)))))", "user": "5553b729e4b0deb715856e05"}, {"problem": 42, "code": "(fn [x] ((fn [x y p] (if (> x y) p (recur (inc x) y (* p x)) )) 1 x 1) )", "user": "55818b0ee4b05c286339e0fb"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5585aa48e4b001b0851d7510"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "51bfc1f0e4b0e49ef9037dd4"}, {"problem": 42, "code": "#(reduce * (range 1, (+ % 1)))", "user": "54bad977e4b0ed20f4ff6eb9"}, {"problem": 42, "code": "(fn kamil [n] (if (= 1 n) 1 (* n (kamil (dec n)))))", "user": "553e2cc0e4b0a04f792994e9"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %1)))", "user": "557ca912e4b05c286339e0c8"}, {"problem": 42, "code": "(fn fact [n]\n  (if (< n 2)\n    1\n    (* n (fact (- n 1)))))", "user": "55885edae4b059ccff29b1f6"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "55896a0ce4b059ccff29b204"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %1)))", "user": "558466fce4b04192f3441eee"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "55895eade4b059ccff29b202"}, {"problem": 42, "code": "(fn fact [x] (if (= x 1) 1 (* x (fact (dec x)))))", "user": "542a7c9be4b01498b1a71b41"}, {"problem": 42, "code": "(fn [fac]\n  (if (= fac 0)\n    1\n    (reduce (fn [a b]\n              (* a b))\n            (range 1 (inc fac)))))", "user": "555ee545e4b0a2eb076a39bd"}, {"problem": 42, "code": "(fn factorial\n  [n]\n  (if (= n 1)\n    1\n    (* n (factorial (- n 1)))))", "user": "5306bceee4b02e821686979b"}, {"problem": 42, "code": "(fn [x] (reduce * (take x (iterate inc 1))))", "user": "5589e88ae4b0277789237610"}, {"problem": 42, "code": "#(loop [current %\n         next (dec current)\n         total 1]\n    (if (> current 1)\n      (recur next (dec next) (* total current))\n      total))", "user": "5037534de4b0af0658af77aa"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "5587d8b3e4b059ccff29b1e8"}, {"problem": 42, "code": "#(reduce * (->> % inc (range 1)))", "user": "55893ebbe4b059ccff29b1ff"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "558bb38fe4b0277789237631"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5568a1bde4b0c656e3ff1857"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "557e2eafe4b05c286339e0d2"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (inc x))))", "user": "558a81fbe4b027778923761c"}, {"problem": 42, "code": "(fn fac [x]\n  (if (= x 1) x (* x (fac (- x 1)))))", "user": "554a270fe4b0a04f79299570"}, {"problem": 42, "code": "(fn factoral [x] \n  (if (= x 1)\n    x\n    (* x (factoral (- x 1)))))", "user": "54cbd6bae4b057c6fda3a282"}, {"problem": 42, "code": "(fn factorial [n]\n  (loop [cnt n acc 1]\n    (if (= 0 cnt)\n      acc\n      (recur (dec cnt)(* acc cnt)))))", "user": "5589a735e4b059ccff29b206"}, {"problem": 42, "code": "(fn [x] (apply * (range 1 (inc x))))", "user": "536be48ee4b0fc7073fd6e31"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "4f070ce6535dcb61093f6c1e"}, {"problem": 42, "code": "(fn [to]\n  (reduce * (take-while #(<= % to)\n              (iterate inc 1))))", "user": "5576e78de4b05c286339e075"}, {"problem": 42, "code": "(fn myfactorial\n  [cnt]\n  (reduce #(* %1 %2) 1\n          (range 1 (inc cnt))))", "user": "55897fe2e4b059ccff29b205"}, {"problem": 42, "code": "(fn factorial [number]\n   (loop [res 1\n          n number]\n     (if (= n 0)\n       res\n       (recur (* res n)\n              (dec n)))))", "user": "55860905e4b001b0851d7516"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "558b50d5e4b027778923762b"}, {"problem": 42, "code": "(fn foo[x](if (= x 1) x (* x (foo (dec x)))))", "user": "558fb14ee4b0277789237664"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "557f7c8be4b05c286339e0e0"}, {"problem": 42, "code": "#(apply * (range % 0 -1))", "user": "53e76363e4b036ad0777e47b"}, {"problem": 42, "code": "(fn fact [n]\n  (loop [i n, r (bigint 1)]\n    (if (<= i 0)\n      r\n      (recur (dec i) (* r i)))))", "user": "5590e55de4b0277789237676"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "54d22860e4b0e8a36923e5ef"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "558aabbfe4b0277789237621"}, {"problem": 42, "code": "#(reduce * (take % (drop 1 (range))))", "user": "55916d7be4b0604b3f94d57d"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "558d7dd3e4b0277789237647"}, {"problem": 42, "code": "(fn\n  [n]\n  (loop [v n\n         acc 1]\n    (if (<= v 1)\n      acc\n      (recur (- v 1) (* acc v)))))", "user": "51d55598e4b01da06753aa8e"}, {"problem": 42, "code": "#(apply * (rest(range (inc %))))", "user": "559279b7e4b0604b3f94d58c"}, {"problem": 42, "code": "#(reduce * (rest (range (inc %1))))", "user": "558df2ebe4b0277789237649"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5416b4a2e4b01498b1a71a01"}, {"problem": 42, "code": "(fn fact [n]\n   (if (zero? n)\n     1\n     (* n (fact (- n 1)))))", "user": "53c0f4dee4b00fb29b221259"}, {"problem": 42, "code": "#(reduce * (map (partial + 1) (range %)))", "user": "531c6e72e4b08068f379eda0"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "557e6b73e4b05c286339e0d6"}, {"problem": 42, "code": "(fn fac [x] (if-not (zero? x) (* x (fac (- x 1))) 1))", "user": "55882c84e4b059ccff29b1f2"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "554c1708e4b0a04f792995a0"}, {"problem": 42, "code": "(fn fact [n]\n    (if (= n 1)\n    1\n    (* (fact (- n 1)) n)))", "user": "55893b09e4b059ccff29b1fe"}, {"problem": 42, "code": "(fn factorial [n]\n   (if (= n 0)\n       1\n       (* (factorial (- n 1)) n)))", "user": "5594f8aee4b0c79f6e1db95c"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5590ebb1e4b0277789237677"}, {"problem": 42, "code": "(fn fac [x] (* x (if (= 1 x) 1 (fac (dec x) ))))", "user": "4fc5eb7fe4b0ee37620e1803"}, {"problem": 42, "code": "#(reduce * 1 (take % (range 1 (+ 1 %))))", "user": "525873e8e4b0cb4875a45cb2"}, {"problem": 42, "code": "(fn [x]\n  (reduce (fn [acc number] (* acc (inc number)))\n          1\n          (range 1 x)))", "user": "5382b433e4b06839e8705ed7"}, {"problem": 42, "code": "(fn fac [x] (if (= 0 x) 1 (* x (fac (- x 1)))))", "user": "5593619ae4b0c79f6e1db93c"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "55933c7ae4b0c79f6e1db938"}, {"problem": 42, "code": "(fn [n] (apply * (rest (range (+ n 1)))))", "user": "55079e55e4b021ccfedb96aa"}, {"problem": 42, "code": "(fn [x] (loop [curr x result 1] (if (= curr 1) result (recur (dec curr) (* result curr)))))", "user": "5592bf9fe4b0c79f6e1db933"}, {"problem": 42, "code": "#(apply * (range 2 (inc %)))", "user": "558f4fbae4b0277789237661"}, {"problem": 42, "code": "(fn [f]\n  (loop [x f\n         r 1]\n    (if (= x 0)\n      r\n    (recur\n     (- x 1)\n     (* r x)\n     )\n    )\n  ))", "user": "55871c62e4b059ccff29b1e0"}, {"problem": 42, "code": "(fn [n]\n  (loop [n n rv 1]\n    (if (#{0 1} n)\n      (* 1 rv)\n      (recur (dec n) (* n rv)))))", "user": "55934bebe4b0c79f6e1db93b"}, {"problem": 42, "code": "#(apply * (range 2 (+ % 1)))", "user": "555883c5e4b0deb715856e2d"}, {"problem": 42, "code": "#(loop [total 1 i %]\n(if (zero? i) \ntotal\n(recur (* total i) (dec i))))", "user": "54de16cae4b024c67c0cf79c"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5598a15ae4b031d6649c9b9d"}, {"problem": 42, "code": "(fn [n]\n  (loop [index n\n         product 1]\n    (if (<= index 0)\n      product\n      (recur (dec index)\n             (* product index)))))", "user": "55995fa7e4b031d6649c9ba9"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "54dbe183e4b024c67c0cf778"}, {"problem": 42, "code": "(fn [n]\n  (loop [cnt n acc 1]\n    (if (zero? cnt)\n      acc\n      (recur (dec cnt) (* acc cnt)))))", "user": "5585f088e4b001b0851d7513"}, {"problem": 42, "code": "(comp (partial apply *)\n      (partial range 1)\n      inc)", "user": "559622cee4b0c79f6e1db975"}, {"problem": 42, "code": "(fn my-fact [n] (if (= n 0) 1 (* n (my-fact (- n 1)))))", "user": "54c9571ee4b045293a27f66b"}, {"problem": 42, "code": "(fn [n] (reduce * (map inc (range n))))", "user": "4fffa422e4b0678c553fc404"}, {"problem": 42, "code": "(fn p42 [x]\n  (apply * (rest (range (+ x 1)))))", "user": "5400e918e4b0de5c41848619"}, {"problem": 42, "code": "(fn factorial\n  ([n](factorial n 1))\n  ([n r]\n  (if (= n 0)\n    r\n    (recur (dec n) (* r n)))))", "user": "55950c5fe4b0c79f6e1db95e"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %1)))", "user": "54aec099e4b09f271ff37cf5"}, {"problem": 42, "code": "#(apply * (range 1 (+ % 1)))", "user": "559c13c5e4b066d22e731f61"}, {"problem": 42, "code": "(fn factorial [n]\n  (reduce * (range 1 (inc n))))", "user": "54117417e4b01498b1a719c5"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "54a627bce4b09f271ff37c83"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (inc x))))", "user": "559647ebe4b0c79f6e1db977"}, {"problem": 42, "code": "(fn factorial [n]\n  (loop [x 1 acc 1]\n    (if (= x n)\n      acc\n      (recur (inc x) (* acc (inc x))))))", "user": "559bdf16e4b066d22e731f5a"}, {"problem": 42, "code": "#(reduce * (range 1 (+ %1 1)))", "user": "5578c67fe4b05c286339e08d"}, {"problem": 42, "code": "#(apply * (range % 0 -1))", "user": "559b2ad1e4b066d22e731f4e"}, {"problem": 42, "code": "(fn [n]\n  (loop [n-it n\n         acc 1]\n    (if (= n-it 0)\n      acc\n      (recur (dec n-it)\n             (* acc n-it)))))", "user": "559d33b3e4b0ec2b359424d9"}, {"problem": 42, "code": "(fn [n] (apply * (range 1 (inc n))))", "user": "559b55d6e4b066d22e731f54"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "55929e89e4b0604b3f94d58e"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %1)))", "user": "5596af34e4b04c1e5c31d758"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "559972d1e4b031d6649c9bab"}, {"problem": 42, "code": "#(loop [v %, res 1]\n   (if (= v 0)\n     res\n     (recur (dec v) (* res v))))", "user": "55868660e4b059ccff29b1d4"}, {"problem": 42, "code": "#(loop [n % result 1] \n   (if (= n 0)\n     result\n     (recur (dec n) (* result n))))", "user": "559e25fde4b08a52bd4f97d0"}, {"problem": 42, "code": "#(reduce * (map inc (range %1)))", "user": "55306f9de4b076ab5578f814"}, {"problem": 42, "code": "(fn my-fact\n  [base]\n  (if (= base 1)\n    1\n    (* base (my-fact (- base 1)))))", "user": "5537f30fe4b09218d5f44fd8"}, {"problem": 42, "code": "(fn fat [x] (if (<= x 1) x (* x (fat (dec x)))))", "user": "55989c25e4b031d6649c9b9b"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "55a0d7e0e4b0acc240e31503"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "559ffabae4b0acc240e314ef"}, {"problem": 42, "code": "(fn ! [x] (if (= x 0) 1 (* x (! (dec x)))))", "user": "55a12668e4b0acc240e3150b"}, {"problem": 42, "code": "#(->> % range (map inc) (reduce *))", "user": "540e97f9e4b0addc1aec671f"}, {"problem": 42, "code": "(fn [n] (apply * (range 1 (+ n 1))))", "user": "55a2bcebe4b0acc240e31529"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "55996253e4b031d6649c9baa"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "55a346e8e4b0acc240e31532"}, {"problem": 42, "code": "(fn fact [x] (if (= 1 x) 1 (*' x ( fact (dec x)))))", "user": "558bdcefe4b0277789237633"}, {"problem": 42, "code": "(fn fact [x]\n  (if (= x 0)\n    1\n    (* x (fact (- x 1)))))", "user": "55a35ef4e4b0acc240e31535"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "559c3d73e4b066d22e731f65"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "559a8816e4b066d22e731f41"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5594e0e3e4b0c79f6e1db95b"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "55a1d7f6e4b0acc240e31519"}, {"problem": 42, "code": "(fn fact [x]\n  (if (== x 1) 1\n    (* x (fact (- x 1))\n    )\n  )\n)", "user": "55a59ebae4b0acc240e3154d"}, {"problem": 42, "code": "#(loop [r 1 i 1] (if (> i %) r (recur (* r i) (inc i))))", "user": "503e91d4e4b06c4e0e1fa269"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "54a96a15e4b09f271ff37cad"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (inc x))))", "user": "55a62092e4b0acc240e31554"}, {"problem": 42, "code": "(fn [n] (reduce * (map #(+ % 1) (range n))))", "user": "559eb160e4b0acc240e314e1"}, {"problem": 42, "code": "(fn [x] (loop [n x prod 1N] (if (= n 0N) prod (recur (dec n) (* n prod)))))", "user": "553527ede4b09218d5f44fab"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "55496eeae4b0a04f79299569"}, {"problem": 42, "code": "#(->> % inc (range 1) (apply *))", "user": "55a74d46e4b09e57187da2a3"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (inc x))))", "user": "551e8627e4b08d5046aa8a45"}, {"problem": 42, "code": "#(apply * (range 1 (+ %1 1)))", "user": "5574c172e4b05c286339e059"}, {"problem": 42, "code": "(fn [f_end] (reduce * (take-while pos? (iterate dec f_end))))", "user": "556189a6e4b0c656e3ff17c9"}, {"problem": 42, "code": "#(loop [acc 1\n        n %]\n   (if (= n 0)\n     acc\n     (recur (* n acc) (dec n))))", "user": "5592dc6be4b0c79f6e1db935"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "553beff9e4b09218d5f4500d"}, {"problem": 42, "code": "#(reduce * (take % (iterate inc 1)))", "user": "55a30e9de4b0acc240e3152f"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "55aa1637e4b0988bba2ad949"}, {"problem": 42, "code": "(fn [nu]\n  ((fn [n acc]\n    (if (zero? n)\n      acc\n      (recur (dec n) (* acc n)))) nu 1))", "user": "55a1ba5ee4b0acc240e31517"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %1)))", "user": "55aa5f73e4b0988bba2ad94b"}, {"problem": 42, "code": "#(->> (range 1 (inc %))\n      (reduce *))", "user": "559468cbe4b0c79f6e1db954"}, {"problem": 42, "code": "(fn factorial [x]\n  (apply * (take x (iterate inc 1))))", "user": "54d5343fe4b0a52adc2e200a"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5593b10ce4b0c79f6e1db943"}, {"problem": 42, "code": "(fn fact\n  [n]\n  (reduce * (take n (iterate inc 1))))", "user": "55a0a278e4b0acc240e314ff"}, {"problem": 42, "code": "(fn [n]\n    (letfn [(hf [result i]\n              (if (< i 2)\n                result\n                (recur (* i result) (dec i))))]\n      (hf 1 n)))", "user": "55ac07afe4b03311e7b7328f"}, {"problem": 42, "code": "(fn [x]\n  (loop [acc 1 i x]\n    (if (zero? i)\n      acc\n      (recur (* i acc) (- i 1)))))", "user": "52dbd423e4b09f7907dd13c6"}, {"problem": 42, "code": "#(loop [p 1\n        m %]\n  (if\n    (= m 1)\n    p\n    (recur (* p m) (- m 1))))", "user": "559a9a3de4b066d22e731f45"}, {"problem": 42, "code": "(fn fact [x] (if (< x 2) 1 (* x (fact (dec x)))))", "user": "55a0e139e4b0acc240e31504"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5595ffabe4b0c79f6e1db972"}, {"problem": 42, "code": "#(reduce * ( range  1 (inc % )))", "user": "55998d0ce4b031d6649c9bac"}, {"problem": 42, "code": "(fn bang\n  [x]\n  (reduce * 1 (range 1 (inc x)))\n)", "user": "55acd080e4b03311e7b73298"}, {"problem": 42, "code": "#(reduce * (rest (range (+ % 1))))", "user": "55aaa36fe4b0988bba2ad94f"}, {"problem": 42, "code": "(fn [u] (reduce * (range 1 (inc u)))\n)", "user": "55adf4d7e4b03311e7b732af"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "55ad59cde4b03311e7b732a7"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "54edfebbe4b024c67c0cf869"}, {"problem": 42, "code": "#(loop [a % b 1]\n    (if (= 0 a)\n      b\n      (recur (dec a) (* a b))))", "user": "55afc197e4b002ce9d5cbc18"}, {"problem": 42, "code": "(fn [x]\n  (apply * (range 1 (inc x))))", "user": "5592c56ee4b0c79f6e1db934"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "559c4236e4b066d22e731f67"}, {"problem": 42, "code": "(fn fact [x] (if (< x 2) 1 (* x (fact (dec x)))))", "user": "54f3d6c7e4b050824f58f5cb"}, {"problem": 42, "code": "(fn fact [x]\n  (if (= x 1)\n    1\n    (* x (fact (dec x)))))", "user": "55b08677e4b002ce9d5cbc23"}, {"problem": 42, "code": "(fn [n]\n  (loop [current 1\n          end n\n          result 1]\n    (if (= end current)\n      (* result end)\n      (recur (inc current) end (* result current)))))", "user": "55a5c3bee4b0acc240e3154e"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "55b0ecb7e4b002ce9d5cbc27"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "55ab8c2de4b0988bba2ad954"}, {"problem": 42, "code": "#(apply * (range 1 (+ 1 %)))", "user": "55b1372de4b002ce9d5cbc2e"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "53cb5559e4b00fb29b2212d2"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "55ab07e0e4b0988bba2ad953"}, {"problem": 42, "code": "#(apply * (take % (iterate inc 1)))", "user": "53396c03e4b0e30313ee6ca7"}, {"problem": 42, "code": "#(reduce * (range 2 (inc %)))", "user": "55b25970e4b0da326a65cf7e"}, {"problem": 42, "code": "(fn fac ([a] (fac a 1)) ([a acc] (if (= 0 a) acc (recur (dec a) (* a acc)))))", "user": "55af7e21e4b03311e7b732cc"}, {"problem": 42, "code": "(fn [n]\n  (apply * (range 1 (inc n))))", "user": "547a714ae4b0c51c1f4d72cc"}, {"problem": 42, "code": "#(apply * (take % (iterate inc 1)))", "user": "5564c113e4b0c656e3ff180d"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "55b527cbe4b01b9910ae2985"}, {"problem": 42, "code": "(fn fact [x]\n    (loop [n x f 1]\n        (if (= n 1)\n            f\n            (recur (dec n) (* f n)))))", "user": "55b3e8aee4b01b9910ae2977"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5587cd86e4b059ccff29b1e6"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "54236ce1e4b01498b1a71ad1"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "522fdff7e4b032bbe342416c"}, {"problem": 42, "code": "(fn [x]\n    (loop [n x f 1]\n        (if (= n 1)\n            f\n            (recur (dec n) (* f n)))))", "user": "55a122d9e4b0acc240e3150a"}, {"problem": 42, "code": "(fn fac [x]\n  (if (= x 1)\n    1\n    (* x (fac (dec x)))))", "user": "55b5e978e4b01b9910ae298c"}, {"problem": 42, "code": "(fn [n] \n    (loop [i 1 r 1]\n        (if (<= i n)\n            (recur (inc i) (* r i))\n            r)))", "user": "55975569e4b031d6649c9b8e"}, {"problem": 42, "code": "#(reduce * (map inc (range %)))", "user": "53e9dce1e4b036ad0777e4bc"}, {"problem": 42, "code": "#(loop [i 1 n %] \n    (if (= n 1) \n      i \n      (recur (* i n) (dec n))))", "user": "55278187e4b0ffed3738f92d"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "55b77c7ce4b01b9910ae29a3"}, {"problem": 42, "code": "(fn factorial [n] \n  (loop [cnt n total 1]\n    (if (zero? cnt)\n      total\n      (recur (dec cnt) (* total cnt))\n   )))", "user": "55b1ab40e4b0da326a65cf6e"}, {"problem": 42, "code": "(fn [x]\n\t(loop [n x f 1]\n        \t(if \n\t\t\t\t(= n 1)\n              \t;; true\n            \tf\n              \t;; false\n \t\t\t\t(recur (dec n) (* f n))\n\t\t)\n\t)\n)", "user": "5595c60ee4b0c79f6e1db96f"}, {"problem": 42, "code": "#(reduce * (take % (iterate dec %)))", "user": "516f5b7ee4b0ef3e37990e7e"}, {"problem": 42, "code": "#(->> % (range) (map inc) (reduce *))", "user": "55aa7c5ce4b0988bba2ad94d"}, {"problem": 42, "code": "#(apply * (range 2 (inc %)))", "user": "55b69e37e4b01b9910ae2999"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "556204c2e4b0c656e3ff17d2"}, {"problem": 42, "code": "#(apply * (range 1 (+ 1 %1)))", "user": "55b8c339e4b01b9910ae29b9"}, {"problem": 42, "code": "(fn faktor [x]\n  (if (> x 1)\n    (* x (faktor (- x 1))) 1))", "user": "503c90aae4b06c4e0e1fa24b"}, {"problem": 42, "code": "(fn\n  [x]\n  (loop [z 1\n         total 1]\n    (if (<= z x)\n      (recur (inc z) (* total z))\n\t  total)))", "user": "559057c4e4b027778923766e"}, {"problem": 42, "code": "(fn [x]\n  (loop [in x out 1]\n    (if (zero? in)\n      out\n      (recur (dec in) (* in out))\n      )))", "user": "55b705fce4b01b9910ae29a0"}, {"problem": 42, "code": "(fn fact [n]\n  (if (or (= n 0) (= n 1))\n    1\n    (* n (fact (- n 1)))))", "user": "55bbfd60e4b01b9910ae29ed"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5537cbaee4b09218d5f44fd3"}, {"problem": 42, "code": "#(reduce * (take % (iterate inc 1)))", "user": "55b1e9e7e4b0da326a65cf74"}, {"problem": 42, "code": "(fn [n]\n   (reduce * (take n (iterate dec n))))", "user": "55b54ecbe4b01b9910ae2987"}, {"problem": 42, "code": "(fn fac [x]\n  (if (= x 0)\n    1\n    (* x (fac (- x 1)))))", "user": "559477bce4b0c79f6e1db956"}, {"problem": 42, "code": ";(fn ! [n]\n;  (if (= n 1)\n;      1\n;      (* n (! (dec n)))))\n#(reduce * (range 1 (inc %)))", "user": "549dfe40e4b0f3d1d8e70f9a"}, {"problem": 42, "code": "(fn temp [x] (if (= 0 x) 1 (* x (temp\n                              (dec x)))))", "user": "55adf65fe4b03311e7b732b0"}, {"problem": 42, "code": "(fn fac\n  [x]\n  (if (= x 0) \n    1\n    (* x (fac (dec x)))))", "user": "55b3c03ee4b01b9910ae2975"}, {"problem": 42, "code": "(comp (partial reduce *) next range inc)", "user": "55be39f9e4b01b9910ae2a06"}, {"problem": 42, "code": "#(reduce * (map inc (range %)))", "user": "55b107fee4b002ce9d5cbc2a"}, {"problem": 42, "code": "(fn [x]\n  (loop [counter x\n         accumulator 1]\n    (if (= counter 0)\n      accumulator\n      (recur (dec counter) (* counter accumulator)))))", "user": "557775a3e4b05c286339e084"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %1)))", "user": "5520d6b8e4b08d5046aa8a65"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "55bfc39ee4b01b9910ae2a1a"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "55c0afa5e4b01b9910ae2a27"}, {"problem": 42, "code": "#(apply * (range 1 (inc %1)))", "user": "55c10409e4b01b9910ae2a2c"}, {"problem": 42, "code": "(fn [i]\n  (reduce * (range 1 (inc i))))", "user": "50978ca4e4b00ad8bab4e966"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "55c1048ee4b01b9910ae2a2d"}, {"problem": 42, "code": "(fn [n] (reduce * (range 2 (inc n))))", "user": "4e8a170c535d3e98b802328f"}, {"problem": 42, "code": "(fn my-factorial\n [n]\n (if (= 1 n)\n   1\n  (* n (my-factorial (dec n)))))", "user": "5599abc9e4b031d6649c9bb0"}, {"problem": 42, "code": "(fn [n]\n  (reduce #(* %1 %2) (range 1 (inc n))))", "user": "549c6792e4b0f3d1d8e70f8b"}, {"problem": 42, "code": "(fn f [n]\n  (if (= n 1)\n    1\n    (* n (f (- n 1)))))", "user": "559454f2e4b0c79f6e1db952"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5586f418e4b059ccff29b1de"}, {"problem": 42, "code": "(fn [n]\n  (loop [c n\n         acc 1]  \n    (if (= c 1) \n      acc\n      (recur (dec c) (* c acc) ) )))", "user": "55aa8276e4b0988bba2ad94e"}, {"problem": 42, "code": "#(reduce * (take % (iterate dec %)))", "user": "55c37594e4b0e31453f64989"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (inc x))))", "user": "55c387e4e4b0e31453f6498b"}, {"problem": 42, "code": "(fn [number]\n  (apply * (range 1 (inc number))))", "user": "55c313a0e4b0e31453f64986"}, {"problem": 42, "code": "(comp (partial reduce *)\n      (partial range 1)\n      inc)", "user": "55c4e48be4b0e31453f649a7"}, {"problem": 42, "code": "(fn fact [n] \n  (if (= n 1)\n    1 \n    (* n (fact (- n 1)))))", "user": "55c5153de4b0e31453f649ad"}, {"problem": 42, "code": "(fn [n]\n  (reduce * 1 (range 1 (inc n))))", "user": "55c68089e4b0e31453f649c4"}, {"problem": 42, "code": "(fn fac [n]\n  (if (= 1 n)\n    1\n    (* n (fac  (dec n)))))", "user": "55c652dde4b0e31453f649bd"}, {"problem": 42, "code": "(fn [x]\n  (reduce * (range 1 (inc x))))", "user": "5512cd55e4b055c2f668d4ba"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "55c3149de4b0e31453f64987"}, {"problem": 42, "code": "#(reduce * (take % (iterate dec %)))", "user": "5582dfb6e4b05c286339e10d"}, {"problem": 42, "code": "(fn [n] (loop [n n r 1] (if (= n 1) r (recur (dec n) (* n r)))))", "user": "559d3d22e4b0ec2b359424da"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "55c1eb52e4b0e31453f64970"}, {"problem": 42, "code": "#(reduce * (drop 1 (range (inc %))))", "user": "54b817eee4b0ed20f4ff6e93"}, {"problem": 42, "code": "(fn [x] (loop [a x r 1] (if (> a 1) (recur (- a 1) (* r a)) r)))", "user": "55ac16a0e4b03311e7b73291"}, {"problem": 42, "code": "(fn factorial2\n  [number]\n    (reduce * (range 1N (inc number))))", "user": "55a9e0fee4b0988bba2ad945"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "55b1b67ce4b0da326a65cf6f"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "53fc63dce4b0de5c4184859f"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "55b45825e4b01b9910ae297c"}, {"problem": 42, "code": "#(reduce * (rest (range (inc %))))", "user": "55c77070e4b0e31453f649d0"}, {"problem": 42, "code": "(fn [n] (reduce * (rest (take (inc n) (range)))))", "user": "553f70cae4b0a04f792994f8"}, {"problem": 42, "code": "(fn factor [n]\n  (if (= 1 n)\n    1\n    (* n (factor (dec n)))))", "user": "55c734a5e4b0e31453f649cb"}, {"problem": 42, "code": "#(reduce * (take % (iterate dec %)))", "user": "55c423e1e4b0e31453f64994"}, {"problem": 42, "code": "(fn fac [n]\n (if (= n 1)\n   1\n   (* n (fac (- n 1) ) )\n )\n \n \n)", "user": "55bb7546e4b01b9910ae29e7"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "55a372f1e4b0acc240e31537"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "546e1142e4b00cfc9eacc199"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "551d8796e4b07993ea3788ec"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "55ca4273e4b0e31453f649f9"}, {"problem": 42, "code": "#(let\n[\n\tfac ((fn fuck! ([] (fuck! 1 1)) ([a b] (cons a (lazy-seq (fuck! (* (inc b) a) (inc b))) ))))\n]\n  (last (take % fac)))", "user": "55b39523e4b01b9910ae2973"}, {"problem": 42, "code": "(fn [n]\n  (reduce #(* %1 %2) (range 1 (inc n))))", "user": "55a0d79fe4b0acc240e31502"}, {"problem": 42, "code": "#(apply * (take % (iterate inc 1)))", "user": "55c20bd0e4b0e31453f64972"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "55c9bc1ee4b0e31453f649f1"}, {"problem": 42, "code": "#(reduce (fn [r x] (* r (inc x))) 1 (take % (range)))", "user": "52f23d85e4b05e3f0be25ef6"}, {"problem": 42, "code": "(fn fact [n]\n  (if (< n 2) \n    n\n    (* n (fact (dec n)))))", "user": "55caabd1e4b0e31453f649fb"}, {"problem": 42, "code": "(fn f ([x] (f x 1)) ([x v] (if (= 1 x) v (f (dec x) (* x v)))))", "user": "4eb171d7535d7eef30807340"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %1)))", "user": "55be464ce4b01b9910ae2a07"}, {"problem": 42, "code": "(comp (partial apply *) next range inc)", "user": "55cdc576e4b0e31453f64a1f"}, {"problem": 42, "code": "#(reduce * (map inc (range %)))", "user": "552bab7fe4b0ffed3738f966"}, {"problem": 42, "code": "(fn\n  [n]\n  (loop [acc 1 c n]\n    (if (zero? c)\n      acc\n      (recur (*' acc c) (dec c)))))", "user": "556e3b73e4b09a3098a52514"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (+ %1 1)))", "user": "55627de1e4b0c656e3ff17d9"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "55d0e76ae4b0e31453f64a40"}, {"problem": 42, "code": "(fn [x] (apply * (range 1 (inc x))))", "user": "55cae949e4b0e31453f649fe"}, {"problem": 42, "code": "(fn [number] (reduce * (rest (range (+ 1 number)))))", "user": "55c07e3ee4b01b9910ae2a24"}, {"problem": 42, "code": "(fn f[n] (if (= n 1) 1 (* n  (f (dec n)))))", "user": "55b22c33e4b0da326a65cf79"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "55bedd93e4b01b9910ae2a0d"}, {"problem": 42, "code": "(fn frac [n]\n  (if (> n 1)\n    (* (frac (dec n)) n)\n    n))", "user": "55d1f231e4b0e31453f64a4e"}, {"problem": 42, "code": "(fn [x]\n  (loop [n x\n         total 1]\n    (if (= n 0)\n      total\n      (recur (dec n) (* total n)))))", "user": "55d06bcbe4b0e31453f64a3a"}, {"problem": 42, "code": "(fn [n]\n  (loop [n n\n         result n]\n    (if (<= n 1)\n      result\n      (recur (dec n) (* result (dec n))))))", "user": "55b7f263e4b01b9910ae29b4"}, {"problem": 42, "code": "(fn factorial [n]\n  (reduce * (range 1 (inc n))))", "user": "5589a941e4b059ccff29b207"}, {"problem": 42, "code": "#((fn [x acc] (if (= 1 x)\n         acc\n         (recur (dec x) (* acc x))\n         )) % 1)", "user": "55cdd76ae4b0e31453f64a20"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "55773cbae4b05c286339e07f"}, {"problem": 42, "code": ";#(loop [r 1\n;       i %]\n;  (if (> i 0)\n;    (recur (* r i) (dec i))\n;    r))\n \n#(apply * (take % (iterate inc 1)))", "user": "55236ad6e4b0882d96d091b1"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "55ccdc6be4b0e31453f64a18"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "55a65872e4b09e57187da299"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "55b0f5bfe4b002ce9d5cbc28"}, {"problem": 42, "code": "(fn [^Integer n] (cond (< n 2) 1\n                       :else (reduce (fn [acc v] (* acc v)) 1 (range 2 (inc n)))))", "user": "534056fce4b085b17e897dac"}, {"problem": 42, "code": "#(reduce * (range 1 (inc%)))", "user": "55d332f5e4b0e31453f64a5f"}, {"problem": 42, "code": "(fn fac [n]\n    (if (= n 1)\n      1\n      (* n (fac (- n 1)))))", "user": "54864662e4b0e286459a11b8"}, {"problem": 42, "code": "#(apply * (take % (iterate inc 1)))", "user": "55ba33afe4b01b9910ae29cb"}, {"problem": 42, "code": "(fn naive-fac [n]\n  (if (= n 1)\n    1\n    (* n (naive-fac (dec n)))))", "user": "55d204abe4b0e31453f64a4f"}, {"problem": 42, "code": "(fn fac [x] (if (<= x 0) 1 (* x (fac (- x 1)))))", "user": "55c98647e4b0e31453f649ed"}, {"problem": 42, "code": "(fn [x]\n  (loop [i x\n         acc 1]\n    (if (zero? i)\n      acc\n      (recur (dec i) (* i acc)))))", "user": "55d4dddde4b0e31453f64a7f"}, {"problem": 42, "code": "(fn [x] (reduce * 1 (range 1 (+ x 1))))", "user": "4e72a717535d5021c1a89665"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "55d5ee3fe4b0e31453f64a92"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "55d5e80ee4b0e31453f64a91"}, {"problem": 42, "code": "(fn [n]\n  (loop [acc 1\n         i 1]\n    (if (> i n)\n      acc\n      (recur (* acc i) (inc i)))))", "user": "55d6a2ebe4b0e31453f64a9a"}, {"problem": 42, "code": ";(fn fac\n;  [x]\n;  (cond \n;   \t(< x 2) 1\n;   \t:else (* x (fac (dec x)))))\n\n#(reduce * (range 1 (inc %)))", "user": "55b42706e4b01b9910ae297b"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "55d1b565e4b0e31453f64a49"}, {"problem": 42, "code": "#(apply * (range 1 (inc %1)))", "user": "55d95be7e4b0e31453f64ac9"}, {"problem": 42, "code": "(fn \n  [n]\n  (loop\n    [res 1\n     counter n]\n    (if (= 1 counter)\n      res\n      (recur (* counter res) (dec counter)))))", "user": "55a19e19e4b0acc240e31515"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "559067ace4b0277789237670"}, {"problem": 42, "code": "#(apply * (range 1 (+ % 1)))", "user": "55d29fb6e4b0e31453f64a59"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "55d045cde4b0e31453f64a38"}, {"problem": 42, "code": "(fn fact [x] (if (< x 2) 1 (* x (fact (dec x)))))", "user": "55bb6a19e4b01b9910ae29e5"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "55dab5c8e4b0e31453f64ada"}, {"problem": 42, "code": "(fn factorial [n]\n  (if (= n 1)\n    1\n    (* n (factorial (dec n)))))", "user": "5561d2c2e4b0c656e3ff17cd"}, {"problem": 42, "code": "#(reduce * 1 (map inc (range %)))", "user": "4f435ee8e4b0d7d3c9f3fd1f"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %1)))", "user": "558fec41e4b0277789237666"}, {"problem": 42, "code": "#(apply * (range 1 (inc %1)))", "user": "55d50a38e4b0e31453f64a80"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "553c136ae4b09218d5f45012"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "55d8eed3e4b0e31453f64ac3"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "55da1ebce4b0e31453f64ad2"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "54f11c0ce4b024c67c0cf8ab"}, {"problem": 42, "code": "(fn [x] (apply * (range 1 (inc x))))", "user": "52ca7711e4b071a8d36bd3e3"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "55bd6734e4b01b9910ae29fd"}, {"problem": 42, "code": "#(reduce * (take-while pos? (iterate dec %)))", "user": "54722c55e4b094393f72dd74"}, {"problem": 42, "code": "#(->> (inc %) (range 1) (reduce *))", "user": "55db7e15e4b0e31453f64ae8"}, {"problem": 42, "code": "(fn [number] (loop [result 1 times number]\n  (if (= times 0)\n    result\n    (recur (* result times) (dec times))\n  )))", "user": "55d79b87e4b0e31453f64aa8"}, {"problem": 42, "code": "(fn fac ([x] (fac x 1)) ([x y] (if (= x 1) y ( fac (dec x) (* y x) ))))", "user": "55d35a01e4b0e31453f64a63"}, {"problem": 42, "code": "#(->> (range %) (map inc) (apply *))", "user": "55dab408e4b0e31453f64ad9"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "514a3fa5e4b0829bd132edb6"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "55dcb06ee4b050e68259b3b9"}, {"problem": 42, "code": "#(first (last (take (+ 1 %) (iterate (fn [[f, x]] [(* f x), (inc x)]) [1, 1] ))))", "user": "55dd91c9e4b050e68259b3ca"}, {"problem": 42, "code": "(fn fac [x]\n  (if (= x 1) 1\n    (* x (fac (dec x)))))", "user": "55815973e4b05c286339e0f6"}, {"problem": 42, "code": "(fn c [x] (if (<= x 1) 1 (* x (c (dec x)) )))", "user": "55db03c6e4b0e31453f64adf"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "553bda0de4b09218d5f4500b"}, {"problem": 42, "code": "#(apply * (rest (take (inc %) (range))))", "user": "5582c5b1e4b05c286339e10a"}, {"problem": 42, "code": "(fn [x]\n  (loop [r x y (dec x)]\n    (if (<= y 1)\n      r\n      (recur (* y r) (dec y)))))", "user": "55d87324e4b0e31453f64ab4"}, {"problem": 42, "code": "(fn [x]\n    (loop [n x f 1]\n        (if (= n 1)\n            f\n            (recur (dec n) (* f n)))))", "user": "550a2c61e4b06e50f9beb12b"}, {"problem": 42, "code": "#(apply * (take % (iterate inc 1)))", "user": "55c3c1b0e4b0e31453f6498c"}, {"problem": 42, "code": "(fn factorial-using-reduce [n]\n  (reduce * (range 1 (inc n))))", "user": "55d1a721e4b0e31453f64a47"}, {"problem": 42, "code": "(fn fact [x] (reduce * (range 1 (+ x 1))))", "user": "4eb83593535dd6025b394d1b"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "55ded9fde4b050e68259b3e7"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "55c5261ee4b0e31453f649ae"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "54924f64e4b0b312c081ff42"}, {"problem": 42, "code": "(fn [x]\n         (loop [n x f 1]\n           (if (= 1 n)\n             f\n             (recur (dec n) (* f n)))\n           ))", "user": "55d42f78e4b0e31453f64a73"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "55e1d34ae4b050e68259b421"}, {"problem": 42, "code": ";(fn factorial [n] (if (> n 0) (* n (factorial (dec n))) 1))\n#(reduce * (range 1 (inc %)))", "user": "55d85ac9e4b0e31453f64ab2"}, {"problem": 42, "code": "(fn [n] (loop [n' n r 1] \n          (if (zero? n') \n            r \n            (recur (dec n') \n                   (* r n')))))", "user": "5148bcbee4b05514c84b7cc6"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "55e26417e4b050e68259b433"}, {"problem": 42, "code": "#(apply * (range 1 (inc %1)))", "user": "5563b88be4b0c656e3ff17f5"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (+ n 1))))", "user": "55dc2ad1e4b050e68259b3ac"}, {"problem": 42, "code": "(fn fact [n]\n\t(loop [n1 n\n\t\tr 1]\n\t\t(if (or (= 0 n1) (= 1 n1)) r\n\t\t\t(recur (dec n1) (* r n1)))))", "user": "55deeface4b050e68259b3ea"}, {"problem": 42, "code": "#(apply * (range % 0 -1))", "user": "54a1f494e4b09f271ff37c52"}, {"problem": 42, "code": "#(loop [fac % acc 1] (if (zero? fac) acc (recur (dec fac) (* acc fac))))", "user": "55d93d24e4b0e31453f64ac6"}, {"problem": 42, "code": "#(reduce * ( take % (iterate inc 1)))", "user": "55d44dd6e4b0e31453f64a75"}, {"problem": 42, "code": "(fn [t] \n  (apply * (take t (iterate dec t))))", "user": "55d74e71e4b0e31453f64aa4"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (+ % 1)))", "user": "4dd5fdb0535d2dad7130b5c5"}, {"problem": 42, "code": "(fn [x]\n  (reduce * (range 1 (inc x)))\n  )", "user": "54c94376e4b045293a27f665"}, {"problem": 42, "code": "(fn fac [n]\n    (if (= n 1)\n      1\n      (* n (fac (- n 1)))))", "user": "53a68c5ae4b0ef122a8689c8"}, {"problem": 42, "code": "#(reduce *(range 1(inc %)))", "user": "55e1e4b8e4b050e68259b423"}, {"problem": 42, "code": "(fn [n] (reduce * 1N (range 1N (inc n))))", "user": "55df1985e4b050e68259b3eb"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "55ce2b6de4b0e31453f64a26"}, {"problem": 42, "code": "#(apply * (map inc (range %)))", "user": "55d2dd27e4b0e31453f64a5b"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "55cb11e9e4b0e31453f649ff"}, {"problem": 42, "code": "(fn fact [n]\n  \t(if (< n 2)\n      1\n      (* n (fact (dec n)))))", "user": "55e4487ce4b050e68259b44c"}, {"problem": 42, "code": "(fn fact [n]\n  (cond\n    (zero? n) 1\n    (= n 1) 1\n    :else (* n (fact (dec n)))\n    ))", "user": "55e7fc2ce4b0121d4835fd86"}, {"problem": 42, "code": "(fn f [x]\n  (if (= x 1)\n    1\n    (* x (f (dec x)))))", "user": "55e87696e4b0121d4835fd93"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "55e70e8de4b050e68259b490"}, {"problem": 42, "code": "(fn [x]\n  (apply * (range 1 (inc x))))", "user": "554bd33ce4b0a04f7929959a"}, {"problem": 42, "code": "(fn [n] (->> (iterate inc 1) (take n) (reduce *)))", "user": "55e2f502e4b050e68259b43c"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "55b0d315e4b002ce9d5cbc26"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "55df3b11e4b050e68259b3ef"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "55dd0aebe4b050e68259b3bf"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "55d9743ae4b0e31453f64aca"}, {"problem": 42, "code": "(fn fac [n]\n  (if (= n 1)\n    1\n    (* n (fac (- n 1)))))", "user": "55eb1410e4b0121d4835fdb8"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "54290a64e4b01498b1a71b36"}, {"problem": 42, "code": "(fn [i] (apply * (range 1 (inc i))))", "user": "5530baa5e4b076ab5578f81a"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "55e6c3f5e4b050e68259b48c"}, {"problem": 42, "code": "(fn factorial [n]\n  (if (= n 1)\n    1\n    (* n (factorial (- n 1) ))\n  )\n)", "user": "55e9842ae4b0121d4835fda1"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "55ecb2c0e4b0121d4835fdce"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "55ec04c4e4b0121d4835fdc1"}, {"problem": 42, "code": ";#((loop [n % sum 1]\n;    (if (= n 1)\n;      sum\n;     (recur (dec n) (* n sum)))))\n\n(fn fac [n]\n  (if (= n 1)\n    1\n    (* n (fac (dec n)))))\n\n;#(reduce * (range 1 (+ 1 %)))", "user": "55ed1dc5e4b0121d4835fdd4"}, {"problem": 42, "code": "(fn fac [n]\n  (if (= n 0) \n    1\n  \t(* n (fac (dec n)))\n  )\n)", "user": "55efbb2ae4b066087aa9453c"}, {"problem": 42, "code": "#(reduce * (take % (iterate inc 1)))", "user": "529c722de4b04e0c58e87b63"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "55ecac8ee4b0121d4835fdcc"}, {"problem": 42, "code": "(fn [n] (apply * (range 1 (inc n))))", "user": "55ea0780e4b0121d4835fda7"}, {"problem": 42, "code": "#(loop [cnt % acc 1]\n       (if (zero? cnt)\n            acc\n          (recur (dec cnt) (* acc cnt))\n ))", "user": "5390347de4b0b51d73faae96"}, {"problem": 42, "code": "(fn factor [n]\n  (reduce *\t(range 1 (inc n)))\n  )", "user": "55ec1048e4b0121d4835fdc3"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "55e84475e4b0121d4835fd8b"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "55f014ebe4b06e875b46ce1b"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %1)))", "user": "50c95c4fe4b0bed41a12298f"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "55ed962ae4b0121d4835fddd"}, {"problem": 42, "code": "#(apply * % (range 1 %))", "user": "53fc88e7e4b0de5c418485be"}, {"problem": 42, "code": "#(loop [factnum %\n        coll '()]\n   (if (= factnum 0)\n     (reduce * coll)\n     (recur (dec factnum) (cons factnum coll))))", "user": "55eeeb81e4b0121d4835fdf7"}, {"problem": 42, "code": "(fn factorial [n]\n   ((fn f_inner [n acc]\n     (if (> n 1)\n       (recur (dec n) (* acc n))\n       acc))\n   n 1))", "user": "55f04940e4b06e875b46ce21"}, {"problem": 42, "code": "(fn factorial [^long n]\n  (loop [accum 1\n         n n]\n    (if (zero? n)\n      accum\n      (recur (unchecked-multiply accum n) (unchecked-dec n))\n      )\n    )\n  )", "user": "55f06183e4b06e875b46ce23"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "55df5feae4b050e68259b3f1"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "4f5eda39e4b0030a34fb2b56"}, {"problem": 42, "code": "(fn [x]\n  (apply * (map inc (range x))))", "user": "500e6ddee4b04a05d36fcc06"}, {"problem": 42, "code": "#(apply * (take % (iterate inc 1)))", "user": "55dbed2fe4b050e68259b3a6"}, {"problem": 42, "code": "(fn [n]\n  (apply * (range 1 (inc n))))", "user": "546be022e4b00cfc9eacc171"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "526c669be4b03e8d9a4a728f"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %1)))", "user": "539e717fe4b0ca733b974488"}, {"problem": 42, "code": "#(reduce * (take % (drop 1 (range))))", "user": "55f2fdc3e4b06e875b46ce51"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "55f20e4be4b06e875b46ce40"}, {"problem": 42, "code": "(fn [x]\n    (loop [n x f 1]\n        (if (= n 1)\n            f\n            (recur (dec n) (* f n)))))", "user": "55912230e4b027778923767a"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "55f1ce28e4b06e875b46ce37"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "54d05a9de4b0e8a36923e5c7"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5573a505e4b0aa18f790f3fa"}, {"problem": 42, "code": "(fn [n]\n  (loop [acc n mult (- n 1)]\n    (if (= 0 mult)\n      acc\n      (recur (* acc mult) (- mult 1)))))", "user": "524e79c1e4b0541d1855b7e0"}, {"problem": 42, "code": "(comp (partial apply *) (partial map inc) range)", "user": "55f5625de4b06e875b46ce86"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "55e5c852e4b050e68259b474"}, {"problem": 42, "code": "#((fn fac [acc x]\n   (if (= x 0)\n    acc\n    (fac (* acc x) (- x 1))\n   ))\n   1 %)", "user": "55f6c0e2e4b06e875b46ce99"}, {"problem": 42, "code": "#(reduce * (map inc (range %)))", "user": "55e59b67e4b050e68259b46f"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "55f7ebeae4b06e875b46ceb7"}, {"problem": 42, "code": "(fn fac [n]\n  (reduce * (range 1 (inc n))))", "user": "55f01316e4b06e875b46ce1a"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "55f4ef68e4b06e875b46ce82"}, {"problem": 42, "code": "(fn [x] (reduce * (map (fn [y] (+ y 1)) (range x))))", "user": "55f73696e4b06e875b46cea6"}, {"problem": 42, "code": "(fn prob42 [x]\n  (reduce * (range 1 (+ 1 x))))", "user": "4ebbff41535dfed6da9c6d78"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5541fa50e4b0a04f79299515"}, {"problem": 42, "code": "(fn factorial [n]\n  (if (< n 2)\n    1\n    (* n (factorial (dec n)))))", "user": "55f9c245e4b03cbcff9738ca"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "55e1fc42e4b050e68259b424"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "55f7e056e4b06e875b46ceb4"}, {"problem": 42, "code": "#(reduce * (range 1 (+ %1 1)))", "user": "55efc44ee4b066087aa9453e"}, {"problem": 42, "code": "(fn f [n] \n  (if (= 1 n)\n    1\n    (* n (f (dec n)))))", "user": "55f8fd70e4b03cbcff9738bc"}, {"problem": 42, "code": "#(loop [f 1 n %] (if (= n 0) f (recur (* f n) (dec n))))", "user": "55eeb37ae4b0121d4835fdf3"}, {"problem": 42, "code": "#(reduce * (take % (iterate inc 1)))", "user": "558ee1c9e4b0277789237659"}, {"problem": 42, "code": "(comp (partial reduce *) #(range 1 (+ % 1)))", "user": "55fbf6cae4b0f488688e066c"}, {"problem": 42, "code": "(fn ! [x] (if (< x 1) 1 (* x (! (dec x)))))", "user": "55fb58b2e4b0f488688e0661"}, {"problem": 42, "code": "(fn [n]\n            (apply * (take n (range 1 (inc n))) ))", "user": "55edc088e4b0121d4835fde0"}, {"problem": 42, "code": "(fn [x]\n  (reduce * (range 1 (+ x 1))))", "user": "55e3e7a8e4b050e68259b44a"}, {"problem": 42, "code": "#(reduce * (take % (iterate dec %)))", "user": "55fc1f05e4b0f488688e066f"}, {"problem": 42, "code": "(fn [n]\n  (first (nth (iterate (fn [[a b]]\n                         [(* (inc b) a) (inc b)])\n                       [1 1]) (dec n))))", "user": "55f8180fe4b06e875b46ceba"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "55fe7e15e4b00f4cabc57651"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "55e06f82e4b050e68259b40d"}, {"problem": 42, "code": "(fn fact [x]\n  (if\n    (< x 2) x\n    (* x (fact (dec x)))))", "user": "55f6f1d3e4b06e875b46cea0"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "55f8b32ae4b03cbcff9738ba"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "user": "55fee5e4e4b00f4cabc5765a"}, {"problem": 42, "code": "(fn factorial [n]\n        (if (= n 1) 1\n            (* n (factorial (dec n)))))", "user": "55f27bf9e4b06e875b46ce45"}, {"problem": 42, "code": "(fn fact [n-fac]\n  \"Find n factorial\"\n  (loop [n n-fac, accum n-fac]\n    (cond\n     (= n 0) 1\n     (= n 1) accum\n     :else (recur (dec n) (* accum (dec n))))))", "user": "55f6e7ece4b06e875b46ce9e"}, {"problem": 42, "code": "(fn fact[n]\n  (loop [i 1\n         acc 1]\n    (if (> i n) acc\n      (recur (+ i 1) (* acc i)))))", "user": "560151b5e4b04bb52996e185"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)) )", "user": "560094a0e4b04bb52996e16b"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "558053b1e4b05c286339e0e9"}, {"problem": 42, "code": "(fn [n] (reduce * 1 (rest (range (inc n)))))", "user": "55f1d5dfe4b06e875b46ce38"}, {"problem": 42, "code": "#(loop [n %\n        o 1]\n    (if (<= n 1)\n      o\n      (recur (dec n) (* n o))))", "user": "53c6c9dfe4b00fb29b2212a1"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "560039cce4b04bb52996e162"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "55af3e6be4b03311e7b732c7"}, {"problem": 42, "code": "(fn factorial [n]\n      (if (< n 1)\n        1\n        (* n (factorial (- n 1)))))", "user": "50a3ad0ee4b0ceace084d493"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "55f2b42be4b06e875b46ce4a"}, {"problem": 42, "code": "(fn[n](reduce * (range 1 (inc n))))", "user": "56039843e4b04bb52996e1be"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "559e6f42e4b08a52bd4f97d3"}, {"problem": 42, "code": "(fn [n]\n  (loop [cnt n acc 1]\n    (if (zero? cnt)\n      acc\n      (recur (dec cnt) (* acc cnt)))))", "user": "55fbcbd1e4b0f488688e0669"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "55f081bbe4b06e875b46ce25"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "55fbcbb1e4b0f488688e0668"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "56035afae4b04bb52996e1b9"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5602ab92e4b04bb52996e1a3"}, {"problem": 42, "code": "; third\n#(reduce * % (range 1 %))\n\n; second\n#_#(loop [r 1 i %]\n   (if (> 2 i)\n     r\n     (recur (* r i) (dec i))))\n\n; first\n#_(fn [n] (reduce #(* (inc %2) %) 1 (range n)))", "user": "55e7d06ee4b050e68259b496"}, {"problem": 42, "code": "#(reduce * (map inc (range %)))", "user": "55d68726e4b0e31453f64a99"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "55e732c5e4b050e68259b492"}, {"problem": 42, "code": "(fn factorial-fun-solution\n  [n]\n  (loop [acc 1\n         i 1]\n    (if (= n i)\n      (* n acc)\n      (recur (* i acc) (inc i)))))", "user": "5461dc79e4b01be26fd746a8"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "53959edde4b0b51d73faaed8"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "55810c73e4b05c286339e0f2"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "56047160e4b0c80df0ca265d"}, {"problem": 42, "code": "(fn [n] (loop [i 1 r 1] (if (= i n) (* r i) (recur (inc i) (* r i)))))", "user": "56051095e4b08b23635d3162"}, {"problem": 42, "code": "#(apply * (range 1 (+ 1 %)))", "user": "5410499de4b01498b1a719a6"}, {"problem": 42, "code": "(fn factorial [number]\n  (loop [n number factorial 1]\n  (if (zero? n)\n    factorial\n    (recur (dec n)(* factorial n)))))", "user": "55a4047ce4b0acc240e31541"}, {"problem": 42, "code": "(fn fac [n] (if (= n 0) 1 (* n (fac (dec n)))))", "user": "5606a4ace4b08b23635d3175"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "55fe8190e4b00f4cabc57652"}, {"problem": 42, "code": "#(reduce * (range % 0 -1))", "user": "55fe5dfae4b00f4cabc57650"}, {"problem": 42, "code": "(fn f [n]\n  (if (= 0 n)\n    1\n    (* n (f (- n 1)))))", "user": "55216b7ee4b0882d96d09193"}, {"problem": 42, "code": "(fn [n]\n   (reduce * (take n (iterate dec' n))))", "user": "54ab951be4b09f271ff37ccc"}, {"problem": 42, "code": "(fn [n]\n  (nth (map second\n            (iterate (fn [[n fac]] [(inc n) (* fac (inc n))]) [1N 1N]))\n       (dec n)))", "user": "55e1bb20e4b050e68259b41f"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "50746e23e4b054001656acd1"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5361d423e4b0243289761e49"}, {"problem": 42, "code": "(fn [n]\n           (loop [val n start 1]\n             (if (zero? val)\n               start\n               (recur (dec val) (* start val))\n               )\n             )\n           )", "user": "55ed71dae4b0121d4835fdd9"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "560794bde4b08b23635d3182"}, {"problem": 42, "code": "(fn [x]\n  (loop [x x ret 1]\n    (if (= x 0)\n      ret\n      (recur (dec x) (* ret x)))))", "user": "501fe6fae4b0cb6ebc0a42ef"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "55d62a68e4b0e31453f64a96"}, {"problem": 42, "code": "(fn [n]\n  (loop [acc 1\n         curr 1]\n    (if (> curr n)\n      acc\n      (recur (* acc curr) (inc curr)))))", "user": "541df0b5e4b01498b1a71a86"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "55f3802be4b06e875b46ce5f"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (+ n 1))))", "user": "5601bb7ee4b04bb52996e195"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "55048182e4b086ebe8a79c7c"}, {"problem": 42, "code": "#(reduce *' (range 1 (inc %)))", "user": "5609866ee4b0053d1b86c7e3"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5603d057e4b0c80df0ca264e"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "55e274b4e4b050e68259b436"}, {"problem": 42, "code": "(fn [a]\n  (loop [x a result 1]\n    (if (= x 0)\n      result\n      (recur (dec x) (* result x)))))", "user": "52aaabf7e4b0c58976d9ac68"}, {"problem": 42, "code": "(fn ! [n] (if (< n 2) n (* (! (dec n)) n)))", "user": "560aed59e4b05f002753df11"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "56084e91e4b046a4fc0ac00f"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "user": "56038f34e4b04bb52996e1bc"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "560bb1f7e4b05f002753df20"}, {"problem": 42, "code": "(fn [f]\n  (loop [fak f\n         sum 1]\n    (if (<= fak 0)\n      sum\n      (recur (dec fak) (* sum fak)))))", "user": "560a7775e4b05f002753defa"}, {"problem": 42, "code": "(apply comp (map partial [reduce range +] [* 1 1]))", "user": "5603c31fe4b04bb52996e1c1"}, {"problem": 42, "code": "(fn[x](reduce * (rest (range (+ 1 x)))))", "user": "560b02d7e4b05f002753df12"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "560ac5cae4b05f002753df09"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "560d2a2be4b05f002753df35"}, {"problem": 42, "code": "(fn [n] (reduce #(* %1 %2) (take-while #(not= 0 %) (iterate dec n))))", "user": "545c2d07e4b01be26fd7465c"}, {"problem": 42, "code": "(fn fact [x]\n  (if (= x 0)\n    1\n    (* x (fact (- x 1)))))", "user": "560ae540e4b05f002753df0d"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "560a7b46e4b05f002753defb"}, {"problem": 42, "code": "(fn my-factorial [x]\n  (if (= x 1)\n    1\n    (* x (my-factorial (- x 1)))))", "user": "5606ea56e4b08b23635d317b"}, {"problem": 42, "code": "(fn [x] (loop [i x res 1]\n          (cond (= 1 i) res\n          :else (recur (- i 1) (* res i)))))", "user": "56011393e4b04bb52996e178"}, {"problem": 42, "code": "(fn [f] (reduce * (rest (range (inc f)))))", "user": "56019662e4b04bb52996e190"}, {"problem": 42, "code": "(fn fun [x] (if (> x 0) (* x (fun (- x 1))) 1))", "user": "560ff632e4b05f002753df66"}, {"problem": 42, "code": "#(apply * (take % (iterate inc 1)))", "user": "511e17a9e4b0c5b849dd36b0"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5605b5e9e4b08b23635d316e"}, {"problem": 42, "code": "(fn [num]\n    (reduce #(* %1 %2) 1 (range 1 (inc num))))", "user": "560e9a2de4b05f002753df52"}, {"problem": 42, "code": "(fn [n] \n  (loop [f 1 n n ]\n    (if (zero? n)\n      f\n      (recur (* f n) (dec n)))))", "user": "561047eae4b05f002753df6d"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "5604bcf7e4b08b23635d315a"}, {"problem": 42, "code": "(fn [n]\n  (loop [n n\n         acc 1]\n    (if (zero? n)\n      acc\n      (recur (dec n) (* n acc)))))", "user": "4ff24a1ae4b0678c553fc337"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "560768a0e4b08b23635d317f"}, {"problem": 42, "code": "#(loop [n % answer 1] (if (= n 1) answer (recur (dec n) (* answer n))))", "user": "560fe558e4b05f002753df63"}, {"problem": 42, "code": "(fn exp [n]\n  (loop [acc 1 n n]\n    (if (= 1 n) acc\n      (recur (* n acc) (dec n))\n    )\n  )\n)", "user": "55f2c898e4b06e875b46ce4b"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n)) )    )", "user": "5611196fe4b05f002753df7a"}, {"problem": 42, "code": "(fn factorial [n]\n  (if (= n 1)\n    1\n    (* n (factorial (dec n)))))", "user": "5613c76ce4b05f002753dfa7"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "560d491ae4b05f002753df3b"}, {"problem": 42, "code": "(fn [n] (apply * 1 (range 1 (inc n))))", "user": "50a00725e4b08df8156e9e46"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "560843dee4b046a4fc0ac00e"}, {"problem": 42, "code": "(fn [x] (apply * (range 1 (inc x))))", "user": "50523848e4b0a561d07d8f1a"}, {"problem": 42, "code": "(fn factorial [arg]\n    (loop [result 1 a arg]\n        (if (> a 1)\n            (recur (* result a) (dec a))\n            result)))", "user": "55f330dde4b06e875b46ce56"}, {"problem": 42, "code": "(fn fac [n]\n  (reduce * (range 1 (inc n))))", "user": "56069006e4b08b23635d3174"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "560dfa8de4b05f002753df46"}, {"problem": 42, "code": "#(loop [x % result %] (if (<= x 1) result (recur (dec x) (* result (dec x)))))", "user": "55f09e7be4b06e875b46ce28"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "5603c784e4b04bb52996e1c2"}, {"problem": 42, "code": "(fn [x] (->> (range 1 (+ x 1)) (reduce *)))", "user": "5614fa1de4b05f002753dfbe"}, {"problem": 42, "code": "(fn [x]\n  (reduce * (take x (iterate inc 1))))", "user": "5613a96ae4b05f002753dfa4"}, {"problem": 42, "code": "(fn factorial [x] (if (= x 1) 1 (* x (factorial (- x 1)))))", "user": "56152a26e4b05f002753dfc1"}, {"problem": 42, "code": "#(apply *(take % (iterate dec %)))", "user": "5505d137e4b086ebe8a79c8c"}, {"problem": 42, "code": "(fn !\n  [x]\n  (apply * (range 1 (inc x))))", "user": "56180d83e4b06b1bb2182a18"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5617b1c0e4b06b1bb2182a13"}, {"problem": 42, "code": "#(reduce * (range 1 (+ %1 1)))", "user": "55e2d527e4b050e68259b43a"}, {"problem": 42, "code": "#(loop [x % r 1] (if (= x 0) r (recur (dec x) (* x r))))", "user": "5615fd5de4b06b1bb21829fd"}, {"problem": 42, "code": "(fn fct [ n ]\n  (if (> 1 n )\n    1\n    (* n (fct (- n 1)))))", "user": "5610d39de4b05f002753df75"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "55bf6dbce4b01b9910ae2a12"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5617db88e4b06b1bb2182a16"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5272645de4b03e8d9a4a742c"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "55dfada4e4b050e68259b3fd"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "4f5e5975e4b0030a34fb2b4d"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))\n;#(reduce * (range 1 (inc %)))", "user": "52f3568fe4b05e3f0be25f0e"}, {"problem": 42, "code": "#(reduce * (take % (rest (range))))\n\n;(fn [n] (take n (iterate #(* % (+ % 1)) 1)))", "user": "55e8a85be4b0121d4835fd98"}, {"problem": 42, "code": "(fn some-factorial2 [to-factorial]\n  (loop [result 1 to-add to-factorial]\n    (if (= to-add 1)\n      result\n      (recur (* result to-add) (dec to-add)))))", "user": "56040e58e4b0c80df0ca2654"}, {"problem": 42, "code": "(fn [x]\n  (reduce * (map inc (range x))))", "user": "5521248fe4b08d5046aa8a69"}, {"problem": 42, "code": "#(reduce * (take % (iterate dec %)))", "user": "561ba3e5e4b073c65b0ce3eb"}, {"problem": 42, "code": "#(->> %1 (iterate dec) (take-while (partial < 0)) (apply *))", "user": "561ca2eae4b064ca9f4b169b"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "561c0278e4b064ca9f4b1691"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "53ab1ef6e4b047364c04444b"}, {"problem": 42, "code": "(fn fac [x]\n  (if (= x 1)\n    x\n    (* x (fac (dec x)))))", "user": "561bb8dbe4b064ca9f4b1686"}, {"problem": 42, "code": "#(reduce * (map inc (range %1)))", "user": "561bf12ce4b064ca9f4b168e"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "5033ed65e4b062bc5d7ae15a"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "55e3924ae4b050e68259b445"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "53da059be4b0e771c302547e"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "user": "560ae7e6e4b05f002753df0e"}, {"problem": 42, "code": "(fn[n]\n  (loop [f 1 c 1]\n    (if (> c n)\n      f\n      (recur (* f c) (+ c 1)))))", "user": "5537b2c7e4b09218d5f44fce"}, {"problem": 42, "code": "(fn fac [x] (if (#{0 1} x) 1 (* (fac (dec x)) x)))", "user": "561e2b33e4b064ca9f4b16ba"}, {"problem": 42, "code": "#(reduce (partial * 1) (range 1 (inc %)))", "user": "5619a4d0e4b053970a773afd"}, {"problem": 42, "code": "(fn fact [x]\n  (if (= 1 x) 1\n    (* x (fact (dec x)))))", "user": "55aacbeee4b0988bba2ad951"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "521ceb02e4b0c4ef0be830a5"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "560b6895e4b05f002753df1a"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "561ca6ebe4b064ca9f4b169c"}, {"problem": 42, "code": "#(apply * (range 1 (inc %1)))", "user": "561f9110e4b064ca9f4b16ce"}, {"problem": 42, "code": "#(reduce * (take % (iterate dec %)))", "user": "561d8936e4b064ca9f4b16b2"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "561ff621e4b064ca9f4b16d6"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "561a060ee4b053970a773b01"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "55fcaccfe4b0f488688e0679"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (inc x))))", "user": "55f27d95e4b06e875b46ce47"}, {"problem": 42, "code": "#(apply * (take % (drop 1 (range))))", "user": "56205609e4b064ca9f4b16df"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "4f40c46fe4b0e243712b1fbe"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5616f411e4b06b1bb2182a0a"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (inc x))))", "user": "55cf0d0ee4b0e31453f64a2b"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "561d23e3e4b064ca9f4b16a5"}, {"problem": 42, "code": "(fn f [n]\n  (if (< n 2) 1\n  \t(* n (f (dec n)))))", "user": "56228d00e4b03f08ee9a9227"}, {"problem": 42, "code": "(fn fact[x] (if (<= x 1 ) 1 (* x (fact (- x 1)))))", "user": "56238371e4b03f08ee9a9233"}, {"problem": 42, "code": "(fn fact [n]\n  (if (= n 1) 1\n    (* n (fact (dec n)))))\n\n; or\n; (fn [n] (reduce * (range 1 (inc n))))", "user": "54b54d1be4b05787c3b1639c"}, {"problem": 42, "code": "(fn [a] (reduce * (range 1 (inc a))))", "user": "54a634abe4b09f271ff37c84"}, {"problem": 42, "code": "(fn fact [n]\n  (loop [result n\n         i (dec n)]\n      (if (> i 1)\n          (recur (* result i) (dec i))\n          result\n      )\n  )\n)", "user": "56195e57e4b053970a773af6"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "56163cc1e4b06b1bb21829ff"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (+ 1 %)))", "user": "55f6fe09e4b06e875b46cea2"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "50a3bf08e4b0ceace084d495"}, {"problem": 42, "code": "(fn [n]\n  (loop [result 1\n         n n]\n    (if (= 1 n)\n      result\n      (recur (* result n) (dec n)))))", "user": "4f213e2ee4b0d66497709fcf"}, {"problem": 42, "code": "#(loop [acc 1 i %]\n  (cond\n   (= i 1) (* acc i)\n   :else (recur (* acc i) (dec i))))", "user": "561cb6cfe4b064ca9f4b169e"}, {"problem": 42, "code": "(fn fac [n]\n\t(reduce * (range 1 (+ 1 n))))", "user": "561eb82fe4b064ca9f4b16c7"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "56102f50e4b05f002753df6b"}, {"problem": 42, "code": "(fn [n]\n    (loop [cnt n acc 1]\n      (if (zero? cnt)\n        acc\n        (recur (dec cnt)\n               (* acc cnt)))))", "user": "560434cfe4b0c80df0ca2658"}, {"problem": 42, "code": "#(reduce * (-> %\n                range\n                rest\n                (conj %)))", "user": "546b24a0e4b00cfc9eacc166"}, {"problem": 42, "code": "(fn [n]\n    (reduce (fn [a b] (* a b)) (range 1 (inc n))))", "user": "5600dccee4b04bb52996e175"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "55bb1b26e4b01b9910ae29e0"}, {"problem": 42, "code": "(fn fac [n] (if (< n 2) 1 (* n (fac (- n 1)))))", "user": "560c31b4e4b05f002753df2d"}, {"problem": 42, "code": "(fn [x] \n  (let [v (range 1 (inc x))]\n    (reduce * 1 v)))", "user": "532dbd3ce4b019098a6f8b40"}, {"problem": 42, "code": "(fn [x]\n   (loop [n x\n          r 1]\n     (if (zero? n)\n       r\n       (recur (dec n) (* r n)))))", "user": "56171eade4b06b1bb2182a0c"}, {"problem": 42, "code": "(fn fact [x]\n  (reduce * (reductions + (repeat x 1))))", "user": "5626447fe4b00e49c7cb47bd"}, {"problem": 42, "code": "#(apply * (take-while pos? (iterate dec %)))", "user": "56018dd4e4b04bb52996e18f"}, {"problem": 42, "code": "(fn fac [n]\n  (if (= n 0) 1\n    (* n (fac (dec n)))))", "user": "50e09313e4b061dbdced7233"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "536829c8e4b0243289761e8b"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5627444fe4b00e49c7cb47cd"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "5629dfaae4b00e49c7cb4813"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5628cb07e4b00e49c7cb47ef"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "562326cbe4b03f08ee9a9230"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1%)))", "user": "558b41fce4b0277789237628"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "522a5bdde4b0590a43906cf8"}, {"problem": 42, "code": "#(reduce * (map inc (range %)))", "user": "5627d09ce4b00e49c7cb47db"}, {"problem": 42, "code": "(fn [x] (reduce * (map inc (range x))))", "user": "55d28b38e4b0e31453f64a58"}, {"problem": 42, "code": "(fn factorial [n]\n  (if (<= n 1) 1\n    (* n (-> n dec factorial))))", "user": "562c15d3e4b058fa18c5a6d5"}, {"problem": 42, "code": "(fn [x]\n  (reduce * (range 1 (inc x))))", "user": "4e80d1c8535db62dc21a62b6"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "562cd94ee4b0a45d2ff83015"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "53b1db8ee4b047364c044495"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %1)))", "user": "56215c8ee4b03f08ee9a921a"}, {"problem": 42, "code": "(fn [n]\n  (loop [n n \n         acc 1]\n    (if (= 1 n)      \n      acc\n      (recur (dec n) (* acc n)))))", "user": "504f0c9ce4b0e7ad84dbc4b2"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "53623eaee4b0243289761e4f"}, {"problem": 42, "code": "(fn factorial [n] (reduce * (range 1 (inc n))))", "user": "56278266e4b00e49c7cb47d3"}, {"problem": 42, "code": "(fn f [n]\n  (loop [nn n, acc 1] \n    (if (= nn 1) acc (recur (dec nn) (* acc nn)))))", "user": "535558b9e4b04ce2eb3ed25a"}, {"problem": 42, "code": "(fn fatorial [n]\n  (if (= n 0)\n    1\n      (* (fatorial (- n 1)) n)))", "user": "562eafbce4b0ab312c17ebbe"}, {"problem": 42, "code": "(fn fact [n]\n  (if (= n 1)\n    1\n    (* n (fact (- n 1)))))", "user": "562e05e0e4b0a45d2ff83023"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))\n;#(loop [x %, r 1] (if (= x 0) r (recur (dec x) (* x r))))", "user": "55fc07d3e4b0f488688e066e"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %1)))", "user": "5578f292e4b05c286339e08f"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "562e8b2be4b0ab312c17ebbb"}, {"problem": 42, "code": ";(fn fac [n]\n;  (if (< n 1)\n;    1\n;    (* n (fac (- n 1)))))\n\n;#(loop [n %\n;        fac 1]\n;   (if (< n 1)\n;     fac\n;     (recur (- n 1) (* fac n))))\n\n;#(->> % range (map inc) (reduce *))\n\n;#(reduce * (take % (iterate inc 1)))\n\n#(reduce * (range 1 (inc %)))", "user": "54485749e4b032a45b8693c7"}, {"problem": 42, "code": "(fn [x]\n  (reduce * (take x (iterate inc 1))))", "user": "562cb7cfe4b0a45d2ff83009"}, {"problem": 42, "code": "(fn [x]\n  (apply * (range 1 (+ 1 x))))", "user": "562db4d1e4b0a45d2ff83021"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "55ed9108e4b0121d4835fddc"}, {"problem": 42, "code": "(fn fns [i]\n       (if (= i 1)\n         i\n         (* i (fns (dec i)))))", "user": "551e6526e4b030e6a24d00e8"}, {"problem": 42, "code": "#(reduce * (rest (range (inc %))))", "user": "562fb774e4b0ab312c17ebd9"}, {"problem": 42, "code": "(fn [num]\n             (loop\n               [i num\n                sum 1]\n               (if (= i 0)\n                 sum\n                 (recur (- i 1) (* sum i  )))))", "user": "56305383e4b073c1cf7a9be6"}, {"problem": 42, "code": "#(reduce * (range  1(inc %)))", "user": "5489dd4de4b0e286459a11ef"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5614ebc5e4b05f002753dfbc"}, {"problem": 42, "code": "(fn factorial\n  [x]\n  (reduce * (range 1 (+ x 1))))", "user": "4fc524aae4b081705acca37e"}, {"problem": 42, "code": "(fn fac [n]\n  (if (= n 1)\n    n\n    (* n (fac (- n 1)))))", "user": "561a1af6e4b053970a773b02"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "562b57c7e4b058fa18c5a6cc"}, {"problem": 42, "code": "(fn [n] (reduce * (rest (range (+ n 1)))))", "user": "5592ba8be4b0c79f6e1db931"}, {"problem": 42, "code": "(fn [x]\n  (loop [value 1 xs x]\n    (if (<= xs 1) value\n      (recur (* value xs) (dec xs)))))", "user": "563130e4e4b0bfe05bf1178d"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %1)))", "user": "561cad18e4b064ca9f4b169d"}, {"problem": 42, "code": "(fn fact [x]\n    (loop [n x f 1]\n        (if (= n 1)\n            f \n(recur (dec n) (* f n)))))", "user": "5633bb9de4b0bfe05bf117b4"}, {"problem": 42, "code": "(fn fak [n] (if (< n 2) n (* n (fak (dec n)))))", "user": "55d1aa33e4b0e31453f64a48"}, {"problem": 42, "code": "(fn [x] (reduce * (take x (rest (range)))))", "user": "562b1a7be4b058fa18c5a6cb"}, {"problem": 42, "code": "#(reduce * (map inc (range %)))", "user": "544e8c4fe4b0e3978000698a"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "53286f84e4b09d4e7a9b5505"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5632abbee4b0bfe05bf117a7"}, {"problem": 42, "code": "(fn [n] (reduce * 1 (-> n (inc) (range) (rest))))", "user": "5637e73fe4b0bfe05bf117e0"}, {"problem": 42, "code": "(fn jiechen [number]\n  (let [sum 1]\n  (if (= number 1)\n    sum\n   (*  (jiechen (dec number)) number) \n      )))", "user": "56349008e4b0bfe05bf117bd"}, {"problem": 42, "code": "#(apply * (take % (iterate inc 1)))", "user": "56347285e4b0bfe05bf117bc"}, {"problem": 42, "code": "#(apply * (range 1 (+ 1 %)))", "user": "56372798e4b0bfe05bf117d0"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "563799f8e4b0bfe05bf117db"}, {"problem": 42, "code": "(fn [r]\n  (reduce * (range 1 (inc r))))", "user": "56366f73e4b0bfe05bf117cc"}, {"problem": 42, "code": "(fn factorial [n]\n  (if (#{0 1} n)\n    1\n    (* n (factorial (dec n))))\n  )", "user": "5630fd6fe4b0bfe05bf1178b"}, {"problem": 42, "code": "(fn fac [x] (if (= x 0)\n              1\n             (* x (fac (- x 1)))))", "user": "563aa090e4b0bfe05bf11801"}, {"problem": 42, "code": "#(reduce * (range 1 (inc%)))", "user": "56399b7ee4b0bfe05bf117f5"}, {"problem": 42, "code": "#(apply * (range 1 (+ % 1)))", "user": "563a30d7e4b0bfe05bf117f9"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "4f0366b0535dcb61093f6aa9"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "55c13e73e4b01b9910ae2a2f"}, {"problem": 42, "code": "(fn fa [x]\n  (if (= x 1) x (* x (fa (dec x)))))", "user": "561d506ee4b064ca9f4b16aa"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "54f4ab86e4b0f2f3c5226e84"}, {"problem": 42, "code": "(fn fac [n] (reduce * (take n (iterate inc 1))))", "user": "5632b0a9e4b0bfe05bf117a8"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5604ae27e4b0c80df0ca2663"}, {"problem": 42, "code": "(fn fac [n]\n  (if (<= n 1)\n    1\n    (* n (fac (dec n)))))", "user": "55664950e4b0c656e3ff1832"}, {"problem": 42, "code": "(fn [x]\n  (reduce * (range 1 (inc x))))", "user": "56339e23e4b0bfe05bf117b1"}, {"problem": 42, "code": "(fn fact\n  [n]\n  (if (= n 1) 1\n    (* n (fact (dec n)))))", "user": "56393681e4b0bfe05bf117f2"}, {"problem": 42, "code": "(fn [n] (loop [n n r 1]\n          (if (= n 1) r\n                      (recur (dec n) (* r n))\n          )\n        )\n)", "user": "563747e9e4b0bfe05bf117d2"}, {"problem": 42, "code": "(fn [n] ((fn [x acc] (if (> x 1) (recur (dec x) (* acc x)) acc)) n 1))", "user": "54ff074de4b07d26eda61d47"}, {"problem": 42, "code": "#(reduce * ( range 1 (inc %)))", "user": "55350bdae4b09218d5f44fa8"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "54995298e4b0b312c081ff8b"}, {"problem": 42, "code": "(fn [x] \n  (loop [y x ys[]]\n    (if (> y 1)\n      (recur (- y 1) (cons y ys))\n      (reduce * (cons y ys)))))", "user": "546a65fce4b00cfc9eacc153"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "563d3fc8e4b0bfe05bf1184b"}, {"problem": 42, "code": "(fn [x] (reduce #(* %1 %2) (range 1 (inc x))))", "user": "563e7a33e4b0da801c4e466d"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (+ % 1)))", "user": "54dce62fe4b024c67c0cf78c"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "5587ddd9e4b059ccff29b1ea"}, {"problem": 42, "code": "(fn [n]\n  (loop [n n acc 1]\n    (if (= n 0)\n      acc\n      (recur (dec n) (* acc n)))))", "user": "563ddefee4b0bfe05bf11857"}, {"problem": 42, "code": "(fn [n] (apply * (range 1 (inc n))))", "user": "56174d86e4b06b1bb2182a0e"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "53abed65e4b047364c044455"}, {"problem": 42, "code": "#(apply * (take %1 (iterate inc 1)))", "user": "544e6b7fe4b0e39780006986"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %1)))", "user": "55c49394e4b0e31453f6499e"}, {"problem": 42, "code": "#(reduce * (rest (range (inc %))))", "user": "56288ccae4b00e49c7cb47ea"}, {"problem": 42, "code": "#(reduce * (drop 1 (range (inc %1))))", "user": "52d68ed2e4b09f7907dd1362"}, {"problem": 42, "code": "(fn f [x] (if (> x 0) (* x (f (- x 1))) 1) )", "user": "563b559ee4b0bfe05bf1180d"}, {"problem": 42, "code": "#(reduce * (take-while pos? (iterate dec %)))", "user": "53bbae20e4b047364c044509"}, {"problem": 42, "code": "(fn [n]\n  (loop [i n a 1]\n    (if (> i 0)\n      (recur (dec i) (* i a))\n      a)))", "user": "563ed73ae4b08d4f616f5ecb"}, {"problem": 42, "code": "#(loop [iter 1 acc 1]\n         (if (= iter %)\n           acc\n         (recur\n           (inc iter )\n           (* (inc iter) acc)))\n  )", "user": "54df955ee4b024c67c0cf7af"}, {"problem": 42, "code": "(fn fact [x]\n    (loop [n x f 1]\n        (if (= n 1)\n            f\n            (recur (dec n) (* f n)))))", "user": "56252effe4b00a550fc90294"}, {"problem": 42, "code": "(fn factorial\n  [n]\n  (loop [result 1\n         i n]\n    (if (<= i 1)\n      result\n      (recur (* result i) (dec i)))))", "user": "563f1493e4b08d4f616f5ecf"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "56272be6e4b00e49c7cb47c9"}, {"problem": 42, "code": "(fn [x]\n  (loop [x x fact 1]\n    (if (> 1 x)\n      fact\n      (recur (dec x) (* fact x)))))", "user": "55b738cfe4b01b9910ae29a1"}, {"problem": 42, "code": "(fn [x] (reduce * 1 (range 1 (inc x))))", "user": "564127a9e4b08d4f616f5ef3"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "563f2eaae4b08d4f616f5ed1"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "562f2985e4b0ab312c17ebc5"}, {"problem": 42, "code": "#(reduce * (take % (iterate dec %)))", "user": "55c6fd60e4b0e31453f649c9"}, {"problem": 42, "code": "(fn [nfact]\n  (loop [cnt 1\n         sum 1]\n    (if (> cnt nfact)\n      sum\n      (recur (inc cnt) \n             (if (= cnt 2) \n               2\n           \t  (* sum cnt))))))", "user": "5642b939e4b08d4f616f5f1b"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5641296de4b08d4f616f5ef4"}, {"problem": 42, "code": "(fn fact\n  [n]\n  (if (= n 1) \n      1\n      (* n (fact (- n 1)))))", "user": "56388a0fe4b0bfe05bf117e7"}, {"problem": 42, "code": "(fn [n]\n  (loop [a n result 1]\n    (if(= a 1)\n      result\n      (recur (dec a) (* result a)))))", "user": "5191a763e4b0d428d29dc1b4"}, {"problem": 42, "code": "(comp (partial apply *) (partial range 1) inc)", "user": "505fdf63e4b08f2a82ad10b9"}, {"problem": 42, "code": "#(apply * (range 1 (+ 1%)))", "user": "563b6a2ae4b0bfe05bf11812"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "563772a9e4b0bfe05bf117d7"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "56449c90e4b0284900eef5f8"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "55eb026de4b0121d4835fdb7"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %1)))", "user": "5639e878e4b0bfe05bf117f7"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (inc x))))", "user": "563e022be4b0da801c4e4664"}, {"problem": 42, "code": "(fn myfact\n  [n]\n  (cond \n   (zero? n) 1\n   :else (* n (myfact (dec n)))))", "user": "54145050e4b01498b1a719ea"}, {"problem": 42, "code": "(fn factorial [n]\n  (apply * (range 1 (inc n))))", "user": "5634995fe4b0bfe05bf117be"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5376190de4b06839e8705e1c"}, {"problem": 42, "code": "#(apply * % (range 2 %))", "user": "545e7ab0e4b01be26fd7467c"}, {"problem": 42, "code": "#(reduce * (map inc (range %)))", "user": "56304db8e4b073c1cf7a9be5"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "56442758e4b0018b46ad8c0a"}, {"problem": 42, "code": "#(reduce * (take % (iterate inc 1)))", "user": "564583f0e4b0284900eef607"}, {"problem": 42, "code": "(fn[num] (reduce * (take num (iterate #(dec %) num))))", "user": "561d7246e4b064ca9f4b16b1"}, {"problem": 42, "code": "#( reduce * (range 1 (+ % 1)))", "user": "56441e72e4b0018b46ad8c09"}, {"problem": 42, "code": "(fn [x]\n  (apply * (range 1 (inc x))))", "user": "562d869be4b0a45d2ff8301f"}, {"problem": 42, "code": "#(apply * (take % (iterate dec %)))", "user": "5632e850e4b0bfe05bf117ac"}, {"problem": 42, "code": "(comp (partial reduce #(* %1 %2) 1) rest range inc)", "user": "56466fb1e4b0284900eef613"}, {"problem": 42, "code": "(fn factorial\n  [x]\n  (reduce * (range 1 (+ x 1))))", "user": "563fc1f2e4b08d4f616f5ed7"}, {"problem": 42, "code": "#(loop [numb % agg 1]\n   (if (= 1 numb)\n     agg\n     (recur (- numb 1) (* agg numb)\n   \t\t)\n   )\n   )", "user": "54e0bb4fe4b024c67c0cf7b8"}, {"problem": 42, "code": "(fn [x] (apply * (range 1 (inc x))))", "user": "5630471ce4b073c1cf7a9be4"}, {"problem": 42, "code": "#(reduce * (next (range (inc %1))))", "user": "5649542fe4b0284900eef63f"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "564045a8e4b08d4f616f5edd"}, {"problem": 42, "code": "(fn faktorial [x]\n  (if (> x 1) \n    (* x (faktorial (dec x)))\n     1))", "user": "5643ba10e4b0018b46ad8bff"}, {"problem": 42, "code": "(fn fac [n] (if (= n 0) 1 (* n (fac (dec n)))))", "user": "56449e4de4b0284900eef5f9"}, {"problem": 42, "code": "(fn [n]\n  (loop [i  1\n           v 1]\n    (if (= i (inc n))\n      v\n      (recur (inc i) (* v i)))))", "user": "5637557ce4b0bfe05bf117d4"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "5647dc44e4b0284900eef624"}, {"problem": 42, "code": "(fn my_fact [n]\n    (if (<= n 1)\n        1\n        (* n (my_fact (- n 1)))))", "user": "56058d64e4b08b23635d3169"}, {"problem": 42, "code": "(fn [n]\n  (loop [cnt n acc 1]\n    (if (zero? cnt)\n      acc\n      (recur (dec cnt) (* acc cnt)))))", "user": "563c0d4ce4b0bfe05bf11831"}, {"problem": 42, "code": "(fn fac [n] (if (= 1 n)  1 (* n (fac (dec n)))))", "user": "551e2cade4b030e6a24d00e4"}, {"problem": 42, "code": "(fn f [n]\n  (loop [n n fac 1]\n    (if (zero? n)\n      fac\n      (recur (dec n) (* fac n)))))", "user": "563d12f9e4b0bfe05bf11845"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "562ab73ce4b00e49c7cb482e"}, {"problem": 42, "code": "#((fn fac\n   ([n] (fac n 1))\n   ([n acc]\n    (if (= n 0)\n      acc\n      (fac (- n 1) (* acc n))))) \n  %)", "user": "545a2da7e4b01be26fd74634"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "51671557e4b013fc800656c4"}, {"problem": 42, "code": "#(reduce * (reverse (range 1 (inc %))))", "user": "564b1ff8e4b0284900eef663"}, {"problem": 42, "code": "#(loop [n %, r 1] (if (= n 1) r (recur (dec n) (* n r))))", "user": "564b3730e4b0284900eef665"}, {"problem": 42, "code": "#(apply * (range 1 (+ % 1)))", "user": "52824143e4b0757a1b171453"}, {"problem": 42, "code": "#(reduce * (rest (range (inc %))))", "user": "561223e5e4b05f002753df8b"}, {"problem": 42, "code": "(fn fac [n]\n  (if (= n 1)\n    1\n    (* n (fac (dec n)))\n  )\n )", "user": "563b9acbe4b0bfe05bf11827"}, {"problem": 42, "code": "(fn [n]\n (reduce * (range 1 (inc n)))  \n)", "user": "5649615be4b0284900eef641"}, {"problem": 42, "code": "(fn fact [n]\n  (if (= n 0)\n    1\n    (* n (fact (- n 1)))\n    )\n  )", "user": "541ef7e2e4b01498b1a71a92"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5645a7d6e4b0284900eef608"}, {"problem": 42, "code": "(fn fact [n] (if (= 1 n) 1 (* n (fact (- n 1)))))", "user": "5641f0ede4b08d4f616f5f11"}, {"problem": 42, "code": "#(reduce (fn[acc a](* acc a) ) 1 (range 1 (inc %)))", "user": "54dce6dbe4b024c67c0cf78d"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5643a11ee4b0018b46ad8bfb"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "564d3169e4b0284900eef67c"}, {"problem": 42, "code": "(fn fac\n  [n]\n  (if (> n 1)\n  \t(* n (fac (dec n)))\n    1))", "user": "5576fee3e4b05c286339e078"}, {"problem": 42, "code": "(fn  [n] (apply * (range 1 (inc n))))", "user": "564a560ae4b0284900eef654"}, {"problem": 42, "code": "(fn xfac [n]                                                                  \n  (loop [ cnt 1, acc 1 ]                                                        \n    (if (= (+ 1 n) cnt )                                                        \n       acc                                                                      \n      (recur (+ cnt 1)                                                          \n             (* acc cnt)))))", "user": "564cc055e4b0284900eef676"}, {"problem": 42, "code": "#(apply * (range 1 (+ 1 %)))", "user": "563b5dc9e4b0bfe05bf1180f"}, {"problem": 42, "code": "#(reduce * (map inc (range %)))", "user": "564b495de4b0284900eef667"}, {"problem": 42, "code": "#(loop [result 1 n %]\n   (if (= n 1)\n     result\n     (recur (* result n) (dec n))))", "user": "564a5a09e4b0284900eef656"}, {"problem": 42, "code": "(fn fact [n] (if (= n 0) 1 (* n (fact (- n 1)))))", "user": "54ca93abe4b057c6fda3a264"}, {"problem": 42, "code": "#(reduce * (rest (seq (range (inc %)))))", "user": "56427910e4b08d4f616f5f19"}, {"problem": 42, "code": "(fn fct [n] (reduce * 1 (range 1 (inc n))))", "user": "5646dff3e4b0284900eef615"}, {"problem": 42, "code": "(fn factorial [n] \n\t(loop [i n, result 1]\n\t\t(if (<= i 0)\n\t\t\tresult\n\t\t\t(recur (dec i) (* result i)))))", "user": "564d02cde4b0284900eef679"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "56441634e4b0018b46ad8c08"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "563b1553e4b0bfe05bf1180a"}, {"problem": 42, "code": "#(apply * % (range 2 %))", "user": "4db85282535d1e037afb218a"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5650b8a0e4b0284900eef6c3"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "56504dc2e4b0284900eef6bc"}, {"problem": 42, "code": "#(apply * (range 1 (+ % 1)))", "user": "564faadce4b0284900eef6b2"}, {"problem": 42, "code": "(fn fac [x] (if (= x 1) 1 (* x (fac (- x 1)))))", "user": "5651de3ee4b0f9d632dd845b"}, {"problem": 42, "code": "#(apply * (map inc (range %)))", "user": "563dfc02e4b0da801c4e4662"}, {"problem": 42, "code": "(fn [n]\n  (loop [n n\n         r 1]\n    (if (= 1 n)\n      r\n      (recur (- n 1) (* r n)))))", "user": "56521a26e4b0f9d632dd845f"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "4f037faf535dcb61093f6af8"}, {"problem": 42, "code": "(fn [x] (reduce #(* %1 %2) 1 (range 1 (inc x))))", "user": "563c48e7e4b0bfe05bf11832"}, {"problem": 42, "code": "(fn flach [n]\n  (reduce * (range 1 (inc n))))", "user": "55cd95b4e4b0e31453f64a1e"}, {"problem": 42, "code": "(fn [x] \n  (loop [i x \n         n 1]\n    (if (= i 0)\n      n\n      (recur (dec i) (* n i)))))", "user": "55f5c118e4b06e875b46ce8e"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "564066dee4b08d4f616f5ee2"}, {"problem": 42, "code": "(fn [n]\n  (loop [fac 1\n         i 1]\n    (if (> i n)\n      fac\n      (recur (* fac i) (inc i)))))", "user": "5169d422e4b051e2a73aba53"}, {"problem": 42, "code": "(fn fact [num]\n  (if (= 0 num)\n    1\n    (* num (fact (- num 1)))))", "user": "4fd9cc7ee4b05e33b9224f3a"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %1)))", "user": "5600591de4b04bb52996e166"}, {"problem": 42, "code": "(fn factorial [n]\n  (loop [cur n, acc 1]\n    (if (= cur 1)\n      acc\n      (recur (dec cur) (* cur acc)))\n    )\n  )", "user": "564ecc9ee4b0284900eef6a1"}, {"problem": 42, "code": "(fn [n] (apply * (range 1 (inc n))))", "user": "54de7948e4b024c67c0cf7a4"}, {"problem": 42, "code": "(fn [n]\n   (loop [x n\n          acc n]\n     (if (<= x 1)\n       acc\n       (recur (- x 1) (* acc (- x 1))))))", "user": "56372c3ce4b0bfe05bf117d1"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "56405959e4b08d4f616f5ee1"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "52c00e32e4b07a9af5792341"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "55380eeae4b09218d5f44fd9"}, {"problem": 42, "code": "#(apply * (range 1 (inc %1)))\n\n;(fn fac [n]\n;  (if (zero? n)\n;    1\n;    (* n (fac (dec n)))))", "user": "56488119e4b0284900eef632"}, {"problem": 42, "code": "#(loop[n %,s 1]\n   (if(= n 1)\n     s\n     (recur(dec n)(* s n))))", "user": "5654e8ade4b0f9d632dd848e"}, {"problem": 42, "code": "(fn f[x] (if (<= x 1) 1 (* x (f (dec x)))))", "user": "5640803be4b08d4f616f5ee6"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5654d0e1e4b0f9d632dd848c"}, {"problem": 42, "code": "(fn fact [x] \n    (if (zero? x)\n      1\n      (* x (fact (- x 1)))))", "user": "5654cb2de4b0f9d632dd848b"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "5632d1b3e4b0bfe05bf117a9"}, {"problem": 42, "code": "(fn [n]\n  (apply * (range 1 (inc n))))", "user": "564da567e4b0284900eef682"}, {"problem": 42, "code": "#(reduce * (take % (iterate inc 1)))", "user": "56561119e4b0f9d632dd849d"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "4ff3113ae4b0678c553fc345"}, {"problem": 42, "code": "(fn factorial [n] (reduce * (range 1 (+ n 1))))", "user": "5654e024e4b0f9d632dd848d"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "4fc77f5ae4b0ee37620e1821"}, {"problem": 42, "code": "#(reduce * (take % (iterate inc 1)))", "user": "52c48ec6e4b0c2d177d620dd"}, {"problem": 42, "code": "(fn [number]\n  (loop\n    [res 1\n     curnum number]\n    (if (= 1 curnum)\n      res\n      (recur (* res curnum) (dec curnum)))))", "user": "5658d775e4b00d3155796114"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "56444fb1e4b0018b46ad8c0c"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "56540485e4b0f9d632dd847a"}, {"problem": 42, "code": "#(apply * (rest (range (inc %))))", "user": "535fa486e4b04ce2eb3ed2e0"}, {"problem": 42, "code": "#(reduce * (range 1 (inc  %)))", "user": "54588070e4b01be26fd74620"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5658acabe4b0f9d632dd84b7"}, {"problem": 42, "code": "(fn f [x] (if (= 0 x) 1 (* x (f (dec x)))))", "user": "56588f4ee4b0f9d632dd84b6"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "56532ff4e4b0f9d632dd846e"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "565a3e25e4b068f2fe63dbfb"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "564c8e99e4b0284900eef674"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "55577fcce4b0deb715856e24"}, {"problem": 42, "code": "(fn fact [n]\n  (loop [cur n\n         res n]\n    (if (= 1 cur)\n      res\n      (recur (dec cur) (* res (dec cur))))))", "user": "5658b9bde4b00d315579610e"}, {"problem": 42, "code": "#(reduce * (into [] (range 1 (+ % 1))))", "user": "56188848e4b053970a773aea"}, {"problem": 42, "code": "(fn testing\n  [number]\n  (loop\n    [number number, acc 1N ]\n    (if (= number 0 )\n      acc\n      (recur (- number 1) (* acc number))\n    )))", "user": "560d7863e4b05f002753df40"}, {"problem": 42, "code": "(fn fact [n]\n  (if (= 1 n)\n    n\n    (* n (fact (dec n)))))", "user": "56557d2de4b0f9d632dd8498"}, {"problem": 42, "code": "(fn fact [n]\n  (if (< n 2)\n    1\n\t(* n (fact (dec n)))))", "user": "56451201e4b0284900eef600"}, {"problem": 42, "code": "(fn f [n]\n  (if (< n 2)\n    1\n    (* n (-> n dec f))))", "user": "565e0934e4b068f2fe63dc30"}, {"problem": 42, "code": "#(loop [acc 1\n        n %]\n        (if (zero? n)\n          acc\n          (recur (* acc n) (dec n))))", "user": "56002c2de4b04bb52996e161"}, {"problem": 42, "code": "(fn [arg1]\n(cond\n(and (= arg1 1)) 1\n(and (= arg1 3)) 6\n(and (= arg1 5)) 120\n(and (= arg1 8)) 40320\n))", "user": "565f2461e4b068f2fe63dc3b"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "564348e1e4b08d4f616f5f26"}, {"problem": 42, "code": "#(apply * (rest (range (inc %))))", "user": "564e719ee4b0284900eef69b"}, {"problem": 42, "code": "(fn [n]\n    (loop [cnt n acc 1]\n       (if (zero? cnt)\n            acc\n          (recur (dec cnt) (* acc cnt)))))", "user": "564dc08ae4b0284900eef68f"}, {"problem": 42, "code": "(fn [x] (apply * (range 1 (inc x) ) ))", "user": "564dc044e4b0284900eef685"}, {"problem": 42, "code": "(fn [i] (loop [res 1 var i] (if (zero? var) res (recur (* res var) (dec var)))))", "user": "56367c51e4b0bfe05bf117cd"}, {"problem": 42, "code": "(fn [fact]\n  (loop [f fact\n        result fact]\n    (if (= f 1) result\n      (recur (- f 1) (* result (- f 1))))))", "user": "562c2fc2e4b058fa18c5a6d7"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "565faf46e4b068f2fe63dc44"}, {"problem": 42, "code": "(fn f [x] (if (= x 0) 1 (* x (f (dec x)))))", "user": "530e9bd6e4b08068f379ecbe"}, {"problem": 42, "code": "(fn [n]\n  (loop [res 1, x 1]\n    (if (> x n) \n      res\n      (recur (* res x) (+ x 1)))))", "user": "5516a874e4b06a49daca83b5"}, {"problem": 42, "code": "(fn fac[n] (if (<= n 1) 1 (* n (fac (- n 1)))))", "user": "5656e039e4b0f9d632dd84a3"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %) ))", "user": "5650082fe4b0284900eef6b7"}, {"problem": 42, "code": "(fn ! [n]\n(reduce * (range 1 (+ n 1))))", "user": "565b941ce4b068f2fe63dc07"}, {"problem": 42, "code": "#(apply * (next (range (inc %))))", "user": "5657fc1ae4b0f9d632dd84ad"}, {"problem": 42, "code": "#(apply * (range 1 (inc %1)))", "user": "56602649e4b068f2fe63dc47"}, {"problem": 42, "code": "(fn [arg1]\n(cond\n(and (= arg1 1)) 1\n(and (= arg1 3)) 6\n(and (= arg1 5)) 120\n(and (= arg1 8)) 40320\n))", "user": "5666bf34e4b04acd4f672dc2"}, {"problem": 42, "code": "(fn [fact] (reduce * (range 1 (inc fact))))", "user": "5666500ee4b0e91d5f5c566d"}, {"problem": 42, "code": "(fn my-factorial [n]\n  (loop [fac 1 \n         i n]\n    (if (>= 1 i) \n      fac\n      (recur (* fac i) (dec i)))))", "user": "5661e09ae4b068f2fe63dc70"}, {"problem": 42, "code": "(fn [n] (loop [i n f 1] (if (zero? i) f (recur (- i 1) (* f i)))))", "user": "56662275e4b0e91d5f5c566a"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "563f24f9e4b08d4f616f5ed0"}, {"problem": 42, "code": "#(loop [acc 1 n %] (if (< n 2) acc (recur (* acc n) (dec n))))", "user": "566713e0e4b04acd4f672dc7"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "532c4ffce4b09d4e7a9b5540"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5649d538e4b0284900eef647"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "566734c4e4b04acd4f672dcc"}, {"problem": 42, "code": "(fn fact [n] (reduce * (range 1 (inc n))))", "user": "5666c2dbe4b04acd4f672dc3"}, {"problem": 42, "code": "#(loop [number % sum %]\n   (if (= number 1)\n     sum\n     (recur (dec number) (* sum (dec number)))))", "user": "56677192e4b04acd4f672dd5"}, {"problem": 42, "code": "(fn [n]\n  (loop [x n\n         f 1]\n    (if (= x 1)\n      f\n      (recur (dec x) (* f x)))))", "user": "564bbb15e4b0284900eef66d"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "566733d6e4b04acd4f672dcb"}, {"problem": 42, "code": "#(loop [in % acc 1] (if (= in 1) acc (recur (dec in) (* in acc))))", "user": "559ff9eee4b0acc240e314ee"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "566888e4e4b04acd4f672ded"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5659679ae4b068f2fe63dbeb"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "56671a4de4b04acd4f672dca"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "566639f4e4b0e91d5f5c566b"}, {"problem": 42, "code": "#(reduce \n  *\n  (rest (range (+ 1 %))))", "user": "54a11042e4b09f271ff37c49"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5668dcc6e4b04acd4f672df8"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5661b0a9e4b068f2fe63dc6f"}, {"problem": 42, "code": "#(loop [fact 1 n %1]\n   (if (pos? n)\n     (recur (* fact n) (- n 1))\n     fact))", "user": "4df9d3b0535d04ed9115e77b"}, {"problem": 42, "code": "(fn [n]\n  (loop [now n result 1]\n    (if (= now 1)\n      result\n      (recur (dec now) (* result now)))))", "user": "566a6e38e4b0a866af68969b"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5393185ae4b0b51d73faaeb7"}, {"problem": 42, "code": "(fn [x] (loop [a x total 1] (if (<= a 1) total (recur (dec a) (* total a)))))", "user": "5006c169e4b0678c553fc48d"}, {"problem": 42, "code": "#(apply * (range % 0 -1))", "user": "52777dc3e4b03e8d9a4a7508"}, {"problem": 42, "code": "#(reduce * 1 (rest (range (inc %))))", "user": "5669eb9ae4b04acd4f672e02"}, {"problem": 42, "code": "#(loop [n %, x 1]\n   (if (= 0 n)\n     x\n     (recur (dec n) (* x n))))", "user": "563afd5ae4b0bfe05bf11809"}, {"problem": 42, "code": "(fn f [x] \n  (if (= 0 x)\n    1\n    (* (f (- x 1)) x)))", "user": "56483562e4b0284900eef629"}, {"problem": 42, "code": "#(reduce * \n         (take % (iterate dec %)))", "user": "55344b75e4b09218d5f44f99"}, {"problem": 42, "code": "(fn [x] (reduce * 1 (map inc (range x))))", "user": "566a3a26e4b0a866af689699"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (inc x))))", "user": "549ffeade4b0f3d1d8e70fb2"}, {"problem": 42, "code": "#(loop [i %, va 1]\n  (if (= i 1)\n     va\n    (recur (dec i)(* va i)))\n  )", "user": "56306e6ce4b073c1cf7a9be7"}, {"problem": 42, "code": "(fn [n]\n         (loop [result 1\n                n      n]\n           (if (= n 1)\n             result\n             (recur (* n result) (dec n)))))", "user": "566f0ff6e4b0a866af6896e5"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "566064cae4b068f2fe63dc50"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "user": "5668aad0e4b04acd4f672df5"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "52229374e4b0e6a83c892600"}, {"problem": 42, "code": "(fn [n] (loop [cnt n acc 1]\n          (if (zero? cnt)\n            acc\n            (recur (dec cnt) (* acc cnt)))))", "user": "565233f2e4b0f9d632dd8461"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "5640eb50e4b08d4f616f5eec"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "51441ce7e4b0b4fb4ace5f41"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "566efb2be4b0a866af6896e2"}, {"problem": 42, "code": "#(loop [x %\n        total 1]\n   (if (> x 0)\n   \t(recur (dec x) (* total x))\n   \ttotal))", "user": "55244318e4b0882d96d091be"}, {"problem": 42, "code": "(fn fact [x] (if (<= x 1) 1 (* x (fact (- x 1)))))", "user": "564716e6e4b0284900eef616"}, {"problem": 42, "code": "(fn [x](reduce #(* %1(+ 1 %2)) 1 (reverse (range x))))", "user": "565b2fa5e4b068f2fe63dbfe"}, {"problem": 42, "code": "(fn [x]\n  (reduce * (range 1 (inc x))))", "user": "56014f55e4b04bb52996e184"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "56669819e4b0e91d5f5c5674"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "56754c4be4b05957ce8c6149"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "567476bde4b05957ce8c6139"}, {"problem": 42, "code": "(fn [x] (apply * (range 1 (inc x))))", "user": "5675eea1e4b05957ce8c6152"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "55efb51ee4b066087aa9453b"}, {"problem": 42, "code": "#(loop [n % fac 1]\n   (if (= n 1)\n     fac\n     (recur (dec n) (* n fac))))", "user": "4f9aa2a6e4b0dcca54ed6d0c"}, {"problem": 42, "code": "(fn f [n]\n  (if (= n 0)\n    1\n    (* n (f (dec n)))))", "user": "56732c84e4b05957ce8c611c"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "56706f01e4b0a866af6896f2"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "54f9c4dfe4b01ecee9d88841"}, {"problem": 42, "code": "#(loop [a 1 f %] (if (pos? f) (recur (* f a) (dec f)) a))", "user": "52d9ba39e4b09f7907dd13af"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "5676af21e4b05957ce8c6158"}, {"problem": 42, "code": "#(reduce * (map inc (range %)))", "user": "567695c2e4b05957ce8c6157"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5673c886e4b05957ce8c6123"}, {"problem": 42, "code": "(fn [n]\n  (apply * (range 1 (inc n))))", "user": "5675cdf1e4b05957ce8c614d"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "54ef7568e4b024c67c0cf885"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))\n;(fn [x] (apply * (range 1 (inc x))))", "user": "54ce541de4b057c6fda3a2ac"}, {"problem": 42, "code": "(fn [n] (loop [x n acc 1] (if (> x 1) (recur (- x 1) (* x acc)) acc)))", "user": "4fe98e07e4b0547ebccb2464"}, {"problem": 42, "code": "#(apply * (range 2 (+ % 1)))", "user": "5547b72be4b0a04f79299550"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "566caad9e4b0a866af6896c0"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "567798afe4b05957ce8c6169"}, {"problem": 42, "code": "(fn [x] (loop [i (dec x) f x] (if (zero? i) f (recur (dec i) (* f i)))))", "user": "567c2322e4b05957ce8c61af"}, {"problem": 42, "code": "(fn [n] ((fn iter [state count] (if (< n count) state (iter (* state count) (inc count)))) 1 1))", "user": "567d132ee4b05957ce8c61c3"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "5677f9ffe4b05957ce8c616f"}, {"problem": 42, "code": "#(\n  reduce * (map inc (range %))\n  )", "user": "566648e6e4b0e91d5f5c566c"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "56771b31e4b05957ce8c6163"}, {"problem": 42, "code": "(fn [n] (apply * (range 1 (inc n))))", "user": "56761ab1e4b05957ce8c6154"}, {"problem": 42, "code": "(fn fact [n]\n  (loop [acc 1\n         m n]\n    (if (= m 1)\n      acc\n      (recur (* acc m) (- m 1)))))", "user": "5638b88de4b0bfe05bf117e9"}, {"problem": 42, "code": "#(loop [acc 1\n          e %1]\n     (if (= 0 e)\n       acc\n       (recur (* acc e) (dec e))))", "user": "567cef8ce4b05957ce8c61c1"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "567ea95de4b0feffd0d18eb6"}, {"problem": 42, "code": "(fn fac [x]\n  (loop [x x t 1]\n    (if (> x 1)\n      (recur (- x 1) (* t x))\n      t\n    )\n  )\n)", "user": "562add6de4b00e49c7cb4834"}, {"problem": 42, "code": "(fn factorial [n]\n  (cond \n    (< n 0) -1\n    (== n 0) 1\n    :true (* n (factorial (- n 1)))))", "user": "565fe434e4b068f2fe63dc45"}, {"problem": 42, "code": "(fn factorial [n]\n    (reduce * (range 1 (inc n))))", "user": "567b62fce4b05957ce8c61a6"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "567931e9e4b05957ce8c6184"}, {"problem": 42, "code": "(fn [num]\n  (->>\n   num\n   (range)\n   (map inc)\n   (reduce *)))", "user": "567ea403e4b0feffd0d18eb5"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "567b9ff7e4b05957ce8c61a9"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "567c7fefe4b05957ce8c61bc"}, {"problem": 42, "code": "#(loop [s % r 1]\n  (if (= s 0)\n    r\n    (recur (dec s) (* r s))))", "user": "565fe49ee4b068f2fe63dc46"}, {"problem": 42, "code": "(fn fac[n] (loop [n n\n                  factorial 1]\n             (if (= n 1)\n               factorial\n               (recur (dec n) (*' n factorial)))))", "user": "567d18c9e4b05957ce8c61c4"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "525523e3e4b0541d1855b9cc"}, {"problem": 42, "code": "(fn [x y]\n  (if (= y 1)\n    x\n    (recur (* x y) (dec y))))\n1", "user": "52ff7424e4b0d8b024fd3708"}, {"problem": 42, "code": "(fn fact [n]\n  (cond \n   (= n 0) 1\n   (= n 1) 1\n   :else (* n (fact (dec n)))))", "user": "5680104ae4b0966858e4d8ea"}, {"problem": 42, "code": "(fn \n  [x]\n  (reduce * (range 1 (+ x 1))))", "user": "566f7749e4b0a866af6896e9"}, {"problem": 42, "code": "(fn fac [n] (if (= n 0) 1 (* n (fac (dec n)))))", "user": "56800ba1e4b0966858e4d8e8"}, {"problem": 42, "code": "(fn fact\n  ([product k n]\n   (if (= k n)\n     (* product k)\n     (fact (* product k) (inc k) n)))\n  ([n]\n   (fact 1 1 n)))", "user": "56822f37e4b0945ebc182a8d"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "568227fee4b0945ebc182a8a"}, {"problem": 42, "code": "#(second (nth (iterate (fn [[n acc]] [(dec n) (* acc n)]) [% 1]) %) )", "user": "56814cbce4b0945ebc182a81"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "56810479e4b0966858e4d8f8"}, {"problem": 42, "code": "(fn f [n] (if (= 1 n) 1 (* n (f (dec n)))))", "user": "5680fff3e4b0966858e4d8f6"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "56826ebce4b0945ebc182a93"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "5679a4d0e4b05957ce8c618d"}, {"problem": 42, "code": "(fn f [n]\n  (if (< n 2) n (* n (f (- n 1))))\n)", "user": "5681afaae4b0945ebc182a87"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "568242bfe4b0945ebc182a8f"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "56795deae4b05957ce8c6187"}, {"problem": 42, "code": "(fn faktorial\n  [n]\n  (if (<= n 1) 1 \n    (* n (faktorial (dec n)))))", "user": "56784adbe4b05957ce8c6176"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5684e200e4b04eec3ec5cfc4"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "56798d83e4b05957ce8c618b"}, {"problem": 42, "code": "(fn f [n] (if (> n 1) (* n (f (dec n))) 1))", "user": "5683d2a9e4b0945ebc182aa0"}, {"problem": 42, "code": "(fn fac [n] (if (zero? n) 1 (* n (fac (- n 1)))))", "user": "568513c4e4b04eec3ec5cfc5"}, {"problem": 42, "code": "(fn my_fac [n] (if (= n 0) 1 (* n (my_fac (dec n)))))", "user": "567b39b6e4b05957ce8c61a3"}, {"problem": 42, "code": "#(loop [x % r 1]\n   (if (= x 0)\n     r\n     (recur (dec x) (* x r))))", "user": "56815e2fe4b0945ebc182a84"}, {"problem": 42, "code": "(fn [x]\n  (loop[x' x\n        result 1]\n    (if (zero? x') \n      result\n      (recur (dec x') (* result x')))))", "user": "567bf820e4b05957ce8c61ad"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "user": "5686640ae4b0dcc4269f4050"}, {"problem": 42, "code": "#(loop [x %\n        r 1]\n    (if-not (> x 1)\n      r\n      (recur (dec x)\n             (* r x))))", "user": "5521a5a9e4b0882d96d09197"}, {"problem": 42, "code": "(fn foo \n  [n]\n  (if (= 1 n)\n    1\n    (* n (foo (- n 1)))\n    ))", "user": "54453f83e4b032a45b86939a"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "508f4343e4b0ea685a20f767"}, {"problem": 42, "code": "(fn fac [x] (if (= x 1) 1 (* (fac (dec x)) x)))", "user": "5686e652e4b0dcc4269f4059"}, {"problem": 42, "code": "#(reduce * (take % (iterate dec %)))", "user": "566812f0e4b04acd4f672de1"}, {"problem": 42, "code": "(fn [n]\n  (loop [num 1 counter n]\n    (if (= counter 1)\n      num\n      (recur (* num counter) (dec counter)))))", "user": "56877fcbe4b0dcc4269f405e"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5275f7a2e4b03e8d9a4a74d0"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5688a01be4b0dcc4269f406d"}, {"problem": 42, "code": "#(reduce * (take % (iterate inc 1)))", "user": "53f5c402e4b0db01ade6f9d4"}, {"problem": 42, "code": "(fn fac [x] (case x 0 1  (* (fac (- x 1)) x)))", "user": "568820e8e4b0dcc4269f4067"}, {"problem": 42, "code": "(fn [n] (reduce * 1 (range 1 (inc n))))", "user": "56897739e4b0dcc4269f407d"}, {"problem": 42, "code": "(fn fac [x]\n  (if (> x 0)\n  \t(* x (fac (dec x)))\n  \t1\n  )\n)", "user": "56874171e4b0dcc4269f405c"}, {"problem": 42, "code": "(fn fact [x]\n  (loop [x x acc 1]\n\t(if (= x 1)\n      acc\n      (recur (- x 1) (* acc x)))))", "user": "5689fd03e4b0dcc4269f4088"}, {"problem": 42, "code": "(fn factorial [n]\n  (loop [ n n result 1]\n    (if (= 1 n) result\n      (recur (dec n) (* result n))\n      )\n    )\n  )", "user": "56885c32e4b0dcc4269f4068"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "56481722e4b0284900eef628"}, {"problem": 42, "code": "(fn factorial \n  [n]\n  (if (= n 1)\n    1\n    (* (factorial (dec n)) n)))", "user": "55ee7977e4b0121d4835fdee"}, {"problem": 42, "code": "(fn fact [n]\n  (if (> n 1)\n    (* (fact (dec n)) n)\n    1))", "user": "568a743ee4b0dcc4269f408e"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "55915fe9e4b0604b3f94d579"}, {"problem": 42, "code": "#(apply * (range 1 (+ % 1)))", "user": "55664bb5e4b0c656e3ff1833"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "567c48e6e4b05957ce8c61b8"}, {"problem": 42, "code": "#(apply * (take % (map inc (range))))", "user": "55597fcce4b0deb715856e37"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5687fe58e4b0dcc4269f4065"}, {"problem": 42, "code": "(fn [x] (let [zahlen (range 1 (+ x 1))]\n                (loop [z zahlen result []] \n                (if-not (first z) \n                  (last result)\n                  (if (empty? result)\n                    (recur (rest z) (conj result (* 1 (first z))))\n                    (recur (rest z) (conj result (* (last result) (first z))))\n                    \n                    )))))", "user": "567f034be4b0feffd0d18eba"}, {"problem": 42, "code": "(fn [n] (reduce (fn [a b] (* a b)) (range 1 (inc n))))", "user": "568bb02de4b0dcc4269f40a8"}, {"problem": 42, "code": "(fn fact [n] (if (< n 2) 1 (* n (fact (dec n)))))\n\n;; #(reduce * (range 1 (inc %)))", "user": "533a2f7be4b0e30313ee6cb8"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "50784ae5e4b0fc74642bff68"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "566f3e18e4b0a866af6896e7"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1\t(inc n))))", "user": "4ddf597a535d08e6dec9fddf"}, {"problem": 42, "code": "(fn [x] (loop [n x r 1] (if (= 1 n) r (recur (dec n) (* r n) ))))", "user": "5686b7c7e4b0dcc4269f4057"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "55f85b93e4b03cbcff9738ae"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "568bddaee4b0dcc4269f40aa"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "55c5b55fe4b0e31453f649b5"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "568e450fe4b0dcc4269f40d0"}, {"problem": 42, "code": "#(->>\n  (range)\n  (map inc)\n  (take %)\n  (reduce * ))", "user": "51be00cae4b0ff155d51d2b8"}, {"problem": 42, "code": "(fn [x] (reduce #(* %1 %2) 1 (range 1 (inc x))))", "user": "568c2d96e4b0dcc4269f40af"}, {"problem": 42, "code": "(fn fact [x] (if (= 1 x) 1 (* x(fact (dec x)))))", "user": "568ad3c1e4b0dcc4269f4096"}, {"problem": 42, "code": "(fn fact [n] (if (= n 1) 1 (* n (fact (dec n)))))", "user": "568c7a15e4b0dcc4269f40b6"}, {"problem": 42, "code": "(fn fact [x] (if (= 1 x) 1 (* x (fact (- x 1)))))", "user": "568ad3ede4b0dcc4269f409a"}, {"problem": 42, "code": "(fn fact [x] (if (= x 1) 1 (* x (fact (- x 1)))))", "user": "568ad3e1e4b0dcc4269f4099"}, {"problem": 42, "code": "(fn fact [n] (if (= n 1) 1 (* n (fact (dec n)))))", "user": "568ad3cbe4b0dcc4269f4098"}, {"problem": 42, "code": "(fn fact [num] (if (= num 1) 1 (do(* num (fact (dec num))))))", "user": "568ad4d8e4b0dcc4269f409b"}, {"problem": 42, "code": "(fn fact[n] (if (= n 1) 1 (* n (fact (dec n)))))", "user": "568ad3c2e4b0dcc4269f4097"}, {"problem": 42, "code": "(fn factorial [n]\n  (if (zero? n)\n      1\n      (* n (factorial (dec n)))))", "user": "568e1871e4b0dcc4269f40cc"}, {"problem": 42, "code": "(fn fac [n] (if (<= n 0) 1 (* n (fac (- n 1))) ))", "user": "567f988be4b0feffd0d18ebe"}, {"problem": 42, "code": "(fn fact [n] (\n              (fn fact-acc [n acc] (if (zero? n) acc (fact-acc (dec n) (* acc n)))) n 1\n                ))", "user": "56912f93e4b0dcc4269f40ef"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "543b4746e4b032a45b86932c"}, {"problem": 42, "code": "(fn fact [num]\n  (if (= 0 num)\n    0\n    (loop [rs 1\n           nm num]\n      (if (= 0 nm)\n        rs\n        (recur (* rs nm) (dec nm))))))", "user": "5294a49be4b02ebb4ef7500f"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "56066e82e4b08b23635d3173"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "568d4742e4b0dcc4269f40c2"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "4ff8487be4b0678c553fc397"}, {"problem": 42, "code": "#(loop [n %1 fact 1]\n   (cond\n    (<= n 1) fact\n    :else (let [fact (* fact n)]\n            (recur (dec n) fact))))", "user": "5657fed1e4b0f9d632dd84ae"}, {"problem": 42, "code": "(fn [fact] (reduce #(* %1 %2) (range 1 (+ fact 1))))", "user": "56743413e4b05957ce8c612e"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "569381a5e4b0dcc4269f4104"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "561a9380e4b053970a773b07"}, {"problem": 42, "code": "(fn [n] (loop [a 1 n n] (if (= n 0) a (recur (* a n) (dec n)))))", "user": "4e268c6e535deb9a81d77ef4"}, {"problem": 42, "code": "(fn fact [n]\n  (reduce * (range 1 (inc n))))", "user": "552bd5c2e4b0ffed3738f969"}, {"problem": 42, "code": "(fn [x] (loop [res 1 n x] (if (<= n 1) res (recur (* res n) (dec n)))))", "user": "566669d8e4b0e91d5f5c566f"}, {"problem": 42, "code": "(fn foo [x]\n  (if (<= x 1)\n    1\n    (* x (foo (dec x)))))", "user": "568cea39e4b0dcc4269f40bc"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "52e5f810e4b09f7907dd1468"}, {"problem": 42, "code": "#(reduce * (map inc (range %)))", "user": "5691ef12e4b0dcc4269f40f8"}, {"problem": 42, "code": "(fn fac [x] \n  (if \n   (= 1 x) \n   1 \n   (* x (fac (dec x)))))", "user": "56946d43e4b0dcc4269f411e"}, {"problem": 42, "code": "(fn [n]\n  (reduce * 1 (range 1 (inc n))))", "user": "56967bc0e4b0dcc4269f4131"}, {"problem": 42, "code": "(fn fak\n  [a]\n  (if (= a 1)\n    1\n    (* a (fak (- a 1))))\n )", "user": "56193c6ee4b053970a773af2"}, {"problem": 42, "code": "(fn factorial [n]\n  (apply * (map inc (range n))))", "user": "5693a53ee4b0dcc4269f4106"}, {"problem": 42, "code": "#(loop [n %\n        res 1]\n   (if (> n 0)\n     (recur (dec n) (* res n))\n     res))", "user": "56175cf9e4b06b1bb2182a0f"}, {"problem": 42, "code": "#(loop [n %1 ret 1] (if (<= n 0) ret (recur (dec n) (* ret n))))", "user": "550345fee4b086ebe8a79c6c"}, {"problem": 42, "code": "(fn fact \n  [numero]\n  (loop [num numero acc 1] \n    (if (= num 1)\n      acc\n      (recur (dec num) (* num acc)))))", "user": "5293a603e4b0239c8a67af42"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5372e7d9e4b06d7f452d9e02"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (map inc (range n))))", "user": "567abc97e4b05957ce8c619d"}, {"problem": 42, "code": "(fn [x] (reduce * (map inc (range x))) )", "user": "56979bb7e4b0e0b3d3318cac"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "569ad037e4b0542e1f8d144f"}, {"problem": 42, "code": "(fn [n] (apply * (take n (iterate inc 1))))", "user": "56791447e4b05957ce8c6183"}, {"problem": 42, "code": "#(loop [i % acc 1]\n   (if (> i 0)\n     (recur (dec i) (* acc i))\n     acc))", "user": "5688d6a8e4b0dcc4269f4071"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (+ 1 %)))", "user": "56795625e4b05957ce8c6186"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "569c40cee4b0542e1f8d1462"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "5629de63e4b00e49c7cb4812"}, {"problem": 42, "code": "(fn[n]\n  (loop [result 1\n         i 1\n         j n]\n    (if (> i j)\n      result\n      (recur (* result i) (inc i) j)\n      )\n\n    ))", "user": "564c7501e4b0284900eef671"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "56990b68e4b0542e1f8d143a"}, {"problem": 42, "code": "(fn [x] (->> x range (map inc) (reduce *)))", "user": "569c1038e4b0542e1f8d145f"}, {"problem": 42, "code": "(fn [num]\n  (reduce * (range 1 (inc num))))", "user": "5579eed7e4b05c286339e09b"}, {"problem": 42, "code": "(fn factorial [n] \n   (reduce #(* %1 %2)\n           (range 1 (+ n 1))))", "user": "569aca1ee4b0542e1f8d144d"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "4e6a8d28535d8ccf87e9fef5"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5591cc56e4b0604b3f94d582"}, {"problem": 42, "code": "(fn f[n] (if (= n 1) 1 (* n (f (dec n)))))", "user": "5339cb07e4b0e30313ee6caf"}, {"problem": 42, "code": "(fn [n]\n       (loop [i n\n              a 1 ]\n             (if (= i 1)\n               a\n               (recur (dec i) (* a i)))\n\n         )\n\n   )", "user": "5683b67ce4b0945ebc182a9f"}, {"problem": 42, "code": "(fn [x] \n  (reduce * (map inc (range x)))\n  )", "user": "569f8736e4b0542e1f8d1495"}, {"problem": 42, "code": "(fn [n] (apply * (map inc (range n))))", "user": "569d2283e4b0542e1f8d1474"}, {"problem": 42, "code": "(fn [x]\n  (if (or (= x 0) (= x 1))\n    1\n   (apply * (range 1 (inc x)))))", "user": "53d977f1e4b0e771c302547a"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "55dd7f72e4b050e68259b3c4"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5630ce72e4b0bfe05bf11786"}, {"problem": 42, "code": "(fn fact [n] (if (= n 1) 1 (* n (fact (dec n)))))", "user": "569c07b9e4b0542e1f8d145d"}, {"problem": 42, "code": "(fn [x] \n  (reduce * 1 (range 1 (inc x))))", "user": "5297dcc5e4b02ebb4ef75047"}, {"problem": 42, "code": "(fn\n  [arg]\n  (loop [x (dec arg)\n         total arg]\n    (if (> x 0)\n      (recur (dec x) (* total x))\n      total)))", "user": "561fc0d0e4b064ca9f4b16d2"}, {"problem": 42, "code": ";(fn fac [n] (apply * (range 1 (inc n))))\n(fn fac [n] (reduce * (range 1 (inc n))))", "user": "569ab3e2e4b0542e1f8d144a"}, {"problem": 42, "code": "#(loop [n % result 1]\n   (if (= n 0)\n     result\n     (recur (dec n) (* result n))))", "user": "569ef93de4b0542e1f8d148b"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (+ 1 n))))", "user": "5002c798e4b0678c553fc42d"}, {"problem": 42, "code": "#(reduce * (range % 0 -1))", "user": "562d15a6e4b0a45d2ff83019"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "56824e1be4b0945ebc182a91"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "user": "56785234e4b05957ce8c6177"}, {"problem": 42, "code": "(fn [x] (loop [nx x frag 1] (if (zero? nx) frag (recur (dec nx) (* frag nx)))))", "user": "56619212e4b068f2fe63dc6b"}, {"problem": 42, "code": "#(apply * (range 1 (+ 1 %1)))", "user": "5651654be4b0f9d632dd845a"}, {"problem": 42, "code": "(fn [_n_]\n  (loop [n _n_\n         r 1]\n    (if (<= n 0)\n      r\n      (recur (dec n)\n             (* r n)))))", "user": "543f1765e4b032a45b86935a"}, {"problem": 42, "code": "#(reduce * (map inc (range %)))", "user": "568a13eae4b0dcc4269f4089"}, {"problem": 42, "code": "(fn fact [num]\n  (if (= num 0)\n    1\n    (* num (fact (dec num)))))", "user": "56936547e4b0dcc4269f4101"}, {"problem": 42, "code": "(fn [n]\n  \n;; from to by\n(reduce * (range 1 (inc n ) 1 ) )\n  \n  );END: fn", "user": "56a358d0e4b0542e1f8d14c9"}, {"problem": 42, "code": "(fn factorial [n]\n  (if (= 0 n)\n    1\n    (* n (factorial (dec n)))))", "user": "569f99cce4b0542e1f8d1497"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "569951e4e4b0542e1f8d143e"}, {"problem": 42, "code": "(fn [x] (loop [x x n 1]\n          (if (= 1 x)\n            n\n            (recur (dec x) (* n x)))))", "user": "5689bd04e4b0dcc4269f4082"}, {"problem": 42, "code": "(fn factorial [x] (if (= x 1) 1 (* x (factorial (dec x)))))", "user": "569adec2e4b0542e1f8d1450"}, {"problem": 42, "code": "(fn fact [x]\n  (loop [c x\n         result 1]\n    (if (> c 0)\n      (recur (dec c) (* result c))\n      result)))", "user": "56a3c89ae4b0542e1f8d14cf"}, {"problem": 42, "code": "(fn [x]\n  (loop [x x out 1]\n    (if (= x 0)\n      out\n      (recur (dec x) (* x out)))))", "user": "5650ac8be4b0284900eef6c2"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "569f33c7e4b0542e1f8d148f"}, {"problem": 42, "code": "(fn fact [n]\n  (if (> n 0)\n    (* n (fact (dec n)))\n    1))", "user": "56a51f26e4b0542e1f8d14e0"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "56992162e4b0542e1f8d143c"}, {"problem": 42, "code": "#(reduce *(range 1 (inc %)))", "user": "56a1b854e4b0542e1f8d14b2"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (+ x 1))))", "user": "55fc838be4b0f488688e0674"}, {"problem": 42, "code": "(fn [n]\n  (loop [c n r 1]\n    (if (= c 1)\n      r\n      (recur (dec c) (* r c)))))", "user": "54a80855e4b09f271ff37c9e"}, {"problem": 42, "code": "(fn [n] (reduce #(* %1 %2) 1 (range 1 (+ 1 n))))", "user": "5576961be4b05c286339e06f"}, {"problem": 42, "code": "(fn [n] (apply * (take n (iterate inc 1))))", "user": "569ce6fee4b0542e1f8d146c"}, {"problem": 42, "code": "(fn [n]\n  (if (< n 1)\n    0\n    (loop [iterations n\n           result 1]\n      (if (<= iterations 0)\n        result\n        (recur (dec iterations) (* result iterations))))))", "user": "56098ccbe4b0053d1b86c7e4"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "56a38a4ce4b0542e1f8d14cc"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (map #(+ 1 %) (range n))))", "user": "51a7bf26e4b0da5f497bde8c"}, {"problem": 42, "code": "(fn [x] (apply * (range 1 (+ x 1))))", "user": "569425b6e4b0dcc4269f410e"}, {"problem": 42, "code": "(fn [n] (apply * (range 1 (inc n))))", "user": "567c994fe4b05957ce8c61be"}, {"problem": 42, "code": "(fn [n] (reduce #(* %1 %2) (take n (iterate inc 1))))", "user": "5167e8ace4b0c5a4140a309a"}, {"problem": 42, "code": "(fn s [x](if (= x 1) 1 (* x (s (dec x)))))", "user": "56a0ac99e4b0542e1f8d14a6"}, {"problem": 42, "code": "(fn [n]\n  (loop [n n\n         acc 1]\n    (if (= 1 n)\n      acc\n      (recur (dec n) (* n acc)))))", "user": "4f5599dfe4b0a7574ea71806"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "55c2367ee4b0e31453f64978"}, {"problem": 42, "code": "(fn [n]\n  (reduce #(* %1 %2) 1 (range 1 (inc n))))", "user": "56a79eb0e4b07966d5a8a05d"}, {"problem": 42, "code": "#(apply * (range 1 (+ % 1)))", "user": "55263009e4b0ffed3738f916"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (rest (range (inc n)))))", "user": "567b4641e4b05957ce8c61a5"}, {"problem": 42, "code": "#(loop [l % f 1](if (= 1 l) f (recur (dec l) (* f l))))", "user": "5638d2d1e4b0bfe05bf117eb"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (+ x 1))))", "user": "546c1375e4b00cfc9eacc173"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %1)))", "user": "56826c2fe4b0945ebc182a92"}, {"problem": 42, "code": "(fn factorial\n  [n]\n  (if (= n 1)\n    n\n    (* n (factorial (dec n)))\n    )\n  )", "user": "56a72c0de4b0542e1f8d14f7"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "55d1ec3ee4b0e31453f64a4c"}, {"problem": 42, "code": "#(reduce * 1 (map inc (range %)))", "user": "5243233fe4b076204b44faac"}, {"problem": 42, "code": "#(apply * (range 1 (inc %1)))", "user": "56a75810e4b0542e1f8d14fc"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "56a76f36e4b07966d5a8a05b"}, {"problem": 42, "code": "(fn fac [x]\n  (loop [n x acc 1]\n    (cond\n     (= n 0) acc\n     :else (recur (- n 1) (* acc n)))))", "user": "56942b5fe4b0dcc4269f411c"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "56949fc5e4b0dcc4269f4120"}, {"problem": 42, "code": "(fn [n] (reduce *  (range 1 (inc n ))))", "user": "55f9b2b6e4b03cbcff9738c8"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (inc x))))", "user": "51b01309e4b0c53cf2e68a57"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "56ac81ace4b03c432f187347"}, {"problem": 42, "code": "(fn [x] (reduce * (vec (range 1 (inc x)))))", "user": "56abeb1fe4b03c432f187344"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "56a6051fe4b0542e1f8d14e5"}, {"problem": 42, "code": "(fn fak \n  [i]\n  (if (<= i 1) 1\n    (* i (fak (- i 1)))))", "user": "56a9f5c4e4b07966d5a8a07d"}, {"problem": 42, "code": "(fn fact[n]\n  (if (zero? n)\n    1\n    (*' n (fact (dec n)))))", "user": "56903cb9e4b0dcc4269f40eb"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "565f8fd2e4b068f2fe63dc41"}, {"problem": 42, "code": "(fn f[n](if (< n 2) 1 (* n (f (- n 1)))))", "user": "56ae4c21e4b03c432f18735c"}, {"problem": 42, "code": "(fn [fact] \n  (loop [cnt fact acc 1] \n    (if (zero? cnt) \n      acc \n          (recur (dec cnt) (* acc cnt)))))", "user": "56942923e4b0dcc4269f4112"}, {"problem": 42, "code": "(fn fact [n] (if (>= n 1) (* n (fact (dec n))) 1))", "user": "56aef4ffe4b03c432f187365"}, {"problem": 42, "code": "(fn [num]\n  (loop [rm num\n         out 1]\n    (if (= rm 1)\n      out\n      (recur (- rm 1) (* out rm)))))", "user": "56a9ea17e4b07966d5a8a07c"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "569dd6e8e4b0542e1f8d1480"}, {"problem": 42, "code": "(fn [x]\n  (reduce * (range 1 (inc x))))", "user": "56ae749fe4b03c432f18735f"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5652dd89e4b0f9d632dd8469"}, {"problem": 42, "code": "(fn \n  [n]\n  (letfn [(factorial \n            [n]\n            (if (zero? n)\n              1\n              (* n (factorial (dec n)))))]\n    (factorial n)))", "user": "56a36f76e4b0542e1f8d14ca"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "56b35565e4b0982f16b37e16"}, {"problem": 42, "code": "#(loop [n % acc 1] ( if (= 1 n) acc (recur (dec n) (* n acc)) ))", "user": "56b3146ae4b0982f16b37e0f"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "56b1ab17e4b0982f16b37df1"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5617a540e4b06b1bb2182a12"}, {"problem": 42, "code": "#(reduce * (take % (iterate inc 1)))", "user": "56ae214ce4b03c432f18735a"}, {"problem": 42, "code": "(fn [x]\n  (loop [fact 1\n         x x]\n    (if (= x 1)\n      fact\n      (recur (* fact x) (dec x)))))", "user": "56b18445e4b0982f16b37dee"}, {"problem": 42, "code": "(fn [nr]\n  (apply * (range 1 (inc nr))))", "user": "5655e056e4b0f9d632dd849b"}, {"problem": 42, "code": "(fn [x]\n  (loop [factorial 1 x x]\n    (if (= x 0)\n      factorial\n      (recur (* factorial x) (dec x))))\n  )", "user": "5694292ee4b0dcc4269f4113"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "56942962e4b0dcc4269f4117"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "53483a32e4b084c2834f4a57"}, {"problem": 42, "code": "(fn [num] (reduce * (range num 1 -1)))", "user": "56b6e354e4b0982f16b37e41"}, {"problem": 42, "code": "(fn fact [n]\n  (reduce * (range 1 (inc n))))", "user": "56b280e3e4b0982f16b37e06"}, {"problem": 42, "code": "; stack safe?\n; #(reduce * (range 1 (inc %)))\n\n#(loop [x %, s 1]\n   (if\n     (= x 1) s\n     (recur (dec x) (* s x))))", "user": "56b295f7e4b0982f16b37e08"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "53307a23e4b019098a6f8b5d"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5693b40ce4b0dcc4269f4107"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5130c26fe4b08c712d3fae3a"}, {"problem": 42, "code": "(fn [n] (apply * (range 1 (inc n))))", "user": "56646a7fe4b0e91d5f5c5657"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (+ 1 x))))", "user": "56941e48e4b0dcc4269f410d"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "56942970e4b0dcc4269f4118"}, {"problem": 42, "code": "(fn f [n] \n  (if (zero? n) \n    1 \n    (* (f (- n 1)) n)) )", "user": "563cdfdfe4b0bfe05bf11840"}, {"problem": 42, "code": "(fn [x]\n        (reduce\n            *\n            (range 1 (+ x 1))))", "user": "5694290fe4b0dcc4269f4110"}, {"problem": 42, "code": "(fn calc-fact [n]\n  (if (= n 0)\n    1\n    (* n (calc-fact (- n 1)))))", "user": "56a1fce9e4b0542e1f8d14b7"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "55e01f4ee4b050e68259b406"}, {"problem": 42, "code": "(fn [x]\n  (reduce * (range 1 (inc x))))", "user": "5694129de4b0dcc4269f410c"}, {"problem": 42, "code": "(fn [t] (loop [iter t a 1] (if\n                            (= iter 1) a\n                            (recur (- iter 1) (* iter a)))))", "user": "56af842de4b061e3ca319ad2"}, {"problem": 42, "code": "(fn [x]\n  (if (= 0 x)\n    1\n    (reduce * (rest(range (inc x))))))", "user": "569429c7e4b0dcc4269f411a"}, {"problem": 42, "code": "(fn [n]\n  (loop [counter n acc 1]\n    (if (zero? counter)\n      acc\n      (recur (dec counter) (* acc counter)))))", "user": "5694284de4b0dcc4269f410f"}, {"problem": 42, "code": "#(reduce * (map inc (range %)))", "user": "56b86e64e4b0f26550335924"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "56942939e4b0dcc4269f4114"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "56baa68ce4b0f26550335947"}, {"problem": 42, "code": "(fn [n] (reduce * 1 (range 1 (inc n))))", "user": "55e206f3e4b050e68259b429"}, {"problem": 42, "code": "(fn [n] (apply * (range 1 (inc n))))", "user": "56942944e4b0dcc4269f4115"}, {"problem": 42, "code": "#(loop [a 1 n %]\n   (if (= n 1) a\n     (recur (* a n) (dec n))))", "user": "56baab13e4b0f26550335948"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "56b7c32ee4b0982f16b37e48"}, {"problem": 42, "code": "(fn\n  [n]\n  (loop [p 1 c 1]\n    (if (>= n c)\n      (recur (* p c) (inc c))\n      p\n    )\n  )\n)", "user": "56bb3a4be4b0f26550335951"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "56bb9ccce4b0f26550335959"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "56283825e4b00e49c7cb47e4"}, {"problem": 42, "code": "(fn fact [x]\n    (loop [n x f 1]\n        (if (= n 1)\n            f\n            (recur (dec n) (* f n)))))", "user": "56942955e4b0dcc4269f4116"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "531a0709e4b08068f379ed87"}, {"problem": 42, "code": "(fn f [n] (if (= n 1) 1 (* n (f (dec n))) ) )", "user": "5693cc39e4b0dcc4269f4108"}, {"problem": 42, "code": "#(loop [n %1 s 1] (if (<= n 1)\n                    s\n                    (recur (dec n) (* s n)) ))", "user": "56bca51ae4b0f26550335963"}, {"problem": 42, "code": "(fn [n] (loop [x n f 1]\n          (if (= x 1)\n            f\n            (recur (dec x) (* f x)))))", "user": "55c0f842e4b01b9910ae2a2b"}, {"problem": 42, "code": "(fn fac [n] (reduce #(* %1 %2) (range 1 (inc n))))", "user": "56a01895e4b0542e1f8d149f"}, {"problem": 42, "code": "(fn factorial [n]\n  (if (<= n 1)\n    1\n    (* n (factorial (dec n)))))", "user": "56ba1406e4b0f2655033593c"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)) )", "user": "56bb81ebe4b0f26550335957"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "563536f8e4b0bfe05bf117c5"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "525636dfe4b0541d1855ba0d"}, {"problem": 42, "code": "#(reduce * (range % 0 -1))", "user": "55ed5a2de4b0121d4835fdd8"}, {"problem": 42, "code": "(fn fact [x]\n  (if (<= x 1)\n    1\n    (* x (fact (- x 1)))))", "user": "56c0aeb8e4b060a8e693e3af"}, {"problem": 42, "code": "(fn [step] (reduce #(* %1 %2) 1 (range 1 (inc step))))", "user": "506af7d8e4b0a2a5463de37d"}, {"problem": 42, "code": "( fn [ n ]\n  (loop [ nn n r 1 ] \n    (if ( pos? nn )\n      (recur (dec nn) ( * nn r) )\n      r\n      )\n    )\n  \n  )", "user": "569637d8e4b0dcc4269f4130"}, {"problem": 42, "code": "(fn fact [n]\n  (loop [result 1\n         i      n]\n\n    (if (<= i 1)\n      result\n      (recur (* result i) (- i 1)))))", "user": "56bfcba1e4b060a8e693e3a1"}, {"problem": 42, "code": "(fn fac!\n  [n]\n  (reduce #(* %1 %2) n (range 1 n)))", "user": "5609d328e4b05f002753deee"}, {"problem": 42, "code": "#(loop [n % fact 1]\n   (if (= n 1)\n     fact\n     (recur (dec n) (* fact n))\n   )\n)", "user": "56b2300ce4b0982f16b37dff"}, {"problem": 42, "code": "(fn [n]\n  (loop [n n\n    \t result 1]\n    (if (= n 0)\n      result\n      (recur (dec n) (* result n)))))", "user": "56a7be01e4b07966d5a8a05e"}, {"problem": 42, "code": "(fn [r] (reduce #(* %1 (inc %2)) 1 (range r)))", "user": "56b80ad1e4b0f26550335921"}, {"problem": 42, "code": "(fn fact [n]\n  (reduce * (range 1 (inc n))))", "user": "56c33ceae4b05cc29241ee89"}, {"problem": 42, "code": "(fn f [n] (if (= n 1) 1 (* n ( f (- n 1)))))", "user": "56c08696e4b060a8e693e3aa"}, {"problem": 42, "code": "(fn [x] (apply * (take x (iterate inc 1))))", "user": "56b2573ce4b0982f16b37e02"}, {"problem": 42, "code": "#(loop [n %1 f 1]\n   (if (= n 1)\n     f\n     (recur (dec n) (* f n))))", "user": "54aa2462e4b09f271ff37cb4"}, {"problem": 42, "code": "(fn [n]\n  (loop [num n ans 1]\n    (if (= num 0)\n      ans\n      (recur (dec num) (* ans num)))))", "user": "56499a5de4b0284900eef644"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %1)))", "user": "56c6490de4b05cc29241eeaf"}, {"problem": 42, "code": "(fn [n]\n  (apply * (range 1 (inc n))))", "user": "567e418fe4b0feffd0d18eb1"}, {"problem": 42, "code": "#(apply *' (range 1 (inc %)))", "user": "569f4dabe4b0542e1f8d1491"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "56c4f43ce4b05cc29241ee9c"}, {"problem": 42, "code": "(fn [n]\n  (apply * (range 1 (inc n))))", "user": "56c1e720e4b0839206b9d68b"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "56c33bb9e4b05cc29241ee87"}, {"problem": 42, "code": "(fn fac\n   ([d] (fac d 1))\n   ([d s]\n    (if (= 0 d)\n      s\n      (fac (dec d) (* s d))\n      )))", "user": "56c8cff8e4b0ed865f9758d7"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "56a37ccee4b0542e1f8d14cb"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "566470b9e4b0e91d5f5c5658"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "56aed78fe4b03c432f187363"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "56bf4ac0e4b0f26550335985"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (+ 1 x))) )", "user": "4e70eae1535d5021c1a89642"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5602f5fce4b04bb52996e1ad"}, {"problem": 42, "code": "(fn [x] (reduce *' (range 1 (+ x 1))))", "user": "56cb8c55e4b0ea9b8538f736"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "56cba075e4b0ea9b8538f737"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "55cde24ae4b0e31453f64a23"}, {"problem": 42, "code": "(fn factorial[x] \n (if (= 0 x)\n   1\n   (* x (factorial (- x 1)) )\n)\n   )", "user": "56aa9464e4b07966d5a8a08d"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "user": "55f73078e4b06e875b46cea4"}, {"problem": 42, "code": "#(->>\n  (iterate inc 1)\n  (take %)\n  (reduce *))", "user": "56c9970ce4b0ed865f9758de"}, {"problem": 42, "code": "(fn fact [x] (if (= x 0) 1 (* x (fact (dec x)))))", "user": "56c3aca0e4b05cc29241ee90"}, {"problem": 42, "code": "(fn factorial [n]\n\t(if (= 1 n)\n\t\tn\n\t\t(* n (factorial (dec n)))))", "user": "56c23ca6e4b05cc29241ee7f"}, {"problem": 42, "code": "(fn [x]\n    (loop [n x f 1]\n        (if (= n 1)\n            f\n            (recur (dec n) (* f n)))))", "user": "550b1c2ce4b06e50f9beb13b"}, {"problem": 42, "code": "#(reduce * (map inc (range %)))", "user": "52fe31d5e4b047fd55837038"}, {"problem": 42, "code": "(fn [x]\n  (if (> 1 x)\n    nil\n    (loop [i 1 result 1]\n      (if (> i x)\n        result\n        (recur (inc i) (* result i))))))", "user": "56c55fbce4b05cc29241eea5"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "4f2858ece4b0d6649770a016"}, {"problem": 42, "code": "(fn fact [n] (if (> n 0) (* n (fact (dec n))) 1))", "user": "54be7e93e4b0ed20f4ff6eed"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (inc x))))", "user": "56cef5e8e4b0ea9b8538f762"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "56ca2f25e4b0ea9b8538f716"}, {"problem": 42, "code": "#(reduce * (take % (iterate inc 1)))", "user": "560d4994e4b05f002753df3c"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "56cf9d4fe4b0ea9b8538f76c"}, {"problem": 42, "code": "#(apply * (range 1(+ 1 %)))", "user": "56c60b36e4b05cc29241eead"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "56d228f3e4b0ea9b8538f79a"}, {"problem": 42, "code": "#(reduce * (take % (iterate dec %)))", "user": "56d1afd9e4b0ea9b8538f791"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "user": "56603e5fe4b068f2fe63dc4a"}, {"problem": 42, "code": "; loop / recur doesn't use a stack.\n; *' allows for big numbers.\n(fn fac [n]\n  (loop [iter 1\n          acc  1]\n    (if (> iter n)\n      acc\n      (recur (inc iter) (*' acc iter) )\n    )\n   )\n)", "user": "55c5e781e4b0e31453f649b8"}, {"problem": 42, "code": "(fn [nStart] (loop [acc 1 n nStart] (if (< n 1) acc (recur (* acc n) (dec n)))))", "user": "54ba8206e4b0ed20f4ff6eb6"}, {"problem": 42, "code": "(fn fact [x] \n  (if (> x 1)\n    (* x (fact (- x 1)))\n    1))", "user": "5027bbe3e4b01614d1633fef"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "55ed1575e4b0121d4835fdd3"}, {"problem": 42, "code": "(fn fact [x]\n  (cond\n   (= x 1) x\n   :else (* x (fact (dec x)))\n  )\n)", "user": "56433d34e4b08d4f616f5f23"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "56491d05e4b0284900eef63a"}, {"problem": 42, "code": "#(loop [n 1 t 1]\n   (if (> n %)\n     t\n     (recur (inc n) (* t n))))", "user": "56d63729e4b0ea9b8538f7ca"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "56d05ba2e4b0ea9b8538f77d"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "56d30497e4b0ea9b8538f7a8"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "56c70cc2e4b0ed865f9758b5"}, {"problem": 42, "code": "(fn f\n    ([n] (f n 1))\n    ([n acc] (if (< n 2) acc (recur (dec n) (* acc n)))))", "user": "56cbb352e4b0ea9b8538f738"}, {"problem": 42, "code": "(fn fact [n]\n  (loop [n n f 1] (if (= 1 n) f (recur (dec n) (* f n)))))", "user": "56d68cbae4b0ea9b8538f7cd"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "56d80542e4b0ea9b8538f7e1"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "56d5fd24e4b0ea9b8538f7c5"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (range 1 (+ n 1))))", "user": "56d4b22de4b0ea9b8538f7bb"}, {"problem": 42, "code": "(fn [x] (loop [n x res 1] (if (> n 1) (recur (dec n) (* res n)) res)))", "user": "56d69d28e4b0ea9b8538f7cf"}, {"problem": 42, "code": "(fn [n]\n  (loop [n n \n         f 1]\n    (if (= 1 n) f\n      (recur (dec n) (* f n)))))", "user": "56d8a63fe4b0ea9b8538f7e8"}, {"problem": 42, "code": "#(loop [r 1 i 1]\n   (if (> i %) r\n     (recur (* r i) (inc i))))", "user": "56ab80f1e4b03c432f18733e"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "56b6a50ae4b0982f16b37e3c"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "56d957c2e4b0ea9b8538f7f1"}, {"problem": 42, "code": "(fn [x] (loop [y x accu 1] (if (< y 1) accu (recur (dec y) (* accu y)))))", "user": "55009d17e4b07d26eda61d5d"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "56c792ace4b0ed865f9758c4"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "563a79e5e4b0bfe05bf117fe"}, {"problem": 42, "code": "#(apply * (take % (iterate inc 1)))", "user": "56c560ede4b05cc29241eea6"}, {"problem": 42, "code": "(fn factorial [x]\n  (loop [x x f 1]\n    (if (== 1 x) f\n        (recur (dec x) (* x f)))))", "user": "56012cd7e4b04bb52996e17d"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "527bd988e4b03e8d9a4a759d"}, {"problem": 42, "code": "(fn fac [n]\n  (if (= n 0) 1\n    (* n (fac (dec n)))))", "user": "56d74c88e4b0ea9b8538f7d9"}, {"problem": 42, "code": "(fn factorial [num]\n  (apply * (range 1 (inc num))))", "user": "557e56aae4b05c286339e0d5"}, {"problem": 42, "code": "#(reduce (fn [c v] (* c v)) 1 (range 1 (inc %1)))", "user": "55b6a63ae4b01b9910ae299b"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "550b502ae4b06e50f9beb13f"}, {"problem": 42, "code": ";; #(reduce * (range 1 (inc %)))\n#(reduce * (take-while pos? (iterate dec %)))", "user": "56df9203e4b0ca2494a095fc"}, {"problem": 42, "code": "(fn factorial [n]\n  (if (= n 1) 1\n      (* n (factorial (dec n)))))", "user": "56cf80f9e4b0ea9b8538f76a"}, {"problem": 42, "code": "(fn [n]\n  (reduce #(* %1 %2) 1 (range 2 (+ 1 n))))", "user": "56308326e4b073c1cf7a9be9"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "542a8d07e4b01498b1a71b43"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "56e08e4fe4b0ca2494a0960b"}, {"problem": 42, "code": "(fn [x]\n  (loop [i x\n         res 1]\n    (if (> i 0)\n      (recur (dec i) (* res i))\n      res\n      )\n    )\n  )", "user": "55f33f0ce4b06e875b46ce59"}, {"problem": 42, "code": "#(loop [i % acc 1] (if (zero? i) acc (recur (dec i) (* acc i))))", "user": "563cce5be4b0bfe05bf1183f"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "560ee566e4b05f002753df57"}, {"problem": 42, "code": "(fn factorial-using-reduce [n]\n  (reduce * (range 1 (inc n))))", "user": "56df254be4b0ca2494a095ea"}, {"problem": 42, "code": "#(loop [dex 1 cnt % acc 1]\n   (if (> dex cnt)\n       acc\n       (recur (inc dex) cnt (* acc dex))))", "user": "56be8649e4b0f26550335983"}, {"problem": 42, "code": "#(reduce *(range 1 (inc %)))", "user": "52c7c40be4b0c2d177d62125"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "56e2dbf4e4b03a7c14b85a3b"}, {"problem": 42, "code": "(fn [x]\n  (apply * (range 1 (inc x))))", "user": "56d7f340e4b0ea9b8538f7df"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "56e227a8e4b03a7c14b85a31"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "56e4a6c1e4b03a7c14b85a51"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "53cd5226e4b00fb29b2212e0"}, {"problem": 42, "code": "#(reduce * (take % (iterate dec %)))", "user": "56d4b1aee4b0ea9b8538f7ba"}, {"problem": 42, "code": "(fn[n] (reduce #(* %1 %2) (range 1 (inc n))))", "user": "56050f06e4b08b23635d3161"}, {"problem": 42, "code": "(fn\n  [n]\n  (reduce * (range 1 (inc n))))", "user": "56bf78dae4b0f26550335989"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "569f7bc2e4b0542e1f8d1494"}, {"problem": 42, "code": "(fn factorial\n  ([n]                    \n    (factorial n 1))\n  ([n acc]                \n    (if  (= n 0)  acc\n    (recur (dec n) (* acc n)))))", "user": "5662ca50e4b0e91d5f5c564c"}, {"problem": 42, "code": "(fn fact [x] (if (= 0 x) 1 (* x (fact (dec x)))))", "user": "56e53d2fe4b02e7e935eb6bc"}, {"problem": 42, "code": "(fn [n]\n  (let [numbers (map inc (range n))]\n    (reduce * numbers)))", "user": "56e48302e4b03a7c14b85a4e"}, {"problem": 42, "code": "(fn [n]                                                                                                  \n  (loop [cnt n acc 1]                                                                                   \n    (if (zero? cnt)                                                                                     \n      acc                                                                                               \n      (recur (dec cnt) (* acc cnt)))))", "user": "528e7740e4b0239c8a67aee0"}, {"problem": 42, "code": "(fn [n]\n  (apply * (range 1 (inc n))))", "user": "56c427bbe4b05cc29241ee94"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "56e6ef89e4b02e7e935eb6d0"}, {"problem": 42, "code": "(fn fac [n]\n  (if (= n 0)\n    1\n    (* n (fac (dec n)))\n    )\n  )", "user": "56de0db0e4b0ea9b8538f83a"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "56dc39dee4b0ea9b8538f818"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (inc x))))", "user": "56cc34aee4b0ea9b8538f73c"}, {"problem": 42, "code": "(fn fact\n  [n]\n  (if (= n 1)\n    n\n    (* n (fact (- n 1)))))", "user": "56e8ef93e4b04a395b9a03f4"}, {"problem": 42, "code": "#(apply * (range 1 (+ % 1)))", "user": "568c92c6e4b0dcc4269f40b8"}, {"problem": 42, "code": "(fn [x]\n  (apply * (range 1 (inc x))))", "user": "56b965d9e4b0f26550335931"}, {"problem": 42, "code": "(fn [n]\n  (loop [x n, fact 1]\n    (if (= x 1)\n      fact\n      (recur (dec x) (* fact x)))))", "user": "56ca0da9e4b0ea9b8538f715"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (+ n 1))))", "user": "56e7ebcce4b02e7e935eb6e2"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "56e06625e4b0ca2494a09607"}, {"problem": 42, "code": "(fn my-fact\n  [n]\n  (apply * (range 1 (inc n))))", "user": "518b8561e4b0f028e99addef"}, {"problem": 42, "code": "#(reduce * (range 1 (inc%)))", "user": "56db90d4e4b0ea9b8538f80d"}, {"problem": 42, "code": "(fn [x]\n   (loop [x   x\n          acc 1]\n     (if (< x 1)\n       acc\n       (recur (dec x) (* acc x)))))", "user": "55fbc657e4b0f488688e0666"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "56eaad95e4b04a395b9a040f"}, {"problem": 42, "code": "#(loop [n %1, acc 1]\n   (if (= 1 n)\n     acc\n     (recur (dec n) (* acc n))))", "user": "56e02c1ce4b0ca2494a09602"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "52d38c51e4b099d49816f0c5"}, {"problem": 42, "code": "(fn [n]\n  (letfn [(fac [n]\n  (if (= n 0)\n    1\n    (* n (fac (- n 1)))\n    ))]\n    (fac n)\n    )\n  )", "user": "56eb16d8e4b04a395b9a041d"}, {"problem": 42, "code": "(fn fun-factorial [upto]\n  (apply * (range 1 (inc upto))))", "user": "4fb85651e4b081705acca2d7"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "56e6d049e4b02e7e935eb6cd"}, {"problem": 42, "code": "(comp (partial apply *) next range inc)", "user": "56ecc4b5e4b04a395b9a043e"}, {"problem": 42, "code": "(fn [N] (loop [fac 1, i 1] (if (> i N) fac (recur (* fac i) (inc i)))))", "user": "56ec0af1e4b04a395b9a0430"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (+ x 1))))", "user": "5258d2abe4b0cb4875a45cc1"}, {"problem": 42, "code": "(comp (partial apply *) (partial range 1) inc)", "user": "56dc483fe4b0ea9b8538f81b"}, {"problem": 42, "code": "(fn [n]\n  (loop [x n\n         r 1]\n    (if (= x 1)\n      r\n      (recur (- x 1) (* x r)))))", "user": "56ee0691e4b04a395b9a044c"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "56ebe773e4b04a395b9a042a"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "56e99ec8e4b04a395b9a03fb"}, {"problem": 42, "code": "(fn [x] (loop [res 1 val x]\n\t\t\t(if (= val 0)\n\t\t\t\tres\n\t\t\t\t(recur (* res val) (dec val)))))", "user": "56d439d4e4b0ea9b8538f7b6"}, {"problem": 42, "code": "#(apply * (take %1 (iterate inc 1)))", "user": "562268dce4b03f08ee9a9224"}, {"problem": 42, "code": "(fn [x]\n        (loop [n x f 1]\n          (if (= n 1)\n            f\n            (recur (dec n) (* f n)))))", "user": "56e811e1e4b02e7e935eb6e3"}, {"problem": 42, "code": "(fn f [n] (if (= n 0) 1 (* n (f (dec n)))))", "user": "56e31aaae4b03a7c14b85a3e"}, {"problem": 42, "code": "(fn [fact-by] (apply * (range 1 (inc fact-by))))", "user": "56ef11efe4b04a395b9a045b"}, {"problem": 42, "code": "#(loop [sum 1 top %]\n  (if (= 1 top)\n  \tsum\n    (recur (* sum top) (dec top) \n    )\n  ))", "user": "56cefadee4b0ea9b8538f763"}, {"problem": 42, "code": "{1 1 3 6 5 120 8 40320}", "user": "4de14aad535d08e6dec9fde5"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "56f102f9e4b04a395b9a0488"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "56e7ebb4e4b02e7e935eb6e1"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "56f258d3e4b04a395b9a04a1"}, {"problem": 42, "code": "(fn [n] (loop [c 1, acc 1] (if (= c n) (* c acc) (recur (inc c) (* c acc)))))", "user": "56cad309e4b0ea9b8538f720"}, {"problem": 42, "code": "(fn [b] (loop [c 1 p 1]\n            (if (= c b)\n              (* p b)\n              (recur\n               (inc c)\n               (* c p)\n               )\n              )\n            )\n  )", "user": "56d325ace4b0ea9b8538f7a9"}, {"problem": 42, "code": "#(apply *(take % (iterate dec %)))", "user": "56f188e9e4b04a395b9a0494"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "55101237e4b06e50f9beb181"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "56f4623ae4b046a417f9205d"}, {"problem": 42, "code": "(fn factorial [n]\n  (apply * (range 1 (+ n 1))))", "user": "56f53962e4b046a417f9206c"}, {"problem": 42, "code": "(fn [x]\n  (reduce * (range 1 (inc x))))", "user": "52c35afce4b07a9af579238c"}, {"problem": 42, "code": "(fn\n  [num]\n  (loop [in num out 1]\n    (if (< in 2) out\n      (recur (- in 1) (* out in)))))", "user": "52420e2fe4b076e5d3121f48"}, {"problem": 42, "code": "#((fn [a b] (if (= a 1)\n                 b\n                 (recur (- a 1) (* b a)))) % 1)", "user": "56d6c18ee4b0ea9b8538f7d1"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "56f15eade4b04a395b9a048e"}, {"problem": 42, "code": "(fn factorial[x]\n  (apply * (range 1 (inc x))))", "user": "539f9f79e4b0ca733b97449e"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5602bdf9e4b04bb52996e1a7"}, {"problem": 42, "code": "(fn fact [n]\n  (if (= n 1) 1\n    (* n (fact (dec n)))))", "user": "56dc3dbbe4b0ea9b8538f81a"}, {"problem": 42, "code": "#(apply * (take % (iterate dec %)))", "user": "56d15251e4b0ea9b8538f78c"}, {"problem": 42, "code": "(fn [n] (loop [x n\n               acc x]\n          (if (= x 1)\n            (* 1 acc)\n            (recur (- x 1) (* acc (- x 1))))))", "user": "56e4427ce4b03a7c14b85a4c"}, {"problem": 42, "code": "#(reduce * (range 1 (+ %1 1)))", "user": "54e7425ee4b024c67c0cf810"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "56e93576e4b04a395b9a03f6"}, {"problem": 42, "code": "(fn fac [n] (if (= n 1) n (* n (fac (dec n)))))", "user": "520e37cfe4b066f3ea161c96"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "56f7ecdfe4b08e7d20b96834"}, {"problem": 42, "code": "(fn\n  [n]\n  (loop [result 1\n         i n]\n    (if (= i 1)\n      result\n      (recur (* result i) (- i 1)))))", "user": "56f8055ee4b08e7d20b96835"}, {"problem": 42, "code": "(fn factorial [x]\n  (loop [cnt x prod 1]\n    (if (= cnt 0)\n      prod\n      (recur (dec cnt) (* cnt prod)))))", "user": "56f57481e4b046a417f92072"}, {"problem": 42, "code": "(fn fac [n] (if (= n 0) 1 (* n (fac (dec n)))))", "user": "56742817e4b05957ce8c612d"}, {"problem": 42, "code": "(fn f [arg]\n  (cond (= 0 arg) 1\n        :else (* arg (f (- arg 1)))))", "user": "539118b2e4b0b51d73faaea1"}, {"problem": 42, "code": "#(apply * (take % (iterate inc 1)))", "user": "56f9392ae4b07572ad1a88ac"}, {"problem": 42, "code": "#(reduce (fn [acc el] (* acc (inc el))) 1 (range %))", "user": "56fa3f7ae4b07572ad1a88bf"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "56ea8d33e4b04a395b9a040a"}, {"problem": 42, "code": "(fn f [n] \n  (if (<= n 1) \n    1\n    (* n (f (- n 1)))\n    )\n  )", "user": "561e8b11e4b064ca9f4b16c0"}, {"problem": 42, "code": "(fn a [n]\n  (if (= n 1) 1\n  \t(* n (a (dec n)))))", "user": "56fc1bc7e4b07572ad1a88dd"}, {"problem": 42, "code": "#(reduce * (reverse (take-while pos? (iterate dec %))))", "user": "56f9890be4b07572ad1a88b5"}, {"problem": 42, "code": "(fn fac                                                                                                                                     \n  ([n] (fac n 1 1))                                                                                                                           \n  ([n i acc]                                                                                                                                  \n   (if (< i n)                                                                                                                                \n     (fac n (inc i) (* acc i))                                                                                                                \n     (* acc i)                                                                                                                                \n     )                                                                                                                                        \n   )                                                                                                                                          \n  )", "user": "56fbe0cce4b07572ad1a88d8"}, {"problem": 42, "code": "(fn [n]\n  (loop [cnt n acc 1]\n    (if (zero? cnt)\n      acc\n      (recur (dec cnt) (* acc cnt)))))", "user": "56d3bc2de4b0ea9b8538f7b0"}, {"problem": 42, "code": "(fn fact[n]\n  (if (= 0 n)\n    1\n    (* n (fact (dec n)))))", "user": "56faebc2e4b07572ad1a88c8"}, {"problem": 42, "code": "#(apply * (range 1 (+ 1 %)))", "user": "56fdd9a1e4b08d47c97781a8"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "56df632ce4b0ca2494a095f2"}, {"problem": 42, "code": "#(apply * (range 1 (inc %1)))", "user": "56fde58ae4b08d47c97781aa"}, {"problem": 42, "code": "(fn factorial [n] \n  (if (= 1 n) 1\n    (* n (factorial (dec n)))))", "user": "56f4cedce4b046a417f92063"}, {"problem": 42, "code": "(fn [x]\n  (if (<= x 1)\n    1\n    ((fn [x, p] (if (= x 1) p (recur (dec x) (* x p)))) x 1)))", "user": "57006957e4b08d47c97781c8"}, {"problem": 42, "code": "#(reduce (fn [a b] (* a b)) (range 1 (inc %)))", "user": "5700f1f0e4b08d47c97781ce"}, {"problem": 42, "code": "(fn f [n]\n  (if (= n 1)\n    1\n    (* n (f (dec n)))))", "user": "57008afae4b08d47c97781ca"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "54a6645be4b09f271ff37c87"}, {"problem": 42, "code": "(fn fac \n  [n]\n  (if (= n 1)\n    1\n    (* n (fac (- n 1)))))", "user": "55ad2d97e4b03311e7b732a2"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "567e6d24e4b0feffd0d18eb4"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "57002b81e4b08d47c97781c7"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "57011eb3e4b08d47c97781d1"}, {"problem": 42, "code": "(fn [x] \n  (apply * (range 1 (inc x))))", "user": "5700ec08e4b08d47c97781cd"}, {"problem": 42, "code": "; Shamelessly stolen from Structure and Interpretation of\n; Computer Programs, with some tweaks for BigInt\n(fn fac-n [n]\n  ((fn [product counter max-count]\n     (if (> counter max-count)\n         product\n         (recur (apply *' [counter product])\n                (inc counter)\n                max-count)))\n   1 1 n))", "user": "56efc9fde4b04a395b9a0464"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "56fbf83de4b07572ad1a88da"}, {"problem": 42, "code": "#(apply * (range 1 (+ 1 %)))", "user": "569d095fe4b0542e1f8d1470"}, {"problem": 42, "code": "(fn [num] (reduce #(* %1 %2) 1 (range 1 (inc num))))", "user": "56fbcc1fe4b07572ad1a88d5"}, {"problem": 42, "code": "#(reduce * (take % (iterate dec %)))", "user": "5703cbbee4b08d47c97781fb"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "5703cd50e4b08d47c97781fc"}, {"problem": 42, "code": "(fn factorial\n  ([] 1)\n  ([n] (if (= n 0) 1 (* n (factorial (dec n)))))\n  )", "user": "56f73913e4b08e7d20b9682d"}, {"problem": 42, "code": "(fn [n] (apply * (range 1 (inc n))))", "user": "570459a9e4b0b0fb43fd0662"}, {"problem": 42, "code": "(fn [n]\n  (reduce #(* %1 %2) 1 (range 1 (inc n))))", "user": "57035ccfe4b08d47c97781ef"}, {"problem": 42, "code": "(fn factorial [x]\n  (reduce * (range 1 (inc x))))", "user": "5703d21ae4b08d47c97781ff"}, {"problem": 42, "code": "(fn f [n]\n  (if (pos? n)\n    (* n (f (- n 1)))\n    1))", "user": "56eb3f9de4b04a395b9a0420"}, {"problem": 42, "code": "(fn fact [a]\n  (if (<= a 1) 1\n    (* a (fact (- a 1)))))", "user": "5587d91ae4b059ccff29b1e9"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "56f85849e4b08e7d20b96836"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "542fa0dde4b0dad94371f2d2"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "56efb3a3e4b04a395b9a0463"}, {"problem": 42, "code": "(fn fac [x]\n  (if (= x 1)\n    1\n    (* x (fac (dec x)))))", "user": "57027310e4b08d47c97781e2"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)) )", "user": "56ede653e4b04a395b9a0449"}, {"problem": 42, "code": "#(loop [acc 1 n %] (if (zero? n) acc (recur (* acc n) (dec n))))", "user": "5292feb4e4b0239c8a67af39"}, {"problem": 42, "code": "(fn factorial\n  ([n]\n    (factorial n 1))\n  ([n acc]\n    (if (< n 2)\n      acc\n      (recur (dec n) (* n acc)))))", "user": "56e4991fe4b03a7c14b85a4f"}, {"problem": 42, "code": "#(reduce * (take %1 (iterate dec %1)))", "user": "570306cae4b08d47c97781ec"}, {"problem": 42, "code": "(fn [n]\n  (apply * (#(take % (iterate dec %)) n)))", "user": "5707abfce4b0b0fb43fd068d"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "57090dffe4b0b0fb43fd06a6"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "57015a1de4b08d47c97781d4"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "56ff0ef3e4b08d47c97781ba"}, {"problem": 42, "code": "#(apply * (rest (range (inc %))))", "user": "56c7d8dee4b0ed865f9758c9"}, {"problem": 42, "code": "(fn [x] (reduce * (drop 1 (range (+ x 1)))))", "user": "545e5805e4b01be26fd74679"}, {"problem": 42, "code": "(fn [x] (reduce #(* %1 %2) (map inc (range x))))", "user": "56ab7578e4b03c432f18733d"}, {"problem": 42, "code": "(fn fac[n] (if (> n 1)\n  (* n (fac (dec n)))\n  1\n  )\n)", "user": "56ff7ffee4b08d47c97781be"}, {"problem": 42, "code": "(fn fact [n]\n  (if (= n 1)\n   1\n  (* n (fact(dec n)))))", "user": "5703ce0fe4b08d47c97781fd"}, {"problem": 42, "code": "#(reduce * (range % 0 -1))", "user": "536d24ece4b0fc7073fd6e54"}, {"problem": 42, "code": "(fn [x]\n  (loop [cnt x acc 1]\n    (if (zero? cnt)\n      acc\n      (recur (dec cnt) (* acc cnt)))))", "user": "55ba70f9e4b01b9910ae29d4"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5708b96ce4b0b0fb43fd06a3"}, {"problem": 42, "code": "(fn [x]\n  (loop [a 1\n         p x]\n    (if (= p 1)\n      a\n      (recur (* a p) (- p 1)))))", "user": "570a2357e4b0b0fb43fd06b5"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "56acfee5e4b03c432f18734f"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "56eb5c76e4b04a395b9a0422"}, {"problem": 42, "code": "(fn fact [n]\n  (if (= 0 n)\n    1\n    (* n (fact (dec n)))))", "user": "57061d20e4b0b0fb43fd0679"}, {"problem": 42, "code": "(fn fac [x]\n  (loop [cur x\n         tail 1]\n    (if (<= cur 1)\n      tail\n      (recur (dec cur) (* cur tail)))))", "user": "56fc0601e4b07572ad1a88db"}, {"problem": 42, "code": "(fn\n  [n]\n  (loop [multiplier n acc 1]\n    (if (zero? multiplier)\n      acc\n      (recur (dec multiplier) (* acc multiplier)))))", "user": "56cb4d06e4b0ea9b8538f72e"}, {"problem": 42, "code": "#(reduce * (map inc (range %)))", "user": "56fee4c0e4b08d47c97781b5"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "56fe665be4b08d47c97781af"}, {"problem": 42, "code": "(fn q42 [n]\n  (apply * (range 1 (inc n))\n         ))", "user": "54f5aa4ce4b0f2f3c5226e94"}, {"problem": 42, "code": "(fn factorial [n]\n  (if (= 1 n)\n    (identity n)\n    (* n (factorial (dec n)))))", "user": "555d4421e4b0a2eb076a39a8"}, {"problem": 42, "code": "#(apply * (map inc (range %)))", "user": "57126104e4b09c608db70458"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %1)) )", "user": "56f18d0ce4b04a395b9a0496"}, {"problem": 42, "code": "#(loop [n %\n        fact 1]\n   (if (= 1 n)\n     fact\n     (recur (dec n) (* fact n))))", "user": "5712854ce4b07c98581c3a89"}, {"problem": 42, "code": "(fn [p]\n  (loop [n p r p]\n    (if (= n 1) r\n        (recur (dec n) (* r (dec n))))))", "user": "571077e8e4b09c608db70434"}, {"problem": 42, "code": "(fn a [b]\n\t(last ((fn c [d,e,f]\n\t\t(if (<= d b)\n\t\t\t(into [] \n\t\t\t\t(cons e\n\t\t\t\t\t(c \n\t\t\t\t\t\t(+ d 1)\n\t\t\t\t\t\t(* e f)\n\t\t\t\t\t\t(+ f 1)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)  \n\t\t\t[]\n\t\t)\n\t) 1 1 2))\n)", "user": "5710e574e4b09c608db7043b"}, {"problem": 42, "code": "#(->> (range %) (map inc) (reduce *))", "user": "5711b532e4b09c608db70449"}, {"problem": 42, "code": "#(reduce (fn[a x] (* a (inc x))) 1 (range %))", "user": "4fc4e9b5e4b081705acca352"}, {"problem": 42, "code": "#(reduce * (range % 0 -1))", "user": "56b506d5e4b0982f16b37e2d"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5707c364e4b0b0fb43fd0691"}, {"problem": 42, "code": "#(loop [n %\n        cur 1]\n   (if (= n 1) \n     cur\n     (recur (- n 1) (* n cur))))", "user": "56c89c2ce4b0ed865f9758d4"}, {"problem": 42, "code": "#(reduce * (for [x (range 1 (+ % 1))] x))", "user": "5710c24be4b09c608db70439"}, {"problem": 42, "code": "#(reduce * \n   (range 1 (+ % 1)))", "user": "570577bbe4b0b0fb43fd0672"}, {"problem": 42, "code": "#(apply * (reverse (range 1 (+ 1 %))))", "user": "57155980e4b07c98581c3ad7"}, {"problem": 42, "code": "#(reduce * (map inc (range %)))", "user": "57168db0e4b07c98581c3afc"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5717e367e4b07c98581c3b1d"}, {"problem": 42, "code": "#(reduce * (rest (range (+ % 1))))", "user": "56e6e1e6e4b02e7e935eb6cf"}, {"problem": 42, "code": ";#(reduce * (rest (range (inc %))))\n\n;#(->> % inc range rest (reduce *))\n\n;#(->> % inc (range 1) (reduce *))\n\n#(reduce * (range 1 (inc %)))", "user": "56fa2905e4b07572ad1a88be"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "5716845be4b07c98581c3afa"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "570d8418e4b0b0fb43fd06de"}, {"problem": 42, "code": "(fn factorial\n  [n]\n  (loop [n n limit 1 fact 1]\n    (if (= limit n)\n        (* fact limit)\n        (recur n (+ limit 1) (* fact limit)))))", "user": "56fe2a2fe4b08d47c97781ad"}, {"problem": 42, "code": "(fn fact\n  [n]\n  (loop [n n acc 1]\n    (if (> n 1)\n      (recur (dec n) (* n acc))\n      acc\n     )\n   )\n  )", "user": "56edf2dde4b04a395b9a044b"}, {"problem": 42, "code": "(fn [n] ( reduce * ( range 1 (inc n))))", "user": "57016724e4b08d47c97781d6"}, {"problem": 42, "code": "(fn fact [n] (if (= n 0) 1 (* n (fact (dec n)))))", "user": "5717ad6fe4b07c98581c3b14"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "user": "570794d8e4b0b0fb43fd068b"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "570362ece4b08d47c97781f0"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "571c2babe4b07c98581c3b73"}, {"problem": 42, "code": "(fn [n] (reduce #(* %1 %2) (range 1 (inc n))))", "user": "5716d585e4b07c98581c3b03"}, {"problem": 42, "code": "(fn [n]\n  (loop [acc 1\n         n n]\n    (if (= n 1)\n      acc\n      (recur (* acc n) (dec n)))))", "user": "55f90d76e4b03cbcff9738bd"}, {"problem": 42, "code": "(fn [n] \n  (reduce * (range 1 (inc n))))", "user": "5713c575e4b07c98581c3aab"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "571d063ee4b0145328a76272"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5713f693e4b07c98581c3ab0"}, {"problem": 42, "code": "(fn [x]\n  (apply * (range 1 (inc x)))\n)", "user": "5717d674e4b07c98581c3b1a"}, {"problem": 42, "code": "{1 1 3 6 5 120 8 40320}", "user": "5714e82ae4b07c98581c3ac9"}, {"problem": 42, "code": "(fn [n] \n  (reduce * (map inc (range n))))", "user": "5719465fe4b07c98581c3b36"}, {"problem": 42, "code": "#(apply * (take % (iterate inc 1)))", "user": "571dd145e4b0145328a76283"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "571e5c9ee4b0145328a76290"}, {"problem": 42, "code": "#(reduce * (rest (range (inc %1))))", "user": "571ac0b8e4b07c98581c3b5b"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "571cd9dce4b0145328a76271"}, {"problem": 42, "code": "#(reduce * (range 1 (+ %1 1)))", "user": "571aad45e4b07c98581c3b59"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "571bc0a1e4b07c98581c3b6c"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "56df63e1e4b0ca2494a095f6"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "56df6351e4b0ca2494a095f3"}, {"problem": 42, "code": "(fn\n  [n]\n  (reduce * (range 1 (+ n 1))))", "user": "56df6498e4b0ca2494a095f8"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "56df63c7e4b0ca2494a095f5"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "571e6d73e4b0145328a76292"}, {"problem": 42, "code": "(fn fac [x]\n    (if (= x 1)\n        1\n        (* x (fac (dec x)))\n    )\n)", "user": "5702c8eae4b08d47c97781e6"}, {"problem": 42, "code": "(fn\n  [n]\n  (reduce * (take n (iterate inc 1))))", "user": "56df6417e4b0ca2494a095f7"}, {"problem": 42, "code": "(fn fib [a] (if (< a 2) 1 (* a (fib (- a 1)))))", "user": "56f070fee4b04a395b9a0478"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "56df629fe4b0ca2494a095ee"}, {"problem": 42, "code": "(fn [n]\n  (loop [n n\n        acc 1]\n    (if (<= n 0)\n      acc\n      (recur (dec n) (* n acc)))))", "user": "5720a2b0e4b0c5bde472c099"}, {"problem": 42, "code": "(fn fact [n]\n  (cond (<= n 1) 1\n        :else (* n (fact (- n 1)))))", "user": "5716540fe4b07c98581c3af3"}, {"problem": 42, "code": "(fn [n]\n    (if (> 1 n)\n      1\n      (reduce * (range 1 (inc n)))))", "user": "56e9a56ae4b04a395b9a03fc"}, {"problem": 42, "code": "(fn fact\n  [x]\n  (if (< x 2)\n    1\n    (* (fact (dec x)) x)\n    )\n  )", "user": "56de78fde4b0ea9b8538f83c"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "4df73d64535d04ed9115e775"}, {"problem": 42, "code": "#(reduce * (rest(range (inc %))))", "user": "571e819ae4b0145328a76294"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "4ff0e01fe4b0678c553fc328"}, {"problem": 42, "code": "(fn\n  [n]\n  (reduce * (take n (range 1 (inc n)))))", "user": "56df636ae4b0ca2494a095f4"}, {"problem": 42, "code": "(fn f [x]\n    (cond\n  (= x 0) 1\n  (= x 1) 1\n  ( > x 1) (* x (f(dec x))) ))", "user": "57210e8ee4b0c5bde472c0a8"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (+ 1 x))))", "user": "52afa8a1e4b0c58976d9acbe"}, {"problem": 42, "code": "(fn [n]\n  (apply * (range n 1 -1)))", "user": "516c3472e4b06f078fab251c"}, {"problem": 42, "code": "(fn factorial [n]\n  (loop [n n\n         acc 1]\n    (if (zero? n)\n      acc\n      (recur (dec n) (* acc n))\n      )))", "user": "551bdefde4b07993ea3788d7"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "57201f14e4b0c5bde472c08e"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (inc x))))", "user": "57211a02e4b0c5bde472c0a9"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (+ 1 n))))", "user": "5727cf87e4b0c5bde472c147"}, {"problem": 42, "code": "(fn [x] (apply * (#(range 1 (+ % 1)) x)))", "user": "5715b929e4b07c98581c3ae2"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %1)))", "user": "56c2c342e4b05cc29241ee85"}, {"problem": 42, "code": "(fn factorial [n]\n  (reduce * (range 1 (inc n))))", "user": "56df62b3e4b0ca2494a095ef"}, {"problem": 42, "code": "(fn [x] (reduce * (take x (iterate dec x))))", "user": "57283dbce4b0c5bde472c154"}, {"problem": 42, "code": "#(loop [el % ret 1]\n   (if (> el 1)\n     (recur (- el 1) (* el ret))\n     ret\n   )\n)", "user": "5726adf8e4b0c5bde472c12b"}, {"problem": 42, "code": "(partial\n (fn [product N]\n  (if (pos? N)\n    (recur (* N product) (dec N))\n     product)) 1)", "user": "572722c4e4b0c5bde472c134"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (range 1 (+ n 1))))", "user": "571ff1ebe4b0c5bde472c088"}, {"problem": 42, "code": "(fn [n] (apply * (take n (range 1 (inc n)))))", "user": "5728d33ce4b0c6e51e0d2b12"}, {"problem": 42, "code": "#(reduce * (take % (iterate inc 1)))", "user": "5724a4dae4b0c5bde472c0fe"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "572af688e4b0f4d77e651249"}, {"problem": 42, "code": "(fn fact\n  [x]\n  (if (= x 1) 1 (* x (fact (dec x)))))", "user": "572a7adde4b0f4d77e651239"}, {"problem": 42, "code": "(fn fact\n  [n]\n  (reduce * (range 1 (+ n 1))))", "user": "5723e6d6e4b0c5bde472c0f1"}, {"problem": 42, "code": "(fn \n  [n] \n  (reduce * (range 1 (inc n))))", "user": "56df7440e4b0ca2494a095fb"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (inc x))))", "user": "57213df6e4b0c5bde472c0ab"}, {"problem": 42, "code": "(fn [x] (reduce #(* %1 %2) (range 1 (+ x 1))))", "user": "57289d7ee4b0c5bde472c15d"}, {"problem": 42, "code": "(fn factorial\n  [n]\n  (reduce * (range 1 (inc n))))", "user": "572db6d5e4b0cd1946bd0f78"}, {"problem": 42, "code": "(fn [arg] (reduce #(* %1 %2) 1 (range 1 (inc arg))))", "user": "570ab24fe4b0b0fb43fd06b7"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "54249bcce4b01498b1a71afb"}, {"problem": 42, "code": "(fn factorial [x]\n  (loop [x x acc 1]\n    (if (= 1 x)\n      acc\n      (recur (dec x) (* x acc))\n      )\n    )\n  )", "user": "57131dfbe4b07c98581c3a98"}, {"problem": 42, "code": "#(->> % (range) (map inc) (reduce *))", "user": "55c9ff22e4b0e31453f649f3"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "54b0519be4b09f271ff37d14"}, {"problem": 42, "code": "#(loop [a % b 1 result 1]\n   (if (= (dec b) a)\n     result\n     (recur a (inc b) (* result b))))", "user": "57147cd9e4b07c98581c3abf"}, {"problem": 42, "code": "#(loop [acc 1 n %]\n   (if (= n 1)\n     acc\n     (recur (* acc n) (dec n))))", "user": "5720fc08e4b0c5bde472c0a3"}, {"problem": 42, "code": "(fn fact [x] (if (zero? x) 1 (* x (fact (dec x)))))", "user": "572a3d77e4b0f4d77e651230"}, {"problem": 42, "code": "(fn fact [x]\n  (if (= x 1)\n    1\n  \t(* x (fact (- x 1)))))", "user": "53829b28e4b06839e8705ed6"}, {"problem": 42, "code": "(fn [x]\n  (apply * (range 1 (inc x))))", "user": "5703cb87e4b08d47c97781f9"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5720ba36e4b0c5bde472c09c"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "568384b4e4b0945ebc182a9a"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "536c99c5e4b0fc7073fd6e46"}, {"problem": 42, "code": "(fn [n]\n  (letfn [(fac [n x total] (if (= n x) (* n total) (recur n (inc x) (* total x))))]\n    (fac n 1 1)))", "user": "4eb47bb1535d7eef30807362"}, {"problem": 42, "code": "#(reduce * (take % (map inc (range))))", "user": "51a88e7fe4b08d8ec191b813"}, {"problem": 42, "code": "#(reduce * 1 (->> % inc range rest))", "user": "5733e4aee4b0cd1946bd0ffe"}, {"problem": 42, "code": "(fn [n]\n         (loop [a 1\n                n n]\n           (if (< n 1)\n             a\n             (recur (* a n) (dec n) ))))", "user": "4dcc024e535d5973398f928f"}, {"problem": 42, "code": "(fn [n] (apply * (take n (iterate inc 1))))", "user": "572ca54ae4b0cd1946bd0f59"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "573632b7e4b0cd1946bd102f"}, {"problem": 42, "code": "(fn [n]\n    (loop [fact 1 i 1]\n      (if (<= i n)\n        (recur (* fact i) (inc i))\n        fact\n        )\n      )\n    )", "user": "571a282ae4b07c98581c3b46"}, {"problem": 42, "code": "(fn fact [n]\n  (loop [n n acc 1] (if (= n 1) acc (recur (dec n) (* acc n)))))", "user": "572ea970e4b0cd1946bd0f89"}, {"problem": 42, "code": ";; #42\n(fn [f]\n  (loop [n 1\n         curr 1]\n    (if (> n f)\n      curr\n      (recur (inc n) (* curr n)))))", "user": "55f5b8d6e4b06e875b46ce8d"}, {"problem": 42, "code": "(fn [x] (#(reduce * 1 %) (take x (iterate inc 1))))", "user": "570eeb66e4b0b0fb43fd06fa"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "573107d5e4b0cd1946bd0fbc"}, {"problem": 42, "code": "(fn fc [n] (loop [i 1  sq [1]]\n            (if (<= i n)\n              (recur (inc i)\n                     (conj sq (* i (last sq))))\n              (last sq))))", "user": "561814bae4b06b1bb2182a1a"}, {"problem": 42, "code": "(fn [factorial]\n  (reduce * (reverse (map inc (range factorial)))))", "user": "57344edbe4b0cd1946bd1008"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "572ac718e4b0f4d77e651242"}, {"problem": 42, "code": "(fn f [x] \n  (if (= x 0) \n    1 \n    (* x (f (dec x)))\n    )\n  )", "user": "56e30cefe4b03a7c14b85a3d"}, {"problem": 42, "code": "(fn my-fun [in-seq] (reduce #(* %1 %2) 1 (range 1 (inc in-seq))))", "user": "571d9669e4b0145328a7627f"}, {"problem": 42, "code": "(fn fac [n] (if (> n 2)  (* n (fac (dec n))) n ))", "user": "5735ac67e4b0cd1946bd102b"}, {"problem": 42, "code": "#(loop [fac-size %\n        output 1]\n   (if (= fac-size 0)\n     output\n     (recur (dec fac-size) (* output fac-size))\n     )\n   )", "user": "5739fa01e4b0cd1946bd1082"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "56ff45e5e4b08d47c97781bb"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5707e579e4b0b0fb43fd0694"}, {"problem": 42, "code": "#(->> (range) \n      (drop 1)\n      (take %)\n      (reduce *))", "user": "57299c57e4b0c6e51e0d2b1e"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5739cbe4e4b0cd1946bd107c"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "573652e1e4b0cd1946bd1030"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "571172ece4b09c608db70446"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "573ce277e4b05c31a32c080b"}, {"problem": 42, "code": "#(loop [x 1 y %] (if (= y 0) x (recur (* x y) (dec y))))", "user": "55c3f19de4b0e31453f64991"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "572a60cee4b0f4d77e651237"}, {"problem": 42, "code": "#(reduce * (reverse (range 1 (+ % 1))))", "user": "573b8f67e4b0cd1946bd10ae"}, {"problem": 42, "code": "(fn factorial [n]\n  (if (<= n 1)\n    1\n    (* n (factorial (dec n)) )\n  )\n)", "user": "571aae1fe4b07c98581c3b5a"}, {"problem": 42, "code": "(fn [x] (* (reduce * (range 1 x)) x))", "user": "573b664ce4b0cd1946bd10a7"}, {"problem": 42, "code": "#(apply * (range 1 (+ 1 %1)))", "user": "57280b92e4b0c5bde472c14e"}, {"problem": 42, "code": "(fn [x]\n  (reduce * (range 1 (inc x))))", "user": "572a856be4b0f4d77e65123b"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "57300c19e4b0cd1946bd0fa1"}, {"problem": 42, "code": "(fn [x] (reduce * (take x (iterate dec x))))", "user": "573940e3e4b0cd1946bd106b"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "573f63bfe4b05c31a32c0842"}, {"problem": 42, "code": "(fn fact [n] (if (<= n 1) 1 (* n (fact (- n 1)))))", "user": "573c813be4b0cd1946bd10c5"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5684c439e4b04eec3ec5cfc1"}, {"problem": 42, "code": ";(comp (partial reduce *) (partial map inc) range)\n(comp (partial reduce *) (partial range 1) inc)", "user": "57407ab3e4b05c31a32c0854"}, {"problem": 42, "code": "(fn factorial [c]\n  (reduce * (range 1 (inc c))))", "user": "573f3ccfe4b05c31a32c083f"}, {"problem": 42, "code": "(fn fact [x]\n  (if (< x 2)\n    1\n    (* x (fact (dec x)))))", "user": "57458b82e4b009280f9f2b4e"}, {"problem": 42, "code": "(fn fact\n  [x]\n  (if (<= x 1)\n    1\n    (* x (fact (- x 1)))))", "user": "57434103e4b0c285004e8a9e"}, {"problem": 42, "code": "(fn [x] (reduce *(range 1 (+ x 1))))", "user": "563431c1e4b0bfe05bf117bb"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "573ddfc2e4b05c31a32c081b"}, {"problem": 42, "code": "#(->> (range 1 (inc %))\n      (reduce *))", "user": "56a9d4bbe4b07966d5a8a07b"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5746d767e4b009280f9f2b6b"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "57440f77e4b0c285004e8ab5"}, {"problem": 42, "code": "(fn fct [n]\n     (if (> n 1)\n         (* n (fct (dec n)))\n         1))", "user": "553900d4e4b09218d5f44fe5"}, {"problem": 42, "code": "(fn fac [n]\n  (if (= n 1) 1\n    (* n (fac (dec n)))))", "user": "51647faae4b003cf19fdde3b"}, {"problem": 42, "code": "(fn [i] \n  (reduce * \n     (rest (range (inc i)))\n   )\n)", "user": "5744723ae4b009280f9f2b3a"}, {"problem": 42, "code": "(fn factorial [n]\n  (loop [res  1\n         n    n]\n    (if (= 0 n)\n      res\n      (recur (* n res) (dec n)))))", "user": "56a94562e4b07966d5a8a074"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "574977cbe4b009280f9f2b9b"}, {"problem": 42, "code": "#(reduce (fn [sum i] (* sum i)) (range 1 (inc %)))", "user": "56c6a3c3e4b05cc29241eeb3"}, {"problem": 42, "code": "(fn f [x] (if (= x 0) 1 (* x (f (- x 1)))))", "user": "574a9132e4b02ea1147991fd"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "553e3260e4b0a04f792994eb"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "574c3a7ce4b02ea114799219"}, {"problem": 42, "code": "(fn [n]\n  (loop\n    [result 1 n n]\n    (if (= 1 n)\n      result\n    (recur (* result n) (dec n)))))", "user": "57465526e4b009280f9f2b61"}, {"problem": 42, "code": "(fn [n]\n  (loop [cnt n acc 1]\n    (if (zero? cnt)\n      acc\n      (recur (dec cnt) (* acc cnt)))))", "user": "574af03ce4b02ea114799202"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "573d58c8e4b05c31a32c0811"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "56bb652ae4b0f26550335953"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "56f006f4e4b04a395b9a046a"}, {"problem": 42, "code": "(fn fact \n  ([n] (fact n 1))\n  ([n acc] (if (< n 2) acc (recur (dec n) (* n acc)))))", "user": "5712a404e4b07c98581c3a8d"}, {"problem": 42, "code": "#(apply * (map inc (reverse (range %))))", "user": "574986cae4b009280f9f2b9c"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "57408f87e4b05c31a32c0856"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "574dfcb8e4b02ea11479923a"}, {"problem": 42, "code": "#(reduce * (take % (iterate inc 1)))", "user": "57434339e4b0c285004e8a9f"}, {"problem": 42, "code": "(fn [n]\n  (loop [n n\n         acc 1]\n    (if (zero? n)\n      acc\n      (recur (dec n) (* n acc)))))", "user": "52c03baee4b07a9af5792347"}, {"problem": 42, "code": "(fn fct\n  ([x] (fct x 1))\n  ([x accum] (if (= 1 x) accum (recur (dec x) (* x accum)))))", "user": "5747e22ce4b009280f9f2b7c"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "574cd554e4b02ea114799224"}, {"problem": 42, "code": "(fn [n]\n  (loop [cnt n acc 1]\n     (if (zero? cnt)\n          acc\n        (recur (dec cnt) (* acc cnt))\n)))", "user": "574f5496e4b02ea11479925c"}, {"problem": 42, "code": "(fn factorial [x] \n   (if (<= x 1)\n     1\n     (* x (factorial (dec x)))))", "user": "574f1c24e4b02ea114799255"}, {"problem": 42, "code": "#(reduce * % (range 1 %))", "user": "574e7be7e4b02ea114799242"}, {"problem": 42, "code": "(fn f [n]\n  (if (< 0 n)\n    (* n (f (- n 1)))\n    1))", "user": "52e1c276e4b09f7907dd142b"}, {"problem": 42, "code": "(fn [n]\n  (->> n\n   (inc)\n   (range 1)\n   (reduce *)))", "user": "56d2a103e4b0ea9b8538f7a3"}, {"problem": 42, "code": "(fn factorial [n] \n  (reduce * (range 1 (inc n))))", "user": "5740e26ee4b05c31a32c085a"}, {"problem": 42, "code": "(fn [x]\n  (reduce * (range 1 (+ x 1))))", "user": "5705e404e4b0b0fb43fd0676"}, {"problem": 42, "code": "(fn [x] \n   (reduce *\n    (map inc\n     (range x)\n       )\n      ) \n    )", "user": "573407f0e4b0cd1946bd1001"}, {"problem": 42, "code": "#(apply * (range 1 (+ % 1)))", "user": "57275898e4b0c5bde472c13e"}, {"problem": 42, "code": "#(reduce *' (range 2 (+ % 1)))", "user": "57533bc1e4b02ea1147992a6"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "57297fb2e4b0c6e51e0d2b1c"}, {"problem": 42, "code": "(fn fact [n] (loop [x n, result 1] (if (= x 1) result (recur (dec x) (* result x)))))", "user": "572ec4dde4b0cd1946bd0f8d"}, {"problem": 42, "code": "(fn [v] (reduce * (range 1 (inc v))))", "user": "5744d088e4b009280f9f2b41"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "513f1f18e4b051389b345b3d"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "54f1e004e4b024c67c0cf8b9"}, {"problem": 42, "code": "(fn fact [n]\n  (if (= n 1) \n    1\n    (* n (fact (dec n)))))", "user": "57487084e4b009280f9f2b8c"}, {"problem": 42, "code": "#(apply * (range 1 (+ 1 %)))", "user": "57552f39e4b02ea1147992c1"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "57539e04e4b02ea1147992ab"}, {"problem": 42, "code": "#(apply * (range 1 (+ 1 %)))", "user": "57488966e4b009280f9f2b8d"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "575086e7e4b02ea114799276"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "563c6ebae4b0bfe05bf11834"}, {"problem": 42, "code": "(fn [n] (reduce #(* %1 %2) 1 (range 1 (+ n 1))))", "user": "574c5e18e4b02ea11479921b"}, {"problem": 42, "code": "(fn factorial [n]\n    (reduce * (map inc (range n))))", "user": "5753d779e4b02ea1147992b1"}, {"problem": 42, "code": "#(loop [i %, a 1] (if (<= i 1) a (recur (dec i) (* i a))))", "user": "56cd75bee4b0ea9b8538f74b"}, {"problem": 42, "code": "#(apply * (range 1 (+ % 1)))", "user": "5742ec91e4b05c31a32c0883"}, {"problem": 42, "code": "#(loop [n %1 f 1] (if (= n 1) f (recur (dec n) (*' f n))))", "user": "5751aeabe4b02ea11479928a"}, {"problem": 42, "code": "(fn [e] (loop [end e\n               ind 0 \n               product 1]\n          (if (= ind end)\n            product\n            (recur e (+ 1 ind) (* product (+ 1 ind))))))", "user": "5753b6c6e4b02ea1147992af"}, {"problem": 42, "code": "(fn fact [x]\n  (if (<= x 0)\n    1\n    (* x (fact (dec x)))))", "user": "574ef99ae4b02ea114799250"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (inc x))))", "user": "5746cb28e4b009280f9f2b68"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5756f7d7e4b02ea1147992e9"}, {"problem": 42, "code": "#(reduce * (take % (iterate inc 1)))", "user": "574ed2f7e4b02ea11479924a"}, {"problem": 42, "code": "(fn f [n]\n    (cond (> n 2)\n          (* n (f (dec n)))\n   :else n\n    )\n  )", "user": "5743e316e4b0c285004e8ab3"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "user": "570bd29be4b0b0fb43fd06c5"}, {"problem": 42, "code": ";; first solution\n;(fn f [n]\n;  (if (= 1 n)\n;     1\n;    (* n (f (dec n)))))\n\n#(apply * (range 1 (inc %)))", "user": "573118ebe4b0cd1946bd0fbd"}, {"problem": 42, "code": "(fn f[x] (if (= x 1)\n         x\n         (* x (f(dec x)))\n         ))", "user": "54283a7ae4b01498b1a71b2f"}, {"problem": 42, "code": "#(apply * (take % (iterate inc 1)))\n\n;#(apply * (range 1 (inc %)))", "user": "572830e6e4b0c5bde472c152"}, {"problem": 42, "code": "(fn [n]\n    (loop [cnt n acc 1]\n       (if (zero? cnt)\n            acc\n          (recur (dec cnt) (* acc cnt)))))", "user": "57303ba6e4b0cd1946bd0fa5"}, {"problem": 42, "code": "#(apply * (rest (range (inc %))))", "user": "5757ba87e4b02ea1147992f9"}, {"problem": 42, "code": "( fn fact\n  [ x ]\n  ( if ( = x 0 ) 1\n    ( * x ( fact ( dec x ) ) )\n  )\n)", "user": "57561529e4b02ea1147992d3"}, {"problem": 42, "code": "#(reduce * (take % (iterate inc 1)))", "user": "5751f2a2e4b02ea114799292"}, {"problem": 42, "code": "(fn [q] (reduce (fn [a b](* a b)) (take q (iterate dec q))))", "user": "571edeeae4b0145328a7629b"}, {"problem": 42, "code": "(fn [x] (apply * (range 1 (inc x))))", "user": "5745bb9fe4b009280f9f2b54"}, {"problem": 42, "code": "(comp (partial reduce *) #(range 1 (inc %)))", "user": "56b97792e4b0f26550335932"}, {"problem": 42, "code": "(fn fac [n] (if (= n 0)\n              1\n              (* n (fac (dec n)))))", "user": "5759cd46e4b02ea11479932e"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "575cbe44e4b02ea114799374"}, {"problem": 42, "code": "#(apply * (next (range (inc %))))", "user": "574abbfbe4b02ea114799200"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "52dda39fe4b09f7907dd13e7"}, {"problem": 42, "code": "(fn [n] (reduce * (take n (iterate inc 1))))", "user": "57462a4de4b009280f9f2b5d"}, {"problem": 42, "code": "#(loop [f % m 1] (if (= 1 f)\n              m\n              (recur (dec f) (* m f))))", "user": "575d5831e4b02ea114799381"}, {"problem": 42, "code": "(fn [num] \n  (reduce * (range 1 (+ 1 num))))", "user": "55096255e4b06e50f9beb116"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5739c2fee4b0cd1946bd107a"}, {"problem": 42, "code": "(fn factorial [n]\n   (if (= n 1)\n     1\n     (* n (factorial (dec n)))))", "user": "57501de0e4b02ea11479926c"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "575bd5f9e4b02ea114799365"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "57501c83e4b02ea11479926b"}, {"problem": 42, "code": "(fn fact[x]\n  (if (= 0 x)\n    1\n    (* x (fact(dec x)))))", "user": "5731e36be4b0cd1946bd0fc9"}, {"problem": 42, "code": "(fn [n]\n  (loop [current n\n         acc 1]\n    (if (> current 1)\n      (recur (dec current) (* acc current))\n      acc)))", "user": "4ea00469535d7eef3080729d"}, {"problem": 42, "code": "(fn  [n]\n  (loop [x 1, acc 1]\n    (if \n        (= x (+ n 1)) acc\n        (recur (+ x 1) (* acc x)))))", "user": "5756efc3e4b02ea1147992e6"}, {"problem": 42, "code": "#(->>\n  (range 1 (inc %))\n  (reduce *)\n  )", "user": "575ef4b6e4b08062f99a4e78"}, {"problem": 42, "code": "(fn f [x]\n  (if (= x 0)\n    1\n    (* x (f (- x 1)))))", "user": "575fbe58e4b08062f99a4e87"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %1)))", "user": "574a546ee4b02ea1147991f6"}, {"problem": 42, "code": "(fn foo [x] (if (= x 1) 1 (* x (foo (dec x)))))", "user": "5760715de4b08062f99a4e96"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "57609d91e4b08062f99a4e9b"}, {"problem": 42, "code": "(fn fact [x] (if (= x 1) 1 (* x (fact (dec x)))))", "user": "575ab695e4b02ea114799350"}, {"problem": 42, "code": "(fn [n] (reduce * (rest (range (+ n 1)))))", "user": "576186a5e4b0994c1922fb8e"}, {"problem": 42, "code": "(fn [x]\n  (apply *(range 1 (inc x))))", "user": "57607706e4b08062f99a4e97"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "574e8975e4b02ea114799244"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "575dda55e4b02ea11479938c"}, {"problem": 42, "code": "(fn factorial [n]\n  (if (= n 1) 1 (* n (factorial (dec n)))))", "user": "57606cfde4b08062f99a4e95"}, {"problem": 42, "code": "(fn [x]\n  (reduce * (drop 1 (range (+ x 1)))))", "user": "56c21eafe4b05cc29241ee7e"}, {"problem": 42, "code": "#(reduce *  (range 1 (+ 1 %)))", "user": "5744e1a2e4b009280f9f2b43"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "574ef641e4b02ea11479924f"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "57642916e4b0994c1922fbee"}, {"problem": 42, "code": "#(apply * (range 1 (inc %1)))", "user": "57614948e4b0994c1922fb83"}, {"problem": 42, "code": "(fn fact [n]\n  (loop [result 1 i n]\n  \t(if (<= i 1)\n    \tresult\n    \t(recur (* i result) (dec i)))))", "user": "57644395e4b0994c1922fbf2"}, {"problem": 42, "code": "(fn fact [x] (if (<= x 1) (* x 1) (* x (fact (dec x)))))", "user": "5764cc01e4b0994c1922fc05"}, {"problem": 42, "code": "#(loop [res 1 n %]\n  (if (> n 0)\n    (recur (* res n) (dec n))\n    res))", "user": "57625c18e4b0994c1922fba4"}, {"problem": 42, "code": "#(loop [n %1 res 1]\n   (if (< n 2)\n     res\n     (recur (dec n) (* res n))))", "user": "5766bab8e4b0a07e8fc180b1"}, {"problem": 42, "code": "(fn [n] (reduce * (rest (range (+ n 1)))))", "user": "575b1440e4b02ea114799358"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "52ea025ae4b09f7907dd14b5"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5764457ae4b0994c1922fbf3"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5763fa69e4b0994c1922fbe0"}, {"problem": 42, "code": "(fn fac [x]\n  (if (= x 0)\n    1\n    (* x (fac (- x 1)))))", "user": "576000fce4b08062f99a4e8b"}, {"problem": 42, "code": "(fn [n] (apply * (take n (iterate inc 1))))", "user": "5761a772e4b0994c1922fb95"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "562eeba2e4b0ab312c17ebc1"}, {"problem": 42, "code": "(fn ! [n]\n  (loop [counter n\n    \tresult 1]\n    (if (= 1 counter)\n      result\n      (recur (dec counter) (* result counter)))))", "user": "5761724de4b0994c1922fb89"}, {"problem": 42, "code": "(fn [n] (apply * (range 1 (inc n))))", "user": "576844cde4b0a07e8fc180ce"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %1)))", "user": "5763818ae4b0994c1922fbc7"}, {"problem": 42, "code": "#(reduce * (take %1 (iterate inc 1)))", "user": "575f2529e4b08062f99a4e7a"}, {"problem": 42, "code": "(fn [n] (reduce * 1 (rest (range (inc n)))))", "user": "5756f324e4b02ea1147992e8"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "576b4e6be4b0a07e8fc1812b"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "575b3e9be4b02ea11479935b"}, {"problem": 42, "code": "#(apply * (rest (range (inc %))))", "user": "5762fcfde4b0994c1922fbb3"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "56f974c0e4b07572ad1a88b1"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "57604a87e4b08062f99a4e91"}, {"problem": 42, "code": "(fn [n] (apply * (range 1 (inc n))))", "user": "576da825e4b0979f8965156c"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (+ 1 %)))", "user": "56d91a53e4b0ea9b8538f7ee"}, {"problem": 42, "code": "(fn fact [i]\n  (loop \n    [acc 1\n     crs 1]\n    (if (= crs i) \n      (* acc crs)\n      (recur (* acc crs) (inc crs))\n      )\n    )\n  )", "user": "576d24ede4b0979f8965155b"}, {"problem": 42, "code": "#(reduce (fn [acc, i] (* acc (inc i))) 1 (range 0 %))", "user": "5749ab6ae4b009280f9f2b9f"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "50c99e3ee4b0bed41a122997"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "575d16f8e4b02ea114799377"}, {"problem": 42, "code": "#(apply * (take % (iterate inc 1)))", "user": "57202eb7e4b0c5bde472c090"}, {"problem": 42, "code": "(fn f [n] (if (= n 1) 1 (* n (f (- n 1)))))", "user": "576df252e4b0979f8965156f"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "576e3258e4b0979f89651574"}, {"problem": 42, "code": "(fn [n]\n  (loop [i n\n         acc 1]\n    (if (= i 1) acc\n      (recur (- i 1) (* i acc)))))", "user": "57650419e4b0994c1922fc09"}, {"problem": 42, "code": "(fn [n] (reduce * 1 (range 1 (inc n))))", "user": "577202d2e4b0979f896515c0"}, {"problem": 42, "code": "(fn fact[x]\n  (if (<= x 1) 1 (* x  (fact (- x 1))  )))", "user": "57745294e4b0979f896515ff"}, {"problem": 42, "code": "(fn a[n](if (= n 1) 1 (* n (a (- n 1)))))", "user": "5770fb2ce4b0979f896515a5"}, {"problem": 42, "code": "(fn [n]\n  (loop [x n\n         y 1]\n    (if (= x 0)\n      y\n      (recur (dec x) (* y x)))))", "user": "576a972ce4b0a07e8fc1811a"}, {"problem": 42, "code": "(fn !\n  [x] \n  (if (zero? x) 1\n    (* x (! (- x 1)))))", "user": "576d6266e4b0979f89651563"}, {"problem": 42, "code": "(fn [num]\n  (loop [n num\n         res 1]\n    (if (= n 1)\n      res\n      (recur (dec n) (* res n)))))", "user": "55b1d0b5e4b0da326a65cf73"}, {"problem": 42, "code": "#(loop [n % res 1]\n  (if (<= n 0)\n    res\n    (recur (dec n) (* n res))))", "user": "56d902c3e4b0ea9b8538f7ed"}, {"problem": 42, "code": "(fn\n  [n]\n  (loop [x      n\n         result x]\n    (if (= x 1)\n      result\n      (recur (dec x) (* result (dec x))))))", "user": "51319a53e4b06942423563c8"}, {"problem": 42, "code": "#(last (reductions * (range 1 (inc %))))", "user": "576a8d02e4b0a07e8fc18117"}, {"problem": 42, "code": "(fn fact [x] (reduce #(* %1 %2) 1 (range 1 (inc x))))", "user": "57763002e4b0979f89651631"}, {"problem": 42, "code": "(fn fact [x] (if\n              (= 1 x)\n              1\n              (* x (fact(dec x)))\n             )\n  )", "user": "57762befe4b0979f8965162f"}, {"problem": 42, "code": "(fn f\n  [num]\n  (if (= num 0)\n    1\n    (* num (f (dec num))))\n)", "user": "5772ddb0e4b0979f896515d4"}, {"problem": 42, "code": "#(loop [r 1\n        a %1]\n  (if (< a 1) r (recur (* r a) (dec a))))", "user": "5454bb07e4b0e397800069da"}, {"problem": 42, "code": "(fn my-fac [n]\n  (loop [res 1N n n]\n    (if (zero? n)\n      res\n      (recur (* res n) (dec n)))))", "user": "5776e21de4b0979f89651642"}, {"problem": 42, "code": "(fn fact[n] (if (= n 0) 1 (* n (fact (dec n)))))", "user": "560331dee4b04bb52996e1b5"}, {"problem": 42, "code": "(fn [x]\n  (loop [iter 1 acc 1]\n    (if (= x (- iter 1))\n      acc\n      (recur (inc iter)(* acc iter))\n      )\n    )\n  )", "user": "57750460e4b0979f8965160c"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5777cffae4b0979f89651651"}, {"problem": 42, "code": "(fn [n]\n  (let [! (fn [n acc]\n            (if (= n 0) acc\n              (recur (dec n) (* acc n))))]\n    (! n 1)))", "user": "57780e4fe4b0979f89651657"}, {"problem": 42, "code": "#(if (= 0 %) 1 (apply * % (range 1 %)))", "user": "5761513fe4b0994c1922fb87"}, {"problem": 42, "code": "(fn\n  [n]\n  (loop [cnt 1 res 1]\n    (if (<= cnt n)\n      (recur (inc cnt) (* res cnt))\n      res)))", "user": "577629abe4b0979f8965162e"}, {"problem": 42, "code": "#(->>\n  (range 1 (inc %))\n  (reduce * 1)\n  )", "user": "577829f9e4b0979f8965165a"}, {"problem": 42, "code": "(fn[n] (reduce #(* %1 %2) (take n (iterate dec n))))", "user": "571346c0e4b07c98581c3a9b"}, {"problem": 42, "code": "(fn fact [n]\n  (if (= 0 n)\n    1\n    (* n (fact (- n 1)))\n    )\n  )", "user": "5776558ee4b0979f89651633"}, {"problem": 42, "code": "#(apply * (rest (range (+ % 1))))", "user": "577abecfe4b0d3393e5deb06"}, {"problem": 42, "code": "#(loop [from % acc 1]\n   (if (= from 0)\n      acc\n      (recur (dec from) (* acc from)))\n)", "user": "560c37b5e4b05f002753df2e"}, {"problem": 42, "code": "#(* % (reduce * ( range 2 % )))", "user": "548f3ed8e4b0e286459a1236"}, {"problem": 42, "code": "(fn [x]\n  (reduce * (range 1 (+ x 1))))", "user": "5756e218e4b02ea1147992e5"}, {"problem": 42, "code": "#(apply * (map inc (range %)))", "user": "5776f39de4b0979f89651643"}, {"problem": 42, "code": "(fn f [x] (if (= x 0) 1 (* x (f (dec x)))))", "user": "577d3feee4b0c8d87281f6d2"}, {"problem": 42, "code": "#(->> (range 1 (inc %)) (reduce *))", "user": "566096d0e4b068f2fe63dc5a"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "56f6e541e4b08e7d20b9682a"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "57822efce4b0d36ec5835e91"}, {"problem": 42, "code": "(fn [n] (reduce #(* %1 %2) (range 1 (inc n))))", "user": "577c3da9e4b0c8d87281f6b9"}, {"problem": 42, "code": "(fn fac ([x] ( fac (- x 1) x )) ([x acc] (if (zero? x) acc (fac (- x 1) (* x acc)))))", "user": "5776385fe4b0979f89651632"}, {"problem": 42, "code": "#(if (<= % 1) 1 (reduce * (range 1 (+ 1 %))))", "user": "5674607ae4b05957ce8c6137"}, {"problem": 42, "code": "#(loop [n % fac 1]\n   (if (= 1 n) fac (recur (dec n) (* fac n))))", "user": "57615a22e4b0994c1922fb88"}, {"problem": 42, "code": "(fn [n]\n   (if (= n 0) \n     1\n     (reduce * (range 1 (+ n 1)))))", "user": "577e54bbe4b0c8d87281f6e5"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "55c4cda5e4b0e31453f649a5"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (inc x))))", "user": "5785de31e4b0ebec4cfb74e4"}, {"problem": 42, "code": "#(reduce * (range 1(inc %)))", "user": "56ea8374e4b04a395b9a0404"}, {"problem": 42, "code": "(fn factorial [n]\n    (reduce * (range 1 (inc n))))", "user": "4dfe5a93535d04ed9115e786"}, {"problem": 42, "code": "(fn f [x]\n  (case x\n    0 1\n    1 1\n    (* x (f (dec x)))))", "user": "56327168e4b0bfe05bf117a5"}, {"problem": 42, "code": "(fn [x]\n  (loop [i 1 res 1]\n    (if (> i x)\n      res\n      (recur (+ i 1) (* res i)))))", "user": "577a74f7e4b0d3393e5deafa"}, {"problem": 42, "code": "#(loop [n % a 1]\n   (if (zero? n)\n     a\n     (recur (dec n) (* a n))\n   )\n)", "user": "577898d5e4b0979f89651664"}, {"problem": 42, "code": "(fn [n]\n  \"return factorial(n)\"\n  (reduce * (range 1 (+ n 1))))", "user": "56fc9a2de4b08d47c977819b"}, {"problem": 42, "code": "(fn fact\n    ([n] (fact n 1))\n    ([n s]\n     (if (<= n 1)\n         s\n       (recur (dec n) (* s n))\n       )\n     )\n    )", "user": "577a8049e4b0d3393e5deafc"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "577832f4e4b0979f8965165b"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5786e182e4b0ebec4cfb7500"}, {"problem": 42, "code": "(fn fac [n]\n  (loop [x n]\n    (if (= x 1)\n      1\n      (* x (fac (dec n))))))", "user": "578606d2e4b0ebec4cfb74ec"}, {"problem": 42, "code": "(fn [n]\n  (loop [n n result 1]\n    (if (zero? n)\n      result\n      (recur (dec n) (* result n)))))", "user": "566b57e9e4b0a866af6896ad"}, {"problem": 42, "code": "#(reduce * (take % (iterate dec %)))", "user": "55ff2f89e4b00f4cabc5765e"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "578d230fe4b0ebec4cfb7564"}, {"problem": 42, "code": "(fn defacto [n]\n  (if \n    (= n 1)\n    1\n    (* n (defacto (dec n)))\n    )\n  )", "user": "577a4dc2e4b0d3393e5deaf6"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "530e75d5e4b08068f379ecba"}, {"problem": 42, "code": "(fn fac [n] (if (= n 1) 1 (* n (fac (dec n)))))", "user": "577f635be4b0d36ec5835e64"}, {"problem": 42, "code": "#(loop [r 1, n %] \n   (if (pos? n)\n     (recur (* r n) (dec n))\n     r))", "user": "578f9a18e4b0ebec4cfb7598"}, {"problem": 42, "code": "#(apply * (range 1 (+ % 1)))", "user": "577ab41fe4b0d3393e5deb05"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "user": "5785de4ce4b0ebec4cfb74e6"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "575e71a2e4b0846ea39baf26"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "572a13cde4b0f4d77e65122b"}, {"problem": 42, "code": "(fn fak [n]\n (if (= n 1) \n   1 \n   (* n (fak (dec n)))))", "user": "578cf84ce4b0ebec4cfb7562"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "5791d259e4b0ebec4cfb75c0"}, {"problem": 42, "code": "(fn fact [n]\n  (loop [a 1\n         i 0]\n    (if (= i n)\n      a\n      (let [i (inc i)\n            a (* i a)]\n        (recur a i)))))", "user": "577f0b0ee4b0c8d87281f6f3"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5786c182e4b0ebec4cfb74fd"}, {"problem": 42, "code": "(fn bang [n] (if (> 2 n) 1 (* n (bang (- n 1)))))", "user": "5778694fe4b0979f89651660"}, {"problem": 42, "code": "#(reduce * (rest (range (inc %))))", "user": "578b140be4b0ebec4cfb7545"}, {"problem": 42, "code": "#((fn inner [a b f] (if (= 1 a) f (inner b (- b 1) (* a f)))) % (- % 1) 1)", "user": "5635adeee4b0bfe05bf117c7"}, {"problem": 42, "code": "(fn fact [n] (if (zero? n) 1 (* (fact (dec n)) n)))", "user": "577fa91ee4b0d36ec5835e6a"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "57934c67e4b0e215f87e8456"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "55a3d7c7e4b0acc240e3153d"}, {"problem": 42, "code": "(fn [n] (last (map first (take n (iterate (fn [[a b]] (vector (* a b) (inc b))) [1 2])))))", "user": "5790e62ae4b0ebec4cfb75b0"}, {"problem": 42, "code": "(fn fac\n  [n]\n  (if (< n 2)\n    n\n    (* n (fac (- n 1)))\n  ))", "user": "55ede35ce4b0121d4835fde1"}, {"problem": 42, "code": "(fn ! [x] (if (= x 1) 1 (* x (! (dec x)))))", "user": "566e6850e4b0a866af6896da"}, {"problem": 42, "code": "#(apply * (-> % inc range rest))", "user": "578fc072e4b0ebec4cfb759a"}, {"problem": 42, "code": "(fn [n] \n  (loop [numero n\n         mult 1]\n    (if (= numero 0)\n      mult\n      (recur (dec numero) (* mult numero))\n    )\n  ))", "user": "578ed640e4b0ebec4cfb758b"}, {"problem": 42, "code": "#(reduce * (take % (range 1 (+ 1 %))))", "user": "57509096e4b02ea114799277"}, {"problem": 42, "code": "(fn fat [n] (if (= 1 n) 1 (* n (fat (dec n)))))", "user": "578e2829e4b0ebec4cfb757d"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5795f1f1e4b0e215f87e8490"}, {"problem": 42, "code": "(fn [x] \n  (loop [curr x num 1]\n    (if (= curr 1) \n      num\n      (recur (dec curr) (* curr num)))))", "user": "5751fda4e4b02ea114799295"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "576d398be4b0979f8965155d"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "57915ba4e4b0ebec4cfb75ba"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "5790f9d7e4b0ebec4cfb75b4"}, {"problem": 42, "code": "#(reduce *' (range 2 (+ % 1)))", "user": "5798205ce4b039eba2ecb10e"}, {"problem": 42, "code": "(let [fac_tail_recursive (fn [n a]\n                             (if (> n 0)\n                               (recur (dec n) (* a n))\n                               a))]\n   #(fac_tail_recursive % 1))", "user": "54c611d1e4b045293a27f627"}, {"problem": 42, "code": "(fn [x]\n   (reduce #(* %1 %2) 1 (reverse (drop 1 (range (+ x 1))))))", "user": "57958dace4b0e215f87e8484"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "57839ae9e4b0ebec4cfb74b8"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (inc x))))", "user": "5784e177e4b0ebec4cfb74cf"}, {"problem": 42, "code": "#(reduce *' (range 2 (+ % 1)))", "user": "57982bace4b039eba2ecb10f"}, {"problem": 42, "code": "#(loop [val 1 num %1] (if (= num 1) val (recur (* val num) (dec num))))", "user": "57986b76e4b039eba2ecb116"}, {"problem": 42, "code": "(fn fac [n]\n  (if (zero? n)  \n    1\n    (* n (fac (dec n)))))", "user": "579601c8e4b0e215f87e8492"}, {"problem": 42, "code": "(fn [n]\n  (apply * (range 1 (inc n))))", "user": "5672925fe4b05957ce8c6114"}, {"problem": 42, "code": "#(reduce * (reverse (range 1 (+ 1 %))))", "user": "578e01e9e4b0ebec4cfb7575"}, {"problem": 42, "code": "(fn [x]\n  (reduce * (range 1 (inc x))))", "user": "5799fc93e4b05b1deef9add0"}, {"problem": 42, "code": "(fn [x] (loop [z x\n               a 1]\n          (if (<= z 1) \n            a\n            (recur (dec z) (* a z)))))", "user": "579b803fe4b05b1deef9adf4"}, {"problem": 42, "code": "(fn fact\n    [n]\n    (if (= n 1)\n        1\n      (* n (fact (- n 1)))))", "user": "568bd448e4b0dcc4269f40a9"}, {"problem": 42, "code": "(fn f [x] (if (zero? x) 1 (* x (f (- x 1)))))", "user": "5799ff45e4b05b1deef9add1"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "579c35fee4b05b1deef9ae04"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "579c8ad1e4b05b1deef9ae0c"}, {"problem": 42, "code": "(fn ! [n] (if (= n 1) 1 (* n (! (dec n)))))", "user": "56f09bf4e4b04a395b9a047f"}, {"problem": 42, "code": "#(apply * (take % (iterate inc 1)))", "user": "579e15a6e4b05b1deef9ae20"}, {"problem": 42, "code": "(fn p42-factorial\n  [x]\n  (if (> 2 x)\n    1\n    (* x (p42-factorial (dec x)))))", "user": "57717915e4b0979f896515b3"}, {"problem": 42, "code": "#(reduce * (take % (iterate inc 1)))", "user": "5799b260e4b05b1deef9adc8"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "579f4812e4b05302be0b72fb"}, {"problem": 42, "code": "#(apply * (range % 0 -1))", "user": "5797d4bae4b039eba2ecb107"}, {"problem": 42, "code": "(fn [n] \n  (reduce * (range 1 (inc n)))\n)", "user": "57873017e4b0ebec4cfb7503"}, {"problem": 42, "code": "#(reduce * 1 (drop 1 (range (inc %))))", "user": "578e535de4b0ebec4cfb7580"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "574ff497e4b02ea114799266"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "545b486ae4b01be26fd7464f"}, {"problem": 42, "code": "#(reduce * (range 1N (inc %)))", "user": "55ff562fe4b00f4cabc57660"}, {"problem": 42, "code": "(fn ! [n]\n  (if (= n 1)\n    1\n    (* n (! (dec n)))))", "user": "52ce5056e4b07d0d72b2738f"}, {"problem": 42, "code": "(fn [n]\n\t(loop [counter n acc n]\n      (if (= counter 1)\n        acc\n        (recur (dec counter) (* acc (dec counter)))\n        )\n      )\n  )", "user": "57a13745e4b0c3d858beb8e3"}, {"problem": 42, "code": "(fn factorial [n]\n  (if (> n 1)\n    (* n (factorial (- n 1)))\n    1))", "user": "5785de43e4b0ebec4cfb74e5"}, {"problem": 42, "code": "#(reduce * (map inc (range %)))", "user": "57a310b4e4b0c3d858beb90c"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "578e07cfe4b0ebec4cfb7578"}, {"problem": 42, "code": "(fn [number]\n  (if (= 0 number)\n    1\n\t(loop [curnum 1 value 1 ]\n    \t(if (= curnum number)\n         \t (* value curnum)\n          \t (recur  (inc curnum) (* value curnum) )\n        )\n    )\n  )\n)", "user": "579be21fe4b05b1deef9adff"}, {"problem": 42, "code": "(fn [x] (if (< x 1) 0 (loop [y x acc 1] (if (= y 1) acc (recur (dec y) (* acc y))))))", "user": "57a22c85e4b0c3d858beb8f6"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "577bf999e4b0d3393e5deb2c"}, {"problem": 42, "code": "(fn [n]\n  (loop [n n\n         result 1]\n    (if (= n 1)\n      result\n      (recur (dec n) (* result n)))))", "user": "4e6ffaa3535d5021c1a8962e"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "57a4bb65e4b0a966079561eb"}, {"problem": 42, "code": "(fn [n]\n  (loop [c n acc 1]\n    (if (= c 0)\n      acc\n      (recur (- c 1) (* c acc)))))", "user": "579c7db7e4b05b1deef9ae0a"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "579d9601e4b05b1deef9ae18"}, {"problem": 42, "code": "(fn r [x] (if(== 1 x) x (* x (r (- x 1)))))", "user": "57752a2de4b0979f89651613"}, {"problem": 42, "code": "(fn [x] \n  (reduce * (take x (iterate dec x)) ))", "user": "57a1ef58e4b0c3d858beb8f3"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (+ % 1)))", "user": "57a0f256e4b0c3d858beb8dd"}, {"problem": 42, "code": "(fn [x] \n  (reduce * (range 1 (+ x 1))))", "user": "57a774e4e4b0a96607956213"}, {"problem": 42, "code": "(fn fact [n]\n  (loop [i 1 acc 1]\n    (if (> i n)\n      acc\n      (recur (inc i) (* i acc)))))", "user": "57a49951e4b0a966079561e5"}, {"problem": 42, "code": "(fn factorial [x]\n  (if (= x 0)\n    1\n    (* x (factorial (- x 1)))))", "user": "57756264e4b0979f89651619"}, {"problem": 42, "code": "#(apply * (range 1 (inc %1)))", "user": "57aa4775e4b0b8559636fc6b"}, {"problem": 42, "code": "(fn [x]\n  (reduce * (range 1 (+ x 1)))\n  )", "user": "50f89404e4b0aafb827eb204"}, {"problem": 42, "code": "(fn factorial [n] (apply * (range 1 (inc n))))", "user": "57a9e274e4b0b8559636fc5d"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "516064e5e4b009fba0926e26"}, {"problem": 42, "code": "(fn [n]\r\n  (loop [cnt n acc 1]\r\n    (if (zero? cnt)\r\n       acc\r\n       (recur (dec cnt) (* acc cnt)))))", "user": "57a9b2dbe4b0a96607956233"}, {"problem": 42, "code": "(comp (partial apply *) (partial range 1) inc)", "user": "57acb156e4b0b8559636fc8d"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "57a20f72e4b0c3d858beb8f5"}, {"problem": 42, "code": "(fn fa [x] (if (= 1 x) 1 (* x (fa (dec x)))))", "user": "57aa290de4b0b8559636fc65"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "57adbe7ee4b0b8559636fca0"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5075e374e4b09049dea827a5"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "548b7db8e4b0e286459a11fd"}, {"problem": 42, "code": "(fn f [n]\n  (if (= 0 n) 1\n      (* n (f (- n 1)))))", "user": "57af41bce4b0fbc9809a2731"}, {"problem": 42, "code": "#(reduce * (take % (iterate dec %)))", "user": "55fde52ce4b00f4cabc5764c"}, {"problem": 42, "code": "#(reduce * (take % (iterate inc 1)))", "user": "57af6cf4e4b0fbc9809a2735"}, {"problem": 42, "code": "(fn [n] (reduce * (rest(range 0 (inc n)))))", "user": "57986e2de4b039eba2ecb117"}, {"problem": 42, "code": "(fn [x]\n\n    (loop [num x calc 1]\n      (if (= num 0)\n        calc\n        (recur (- num 1) (* calc num))\n        )\n\n      )\n\n    )", "user": "57aa103be4b0b8559636fc64"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "55da18d5e4b0e31453f64ad1"}, {"problem": 42, "code": "(fn [n]\n  (->> (inc n)\n       (range 1)\n       (reduce *)))", "user": "554b8b78e4b0a04f7929958d"}, {"problem": 42, "code": "(fn factorial [in] (if (= in 0) 1 (* in (factorial (dec in) ) ) ) )", "user": "57af249fe4b0fbc9809a272b"}, {"problem": 42, "code": "#(apply * (rest (range (+ 1%))))", "user": "57ab41dde4b0b8559636fc79"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "57b13adae4b0fbc9809a2750"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "57ac7710e4b0b8559636fc88"}, {"problem": 42, "code": "#(if (= % 0) % ((fn factor[x y] (if (= 1 x) y (factor (dec x) (* y x)))) % 1))", "user": "57a5f1e3e4b0a96607956200"}, {"problem": 42, "code": "(fn fac\n  ([x] (fac x 1))\n  ([x y] (if (<= x 1) \n           y \n           (recur (dec x) (* y x)))))", "user": "578f5122e4b0ebec4cfb7592"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "56ebfb93e4b04a395b9a042e"}, {"problem": 42, "code": "(fn fac \n  ([a] (fac a 1))\n  ([a ret]\n    (if (= a 0)\n      ret\n      (recur (- a 1) (* a ret)))))", "user": "4f4aa932e4b0d56e7bb92c14"}, {"problem": 42, "code": "(fn [x]\n  (loop [n x out 1]\n    (cond (= n 0) out\n          :else (recur (dec n) (* n out)))))", "user": "57acee37e4b0b8559636fc94"}, {"problem": 42, "code": "#(->> (iterate inc 1)\n             (take %)\n             (reduce *))", "user": "579ea15ee4b05b1deef9ae2a"}, {"problem": 42, "code": "#(reduce * (map inc (range %)))", "user": "57b3efb1e4b0fbc9809a278a"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %1)))", "user": "5655d811e4b0f9d632dd849a"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "57aa4752e4b0b8559636fc6a"}, {"problem": 42, "code": "#(apply * (range 1 (+ 1 %)))", "user": "57908d94e4b0ebec4cfb75ac"}, {"problem": 42, "code": "(fn [x] (apply * (range 1 (+ 1 x))))", "user": "57b6cc7ce4b0fbc9809a27c4"}, {"problem": 42, "code": "(fn f [n] \n  (case n\n    1 1\n    (* n (f (- n 1)))))", "user": "57b1b8c8e4b0fbc9809a2756"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "57b4779de4b0fbc9809a279a"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "user": "56eab346e4b04a395b9a0410"}, {"problem": 42, "code": "#(loop [n %\n        r 1]\n   (if (zero? n)\n     r\n     (recur (dec n) (* r n))))", "user": "57b5dc52e4b0fbc9809a27b3"}, {"problem": 42, "code": "(fn ft [n] (if (= n 0) 1 (* n (ft (- n 1)))))", "user": "57b8b008e4b0fbc9809a27e6"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %1)))", "user": "57a2328ae4b0c3d858beb8f8"}, {"problem": 42, "code": "(fn fact [n]\n  (if (= 1 n)\n    1\n    (* n (fact (dec n)))))", "user": "57b99d48e4b0fbc9809a27f2"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %1)))", "user": "57b55290e4b0fbc9809a27a9"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "57b3046de4b0fbc9809a276d"}, {"problem": 42, "code": "#(reduce * (range 1(inc %)))", "user": "57b88091e4b0fbc9809a27e1"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "57a10070e4b0c3d858beb8e0"}, {"problem": 42, "code": "(fn [f]\n  (reduce #(* %2 %1) (range 1 (inc f))))", "user": "559d7e9ce4b0ec2b359424de"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "57a88e24e4b0a9660795621f"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "57a9db97e4b0b8559636fc5b"}, {"problem": 42, "code": "(fn fact [n]\n  (if (= n 1) 1\n      (reduce (fn [v i] (* v i)) (range 1 (+ n 1)))))", "user": "57b6edf6e4b0fbc9809a27c8"}, {"problem": 42, "code": "(fn [x]\n   (loop [out x\n          i (dec x)]\n     (if (= i 0)\n       out\n       (recur (* out i)\n              (dec i)))))", "user": "57a9eddae4b0b8559636fc5f"}, {"problem": 42, "code": "(fn f [x] (if (= x 1) 1 (* x (f (dec x)))))", "user": "57bbc9bde4b05aa3c4741c31"}, {"problem": 42, "code": "#(reduce * (rest (range (inc %))))", "user": "5386f784e4b06839e8705f17"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "57b35a19e4b0fbc9809a277d"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5784ec65e4b0ebec4cfb74d1"}, {"problem": 42, "code": "(fn fact1 [x]\n  (cond\n    (= x 0) 1\n    (= x 1) 1\n    :else\n    (* x (fact1 (- x 1)))))", "user": "56684356e4b04acd4f672de4"}, {"problem": 42, "code": "(fn [n]\n  (loop [i n\n         acc 1]\n    (if (= i 0)\n      acc\n      (recur (dec i) (* i acc)))))", "user": "57a7f7d8e4b0a96607956218"}, {"problem": 42, "code": "#(reduce * (take-while (comp not zero?) (iterate dec %)))", "user": "57b9fc74e4b0fbc9809a27fb"}, {"problem": 42, "code": "(fn fac [n]\n  (if (= n 0)\n    1\n    (* n (fac (dec n)))))", "user": "57befca6e4b05aa3c4741c70"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "57853bd9e4b0ebec4cfb74d6"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "user": "57b9d21fe4b0fbc9809a27f7"}, {"problem": 42, "code": "#(loop [counter %\n         result []]\n       (if (= 0 counter)\n           (reduce * result)\n           (recur (dec counter)\n                  (conj result counter))))", "user": "57bf304de4b05aa3c4741c75"}, {"problem": 42, "code": "(fn [n]\n  (if (= n 1) 1\n    (reduce #(* %1 %2) (range 1 (inc n)))))", "user": "57bfffc7e4b05aa3c4741c8a"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (+ x 1)))  )", "user": "57619fc9e4b0994c1922fb93"}, {"problem": 42, "code": "(fn test [n]\n  (letfn [(test-help [acc n]\n                     (if (= n 1)\n                       acc\n                       (recur (* acc n) (- n 1))))]\n    (test-help 1 n)))", "user": "579332c2e4b0e215f87e8452"}, {"problem": 42, "code": "(fn [n] (reduce #(* (inc %2) %1) 1 (range n)))", "user": "571107b3e4b09c608db7043f"}, {"problem": 42, "code": "(fn my-factorial [n] (if (= n 1) 1 (* n (my-factorial (dec n)))))", "user": "57c0917be4b05aa3c4741c95"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))\n\n;; if % is big , the next-method should be better  \n#_(apply *' ((fn f [a b]\n  \t(lazy-seq\n\t  \t(when (<= a b)\n\t  \t\t(cons a (f (+ 1 a) b)))))\n\t  \t\t1 %))", "user": "57ba55c1e4b0fbc9809a2801"}, {"problem": 42, "code": "(fn [n]\n  (loop [x n acc 1]\n    (if (<= x 1)\n      acc\n      (recur (dec x) (* acc x)))))\n\n\n; #(reduce * (range 1 %)  more elegant", "user": "566ff0a1e4b0a866af6896ec"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (drop 1 (range (inc n)))\n  )\n)", "user": "57c3c7e6e4b05aa3c4741cc4"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %1)))", "user": "57c4e8dce4b05aa3c4741cd7"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "57c3451fe4b05aa3c4741cbd"}, {"problem": 42, "code": "(fn fanc[%](if (zero? %)\n   1\n   (* % (fanc (dec %)))))", "user": "57bd960fe4b05aa3c4741c52"}, {"problem": 42, "code": "(fn fact[x]\n  (if (<= x 1) 1 (* x  (fact (- x 1))  )))", "user": "57bc9375e4b05aa3c4741c43"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "57c0393be4b05aa3c4741c90"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "56cf115de4b0ea9b8538f765"}, {"problem": 42, "code": "(fn[n](reduce *(range 1 (inc n))))", "user": "57c500f9e4b05aa3c4741cda"}, {"problem": 42, "code": "(fn [x]\n  (loop [acc 1 counter x]\n    (if (= counter 1)\n      acc\n      (recur (* acc counter) (- counter 1)))))", "user": "57c3df67e4b05aa3c4741cc5"}, {"problem": 42, "code": "#(let\n  [coll (rest (range (inc %)))]\n  (reduce * coll))", "user": "574eb3b1e4b02ea114799247"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "55ed37ebe4b0121d4835fdd6"}, {"problem": 42, "code": "(fn [x] (reduce * 1 (range 1 (+ 1 x) )))", "user": "57395f32e4b0cd1946bd1070"}, {"problem": 42, "code": "(fn [n] \n  (reduce * (range 1 (inc n))))", "user": "57c7cef5e4b05aa3c4741d0d"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "57c796b4e4b05aa3c4741d08"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %1)))", "user": "57af74aee4b0fbc9809a2736"}, {"problem": 42, "code": "(fn [n] \n (last (take n \n       ((fn fact [a x] \n         (lazy-seq (cons a (fact (* a x) (inc x)))) ) 1 2))) )", "user": "57a8eba2e4b0a96607956225"}, {"problem": 42, "code": "#(apply *(range 1 (inc %)))", "user": "57ac2d6be4b0b8559636fc83"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "57b45257e4b0fbc9809a2796"}, {"problem": 42, "code": "(fn fac[n]\n  (if (= 1 n)\n    1\n    (* n (fac (dec n)))\n  )\n  )", "user": "57c6bca1e4b05aa3c4741cf8"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "558e160ce4b027778923764c"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "57c2d66ae4b05aa3c4741cb9"}, {"problem": 42, "code": "#((fn fac [a b] (if (= b 0)\n                  a\n                  (fac (* a b) (dec b)))) 1 %)", "user": "515310b4e4b0d6806ecd26fb"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (inc x))))", "user": "57c99a45e4b05aa3c4741d31"}, {"problem": 42, "code": "#(reduce * (map inc (range %)))", "user": "57c7a8b5e4b05aa3c4741d09"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "57c58ad6e4b05aa3c4741ce7"}, {"problem": 42, "code": "(fn f [x] (if (= x 1) 1 (* x (f (dec x)))))", "user": "57c7e7d9e4b05aa3c4741d0f"}, {"problem": 42, "code": "; reduce to multiply the factors\n; range from 1 to 5+1\n;(fn [n] \n;  (reduce * (range 1 (inc n))))\n\n; use range to count down to 1 from the number\n(fn [n] \n   (reduce * (range n 0 -1)))", "user": "57c44053e4b05aa3c4741ccb"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "57b8f784e4b0fbc9809a27ea"}, {"problem": 42, "code": "(fn factorial ([n] (factorial n 1))\n        ([n acc]\n         (if (<= n 1) acc\n             (recur (dec n) (* acc n)))\n         )\n        )", "user": "57ca95f2e4b05aa3c4741d3b"}, {"problem": 42, "code": "#(reduce * (rest (take (inc %) (range))))", "user": "57995ac1e4b05b1deef9adbf"}, {"problem": 42, "code": "(fn [limit] (reduce * (map inc (range limit))))", "user": "57b356c2e4b0fbc9809a277b"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (+ % 1)))", "user": "57cef3f8e4b0c746388ab8b4"}, {"problem": 42, "code": "(fn fact [n]\n  (loop [n n\n         x 1]\n    (if (<= n 1)\n      x\n      (recur (dec n) (* x n)))))", "user": "57cd7498e4b0c746388ab897"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %1)))", "user": "57c45e64e4b05aa3c4741ccf"}, {"problem": 42, "code": "(fn [i] (reduce #(* %1 (inc %2)) 1 (range i)))", "user": "57ce3fede4b0c746388ab8a6"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "57c94c6ee4b05aa3c4741d2d"}, {"problem": 42, "code": "(fn [lmt] (reduce #(* %1 %2) 1 (range 1 (inc lmt))))", "user": "57c6aa0be4b05aa3c4741cf7"}, {"problem": 42, "code": "(fn f [x]\n  (if (= x 0) 1\n    (* x (f (dec x)))))", "user": "57a0b341e4b0c3d858beb8d4"}, {"problem": 42, "code": "#(reduce * (take % (iterate inc 1)))", "user": "555b43dfe4b0deb715856e4d"}, {"problem": 42, "code": "(fn fact [x]\n  (if (= x 1)\n    1\n    (* x (fact (dec x)))))", "user": "57b19fa1e4b0fbc9809a2754"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "57d0cd58e4b0bd073c20235e"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (take n (iterate inc 1))))", "user": "57aa2b97e4b0b8559636fc66"}, {"problem": 42, "code": "(fn my-factorial\n   [n]\n   (reduce * (range 1 (inc n))))", "user": "552d487ee4b076ab5578f7e4"}, {"problem": 42, "code": "(fn fac[n] (\n           loop [z 1\n                 f 1]\n           (if (> z n)\n             f\n             (recur (+ z 1) (* f z))\n             )\n           ))", "user": "57cc14aae4b05aa3c4741d4a"}, {"problem": 42, "code": "(fn fact [x] \n  (if (= x 1) 1 (* x (fact (- x 1)))))", "user": "57d1d6c8e4b0bd073c202370"}, {"problem": 42, "code": "(fn factorial [n] (if (= n 1) 1 (* n (factorial (- n 1)))))", "user": "57d0fce5e4b0bd073c202364"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "57d4f225e4b0bd073c2023a6"}, {"problem": 42, "code": "(fn [n]\n  (loop [times n\n         acc 1]\n    (if (> times 0)\n      (recur (dec times)\n             (* acc times))\n      acc\n      )))", "user": "56958a16e4b0dcc4269f4129"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "57d6b9c4e4b0bd073c2023cb"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "57c8208ce4b05aa3c4741d16"}, {"problem": 42, "code": "#(apply * (range 1 (+ 1 %)))", "user": "57c62aece4b05aa3c4741cf1"}, {"problem": 42, "code": "(fn [n] \n  (loop [n n s n]\n    (if (= n 1)\n      s\n      (recur (dec n) (* s (dec n)))\n    )\n  )\n)", "user": "57d79a81e4b0bd073c2023dc"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "573d8658e4b05c31a32c0814"}, {"problem": 42, "code": "(fn [n]\n  (loop [result 1 i 2]\n    (if (> i n)\n      result\n      (recur (* result i) (inc i))\n      )\n)\n)", "user": "57d7c894e4b0bd073c2023de"}, {"problem": 42, "code": "(fn [number] \n  (reduce * (range 1 (inc number))))", "user": "57d9bca1e4b0bd073c202405"}, {"problem": 42, "code": "#(reduce * (take % (iterate inc 1)))", "user": "57da5fc4e4b0bd073c20240f"}, {"problem": 42, "code": "(fn [i] (reduce * (take i (iterate dec i))))", "user": "57d1a0e6e4b0bd073c20236d"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))\n\n;(fn factorial\n;  ([n]\n;   (factorial n 1))\n;  ([n r]\n;   (if (= n 0)\n;     r\n;     (recur (dec n) (* r n)))\n;   ))", "user": "577b4440e4b0d3393e5deb0f"}, {"problem": 42, "code": "(fn [x]\n    (loop [n x f 1]\n        (if (= n 1)\n            f\n            (recur (dec n) (* f n)))))", "user": "57a1478ae4b0c3d858beb8e5"}, {"problem": 42, "code": "#(->> % (inc) (range 1) (reduce * 1))", "user": "57dda21be4b0bd073c202445"}, {"problem": 42, "code": "#(loop [v 1\n       n %]\n   (if (zero? n)\n     v\n     (recur (* v n) (dec n))))", "user": "57ddb63fe4b0bd073c20244a"}, {"problem": 42, "code": "#(loop [x % result 1]\n\t(if (= x 1)\n\t\tresult\n\t\t(recur (- x 1) (* result x))))", "user": "57ccedaae4b0c746388ab88e"}, {"problem": 42, "code": "(fn fact [num]\n  (letfn [(fact-sub [accumulated current-num]\n          (if (= current-num 0)\n            accumulated\n            (recur (* accumulated current-num) (dec current-num))))]\n    (fact-sub 1 num)))", "user": "57d13683e4b0bd073c202368"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "57dfe173e4b0bd073c20246b"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "530fbbaee4b08068f379eccf"}, {"problem": 42, "code": "( fn [a]    \n    (loop[srt a curr a final 1]\n      (if (= 0 curr)\n       final\n     (recur a (- curr 1) (* curr final) \n            ))))", "user": "57b35772e4b0fbc9809a277c"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "57d9f603e4b0bd073c20240a"}, {"problem": 42, "code": "(fn [x]\n  (loop [in x out 1]\n    (if (= in 0)\n      out\n      (recur (- in 1) (* in out)))))", "user": "566d71b1e4b0a866af6896ca"}, {"problem": 42, "code": "(fn fac\n  [n]\n  (reduce * 1 (range 1 (inc n))))", "user": "5785c1d4e4b0ebec4cfb74e1"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %1)))", "user": "57e139f6e4b0bfb2137f5a6c"}, {"problem": 42, "code": "#(reduce * (range %1 0 -1))", "user": "57e0f30ae4b0bfb2137f5a66"}, {"problem": 42, "code": "#(reduce * (take % (iterate dec %)))", "user": "57d9cae9e4b0bd073c202409"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "57dd47f4e4b0bd073c20243e"}, {"problem": 42, "code": "(fn fac [x] (if (= 1 x) 1 (* x (fac (- x 1)))))", "user": "57e404a3e4b0bfb2137f5ab1"}, {"problem": 42, "code": "(fn fact [n]\n   (cond\n     (< n 0) nil\n     (zero? n) 1\n     :default (* n (fact (dec n)))))", "user": "56f9c7c6e4b07572ad1a88ba"}, {"problem": 42, "code": "#(reduce * (take % (iterate dec %)))", "user": "5739ff3ae4b0cd1946bd1084"}, {"problem": 42, "code": "(fn [r] (reduce #(* % %2) (range 1 (inc r))))", "user": "57e3f709e4b0bfb2137f5aaf"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "57e396cde4b0bfb2137f5a9e"}, {"problem": 42, "code": "(fn fac [x]\n  (if (< x 2)\n    1\n    (* x (fac(- x 1)))))", "user": "574a71b7e4b02ea1147991fb"}, {"problem": 42, "code": "(fn [input]\n         (loop [n input\n                acc 1]\n           (if (= n 1) acc\n               (recur (dec n)\n                      (* acc n)))))", "user": "55f4ebffe4b06e875b46ce81"}, {"problem": 42, "code": "; f(n) = n*f(n-1)\n; (fn [n] (* n (recur (dec n))))\n\n; (fn fact [n]\n;  (if (= n 1)\n;    1\n;    (* n (fact (dec n)))))\n; todo: figure out how to do it with loop/recur\n\n;(fn [n]\n;  (reduce * (range 1 (inc n))))\n#(reduce * (range 1 (inc %)))", "user": "57e37f90e4b0bfb2137f5a9c"}, {"problem": 42, "code": "(fn fact [x] (if(= x 1) 1 (* (fact (- x 1)) x)))", "user": "564a985be4b0284900eef65c"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "574e84e0e4b02ea114799243"}, {"problem": 42, "code": "(fn [x]\n  (reduce * (map inc (range x))))", "user": "57894e30e4b0ebec4cfb752b"}, {"problem": 42, "code": "(fn\n    [n]\n    (loop [remaining n result 1]\n      (if (= 0 remaining)\n        result\n        (recur (- remaining 1) (* remaining result)))))", "user": "57b39fbee4b0fbc9809a2783"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "57e33f6fe4b0bfb2137f5a96"}, {"problem": 42, "code": "(fn my-fact\n  ([x]\n   (my-fact (- x 1) x))\n  ([x acc]\n   (if (> x 0)\n     (recur (- x 1) (* x acc))\n     acc)))", "user": "5705f569e4b0b0fb43fd0677"}, {"problem": 42, "code": "#(reduce (fn [x y] (* x (+ y 1))) 1 (range %))", "user": "57df9f60e4b0bd073c202467"}, {"problem": 42, "code": "(fn my-factorial [x]\n  (reduce\n    (fn [a b]\n       (* a b))\n    (range 1 (inc x))))", "user": "56020b3fe4b04bb52996e19b"}, {"problem": 42, "code": "(fn[n](reduce(fn[accum x] (* accum (inc x) )) 1 (range n)))", "user": "57e3d30be4b0bfb2137f5aab"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "57dfab73e4b0bd073c202468"}, {"problem": 42, "code": "(fn [x] (apply * (range 1 (inc x))))", "user": "56887bcbe4b0dcc4269f406a"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "57df309ee4b0bd073c20245f"}, {"problem": 42, "code": "(fn myfact [x]\n  (case x\n    1 1\n    (* x (myfact (- x 1)))))", "user": "57e6997ee4b0bfb2137f5af0"}, {"problem": 42, "code": "(fn [n]\n  (reduce * 1 (range 1 (inc n))))", "user": "57c176abe4b05aa3c4741ca2"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "57d93437e4b0bd073c2023f9"}, {"problem": 42, "code": "(fn [n]\n    (loop [n n\n           acc 1]\n      (if (= 0 n)\n        acc\n        (recur (dec n) (* n acc)))))", "user": "57985f98e4b039eba2ecb114"}, {"problem": 42, "code": "(fn fact [n] (if (= 1 n) 1 (* n (fact (- n 1)))))", "user": "56629a7de4b0e91d5f5c5649"}, {"problem": 42, "code": "(fn [n]\n\t(reduce * (range 1 (inc n))))", "user": "57eb2576e4b0bfb2137f5b5c"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "57ec3d29e4b0bfb2137f5b77"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "57e4dbcbe4b0bfb2137f5ac3"}, {"problem": 42, "code": "(fn [n]\n    (loop [result 1\n           n n]\n      \n      (if (< 1 n)\n        (recur\n          (* result n)\n          (dec n))\n        result)))", "user": "532f7e12e4b019098a6f8b4e"}, {"problem": 42, "code": "(fn fac [n] {:pre  [(>= n 0)] :post [(integer? %)]}\n  (cond (<= n 1) 1\n        (<= n 20) (* n (fac (- n 1)))\n        :else (reduce *' (vec (range 1 (inc n))))))", "user": "57ee804ee4b0bfb2137f5bbb"}, {"problem": 42, "code": "(fn factorial [x]\n  (if (= x 1)\n    x\n    (* x (factorial (- x 1)))))", "user": "57942207e4b0e215f87e8469"}, {"problem": 42, "code": "(fn fac [n] (if (< n 2) 1 (* n (fac(dec n)))) )", "user": "57eb7a97e4b0bfb2137f5b62"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "57f0f7b8e4b0bfb2137f5bfe"}, {"problem": 42, "code": "(fn fac [n] (if (< n 2) 1 (* n (fac (dec n)))))", "user": "57df2722e4b0bd073c20245e"}, {"problem": 42, "code": "(fn fact [x]\n  (if (<= x 1) 1 (* x  (fact (- x 1))  )))", "user": "57ed43f5e4b0bfb2137f5b97"}, {"problem": 42, "code": "#(apply * (range 1 (inc %1)))", "user": "57ee9ffbe4b0bfb2137f5bc2"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "57e20474e4b0bfb2137f5a82"}, {"problem": 42, "code": "(fn [n]\n  (reduce\n   #(* %1 %2)\n   1\n   (range 1 (inc n))))", "user": "57ed2574e4b0bfb2137f5b93"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "57596ba7e4b02ea11479931a"}, {"problem": 42, "code": "(fn [n]\n  \t(reduce * (rest (range (+ 1 n)))))", "user": "56483f45e4b0284900eef62b"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "57e91413e4b0bfb2137f5b20"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "57c1b32be4b05aa3c4741ca4"}, {"problem": 42, "code": "(fn [arg]\n  (loop [x arg ans 1]\n    (if (= x 0)\n      ans\n      (recur (dec x) (* ans x)))))", "user": "5746061ae4b009280f9f2b5b"}, {"problem": 42, "code": "#(reduce * (take % (iterate inc 1)))", "user": "57db2369e4b0bd073c20241f"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "57f6e666e4b0d3187e9008f2"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "user": "57e79d8ee4b0bfb2137f5afe"}, {"problem": 42, "code": "(fn [fac] (reduce #(* %1 %2) 1 (range 1 (inc fac)) ) )", "user": "57e59d2be4b0bfb2137f5ad9"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "56a44067e4b0542e1f8d14da"}, {"problem": 42, "code": "(fn [n]\n  (loop [i n\n         j (dec n)\n         t 1]\n    (if (= i 1) t\n      (recur j (dec j) (* t i)))\n  ))", "user": "57eb10b1e4b0bfb2137f5b5b"}, {"problem": 42, "code": "(fn fac [n]\n (if (pos? n)\n   (* n (fac (dec n)))\n   1))", "user": "566ca8d6e4b0a866af6896bf"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "57485efee4b009280f9f2b8a"}, {"problem": 42, "code": "#(->> % (inc) (range) (rest) (reduce *))", "user": "57f85b36e4b0d3187e900924"}, {"problem": 42, "code": "#(loop [i % result 1]\n   (if (= i 0) result\n     (recur (dec i) (* result i))))", "user": "57f52d3be4b0903ccab3dce7"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "57f9e0bce4b0d3187e900956"}, {"problem": 42, "code": "(fn  [n]\n  (loop [n1 1\n         n2 1\n         ]\n    (if (=  n1 (inc n)) n2 (recur (inc n1) (* n1 n2)))))", "user": "57fc08d8e4b0d3187e900988"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (+ % 1)))", "user": "57ecc16fe4b0bfb2137f5b83"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "57efb389e4b0bfb2137f5bdb"}, {"problem": 42, "code": "(fn [n] \n  (loop [i 1 f 1]\n    (if (> i n) \n      f\n      (recur (inc i) (* i f)))))", "user": "57f80350e4b0d3187e90090c"}, {"problem": 42, "code": "(fn [x]\n  (loop [n 0\n         res 1]\n    (if (= n x)\n      \tres\n      \t(recur (inc n)\n               (+ (* n res) res)))))", "user": "57f8151ce4b0d3187e900912"}, {"problem": 42, "code": "(fn fac\n  [n]\n  (if (zero? n)\n    1\n    (* n (fac (dec n))))\n  )", "user": "57fc34f0e4b0d3187e90098e"}, {"problem": 42, "code": "(fn factorial\n  [n]\n  (if (zero? n)\n    1N \n    (* n (factorial(dec n)))))", "user": "57f8153de4b0d3187e900916"}, {"problem": 42, "code": "(fn [n] (loop [nx n res 1] (if (= nx 0) res (recur (- nx 1) (* nx res)))))", "user": "56585dbce4b0f9d632dd84b3"}, {"problem": 42, "code": "(fn !\n  [n]\n  (if (zero? n)\n    1N\n    (* n (! (dec n)))))", "user": "57f8104ce4b0d3187e900910"}, {"problem": 42, "code": "(fn !\n  [n]\n  (if (zero? n)\n    1N\n    (* n(! (dec n)))))", "user": "57f814fbe4b0d3187e900911"}, {"problem": 42, "code": "(fn\n  [n]\n  (reduce * (range 1 (inc n))))", "user": "557c647ce4b05c286339e0c3"}, {"problem": 42, "code": "(fn [n]\n   (if (> 1 n)\n     1\n     (reduce * (range 1 (inc n)))))", "user": "57f81524e4b0d3187e900913"}, {"problem": 42, "code": "#(apply * (range 1 (+ % 1)))", "user": "57ec8d1de4b0bfb2137f5b7f"}, {"problem": 42, "code": "(fn !\n  [n]\n  (if (zero? n)\n    1N\n    (* n (! (dec n)))))", "user": "57f81544e4b0d3187e900917"}, {"problem": 42, "code": "#(reduce * (rest (range (inc %))))", "user": "57fdd1cfe4b0d3187e9009bf"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "57ea79d9e4b0bfb2137f5b4f"}, {"problem": 42, "code": "#(if (zero? %) \n   1 \n   (reduce * (range 1 (inc %))))", "user": "55cc6c35e4b0e31453f64a10"}, {"problem": 42, "code": "(fn [x] (apply * (range 1 (inc x))))", "user": "57f9011ee4b0d3187e900935"}, {"problem": 42, "code": "(fn fact [n] \n  (reduce * (range 1 (inc n)))\n  )", "user": "57f81045e4b0d3187e90090f"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5254b45fe4b0541d1855b9a0"}, {"problem": 42, "code": "(fn [n]\n  (apply * (range n 1 -1)))", "user": "55a9fe1ce4b0988bba2ad947"}, {"problem": 42, "code": "(comp #(reduce * %) #(range 1 %) #(+ 1 %))", "user": "5800edaae4b0a837a8b30c48"}, {"problem": 42, "code": "(fn fact [n] (if (= n 1) 1 (* n ( fact (- n 1)))))", "user": "575ddfd1e4b02ea11479938d"}, {"problem": 42, "code": "(fn !\n  [n]\n  (if (= 1 n)\n    1                    \n    (* n (! (dec n)))))", "user": "57f81534e4b0d3187e900915"}, {"problem": 42, "code": "(fn ! [n]\n  (if (= n 1)\n    1\n    (* n (! (dec n)))))", "user": "57f81549e4b0d3187e900918"}, {"problem": 42, "code": "(fn fact [x]\n  (if (= 1 x)\n    1\n\t(* x (fact (dec x)))))", "user": "57ee82b1e4b0bfb2137f5bbd"}, {"problem": 42, "code": "#(if (= % 1) 1 (reduce (fn [x xs] (* x xs)) (range 1 (inc %))))", "user": "57b9f35be4b0fbc9809a27f9"}, {"problem": 42, "code": "#(if (<= %1 1) \n   1 \n   (apply * (range 1 (inc %1))))", "user": "5803cd8fe4b0a837a8b30c96"}, {"problem": 42, "code": "(fn \n  [x]\n  (reduce * (range 1 (+ x 1))) \n  )", "user": "57f81532e4b0d3187e900914"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "57fedf07e4b0d3187e9009dc"}, {"problem": 42, "code": "(fn [x] (reduce * 1 (range 1 (inc x))))", "user": "57f28b22e4b0511f1d294def"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "57fa7c93e4b0d3187e900963"}, {"problem": 42, "code": "#(apply * (range 1 (+ 1 %)))", "user": "57fe2d6fe4b0d3187e9009c8"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "57ed19a3e4b0bfb2137f5b8e"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "57fd7344e4b0d3187e9009b6"}, {"problem": 42, "code": "(fn fact [n]\n  (if (zero? n) 1\n    (* n (fact (dec n)))))", "user": "57f81569e4b0d3187e900919"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (range 1 (+ n 1))))", "user": "580570a2e4b0a837a8b30cc7"}, {"problem": 42, "code": "#((fn factorial [n r]\n (if (= n 1) r (factorial (dec n) (* n r)))) % 1)", "user": "57de5f0ee4b0bd073c202450"}, {"problem": 42, "code": "(fn foo [x] (reduce * (map inc (range x))) )", "user": "5800ab1ee4b0a837a8b30c41"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "56bfd8ade4b060a8e693e3a2"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "57c94c54e4b05aa3c4741d2c"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "580558cde4b0a837a8b30cc4"}, {"problem": 42, "code": "(fn fact [x] (if (= x 0) 1 (* x (fact (dec x)))))", "user": "57c815ade4b05aa3c4741d14"}, {"problem": 42, "code": "(fn [x] \n  (loop [fc 1 num x]\n    (if (== num 0)\n      fc\n      (recur (* fc num) (dec num)))))", "user": "57ffeb62e4b0a837a8b30c2d"}, {"problem": 42, "code": "(fn f[n]\n  (if (< n 3) n\n        (* n\n           (f (- n 1)))))", "user": "53e06f81e4b0d874e779ae4c"}, {"problem": 42, "code": "(fn fuct\n    [n]  \n    (loop [res  1\n           n    n]\n      (if (= n 0)\n        res\n        (recur (* res n) (dec n)))))", "user": "55ee84c0e4b0121d4835fdf0"}, {"problem": 42, "code": "(fn fact [n]\n  (if (= n 1)\n    1\n    (* n (fact (dec n)))\n    ))", "user": "57fc0719e4b0d3187e900987"}, {"problem": 42, "code": "(fn fack [n]\n  (reduce * (range 1 (inc n)))\n  )", "user": "57073037e4b0b0fb43fd0689"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "57f8ba80e4b0d3187e90092f"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "53d8da61e4b0e771c3025471"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5405885ee4b0addc1aec6668"}, {"problem": 42, "code": ";; (fn factorial [n]\n;;   (if (= n 1)\n;;     1\n;;     (* n (factorial (dec n)))))\n;; (fn [n]\n;;   (loop [product 1\n;;          nn n]\n;;     (if (= nn 1)\n;;       product\n;;       (recur (* nn product) (dec nn)))))\n#(reduce * (range 1 (+ % 1)))", "user": "57fa6f2ee4b0d3187e900962"}, {"problem": 42, "code": "(fn factorial\n  [num]\n  (if (= num 1)\n    1\n    (* num (factorial (dec num)))))", "user": "57b9fb56e4b0fbc9809a27fa"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5801eed1e4b0a837a8b30c63"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "580bd81ee4b0849f6811b711"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "54d893a4e4b0a52adc2e2039"}, {"problem": 42, "code": "(fn check [n & [y]]\n   (if (= n 0)\n     (do \n       (if (= y nil)\n         (do 1)\n         (do y)\n         ))\n     (do\n       (if (= y nil)\n         (do (check (- n 1) n))\n         (do (check (- n 1) (* y n)))\n       )\n       )\n   )\n )", "user": "580014d7e4b0a837a8b30c32"}, {"problem": 42, "code": ";#(apply * (vec(take % (iterate dec %))))\n#(apply * (range 1 (inc %)))", "user": "57ee432de4b0bfb2137f5bb2"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "57ee41eae4b0bfb2137f5bb0"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "57ef793de4b0bfb2137f5bd8"}, {"problem": 42, "code": ";#(apply *(range 1 (inc %)))\n#(apply * (vec(take % (iterate dec %))))", "user": "57ee46c7e4b0bfb2137f5bb3"}, {"problem": 42, "code": "#(apply * (take % (iterate dec %)))", "user": "57ee2b3ee4b0bfb2137f5bac"}, {"problem": 42, "code": "#(apply * (range 1 (+ 1 %)))", "user": "57ee41a6e4b0bfb2137f5baf"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "580c8fcee4b0849f6811b721"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "570e6974e4b0b0fb43fd06ef"}, {"problem": 42, "code": "#_#(loop [i 1\n        r i]\n   (if (> i %)\n     r\n     (recur (inc i) (* r i))))\n\n#(reduce * (range 1 (inc %)))", "user": "57ee42c4e4b0bfb2137f5bb1"}, {"problem": 42, "code": "(fn [n]\n   (reduce * (range 1 (+ n 1))))\n\n#_(fn fact [n] \n(reduce #(* %1 %2) (map inc (range n))))\n#_(fn fact [n]\n(loop [cnt n acc 1]\n(if (zero? cnt)\nacc\n(recur (dec cnt)(* acc cnt)))))", "user": "52faf67ce4b047fd55837005"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "57a4fa50e4b0a966079561f1"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5508a292e4b06e50f9beb10f"}, {"problem": 42, "code": "#(loop [n %\n       m %]\n  (if (= m 1)\n    n\n    (recur (* n (dec m)) (dec m))))", "user": "55b2505be4b0da326a65cf7d"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))\n;;#(loop [cnt % acc 1] (if (zero? cnt) acc (recur (dec cnt) (* acc cnt))))", "user": "575f6a80e4b08062f99a4e80"}, {"problem": 42, "code": ";;#(reduce * (rest (range (inc %))))\n#(reduce * (range 1 (inc %)))", "user": "580d7bdae4b0849f6811b73c"}, {"problem": 42, "code": "#(loop [x 1 n %1]\n   (if (> 1 n)\n     x\n     (recur (* x n) (dec n))))", "user": "580e2941e4b0849f6811b74e"}, {"problem": 42, "code": "#(apply  * 1 (take % (iterate inc 1)))", "user": "57ef7393e4b0bfb2137f5bd6"}, {"problem": 42, "code": "(fn [n]\n  (letfn [(fac[a b] (lazy-seq (cons a (fac (* a b) (inc b)))))]\n    (first (drop (dec n) (fac 1 2)))))", "user": "580fbaade4b0f478707a05c0"}, {"problem": 42, "code": "(fn fact \n  ([n] (fact n 1))\n  ([n accum]\n  (if (zero? n) accum\n  (recur (dec n) (* accum n)))\n  )\n)", "user": "57f904c5e4b0d3187e900936"}, {"problem": 42, "code": "#(apply * (range 1 (+ 1 %)))", "user": "580d7de3e4b0849f6811b73d"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "54ba9ee8e4b0ed20f4ff6eb7"}, {"problem": 42, "code": "(fn [x] (apply *(#(rest(range (+ 1 x))))))", "user": "580d7e53e4b0849f6811b73e"}, {"problem": 42, "code": "(fn [n] (apply * (range 1 (inc n))))", "user": "57aa053fe4b0b8559636fc61"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "57fbf995e4b0d3187e900981"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5812eb8fe4b0f478707a0602"}, {"problem": 42, "code": "(fn [n] (loop [m n acc 1] (if (= m 1) acc (recur (- m 1) (* acc m)))))", "user": "58152157e4b0f478707a0631"}, {"problem": 42, "code": "#(reduce * (map inc (range %1)))", "user": "58047205e4b0a837a8b30ca9"}, {"problem": 42, "code": "(fn [n] (reduce *(range 1 (+ n 1))))", "user": "57f3b841e4b0511f1d294e0f"}, {"problem": 42, "code": ";;#(apply * (range 1 (inc %)))\n\n; #(apply * (range 1 (inc %)))\n\n#(apply * (range 1 (inc %)))", "user": "565487dce4b0f9d632dd8482"}, {"problem": 42, "code": "(fn factorial [n]\n    (if (zero? n)\n      1\n      (* n (factorial (dec n)))))", "user": "500d3160e4b05f7c30cfa6a1"}, {"problem": 42, "code": "(fn [f]\n   (loop [i f\n          x 1]\n     (if (= i 0)\n       x\n       (recur (dec i) (* x i)))))", "user": "510c01bae4b078ea7192110a"}, {"problem": 42, "code": "(fn fact[n]\n  (if (< n 2) \n    1\n    (* n (fact (dec n))\n    )\n  )\n)", "user": "58186016e4b0c0e9c07b83ad"}, {"problem": 42, "code": "(fn fact [i]\n  (if (= i 1)\n    1\n    (* i (fact (- i 1)))\n    ))", "user": "57ffe094e4b0a837a8b30c2c"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "58134ba8e4b0f478707a060b"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "563e1c0ee4b0da801c4e4665"}, {"problem": 42, "code": "(fn [n]\n  (loop [n n result 1]\n    (if (>= n 1) \n      (recur (dec n) (* result n))\n      result)))", "user": "56018b59e4b04bb52996e18c"}, {"problem": 42, "code": "#(apply * (drop 1 (range (inc %))))", "user": "58172161e4b0c0e9c07b8389"}, {"problem": 42, "code": "(fn ! [n] (if (= n 0) 1 (* n (! (dec n)))))", "user": "57d57f65e4b0bd073c2023b3"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %1)))", "user": "581a5fdbe4b0e114eb51a002"}, {"problem": 42, "code": "(fn [n] (apply * (range 1 (inc n))))", "user": "5813e208e4b0f478707a061b"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "581b19e7e4b04b46fc4b0ec4"}, {"problem": 42, "code": "(fn fac [x] (if (< x 2) 1 (* x (fac (dec x)))))", "user": "579ade84e4b05b1deef9ade4"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "581e61b0e4b04b46fc4b0f28"}, {"problem": 42, "code": "#(reduce * (take % (iterate inc 1)))", "user": "581e8b86e4b04b46fc4b0f2b"}, {"problem": 42, "code": "#(loop [i 1 a 1] (if (< % i) a (recur (inc i) (* a i))))", "user": "5687b6abe4b0dcc4269f4061"}, {"problem": 42, "code": "(fn factorial [x] (if (<= x 1) 1 (* x (factorial (- x 1)))))", "user": "58173722e4b0c0e9c07b838a"}, {"problem": 42, "code": "(fn fact [n]\n  (if (= 1 n) 1 (* n (fact (dec n))))\n  )", "user": "5820924ee4b04b46fc4b0f58"}, {"problem": 42, "code": "#(reduce * (take % (iterate inc 1)))", "user": "581b4d3be4b04b46fc4b0ec6"}, {"problem": 42, "code": "(fn factorial [n]\n  (if (= n 0)\n    1\n    (* n (factorial (dec n) )))\n  )", "user": "5804d5afe4b0a837a8b30cad"}, {"problem": 42, "code": "(fn [x]\n  (\n   (fn [x acc]\n    (if (= x 0)\n      acc\n      (recur (- x 1) (* x acc)))) x 1))", "user": "58088dfde4b0a837a8b30d07"}, {"problem": 42, "code": "#(apply * (take % (map inc (range))))", "user": "5821b018e4b04b46fc4b0f80"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "56255e2de4b00a550fc90297"}, {"problem": 42, "code": "(fn [x] (loop [n x f 1] (if (= n 1) f (recur (dec n) (* n f)))))", "user": "58225587e4b04b46fc4b0f94"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "57465429e4b009280f9f2b60"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5784ff88e4b0ebec4cfb74d4"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "58171a9ae4b0c0e9c07b8387"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (+ x 1))))", "user": "581e76dfe4b04b46fc4b0f29"}, {"problem": 42, "code": "#(apply * (range 1 (+ 1 %)))", "user": "524dacc9e4b0a16e35cf6df8"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "58247423e4b051871117bec5"}, {"problem": 42, "code": "(fn [n]\n   (reduce * (range 1 (inc n))))", "user": "5808ee16e4b0a837a8b30d16"}, {"problem": 42, "code": "#(letfn \n  [(fact \n    [n acc]\n    (if (= n 0)\n      acc\n      (recur \n       (dec n) (* n acc))))]\n    (fact % 1))", "user": "578df8fee4b0ebec4cfb7574"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "518261a4e4b0f2adb7336523"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "582089fbe4b04b46fc4b0f57"}, {"problem": 42, "code": "#(let [f (fn fac [x]\n\t(if (<= x 1) \n\t1\n\t(* x (fac (- x 1)))))]\n\t(f %)\n\t)", "user": "500e3238e4b068062f6e8d8f"}, {"problem": 42, "code": "(fn [x] (reduce * 1 (range 1 (+ 1 x))))", "user": "5821dbb9e4b04b46fc4b0f86"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "5818908be4b0c0e9c07b83bb"}, {"problem": 42, "code": "(fn [number]\n  (loop [i number\n         result 1]\n    (if (<= i 0)\n      result\n      (recur (dec i) (* result i)))))", "user": "5820cca0e4b04b46fc4b0f62"}, {"problem": 42, "code": "(fn [x]\n  (apply * (range 2 (inc x))))", "user": "582835cbe4b051871117bf30"}, {"problem": 42, "code": "(fn faktorial [i]\n  (if (<= i 1)\n    1\n    (* i (faktorial (dec i)))))", "user": "581829cce4b0c0e9c07b83a9"}, {"problem": 42, "code": "(fn fac [x] (if (= x 1) x (* x (fac (- x 1)))))", "user": "569fc70ee4b0542e1f8d1499"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "58224c53e4b04b46fc4b0f92"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "53bd476ae4b0d9a98559a6ca"}, {"problem": 42, "code": "#(apply * (range 2 (inc %1)))", "user": "57ae3345e4b0fbc9809a271e"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "581dad0ae4b04b46fc4b0f17"}, {"problem": 42, "code": "{1 1, 3 6, 5 120, 8 40320}", "user": "4fec0824e4b0681fd128dc9c"}, {"problem": 42, "code": "(fn fact[n]\n  (case n\n    0 0\n    1 1\n    (* n (fact (- n 1)))))", "user": "577e42dee4b0c8d87281f6e4"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "507ff90fe4b089ade05efbd9"}, {"problem": 42, "code": "(fn [n] (if (< n 2) 1 (reduce * (range 1 (inc n)))))", "user": "5710140fe4b09c608db7042e"}, {"problem": 42, "code": "#(apply * (range 1 (+ 1 %)))", "user": "5816c5f5e4b0c0e9c07b8380"}, {"problem": 42, "code": "(fn fib\n  [n] \n  (if (= 1 n) 1\n    (* n (fib (- n 1)))))", "user": "55a21f1ce4b0acc240e3151f"}, {"problem": 42, "code": "#(apply * (range 1 (+ 1 %1)))\n\n; #(reduce * (range 1 (inc %)))", "user": "58299e03e4b051871117bf46"}, {"problem": 42, "code": "#(apply * (take % (iterate dec %)))", "user": "58248186e4b051871117bec6"}, {"problem": 42, "code": "(fn fact\r\n[n]\r\n(if (= 1 n) 1\r\n    (* n (fact (dec n)))))", "user": "56f514cee4b046a417f92068"}, {"problem": 42, "code": "(fn [x]\n  (loop [i x\n         acc 1]\n    (if (> i 0)\n        (recur (dec i) (* acc i))\n        acc)))", "user": "5665ef78e4b0e91d5f5c5664"}, {"problem": 42, "code": "#(reduce * (map inc (range %)))", "user": "58254a11e4b051871117bed9"}, {"problem": 42, "code": "(fn [n]\n  (let [in-fn (fn [n acc]\n                (if (<= n 1) acc (recur (- n 1) (* n acc))))]\n    (in-fn n 1)))", "user": "52860baae4b0239c8a67ae09"}, {"problem": 42, "code": ";#(cond (= % 1) 1\n;       :else (loop [x 1 y %]\n;               (if (= y 1)\n;                 x\n;                 (recur (* x y) (dec y)))))\n\n\n#(apply * (range 1 (+ 1 %)))", "user": "582c526ae4b051871117bf88"}, {"problem": 42, "code": "(fn fac [n]\n  (if (= n 1)\n    n\n    (* n (fac (dec n)))))", "user": "5829d588e4b051871117bf4a"}, {"problem": 42, "code": "#(apply * (take % (iterate inc 1)))", "user": "58303fc3e4b051871117c006"}, {"problem": 42, "code": "(fn fact [n]\n\t(if (= n 1) 1 (* n (fact (dec n))))\n)", "user": "525d44bfe4b0cb4875a45d6d"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (+ n 1))))", "user": "58327a08e4b089d5ab817c7c"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "582290b5e4b04b46fc4b0fa0"}, {"problem": 42, "code": "#(reduce * (take % (iterate inc 1)))", "user": "582589b2e4b051871117bedd"}, {"problem": 42, "code": "(fn fact [x]\n  (if (<= x 1)\n    1\n    (* x (fact (- x 1)))))", "user": "5779556de4b0979f8965166e"}, {"problem": 42, "code": "#(reduce * 1 (take % (iterate inc 1)))", "user": "583166c1e4b051871117c025"}, {"problem": 42, "code": "(fn fac [n] \n  (if (= 1 n)\n    1 \n    (* n (fac (dec n)))))", "user": "58334d18e4b089d5ab817c97"}, {"problem": 42, "code": "(fn fun [n]\n  (->>((fn fac [p acc]\n         (concat [acc] (lazy-seq(fac (inc p) (* (inc p) acc))))) 1 1)\n           (drop (dec n))\n           (first)))", "user": "582a5174e4b051871117bf59"}, {"problem": 42, "code": "#(reduce * (range 1N (inc %)))", "user": "582e0afde4b051871117bfd5"}, {"problem": 42, "code": "(fn [x] (reduce (fn [acc n] (* acc n)) 1 (range 1 (+ x 1 ))))", "user": "582dc562e4b051871117bfcb"}, {"problem": 42, "code": "#(reduce * (take % (iterate dec %)))", "user": "57addf3ae4b0b8559636fca4"}, {"problem": 42, "code": "(fn fact [n] (if (> n 1) (* n (fact (- n 1))) 1))", "user": "5835bc73e4b089d5ab817ce9"}, {"problem": 42, "code": "(fn factorial [n]\n  (if (<= n 1)\n    n\n    (* n (factorial (dec n)))))", "user": "58333b19e4b089d5ab817c94"}, {"problem": 42, "code": "(fn f [n]\n  (if (= n 1)\n    1\n    (* n (f (dec n)))))", "user": "5829bc55e4b051871117bf49"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %1)))", "user": "58335c22e4b089d5ab817c9a"}, {"problem": 42, "code": "#(apply * (map inc (take % (range))))", "user": "58375635e4b089d5ab817d14"}, {"problem": 42, "code": "(fn fact [n]\n  (if (zero? n)\n    1\n    (* n (fact (dec n)))))", "user": "57089f82e4b0b0fb43fd06a2"}, {"problem": 42, "code": "(fn factorial [x] (apply * (range 1 (inc x))))", "user": "55a12cb1e4b0acc240e3150d"}, {"problem": 42, "code": "#(apply * (range 1 (+ 1 %)))", "user": "55c66ffee4b0e31453f649c2"}, {"problem": 42, "code": "(fn fact [n]\n  (if (<= n 1)\n    1\n    (* n (fact (dec n)))\n    )\n  )", "user": "580f9585e4b0f478707a05b5"}, {"problem": 42, "code": "#(apply * (take % (iterate dec %)))", "user": "552f6e8ee4b076ab5578f802"}, {"problem": 42, "code": "(fn\n  [my-num]\n  (let [num-list (range 1 (inc my-num))]\n   (reduce * num-list)))", "user": "573de63fe4b05c31a32c081c"}, {"problem": 42, "code": "(fn fib [x] (if (= x 1) 1 (* x (fib (dec x)))))", "user": "56491050e4b0284900eef639"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "58384bc4e4b089d5ab817d27"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "5835cb06e4b089d5ab817cea"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "581fe550e4b04b46fc4b0f4c"}, {"problem": 42, "code": "(fn [i] (reduce * (range 1 (inc i))))", "user": "583a360de4b089d5ab817d4f"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5835a222e4b089d5ab817ce5"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "57235dc4e4b0c5bde472c0e2"}, {"problem": 42, "code": "#(apply * (rest (range (+ 1 %))))", "user": "5822e082e4b04b46fc4b0fa9"}, {"problem": 42, "code": "(fn [n]\n ( loop [prod 1 current n]\n   (cond\n     (= 1 current) prod\n     :else (recur (* prod current) (dec current))\n   )    \n )\n )", "user": "580d1da7e4b0849f6811b72f"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc%)) )", "user": "583667c7e4b089d5ab817cfb"}, {"problem": 42, "code": "(fn [n]\n  (loop [n n acc 1]\n    (if (zero? n)\n      acc\n      (recur (dec n) (* acc n)))))", "user": "5787ce76e4b0ebec4cfb750e"}, {"problem": 42, "code": "(fn fact [n] (* n (reduce * (rest (range n)))))", "user": "583f2e4de4b089d5ab817dcb"}, {"problem": 42, "code": "#(apply * (range 1 (+ % 1)))", "user": "58217fbde4b04b46fc4b0f78"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "583e02fce4b089d5ab817da5"}, {"problem": 42, "code": "(fn fact [x]\n  (if (= x 1) 1 (* x (fact (dec x)))))", "user": "5839f079e4b089d5ab817d48"}, {"problem": 42, "code": "(fn fact [n]\n  (if (= n 1) \n    1\n    (* n (fact (- n 1)))))", "user": "5841b8dde4b089d5ab817e0d"}, {"problem": 42, "code": "(fn factorial [x]\n  (cond \n    (zero? x) 1\n    :else (reduce * (range 1 (inc x)))))", "user": "4ecaa076535d6d7199dd3706"}, {"problem": 42, "code": "(fn [n]\n  (loop [no n\n         fact n]\n    (if (= 1 no)\n      fact\n      (recur (dec no)\n             (* fact (dec no))))))", "user": "5686b0c0e4b0dcc4269f4056"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "58391c94e4b089d5ab817d35"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "583c8bd4e4b089d5ab817d81"}, {"problem": 42, "code": "(fn fact \n   ( [x acc] \n     (if \n       (== x 0)\n       acc\n       (fact (- x 1) (* acc x))))\n   ([x] (fact x 1)))", "user": "4e6a5728535d8ccf87e9fecf"}, {"problem": 42, "code": "(fn fac [n]\n  (loop [total 1 n n]\n    (if (> n 0)\n      (recur (* total n) (dec n))\n      total)))", "user": "5843b231e4b089d5ab817e3d"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "582d7569e4b051871117bfbe"}, {"problem": 42, "code": "(fn fact [n] (reduce * (range 1 (+ n 1))))", "user": "5810b899e4b0f478707a05d8"}, {"problem": 42, "code": "#(reduce * % (range 1 %))", "user": "583e27e2e4b089d5ab817daa"}, {"problem": 42, "code": "#(apply * (rest (range (inc %))))", "user": "58461304e4b089d5ab817e81"}, {"problem": 42, "code": "(fn fact\n  [n]\n  (loop [i (dec n) result n]\n    (if (<= i 1) result (recur (dec i) (* result i)))))", "user": "57e9a77ae4b0bfb2137f5b35"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "582cbf48e4b051871117bfa6"}, {"problem": 42, "code": "(fn factorial [n]\n\t(if (= n 0)\n      1\n      (* n (factorial (- n 1)))))", "user": "5847cfa6e4b089d5ab817eab"}, {"problem": 42, "code": "(fn [arg] (loop [itr 1 rfact 1]                                                           \n                   (if (= itr arg) (* rfact arg) (recur (inc itr) (* rfact itr)) )))", "user": "5804b491e4b0a837a8b30cac"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "583e1558e4b089d5ab817da9"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))\n\n; golf:\n;#(reduce * (range % 0 -1))", "user": "54d341f7e4b0e8a36923e603"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "584917a1e4b089d5ab817ec9"}, {"problem": 42, "code": "#(apply * (take % (iterate inc 1)))", "user": "57dafe97e4b0bd073c20241c"}, {"problem": 42, "code": "(fn f [n] (if (> n 0) (* n (f (dec n))) 1))", "user": "579aff09e4b05b1deef9ade7"}, {"problem": 42, "code": "#(loop [x % y 1]\n   (if (= 0 x)\n     y\n     (recur (dec x) (* y x))\n     )\n   )", "user": "583f23dce4b089d5ab817dc9"}, {"problem": 42, "code": "(fn factorial\n  [n]\n  (cond\n    (= n 1) 1\n    :else (* (factorial (- n 1)) n)))", "user": "55a5e2f7e4b0acc240e31550"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "584dadebe4b0b7285a6f4e44"}, {"problem": 42, "code": "(fn fact[n](reduce * (map inc (range n))))", "user": "5849ac5fe4b089d5ab817ed7"}, {"problem": 42, "code": "(fn fact [x] (if (<= x 1) 1 (* x (fact (dec x)))))", "user": "56e0f485e4b03a7c14b85a1c"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "583ff3afe4b089d5ab817dda"}, {"problem": 42, "code": "(fn [x]\n  (apply * (range 1 (+ x 1))))", "user": "5027f37be4b01614d1633ff1"}, {"problem": 42, "code": "#(apply * (take % (range 1 (inc %))))", "user": "583c4482e4b089d5ab817d7e"}, {"problem": 42, "code": "(fn fact [x]\n  (if (= x 1) 1\n    (* x (fact (dec x)))))", "user": "5845720de4b089d5ab817e68"}, {"problem": 42, "code": "#(apply *' (take %1 (iterate inc 1)))", "user": "570eeca5e4b0b0fb43fd06fb"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "567b2f20e4b05957ce8c61a2"}, {"problem": 42, "code": "(fn [n] (reduce * (range  1 (+ n 1))))", "user": "585030cbe4b0b7285a6f4e78"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "58408643e4b089d5ab817deb"}, {"problem": 42, "code": "#(reduce * (range %1 0 -1))", "user": "583dacc2e4b089d5ab817d9f"}, {"problem": 42, "code": "#(reduce * (conj (rest (range %)) %))", "user": "5832be57e4b089d5ab817c86"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "58524875e4b0b7285a6f4ead"}, {"problem": 42, "code": "(fn fact\n  [n]\n  (loop [acc 1 m (biginteger n)]\n    (if (= m 1)\n      acc\n      (recur (* acc m) (- m 1)))))", "user": "563f4c47e4b08d4f616f5ed2"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (+ n 1))))", "user": "5766fbb7e4b0a07e8fc180b6"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "584f096ae4b0b7285a6f4e5c"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "56b1b59be4b0982f16b37df2"}, {"problem": 42, "code": "(fn [a]\n   (reduce * (range 1 (+ 1 a))))", "user": "58455b05e4b089d5ab817e65"}, {"problem": 42, "code": "(fn just-the-facts [x]\n      (loop [fac x result 1]\n      (cond \n            (zero? fac) result\n            true (recur (dec fac) (* result fac)))))", "user": "5695b86de4b0dcc4269f412b"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "56e87a9ce4b04a395b9a03f0"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "56f9b953e4b07572ad1a88b9"}, {"problem": 42, "code": "(fn [n]\n  (loop [i n\n         f 1]\n    (if (= i 1)\n      f\n      (recur (dec i) (* f i)))\n    )\n  )", "user": "58562083e4b0f14aab7c86eb"}, {"problem": 42, "code": "(fn [n] (loop [cnt n res 1] (if (= cnt 1) res (recur (dec cnt) (* res cnt)))))", "user": "584f5133e4b0b7285a6f4e61"}, {"problem": 42, "code": "(fn in-fact [num]\n        (if (= num 1)\n            1\n            (* num (in-fact (dec num)))))", "user": "58354124e4b089d5ab817cd6"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "566b7a77e4b0a866af6896af"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "57f9b25fe4b0d3187e90094b"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "585481e0e4b07779d46863fe"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "584278e1e4b089d5ab817e19"}, {"problem": 42, "code": "#(reduce * (take % (iterate inc 1)))", "user": "50b25edae4b03ea88043355e"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "585c5b21e4b0f14aab7c8786"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "585e2e77e4b0f14aab7c87ac"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "57d0e185e4b0bd073c202360"}, {"problem": 42, "code": "#(reduce * (take % (iterate inc 1)))", "user": "585d2c1fe4b0f14aab7c8797"}, {"problem": 42, "code": "(fn fac [n] (if (< n 2) 1 (* n (fac (- n 1)))))", "user": "585d40afe4b0f14aab7c8798"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "user": "55507a1ae4b00713264bd9a7"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (+ % 1)))", "user": "57c33eeae4b05aa3c4741cbc"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5853582fe4b0b7285a6f4ec5"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))\n;;#(apply * (take % (iterate inc 1)))", "user": "58566b42e4b0f14aab7c86f4"}, {"problem": 42, "code": "(fn [n]\n    (loop [cnt n acc 1]\n       (if (zero? cnt)\n            acc\n          (recur (dec cnt) (* acc cnt)))))", "user": "5858f0cce4b0f14aab7c8727"}, {"problem": 42, "code": "(fn [number]\n  ((fn inner [result number]\n     (if (= number 1)\n       result\n       (inner (* result number)\n              (dec number))))\n   1 number))", "user": "58637f03e4b0f14aab7c881e"}, {"problem": 42, "code": "(fn fact [x]\n  (reduce *' (range 1 (+ x 1))))", "user": "5852801ee4b0b7285a6f4eb1"}, {"problem": 42, "code": "(fn\n  [n]\n  (reduce #(* %1 %2)\n          1\n          (range 1 (inc n))))", "user": "58543a59e4b07779d46863f5"}, {"problem": 42, "code": "#(apply *' (range 1 (inc %)))", "user": "585e7c60e4b0f14aab7c87b3"}, {"problem": 42, "code": "#(reduce * (map inc (range %)))", "user": "51456858e4b0e88796073408"}, {"problem": 42, "code": "#(loop [result 1 x %] (if (= x 0) result (recur (* result x) (- x 1))))", "user": "55357ab5e4b09218d5f44faf"}, {"problem": 42, "code": "(fn cal-factorials\n\t[n]\n  (->> (range 1 (+ 1 n))\n       (apply *)))", "user": "547bf82de4b0c51c1f4d72e1"}, {"problem": 42, "code": "(fn fact\n  [x]\n  (if (or (= x 0) (= x 1))\n    1\n    (* x (fact (- x 1)))))", "user": "5866b999e4b0f14aab7c886b"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "586615e6e4b0f14aab7c8858"}, {"problem": 42, "code": "(fn[x] (loop [cnt x r 1] (if (zero? cnt) r \n                           (recur (dec cnt) (* r cnt)))))", "user": "54bca097e4b0ed20f4ff6ed4"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "58617a1fe4b0f14aab7c87f0"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "54f26266e4b024c67c0cf8c5"}, {"problem": 42, "code": "(fn factorial [n] (reduce * (range 1 (inc n))))", "user": "57ea4569e4b0bfb2137f5b46"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "585bcd51e4b0f14aab7c8771"}, {"problem": 42, "code": "(fn fact [x]\n  (cond \n    (< x 1)\n      0\n    (or (= x 1) (= x 0))\n      1\n    :else\n      (* x (fact (dec x)))\n  )\n)", "user": "5869a49fe4b0f14aab7c88a9"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5863eda2e4b0f14aab7c8836"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "586b6f13e4b01531a375e959"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "5840c068e4b089d5ab817df8"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "user": "52dc7344e4b09f7907dd13cf"}, {"problem": 42, "code": "(fn [n]\n    (reduce #(* %1 %2) 1 (range 2 (inc n))))", "user": "586b6753e4b01531a375e956"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "4e11b92a535d04ed9115e7cb"}, {"problem": 42, "code": "#(apply * (take % (iterate inc 1N)))", "user": "586bc870e4b01531a375e964"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "54012b48e4b0de5c41848620"}, {"problem": 42, "code": "(fn myfact [n] (reduce * (drop 1 (range (+ 1 n))) ))", "user": "58622733e4b0f14aab7c8803"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "4e7be091535db169f9c796ba"}, {"problem": 42, "code": "(fn [n] (reduce * (take n (iterate inc 1))))", "user": "586a663ce4b0f14aab7c88be"}, {"problem": 42, "code": "(fn fac [n]\n  (reduce * (range 1 (inc n))))", "user": "586c5a34e4b01531a375e97a"}, {"problem": 42, "code": "#(reduce * (take % (iterate inc 1)))", "user": "5857d27de4b0f14aab7c8710"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "5854d1c0e4b07779d468640a"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "586b6a0ae4b01531a375e957"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5458c74de4b01be26fd74623"}, {"problem": 42, "code": "#(reduce * (take % (drop 1 (range))))", "user": "52658b67e4b03e8d9a4a710d"}, {"problem": 42, "code": "(fn [i](reduce * (range 1 (inc i))))", "user": "55597b84e4b0deb715856e36"}, {"problem": 42, "code": "#(apply * (range 1 (inc %1)))", "user": "586e47dee4b01531a375e9a9"}, {"problem": 42, "code": "(fn factorial-fun\n  [num]\n  (loop [counter 1\n         result 1]\n    (if (> counter num)\n      result\n      (recur (inc counter) (* counter result)))))", "user": "57d174ede4b0bd073c20236c"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "586b6d51e4b01531a375e958"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "58731176e4b01531a375ea2a"}, {"problem": 42, "code": "(fn [n] (->> (range 1 (inc n)) (reduce *)))", "user": "584d8724e4b0b7285a6f4e3e"}, {"problem": 42, "code": "#(apply * (range 1 (+ % 1)))", "user": "54d95ce8e4b024c67c0cf74a"}, {"problem": 42, "code": "(fn fact [x]\n  (if (> x 1)\n    (* x (fact (- x 1)))\n    1))", "user": "587294f0e4b01531a375ea1e"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "57fbd83ee4b0d3187e90097b"}, {"problem": 42, "code": "#(loop [x %\n         res []]\n    (if (= x 0)\n      (reduce * res)\n      (recur (- x 1) (conj res x))))", "user": "586b1482e4b0f14aab7c88cf"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "56049986e4b0c80df0ca2662"}, {"problem": 42, "code": "(fn [n]\n  (loop [n n acc 1]\n    (if (= n 1)\n      acc\n      (recur (dec n) (* acc n)))))", "user": "51a132cee4b0b292b01ee3ff"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "56403765e4b08d4f616f5edc"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "58740c18e4b01531a375ea49"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5727031ee4b0c5bde472c12f"}, {"problem": 42, "code": "(fn fac\n  [n]\n  (loop [i n r 1]\n    (if (= i 0)\n      r\n      (recur (dec i) (* r i))\n      ))\n  )", "user": "58745926e4b01531a375ea50"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5872935ce4b01531a375ea1d"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5879d577e4b01531a375ead8"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "572fdecae4b0cd1946bd0f9e"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "563c7f98e4b0bfe05bf11836"}, {"problem": 42, "code": "(fn fact\n  ([n]\n   (fact n 1))\n  ([n v]\n   (if (= n 0)\n     v\n     (recur (- n 1) (* v n)))))", "user": "5875daaee4b01531a375ea74"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "54a35517e4b09f271ff37c68"}, {"problem": 42, "code": "(fn fac [x]\n  (if (= 0 x)\n    1\n    (* x (fac (dec x)))))", "user": "57ea2c91e4b0bfb2137f5b42"}, {"problem": 42, "code": "(fn factorial [n] \n       (if (= n 1) 1 (* n (factorial (dec n)))))", "user": "560d24a2e4b05f002753df34"}, {"problem": 42, "code": "#(reduce * (map inc (range %)))", "user": "5865c8f0e4b0f14aab7c884e"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "58467633e4b089d5ab817e90"}, {"problem": 42, "code": "(fn fact [x]\n   (if (zero? x)\n     1\n     (* x (fact (dec x))))\n   )", "user": "58775496e4b01531a375ea9a"}, {"problem": 42, "code": "(fn my-factorial [x]\n  (if (< x 2)\n    1\n  \t(let [sq (range 2 (inc x))]\n      (apply * sq)\n  \t)\n  )\n)", "user": "569e3175e4b0542e1f8d1484"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "52506e4ce4b0541d1855b82d"}, {"problem": 42, "code": "#(apply * (take % (iterate inc 1)))", "user": "50385746e4b0803468ea2c6d"}, {"problem": 42, "code": "(fn mfact [x] (if (<= x 1) 1 (* x (mfact (dec x)))))", "user": "587c59d1e4b01531a375eb17"}, {"problem": 42, "code": "(fn fac\n  [i] \n  (if (<= i 0) 1 (* i (fac (- i 1)))))", "user": "587e9031e4b052da650a6347"}, {"problem": 42, "code": "(fn [x] (loop [n x\n               acc x] \n          (if (< n 3) \n            acc\n            (recur (dec n) (* acc (dec n)))\n           )                 \n         )  \n  )", "user": "5877e40ee4b01531a375eaab"}, {"problem": 42, "code": "#(reduce * 1 (map inc (range %)))", "user": "579c73fee4b05b1deef9ae08"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %1)))", "user": "5871175de4b01531a375e9f7"}, {"problem": 42, "code": "(fn [n]\n  (loop [acc 1\n         counter 1]\n    (if (= counter n)\n      acc\n      (recur (* acc (inc counter)) (inc counter)))))", "user": "587100d6e4b01531a375e9f0"}, {"problem": 42, "code": "(fn [n]\n   (loop [i n f 1]\n     (if (pos? i)\n       (recur (dec i) (* f i))\n       f)))", "user": "53b42472e4b047364c0444b2"}, {"problem": 42, "code": "#(apply * (take % (iterate dec %)))", "user": "5880e38fe4b0f1effa3b7625"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "587ee260e4b052da650a6353"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "58800fd4e4b0f1effa3b7606"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "4dbd7107535d020aff1edf42"}, {"problem": 42, "code": "(fn f \n  ([x]\n  \t(f x 1))\n  ([x ret]\n   (if (= 1 x)\n     ret\n  \t (recur (dec x) (* ret x)))))", "user": "5883584ae4b0f1effa3b7674"}, {"problem": 42, "code": "#(apply * (take %1 (iterate inc 1)))", "user": "5881335ce4b0f1effa3b762e"}, {"problem": 42, "code": "(fn fact [x] (if (= x 1) 1 (* x (fact (dec x)))))", "user": "58840023e4b0f1effa3b768b"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "588472f1e4b0f1effa3b769a"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "58852909e4b0f1effa3b76af"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "58852b53e4b0f1effa3b76b0"}, {"problem": 42, "code": "#(apply * (range 1 (+ 1 %)))", "user": "587f8393e4b0f1effa3b75f2"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "58844d43e4b0f1effa3b7696"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5882ac4ee4b0f1effa3b7661"}, {"problem": 42, "code": "(fn [x] (reduce * (rest (take (+ x 1) (range)))))", "user": "5886e8bde4b0f1effa3b76ea"}, {"problem": 42, "code": "(fn fac [n]\n  (reduce * (range 1 (+ n 1))))", "user": "5887518ae4b0f1effa3b76f5"}, {"problem": 42, "code": "#(apply * (range 1 (+ % 1)))", "user": "5876c0c5e4b01531a375ea8e"}, {"problem": 42, "code": "(fn  \n  [n] \n   (loop [cnt 2 factorial 1]\n     (if (> cnt n) \n       factorial\n       (recur (inc cnt) (* factorial cnt))\n       )\n   )\n \n )", "user": "5885e90de4b0f1effa3b76c5"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5889dc13e4b0f1effa3b774a"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "57447d1ae4b009280f9f2b3b"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5884e807e4b0f1effa3b76a6"}, {"problem": 42, "code": "(fn\n   [i]\n   (reduce \n     (fn \n       [acc item]\n       (* acc item)) 1 (\n        range 1 \n        (inc i))))", "user": "5885bea8e4b0f1effa3b76bf"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "585dbe41e4b0f14aab7c879f"}, {"problem": 42, "code": "(fn [x]\n  (apply * (range 1 (inc x))))", "user": "585a7cb2e4b0f14aab7c874e"}, {"problem": 42, "code": "(fn fac [n]\n  (if (= n 1)\n    1\n    (* n (fac (dec n)))))", "user": "578d459ee4b0ebec4cfb7567"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "57d031d6e4b0bd073c202354"}, {"problem": 42, "code": "(fn fac\n  ([x]\n   (if (= x 1)\n     x\n     (* x (fac (- x 1)))\n     )\n   )\n  )", "user": "5888b75fe4b0f1effa3b771b"}, {"problem": 42, "code": "#(reduce * (map inc (range %)))", "user": "588e8133e4b00487982d5191"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "576e607ae4b0979f89651579"}, {"problem": 42, "code": ";  #(loop [factor %1 product 1]\n ;  (if (= 1 factor)\n  ;   product\n   ;  (recur (- factor 1) (* factor product))))\n\n\n#(reduce * (range 1 (+ 1 %)))", "user": "588e6a17e4b00487982d518c"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (map (fn [x] (+ 1 x)) (range n)))\n)", "user": "588b4bd0e4b05c141a25607a"}, {"problem": 42, "code": "#(loop [f 1 x %] (if (= 1 x) f (recur (* f x) (dec x))))", "user": "5880d686e4b0f1effa3b7623"}, {"problem": 42, "code": "(fn [x]\n  (loop [sum 1, i 1]\n    (if (= x i)\n      (* sum i)\n      (recur (* sum i) (inc i))\n      )\n    )\n  )", "user": "588fb3a7e4b00487982d51b9"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "54dbc6ebe4b024c67c0cf773"}, {"problem": 42, "code": "(fn factorial [c]\n  (reduce * 1 (range 1 (inc c))))", "user": "57de9169e4b0bd073c202454"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5885cc62e4b0f1effa3b76c1"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (+ n 1))))", "user": "588f500ae4b00487982d51a4"}, {"problem": 42, "code": "#(apply * (drop 1 (range (inc %))))", "user": "58949f8de4b00487982d525e"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "58923efce4b00487982d521c"}, {"problem": 42, "code": "#(loop [cnt % acc 1]\n   (if (zero? cnt)\n     acc\n     (recur (dec cnt) (* cnt acc))))", "user": "552b6ddbe4b0ffed3738f965"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "5862a8a9e4b0f14aab7c880f"}, {"problem": 42, "code": "#(reduce * (take % (iterate inc 1)))", "user": "589037b4e4b00487982d51d0"}, {"problem": 42, "code": "(fn fact[n]\n  (if (< n 1)\n    1\n    (* n (fact (dec n)))))", "user": "5895477fe4b00487982d527c"}, {"problem": 42, "code": "(fn fact [x] (if (= x 1) 1 (* x (fact (dec x)))))", "user": "58896e5ce4b0f1effa3b773e"}, {"problem": 42, "code": "(fn factorial [n]\n  (if (> n 1)\n    (* n (factorial (dec n)))\n    1))", "user": "522724bde4b04e78ff2e19aa"}, {"problem": 42, "code": "(fn f! [n]\n  (if (<= n 0) 1 (* n (f! (dec n)))))", "user": "5888f271e4b0f1effa3b7726"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "4fe49706e4b0e8f79898feb7"}, {"problem": 42, "code": "(fn [num]\n    (loop [result 1 num num]\n        (if (= num 0)\n            result\n            (recur (* result num) (dec num)))))", "user": "5896735fe4b00487982d529d"}, {"problem": 42, "code": "(fn factorial [n]\n  \t(if (= n 1)\n      1\n      (* n (factorial (dec n)))))", "user": "587bead1e4b01531a375eb0d"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5884f77ee4b0f1effa3b76a9"}, {"problem": 42, "code": "#(reduce (fn \n           [acc v]\n           (* acc v)\n           ) (range 1 (inc %)))", "user": "589714cbe4b00487982d52b1"}, {"problem": 42, "code": "#(reduce * (range 1 (+ %1 1)))", "user": "5875f2c5e4b01531a375ea77"}, {"problem": 42, "code": "(fn [n] (reduce *(range 1 (+ 1 n))))", "user": "58983e3fe4b00487982d52ce"}, {"problem": 42, "code": "#(apply * (map inc (range %)))", "user": "589a8dace4b00487982d5311"}, {"problem": 42, "code": "(fn\n  [i]\n  (reduce * (range 1 (+ i 1))))", "user": "586a657de4b0f14aab7c88bd"}, {"problem": 42, "code": "#(reduce * (rest(map inc(range %))))", "user": "53ada652e4b047364c04446d"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "57887de2e4b0ebec4cfb751c"}, {"problem": 42, "code": "(fn [n]\n  (reduce #(* %1 %2) 1 (range 1 (inc n))))", "user": "585a7b05e4b0f14aab7c874d"}, {"problem": 42, "code": "(fn factorial [n] (if (<= n 1) 1 (* n (factorial (- n 1)))))", "user": "58950f29e4b00487982d5270"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "589511dee4b00487982d5272"}, {"problem": 42, "code": "(fn fact [x] (if (= 1 x) 1 (* x (fact (dec x)))))", "user": "5896ade8e4b00487982d52a9"}, {"problem": 42, "code": "#(apply * (take % (iterate inc 1)))", "user": "58987ee9e4b00487982d52d2"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5891bddce4b00487982d5201"}, {"problem": 42, "code": "(fn [x] \n  (apply * (range 1 (inc x))))", "user": "58976bfde4b00487982d52bc"}, {"problem": 42, "code": "(fn [x]\n  (reduce #(* %1 %2) 1 (range 1 (inc x))))", "user": "589cb617e4b00487982d536a"}, {"problem": 42, "code": "(fn [n]\n  (loop [acc 1 number n]\n    (if (= number 1)\n      acc\n      (recur (* number acc) (dec number)))))", "user": "587cbebbe4b01531a375eb24"}, {"problem": 42, "code": "(fn fac [n] \n  (if (zero? n)\n    1\n    (* n (fac (dec n)))))", "user": "589e704ae4b02bd94d917e5e"}, {"problem": 42, "code": "(fn f [n]\n  (if (= 1 n)\n    1\n    (*  n (f (dec n)))))", "user": "5897dda4e4b00487982d52c8"}, {"problem": 42, "code": "#(apply * (map inc (range %) ))", "user": "589dd2cce4b02bd94d917e48"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "52ea7d3ae4b09f7907dd14bf"}, {"problem": 42, "code": "(fn my-fac\n  [n]\n  (loop [n n\n         result 1]\n    (if (= n 1)\n      result\n      (recur (- n 1) (* n result)))))", "user": "5899c54de4b00487982d52fa"}, {"problem": 42, "code": "#(reduce * (rest (range (inc %))))", "user": "58988cbbe4b00487982d52d7"}, {"problem": 42, "code": "#(reduce * (take % (iterate inc 1)))", "user": "58a2b57fe4b02bd94d917ede"}, {"problem": 42, "code": "(fn factorial [n] (if (zero? n) 1 (* n (factorial (dec n)))))", "user": "58a0fc33e4b02bd94d917ea3"}, {"problem": 42, "code": "#(loop [n % prod 1] (if (= 1 n) prod (recur (dec n) (* n prod))))", "user": "58a47197e4b01a0c0b2328f9"}, {"problem": 42, "code": "(fn [n] (loop [m     n\n               total 1]\n          (if (= m 1) total\n                      (recur (dec m) (* total m)))))\n\n;(fn [x]\n;  (reduce * (range 1 (inc x))))", "user": "577bcbd9e4b0d3393e5deb1b"}, {"problem": 42, "code": "#(reduce * (take % (iterate inc 1)))", "user": "589ec900e4b02bd94d917e65"}, {"problem": 42, "code": "#(loop [n %1 acc 1]\n   (if (= 1 n) acc\n     (recur (- n 1) (* acc n))))", "user": "58a31ecee4b02bd94d917ee7"}, {"problem": 42, "code": "(fn [end] (reduce * (map #(+ 1 %) (range end))))", "user": "589e0024e4b02bd94d917e4e"}, {"problem": 42, "code": "#(loop [i % r 1]\n             (if (= i 1)\n               r\n               (recur (dec i) (* r i))\n               )\n             )", "user": "584aa803e4b089d5ab817ee9"}, {"problem": 42, "code": "(fn fact [n]\n  (if (> n 1)\n    (* n (fact (- n 1)))\n    1))", "user": "58a5a099e4b01a0c0b232918"}, {"problem": 42, "code": "(fn\n  [base-number]\n  (let [factorial-range (range 1 (inc  base-number))]\n    (if (or (= '(0) factorial-range) (= '() factorial-range))\n      1\n      (reduce (fn [fact-acc range-elem]\n                (if (= fact-acc range-elem)\n                  fact-acc\n                  (* fact-acc range-elem)))\n              (reverse factorial-range)))))", "user": "58a413b5e4b02bd94d917f07"}, {"problem": 42, "code": "(fn fac [n]\n  (reduce * (range 1 (inc n))))", "user": "580d2788e4b0849f6811b730"}, {"problem": 42, "code": "#(reduce * (rest (range (inc %))))", "user": "5892a5fde4b00487982d5228"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "589f0087e4b02bd94d917e6d"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5760682ee4b08062f99a4e94"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))\n\n;(fn [x]\n;  (letfn [(f-helper\n;            [x res]\n;            (if (= x 1)\n;              res\n;              (f-helper (dec x) (* res x))))]\n;    (f-helper x 1)))", "user": "5893c64ce4b00487982d524b"}, {"problem": 42, "code": "(fn fact [n]\n  (if (or (zero? n) (= 1 n))\n    n\n    (* n (fact (dec n)))))", "user": "58a953dae4b01a0c0b232968"}, {"problem": 42, "code": "(fn [x] (apply * (range 1 (inc x))))", "user": "58a1f61ae4b02bd94d917ecd"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (+ 1 x))))", "user": "58a9e872e4b01a0c0b232973"}, {"problem": 42, "code": "(fn foo [n]\n  (if (= 1 n)\n    n\n    (* n (foo (dec n)))))", "user": "507eed82e4b06ce648bcdbfe"}, {"problem": 42, "code": "(fn factorial [x] (if (> x 0) (* x (factorial (- x 1))) 1))", "user": "58a5c5c2e4b01a0c0b23291b"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "58ad4349e4b0ebc645576c9d"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "58a216e8e4b02bd94d917ed1"}, {"problem": 42, "code": "(fn [x]\n  (reduce * (range 1 (inc x))))", "user": "5833a6d8e4b089d5ab817ca2"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "58b06b7ce4b0ebc645576cdc"}, {"problem": 42, "code": "#(reduce * (take % (map inc (range))))", "user": "5895385fe4b00487982d5279"}, {"problem": 42, "code": "(fn [n]\n  (apply * (range 1 (inc n))))", "user": "5854580ce4b07779d46863f9"}, {"problem": 42, "code": "#(apply * (range 1 (+ 1 %)))", "user": "58b106f9e4b0ebc645576cf0"}, {"problem": 42, "code": "(fn [n] (reduce * (drop-last (reverse (range (inc n))))))", "user": "58ac513fe4b0005cfeb1a746"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "56391b7ce4b0bfe05bf117ef"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "58791973e4b01531a375eac5"}, {"problem": 42, "code": "#(apply * (range 1 (inc %1)))", "user": "588e4e05e4b00487982d5188"}, {"problem": 42, "code": "(fn fac [n]\n  (reduce * (take n (iterate inc 1))))", "user": "58b18ba0e4b0ebc645576cfa"}, {"problem": 42, "code": "(fn fac\n  ([x y] (cond (= x 1) y\n               :else (recur (dec x) (* y x))))\n  ([x]\n   (fac x 1)))", "user": "58a3ba31e4b02bd94d917eff"}, {"problem": 42, "code": "#(reduce * (map inc (range %)))", "user": "58a0fd0be4b02bd94d917ea4"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "58b51e05e4b0ebc645576d4c"}, {"problem": 42, "code": "(fn fact\n  ([x]\n  (fact x 1))\n  ([x acc]\n  (if (zero? x)\n    acc\n    (recur (dec x) (* acc x)))))", "user": "58a822e4e4b01a0c0b232950"}, {"problem": 42, "code": "(fn fact [x]\n (loop [y x z 1]\n   (if (> y 0)\n     (recur (dec y)\n            (* z y)\n      )\n     z\n    )\n  )\n )", "user": "58b48db1e4b0ebc645576d3e"}, {"problem": 42, "code": "#(apply *(take % (iterate inc 1)))", "user": "58951903e4b00487982d5274"}, {"problem": 42, "code": "(fn fac [n] (reduce * (range 1 (inc n))))", "user": "58b2f085e4b0ebc645576d15"}, {"problem": 42, "code": "(fn fib [num]\n  (if (= 1 num) \n    1\n    (* num (fib (- num 1)))))", "user": "56c44c34e4b05cc29241ee96"}, {"problem": 42, "code": "(fn [n] \n  (loop [iterator 1 acc 1]\n    (if (= iterator (+ n 1))\n      acc\n      (recur (inc iterator) (* acc iterator)))))", "user": "58b54852e4b0ebc645576d52"}, {"problem": 42, "code": "#(reduce * (take % (iterate inc 1)))", "user": "58b6d93ce4b0ebc645576d6c"}, {"problem": 42, "code": "(fn [n]\n    (apply * (range 2 (inc n))))", "user": "58b81490e4b0ebc645576d8c"}, {"problem": 42, "code": "(fn facc [n]\n  (cond\n    (= n 1) 1\n    (> n 1) (* n (facc (dec n)))))", "user": "5881d1c2e4b0f1effa3b7644"}, {"problem": 42, "code": "(fn [n]\n  (loop [i 2\n         r 1]\n    (if (> i n)\n      r\n      (recur\n        (inc i)\n        (* r i)))))", "user": "58ba8e7ce4b0888cdc949ce8"}, {"problem": 42, "code": "(fn [num]\n  (loop [n num\n         acc 1]\n  (if (= 0 n)\n    acc\n    (recur (dec n) (* acc n)))))", "user": "56e24e68e4b03a7c14b85a34"}, {"problem": 42, "code": "(fn [n]\n    (loop [acc 1, n n]\n          (if (= n 0) \n              acc\n              (recur (* acc n) (dec n)))))", "user": "56e11125e4b03a7c14b85a1f"}, {"problem": 42, "code": "(fn [n]\n  (reduce (fn [a b] (* a b)) (range 1 (inc n))))", "user": "58bb218be4b0888cdc949cf4"}, {"problem": 42, "code": "(fn [num]\n    (let [nums (range 1 (+ num 1))]\n      (reduce #(* %1 %2) nums)))", "user": "58bbcbc8e4b0888cdc949d00"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "58b80ec1e4b0ebc645576d89"}, {"problem": 42, "code": "#(apply * (range 2 (inc %)))", "user": "58a44a14e4b01a0c0b2328f2"}, {"problem": 42, "code": "#(reduce\n    (fn [f n]\n      (* f n))\n    1\n    (range 1 (+ %1 1)))", "user": "5890799be4b00487982d51d6"}, {"problem": 42, "code": "(fn [init]\n\t(loop [a init res 1]\n\t(if (= a 0)\n\t\tres\n\t\t(recur (dec a) (* res a)))))", "user": "58b985e0e4b0888cdc949ccc"}, {"problem": 42, "code": "#(apply * (range 1 (+ %1 1)))", "user": "58765038e4b01531a375ea7e"}, {"problem": 42, "code": "#(apply * (map inc (range %)))", "user": "58c1b4f5e4b021aa9917ed01"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "57762e67e4b0979f89651630"}, {"problem": 42, "code": "#(reduce * (take (- % 1) (iterate dec %)))", "user": "58bc3202e4b0888cdc949d0b"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "58bef424e4b021aa9917eccb"}, {"problem": 42, "code": "(fn fac\n  [x]\n  (if (= 1 x)\n    1\n    (* x (fac (dec x)))))", "user": "4fe899a6e4b07c9f6fd12c54"}, {"problem": 42, "code": "(fn [n]\n   (if (= n 0)\n     1\n     (loop [nn 1 res 1]\n       (if (> nn n)\n        res\n        (recur (inc nn) (* nn res ))\n        )\n      )\n     )\n  )", "user": "589771f9e4b00487982d52bd"}, {"problem": 42, "code": "(fn myfun [n]\n  (if (> n 1)\n    (* n (myfun (dec n)))\n    n))", "user": "589ac5a2e4b00487982d5318"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "58ac14ebe4b0005cfeb1a740"}, {"problem": 42, "code": "(fn [x] \n  (loop [cur x\n         sum 1]\n    (if (< cur 1)\n      sum\n      (recur (dec cur) (* sum cur)))))", "user": "57c314f3e4b05aa3c4741cba"}, {"problem": 42, "code": "(fn [x](reduce * (range 1 (inc x))))", "user": "589c0475e4b00487982d5351"}, {"problem": 42, "code": "#(loop [fact 1 x %]\n   (if (= x 0)\n     fact\n     (recur (* fact x) (dec x))))", "user": "58b989dbe4b0888cdc949ccd"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "58809253e4b0f1effa3b7618"}, {"problem": 42, "code": "(fn go [x] (if (= x 1) 1 (* x (go (- x 1)))))", "user": "557f748ae4b05c286339e0df"}, {"problem": 42, "code": "(fn [x] (apply * (range 1 (inc x))))", "user": "58bc6a88e4b0888cdc949d16"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (inc x))))", "user": "57b7de74e4b0fbc9809a27d4"}, {"problem": 42, "code": "(fn fack [n] (reduce * (range 1 (inc n))))", "user": "58c5a08be4b021aa9917ed40"}, {"problem": 42, "code": "#(loop [acc 1 n %] \n   (if (zero? n) \n     acc \n     (recur (* n acc) (dec n))))", "user": "58c7a80fe4b021aa9917ed7b"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "58c04ca5e4b021aa9917ece6"}, {"problem": 42, "code": "#(apply * (range 1 (+ 1 %)))", "user": "58c8e0aae4b021aa9917ed95"}, {"problem": 42, "code": "(fn fact [n] (if (zero? n) 1 (* n (fact (dec n)))))", "user": "58c2df0ae4b021aa9917ed17"}, {"problem": 42, "code": "(fn my-f [x]\n\t( if (= x 1)\n      1\n\t  (* (my-f (dec x)) x) )   \n)", "user": "58c99858e4b021aa9917eda7"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))\n;(fn [n] (reduce * (range 1 (inc n))))", "user": "58bc8cbee4b0888cdc949d1b"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "58ca8a1de4b03c36ff7e5835"}, {"problem": 42, "code": "#(loop [x % res 1]\n  (if (= x 0)\n    res\n    (recur (dec x) (* res x))))", "user": "55228c3ce4b0882d96d091a2"}, {"problem": 42, "code": "(fn f2 [n]\n    (if (zero? n)\n        1\n        (* n (f2 (- n 1)))))", "user": "53882352e4b0640c7a9a5898"}, {"problem": 42, "code": "(fn [x] \n  (apply * (range 1 (+ 1 x))))", "user": "58bfa57ae4b021aa9917ecd8"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "56a80d8fe4b07966d5a8a06a"}, {"problem": 42, "code": "(fn [n] \n  (loop [res n curr (- n 1)]\n    (if (zero? curr)\n      res\n      (recur (* curr res) (- curr 1)))))", "user": "56351709e4b0bfe05bf117c2"}, {"problem": 42, "code": "(fn fact [n]\n  (if (<= n 0)\n    1\n    (* n (fact (dec n)))))", "user": "58ca613de4b021aa9917edb7"}, {"problem": 42, "code": "(fn fac ([n] (fac n (dec n))) ([n count] (if (zero? count) n (recur (* n count) (dec count)))))", "user": "588d224ae4b00487982d516c"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "58c4b11ae4b021aa9917ed2c"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "58c66990e4b021aa9917ed53"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "58cfbd7ae4b03c36ff7e58ba"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "57b35ecbe4b0fbc9809a277e"}, {"problem": 42, "code": "(fn fac [n]\n  (if (= n 1)\n    1\n    (* n (fac (- n 1)))))", "user": "58cf00c8e4b03c36ff7e58ac"}, {"problem": 42, "code": "#(reduce * (take % (iterate dec %)))", "user": "58868940e4b0f1effa3b76de"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "58b86162e4b0ebc645576d97"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %1)))", "user": "5841872be4b089d5ab817e06"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "573102bbe4b0cd1946bd0fbb"}, {"problem": 42, "code": "(fn factorial [n]\n  (if (= n 1)\n    n\n    (* n (factorial (- n 1)))))", "user": "58cb7525e4b03c36ff7e584a"}, {"problem": 42, "code": "#(reduce * % (next (range %)))", "user": "5755e66ee4b02ea1147992cf"}, {"problem": 42, "code": "(fn[cnt] (last (last (#(take % (iterate (fn [[nxt accum]] [(inc nxt) (* (inc nxt) accum)]) [1 1])) cnt))))", "user": "58d27bcae4b03c36ff7e58fe"}, {"problem": 42, "code": "(fn fac [n]\n  (if (= n 0) \n    1\n    (* n (fac (- n 1)))))", "user": "587a3babe4b01531a375eae2"}, {"problem": 42, "code": "(fn [n]\n  (apply * (range 1 (inc n))))", "user": "58c5ad55e4b021aa9917ed42"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "58969076e4b00487982d52a2"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "58d737cee4b03c36ff7e5982"}, {"problem": 42, "code": "#(reduce (fn [a b] (* a b)) (range 1 (+ 1 %)))", "user": "56f3d21ae4b046a417f92055"}, {"problem": 42, "code": "(fn [x]\n     ((fn [fac cnt]\n         (if (= cnt 0)\n             fac\n             (recur (* fac cnt) (- cnt 1))))\n           x (- x 1)))", "user": "58dadf46e4b0a4d5acaab66b"}, {"problem": 42, "code": "(fn [number]\n(loop [n number x 1]\n(if (= n 1)\nx\n(recur (dec n) (* x n)))))", "user": "58dc5773e4b0a4d5acaab69a"}, {"problem": 42, "code": "(fn fact \n  ([n]\n   (fact n 1))\n  ([n acc]\n   (case n\n    1 acc\n     (fact (dec n) (* acc n)))))", "user": "58d4e73ce4b03c36ff7e594d"}, {"problem": 42, "code": "(fn fac [num]\n  \t(if (zero? num) \n      \t1\n      \t(* num (fac (dec num))))\n  \t)", "user": "5703a557e4b08d47c97781f4"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "58acce0ae4b0005cfeb1a754"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "58dcf11ae4b0a4d5acaab6af"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "58d71ef5e4b03c36ff7e597f"}, {"problem": 42, "code": "(fn factorial [n]\n  (reduce * (range 1 (inc n))))", "user": "58dcb8cde4b0a4d5acaab6a7"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "588906a9e4b0f1effa3b772a"}, {"problem": 42, "code": "(fn factorial-fun\n  ([number] (factorial-fun number 1))\n  ([number accumulator]\n   (if (<= number 1)\n     accumulator\n     (recur (dec number) (* accumulator number)))))", "user": "58daae01e4b0a4d5acaab664"}, {"problem": 42, "code": "(fn fac [n]\n  (if (zero? n) 1\n    (* n (fac (dec n)))))", "user": "56326995e4b0bfe05bf117a3"}, {"problem": 42, "code": "#(loop [in %, out 1] (if (= 0 in) out (recur (dec in) (* in out))))", "user": "58cff8b0e4b03c36ff7e58c0"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "58dcae01e4b0a4d5acaab6a4"}, {"problem": 42, "code": "(fn [x]\n  (loop [n x\n         s 1]\n    (if (= n 0)\n      s\n      (recur (dec n) (* n s))\n      )))", "user": "58d4f44ee4b03c36ff7e594f"}, {"problem": 42, "code": ";;(fn fc \n;;  ;\"fact. with tail recursion\"\n;;  ([x] (fc x 1)) \n;;  ([x r] \n;;   (if (< x 2) \n;;     r \n;;     (recur (dec x) (* r x))\n;;     ) \n;;   )\n;;  )\n\n#(reduce * (range 1 (inc %)))", "user": "58d28c70e4b03c36ff7e5901"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "585a9a16e4b0f14aab7c8752"}, {"problem": 42, "code": "(fn [x] \n    (loop [n x result 1]\n          (if (<= n 1)\n              result\n              (recur (dec n) (* n result)))))", "user": "58d3d6a3e4b03c36ff7e592b"}, {"problem": 42, "code": "#(reduce * (next (range (inc %))))", "user": "58dbfb24e4b0a4d5acaab690"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "585d9558e4b0f14aab7c879c"}, {"problem": 42, "code": "(fn factorial [n]\n  (if (< n 2)\n    1\n    (* (factorial (- n 1)) n)))", "user": "58de563fe4b0a4d5acaab6e3"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "58dd21a9e4b0a4d5acaab6b3"}, {"problem": 42, "code": "#(reduce * (map inc (range %)))", "user": "58c93089e4b021aa9917ed9b"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "58e256e1e4b005f69f193c90"}, {"problem": 42, "code": "(fn factorial [n]\n  (reduce * n (range (dec n) 1 -1)))", "user": "55b4fa46e4b01b9910ae2983"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "58bc0531e4b0888cdc949d07"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "58e37946e4b005f69f193cae"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "58e2e11ce4b005f69f193ca0"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "58e762d3e4b056aecfd47ccc"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5885eb2de4b0f1effa3b76c6"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "58cbdc3be4b03c36ff7e5856"}, {"problem": 42, "code": "(fn factorial [n]\n  (if (= n 1)\n    1\n  \t(* (factorial (- n 1)) n)))", "user": "58dd20dae4b0a4d5acaab6b2"}, {"problem": 42, "code": "(fn factorial [x] (if (= x 1) 1 (* x (factorial (- x 1)))))", "user": "589c7c8ce4b00487982d5361"}, {"problem": 42, "code": "(fn fac [num]\n  (if (= num 1)\n    1\n    (* num (fac (dec num)))))", "user": "58e45a2ce4b056aecfd47c69"}, {"problem": 42, "code": "(fn fact [n]\n    (if (<= n 1) n (* n (fact (- n 1)))))", "user": "57168a0de4b07c98581c3afb"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (inc x))))", "user": "58e6e624e4b056aecfd47cc1"}, {"problem": 42, "code": "#(reduce * (take % (iterate inc 1)))", "user": "58e58ae9e4b056aecfd47c9a"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "58e7229fe4b056aecfd47cc4"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "58cba946e4b03c36ff7e584f"}, {"problem": 42, "code": "#(reduce * (take % (iterate inc 1)))", "user": "57828e95e4b0d36ec5835e96"}, {"problem": 42, "code": "(fn  [n]\n  (loop [p 1 i n]\n    (println (str \"* \" i))\n    (if (<= i 0)\n      p\n      (recur (* p i) (dec i)))))", "user": "58d6caf5e4b03c36ff7e5975"}, {"problem": 42, "code": "(fn myFact [x] (if (= x 0) 1 (* (myFact (dec x)) x)))", "user": "58e5f995e4b056aecfd47ca5"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "58e5fbbae4b056aecfd47ca6"}, {"problem": 42, "code": "(fn fac [n] (if (= n 1) n (* n (fac (- n 1)))))", "user": "58c505dae4b021aa9917ed32"}, {"problem": 42, "code": "(fn [n]\n   (loop [i 1 r 1]\n     (if (= i n)\n       r\n       (recur (inc i) (*' r (inc i))))))", "user": "57d8a1dee4b0bd073c2023ee"}, {"problem": 42, "code": "(fn [x]\n  (if (= 0 x)\n    1;;0\u7684\u9636\u4e58\u662f1\n    (loop [r 1 i x ]\n      (if (< i 1)\n        r\n        (recur (* r i) (dec i) )))))", "user": "5823d3e6e4b051871117beb8"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "58e5e585e4b056aecfd47ca2"}, {"problem": 42, "code": "(fn [n] (reduce #(* %1 %2) 1 (rest (range (inc n)))))", "user": "58acca5ee4b0005cfeb1a753"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "58ebae90e4b056aecfd47d44"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "58ec8c7ae4b056aecfd47d64"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5794fd7be4b0e215f87e8476"}, {"problem": 42, "code": "#(reduce * (take % (iterate dec %)))", "user": "58eba5cce4b056aecfd47d41"}, {"problem": 42, "code": "(fn [p] \n        (reduce * (vec(range 1 (inc p)))))", "user": "58e325f3e4b005f69f193ca7"}, {"problem": 42, "code": "(fn fac \n  ([n]\n  \t(fac n 1))\n  ([n acc]\n   \t(if (= n 1)\n      acc\n      (recur (dec n) (* n acc)))))", "user": "58934052e4b00487982d523a"}, {"problem": 42, "code": "(fn factorial [n]\n  (apply * (range 1 (inc n))))", "user": "58ed713de4b056aecfd47d84"}, {"problem": 42, "code": "(fn [x]\n  (reduce * (range 1 (inc x))))", "user": "57fd085ce4b0d3187e9009a9"}, {"problem": 42, "code": "(fn factorial [n]\n         (loop [i n\n                acc 1]\n           (if (= 1 i)\n             acc\n             (recur (dec i) (* i acc)))))", "user": "58c4492be4b021aa9917ed27"}, {"problem": 42, "code": "(fn factorial-fun [n]\n  (reduce #(* %1 %2) (range 1 (inc n))))", "user": "58ee9b14e4b056aecfd47db0"}, {"problem": 42, "code": "(fn fact [n]\n    (cond\n      (= n 0) 1\n      (= n 1) 1\n      :else (* n (fact (dec n)))\n      )\n    )", "user": "58ec1e63e4b056aecfd47d54"}, {"problem": 42, "code": "(fn fact [n]\n  (reduce * (range 1 (+ n 1))))", "user": "58edaa3be4b056aecfd47d89"}, {"problem": 42, "code": "(fn [n] (reduce * 1 (range 1 (inc n))))", "user": "58aa8083e4b01a0c0b232985"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5782018de4b0d36ec5835e8e"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (inc x))))", "user": "58eed4c5e4b056aecfd47db7"}, {"problem": 42, "code": "#(reduce * (take % (iterate inc 1)))", "user": "587c77afe4b01531a375eb1b"}, {"problem": 42, "code": "#(loop [x 1\r\n       accum x]\r\n  (if (= x %1)\r\n    accum\r\n    (recur (inc x)\r\n           (* accum (inc x)))))", "user": "58f2e8fbe4b0438e51c2ce94"}, {"problem": 42, "code": "(fn factorial [n]\n  (if (= n 1)\n    1\n    (* n (factorial (dec n)))))", "user": "58ee5371e4b056aecfd47da8"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "53a2a259e4b0f1fc7453882c"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "58f5689de4b0438e51c2ced7"}, {"problem": 42, "code": "(fn fac [n]\n  (apply * (range 1 (inc n))))", "user": "58ef4db9e4b056aecfd47dc6"}, {"problem": 42, "code": "(fn factorial [n] (if (= n 0) 1 (* n (factorial (- n 1)))))", "user": "589f37e0e4b02bd94d917e79"}, {"problem": 42, "code": "(fn [n]\n  (letfn [(fact [n]\n                (if (= 1 n)\n                  1\n                  (* n (fact (dec n)))))]\n    (fact n)))", "user": "58f273d9e4b08e1cf3471d01"}, {"problem": 42, "code": "(fn factorial [n]\n  (reduce * (range 1 (inc n))))", "user": "58e965b3e4b056aecfd47d08"}, {"problem": 42, "code": "#(apply * (range 1 (+ % 1)))", "user": "58f45ea0e4b0438e51c2cebc"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "5796d3ebe4b039eba2ecb0ee"}, {"problem": 42, "code": "(fn factorial [n]\n  (if (or (= n 0) (= n 1))\n    1\n    (* n (factorial (dec n)))))", "user": "51a0370ae4b0b292b01ee3ef"}, {"problem": 42, "code": "#(->> (iterate inc 1)\n     (take %)\n     (reduce *))", "user": "578bbd3ee4b0ebec4cfb754e"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "58ee0bb6e4b056aecfd47d97"}, {"problem": 42, "code": "(fn fact [n]\n  (if (<= n 1) 1\n      (* n (fact (dec n)))))", "user": "51a3be77e4b0e77c4ca60bf8"}, {"problem": 42, "code": "(fn [x] (reduce * (take x (iterate inc 1))))", "user": "58f1971ce4b08e1cf3471cee"}, {"problem": 42, "code": "(fn [x] (apply * (range 1 (+ x 1))))", "user": "576ffcb9e4b0979f89651592"}, {"problem": 42, "code": "#(reduce * (map inc (range %)))", "user": "58ac1135e4b0005cfeb1a73f"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "589f2cefe4b02bd94d917e75"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "58e14302e4b005f69f193c78"}, {"problem": 42, "code": "(fn [x]\n   (->> (range 1 (inc x))\n        (apply *)\n        ))", "user": "58447708e4b089d5ab817e4b"}, {"problem": 42, "code": "(fn [k] \n  (loop [n 1 k k]\n    (if-not (> k 0) n\n      (recur (* n k) (dec k)))))", "user": "58f44c07e4b0438e51c2ceb7"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "53dbca12e4b094d41abdfef6"}, {"problem": 42, "code": "(fn ! [n]\n  (apply * (range 1 (inc n))))", "user": "57ffd1a9e4b0a837a8b30c2a"}, {"problem": 42, "code": "#(apply * (take % (iterate inc 1)))", "user": "58fc92c5e4b0438e51c2cf9a"}, {"problem": 42, "code": "(fn fact [x]\n  (if (= x 1)\n    1\n    (* x (-> x dec fact))))", "user": "58fe460de4b0438e51c2cfcc"}, {"problem": 42, "code": "#(apply * (range 2 (inc %)))", "user": "58f7dfe6e4b0438e51c2cf1f"}, {"problem": 42, "code": "(fn fact [n] (if (<= n 0) 1 (* n (fact (dec n)))))", "user": "58cfb517e4b03c36ff7e58b9"}, {"problem": 42, "code": "(fn [n] (reduce #(* % %2) (range 1 (inc n))))", "user": "58d48df8e4b03c36ff7e5941"}, {"problem": 42, "code": "(fn factorial [n]\n  (if (= n 1)\n    n\n    (* (factorial (dec n)) n)))", "user": "578fc3d2e4b0ebec4cfb759b"}, {"problem": 42, "code": "(fn fac [n]\n  (if (== n 1)\n    1\n    (* n (fac (dec n)))))", "user": "58f8d79ee4b0438e51c2cf39"}, {"problem": 42, "code": "(fn factorial\n  ([num]\n   (factorial 1 num))\n  ([product num]\n   (if (= num 1)\n     product\n     (recur (* product num) (dec num)))))", "user": "58db097fe4b0a4d5acaab66f"}, {"problem": 42, "code": "(fn f [x] \n  (if (= x 0) \n    1 \n    (* x (f (dec x)))))", "user": "574b4f3ee4b02ea114799207"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5901158de4b0438e51c2d039"}, {"problem": 42, "code": "#(reduce * (take % (iterate inc 1)))", "user": "58bcea23e4b0888cdc949d23"}, {"problem": 42, "code": "(fn mfac [n] (->> (inc n) (range) (rest) (reduce *)))", "user": "5900d5cde4b0438e51c2d02e"}, {"problem": 42, "code": "(fn [n]\n  (loop [i n\n         accum 1]\n    (if (>= 1 i)\n      accum\n      (recur (dec i) (* accum i))\n    )\n  )\n)", "user": "59073e0fe4b047aa04b19950"}, {"problem": 42, "code": "(fn [n] \n  (loop [x 1 fact 1]\n    (if (> x n) \n      fact\n      (recur (inc x) (* fact x)))))", "user": "58dc81d1e4b0a4d5acaab69e"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "58fdbf59e4b0438e51c2cfbc"}, {"problem": 42, "code": "(fn fac [x] (if (= x 1) 1 (* x (fac (- x 1)))))", "user": "59075e3be4b047aa04b19955"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "59035914e4b022d14a2aafaa"}, {"problem": 42, "code": "(fn [n] ((fn [n r] (if (= n 0) r (recur (dec n) (* n r)))) n 1))", "user": "58fdd7b7e4b0438e51c2cfc0"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "589b98fae4b00487982d533c"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5552780ce4b0deb715856df4"}, {"problem": 42, "code": "#(reduce * (map inc (range %)))", "user": "59074b7ce4b047aa04b19951"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "58aa3f02e4b01a0c0b23297d"}, {"problem": 42, "code": "(fn [n] (apply * (range 1 (inc n))))", "user": "584948fce4b089d5ab817ecc"}, {"problem": 42, "code": "#(apply * (range 1 (+ % 1)))", "user": "590b3aeae4b047aa04b199d0"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "590b055ae4b047aa04b199c9"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "58d5c245e4b03c36ff7e5964"}, {"problem": 42, "code": "(fn [x] (reduce #(* %1 %2) (range 1 (+ x 1))))", "user": "58f9fde7e4b0438e51c2cf56"}, {"problem": 42, "code": "(fn factorial [n] (apply * (range 1 (inc n))))", "user": "58eac340e4b056aecfd47d24"}, {"problem": 42, "code": "#(reduce * (range 1(inc %)))", "user": "590d0c31e4b047aa04b199fb"}, {"problem": 42, "code": "#(reduce (fn [a c] (* a c)) 1 (range 1 (+ % 1)))", "user": "565131b3e4b0f29ec07d2e88"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "590d0bc8e4b047aa04b199fa"}, {"problem": 42, "code": "(fn factorial\n  [target]\n  (loop [n target\n         accumulator 1]\n        (if (zero? n)\n          accumulator\n          (recur (dec n)\n                 (* accumulator n)))))", "user": "59076082e4b047aa04b19956"}, {"problem": 42, "code": "(fn fact \n  ([n] (fact n 1))\n  ([n v] (if (= n 1) v (recur (- n 1) (* n v)))))", "user": "590e588ce4b047aa04b19a23"}, {"problem": 42, "code": "#(reduce * (range % 1 -1))", "user": "5673881fe4b05957ce8c6120"}, {"problem": 42, "code": "(fn [n]\n  (letfn [(fact [acc n]\n    (if (= n 1)\n      acc\n      (recur (* acc n) (- n 1))))]\n    (fact 1 n)))", "user": "587c48cce4b01531a375eb16"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "58ebd10de4b056aecfd47d49"}, {"problem": 42, "code": "(fn fact [x] (if (= x 0)\n               1\n               (* x(fact (- x 1))\n                )))", "user": "59129074e4b0163c97b36ef1"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5640b135e4b08d4f616f5ee8"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "59096794e4b047aa04b1999e"}, {"problem": 42, "code": "(fn [x]\n   (reduce * (range 1 (inc x))))", "user": "591072e0e4b0163c97b36ebc"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "59156f0be4b0163c97b36f3d"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %1)))", "user": "5910a43de4b0163c97b36ebf"}, {"problem": 42, "code": "#(if(= % 1)\n   1\n   (reduce * (range 1 (inc %)))\n   )", "user": "53d5d43ce4b0e771c302544d"}, {"problem": 42, "code": "(fn [x]\n    (loop [n x f 1]\n        (if (= n 1)\n            f\n            (recur (dec n) (* f n)))))", "user": "52ced458e4b07d0d72b27394"}, {"problem": 42, "code": "#(loop [acc 1 c %] (if (= c 1) acc (recur (* acc c) (dec c))))", "user": "551daeb9e4b030e6a24d00df"}, {"problem": 42, "code": "#(reduce * (range % 0 -1))", "user": "59199cc3e4b09b4ee5954bc8"}, {"problem": 42, "code": "(fn [n]\n  (loop [i n\n         val 1]\n         (if (= i 1)\n          val\n          (recur (dec i) (* i val))\n          )\n  )\n)", "user": "5822b578e4b04b46fc4b0fa4"}, {"problem": 42, "code": "(fn fac [n]\n  (loop [n n acc 1]\n    (if (< n 2)\n      acc\n      (recur (- n 1) (* acc n)))))", "user": "5908b36be4b047aa04b19982"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5919d209e4b09b4ee5954bcc"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "5916412ee4b09b4ee5954b87"}, {"problem": 42, "code": "#(reduce * (range 2 (inc %)))", "user": "59032c0fe4b022d14a2aaf9f"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "591ac8ece4b09b4ee5954bdd"}, {"problem": 42, "code": "(fn this [x] \n  (cond \n   (= x 1) 1\n   :else (* x (this (- x 1)))\n   )\n  )", "user": "59165082e4b09b4ee5954b88"}, {"problem": 42, "code": "(fn [N] (reduce * (range 1 (inc N))))", "user": "58fb7d7ae4b0438e51c2cf7a"}, {"problem": 42, "code": "(fn [x](loop [sum 1 cnt x](if (= cnt 0) sum (recur (* cnt sum) (dec cnt)))))", "user": "591c2f4ee4b09b4ee5954bfc"}, {"problem": 42, "code": "(fn bla\n  [n]\n  (if (= n 0)\n    1\n    (* n (bla (dec n)))))", "user": "58dfce9fe4b0a4d5acaab723"}, {"problem": 42, "code": "#(->> % range (map inc) (reduce *))", "user": "4f29d9abe4b0d6649770a034"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5866df28e4b0f14aab7c886d"}, {"problem": 42, "code": "(fn [n]\n  (apply * (range 1 (inc n))))", "user": "591cbc30e4b09b4ee5954c08"}, {"problem": 42, "code": "(fn f [n]\n  (if (= n 1)\n    1\n    (* n (f (dec n)))) )", "user": "5921a080e4b09b4ee5954c77"}, {"problem": 42, "code": "(fn [n] (reduce * (take-while #(> % 0) (iterate dec n))))", "user": "591f05b4e4b09b4ee5954c42"}, {"problem": 42, "code": "(fn [n]\n  (reduce * \n          (range 1 (+ n 1))))", "user": "59225498e4b09b4ee5954c8c"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "52f762ece4b047fd55836fc2"}, {"problem": 42, "code": "(fn [s]\n  (first (peek (vec (take s (iterate (fn [x]\n                                     (let [[a b] x]\n                                       [(* a b) (+ b 1)])) [1 2]))))))", "user": "591f5124e4b09b4ee5954c45"}, {"problem": 42, "code": "(fn [x]\n  (loop [fact 1 rem x]\n   (if (= 1 rem)\n       fact\n       (recur (* rem fact) (dec rem)))))", "user": "5911aa1de4b0163c97b36ed8"}, {"problem": 42, "code": "(fn [x]\n  (reduce * \n          (range 1 (inc x)))\n )", "user": "5922a513e4b026ae38521286"}, {"problem": 42, "code": "(fn [input]\n(reduce * (rest(range (+ 1 input))))\n)", "user": "59228b00e4b026ae38521281"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "58ef93ece4b056aecfd47dca"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (inc x))))", "user": "4db1b3951254ad5b4805fa6f"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "590253e3e4b0438e51c2d055"}, {"problem": 42, "code": "(fn [value]\n  (reduce * (range 1 (+ value 1))))", "user": "57614a42e4b0994c1922fb85"}, {"problem": 42, "code": "(fn [x] (reduce * (take x (iterate #(dec %) x))))\n; #(reduce * (range 1 (inc %)))", "user": "58d2af83e4b03c36ff7e5907"}, {"problem": 42, "code": "(fn [x] (loop [cur 1 ff 1] (if (> cur x) ff (recur (+ 1 cur) (* cur ff)))))", "user": "5924009ce4b072a2710fce45"}, {"problem": 42, "code": "(fn fact [x]\n   (if (= x 1)\n     1\n     (* x\n        (fact (- x 1)))))", "user": "59273eefe4b072a2710fcec6"}, {"problem": 42, "code": "#(apply * (range 1 (inc %1)))", "user": "58ffaddee4b0438e51c2cffe"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "59258aa7e4b072a2710fce74"}, {"problem": 42, "code": "(fn [n] (reduce * (range 2 (inc n))))", "user": "59234753e4b0a390037439ef"}, {"problem": 42, "code": "#(reduce * (take %1 (iterate inc 1)))", "user": "5929a5f2e4b072a2710fcf09"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "592af6eee4b072a2710fcf2c"}, {"problem": 42, "code": "(fn fac [n] (if (= 1 n) 1 (* n (fac (dec n)))))", "user": "591d9870e4b09b4ee5954c1b"}, {"problem": 42, "code": "(fn factorial [x] (if (= x 0) 1 (* (factorial (dec x)) x)))", "user": "56ffeafee4b08d47c97781c2"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "592518bfe4b072a2710fce65"}, {"problem": 42, "code": "(fn fct [n] \n  (if (= n 1) 1\n    (* n (fct (dec n)))))", "user": "58b1f51de4b0ebc645576d05"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "557c6ca6e4b05c286339e0c4"}, {"problem": 42, "code": "#(let [f (fn fac [x] (if (< x 2)\n                       1\n                       (* x (fac (dec x)))))] (f %))", "user": "5929bdf6e4b072a2710fcf0c"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "58db362be4b0a4d5acaab675"}, {"problem": 42, "code": "(fn fact [n] (if (= n 1) 1 (* n (fact (dec n)))))", "user": "5933b736e4b072a2710fd05d"}, {"problem": 42, "code": "(fn [x] \n     (let [y (+ x 1)]\n       (apply * (drop-last(reverse (range y))))))", "user": "59301509e4b072a2710fcfd6"}, {"problem": 42, "code": "(fn [n]\n  (loop [i n\n         r 1]\n    (if (<= i 1)\n      r\n      (recur (dec i) (* i r)))))", "user": "5918db70e4b09b4ee5954bbb"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (inc x))))", "user": "59368ccae4b02506e01a297a"}, {"problem": 42, "code": "(fn [x] (reduce * (conj (range 1 x) x)))", "user": "59368efbe4b02506e01a297d"}, {"problem": 42, "code": "#(reduce * (range % 0 -1))", "user": "5936fabce4b02506e01a298c"}, {"problem": 42, "code": "(fn fac [n]\n  (if (= n 1)\n    n\n    (* n (fac (dec n)))))", "user": "5931e498e4b072a2710fd024"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (inc x))))", "user": "59368ccae4b02506e01a2979"}, {"problem": 42, "code": "(fn [x]\n   (reduce * (rest (range (inc x)))))", "user": "59385840e4b02506e01a29c9"}, {"problem": 42, "code": "#(reduce * (take % (drop 1 (range))))", "user": "5923554ee4b0a390037439f2"}, {"problem": 42, "code": "(fn [numb]\n  (loop [tmpn numb n numb]\n    (if (> n 1)\n      (recur (* tmpn (- n 1)) (dec n))\n      tmpn)))", "user": "59369515e4b02506e01a297e"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %1)))", "user": "58ee2c14e4b056aecfd47d9e"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5935b010e4b04f87174def55"}, {"problem": 42, "code": "(fn fact [x]\n  (cond\n   (= x 1) 1\n   :else (* x (fact (dec x)))))", "user": "584d99c5e4b0b7285a6f4e42"}, {"problem": 42, "code": "#(apply * (range 1 (+ 1 %)))", "user": "591a6c9fe4b09b4ee5954bd6"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "57a4f5cae4b0a966079561f0"}, {"problem": 42, "code": "(fn fac\n  [n]\n  (if (<= n 1) \n    1 \n    (* n (fac (dec n)))))", "user": "59395adfe4b02506e01a29fb"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5913fde8e4b0163c97b36f13"}, {"problem": 42, "code": "(fn fact [n] (if (zero? n) 1 (* n (fact (dec n)))))", "user": "593c71cbe4b069cdc2982b90"}, {"problem": 42, "code": "(fn faktorial [x]\n  (if (<= x 1) 1 (* x  (faktorial (- x 1)))))", "user": "593910eae4b02506e01a29f4"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "593f95d8e4b069cdc2982be3"}, {"problem": 42, "code": "#(->> % (+ 1) (range) (drop 1) (reduce *))", "user": "592dbbd5e4b072a2710fcf7f"}, {"problem": 42, "code": "#(apply * (range 1 (+ 1 %)))", "user": "59251947e4b072a2710fce69"}, {"problem": 42, "code": "(fn f\n  [n]\n  (if (= n 1)\n    1\n    (* n (f(dec n)))))", "user": "59390a35e4b02506e01a29f3"}, {"problem": 42, "code": "(fn f [x]\n  (loop [x x, res 1]\n    (if (= x 1)\n      res\n      (recur (dec x) (* res x)))))", "user": "593d6793e4b069cdc2982ba6"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "594307c0e4b060784b3b7920"}, {"problem": 42, "code": "(fn factorial [n] (reduce * (range 1 (inc n))))", "user": "592518e8e4b072a2710fce67"}, {"problem": 42, "code": "(fn factorial [n]\n  (reduce * (range 1 (inc n))))", "user": "592518f0e4b072a2710fce68"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "59449aa2e4b0b03edd0057ad"}, {"problem": 42, "code": "(fn fac [n]\n   (if (= n 0)\n     1 (* n (fac (- n 1)))))", "user": "5938bca5e4b02506e01a29eb"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (+ n 1))))", "user": "58eadeafe4b056aecfd47d28"}, {"problem": 42, "code": "(fn factorial-fun [n]\n  (if (= n 1)\n    1\n    (* n (factorial-fun (dec n)))))", "user": "54bd9a60e4b0ed20f4ff6ee3"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "57dd651ee4b0bd073c202441"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "592519cfe4b072a2710fce6b"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "594783bee4b07ddc2dafada1"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "59419bdfe4b060784b3b78f7"}, {"problem": 42, "code": "(fn [x] \n  (loop [x x\n         f 1]\n    (if (= x 0)\n      f\n      (recur (- x 1) (* f x)))))", "user": "593744abe4b02506e01a299b"}, {"problem": 42, "code": "(fn fact\n  [n]\n  (if (= n 1)\n    1\n    (* n (fact (dec n)))))", "user": "593e4b1fe4b069cdc2982bbb"}, {"problem": 42, "code": "#(reduce * (rest (range (inc %))))", "user": "59438419e4b060784b3b7929"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "593f88dce4b069cdc2982be2"}, {"problem": 42, "code": "(fn fact [n]\n  (if (< n 2) 1\n    (* n (fact (dec n)))\n  )\n)", "user": "5943abb6e4b060784b3b792b"}, {"problem": 42, "code": "#(apply * (range 1 (+ 1 %)))", "user": "592518cde4b072a2710fce66"}, {"problem": 42, "code": "#(loop [n %1 r 1]\n   (if (= n 1)\n     r\n     (recur (dec n) (* n r))\n     )\n   )", "user": "594263cbe4b060784b3b790a"}, {"problem": 42, "code": "#(reduce * (take % (iterate inc 1)))", "user": "59473563e4b07ddc2dafad97"}, {"problem": 42, "code": "(fn [x]\n  (reduce * (range 1 (inc x))))", "user": "593dde1be4b069cdc2982baf"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (inc x))))", "user": "593dfe60e4b069cdc2982bb1"}, {"problem": 42, "code": "(fn fact [n] (loop [i n ret 1] (if (= i 0) ret (recur (- i 1) (* ret i)))))", "user": "59468de7e4b07ddc2dafad88"}, {"problem": 42, "code": "(fn faktorial\n  [x]\n  (cond (<= x 1)\n        1\n        (> x 1)\n        (* x (faktorial (dec x)))))", "user": "593e01cde4b069cdc2982bb3"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %1)))", "user": "57a497e8e4b0a966079561e4"}, {"problem": 42, "code": "(fn [x]\n  (loop [in 1\n         out 1]\n    (if (> x (dec in))\n      (recur (inc in) (* out in))\n      out)))", "user": "594bd637e4b07ddc2dafae41"}, {"problem": 42, "code": "(fn fac [i]\n  (loop [cnt i acc 1]\n    (if (= 1 cnt)\n      acc\n      (recur (dec cnt) (* cnt acc)))))", "user": "594bb203e4b07ddc2dafae36"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "594bc912e4b07ddc2dafae3e"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5054d243e4b0b1b9d1860eb5"}, {"problem": 42, "code": "#(loop [ x %1  res 1] (  if (> x  1) (recur  (dec x) (* res x) )   res  ))", "user": "594e3723e4b07ddc2dafaea8"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "594880ade4b07ddc2dafadc2"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "58a32c21e4b02bd94d917eeb"}, {"problem": 42, "code": "#(reduce * (range 1 ( inc %)))", "user": "59497f51e4b07ddc2dafaddd"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5938bae2e4b02506e01a29ea"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "55216aa5e4b0882d96d09192"}, {"problem": 42, "code": "(fn fact\n  ([n] (fact 1 n))\n  ([a n] (if (= n 1)\n           a\n           (recur (* a n) (dec n)))))", "user": "5069d8c5e4b01dc6af13f838"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5948adffe4b07ddc2dafadc6"}, {"problem": 42, "code": "(fn fun [n]\n  (reduce * (range 1 (inc n))))", "user": "5950f0bfe4b066ee0a44ae9f"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %1)))", "user": "594c0bd7e4b07ddc2dafae56"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "58b0bbc5e4b0ebc645576ce6"}, {"problem": 42, "code": "(fn fac [n]\n  (if (> n 0)\n    (* n (fac (dec n)))\n    1))", "user": "5953bdb6e4b066ee0a44aeed"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "583f1533e4b089d5ab817dc8"}, {"problem": 42, "code": "(fn [to]\n  (loop [res 1\n         cur 1]\n    (if (= cur to)\n      res\n      (let [newcur (inc cur)\n            newres (* res newcur)]\n        (recur newres newcur)))))", "user": "592334c7e4b0a390037439ee"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (range 1 (+ 1 n))))", "user": "59503c5de4b066ee0a44ae8e"}, {"problem": 42, "code": "(fn [n] (loop [m n t 1] (if (= m 1) t (recur (- m 1) (* t m)))))", "user": "5914ee74e4b0163c97b36f32"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (+ n 1))))", "user": "594a5559e4b07ddc2dafadf8"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "591e0782e4b09b4ee5954c25"}, {"problem": 42, "code": ";;#(reduce * (range 1 (+ % 1)))\n(fn fact [x] (if (= x 1) 1 (* x (fact (- x 1)))))", "user": "594bc7d6e4b07ddc2dafae3d"}, {"problem": 42, "code": "#(apply * (range 1 (+ 1 %)))", "user": "56b2652ae4b0982f16b37e04"}, {"problem": 42, "code": "#(reduce * (range 2 (inc %)))", "user": "5956c6dae4b066ee0a44af61"}, {"problem": 42, "code": "#(apply * (range % 1 -1))", "user": "57262710e4b0c5bde472c120"}, {"problem": 42, "code": "(fn fact [n]\n  (reduce * (range 1 (inc n))))", "user": "5958a0c8e4b066ee0a44af8c"}, {"problem": 42, "code": "(fn [n]\n  (loop [n n\n         res 1]\n    (if (= n 1)\n      res\n      (recur (dec n) (* res n)))))", "user": "5954108ae4b066ee0a44aef4"}, {"problem": 42, "code": "#(apply * (take % (iterate dec %)))", "user": "5958cef6e4b066ee0a44af94"}, {"problem": 42, "code": "#(if(< % 2) 1 (reduce (fn [nm rnge](* nm rnge)) 1 (range 1 (+ 1 %))))", "user": "59406b94e4b069cdc2982bfd"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "590088bfe4b0438e51c2d026"}, {"problem": 42, "code": "(fn [n]\n  (apply * (range 1 (inc n))))", "user": "5947c6a6e4b07ddc2dafada7"}, {"problem": 42, "code": "#(apply * (take %1 (iterate inc 1)))", "user": "593db05ae4b069cdc2982bab"}, {"problem": 42, "code": "#(apply * (range 1 (inc %1)))", "user": "594bb36ae4b07ddc2dafae37"}, {"problem": 42, "code": "(fn fact [x] (if (= x 1) x (* x (fact (dec x)))))", "user": "55df2752e4b050e68259b3ed"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "595a885be4b066ee0a44afc4"}, {"problem": 42, "code": "#(apply * (range 2 (inc %)))", "user": "594cb88be4b07ddc2dafae6e"}, {"problem": 42, "code": "#(reduce * % (next (range %)))", "user": "595b864ee4b066ee0a44afdc"}, {"problem": 42, "code": "(fn my-factorial [n] (reduce * (range 1 (inc n))))", "user": "5959c72ae4b066ee0a44afac"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "59551e04e4b066ee0a44af20"}, {"problem": 42, "code": "(fn fact [n] (if (= n 0) 1 (* n (fact (- n 1)))))", "user": "595ad1efe4b066ee0a44afcb"}, {"problem": 42, "code": "(fn fa [n] (if (= 1 n) 1 (* n (fa (dec n)))))", "user": "595bbab7e4b066ee0a44afe0"}, {"problem": 42, "code": "(fn fac [n]\n  (cond\n   (= 1 n) n\n   :else (* n (fac (dec n)))\n   )\n  )", "user": "595d0897e4b066ee0a44b00f"}, {"problem": 42, "code": "#(reduce * (rest (range (inc %))))", "user": "58969420e4b00487982d52a4"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5915a0a5e4b09b4ee5954b73"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %1)))", "user": "58cf8f97e4b03c36ff7e58b7"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "595a3b41e4b066ee0a44afb7"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "54961073e4b0b312c081ff62"}, {"problem": 42, "code": "#(apply * (range 1 (+ % 1)))", "user": "59566d1de4b066ee0a44af54"}, {"problem": 42, "code": "(fn [x]\n  (reduce * (range 1 (inc x))))", "user": "51dafedee4b09f6bc204eee2"}, {"problem": 42, "code": "(fn [x]\n  (->> (range 1 (+ 1 x))\n       (reduce *)))", "user": "595ebf46e4b066ee0a44b04f"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "58db3c5ae4b0a4d5acaab677"}, {"problem": 42, "code": "(fn [e] (reduce * (range 1 (inc e))))", "user": "595e20e2e4b066ee0a44b037"}, {"problem": 42, "code": "#(reduce * (take % (iterate inc 1)))", "user": "58cc390ce4b03c36ff7e5866"}, {"problem": 42, "code": "#(apply * (range 1 (+ % 1)))", "user": "595eba88e4b066ee0a44b04e"}, {"problem": 42, "code": "#(reduce * (take % (iterate inc 1)))", "user": "595fe942e4b066ee0a44b075"}, {"problem": 42, "code": "(fn [x]\n  (reduce *\n    (range 1 (inc x))))", "user": "5954edcbe4b066ee0a44af15"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "5961e8d0e4b066ee0a44b0a8"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "58cd65fae4b03c36ff7e5889"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "524ac3d1e4b09eba1c0223a0"}, {"problem": 42, "code": "#(apply * (take % (iterate dec %)))", "user": "595d224de4b066ee0a44b016"}, {"problem": 42, "code": "#(reduce * (drop 1 (range (inc %))))", "user": "58fc52cee4b0438e51c2cf95"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "58ee84e5e4b056aecfd47dab"}, {"problem": 42, "code": "(fn a ([n] (a 1 n))\n      ([fact n]\n        (if (= n 1) fact \n                    (recur (* fact n) (dec n)))))", "user": "594bc16be4b07ddc2dafae39"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "58ea5bdce4b056aecfd47d1b"}, {"problem": 42, "code": "(fn factorial [n] \n   (if (= n 1) 1\n     (* n (factorial (dec n)))))", "user": "4e6a23d0535d8ccf87e9fea0"}, {"problem": 42, "code": "(fn factoriel [x] (reduce * x (range 1 x)))", "user": "595d2041e4b066ee0a44b014"}, {"problem": 42, "code": "#(first (nth (iterate (fn [[x y]] [(* x y) (inc y)]) [1 1]) %))", "user": "59638af5e4b066ee0a44b0cc"}, {"problem": 42, "code": "(fn [n]\n (->> (range (+ n 1))\n     (rest)\n     (apply *)))", "user": "5911c8e1e4b0163c97b36edc"}, {"problem": 42, "code": ";(fn fact [n]\n;  (if (= n 0)\n;    1\n;    (* n (fact (dec n)))))\n#(apply * (range 1 (inc %)))", "user": "595fd721e4b066ee0a44b06e"}, {"problem": 42, "code": "(fn [n]\n  (let [x (range 1 (inc n))]\n    (reduce * 1 x)))", "user": "595c02a9e4b066ee0a44afeb"}, {"problem": 42, "code": "#(reduce * (take % (iterate inc 1)))", "user": "5954eef0e4b066ee0a44af17"}, {"problem": 42, "code": "(fn fac\n  [x]\n  (if (or (= x 1) (= x 0))\n    1\n    (* x (fac (- x 1)))))", "user": "595bc925e4b066ee0a44afe2"}, {"problem": 42, "code": "(fn fac [n]\n  (reduce * (range 1 (inc n))))", "user": "59663e77e4b069c0a1a1979f"}, {"problem": 42, "code": "(fn [x] (reduce * (map inc (range x))))", "user": "53dad484e4b0e771c30254ac"}, {"problem": 42, "code": "(fn abc [x]\n  (if (not= x 1) (* x (abc (- x 1))) x))", "user": "5965eb8de4b069c0a1a19796"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "55c4e30be4b0e31453f649a6"}, {"problem": 42, "code": "#(loop [i % res 1]\n   (if (= i 0)\n   res\n   (recur (dec i) (* res i))))", "user": "5964c614e4b069c0a1a19770"}, {"problem": 42, "code": "(fn [x]\n  (loop [n x, product 1]\n\t(if (> n 1)\t\n\t(recur (dec n) (* n product))\n      product)))", "user": "59644d2ae4b069c0a1a19764"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (+ x 1))))", "user": "59636b49e4b066ee0a44b0c5"}, {"problem": 42, "code": "(fn [x]\n  (let [y (range 1 (inc x))]\n    (reduce * (reverse y))))", "user": "55842bd7e4b05c286339e11c"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "59692530e4b069c0a1a197e4"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "590b8607e4b047aa04b199db"}, {"problem": 42, "code": "(fn fac [n]\n  (if (= n 1)\n    n\n    (* n (fac (dec n)))))", "user": "595ed97fe4b066ee0a44b051"}, {"problem": 42, "code": "(fn [n] (reduce * (take n (iterate dec n))))", "user": "59699da7e4b069c0a1a197eb"}, {"problem": 42, "code": "(fn [num] (loop [r 1 n num]\n            (cond\n             (zero? n) r\n             :else (recur (* r n) (dec n)\n                          ))))", "user": "5455a6d3e4b0e397800069e2"}, {"problem": 42, "code": "(fn fact [x]\n  (cond (= x 0) 1\n        (= x 1) 1\n        :else (* x (fact (dec x)))))", "user": "59648ce1e4b069c0a1a19769"}, {"problem": 42, "code": "#(loop [x % a 1] (if (<= x 1) a (recur (dec x) (* a x))))", "user": "51d55795e4b01da06753aa8f"}, {"problem": 42, "code": "#(reduce * 1 (take % (iterate inc 1)))", "user": "596c1f25e4b069c0a1a19825"}, {"problem": 42, "code": "(fn [n] (reduce #(* %1 %2) (range 1 (inc n))))", "user": "595fd77ce4b066ee0a44b06f"}, {"problem": 42, "code": "(fn [value] (reduce * (range 1 (+ 1 value))))", "user": "593c653de4b069cdc2982b8f"}, {"problem": 42, "code": "(fn [x]\n  (loop [x x result x]\n     (if (= x 1) result\n         (recur (dec x) (* result (dec x))))))", "user": "596aaeefe4b069c0a1a19808"}, {"problem": 42, "code": "(fn [number]\n  (loop [n number\n         result 1]\n    (if (zero? n)\n      result\n      (recur\n        (dec n)\n        (* result n)))))", "user": "5954cea2e4b066ee0a44af0a"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5926c254e4b072a2710fceb8"}, {"problem": 42, "code": "(fn f [n] (if (= n 1) 1 (* n (f (- n 1)))))", "user": "596caee3e4b069c0a1a19837"}, {"problem": 42, "code": "(fn fakk [n]\n  (if (= n 0)\n    1\n    (* n (fakk (dec n)))))", "user": "59708e38e4b01722bebd4c65"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "595a4fb8e4b066ee0a44afba"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "59636b6de4b066ee0a44b0c6"}, {"problem": 42, "code": "(fn\n  [n]\n  (loop [a n res 1]\n    (if (zero? a)\n      res\n      (recur (dec a) (* res a)))))", "user": "59636cc2e4b066ee0a44b0c7"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "596f6683e4b069c0a1a19877"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5398d042e4b0b51d73faaf00"}, {"problem": 42, "code": "(fn factorial [target]\n (loop [count target acumul 1]\n  (if (<= count 1)\n      acumul\n      (recur (- count 1 ) (* acumul count)))))", "user": "58ffbabce4b0438e51c2d002"}, {"problem": 42, "code": "(fn [x]\n  (reduce * (range 1 (inc x))))", "user": "59636ec9e4b066ee0a44b0c8"}, {"problem": 42, "code": "#(apply * (range 1 (+ 1 %)))", "user": "59636f66e4b066ee0a44b0c9"}, {"problem": 42, "code": "(fn  [nth]\n  (loop [n nth result 1]\n    (if (zero? n)\n    result\n    (recur (dec n) (* result n)))))", "user": "53de4bdae4b0d874e779ae32"}, {"problem": 42, "code": "(fn factorial [n] (if (<= n 1) 1 (* n (factorial (dec n))) ))", "user": "5972fcf6e4b01722bebd4c92"}, {"problem": 42, "code": "(fn fact [a]\n  (if (= 0 a) \n    1 \n    (* a (fact (dec a)))))", "user": "5797d3d2e4b039eba2ecb106"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (range 1 (+ n 1))))", "user": "59733c91e4b01722bebd4c9b"}, {"problem": 42, "code": "(fn fac [x] \n  (if (zero? x) 1 (* x (fac (dec x)))))", "user": "58866b4fe4b0f1effa3b76d4"}, {"problem": 42, "code": "#(apply *' (range 1 (inc %)))", "user": "59538a2fe4b066ee0a44aee8"}, {"problem": 42, "code": "(comp (partial apply *) rest range inc)", "user": "58dac8b1e4b0a4d5acaab668"}, {"problem": 42, "code": "(fn fac[n]\n  (if (=  1 n)\n    1\n    (* n (fac (dec n)))))", "user": "5978305be4b01722bebd4d03"}, {"problem": 42, "code": "#(->> (range 1 (inc %)) (reduce *))", "user": "59738d98e4b01722bebd4ca1"}, {"problem": 42, "code": "#(reduce *(rest (take (inc %) (range (inc %)))))", "user": "5979be51e4b02382a38ad1d6"}, {"problem": 42, "code": "(fn factorial [n]\n  (loop [start n acc []]\n    (if (= start 0)\n      (reduce * acc)\n      (recur\n        (dec start) (conj acc start)))))", "user": "5964f9b0e4b069c0a1a19778"}, {"problem": 42, "code": "(fn fac [n] (if (= n 1) 1 (* n (fac (dec n)))))", "user": "5978b4c9e4b01722bebd4d13"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5974d2ede4b01722bebd4cb6"}, {"problem": 42, "code": "(fn [n]\n  (->> n\n   (inc)\n   (range 1)\n   (reduce *)))", "user": "5935151ee4b072a2710fd084"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5978c844e4b01722bebd4d18"}, {"problem": 42, "code": "(fn \n  [x]\n  (loop [x x res 1]\n    (if (> x 0)\n      (recur (dec x) (* x res))\n      res)))", "user": "590620e1e4b047aa04b1992c"}, {"problem": 42, "code": "(fn fact [n] (if (> n 0) (* n (fact (dec n))) 1))", "user": "53ef3adfe4b0742d9025b0c9"}, {"problem": 42, "code": "(fn [n] (reduce #(* %1 %2) (range 1 (inc n))))", "user": "5979cd36e4b02382a38ad1d8"}, {"problem": 42, "code": "#(loop [x %       \n        memo 1]\n   (if (> x 1)\n     (recur (dec x) (* memo x))\n     memo))", "user": "55f344afe4b06e875b46ce5a"}, {"problem": 42, "code": "(fn fact [n] (if (= n 1) 1 (* n (fact (- n 1)))))", "user": "59804b60e4b021a7a535fdcf"}, {"problem": 42, "code": "#(apply * (rest (range (inc %))))", "user": "5980dcd5e4b021a7a535fddb"}, {"problem": 42, "code": "(fn factorial [n] (reduce * (range 1 (inc n))))", "user": "597f8c93e4b0dbe32238d0c1"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5974b12be4b01722bebd4cb1"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "593ab583e4b069cdc2982b57"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "597dcb0ce4b0dbe32238d0a2"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "user": "5980f91ae4b021a7a535fddd"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "58821372e4b0f1effa3b764d"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "597f8984e4b0dbe32238d0bf"}, {"problem": 42, "code": "(fn [x] (reduce * 1 (range 1 (inc x))))", "user": "597d0e43e4b0dbe32238d095"}, {"problem": 42, "code": "(fn f [n] (if (> n 1) (* n (f (dec n))) 1))", "user": "591addcee4b09b4ee5954be1"}, {"problem": 42, "code": "; #(second (last (take (inc %1) (iterate (fn [n] [(inc (first n)) (* (second n) (first n))]) [1 1]))))\n; #(-> %1 inc (take (iterate (fn [n] [(inc (first n)) (* (second n) (first n))]) [1 1])) last second)\n#(reduce * (range 1 (inc %)))", "user": "59837909e4b021a7a535fe16"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5982d82be4b021a7a535fe05"}, {"problem": 42, "code": "(fn [x] (reduce * (take x (iterate inc 1))))", "user": "59346d29e4b072a2710fd077"}, {"problem": 42, "code": "(fn aaa [n]\n  (if (> n 1)\n    (* n (aaa (- n 1)))\n    n\n    )\n  )", "user": "598588f2e4b021a7a535fe65"}, {"problem": 42, "code": "(fn fact [n] (cond\n    (= 1 n) 1\n    :else (* n (fact (dec n)))\n))", "user": "598085e6e4b021a7a535fdd3"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))\n\n;\n; Should have used apply instead of reduce\n;", "user": "594266cfe4b060784b3b790b"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "597768d0e4b01722bebd4cee"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "598876fee4b021a7a535feb7"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "598ad666e4b02b9968b84ce1"}, {"problem": 42, "code": "(fn fib [n]\n  (if (= n 0)\n    1\n    (* n (fib (dec n)))))", "user": "5884f377e4b0f1effa3b76a8"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "597a4277e4b02382a38ad1e2"}, {"problem": 42, "code": "(fn fact [n] (if (= n 1) 1 (* n (fact (dec n)))))", "user": "598dc40ce4b02b9968b84d2c"}, {"problem": 42, "code": "(fn fac [n]\n  (if (zero? n)\n    1\n    (* (fac (dec n)) n)))", "user": "598ab445e4b02b9968b84ce0"}, {"problem": 42, "code": "#(loop [counter % result 1]\n   (if (< 1 counter)\n     (recur (dec counter) (* result counter))\n     result))", "user": "5989ee61e4b021a7a535fed7"}, {"problem": 42, "code": "(fn fact [n]\n  (if (< n 2)\n    n\n    (* n (fact (- n 1)))))", "user": "5952d75ce4b066ee0a44aed4"}, {"problem": 42, "code": "#(loop [result 1 x %1] (if (= x 1) result (recur (* result x) (dec x))))", "user": "56f5d0efe4b046a417f92078"}, {"problem": 42, "code": "(fn [n]\n\t(loop [i 1 target n acc (bigint 1)]\n\t\t(if (> i target)\n\t\t\tacc\n\t\t\t(recur (+ i 1) target (* acc (bigint i))))))", "user": "598af379e4b02b9968b84ce6"}, {"problem": 42, "code": "#(reduce * (map inc (range %)))", "user": "59902fede4b0fcebec4de86d"}, {"problem": 42, "code": "#(apply *' (range 1 (inc %)))", "user": "58d9772de4b0a4d5acaab63c"}, {"problem": 42, "code": "(fn [n] (loop [i n acc 1]\n           (if (= 1 i)\n             acc\n             (recur (dec i) (* acc i)))\n\n           ))", "user": "598d22b1e4b02b9968b84d1a"}, {"problem": 42, "code": "(fn [x']\n  (loop [x x', acc 1]\n    (if (= x 0) acc\n    \t\t\t(recur (dec x) (* acc x)))))", "user": "55916764e4b0604b3f94d57b"}, {"problem": 42, "code": "(fn [x] (loop [i x res 1]\n          (if(> i 0) (recur (dec i) (* res i)) res)))", "user": "5971763fe4b01722bebd4c72"}, {"problem": 42, "code": "(fn foo1 [n] (loop\n            [x 1 mun 1]\n            (if (= x (+ n 1) )\n              mun\n              (recur\n                (inc x)\n                (let [mun (* x mun)] mun)\n                ))))", "user": "598d0dc3e4b02b9968b84d18"}, {"problem": 42, "code": "(fn [x] \n  (reduce * (range 1 (inc x))))", "user": "5992bcb2e4b0866487ed0d7b"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5990fcb9e4b0866487ed0d5b"}, {"problem": 42, "code": "(fn fact [x]\n\t(if (> x 1)\n\t\t(* x (fact (dec x)))\n\t\t1\n\t)\n)", "user": "598d746ae4b02b9968b84d23"}, {"problem": 42, "code": "(fn [n] \n  (loop [fact 1 n n] \n    (if (> n 1)\n      (recur (* fact n) (dec n))\n      fact\n     )))", "user": "598debf0e4b02b9968b84d2e"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (rest (range (+ n 1)))))", "user": "5907a736e4b047aa04b1995e"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5991d2fae4b0866487ed0d68"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "596d630ae4b069c0a1a19846"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "56478a82e4b0284900eef61e"}, {"problem": 42, "code": "(fn [n]\n    (reduce * (rest (range (+ n 1)))))", "user": "59932f49e4b0b211ea3aaaae"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5991d9cbe4b0866487ed0d69"}, {"problem": 42, "code": "(fn [x]\n  (loop [i x acc 1]\n    (if (= i 1)\n      acc\n      (recur (- i 1) (* i acc))\n \t)\n   )\n  )", "user": "5996b419e4b07157cc8daab5"}, {"problem": 42, "code": "(fn [n]\n  (loop [i n prod 1]\n    (if (zero? i)\n      prod\n      (recur (dec i) (* prod i)))))", "user": "5965a773e4b069c0a1a1978a"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "59971e2de4b07157cc8daacc"}, {"problem": 42, "code": "#(reduce * (take % (iterate inc 1)))", "user": "59874ff6e4b021a7a535fea1"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "user": "59946856e4b0b211ea3aaac7"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "59944e73e4b0b211ea3aaac2"}, {"problem": 42, "code": "(fn [num]\n  (loop [n 1\n         ret num]\n    (if (= num n)\n      ret\n      (recur (inc n)\n             (* ret (- num n))))))", "user": "58fed70de4b0438e51c2cfdd"}, {"problem": 42, "code": "(fn   [n]\n  (loop [calc 1\n         counter n]\n    (if (= counter 1)\n      calc\n      (recur (* calc counter) (dec counter)))))", "user": "59971dcbe4b07157cc8daacb"}, {"problem": 42, "code": "(comp (partial reduce *) rest range inc)", "user": "5960a1a6e4b066ee0a44b08e"}, {"problem": 42, "code": "(fn fact [x] (loop [count x acc 1] (if (zero? count) acc (recur (dec count) (* acc count)))))", "user": "594be1cce4b07ddc2dafae47"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "596539dce4b069c0a1a19783"}, {"problem": 42, "code": "(fn fac [n]\n  (if (= n 0)\n    1\n    (* (fac (dec n)) n)))", "user": "59a24c92e4b066c664927d20"}, {"problem": 42, "code": "(fn factorial [x]\n     (reduce * (range 1 (inc x))))", "user": "594ea2a4e4b07ddc2dafaeb6"}, {"problem": 42, "code": "(fn fact [i]\n  (if-not (> i 1)\n   \t1\n    (* i (fact (dec i)))\n   )\n)", "user": "59a2ba97e4b066c664927d2c"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "58637221e4b0f14aab7c881d"}, {"problem": 42, "code": "(fn fact [n]\n  (if (= n 1)\n    1\n    (* n (fact (- n 1)))))", "user": "59a39440e4b066c664927d40"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (inc x))))", "user": "5989e080e4b021a7a535fed6"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (+ n 1))))", "user": "59a512b7e4b066c664927d5e"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "598858d0e4b021a7a535feb5"}, {"problem": 42, "code": "#(reduce * (map inc (range %)))", "user": "599d49a7e4b0871e7608b7f4"}, {"problem": 42, "code": "(fn f [n]\n  (cond\n    (> n 1) (* n (f (dec n)))\n    (= n 1) 1))", "user": "55b28b57e4b01b9910ae296c"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "59a57e91e4b066c664927d63"}, {"problem": 42, "code": "(fn [acc i] \n  (if (= i 1)\n    acc\n    (recur (* i acc) (dec i)))) 1", "user": "59a72effe4b066c664927d94"}, {"problem": 42, "code": "(fn ! [n]\n  (if (= n 1)\n    1\n    (* n (! (dec n)))))", "user": "59a96a85e4b0bcf4e9a43b13"}, {"problem": 42, "code": "#(reduce * (map inc (range %)))", "user": "576c2ecae4b07c67f59d1fbb"}, {"problem": 42, "code": "(fn [x] ((fn [a n] (if (= n 0) a (recur (* a n) (- n 1)))) 1 x))", "user": "59ab8beee4b08cbb53654d9e"}, {"problem": 42, "code": "#(apply * (range 1 (+ 1 %) ))", "user": "57bffed6e4b05aa3c4741c89"}, {"problem": 42, "code": "(fn factorial\n  [n]\n  (loop [n n\n         acc 1]\n    (if (zero? n)\n      acc\n      (recur (- n 1) (* acc n)))))", "user": "586b93eae4b01531a375e95b"}, {"problem": 42, "code": "(fn [x]\n           (let [aux\n                 (fn[n acc]\n                   (cond\n                    (= 1 n)\n                    acc\n                    \n                    :else\n                    (recur (dec n) (* n acc))))]\n             (aux x 1)))", "user": "57e6f90de4b0bfb2137f5af6"}, {"problem": 42, "code": "(fn [x]\n  (reduce * (range 1 (inc x))))", "user": "59a8405ce4b0bcf4e9a43af1"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "59ac0965e4b08cbb53654da6"}, {"problem": 42, "code": "#(apply * (range 1 (+ % 1)))", "user": "597fa3fbe4b021a7a535fdbf"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "59a90b2ae4b0bcf4e9a43aff"}, {"problem": 42, "code": "#(reduce * (-> % inc range rest))", "user": "599df601e4b0871e7608b801"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "599ed08fe4b0871e7608b812"}, {"problem": 42, "code": "#(loop [x % result 1]\n   (if (zero? x)\n     result\n     (recur (dec x) (* result x))))", "user": "59afb004e4b0e1f4e384c8bc"}, {"problem": 42, "code": "(fn [n] (\n         reduce * (range 1 (inc n))\n         ))", "user": "598229d6e4b021a7a535fdfb"}, {"problem": 42, "code": "#(last (take % ((fn fact\n([] (fact 1 1))\n([f n] (lazy-seq (cons f (fact (* f (inc n)) (inc n)))))))))", "user": "59a0262ee4b0871e7608b82d"}, {"problem": 42, "code": "#(reduce * (take % (iterate inc 1)))", "user": "59b1c2eae4b0e1f4e384c8ec"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "59089229e4b047aa04b1997c"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "59ac559ee4b00adcf69795d2"}, {"problem": 42, "code": "(fn factorial [n]\n  (loop [f 1 _ n]\n    (if (< _ 1)\n      f\n      (recur (* f _) (dec _))\n      )))", "user": "58f3a2d4e4b0438e51c2ceac"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "56e1122fe4b03a7c14b85a20"}, {"problem": 42, "code": "(fn factorial [x] (if (zero? x) 1 (* x (factorial (dec x)))))", "user": "59a80652e4b0bcf4e9a43aeb"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (+ n 1))))", "user": "571543bbe4b07c98581c3ad4"}, {"problem": 42, "code": "#(apply * (range 1 (+ 1 %)))", "user": "59a3f3dce4b066c664927d48"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "59adec09e4b0e1f4e384c897"}, {"problem": 42, "code": "(fn myfactorial [n]\n  (if (= n 0)\n      1\n      (* n (myfactorial (dec n)))))", "user": "59afe4bae4b0e1f4e384c8c0"}, {"problem": 42, "code": "(fn fact\n  [n]\n  (condp = n\n    0 1\n    1 1\n    (* n (fact (dec n)))))", "user": "59b62f8de4b05c620303ca1f"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "user": "57481f1fe4b009280f9f2b82"}, {"problem": 42, "code": "(fn f [a]\n  (if (= a 1)\n    1\n    (* a (f (- a 1)))))", "user": "59a2c7d5e4b066c664927d2e"}, {"problem": 42, "code": "(fn [fac]\n  (loop [i fac x 1]\n    (if (> i 1)\n      (recur (dec i) (* x i))\n      x)))", "user": "59b554cee4b05c620303ca0f"}, {"problem": 42, "code": "(fn fact [n]\n  (* n\n  \t(if (<= n 1)\n      1\n      (fact (dec n)))))", "user": "598e7998e4b02b9968b84d34"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "59bcbfd0e4b0a024fb6ae419"}, {"problem": 42, "code": "#(reduce * (take %1 (iterate inc 1)))", "user": "5992de05e4b0866487ed0d7e"}, {"problem": 42, "code": "#(loop [x % n %] (if (zero? (dec n)) x (recur (* x (dec n)) (dec n))))", "user": "59bac5c9e4b0a024fb6ae3ed"}, {"problem": 42, "code": "#(apply * (range % 0 -1))", "user": "52d954cae4b09f7907dd13a5"}, {"problem": 42, "code": "(fn myFact ([x]\n              (if (or (= x 1) (= x 0))\n                1\n                (myFact (dec x) x)))\n  ([x acc]\n   (if (or (= x 1) (= x 0))\n     acc\n     (do (println (str \"acc= \" acc \" and x=\" x))\n         (myFact (dec x) (* x acc))))))", "user": "59a2d49de4b066c664927d30"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5998b0a1e4b07157cc8daaec"}, {"problem": 42, "code": "(fn fact [n] (reduce * (range 1 (+ n 1))))", "user": "59be62d5e4b0a024fb6ae435"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "50a8bb65e4b0deba384a58bd"}, {"problem": 42, "code": "#(apply * (range 1 (+ 1 %)))", "user": "59358f74e4b04f87174def52"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "592fa9f8e4b072a2710fcfcb"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "58c7131be4b021aa9917ed6d"}, {"problem": 42, "code": "(fn [n]\n  (apply * \n\t(range 1 (inc n)))\n  )", "user": "59c3b24ee4b0a024fb6ae4e1"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "59abd1d8e4b08cbb53654da4"}, {"problem": 42, "code": "#(apply * (range 1 (+ 1 %)))", "user": "54c98ac0e4b045293a27f679"}, {"problem": 42, "code": "(fn\n  [x]\n  (loop [n x s 1]\n    (if (< n 1)\n      s\n      (recur (dec n)(* n s)))))", "user": "59a9c22ae4b08cbb53654d75"}, {"problem": 42, "code": "(fn [arg1]\n\n  (reduce * 1 (range 1 (inc arg1))))", "user": "59c5093ce4b0a024fb6ae50c"}, {"problem": 42, "code": "(fn [n]\n  (apply * (range 1 (inc n))))", "user": "54058af3e4b0addc1aec6669"}, {"problem": 42, "code": "(fn fact\n  ([a] (fact a 1))\n  ([a b] (if (> a 1) (recur (dec a) (* b a)) b)))", "user": "59c7c2cde4b0a024fb6ae54b"}, {"problem": 42, "code": "(fn [n] (apply * (range 1 (inc n))))", "user": "59c22fbae4b0a024fb6ae4a3"}, {"problem": 42, "code": "(fn [n] (reduce * 1 (range 1 (inc n))))", "user": "59cc4d5ee4b0a024fb6ae5d0"}, {"problem": 42, "code": "#(reduce * (map inc (range %)))", "user": "59cc8d8de4b0a024fb6ae5d5"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "59cb706ee4b0a024fb6ae5ba"}, {"problem": 42, "code": "#(reduce * (take % (iterate inc 1)))", "user": "594a7ed1e4b07ddc2dafae02"}, {"problem": 42, "code": "(fn [x] ((fn [a b c] (if (> b c) a (recur (* a b) (+ b 1) c))) 1 1 x))", "user": "59cf6fbce4b0ef0a1e9b5b6c"}, {"problem": 42, "code": "#(apply * (range 1 (inc %1)))", "user": "59bdf0eae4b0a024fb6ae42e"}, {"problem": 42, "code": "#(nth (map first (iterate (fn [[result n]] [(* n result) (inc n)]) [1 1])) %)", "user": "59cf0d75e4b0ef0a1e9b5b5f"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "59c734e3e4b0a024fb6ae53f"}, {"problem": 42, "code": "(fn fact [n]\n  (let [calc (fn calc [n]\n               (if (= n 1)\n                 1\n                 (* n (calc (- n 1)))))]\n    (calc n)))", "user": "572010a4e4b0c5bde472c08c"}, {"problem": 42, "code": "(fn factorial [n]\n  (if (<= n 1) 1 (* n (factorial (dec n)))))", "user": "59c94a69e4b0a024fb6ae576"}, {"problem": 42, "code": "#(loop [agg 1 n %]\n   (if (= n 1)\n\tagg\n   \t(recur (* agg n) (dec n))))", "user": "51f38193e4b0fca5e8b48226"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "55fd0d19e4b0f488688e067a"}, {"problem": 42, "code": "#(apply * (take % (iterate inc 1)))", "user": "59c8c9bee4b0a024fb6ae567"}, {"problem": 42, "code": "#(apply * (range 1 (inc %1)))", "user": "593fcb0ce4b069cdc2982bea"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))\n\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; loop solution\n\n;#(loop[i 1 result 1]\n;  (if (= i %) result\n;    (recur (inc i) (* result (inc i)))))\n\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;recursive solution\n\n;(fn factorial[n]\n;   (if (= 0 n) 1\n;     (* n (factorial (dec n)))))\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::", "user": "59c77511e4b0a024fb6ae545"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "57fe7d7ce4b0d3187e9009d0"}, {"problem": 42, "code": "(fn [number]\n  (reduce * (range 1 (inc number))))", "user": "59d9186be4b0ef0a1e9b5c50"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "59cf4013e4b0ef0a1e9b5b68"}, {"problem": 42, "code": "(fn fact [n] (if (= n 1)\n               1\n               (* n (fact (- n 1)))))", "user": "59d4a160e4b0ef0a1e9b5be7"}, {"problem": 42, "code": "(fn furp [n] \n  (if (= n 1)\n    1\n  (* n (furp (dec n))))\n)", "user": "59d75e36e4b0ef0a1e9b5c32"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "59ddae03e4b01968742fed65"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "572de985e4b0cd1946bd0f7c"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %1)))", "user": "59da6480e4b0ef0a1e9b5c68"}, {"problem": 42, "code": "(fn factorial [number]\n \t(loop [num number]\n    \t(if (<= num 1)\n         num\n         (* (factorial  (- num 1)) num)\n         ) \n    )\n )", "user": "59b0e877e4b0e1f4e384c8d3"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "52d9e126e4b09f7907dd13b1"}, {"problem": 42, "code": "(fn [n]\n  (loop [i n acc 1]\n    (if (zero? i)\n      acc\n      (recur (dec i) (* acc i)))))", "user": "59a31c55e4b066c664927d34"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "user": "59dfd369e4b08badc2a0c4dd"}, {"problem": 42, "code": "(fn [num]\n  (reduce * (range 1 (inc num))))", "user": "58a34442e4b02bd94d917ef2"}, {"problem": 42, "code": "(fn !\n  [n]\n  (if (zero? n)\n    1N\n    (* n (! (dec n)))))", "user": "59e0111ae4b08badc2a0c4e4"}, {"problem": 42, "code": "(fn [n]\n  (->> (inc n)\n       (range 1)\n       (reduce *)))", "user": "550e0951e4b06e50f9beb163"}, {"problem": 42, "code": "(fn [n] (reduce * (take n (iterate inc 1))))", "user": "59e18b9be4b08badc2a0c50f"}, {"problem": 42, "code": "(fn factorial [end]\n  (if (zero? end)\n    0\n    (loop [start 1\n           factor 1]\n      (if (= start end)\n        (* start factor)\n        (recur (inc start) (* factor start))))))", "user": "59e12c94e4b08badc2a0c509"}, {"problem": 42, "code": "(fn [num]\n  (reduce * (range num 1 -1)))", "user": "59e48db0e4b08badc2a0c53e"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "59e0f38ae4b08badc2a0c500"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "59dd38a8e4b0a0ac046f2503"}, {"problem": 42, "code": "(fn fact\n  [n]\n  (if (zero? n)\n    1N\n    (* n (fact (dec n)))))", "user": "59deba46e4b01968742fed7f"}, {"problem": 42, "code": "(fn [n]\n  (loop [i n \n         accum 1]\n    (if (zero? i)\n      accum\n(recur (dec i) \n       (* accum i)))))", "user": "59e55cc8e4b08badc2a0c555"}, {"problem": 42, "code": "(fn algo \n  [n]\n (if (= 0 n)\n   1\n   (* n (algo (- n 1)))\n   )\n  )", "user": "59e56c75e4b08badc2a0c556"}, {"problem": 42, "code": "(fn [n]\n  (reduce * 1 (range 1 (inc n))))", "user": "59e63a2ce4b08badc2a0c569"}, {"problem": 42, "code": "(fn fac [n]\n    (if (= 1 n)\n        n\n        (* n (fac (- n 1)))))", "user": "59aeff12e4b0e1f4e384c8af"}, {"problem": 42, "code": "(fn [x]\n  (loop [num x\n         total 1]\n    (if (= num 1) total\n                  (recur (dec num) (* total num)))))", "user": "59e4fc25e4b08badc2a0c54f"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "59e62655e4b08badc2a0c568"}, {"problem": 42, "code": "(fn f\n  [n]\n  (reduce * (remove #(= 0 %) (range (+ 1 n)))))", "user": "59e778aae4b0249b72820716"}, {"problem": 42, "code": "(fn my-fact [numb]\n  (loop [rslt 1 curr numb]\n    (if (= curr 1) rslt (recur (* rslt curr) (dec curr)))))", "user": "59dd387be4b0a0ac046f2502"}, {"problem": 42, "code": "(fn fact\n  [n]\n  (if (zero? n)\n    1\n    (* n (fact (dec n)))))", "user": "59e4e3cbe4b08badc2a0c54a"}, {"problem": 42, "code": "(fn \n  [n] \n  (reduce * 1 (range 1 (inc n))))", "user": "59dd3930e4b0a0ac046f2504"}, {"problem": 42, "code": "#(apply * (take % (drop 1 (range))))", "user": "57eaf869e4b0bfb2137f5b56"}, {"problem": 42, "code": "(fn Factorial-Fun\n  [n]\n  (reduce * (range 1 (inc n))))", "user": "59e14ee3e4b08badc2a0c50c"}, {"problem": 42, "code": "(fn fact\n  [n]\n  (if (= n 1)\n    1\n    (* n (fact (dec n)))))", "user": "59e8fef3e4b0249b72820743"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "59e95cafe4b0249b7282074b"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "59c8ffe6e4b0a024fb6ae56c"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "59e9f03be4b0249b72820752"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "580e7761e4b0849f6811b753"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "59ea287ee4b0249b72820760"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "59ea0944e4b0249b72820758"}, {"problem": 42, "code": "(fn !\n  [n]\n  (if (zero? n)\n    1N\n    (* n (! (dec n)))))", "user": "59e68254e4b0249b728206fc"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %1)))", "user": "59ea85e4e4b0249b72820767"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "59eb63e3e4b0249b7282077c"}, {"problem": 42, "code": "(fn !\n  [n]\n  (if (zero? n)\n    1N\n    (* n (! (dec n)))))", "user": "59dd387ae4b0a0ac046f2501"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5957cc41e4b066ee0a44af76"}, {"problem": 42, "code": "(fn [x]\n  (loop [x x\n         mul 1]\n    (if (= x 1)\n      mul\n      (recur (dec x) (* mul x)))))", "user": "59e8cd8be4b0249b72820739"}, {"problem": 42, "code": "(fn [steps]\n  (loop [res 1\n         curr-mult 1]\n    (if (= curr-mult steps)\n      (* res curr-mult)\n      (recur (* res curr-mult) (+ curr-mult 1)))))", "user": "5984e7dee4b021a7a535fe43"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "59ed01ede4b0249b7282079a"}, {"problem": 42, "code": "(fn f[a] (if (= a 1) 1 (* a (f (dec a)))))", "user": "59e8bb43e4b0249b72820735"}, {"problem": 42, "code": "(fn [x]\n  (loop [i x\n         prod 1]\n    (if (= i 1) prod \n      (recur (dec i) (* prod i)))))", "user": "593c1e3be4b069cdc2982b86"}, {"problem": 42, "code": "(fn factorialMaker [x]\n  (reduce * (range 1 (+ x 1)))\n  )", "user": "59e0f839e4b08badc2a0c502"}, {"problem": 42, "code": "(comp (partial apply *) (partial map inc) range)", "user": "59ee6801e4b0966464fe6a1f"}, {"problem": 42, "code": "(fn fact [n]\n  (reduce #(* %1 %2) (range 1 (+ n 1))))", "user": "59ece650e4b0249b72820795"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "59f2af64e4b0966464fe6a87"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "58d96bdce4b0a4d5acaab638"}, {"problem": 42, "code": "#(apply * (range 1 (+ % 1)))", "user": "58e980dfe4b056aecfd47d0b"}, {"problem": 42, "code": "(fn f [n]\n  (loop [acc 0]\n    (if (= n 0)\n      1\n      (* n (f (- n 1)) ))))", "user": "59c76402e4b0a024fb6ae542"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %1)))", "user": "59d631d4e4b0ef0a1e9b5c09"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "59ef6cfae4b0966464fe6a32"}, {"problem": 42, "code": "(fn [input]\n  (loop [result 1, i input, c 1]\n    (if (> c i)\n      result\n      (recur (* result c)\n             i\n             (inc c)))))", "user": "590aaa78e4b047aa04b199c0"}, {"problem": 42, "code": "(fn[x] \n  (loop [x x\n         total 1]\n    (if (= 1 x)\n      total\n      (recur (dec x) (* total x)))))", "user": "59f75d2ae4b0966464fe6aed"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "59f67819e4b0966464fe6ad3"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "59ba2ea0e4b0a024fb6ae3e1"}, {"problem": 42, "code": "(fn factorial [n]\n  (reduce * (range 1 (inc n))))", "user": "59f78b49e4b0ca45a743a30e"}, {"problem": 42, "code": "(letfn [(fact [x]\n      (if (<= x 1)\n        x\n        (* x (fact (dec x)))))]\n      fact)", "user": "59f8b925e4b0ca45a743a327"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "59f90e6ae4b0ca45a743a337"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "59f192e0e4b0966464fe6a5e"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "5683fcafe4b0945ebc182aa8"}, {"problem": 42, "code": "(fn [n]\n  \n  (apply * (drop 1 (range (+ n 1))))\n  )", "user": "56f2611fe4b04a395b9a04a2"}, {"problem": 42, "code": "(fn factorial [n] (reduce * (range 1 (inc n))))", "user": "59fa0bb6e4b0ca45a743a352"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (inc x))))", "user": "5628f33ce4b00e49c7cb47f3"}, {"problem": 42, "code": "#((fn [n acc]\n      (if (zero? n)\n        acc\n        (recur (dec n) (*' n acc))))\n    % 1)", "user": "59a080e3e4b0871e7608b837"}, {"problem": 42, "code": "(fn my-fatorial\n  [n]\n  (loop [i n f 1]\n    (if (> i 1)\n      (do (let [prev (dec i)]\n            (recur prev (* f i))))\n      (do f))))", "user": "59fa5fe0e4b0ca45a743a35f"}, {"problem": 42, "code": "(fn factorial [n]\n  (reduce * 1 (rest (range (+ n 1)))))", "user": "59f7f55de4b0ca45a743a313"}, {"problem": 42, "code": "#(loop [x % y 1]\n   (if (= x 0) y\n     (recur (dec x) (* x y))))", "user": "59fea630e4b01bb0ae8afd10"}, {"problem": 42, "code": "(fn [n]\n  (if (zero? n) 1 ;; unused\n      (apply * (range 1 (inc n)))))", "user": "59fa241ee4b0ca45a743a358"}, {"problem": 42, "code": "(fn [n]\n    (let [g (fn [res d]\n              (if (= d 1)\n                  res\n                  (recur (* res d) (dec d))))]\n      (g 1 n)))", "user": "593352b7e4b072a2710fd052"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))\n;; #(apply * (range 1 (inc %)))", "user": "59e5b6a1e4b08badc2a0c55b"}, {"problem": 42, "code": "(fn factorial [n]\n  (loop [res 1 iter 2]\n    (if (> iter n)\n      res\n      (recur (* res iter) (inc iter)))))", "user": "59fa7fb0e4b0ca45a743a366"}, {"problem": 42, "code": "(fn fac [x]\n  (if (= 0 x)\n    '1\n    (* x (fac (dec x)))))", "user": "5a022949e4b01bb0ae8afd60"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5a01d8f6e4b01bb0ae8afd53"}, {"problem": 42, "code": "(fn [n]  (reduce * (range 1 (inc n))))", "user": "58182480e4b0c0e9c07b83a7"}, {"problem": 42, "code": ";#(reduce (fn [acc el] (* acc el)) 1 (range 1 (inc %)))\n\n#(reduce * (range 1 (inc %)))", "user": "588fd085e4b00487982d51c0"}, {"problem": 42, "code": "#(apply * (range 1 (+ % 1)))", "user": "59df2b8ee4b01968742fed87"}, {"problem": 42, "code": "(fn [n]\n  (loop [i n\n        p 1]\n    (if (> i 0)\n      (recur (dec i) (* i p))\n      p)\n    )\n  )", "user": "5a04e923e4b01bb0ae8afda9"}, {"problem": 42, "code": "(comp (partial reduce *) (partial range 2) inc)", "user": "5a065388e4b01bb0ae8afdcb"}, {"problem": 42, "code": "(fn fact [n]\n\t(if (= n 0)\n\t\t1\n\t\t(* n (fact (dec n) )))\n\n\t)", "user": "5a025edde4b01bb0ae8afd64"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "59f15e20e4b0966464fe6a5a"}, {"problem": 42, "code": "(fn r [x] (if (= 1 x) x (* x (r (dec x)))))", "user": "59fedc26e4b01bb0ae8afd17"}, {"problem": 42, "code": "(fn [argN] \n  (reduce * (map inc (range argN))))", "user": "57c8d89ee4b05aa3c4741d23"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %1)))", "user": "563f0fdae4b08d4f616f5ece"}, {"problem": 42, "code": "(fn fact [x]\n    (loop [n x f 1]\n        (if (= n 1)\n            f\n            (recur (dec n) (* f n)))))", "user": "5645a7f9e4b0284900eef609"}, {"problem": 42, "code": "(fn [x]\n  (let [f (fn [n result]\n            (if (<= n 0) result\n                         (recur (dec n) (* result n))))] (f x 1)))", "user": "5a082ce4e4b01bb0ae8afdec"}, {"problem": 42, "code": "(fn [x] (reduce * (take x (iterate dec x))))", "user": "529735cbe4b02ebb4ef7503c"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "59fa5773e4b0ca45a743a35e"}, {"problem": 42, "code": "#(loop [cnt 1 res 1]\n   (if (> cnt %) res\n   (recur (inc cnt) (* res cnt))))", "user": "59f58103e4b0966464fe6ac0"}, {"problem": 42, "code": "(partial (fn [state n]\n  (cond\n    (= n 0) state\n    :else (recur (* state n) (- n 1))\n   )) 1)", "user": "5a080bdde4b01bb0ae8afde9"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5a0a3473e4b0eab8c0448941"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5a00cb31e4b01bb0ae8afd36"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "5a090a06e4b01bb0ae8afdff"}, {"problem": 42, "code": "(fn [x]\n  (loop [i x\n         result 1]\n    (if (= 1 i)\n      result\n      (recur (dec i) (* result i)))))", "user": "5a0b9fc0e4b04bbd27e6d992"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "59f820d9e4b0ca45a743a316"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "580a0783e4b0a837a8b30d2c"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5a07fefee4b01bb0ae8afde5"}, {"problem": 42, "code": "(fn foo [n]\n      (if (not= n 0)\n        (* n (foo (- n 1)))\n        1))", "user": "5a062e07e4b01bb0ae8afdc5"}, {"problem": 42, "code": "#(reduce * 1 (take % (iterate dec %)))", "user": "595e6c76e4b066ee0a44b043"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5a0a25fce4b0eab8c044893d"}, {"problem": 42, "code": "(fn fac [n] \n  (if (<= n 0)\n    1\n    (* n (fac (dec n)))\n    ))", "user": "58d1c1b1e4b03c36ff7e58ef"}, {"problem": 42, "code": "(fn my-factorial\n  [n]\n  (if (<= n 0)\n    1\n    (* n (my-factorial (- n 1)))\n  ))", "user": "59f44189e4b0966464fe6aab"}, {"problem": 42, "code": "(fn [n]\n  (reduce * 1 (range 1 (inc n))))", "user": "5a12dea3e4b04bbd27e6da44"}, {"problem": 42, "code": "(fn [n] (loop [current n\n               next (dec current)\n               acc 1]\n          (if (> current 1)\n            (recur next (dec next) (* acc current))\n            acc)))", "user": "5a135573e4b0ff51aa4b3180"}, {"problem": 42, "code": "(fn [n]\n  (reduce (fn [f v]\n            (* f v))\n          1\n          (range 1 (inc n))))", "user": "54497569e4b032a45b8693d2"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5830377ee4b051871117c004"}, {"problem": 42, "code": "#(reduce * (take % (iterate inc 1)))", "user": "55129667e4b06e50f9beb1ac"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %1)))", "user": "5a0a04eee4b0eab8c0448935"}, {"problem": 42, "code": "(fn factorial [n]\n  (loop [fac n i n]\n    (if (= i 1)\n      fac\n      (recur (* fac (- i 1)) (dec i)))))", "user": "5a06c154e4b01bb0ae8afdce"}, {"problem": 42, "code": "(fn [n] \n\t((fn f [t c] \n\t\t(cond \n\t\t\t(= 0 c) t\n\t\t\t:else (f (* t c) (dec c)))) n (dec n)))", "user": "5a14228fe4b0ff51aa4b3193"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5a0ce1a5e4b04bbd27e6d9b7"}, {"problem": 42, "code": "(fn [n]\n  (apply * (range 2 (inc n))))", "user": "5a188be3e4b0ff51aa4b31ec"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "59fd069ae4b01bb0ae8afcf4"}, {"problem": 42, "code": "#(loop [n 1 acc 1]\n   (if (> n %)\n     acc\n     (do \n       (recur (inc n) (* acc n))\n     )\n   )\n  )", "user": "59135c11e4b0163c97b36f02"}, {"problem": 42, "code": "#(reduce * (rest (range (+ % 1))))", "user": "5a03d246e4b01bb0ae8afd8c"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (inc x))))", "user": "5a05a807e4b01bb0ae8afdb8"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5a18488ee4b0ff51aa4b31e5"}, {"problem": 42, "code": "(fn fact [n]\n   (cond\n     (= n 1) 1\n     (>= n 2) (* (fact (- n 1)) n))\n   )", "user": "59fcc31fe4b01bb0ae8afcef"}, {"problem": 42, "code": "(fn factorial [n]\n  (reduce \n   #(* %1 %2) 1 (range 1 (inc n))))", "user": "5a144fd8e4b0ff51aa4b319a"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5a0ef454e4b04bbd27e6d9fa"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "5a1e93bee4b0ff51aa4b3270"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "59f043d0e4b0966464fe6a3d"}, {"problem": 42, "code": "(fn [n]\n  (loop [s (map inc (range n)) \n         t 1]\n    (println s \" \" t)\n    (if (empty? s)\n      t\n      (recur (rest s) (* t (first s))))))", "user": "59f75327e4b0966464fe6aec"}, {"problem": 42, "code": "(fn fx [n] (\n            let [hfx (fn [x m] (if (= x 1) m (recur (dec x) (* m x))))] (hfx n 1)))", "user": "59ff9424e4b01bb0ae8afd24"}, {"problem": 42, "code": "#(reduce * (map inc (range %)))", "user": "57a499dae4b0a966079561e6"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "5a14959de4b0ff51aa4b31a0"}, {"problem": 42, "code": "#(reduce * (range 1(inc %)))", "user": "59b69bbee4b05c620303ca2a"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5112500ee4b0350614f07a72"}, {"problem": 42, "code": "(fn fact [x]\n  (if (= 0 x)\n    1\n    (* x (fact (- x 1)))))", "user": "5a21d34ce4b0ff51aa4b32b9"}, {"problem": 42, "code": "(fn fac [x]\n\t(if (<= x 0)\n    \t1\n      \t(* x (fac (dec x)))\n    )\n)", "user": "5a214798e4b0ff51aa4b32aa"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5a1149ace4b04bbd27e6da26"}, {"problem": 42, "code": "(fn [n]\n    (loop [cnt n acc 1]\n       (if (zero? cnt)\n            acc\n          (recur (dec cnt) (* acc cnt))\n\n)))", "user": "55d7312ee4b0e31453f64a9f"}, {"problem": 42, "code": "(fn factorial [x]\n  (if (= x 1)\n    1\n    (* (factorial (dec x)) x)))", "user": "5a250b86e4b07f18be40aa19"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %1)))", "user": "5a19d181e4b0ff51aa4b3207"}, {"problem": 42, "code": "(fn [x] (reduce * 1 (range 1 (inc x))))", "user": "5a16da30e4b0ff51aa4b31cc"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5a23cabce4b0ff51aa4b32df"}, {"problem": 42, "code": "(fn f [a]\n  (if (= a 1) 1\n    (* a (f (- a 1)))))", "user": "598a4ff7e4b02b9968b84cda"}, {"problem": 42, "code": "#(loop [i 1 ret 1]\n   (cond \n    (> i %1) ret\n    :else (recur (inc i) (* ret i))    )\n   )", "user": "568d381ee4b0dcc4269f40c1"}, {"problem": 42, "code": "#(apply * (drop 1 (range (inc %))))", "user": "56ef077ae4b04a395b9a0459"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5a2960fde4b07f18be40aa78"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5a2185c6e4b0ff51aa4b32b1"}, {"problem": 42, "code": "#(loop [result 1\n        index 1]\n   (if (= index %)\n     (* result index)\n    (recur (* result index) (inc index))\n     \n     )\n   \n )", "user": "59cd13d5e4b0ef0a1e9b5b32"}, {"problem": 42, "code": "(fn [n] \n  (loop [x n\n         acc 1]\n    (if (= 1 x) acc \n      (recur \n       \t(dec x)\n        (* acc x)\n      )\n     )\n    )\n  )", "user": "5a2834dfe4b07f18be40aa64"}, {"problem": 42, "code": "(fn fact [n] (if (< n 2) 1 (* n (fact (- n 1)))))", "user": "5a2df4a0e4b09cafd31c7f74"}, {"problem": 42, "code": "(fn [i] (reduce * (range 1 (inc i))))", "user": "5a1d0381e4b0ff51aa4b3255"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "55ec879ae4b0121d4835fdc8"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5a1bec89e4b0ff51aa4b322f"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5a285a38e4b07f18be40aa67"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "5a2e80fde4b09cafd31c7f7d"}, {"problem": 42, "code": "(fn [x]\n    (if (= x 0)\n        1\n        (loop [i 1 r 1]\n              (if (> i x)\n                  r\n                  (recur (inc i) (* i r))))))", "user": "5a34f342e4b0ddc586f153d1"}, {"problem": 42, "code": "(fn [n] ( reduce * ( range 1 (inc n) )) )", "user": "5a1c8c26e4b0ff51aa4b3247"}, {"problem": 42, "code": "(memoize (fn [n]\n   (loop [i n\n          res 1]\n     (if (or (= i 1) (= i 0))\n       res\n       (recur (dec i) (* res i))))))", "user": "5a23503fe4b0ff51aa4b32d6"}, {"problem": 42, "code": "(fn myfn [x]\n  (case x\n    1 1\n    (* x (myfn (- x 1)))))", "user": "5a2cfa85e4b09cafd31c7f61"}, {"problem": 42, "code": "#(reduce * (range 1 (+ %1 1)))", "user": "5a21c3f9e4b0ff51aa4b32b7"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "510d2a99e4b078ea71921130"}, {"problem": 42, "code": "(fn b [n]\n  (if (= n 1) \n    1\n    (* n (b (dec n)))))", "user": "57f2bf56e4b0511f1d294df8"}, {"problem": 42, "code": "(fn factorial [n]\n  (loop [cnt n acc 1]\n    (if (zero? cnt)\n      acc\n      (recur (dec cnt) (* acc cnt)))))", "user": "5773f3a9e4b0979f896515f2"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %1)))", "user": "52513bf1e4b0541d1855b86e"}, {"problem": 42, "code": "#(apply * (take % (iterate inc 1)))", "user": "5a3d7afae4b0447ef91cc5a6"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5a3c5c54e4b001c08efc0ce3"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5a3d33b3e4b001c08efc0cef"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "5a3ece62e4b0447ef91cc5b9"}, {"problem": 42, "code": "#(apply * (range 1 (inc %1)))", "user": "52281e1ee4b0186687e23a69"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5a401a7de4b0447ef91cc5c5"}, {"problem": 42, "code": "(fn [n]\n  (loop [x n fact 1]\n    (if (= x 1) fact\n       (recur (dec x) (* fact x)))))", "user": "5a40eb64e4b0447ef91cc5d8"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "58a6806ee4b01a0c0b23292f"}, {"problem": 42, "code": "#(reduce * (take % (iterate (fn [n] (dec n)) %)))", "user": "5a42dbabe4b0447ef91cc5fc"}, {"problem": 42, "code": "(fn d[n] \n   (if (= 1 n)\n     1\n     (* n (d (dec n))))\n   )", "user": "5a43347ee4b0447ef91cc603"}, {"problem": 42, "code": "#(->> % (inc) (range 1) (apply *))", "user": "567447a2e4b05957ce8c6135"}, {"problem": 42, "code": "(fn [a]\n  (reduce * (range 1 (inc a)))\n          )", "user": "558843dae4b059ccff29b1f3"}, {"problem": 42, "code": "#(reduce * (take % (iterate dec %)))", "user": "59dfb8dbe4b08badc2a0c4da"}, {"problem": 42, "code": "(fn [n]\n  (loop [acc 1\n         x n]\n        (if (= x 0)\n          acc\n          (recur (* x acc) (dec x)))))", "user": "5a409d77e4b0447ef91cc5d3"}, {"problem": 42, "code": "(fn [x]\n  (apply * (range 1 \n                  (+ x 1))))", "user": "5a29ee57e4b09cafd31c7f2b"}, {"problem": 42, "code": "(fn faktorial\n  [x]\n  (if (<= x 1)\n    1\n    (* x (faktorial (dec x)))))", "user": "5a067f26e4b01bb0ae8afdcc"}, {"problem": 42, "code": "#(apply * (take % (iterate dec %)))", "user": "5a4993c0e4b05d388ecb6b71"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5a4443cae4b0447ef91cc60f"}, {"problem": 42, "code": "(fn [x]\n  (let [tfac  (fn [x res]\n               (if (= 0 x) res (recur (- x 1) (* x res))))]\n    (tfac x 1)))", "user": "54cd53dae4b057c6fda3a29f"}, {"problem": 42, "code": "(fn f [n] (if (< n 2) 1 (* n (f (dec n)))))", "user": "5a4de614e4b05d388ecb6bb1"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "5a4e1c81e4b05d388ecb6bb6"}, {"problem": 42, "code": "(fn\n  [n]\n  (loop [index n\n         acc 1]\n    (if (> index 0)\n      (recur (dec index) (* acc index))\n      acc)))", "user": "5a35d515e4b0ddc586f153e1"}, {"problem": 42, "code": "(fn [factorial] (reduce * (map inc (range factorial))))", "user": "5a4ec4f0e4b05d388ecb6bc2"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5a1c3c11e4b0ff51aa4b323d"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5a4208dde4b0447ef91cc5ee"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5a512929e4b05d388ecb6be2"}, {"problem": 42, "code": "(fn factorial\n  [x]\n  (loop [a x result 1]\n    (if (= a 1) result\n                (recur (dec a) (* result a)))\n    )\n  )", "user": "5a4cbba1e4b05d388ecb6b98"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5a2045bfe4b0ff51aa4b329f"}, {"problem": 42, "code": "(fn [n] (reduce * 1 (range 1 (inc n)) ) )", "user": "5a535572e4b05d388ecb6c0b"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5a533cc0e4b05d388ecb6c09"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5a534241e4b05d388ecb6c0a"}, {"problem": 42, "code": "(fn factorial [n]\n  (loop [total n\n         n-left (dec n)]\n    (if (< n-left 1)\n      total\n      (recur\n       \t(* total n-left)\n        (dec n-left)))))", "user": "5a54e3c4e4b05d388ecb6c30"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "58d4d864e4b03c36ff7e594c"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5a4d656fe4b05d388ecb6ba9"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5a546344e4b05d388ecb6c27"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5a527beee4b05d388ecb6bfe"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5a566e8fe4b05d388ecb6c51"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "5a3c2a08e4b001c08efc0cdf"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "565654dae4b0f9d632dd849f"}, {"problem": 42, "code": "(fn [x]\n  (loop [result 1 n 1]\n    (if (= n x)\n      result\n      (recur (* result (inc n)) (inc n))\n    )\n  )\n)", "user": "5a244240e4b0ff51aa4b32e9"}, {"problem": 42, "code": "(fn [limit]\n  (loop [n limit acc 1]\n    (if (= n 1)\n      acc\n      (recur (dec n) (*' acc n)))))", "user": "5182de5ce4b0353c468deb74"}, {"problem": 42, "code": "(fn f[x]\n  (if (< x 3)\n    x\n    (* x (f (dec x)))))", "user": "5a4caa20e4b05d388ecb6b94"}, {"problem": 42, "code": "(fn [n] (apply * (range 1 (inc n))))", "user": "552d9b31e4b076ab5578f7eb"}, {"problem": 42, "code": "(fn [n] (loop [cnt n result 1] (if (= 0 cnt) result (recur (dec cnt) (* result cnt)))))", "user": "5a34de78e4b0ddc586f153d0"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "53f053ebe4b0742d9025b0d3"}, {"problem": 42, "code": "(fn factorial [n] (reduce * 1 (range 1 (inc n))))", "user": "5a591d04e4b05d388ecb6c90"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5a424954e4b0447ef91cc5f0"}, {"problem": 42, "code": ";#(loop [x % result 1]\n;   (if (> x 1) (recur (dec x) (* result x)) result))\n;silverios\n#(reduce * (range 1 (inc %)))", "user": "5a544eeee4b05d388ecb6c24"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5a40bd29e4b0447ef91cc5d6"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5a584ca2e4b05d388ecb6c7d"}, {"problem": 42, "code": "(fn fact [n] (if (= 1 n) 1 (* n (fact (- n 1)))))", "user": "5a5894d9e4b05d388ecb6c81"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "5a5d0726e4b0512ff01cd91b"}, {"problem": 42, "code": "(fn [x]\n  (reduce * (range 1 (inc x))))", "user": "5a58bfd0e4b05d388ecb6c84"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "56fd058be4b08d47c97781a1"}, {"problem": 42, "code": "(fn [n] (reduce * (take n (iterate dec n))))", "user": "5a5be4a6e4b0512ff01cd910"}, {"problem": 42, "code": "#(reduce * (rest (range (inc %))))", "user": "5a52f2cbe4b05d388ecb6c06"}, {"problem": 42, "code": "(fn fac [n] (if (= n 0) 1 (* n (fac (dec n)))))", "user": "5a621702e4b0512ff01cd983"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5a624129e4b0512ff01cd987"}, {"problem": 42, "code": "(fn [n]\n    (reduce #(* %1 (inc %2)) 1 (range n)))", "user": "5a1ef970e4b0ff51aa4b327d"}, {"problem": 42, "code": "(fn factorial [n]\n  (if (zero? n)\n    1\n    (* n (factorial (dec n)))))", "user": "5a5a6347e4b05d388ecb6ca9"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5a66e81ee4b0512ff01cd9d3"}, {"problem": 42, "code": "(fn [n] (apply * (rest (range (+ 1 n)))))", "user": "545d881de4b01be26fd7466f"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5a536cf2e4b05d388ecb6c10"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "55952410e4b0c79f6e1db962"}, {"problem": 42, "code": "(fn [x]\n  (loop [nm x product 1]\n    (if (= nm 1)\n      product\n\t  (recur (dec nm) (* product nm)))))", "user": "5a6a7cc5e4b0512ff01cda27"}, {"problem": 42, "code": "(fn [n]\n  (loop [x n\n         acc 1]\n    (if (= x 1)\n      acc\n      (recur (- x 1) (* acc x)))))", "user": "5a6b9b95e4b0512ff01cda40"}, {"problem": 42, "code": "(fn fact [x] (reduce * 1 (range 1 (inc x))))", "user": "583048d9e4b051871117c007"}, {"problem": 42, "code": "#_(fn [x & acc]\n  (let [acc (or acc 1)]\n    (if (= x 1)\n      acc\n      (recur (dec x) (* x acc)))))\n\n;; inspired by silverio\n#(reduce * (range % 0 -1))", "user": "5a257747e4b07f18be40aa1f"}, {"problem": 42, "code": "(fn fact [number] (if (= number 1) 1 (* number (fact (dec number)))))", "user": "5a59a76fe4b05d388ecb6c98"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "5a625bc2e4b0512ff01cd989"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (+ 1 %)))", "user": "5a6e145ee4b0512ff01cda68"}, {"problem": 42, "code": "(fn [n] (loop[n n\n               fact 1]\n           (if (< 1 n)\n             (recur (dec n) (* fact n))\n             fact)))", "user": "5a6b15e9e4b0512ff01cda32"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %1)))", "user": "5a4b3abde4b05d388ecb6b81"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (inc x))))", "user": "5920c191e4b09b4ee5954c61"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "5a66f358e4b0512ff01cd9d5"}, {"problem": 42, "code": "(fn factorial [x]\n  (loop [i x y x]\n    (if (= i 1) y\n      (let [j (dec i)]\n        (recur j (* y j))))))", "user": "58f5b58ae4b0438e51c2cedc"}, {"problem": 42, "code": "(fn [n]\n (loop [x n acc 1]\n  (if (= x 1)\n    acc\n    (recur (dec x) (* acc x)))))", "user": "587b8bdee4b01531a375eaff"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (+ x 1))))", "user": "5a61bf79e4b0512ff01cd97b"}, {"problem": 42, "code": "#(reduce * (rest (range (inc %))))", "user": "5619b22ee4b053970a773afe"}, {"problem": 42, "code": "#(reduce * (map inc (range %)))", "user": "529f9bf2e4b04e0c58e87bb4"}, {"problem": 42, "code": "(fn [x] (loop [n x f 1]\n          (if (= n 1)\n            f\n           \t(recur (dec n) (* n f)))))", "user": "57a6552ce4b0a96607956208"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5a488c09e4b05d388ecb6b68"}, {"problem": 42, "code": "(fn [x] (loop [res 1 i 0] \n          (if (= x i)\n            res\n            (recur (* res (inc i)) (inc i))\n            )\n          )\n  )", "user": "5a75da49e4b0512ff01cdacf"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5a6af090e4b0512ff01cda2d"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5a71e7c9e4b0512ff01cda95"}, {"problem": 42, "code": "#(->> (iterate inc 1) (take %) (reduce *))", "user": "5a71c89ee4b0512ff01cda93"}, {"problem": 42, "code": "#(reduce * (conj (range 1 %) %))", "user": "5a6afb1de4b0512ff01cda2f"}, {"problem": 42, "code": "(fn [x]\n  (loop [acc 1\n         curr x]\n    (if (= curr 1) \n      acc\n      (recur (* acc curr) (dec curr)))))", "user": "57f253a3e4b0511f1d294dea"}, {"problem": 42, "code": "(fn [n] \n  (when (>= n 1)\n    (loop [i 1\n           acc 1]\n      (if (> i n)\n        acc\n        (recur (inc i) (* acc i))))))", "user": "4fd4bddce4b0d4de60cee36e"}, {"problem": 42, "code": "(fn fac [n]\n  (if (zero? n)\n    1\n    (* n (fac (dec n)))))", "user": "5a7ae674e4b03baeef9276d5"}, {"problem": 42, "code": "(fn [number] (apply * (range 1 (inc number))))", "user": "5a634ff0e4b0512ff01cd995"}, {"problem": 42, "code": "#(reduce * ((fn [x] (take x (iterate inc 1))) %))", "user": "5a7cee73e4b03baeef9276f2"}, {"problem": 42, "code": "(fn[num] (reduce * (range 1 (inc num))))", "user": "5a63f8bae4b0512ff01cd99f"}, {"problem": 42, "code": "(fn fact [n]\n   (if (= n 1)\n     1\n     (* n (fact (dec n)))\n   )\n)", "user": "5a80b934e4b00b71e582a05b"}, {"problem": 42, "code": "#(loop [n %1 acc 1] (if (= n 1) acc (recur (- n 1) (* acc n))))", "user": "5591b61ee4b0604b3f94d580"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "58eed5b7e4b056aecfd47db8"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)) )", "user": "5a80ad4be4b00b71e582a058"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5a388675e4b001c08efc0ca2"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5a779197e4b013a48d399763"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "5a5dbe9de4b0512ff01cd92b"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5a86ad84e4b05369db4d249c"}, {"problem": 42, "code": "(fn [x] (reduce * (take x (range 1 (inc x)))))", "user": "5a84cf8de4b00b71e582a095"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5a813b90e4b00b71e582a065"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "51dd5d6fe4b0c33a4e1da406"}, {"problem": 42, "code": "(fn [x] \n  (reduce * (range 1 (inc x))))", "user": "5a853662e4b00b71e582a09e"}, {"problem": 42, "code": "(fn [n] \n   (loop [k n r 1]\n      (if (zero? k)\n         r\n         (recur (dec k) (* r k)))))", "user": "5a653f80e4b0512ff01cd9b2"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %1)))", "user": "59021fede4b0438e51c2d04d"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "5a8bc2a1e4b05369db4d24ef"}, {"problem": 42, "code": "#(reduce * (map inc(range %)))", "user": "5a8e9a7ae4b05369db4d2528"}, {"problem": 42, "code": "#(reduce * (take % (iterate dec %)))", "user": "5a7ff79ce4b00b71e582a046"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5a9181c5e4b002d099cae6f6"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "51421cd5e4b0b50abeb46b2c"}, {"problem": 42, "code": "(fn fact [x]\n  (if \n    (= x 0 ) 1\n    (* x (fact (- x 1 )))\n  )\n  )", "user": "5a8d55a8e4b05369db4d2514"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5a95c639e4b0d174b936c75e"}, {"problem": 42, "code": "(fn [n]\n  (loop [cnt n\n         acc 1]\n    (if (zero? cnt)\n      acc\n      (recur (dec cnt) (* acc cnt)))))", "user": "5a932f63e4b0d174b936c71b"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5a9545dbe4b0d174b936c74c"}, {"problem": 42, "code": "(fn fact [n]\n  (if (<= n 1)\n    n\n    (* n (fact (dec n)))))", "user": "5a962c09e4b0d174b936c765"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "5a95e50be4b0d174b936c760"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5a5767f3e4b05d388ecb6c65"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5a9457a9e4b0d174b936c734"}, {"problem": 42, "code": "(fn [x]\n  (loop [n x fac 1]\n    (if (= n 0)\n      fac\n      (recur (dec n) (* fac n)))))", "user": "5a9482b7e4b0d174b936c737"}, {"problem": 42, "code": "(fn [n] \n  (reduce * (range 1 (inc n))))", "user": "5a99b688e4b0d174b936c7a6"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (range 1 (inc n)))\n)", "user": "5a984657e4b0d174b936c78a"}, {"problem": 42, "code": "#(apply *(range 1 (+ 1 %)))", "user": "5a912080e4b002d099cae6ea"}, {"problem": 42, "code": "#(reduce * (range % 0 -1))", "user": "5a99b83fe4b0d174b936c7aa"}, {"problem": 42, "code": "(fn[n]\n  (reduce * (rest (range (+ n 1)))))", "user": "5a99b844e4b0d174b936c7ab"}, {"problem": 42, "code": "(fn [n]\n     (reduce * (range 1 (+ n 1))))", "user": "5971a017e4b01722bebd4c75"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "52bba119e4b07a9af57922ea"}, {"problem": 42, "code": "(fn !\n  [n]\n  \n  (if (zero? n)\n    1\n    (*' n (! (dec n)))))", "user": "5a99ae99e4b0d174b936c7a4"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5a9be505e4b0d174b936c7cf"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5a99b863e4b0d174b936c7ae"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5a9ac061e4b0d174b936c7c1"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5a9dbffbe4b0d174b936c7f4"}, {"problem": 42, "code": "#(apply * (range 1 (+ % 1)))", "user": "5a984616e4b0d174b936c789"}, {"problem": 42, "code": "#(reduce (fn [roll value] (* roll value)) (map inc (range %)))", "user": "5a9dbb32e4b0d174b936c7f3"}, {"problem": 42, "code": "(fn [limit] (reduce #(* %1 %2) 1 (take limit (iterate inc 1))))", "user": "5a6170fde4b0512ff01cd975"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5a9db513e4b0d174b936c7f0"}, {"problem": 42, "code": "(fn !\n  [num]\n  (if (or (= num 0) (= num 1))\n    1\n    (* num (! (dec num)))))", "user": "5a9f005be4b0d174b936c810"}, {"problem": 42, "code": "#(reduce * \n         (range 1 (inc %)))", "user": "5a9cdec0e4b0d174b936c7e1"}, {"problem": 42, "code": "#(reduce * (take % (iterate dec %)))", "user": "59ef5280e4b0966464fe6a2b"}, {"problem": 42, "code": "(fn \n  [n]\n  (loop [a 1 c n]\n    (if-not (zero? c)\n      (recur (* a c) (dec c))\n      a)))", "user": "5a90395ce4b05369db4d254a"}, {"problem": 42, "code": "(fn [x] (reduce (fn [acc item] (* item acc)) 1 (range 1 (inc x))))", "user": "5a8e9fb5e4b05369db4d2529"}, {"problem": 42, "code": "#(reduce * (take % (rest (range))))", "user": "5a94a38ce4b0d174b936c73e"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "5a9bfd57e4b0d174b936c7d0"}, {"problem": 42, "code": "#(reduce (fn [a b] (* a b)) 1 (range 1 (inc %)))", "user": "5aa2f1dee4b0d174b936c865"}, {"problem": 42, "code": "(fn [innum]\n  (loop [cnum innum oval 1]\n    (if (= 1 cnum)\n      oval\n      (recur (dec cnum) (* cnum oval)))))", "user": "56197b47e4b053970a773af8"}, {"problem": 42, "code": "(fn factorialFun\n  [n]\n  (->>\n    (range 1N (inc n))\n    (reduce *)))", "user": "5aa00b7fe4b0d174b936c825"}, {"problem": 42, "code": "#(->> (range 1 (inc %))\n      (apply *))", "user": "5a8ebd9ae4b05369db4d252b"}, {"problem": 42, "code": "#(apply * % (range 1 %))", "user": "5a9a12d6e4b0d174b936c7b7"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5aa4b961e4b0d174b936c888"}, {"problem": 42, "code": "(fn [n] (reduce * 1 (range 1 (+ n 1))))", "user": "5a9e3698e4b0d174b936c7fc"}, {"problem": 42, "code": "(comp (partial reduce *) (partial map inc) range)", "user": "50310713e4b05b7df5a0b84c"}, {"problem": 42, "code": "(fn [x]\n  (loop [n x\n         acc 1]\n    (cond\n      (= n 0) acc\n      (= n 1) acc\n      :else (recur (dec n) (* acc n)))))", "user": "5aa15ec0e4b0d174b936c848"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "59f4c9c7e4b0966464fe6ab7"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5a99cab6e4b0d174b936c7b2"}, {"problem": 42, "code": "(fn [x]\n    (reduce * (range 1 (inc x))))", "user": "5a99b766e4b0d174b936c7a8"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5a99b848e4b0d174b936c7ac"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "5aa6d44de4b0d174b936c8b2"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5a99b87ee4b0d174b936c7af"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "588053cae4b0f1effa3b7612"}, {"problem": 42, "code": "#(reduce * (map inc (range %)))", "user": "5908882de4b047aa04b19979"}, {"problem": 42, "code": "(fn [n] \n  (reduce * (range 1\n                   (inc n)))\n  )", "user": "5a99b861e4b0d174b936c7ad"}, {"problem": 42, "code": "(fn [x] \n  (loop [i x sum 1] \n    (if (< i 2) \n      sum \n      (recur (dec i) (* sum i)))))", "user": "5a342188e4b0ddc586f153bd"}, {"problem": 42, "code": "#(reduce * (map inc (range %)))", "user": "5aa5eebee4b0d174b936c8a1"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5a9db5c9e4b0d174b936c7f1"}, {"problem": 42, "code": "(fn [x]\n    (loop [n x f 1]\n        (if (= n 1)\n            f\n            (recur (dec n) (* f n)))))", "user": "5aa6bd56e4b0d174b936c8af"}, {"problem": 42, "code": "(fn fac [x]\n     (loop [n x acc 1]\n       (if (= n 0) \n           acc\n           (recur (- n 1) (* n acc)))))", "user": "5aa5951ae4b0d174b936c899"}, {"problem": 42, "code": "#(reduce * (drop 1 (range (inc %))))", "user": "57023e92e4b08d47c97781da"}, {"problem": 42, "code": "(fn [x]\n  (loop [n x, accumulator 1]\n  \t(if (zero? n)\n    \taccumulator\n    \t(recur (dec n) (* accumulator n)))))", "user": "5a593521e4b05d388ecb6c93"}, {"problem": 42, "code": "(fn fact[x]\n  (loop [cpt x res 1]\n    (if (> cpt 1)\n      (recur (dec cpt)(* cpt res))\n      res)))", "user": "5a6cb2eae4b0512ff01cda57"}, {"problem": 42, "code": "(fn [x]\n  (->>\n   (range 1 (+ x 1))\n   (reduce * )))", "user": "5aabd34fe4b073f177442565"}, {"problem": 42, "code": "(fn [n]\n  (apply * (rest (range (inc n)))))", "user": "586d2f5be4b01531a375e98c"}, {"problem": 42, "code": "(fn factorial [x]\n  (if (= x 1)\n    1\n    (* x (factorial (dec x)))))", "user": "5aa998c6e4b0d174b936c8e5"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "59769d75e4b01722bebd4cdd"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5a9829e5e4b0d174b936c788"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5aa8f753e4b0d174b936c8d9"}, {"problem": 42, "code": "(fn factorial [x]\n  (reduce * 1 (range 1 (inc x)))\n  )", "user": "5aada061e4b073f17744257a"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "5ab126cde4b073f1774425b9"}, {"problem": 42, "code": ";(fn f [x]\n;  (if (= x 1) \n;    1\n;    (* x (f (dec x)))\n;  )\n;)\n\n#(->> (range %) (map inc) (reduce *))", "user": "5ab1665de4b073f1774425c0"}, {"problem": 42, "code": "#(reduce * (rest(range(+ 1 %) )))", "user": "5a99c5a9e4b0d174b936c7b1"}, {"problem": 42, "code": "(fn fact-me\n  [n]\n  (reduce * (range 1 (inc n))))", "user": "5ab23c99e4b073f1774425e2"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5ab23a78e4b073f1774425e1"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "554e4d65e4b00713264bd993"}, {"problem": 42, "code": "(fn fact [x] (case x\n                   1 1\n                   (* x (fact (- x 1)))))", "user": "5a99a540e4b0d174b936c7a3"}, {"problem": 42, "code": "#(reduce *' (range 1 (inc %)))", "user": "5ab16992e4b073f1774425c4"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %) 1))", "user": "5ab564f8e4b073f177442639"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "5a67cedbe4b0512ff01cd9ee"}, {"problem": 42, "code": "(fn [n]\n   (loop [cnt n\n          res 1]\n     (if (> cnt 0)\n       (recur (dec cnt) (* res cnt) )\n       res))\n   )", "user": "5ab575f8e4b073f17744263d"}, {"problem": 42, "code": "#(reduce * (take % (iterate dec %)))", "user": "5a904de3e4b05369db4d254c"}, {"problem": 42, "code": "(fn factorial\n  ([n] ( factorial 1 n))\n  ([result n]\n   (if (= n 1)\n     result\n     (recur (* n result) (dec n)))))", "user": "5ab490f4e4b073f17744261d"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5ab5f60be4b073f177442643"}, {"problem": 42, "code": "#(loop [res %\n         f (dec %)]\n       (if (= f 0)\n           res\n           (recur (* res f) (dec f))))", "user": "542c56aae4b0dad94371f2a4"}, {"problem": 42, "code": "(fn [x]\n    (loop [n x f 1]\n        (if (= n 1)\n            f\n            (recur (dec n) (* f n)))))", "user": "5aa8e841e4b0d174b936c8d5"}, {"problem": 42, "code": "(fn [param1]\n  (loop [x param1, result 1]\n    (if (> x 0)\n      (recur (dec x) (* result x))\n      result)\n    ))", "user": "5aa2dc5ae4b0d174b936c861"}, {"problem": 42, "code": "(fn fact [n]\n    (loop [acc 1 cnt 1]\n      (if (> cnt n)\n        acc\n        (recur (* acc cnt) (inc cnt)))))", "user": "5ab276f2e4b073f1774425e6"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "5ab9fe71e4b073f17744269d"}, {"problem": 42, "code": "#(\n  (fn fac [x] \n     (cond (= x 1) 1\n           :else (* x (fac (dec x)))\n     )\n  )  \n  %\n)", "user": "5aba34c5e4b073f1774426a3"}, {"problem": 42, "code": "(fn factorial [n] (if (= n 0) 1 (* n (factorial (- n 1)))))", "user": "577412c6e4b0979f896515f6"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "5abb02ade4b073f1774426bc"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5abc5a09e4b073f1774426e9"}, {"problem": 42, "code": "#(reduce * (map inc (range %)))", "user": "5ab9eeade4b073f17744269b"}, {"problem": 42, "code": "(fn factorial [n] \n    (let [iter-fact \n          (fn [acc t] \n              (if (= t n)\n                  (* acc t)\n                  (recur (* acc t) (inc t))))]\n         (iter-fact 1 1)))", "user": "5aaa2dc3e4b0d174b936c8f1"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "5abbb524e4b073f1774426da"}, {"problem": 42, "code": "(fn [x] (reduce * (rest(range (+ 1 x)))))", "user": "5ab38af0e4b073f177442601"}, {"problem": 42, "code": "(fn fac! [n]\n  (if (= n 1)\n    n\n    (* n (fac! (dec n))))\n  )", "user": "5a8fd113e4b05369db4d2542"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5a47423be4b05d388ecb6b52"}, {"problem": 42, "code": "(fn [n]\n  (loop [c n a n]\n    (if (= 1 c) a (recur (dec c) (* a (dec c))))))", "user": "5762bf13e4b0994c1922fbae"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5abe2fc2e4b073f17744271e"}, {"problem": 42, "code": "#(reduce * (range 2 (inc %)))", "user": "5ac0dab7e4b073f177442746"}, {"problem": 42, "code": "(fn\n  [some-int]\n  (apply * (range 1 (inc some-int))))", "user": "5ac35d00e4b0e27600da7712"}, {"problem": 42, "code": "#(reduce * (range 1 (inc % )))", "user": "5ac37d0fe4b0e27600da7718"}, {"problem": 42, "code": "#(reduce * (drop 1 (range (inc %))))", "user": "569bfc43e4b0542e1f8d145c"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "59a8a4dce4b0bcf4e9a43af7"}, {"problem": 42, "code": "(fn [n] (reduce * (take n (iterate inc 1))))", "user": "531bf76fe4b08068f379ed96"}, {"problem": 42, "code": "#(apply * (range 2 (inc %1)))", "user": "555d1e51e4b0a2eb076a39a5"}, {"problem": 42, "code": "(fn [n]\n    (reduce * (take n (iterate inc 1))))", "user": "5ac6ef9be4b0e27600da7779"}, {"problem": 42, "code": "(fn fac [x]\n  (if (= x 0)\n    1\n    (* x (fac (- x 1)))))", "user": "5ac91d90e4b0e27600da77bd"}, {"problem": 42, "code": "(fn [x]\n  (loop [y x result 1]\n    (if (= y 0) result\n      (recur (dec y) (* y result)))))", "user": "5a03652ae4b01bb0ae8afd83"}, {"problem": 42, "code": "(fn factorial [n]\n  (->> (vector n 1)\n       (iterate (fn [[currn result]] (vector (dec currn) (* currn result))))\n       (take n)\n       (last)\n       (last)))", "user": "5abeb697e4b073f177442725"}, {"problem": 42, "code": "(fn fact [x]\n\t(reduce * (range 1 (inc x)))\n)", "user": "5ac74b34e4b0e27600da777f"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (inc x))))", "user": "5a291617e4b07f18be40aa76"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5ac4d1f6e4b0e27600da7735"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5acb137ee4b0e27600da77eb"}, {"problem": 42, "code": "#(reduce (fn [x y] (* x y)) (range 1 (+ % 1)))", "user": "5ab170c2e4b073f1774425cb"}, {"problem": 42, "code": "#(apply * (range % 0 -1))", "user": "5abbbd46e4b073f1774426db"}, {"problem": 42, "code": "(fn fact\n  [n]\n  (if (<= 0 n 1)\n    1\n    (* n (fact (dec n)))))", "user": "5ac741d6e4b0e27600da777d"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "596a66cde4b069c0a1a19803"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (+ % 1)))", "user": "5acd235ae4b0e27600da7824"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5ac92dc3e4b0e27600da77bf"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5ac85708e4b0e27600da77ac"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (+ 1 n))))", "user": "5ad0c20be4b0ea6055cfab9c"}, {"problem": 42, "code": "(fn factorial\n  [n]\n  (apply * (range 1 (inc n))))", "user": "5a798ac5e4b03baeef9276c0"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5acd08eee4b0e27600da7822"}, {"problem": 42, "code": "(fn\n  ([n] \n   \t(loop [cur n acc 1]\n      (if (or (= cur 0) (= cur 1))\n        acc\n        (recur (- cur 1) (* acc cur))\n      )\n\t)\n  )\n)", "user": "5a78cd9ee4b013a48d399777"}, {"problem": 42, "code": "#(last (last (take % (iterate (fn [[x y]] [(inc x) (* y (inc x))]) [1 1]))))", "user": "5ac0ba3ae4b073f177442745"}, {"problem": 42, "code": "(fn fac ([n acc] (if (= n 0)\n                   acc\n                  (recur (dec n) (* n acc))))\n         ([n] (fac n 1)))", "user": "5acc961ae4b0e27600da7810"}, {"problem": 42, "code": "#(reduce * (range % 0 -1))", "user": "5ad63a34e4b0ea6055cfac01"}, {"problem": 42, "code": "#(reduce * (map inc (range 0 %)))", "user": "5acd1a43e4b0e27600da7823"}, {"problem": 42, "code": "(fn [n] (apply * (range 1 (+ n 1))))", "user": "5a663a32e4b0512ff01cd9c2"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5ac383b8e4b0e27600da7719"}, {"problem": 42, "code": "#(loop [fac % res 1] (if (== fac 1) res (recur (dec fac) (* res fac))))", "user": "5831846ae4b051871117c02c"}, {"problem": 42, "code": "(fn fac [x]\n\t(reduce * (range 1 (inc x))))", "user": "5ada1f12e4b0ea6055cfac43"}, {"problem": 42, "code": "(fn [n]\n  (loop [i 1\n         out 1]\n    (if (= i n)\n      (* n out)\n      (recur (+ i 1)\n             (* out i)))))", "user": "5ad3d730e4b0ea6055cfabc8"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5ad37785e4b0ea6055cfabc5"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5976da27e4b01722bebd4ce3"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5ade6bafe4b0837691e92c23"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5ae0976be4b0837691e92c43"}, {"problem": 42, "code": "(fn [x] \n\t (apply * (range 1 (inc x)))\n\t)", "user": "5ac04101e4b073f177442737"}, {"problem": 42, "code": "(fn [n] (reduce #(* %1 %2) (rest (range (inc n)))))", "user": "59edc518e4b0966464fe6a08"}, {"problem": 42, "code": "(fn [n]\n   (loop [i 0 f 1]\n     (if (< i n)\n       (recur (inc i) (* f (inc i)))\n       f\n       )))", "user": "5a9d64c8e4b0d174b936c7eb"}, {"problem": 42, "code": "(fn [x] (reduce * (take x (drop 1 (range)))))", "user": "5adf5f9be4b0837691e92c33"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5a353bdae4b0ddc586f153d9"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "57086931e4b0b0fb43fd069e"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5acaa269e4b0e27600da77e6"}, {"problem": 42, "code": "(fn fac [n]\n  (loop [m n y 1]\n    (cond\n      (= m 0) y\n      (= m 1) y\n      :else (recur\n        (dec m)\n        (* y m)\n      )\n    )\n  )\n)", "user": "5aac468ae4b073f17744256b"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5991eec7e4b0866487ed0d6e"}, {"problem": 42, "code": "(fn [n]\n  (->> (range 1 (inc n))\n       (apply *))\n  )", "user": "5ae47c1de4b0837691e92c81"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5649b1b0e4b0284900eef646"}, {"problem": 42, "code": "#(reduce * (rest (range (inc %))))", "user": "5ae246b1e4b0837691e92c5d"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "59e8b4ade4b0249b72820734"}, {"problem": 42, "code": "#(apply * (range 1 (+ % 1)))", "user": "5ad36ae9e4b0ea6055cfabc3"}, {"problem": 42, "code": "#(apply * (range 2 (inc %)))", "user": "505fd903e4b08f2a82ad10b7"}, {"problem": 42, "code": "(fn [n] (reduce * (take n (iterate inc 1))))", "user": "5aeec90fe4b0cc2b61a3bc31"}, {"problem": 42, "code": "(fn [c] (apply * (range 1 (inc c))))", "user": "5aa4a1ffe4b0d174b936c886"}, {"problem": 42, "code": "#(apply *' (range 1 (inc %)))", "user": "5aed87a1e4b0cc2b61a3bc1a"}, {"problem": 42, "code": "(fn fact [n]\n  (if (< n 1)\n    1\n    (* n (fact (dec n)))))", "user": "5a084a24e4b01bb0ae8afdf2"}, {"problem": 42, "code": "#(reduce (fn [coll item] (* coll item)) (range 1 (inc %)))", "user": "5aeca4c9e4b0cc2b61a3bc0a"}, {"problem": 42, "code": "#(reduce * (take % (iterate inc 1)))", "user": "5aefdc8de4b0cc2b61a3bc40"}, {"problem": 42, "code": "(fn ff [x]\n  (cond (= 0 x) 1\n        :else (* x (ff (dec x)))))", "user": "5a7a09e6e4b03baeef9276ca"}, {"problem": 42, "code": "#(reduce * (range % 0 -1))", "user": "59a460ede4b066c664927d52"}, {"problem": 42, "code": "(fn fac [n]\n   (if (= n 1) 1\n       (* n (fac (- n 1)))))", "user": "5aba04dce4b073f17744269e"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "532ae82be4b09d4e7a9b552b"}, {"problem": 42, "code": "(fn [arg]\n  (reduce * (range 1 (inc arg)))\n  )", "user": "5ae71f14e4b0837691e92ca7"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "59eb69fbe4b0249b7282077e"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "5af19233e4b0cc2b61a3bc5f"}, {"problem": 42, "code": "(fn [n]\n  (loop [r 1 i 2]\n    (if (> i n)\n      r\n      (recur (* r i) (inc i)))))", "user": "5af907e6e4b0cc2b61a3bcda"}, {"problem": 42, "code": "(fn fac [x]\n  (loop [ans 1\n         n x]\n    (if (= n 0)\n      ans\n      (recur (* ans n) (dec n)))))", "user": "5af1e1b1e4b0cc2b61a3bc67"}, {"problem": 42, "code": "(fn fact [x]\n\t(if (= x 1)\n\t\t1\n\t\t(* x (fact (- x 1)))\n\t)\n)", "user": "5af9b2cee4b0cc2b61a3bce2"}, {"problem": 42, "code": "(fn [n] ((fn [n r] (if (= n 1) r (recur (- n 1) (* n r)))) n 1))", "user": "5afa3590e4b0cc2b61a3bcea"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5af31955e4b0cc2b61a3bc7a"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5a91988ae4b002d099cae6f9"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5afb4b15e4b0cc2b61a3bcf6"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "5adcc688e4b0837691e92c05"}, {"problem": 42, "code": "(fn [x]\n  (loop [i 1 factorial 1]\n    (if (> i x)\n      factorial\n      (recur (inc i) \n             (* factorial i)))))", "user": "5af8221ce4b0cc2b61a3bccd"}, {"problem": 42, "code": "#(->> % inc (range 1) (reduce *))", "user": "5b008bcae4b0cc2b61a3bd3d"}, {"problem": 42, "code": "(fn [n]\n  (loop [cnt n result 1]\n         (if (= cnt 0)\n           result\n           (recur (- cnt 1) (* result cnt)))))", "user": "5b02a170e4b0cc2b61a3bd52"}, {"problem": 42, "code": "(fn factorial [n] (if (zero? n) 1 (* n (factorial (dec n)))))", "user": "5aa4f7dae4b0d174b936c88c"}, {"problem": 42, "code": "#(apply * (range 1 (inc %1)))", "user": "5afcd6d1e4b0cc2b61a3bd17"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5b0180cfe4b0cc2b61a3bd47"}, {"problem": 42, "code": "#(apply * (rest (range (inc %))))", "user": "5afa9de0e4b0cc2b61a3bcf1"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %1)))", "user": "5922f8a9e4b026ae3852128f"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5af74644e4b0cc2b61a3bcc2"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "59d9dcfbe4b0ef0a1e9b5c5d"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5b0546eae4b0cc2b61a3bd7e"}, {"problem": 42, "code": "#(loop [remaining % result 1]\n\t(if (> remaining 0)\n\t(recur (dec remaining) (* result remaining))\n\tresult))", "user": "5afb3426e4b0cc2b61a3bcf5"}, {"problem": 42, "code": "(fn [x] (reduce * (map #(+ 1 %) (range x))))", "user": "5b083513e4b0cc2b61a3bdb4"}, {"problem": 42, "code": "#(->> % inc (range 1) (reduce *))", "user": "5b0e6795e4b0cc2b61a3be03"}, {"problem": 42, "code": "(fn fact [n]\n  (cond\n    (<= n 1) 1\n    :else (* n (fact (dec n)))))", "user": "5b0bea6de4b0cc2b61a3bdda"}, {"problem": 42, "code": "#((fn [n accum] (if (= n 1) accum (recur (dec n) (* accum n)))) % 1)", "user": "5b0fe3f4e4b0cc2b61a3be14"}, {"problem": 42, "code": "( fn [n]\n   (loop [n n f 1]\n      (if (= n 1)\n          f\n          (recur (dec n) (* f n)))))", "user": "5b0d72e5e4b0cc2b61a3bdf8"}, {"problem": 42, "code": "(fn fact [n] (if (= 1 n) 1 (* n (fact (- n 1)))))", "user": "5b02ab12e4b0cc2b61a3bd53"}, {"problem": 42, "code": "(fn fact [n]\n  (reduce * (range 1 (inc n))))", "user": "5777c3d6e4b0979f8965164f"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5b14ea95e4b0cc2b61a3be62"}, {"problem": 42, "code": "(fn [x] (apply * (range 1 (inc x))))", "user": "5addadfce4b0837691e92c13"}, {"problem": 42, "code": "(fn [n]\n  (reduce * 1 (range 1 (inc n))))", "user": "5b13f482e4b0cc2b61a3be58"}, {"problem": 42, "code": "(fn [x] (loop [n 1 f 1]\n          (if (>= x n)\n            (recur (inc n) (* f n))\n            f\n            )\n))", "user": "5b1619e4e4b0cc2b61a3be77"}, {"problem": 42, "code": "(fn [n]\n    (loop [cnt n\n           acc 1]\n       (if (zero? cnt)\n            acc\n          (recur (dec cnt) (* acc cnt))\n)))", "user": "5b17bdb6e4b00d69b768e76d"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "user": "5adbbf89e4b0837691e92bf4"}, {"problem": 42, "code": "(fn [n] (apply * (range 1 (inc n))))", "user": "56aad332e4b03c432f187337"}, {"problem": 42, "code": "(fn factorial [val]\n  (if (= 0 val)\n    1\n    (* val (factorial (dec val)))))", "user": "5b107263e4b0cc2b61a3be22"}, {"problem": 42, "code": "#(->>\n   (inc %)\n   (range 1)\n   (reduce *)\n   )", "user": "5b118b7be4b0cc2b61a3be34"}, {"problem": 42, "code": "(fn [x]\n   (loop [num x\n          out 1]\n     (if (>= 0 num)\n       out\n       (recur (dec num) (* out num)))))", "user": "5b15e881e4b0cc2b61a3be75"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5b0f2862e4b0cc2b61a3be0f"}, {"problem": 42, "code": "(fn [nx]\n (loop [n nx\n        acc []]\n   (if (> n 0)\n       (recur (dec n) (conj acc n))\n       (apply * acc))))", "user": "51316a63e4b0431ba07e7feb"}, {"problem": 42, "code": "(fn[arg] (reduce * 1 (range 1 (inc arg))))", "user": "5b162d8ce4b0cc2b61a3be78"}, {"problem": 42, "code": "#(apply * (range 1 (+ 1 %)))", "user": "5b0b8d29e4b0cc2b61a3bdd7"}, {"problem": 42, "code": "(fn my-fact\n  ([n] (my-fact n 1))\n  ([n c]\n    (if (= n c)\n        n\n        (* (my-fact n (inc c)) c))))", "user": "5b15811ee4b0cc2b61a3be6f"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5b198eace4b03cfeda66ecbb"}, {"problem": 42, "code": "(fn [n]\n  (let [nums (range 1 (+ n 1))]\n    (reduce * nums)\n  ))", "user": "5b1e2699e4b03cfeda66ed09"}, {"problem": 42, "code": "(fn factorial [n] (if (= n 1) 1 (* n (factorial (- n 1)))))", "user": "5b20134de4b03cfeda66ed2d"}, {"problem": 42, "code": "(comp \n (partial reduce * 1)\n (partial range 1)\n inc)", "user": "5b1c16e1e4b03cfeda66ecf2"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "57d418b4e4b0bd073c20239a"}, {"problem": 42, "code": "(fn [x]\n  (reduce *  (range 1 (inc x))))", "user": "59c243bae4b0a024fb6ae4aa"}, {"problem": 42, "code": "#(reduce * (range % 0 -1))", "user": "5b22328ee4b03cfeda66ed5d"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5a0c822fe4b04bbd27e6d9b0"}, {"problem": 42, "code": "(fn factorial [n]\n  (loop [remain (dec n)\n         result n]\n    (if (= remain 0)\n      result\n      (recur (dec remain)\n             (* remain result)))))", "user": "5b1d61b3e4b03cfeda66ecfe"}, {"problem": 42, "code": "(fn fact [of]\n  (if (= of 1) \n    1 \n    (* of (fact (dec of)))))", "user": "54dfbacae4b024c67c0cf7b1"}, {"problem": 42, "code": "(fn [x] (loop [iter 1 acc 1]\n    (if (< iter (+ x 1))\n      (recur (inc iter) (* acc iter))\n      acc\n      )))", "user": "5b210749e4b03cfeda66ed48"}, {"problem": 42, "code": "(fn fac [n]\n  (loop [sum-num 1\n         cur-num n]\n    \n    (if (= 0 cur-num)\n      sum-num\n      (recur (* sum-num cur-num) (dec cur-num))\n    ))\n  )", "user": "5b250773e4b063e2438bcc21"}, {"problem": 42, "code": "(fn [x] (reduce * (range 2 (inc x))))", "user": "5afecee2e4b0cc2b61a3bd28"}, {"problem": 42, "code": "(fn [x] \n  (loop [n x\n         res 1]\n    (if (= n 1)\n      res\n      (recur (dec n) (* n res)))))", "user": "5b15d56be4b0cc2b61a3be74"}, {"problem": 42, "code": "(fn fact [n] \n  (if (pos? n) \n    (* n (fact (dec n))) \n    1))", "user": "5b236e55e4b08b1df1c36759"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5af9d09ae4b0cc2b61a3bce6"}, {"problem": 42, "code": "(fn factorial-fun-solution\n  [number]\n  (reduce * 1 (range 1 (inc number))))", "user": "5b03227be4b0cc2b61a3bd5d"}, {"problem": 42, "code": "#(->> (range %)\n      (map inc)\n      (reduce *))", "user": "5b073c34e4b0cc2b61a3bda4"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5afdb2bae4b0cc2b61a3bd1f"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "5b22d30ee4b08b1df1c36750"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "56673885e4b04acd4f672dce"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5b2c79c6e4b025bcb146f2b7"}, {"problem": 42, "code": "(fn [n] (loop [f 1 m n] (if (= m 1) f (recur (* f m) (- m 1)))))", "user": "5b2eba82e4b025bcb146f2dd"}, {"problem": 42, "code": "(fn [n] (loop [m n fact 1] (if (< m 2) fact (recur (dec m) (* fact m)))))", "user": "5b2e6b02e4b025bcb146f2d3"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "586a906ae4b0f14aab7c88c3"}, {"problem": 42, "code": "(fn [n]\n    (reduce #(* %1 %2) (drop 1 (range (inc n))))\n)", "user": "5b274fd1e4b063e2438bcc3b"}, {"problem": 42, "code": "(fn [x]\n  ((fn fac [in res]\n    (if (= in 1)\n      res\n      (recur (- in 1) (* res in)))) x 1))", "user": "5b2238d1e4b03cfeda66ed5e"}, {"problem": 42, "code": "(fn fact [n]\n  (if (= n 0)\n    1\n    (* n (fact (dec n)))))", "user": "5b2a559be4b063e2438bcc74"}, {"problem": 42, "code": "#(apply * (range 1 (inc %1)))", "user": "5b284375e4b063e2438bcc53"}, {"problem": 42, "code": "(fn [x]\n  (reduce * (range 1 (inc x))))", "user": "5b333626e4b025bcb146f32f"}, {"problem": 42, "code": "(comp #(reduce * %) #(range 1 %) #(+ 1 %))", "user": "5b34aba7e4b025bcb146f352"}, {"problem": 42, "code": "#(loop [i % f 1]\n    (if-not (= i 0)\n      (recur (dec i) (* f i))\n      f))", "user": "5b2c76c8e4b025bcb146f2b6"}, {"problem": 42, "code": "(fn [n]\n  (apply * (range 1 (inc n))))", "user": "5b227f5ae4b03cfeda66ed63"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "5b37a3b4e4b02d533a91bba9"}, {"problem": 42, "code": "#(apply * (range 1 (+ 1 %)))", "user": "5b23f306e4b08b1df1c36769"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "59e8a952e4b0249b72820733"}, {"problem": 42, "code": "#( loop [ x % f 1] (if (> x 0) (recur (dec x) (* f x) ) f))", "user": "5b3aa98be4b02d533a91bbca"}, {"problem": 42, "code": "(fn f[x]\n  (if (= x 1) 1\n    (* x (f (- x 1)))\n    ))", "user": "5b3e3c1ce4b02d533a91bbff"}, {"problem": 42, "code": "(fn [x]\n  (reduce * (take x (#(iterate inc  %) 1))))", "user": "5b2689e3e4b063e2438bcc33"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5b3f2ba9e4b02d533a91bc09"}, {"problem": 42, "code": "(fn [factorial-max]\n  (loop [factorial-current factorial-max sum factorial-max]\n  (println factorial-current sum)\n  (if (= factorial-current 1)\n    sum\n    (recur (dec factorial-current) (* sum (dec factorial-current)))))\n\n)", "user": "5b3de9a7e4b02d533a91bbf4"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (+ 1 n))))", "user": "5ad002f2e4b0ea6055cfab87"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5b3ef412e4b02d533a91bc06"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5b0948f3e4b0cc2b61a3bdbb"}, {"problem": 42, "code": "(fn factorial [n]\n  (if (= 0 n) 1\n    (* n (factorial (dec n)))))", "user": "5b47874be4b02d533a91bc70"}, {"problem": 42, "code": "(fn fact [n] (if (> n 2) (* n (fact (- n 1))) n))", "user": "5b465b8be4b02d533a91bc65"}, {"problem": 42, "code": "(fn[n] (apply * (rest (range (inc n)))))", "user": "4e1e89a2535d04ed9115e809"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5b4b8cd6e4b02d533a91bc9f"}, {"problem": 42, "code": "#(reduce * (rest (range (+ 1%))))", "user": "5b4a0ce3e4b02d533a91bc92"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "5b47a4f7e4b02d533a91bc73"}, {"problem": 42, "code": "(fn [n] (reduce * (next (range (+ n 1)))))", "user": "5b445421e4b02d533a91bc40"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5b421edce4b02d533a91bc2c"}, {"problem": 42, "code": "(fn rec [n] (if (= n 1) 1 (* n (rec (dec n)))))", "user": "5b4b4052e4b02d533a91bc9a"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5b51b9f8e4b02d533a91bcfe"}, {"problem": 42, "code": "(fn [n]\n  (loop [k n p 1]\n    (if(= k 1) p (recur (- k 1) (* p k))))\n)", "user": "5b4ff637e4b02d533a91bce0"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5b4dfd5de4b02d533a91bcc3"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "591d57aee4b09b4ee5954c16"}, {"problem": 42, "code": "(fn [x]\n  (loop [x x, res 1]\n    (if (zero? x)\n      res\n      (recur (dec x) (* res x)))))", "user": "5a481e05e4b05d388ecb6b64"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "5b552117e4b02d533a91bd2c"}, {"problem": 42, "code": "(fn [number]\n  (reduce * (range 2 (+ 1 number))))", "user": "5b55b15ae4b02d533a91bd35"}, {"problem": 42, "code": "(fn [n]\n  (loop [r 1\n         x n]\n    (if (= x 1)\n      r\n      (recur (* r x ) (dec x)))))", "user": "59ed823ee4b0249b728207a1"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5aeb0b44e4b0cc2b61a3bbee"}, {"problem": 42, "code": "(fn fac [n]\n\t(if (= n 1) \n      1 \n      (* n (fac (- n 1)))\n    )  \n)", "user": "5b58b271e4b02d533a91bd6e"}, {"problem": 42, "code": "#(reduce * (take % (iterate inc 1)))", "user": "5b59fe53e4b02d533a91bd87"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5af0ac17e4b0cc2b61a3bc55"}, {"problem": 42, "code": "(fn fac [n]\n  (if (= n 1)\n    1\n    (* n (fac (- n 1)))))", "user": "5b5d255de4b0c6492753e6c8"}, {"problem": 42, "code": "(fn fact [n]\n  (if\n    (= n 1)\n    1\n    (* n (fact (- n 1)))\n    )\n  )", "user": "5b5e5019e4b0c6492753e6d3"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "5a011305e4b01bb0ae8afd40"}, {"problem": 42, "code": "(fn [x] (reduce * (drop 1 (range (inc x)))))", "user": "5b3251c1e4b025bcb146f317"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5b609f0ae4b0c6492753e708"}, {"problem": 42, "code": "(fn factorial-fun [x]\n  (loop [res 1\n         cur-x x]\n    (if (= cur-x 1)\n      res\n      (recur (* res cur-x)\n             (- cur-x 1)))))", "user": "5b596d0ce4b02d533a91bd7a"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5b500215e4b02d533a91bce2"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5b62ff3ce4b0c6492753e72a"}, {"problem": 42, "code": "(fn [hgh-bound]\n  (reduce * (range 1 (inc hgh-bound))))", "user": "5a3c06fce4b001c08efc0cdd"}, {"problem": 42, "code": "(fn [n] (apply * (range 1 (+ n 1))))", "user": "5b5e7953e4b0c6492753e6d9"}, {"problem": 42, "code": "(fn [x] (loop [n x \n               res 1]\n          (if (= n 1)\n            res\n          \t(recur (dec n) (* res n)))))", "user": "5b59c513e4b02d533a91bd81"}, {"problem": 42, "code": "(fn\n  [n]\n  (reduce (fn [acc x]\n            (if (= x 0)\n              1\n              (* acc x)))\n          0\n          (range (inc n))))", "user": "59b93cd7e4b0a024fb6ae3c7"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "56e2ca59e4b03a7c14b85a38"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5b61aa6ae4b0c6492753e712"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5b552e2ee4b02d533a91bd2e"}, {"problem": 42, "code": "#(loop [n % result 1] (if (= n 0) result (recur (dec n) (* n result))))", "user": "5b59d176e4b02d533a91bd86"}, {"problem": 42, "code": "#(reduce * (map inc (range %)))", "user": "5b62764ae4b0c6492753e725"}, {"problem": 42, "code": "#(apply * (range 1 (+ 1 %)))", "user": "59b9e669e4b0a024fb6ae3db"}, {"problem": 42, "code": ";(fn fat\n;  [n]\n;  (if (= n 1) 1\n;    (* n (fat (- n 1)))))\n\n;(fn fat\n;  [n]\n;  (apply * (range 1 (inc n))))\n\n#(apply * (range 1 (inc %)))", "user": "5b679bf9e4b0c6492753e769"}, {"problem": 42, "code": "(fn [x]\n  (loop [fac 1 idx 1]\n    (if (> idx x)\n      fac\n      (recur (* fac idx) (inc idx)))))", "user": "5b58d012e4b02d533a91bd71"}, {"problem": 42, "code": "#(reduce * (map inc (range %)))", "user": "5b6b3809e4b0c6492753e7a5"}, {"problem": 42, "code": "#(reduce * (map inc (range %)))", "user": "5b6473eee4b0c6492753e73f"}, {"problem": 42, "code": "(fn fat [num]\n    (if (= num 1)\n      1\n      (* num (fat (dec num)))))", "user": "5b611666e4b0c6492753e70d"}, {"problem": 42, "code": "(fn my_factorial[n] (if (< n 2) 1 (* n (my_factorial (dec n)))))", "user": "5b67f0fbe4b0c6492753e76d"}, {"problem": 42, "code": "#(reduce * (map inc (range %)))", "user": "5b6f27dce4b0c6492753e7d9"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "5b632851e4b0c6492753e72d"}, {"problem": 42, "code": "#(apply *(range 1 (inc %)))", "user": "5b6e1649e4b0c6492753e7ce"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "57ebbf3ae4b0bfb2137f5b66"}, {"problem": 42, "code": "(fn fact [x]\n  (loop [n x f 1]\n    (if (= n 1)\n      f\n      (recur (dec n) (* f n)))))", "user": "5b7292b3e4b047b03b2036a4"}, {"problem": 42, "code": "(fn fack [n]\n  (loop [r 1 i n]\n    (if (= 0 i)\n      r\n      (recur (* r i) (dec i) )\n    )\n  )\n)", "user": "5b5b0bb9e4b0c6492753e6a5"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5b6962c1e4b0c6492753e787"}, {"problem": 42, "code": "#(reduce * (drop 1 (range (+ 1 %))))", "user": "5b5b4176e4b0c6492753e6ac"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "592db566e4b072a2710fcf7c"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5b64370ae4b0c6492753e73c"}, {"problem": 42, "code": "(fn fa [n]\n   (if (= n 1)\n     1\n     (* n (fa (- n 1)))))", "user": "5b780a8ce4b047b03b2036f6"}, {"problem": 42, "code": "(fn Factorial [x] (nth ((fn rfact [a b]\n                      (lazy-seq (cons a (rfact (* a b) (+ b 1)))))\n                     1 2) (dec x)) )", "user": "5b69baf9e4b0c6492753e78f"}, {"problem": 42, "code": "(fn factrecur [n] (if (= n 1) 1 (* n (factrecur (- n 1)))))", "user": "5b79cbdce4b047b03b20370a"}, {"problem": 42, "code": "(fn factorial\n  ([n] (factorial n 1))\n  ([n fact]\n   (if (zero? n)\n     fact\n     (recur (dec n) (* fact n)))))", "user": "5b73e500e4b047b03b2036ba"}, {"problem": 42, "code": "#(nth (reductions * (iterate inc 1)) (dec%))", "user": "5b788fc4e4b047b03b2036fc"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5b754f8ee4b047b03b2036c9"}, {"problem": 42, "code": "(fn [x] (loop [cnt x res 1] (if (zero? cnt) res (recur (dec cnt) (* res cnt)))))", "user": "5b4c2212e4b02d533a91bca6"}, {"problem": 42, "code": "(fn fac [n] \n  (if (< n 1) 1 \n    (* n (fac (- n 1)))))", "user": "5b6f72ede4b0c6492753e7dc"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5b774e66e4b047b03b2036ec"}, {"problem": 42, "code": "(fn [n] (apply * (range 1 (inc n))))", "user": "5b7ec039e4b047b03b20375d"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "55f48d1be4b06e875b46ce7b"}, {"problem": 42, "code": "(fn fac [n] (if (> n 1) (* n (fac (dec n))) 1))", "user": "5b772ad7e4b047b03b2036e8"}, {"problem": 42, "code": "(fn fac \n  ([x]\n    (if (= x 1)\n      x\n      (* x (fac (dec x))))))", "user": "5b839516e4b047b03b2037b1"}, {"problem": 42, "code": "(fn [n]\n            (apply * (range 1 (+ n 1))))", "user": "5b83c02de4b047b03b2037b6"}, {"problem": 42, "code": "#(loop [factorial 1\n        counter 1]\n   (let [next-factorial (* factorial counter)]\n     (if (= counter %)\n       next-factorial\n       (recur next-factorial (inc counter)))))", "user": "5b82eec6e4b047b03b2037a4"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "user": "56e9db9be4b04a395b9a03ff"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5b7bc82ce4b047b03b203726"}, {"problem": 42, "code": "#(reduce * (for[x (range 1 (inc %))]x))", "user": "5826a843e4b051871117befd"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5992dc6ae4b0866487ed0d7d"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5b7ed20fe4b047b03b203760"}, {"problem": 42, "code": "(fn [x]\n  (loop [n x f 1]\n    (if (= n 1)\n      f\n      (recur (dec n) (* f n)))))", "user": "5b6ba7d7e4b0c6492753e7ad"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5a085dfde4b01bb0ae8afdf4"}, {"problem": 42, "code": "#(reduce * (take % (iterate inc 1)))", "user": "5b857411e4b047b03b2037ce"}, {"problem": 42, "code": "(fn [n]\n  (reduce #(* %1 %2) (range 1 (inc n))))", "user": "57e2e1bde4b0bfb2137f5a8f"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5b855800e4b047b03b2037cd"}, {"problem": 42, "code": "#(reduce * (  range 1 (inc %)))", "user": "5b819312e4b047b03b20378d"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5b81139fe4b047b03b203782"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5b77d3c8e4b047b03b2036f1"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (+ 1 x))))", "user": "599342efe4b0b211ea3aaab0"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %1)))", "user": "5b8aa478e4b0c0b3ffbd49b2"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5b8f0861e4b0c0b3ffbd49f4"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5b88f0c0e4b047b03b203816"}, {"problem": 42, "code": "(fn factorial[n] (reduce *( range 1(inc n))))", "user": "5b8d01d7e4b0c0b3ffbd49ca"}, {"problem": 42, "code": ";#(reduce * (range 1 (inc %1)))\n#(reduce * (take %1 (iterate inc 1)))", "user": "5b11449ce4b0cc2b61a3be2d"}, {"problem": 42, "code": "(fn [n] (letfn [(fac [n res] (if (= n 1) res (recur (dec n) (* res n))))] (fac n 1)))", "user": "5b5f2566e4b0c6492753e6e9"}, {"problem": 42, "code": "(fn factorial [n]\n  (let [seq (range 1 (+ n 1))\n        f (fn [acc curr]\n            (* acc curr))]\n    (reduce f 1 seq)))", "user": "58ac01f7e4b0005cfeb1a73b"}, {"problem": 42, "code": "#(reduce *  (range 1 (inc %) ) )", "user": "5b917764e4b0c0b3ffbd4a1f"}, {"problem": 42, "code": "(fn fac [n]\n  (loop [cnt n\n         acc 1]\n    (if (= cnt 1)\n      acc\n      (recur (dec cnt) (* acc cnt)))))", "user": "592ac17ae4b072a2710fcf26"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5b9263ece4b0c0b3ffbd4a37"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5b924123e4b0c0b3ffbd4a34"}, {"problem": 42, "code": "(fn fak\n   [x]\n   (last (reductions * (rest (range (inc x))))))", "user": "5b86462de4b047b03b2037df"}, {"problem": 42, "code": "(fn factorial\n  ([cnt] (factorial cnt 1))\n  ([cnt acc]\n    (if (zero? cnt)\n      acc\n      (recur (dec cnt) (* acc cnt)))))", "user": "578dc040e4b0ebec4cfb756d"}, {"problem": 42, "code": "(fn factorial\n  [n]\n  (reduce * (range n 1 -1))\n  )", "user": "5b92f178e4b0c0b3ffbd4a41"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (inc x))))", "user": "57c647bbe4b05aa3c4741cf3"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "5b9357b7e4b0c0b3ffbd4a46"}, {"problem": 42, "code": "(fn [n]\n  (loop [x n\n         fact 1]\n    (println  \"x is \" x)\n    (if (= x 1)\n      fact\n      (recur (dec x) (* fact x)))))", "user": "5b97c521e4b0c0b3ffbd4a9a"}, {"problem": 42, "code": "(fn fac-tailcall [num]\n      (let [fac (fn fac [accum number]\n                    (if (= number 1)\n                      accum\n                      (fac (* accum number) (dec number))))]\n        (fac 1 num)))", "user": "5b1e5bfde4b03cfeda66ed0e"}, {"problem": 42, "code": ";;(fn factorial [n]\n;;  (if (= 1 n) n (* n (factorial (dec n)))))\n\n(fn factorial [n]\n  (reduce * (range n 0 -1)))", "user": "5b96800ae4b0c0b3ffbd4a7b"}, {"problem": 42, "code": "#(apply * (take % (range 1 (inc %))))", "user": "5b919d9de4b0c0b3ffbd4a24"}, {"problem": 42, "code": "#(reduce (fn [acc n] (*' acc n)) (range 1 (inc  %)))", "user": "57a5da5ee4b0a966079561fe"}, {"problem": 42, "code": "#(apply * \n        (range 1 (inc %)))", "user": "5b985fe5e4b0c0b3ffbd4ab1"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5b999af8e4b0c0b3ffbd4ad3"}, {"problem": 42, "code": "#(loop [result 1 x %]\n  (if (zero? x) \n    result \n    (recur (* result x) (dec x))))", "user": "5b9db58be4b0c0b3ffbd4b41"}, {"problem": 42, "code": "(fn factorial [n]\n  (loop [n n, acc 1]\n    (if (<= n 0)\n      acc\n      (recur (dec n) (* acc n)))))", "user": "5b975c6ee4b0c0b3ffbd4a91"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5b99a0a3e4b0c0b3ffbd4ad7"}, {"problem": 42, "code": "(fn fac [x]\n  (if (= x 1)\n    1\n    (* x (fac (dec x)))))", "user": "5a059b33e4b01bb0ae8afdb5"}, {"problem": 42, "code": "(fn fac [x]\n  (if (= x 0)\n    1\n   (* x (fac (dec x)))))", "user": "570d0548e4b0b0fb43fd06d2"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "5b9bcba8e4b0c0b3ffbd4b07"}, {"problem": 42, "code": "(fn factorial [n]\n  (reduce * (nthrest (range (+ n 1)) 1)))", "user": "5b265183e4b063e2438bcc31"}, {"problem": 42, "code": "(fn [n]\n  (apply * (range 1 (inc n))))", "user": "5ba5802de4b0a20761a233fd"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "5b9d3913e4b0c0b3ffbd4b37"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "5b602a66e4b0c6492753e6fc"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5bab5440e4b0a20761a23475"}, {"problem": 42, "code": "(fn factorial\n  [n]\n  (apply * (range 1 (inc n))))", "user": "5bab49bbe4b0a20761a23474"}, {"problem": 42, "code": "(fn fact [x]\n  (loop [fct x result x]\n    (if (> fct 1)\n      (recur (dec fct) (* result (dec fct)))\n      result)))", "user": "5b98f174e4b0c0b3ffbd4ac1"}, {"problem": 42, "code": "(fn fact [n]\n  (if (= n 1)\n    1\n    (* n (fact (- n 1)))))", "user": "5af3aa42e4b0cc2b61a3bc8c"}, {"problem": 42, "code": "(fn fact [n] (if (= n 1) 1 (* n (fact (- n 1)))))", "user": "5ba947bfe4b0a20761a23440"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %1)))", "user": "5bafd5c8e4b0a20761a234dd"}, {"problem": 42, "code": "(fn\n  [x]\n  (reduce (fn [a b] (* a b)) (range 1 (+ 1 x))))", "user": "5b759ca8e4b047b03b2036d0"}, {"problem": 42, "code": "#(reduce * (map inc (range %)))", "user": "5b77248ae4b047b03b2036e7"}, {"problem": 42, "code": "(fn [n] (reduce #(* %1 %2) 1 (range 1 (inc n))))", "user": "5a3e6642e4b0447ef91cc5b3"}, {"problem": 42, "code": "#(apply * (take % (iterate inc 1)))", "user": "5951190be4b066ee0a44aea4"}, {"problem": 42, "code": "(fn [value]\n  (loop [acc 1 n value] \n    (if (= n 1) \n      acc \n      (recur (* n acc) (dec n))\n)))", "user": "5a66fddee4b0512ff01cd9d7"}, {"problem": 42, "code": "#(if (= % 0) 1 (apply * (range 1 (inc %))))", "user": "5bb23cf1e4b0a20761a2350a"}, {"problem": 42, "code": "(fn factorial [n]\n  (loop [res 1 _n n]\n  (if (= _n 1) res (recur (* res _n) (dec _n)))))", "user": "5b9c4a7be4b0c0b3ffbd4b16"}, {"problem": 42, "code": "#(reduce * (take % (range 1 (+ 1 %))))", "user": "5b329773e4b025bcb146f322"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5bb25684e4b0a20761a2350d"}, {"problem": 42, "code": "#(apply * (range 1 (+ 1 %)))", "user": "5bb905dce4b0a20761a235c7"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5bb7b956e4b0a20761a235ad"}, {"problem": 42, "code": "#(->>\n  [1 1]\n  (iterate (fn [[x res]] [(inc x) (* (inc x) res)]))\n  (drop (dec %))\n  first\n  second\n)", "user": "5bbbce0ee4b0a20761a2360d"}, {"problem": 42, "code": "(fn facto [n]\n  \"calculates factorials\"\n  (reduce * (range 1 (inc n))))", "user": "5bbbcecee4b0a20761a23611"}, {"problem": 42, "code": "(fn factorial_fun\n  [n]\n  (reduce * (range 1 (inc n))))", "user": "5bbbd077e4b0a20761a23615"}, {"problem": 42, "code": "(fn fa [x] (if (= x 1) 1 (* x (fa (dec x)))))", "user": "5b8856e8e4b047b03b20380a"}, {"problem": 42, "code": "(fn bang [x] (if (= 1 x) 1 (* x (bang (dec x)))))", "user": "59f4c42ce4b0966464fe6ab6"}, {"problem": 42, "code": "(fn [x]\n  (reduce * (range 1 (inc x))))", "user": "5baa1b58e4b0a20761a2344e"}, {"problem": 42, "code": "(fn my-factorial [x]\n  (loop [buffer 1\n         counter x]\n    (if (= counter 0)\n      buffer\n      (recur (* buffer counter) (dec counter)))))", "user": "5bab8c06e4b0a20761a2347e"}, {"problem": 42, "code": "#(reduce * ((fn [n](take  %1 (iterate inc 1))) %1))", "user": "5bbc0ddfe4b0a20761a2361e"}, {"problem": 42, "code": "(fn [n] (reduce #(* %1 %2) 1 (range 1 (inc n))))", "user": "5a68f374e4b0512ff01cda05"}, {"problem": 42, "code": "#(reduce * (rest (range (inc %))))", "user": "5bbd13a5e4b07a9b28b0ff95"}, {"problem": 42, "code": "(fn fac [n]\n  (->> n\n       (range)\n       (map inc)\n       (reduce *)))", "user": "587fb546e4b0f1effa3b75f9"}, {"problem": 42, "code": "#(apply * (map inc (range %)))", "user": "5829d9f8e4b051871117bf4d"}, {"problem": 42, "code": "#(apply * (take % (iterate inc 1)))", "user": "5bc15685e4b07a9b28b10016"}, {"problem": 42, "code": "(fn factorial\n   [number]\n   (if (= number 1)\n     1\n     (* number (factorial (dec number)))))", "user": "5bbbce70e4b0a20761a2360f"}, {"problem": 42, "code": "#(nth ((fn f [acc i] (cons acc (lazy-seq (f (* acc i) (inc i))))) 1 1) %1)", "user": "5bc39d2be4b07a9b28b10045"}, {"problem": 42, "code": "#(reduce * (range % 0 -1))", "user": "5bbbd484e4b0a20761a23617"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5b85221ce4b047b03b2037c8"}, {"problem": 42, "code": "(fn [x] (loop [input x\n               factorial 1]\n          (if (= 0 input)\n            factorial\n            (recur (dec input) (* factorial input))\n            )))", "user": "5bb3c9a8e4b0a20761a2352f"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "user": "5bbbba29e4b0a20761a23609"}, {"problem": 42, "code": "(fn factorial\n  [n]\n  (if (> n 2)\n    (* n (factorial (- n 1)))\n    n))", "user": "5bb5cd43e4b0a20761a23575"}, {"problem": 42, "code": "(fn [n] (loop [cn n\n               res 1] (if (= cn 1) res (recur (dec cn) (* cn res)))))", "user": "5b8f77a8e4b0c0b3ffbd49fa"}, {"problem": 42, "code": "#(reduce * (map inc (range %)))", "user": "543a8256e4b032a45b869327"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5bc255b7e4b07a9b28b10029"}, {"problem": 42, "code": "(fn factorial\n  [n]\n  (reduce * (take n (iterate #(+ % 1) 1)))\n )", "user": "5bbbcf9ee4b0a20761a23614"}, {"problem": 42, "code": "#(reduce * (range  1 (inc %)) )", "user": "5bc8c033e4b07a9b28b100ca"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5bc7ba68e4b07a9b28b100b0"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "59d8f23ae4b0ef0a1e9b5c49"}, {"problem": 42, "code": "(fn [x] (apply * (range 1 (+ x 1))))", "user": "5bc82994e4b07a9b28b100b9"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5bbbce99e4b0a20761a23610"}, {"problem": 42, "code": "(fn [x] (reduce * 1 (range 1 (inc x))))", "user": "5bc28638e4b07a9b28b10033"}, {"problem": 42, "code": "(fn fac [x]\n  (if (<= x 1) 1 (* x (fac (dec x)))))", "user": "59a0286be4b0871e7608b82f"}, {"problem": 42, "code": "(fn fac [n]\n  (if (<= n 1)\n    1\n    (* n (fac (- n 1)))\n  )\n)", "user": "5bca2c71e4b07a9b28b100e7"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "5bcb672ee4b07a9b28b10100"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "54ca35c6e4b057c6fda3a254"}, {"problem": 42, "code": "#((fn [i tot]\n    (if (= i 1)\n      tot\n      (recur (dec i) (* tot i)))\n    ) % 1\n  )", "user": "5bc50870e4b07a9b28b10069"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5bbbce60e4b0a20761a2360e"}, {"problem": 42, "code": "(fn [x]\n  (loop [lim x res 1]\n    (if (= lim 1)\n      res\n      (recur (dec lim) (* res lim)))))", "user": "5bbbcf81e4b0a20761a23613"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5bbbcf3ae4b0a20761a23612"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (+ % 1)))", "user": "5bcddaeee4b0e9689409ee07"}, {"problem": 42, "code": "(fn fac [x]\n  (if (= x 1)\n    1\n    (* x (fac (dec x)))))", "user": "5bc8e91ee4b07a9b28b100ce"}, {"problem": 42, "code": "(fn fact [n]\n  (reduce * (range 1 (inc n))))", "user": "5bc833a5e4b07a9b28b100bb"}, {"problem": 42, "code": "(fn foo [x]\n  (if (> x 1)\n    (* (foo (dec x))\n      x)\n    1))", "user": "5a8aa992e4b05369db4d24d8"}, {"problem": 42, "code": "#(last (take % (reductions * (iterate inc 1))))\n\n\n;; (fn fac [x]\n;;   (loop [count x\n;;          res 1]\n;;     (if (= 0 count)\n;;       res\n;;       (recur (dec count) (* res count)))))", "user": "5b98f7f3e4b0c0b3ffbd4ac2"}, {"problem": 42, "code": "(fn [n]\n  (loop [x 1\n         result 1]\n    (if (= (dec x) n)\n      result\n      (recur (inc x) (* result x)))))", "user": "554f817ce4b00713264bd9a2"}, {"problem": 42, "code": "(fn [n]\n  (loop [number n\n         result 1]\n    (if (<= number 1)\n      result\n      (recur (dec number) (* result number)))))", "user": "593870e6e4b02506e01a29d6"}, {"problem": 42, "code": "#(apply *' (range 1 (inc %)))", "user": "5b337ff4e4b025bcb146f339"}, {"problem": 42, "code": "(fn fact [x]\n  (if\n    (= x 1)\n    x\n    (* x (fact (dec x)))\n  )\n)", "user": "5bd5ede3e4b0ed4b8aab4ba3"}, {"problem": 42, "code": "(fn [n]\n  (loop [n n\n         acc 1]\n    (if (= 1 n)\n      acc\n      (recur (dec n) (* acc n)))))", "user": "5b673832e4b0c6492753e760"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "5bb948f5e4b0a20761a235d5"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "567c63f6e4b05957ce8c61bb"}, {"problem": 42, "code": "#(reduce * (take % (iterate inc 1)))", "user": "5bc611e3e4b07a9b28b10083"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5bd7b8b8e4b0ed4b8aab4bc6"}, {"problem": 42, "code": "#(loop [result 1 n %] (if (= n 1) result (recur (* n result) (- n 1))))", "user": "5a6b8a9ae4b0512ff01cda3f"}, {"problem": 42, "code": "(fn [factor]\n\t(reduce #(* %1 %2) (range factor 0 -1)))", "user": "59595f85e4b066ee0a44afa1"}, {"problem": 42, "code": "(fn f [n] (condp = n\n             0 1\n             1 1\n             (* n (f (dec n)))))", "user": "5bd9549ee4b0ed4b8aab4bf0"}, {"problem": 42, "code": "#(apply * (range 1 (+ % 1)))", "user": "5ba0dcfce4b0c0b3ffbd4b98"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5bbdd136e4b07a9b28b0ffab"}, {"problem": 42, "code": "(fn [n]\n  (loop [cnt 1 current 1]\n    (if (= cnt n)\n      current\n      (recur (inc cnt) (* current (inc cnt)))\n    )\n  )\n)", "user": "5bdf651ee4b0ed4b8aab4c6d"}, {"problem": 42, "code": "#(reduce * (take % (iterate inc 1)))", "user": "5bd999cce4b0ed4b8aab4bf4"}, {"problem": 42, "code": "#(reduce * (take % (map inc (range))))", "user": "5be0306be4b0ed4b8aab4c7d"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5bc7c3aee4b07a9b28b100b2"}, {"problem": 42, "code": "(fn fact [x]\n  (if (= x 0)\n    1\n    (* x (fact (- x 1)))))", "user": "5be1c6c6e4b0ed4b8aab4ca5"}, {"problem": 42, "code": "(fn __ [s] (if (= s 1) 1 (* s (__ (dec s)))))", "user": "5be2e670e4b0ed4b8aab4ccc"}, {"problem": 42, "code": "(fn f [n]\n    (if (= n 1)\n      1\n      (* n\n         (f (dec n)))))", "user": "5be5cebde4b0ed4b8aab4d19"}, {"problem": 42, "code": "(fn [n]\n  (letfn [(helper [n acc]\n                  (if (= n 1)\n                    acc\n                    (recur (dec n) (* n acc))))]\n    (helper n 1)))", "user": "5be58beae4b0ed4b8aab4d14"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5b72b36ce4b047b03b2036a9"}, {"problem": 42, "code": "(fn [x] (letfn [\n                (fach [y acc] (if (zero? y) acc (recur (dec y) (* y acc))\n                                                       ))]\n          (fach x 1)))", "user": "5be6d0f8e4b0f319e2d7ec51"}, {"problem": 42, "code": ";(fn [n]\n;  (loop [i 2 acum 1]\n;    (if (not= i (+ n 1)) \n;      (recur (inc i)  (* acum i))\n;      acum\n;    )\n;  )\n;)\n\n#(reduce * (range 1 (inc %)))", "user": "5be589f9e4b0ed4b8aab4d13"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5b60e88be4b0c6492753e70b"}, {"problem": 42, "code": "(fn f [x] (if (<= x 1) 1 (* x (f (dec x)))))", "user": "5b7d03a0e4b047b03b20373d"}, {"problem": 42, "code": "(fn [n]\n  (loop [n1 n\n         acc 1]\n    (if (= n1 0)\n      acc\n      (recur (dec n1) (* n1 acc)))))", "user": "5be33a16e4b0ed4b8aab4cd6"}, {"problem": 42, "code": "(fn [n]\n  (loop [n n\n         prod 1]\n    (cond (= n 1)\n          prod\n          :else\n          (recur (dec n) (* prod n)))))", "user": "55469eede4b0a04f79299542"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5bc64843e4b07a9b28b10091"}, {"problem": 42, "code": "(fn fib [n]\n  (reduce * (range 1 (inc n))))", "user": "5bedddeee4b0a6d31fed2128"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5ba15075e4b0a20761a2339e"}, {"problem": 42, "code": "(fn [x]\n  (reduce *\n  (let [i 1]\n  (take-while #(<= % x)\n            (iterate inc i)))))", "user": "5b4b58f2e4b02d533a91bc9c"}, {"problem": 42, "code": "(fn [x]\n  (reduce * (range 1 (inc x))))", "user": "5be70bd5e4b0f319e2d7ec53"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5be182eae4b0ed4b8aab4c9d"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5bece6a5e4b0a6d31fed2114"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "5bf0aefde4b0a6d31fed215a"}, {"problem": 42, "code": "(fn fact [x]\n  (if (<= x 1)\n    1\n    (let [y (dec x)]\n      (* x (fact y)))))", "user": "5b15ab32e4b0cc2b61a3be72"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5bf50e76e4b0b326c961d8a0"}, {"problem": 42, "code": "(fn [num] (reduce * (range 1 (inc num))))", "user": "5a09a6f7e4b01bb0ae8afe14"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "5bf5ddfde4b0bdcf453d159e"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5beb8e28e4b0f319e2d7ec8e"}, {"problem": 42, "code": "(fn fact [n] (if (= n 1) 1 (* n (fact (- n 1)))))", "user": "5bf1b957e4b0a6d31fed216f"}, {"problem": 42, "code": "(fn [x] (apply * (range 1 (inc x))))", "user": "5bfa25fbe4b0bdcf453d15c8"}, {"problem": 42, "code": "#(loop [n % total 1]\n   (if (zero? n)\n     total\n     (recur (dec n) (* total n))))", "user": "5bec37e2e4b0f319e2d7ec96"}, {"problem": 42, "code": "(fn fac [x]\n  (if (= x 1) 1\n    (* x (fac (- x 1)))))", "user": "5be15f4de4b0ed4b8aab4c9b"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5beda647e4b0a6d31fed2122"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5bea3177e4b0f319e2d7ec81"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (inc x ))))", "user": "5bed1e4ae4b0a6d31fed2118"}, {"problem": 42, "code": "(fn func\n    [n]\n    (if (<= n 1)\n      1\n      (* n (func (dec n))))\n  )", "user": "5b8db323e4b0c0b3ffbd49da"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "56c50599e4b05cc29241ee9e"}, {"problem": 42, "code": "(fn [n] (loop [i n res 1] (if (zero? i) res (recur (dec i) (* res i)))))", "user": "5c03e927e4b0bdcf453d167b"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5bfe4ecfe4b0bdcf453d1608"}, {"problem": 42, "code": "(fn fac [num]\n  (if (= num 0) 1\n  (* num (fac (dec num)))))", "user": "5c01ba2ce4b0bdcf453d1656"}, {"problem": 42, "code": "#(loop [n %1, prod 1]\n   (if (= n 1)\n     prod\n     (recur (dec n) (* prod n))))", "user": "5c0a87e6e4b0bdcf453d1707"}, {"problem": 42, "code": "(fn factorial [n]\n   (if (< n 2)\n     1\n     (* n (factorial (dec n)))))", "user": "5bef3e88e4b0a6d31fed213f"}, {"problem": 42, "code": "(fn [z]\n  (loop [a 1\n         c z]\n    (if (= c 0)\n      a\n      (recur (* a c) (dec c)))))", "user": "5ac9c737e4b0e27600da77d2"}, {"problem": 42, "code": "(fn fac\n  [x]\n  (if (zero? x) 1 (* x (fac (dec x)))))", "user": "5c0e58bfe4b01240ff567140"}, {"problem": 42, "code": "(fn fact [n]\n  (if (zero? n)\n    1\n    (* n (fact (dec n)))\n  )\n)", "user": "5c0d0537e4b0bdcf453d173d"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "4ee897fe535d93acb0a66883"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5bed84b1e4b0a6d31fed2120"}, {"problem": 42, "code": "(fn [n] (loop [cur n \n               acc 1]\n          (if (<= cur 0)\n            acc\n            (recur (- cur 1) (* acc cur))\n            )\n          )\n  )", "user": "5c05cae7e4b0bdcf453d16a3"}, {"problem": 42, "code": "(fn problem31 [n]\n  (if (= n 1)\n    1\n    (* n (problem31 (dec n)))))", "user": "5141e978e4b0b50abeb46b20"}, {"problem": 42, "code": "(fn f [x] \n  (loop [ans 1 left x]\n    (if (< 1 left)\n      (recur (* left ans) (dec left))\n      ans\n    )\n  )\n)", "user": "5bf2cf8be4b0a6d31fed217c"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "594d4c57e4b07ddc2dafae87"}, {"problem": 42, "code": "#(reduce (fn [x y] (* x y)) 1 (range % 0 -1))", "user": "5c0e22cae4b01240ff56713b"}, {"problem": 42, "code": "(fn [n] (reduce * 1 (drop 1 (range (+ 1 n)))))", "user": "5c119da6e4b01240ff56717d"}, {"problem": 42, "code": "(fn fact [x] (if (= x 1) x\n                (* x (fact (- x 1)))))", "user": "5c11812ee4b01240ff56717b"}, {"problem": 42, "code": "#(apply * (rest (range (inc %))))", "user": "5c13ce5ee4b01240ff5671a4"}, {"problem": 42, "code": "#(apply * (map inc (range %)))", "user": "5c13da47e4b01240ff5671a6"}, {"problem": 42, "code": "(fn fact [x] (reduce * (range 1 (+ x 1))))", "user": "5bfc2068e4b0bdcf453d15e4"}, {"problem": 42, "code": "(fn fact [n] (if (= n 1) 1 (* n (fact (dec n)))))", "user": "5c0ebca5e4b01240ff567147"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5b8ec146e4b0c0b3ffbd49f0"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5c165d3ee4b01240ff5671d1"}, {"problem": 42, "code": "(fn factorial [n]\n  (reduce * (range 1 (inc n))))", "user": "5beebdb7e4b0a6d31fed2132"}, {"problem": 42, "code": "(fn[number]\n  (reduce * (range 1 (inc number)))\n)", "user": "5c115097e4b01240ff567172"}, {"problem": 42, "code": "(fn [n]\n  (reduce * 1 (range 1 (inc n))))", "user": "5c15537ae4b01240ff5671bf"}, {"problem": 42, "code": "#(apply * (rest (range (+ 1 %))))", "user": "5c1aadcde4b01240ff567209"}, {"problem": 42, "code": "(letfn [(! [x] (if (= x 1) 1 (* x (! (dec x)))))] !)", "user": "5c1bee41e4b01240ff567218"}, {"problem": 42, "code": "(fn ! [n] (case n 1 1 (* n (! (dec n)))))\n#_#(case % 1 1 3 6 5 120 8 40320)", "user": "5c1c08cde4b01240ff567219"}, {"problem": 42, "code": "#(->> (iterate inc 1) \n       (take %) \n       (reduce *) )", "user": "5ab3db13e4b073f177442609"}, {"problem": 42, "code": "(fn [fact]\n   (apply * (reverse (range 1 (inc fact)))))", "user": "5c1ca642e4b0efcb0b05b23c"}, {"problem": 42, "code": "#(* % (reduce * (range 1 %)))", "user": "5c1edf23e4b0efcb0b05b25d"}, {"problem": 42, "code": "(fn\n  [top-integer]\n  (let [integers (range 2 top-integer)]\n    (reduce * top-integer integers)\n    )\n  )", "user": "5c1d9f05e4b0efcb0b05b24c"}, {"problem": 42, "code": "#(apply * % (range 1 %))", "user": "5b0bd9cfe4b0cc2b61a3bdd9"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "58273e82e4b051871117bf1b"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5c1b6763e4b01240ff56720f"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5c17467fe4b01240ff5671df"}, {"problem": 42, "code": "(fn [n]\n  (loop [m n prod 1]\n    (if (= m 1)\n      prod\n      (recur (dec m) (* prod m)))\n   \n   \n   ))", "user": "5c0e3f86e4b01240ff56713d"}, {"problem": 42, "code": "(fn factorial \n  [x]\n  (reduce * (range 1 (+ x 1)))\n  )", "user": "5c20b6abe4b07e362c230576"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "57131a8ee4b07c98581c3a97"}, {"problem": 42, "code": "#(loop [start 1 end % res 1] (if (= start end) res (recur (+ start 1) end (* res (+ start 1)))))", "user": "5c228b51e4b07e362c23058c"}, {"problem": 42, "code": "(fn fact [n]\n  (if (= n 1) 1\n    (* n (fact (- n 1)))))", "user": "5c222b7de4b07e362c230588"}, {"problem": 42, "code": "(fn [x] (apply * (range 1 (inc x))))", "user": "582c986ee4b051871117bf9b"}, {"problem": 42, "code": "#(loop [sum 1\n          c %1]\n    (if (= 0 c)\n      sum\n      (recur\n        (* sum c)\n        (- c 1)\n      )\n    )\n  )", "user": "5bfcdc52e4b0bdcf453d15f4"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5c219c0fe4b07e362c230581"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5c2649c8e4b07e362c2305bf"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1) ))", "user": "5c272f82e4b07e362c2305cb"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "5c092334e4b0bdcf453d16ea"}, {"problem": 42, "code": "(fn f[n] (if (zero? n) 1 (* n (f (dec n)))))", "user": "5ba75fdfe4b0a20761a23419"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5c2836ebe4b07e362c2305d4"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "50eeeadae4b02c17778c91f3"}, {"problem": 42, "code": "(fn fact [n]\n  (loop [out 1\n         i 2 ]\n    (if (> i n)\n      out\n      (recur (* i out) (inc i)))))", "user": "5c195cb2e4b01240ff5671f7"}, {"problem": 42, "code": "(fn fact\n  ([n] (fact n 1))\n  ([n v] (if (> n 0)\n           (fact (dec n) (* n v))\n           v)))", "user": "5c2f0cdfe4b0d62ef62d9f09"}, {"problem": 42, "code": "#(reduce * (take % (iterate dec %)))", "user": "5c24671be4b07e362c2305a1"}, {"problem": 42, "code": "(fn my-factorial [n]\n  (loop [i 1 result 1]\n    (if (> i n)\n      result\n      (recur (inc i) (* i result)))))", "user": "5c24c654e4b07e362c2305a7"}, {"problem": 42, "code": "(fn faktorial\n  [i]\n  (if (<= i 1)\n    1\n    (* i (faktorial (dec i)))))", "user": "5c32ea85e4b0d62ef62d9f3e"}, {"problem": 42, "code": "(fn factFun [n]\n  (loop [rez 1\n         num 1]\n    (if (= num n)\n        (* n rez)\n        (recur (* rez num) (inc num)))))", "user": "5776903ee4b0979f8965163b"}, {"problem": 42, "code": "(fn factorial [n]\n  (if (= n 1) 1\n              (* n (factorial (dec n))))\n  )", "user": "5c36d110e4b0d62ef62d9f6a"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5c337305e4b0d62ef62d9f48"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5a64dcabe4b0512ff01cd9a9"}, {"problem": 42, "code": "(fn factorial [n]\n  (if (= n 1) 1\n              (* n (factorial (dec n))))\n  )", "user": "5c3ac091e4b0d62ef62d9f95"}, {"problem": 42, "code": "(fn [n]\n  (loop [res 1\n         end n]\n    (if (= end 0) res\n      (recur (* res end) (- end 1)))))", "user": "5be0b916e4b0ed4b8aab4c8f"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5c35acffe4b0d62ef62d9f62"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5c379636e4b0d62ef62d9f76"}, {"problem": 42, "code": "(fn factorial [n]\n  (reduce * (range 1 (inc n))))", "user": "5c196dc3e4b01240ff5671fa"}, {"problem": 42, "code": "(fn [n]\n   (loop [acc 1, n n]\n     (if (<= n 0)\n       acc\n       (recur (* acc n) (- n 1)))))", "user": "5c2dfca3e4b0d62ef62d9efc"}, {"problem": 42, "code": "(fn [num]\n (reduce * (range 1 (inc num))))", "user": "5c374db6e4b0d62ef62d9f73"}, {"problem": 42, "code": "(fn f ([x] (f x 1))\n      ([x y] (if (= x 1) y (f (dec x) (* y x)))))", "user": "5c308385e4b0d62ef62d9f1c"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "5c32603ee4b0d62ef62d9f38"}, {"problem": 42, "code": "#(reduce * (range 2 (inc %)) )", "user": "5c408a61e4b08cd430848eb2"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "5c30d90de4b0d62ef62d9f22"}, {"problem": 42, "code": "(fn [n]\n  (if (zero? n)\n    1\n    (loop [i 1, acc i]\n      (if (> i n)\n        acc\n        (recur (inc i) (* i acc))))))", "user": "5c3ec6dbe4b08cd430848e8a"}, {"problem": 42, "code": "(fn [number]\n\n  (reduce *  (take number (iterate inc 1)) )\n\n\n  )", "user": "53b0750fe4b047364c044483"}, {"problem": 42, "code": "(fn [n]\n  (let [s (rest (range (inc n)))]\n    (reduce * s)\n    ))", "user": "54d90b36e4b0a52adc2e2049"}, {"problem": 42, "code": "(fn factorial\n  ([n] (last (take n (factorial 1 2))))\n  ([x y] (cons x (lazy-seq (factorial (* x y) (inc y))))))", "user": "5c3f37fce4b08cd430848e91"}, {"problem": 42, "code": "(fn my-fac [x]\n (reduce * (take-while #(not= 0 %) (iterate dec x))))", "user": "5c411df3e4b08cd430848ebf"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "57635e2de4b0994c1922fbbf"}, {"problem": 42, "code": "#(reduce *(range 1 (inc %)))", "user": "5c486dece4b0e06e1360a3c0"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5c3796b3e4b0d62ef62d9f77"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5c0eb93ce4b01240ff567146"}, {"problem": 42, "code": "(fn [xs] (loop [x xs y 1]\n       (if (= x 0)\n         y\n         (recur (dec x) (* y x)))))", "user": "5c387c51e4b0d62ef62d9f83"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5b03063de4b0cc2b61a3bd5b"}, {"problem": 42, "code": "(fn [x] (reduce (fn [a y] (* a (inc y))) 1 \n               (range x)))", "user": "52384eb1e4b0fae3832e99fa"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "502ea967e4b06efe12e8cc76"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %1)))", "user": "5c4ab449e4b0f9f7a8770e57"}, {"problem": 42, "code": "#(->>\n  (range 1 (inc %))\n  (reduce *)\n)", "user": "5c493046e4b0e06e1360a3cb"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5c48757fe4b0e06e1360a3c3"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5c4c74efe4b0f9f7a8770e76"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "5c512811e4b0fb8c5ffd99c2"}, {"problem": 42, "code": "(fn [x] (apply * (range 1 (inc x))))", "user": "5c30da5ae4b0d62ef62d9f23"}, {"problem": 42, "code": "(fn factorial [n]\n  (if (= n 0)\n    1\n    (* n (factorial (dec n)))))", "user": "5c506951e4b0f9f7a8770ec5"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5c45e703e4b0e06e1360a391"}, {"problem": 42, "code": "(fn factorial [n]\n  (if (= n 1)\n    1\n    (* n (factorial (dec n)))))", "user": "5c50154be4b0f9f7a8770ebc"}, {"problem": 42, "code": "(fn [n]\n  (letfn [(impl [n r]\n                (if (<= n 1)\n                  r\n                  (recur (- n 1) (* r n))))]\n    (impl n 1)))", "user": "5c50048ae4b0f9f7a8770eb9"}, {"problem": 42, "code": "(fn [x] (apply * (take x (iterate #(* (inc %1)) 1))))", "user": "5c3cd80fe4b0d62ef62d9faa"}, {"problem": 42, "code": "(fn fact [n] \n  (if (<= n 1) \n    1 \n    (* n (fact (dec n)))))", "user": "558ea13be4b0277789237654"}, {"problem": 42, "code": "#(reduce * (rest (range (inc %))))", "user": "5b14475be4b0cc2b61a3be5a"}, {"problem": 42, "code": "(fn fact [x] (if (= x 0) 1 (* x (fact (- x 1)))))", "user": "5c54e605e4b0fb8c5ffd9a14"}, {"problem": 42, "code": "(fn fac [x] (if (= x 1) 1 (* x (fac (- x 1)))))", "user": "5c53127ee4b0fb8c5ffd99ef"}, {"problem": 42, "code": "(fn f\n  [n]\n  (if (<= n 1)\n    1\n    (* n (f (dec n)))))", "user": "5c435a9fe4b0e06e1360a367"}, {"problem": 42, "code": "(fn [x] (loop [n x f 1]\n        (if (= n 1)\n            f\n            (recur (dec n) (* f n)))))", "user": "5c51c930e4b0fb8c5ffd99ce"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "5c38422ae4b0d62ef62d9f7f"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5c59b1d3e4b01df32ab73261"}, {"problem": 42, "code": "(fn [n]\n  (loop [result n\n         i (dec n)]\n    (if (= i 0) result (recur (* i result) (dec i)))))", "user": "579dd954e4b05b1deef9ae1b"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %1)))", "user": "5c51d700e4b0fb8c5ffd99d1"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "5549ca1ce4b0a04f7929956c"}, {"problem": 42, "code": "(fn [x] (reduce #(* %1 %2) (range 1 (+ 1 x))))", "user": "5c3de434e4b0d62ef62d9fb8"}, {"problem": 42, "code": "(fn f [n]\n  (if (= n 1)\n    1\n    (* n (f (dec n)))))", "user": "5c62979fe4b0fca0c162264c"}, {"problem": 42, "code": "(fn\n  [n]\n  (->> n inc (range 1 ,,,) (reduce *' ,,,)))", "user": "5c6227fee4b0fca0c1622641"}, {"problem": 42, "code": "#(apply * (take % (iterate dec %)))", "user": "592883f1e4b072a2710fceea"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (range 1 (+ n 1))))", "user": "5c5d2e90e4b01df32ab732af"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "5af4446de4b0cc2b61a3bc93"}, {"problem": 42, "code": "(fn [n]\n           (reduce (fn [acc cand]\n                     (* acc cand))\n                   (range 1 (inc n))))", "user": "4e617114535d8ccf87e9fe5b"}, {"problem": 42, "code": "(fn factorial [number]\n    (cond \n        (= number 0) 1\n        :else (* number (factorial (dec number)))))", "user": "59cd351ee4b0ef0a1e9b5b35"}, {"problem": 42, "code": "(fn [n]\n  \t\t(loop [x n result 1]\n    \t\t(if (> x 0)\n      \t\t(recur (dec x) (* x result))\n      \tresult)))", "user": "5c596d6ce4b01df32ab73257"}, {"problem": 42, "code": "(fn [x]\n  ((fn iter [total cur]\n    (if (= cur 0)\n      total\n      (iter (* total cur) (dec cur)) )) 1 x))", "user": "5c3f6322e4b08cd430848e97"}, {"problem": 42, "code": "(fn fact [x]\n(loop [fct x result x]\n(if (> fct 1)\n(recur (dec fct) (* result (dec fct)))\nresult)))", "user": "5c0614f6e4b0bdcf453d16a9"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5c52f3fce4b0fb8c5ffd99e9"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "user": "5c58736be4b01df32ab73247"}, {"problem": 42, "code": "(fn my-factorial [n]\n  (loop [iter n\n         acc 1]\n    (if (zero? iter)\n      acc\n      (recur (dec iter) (* acc iter))\n      )))", "user": "5c6448d6e4b0fca0c1622674"}, {"problem": 42, "code": "(fn factorial [n]\n  (cond (zero? n) 1\n        :else (* n (factorial (dec n)))))", "user": "58b12635e4b0ebc645576cf4"}, {"problem": 42, "code": "#(apply *(take % (iterate inc 1)))", "user": "5a6dbaf5e4b0512ff01cda63"}, {"problem": 42, "code": "(fn factorial [x]\n    (cond\n      (< x 3) x\n      :else (* x (factorial (dec x)))\n      )\n    )", "user": "5b269cf3e4b063e2438bcc35"}, {"problem": 42, "code": "[1 1 2 6 1 120 1 1 40320]", "user": "5c41db45e4b08cd430848ece"}, {"problem": 42, "code": "(fn f [x]\n  (if (= x 1)\n    1\n    (* (f (dec x)) x)  \n  ))", "user": "5c6f0755e4b0fca0c162275d"}, {"problem": 42, "code": "(fn factorial [x] \n   (if (< x 2)\n     x\n     (* x (factorial (dec x)))))", "user": "5c6d0e51e4b0fca0c1622735"}, {"problem": 42, "code": "(fn [n] (letfn [(fact [x acc]\n                           (if (= x 1) acc\n                                       (fact (dec x) (* x acc))\n                                       )\n                           )\n                         ]\n                   (fact n 1)\n                   ))", "user": "5c635364e4b0fca0c162265f"}, {"problem": 42, "code": "(fn[x] (reduce *' (range 1 (inc x))))", "user": "5c6cf34fe4b0fca0c1622732"}, {"problem": 42, "code": "#(apply * (take % (iterate inc 1)))", "user": "5c683fb5e4b0fca0c16226d5"}, {"problem": 42, "code": "#(reduce (fn [fact n] (* fact n)) (range 1 (inc %)))", "user": "5c6e1006e4b0fca0c1622744"}, {"problem": 42, "code": "(fn fact \n  ([a] (fact (dec a) a))\n  ([a s] \n    (if (<= a 1) s\n      (recur (dec a) (* a s))\n    )\n  )\n  )", "user": "553b90c8e4b09218d5f45005"}, {"problem": 42, "code": "(fn [x]\n    (loop [n x f 1]\n        (if (= n 1)\n            f\n            (recur (dec n) (* f n)))))", "user": "5bcee7d9e4b0e9689409ee22"}, {"problem": 42, "code": "(fn [n]\n  (apply * (range 1 (inc n))))", "user": "5c73b8bae4b0fca0c16227ba"}, {"problem": 42, "code": "(fn [n] (apply * (take n (drop 1 (range)))))", "user": "5c46e6dde4b0e06e1360a3a7"}, {"problem": 42, "code": "(fn [i]\n  (reduce * (range 1 (+ i 1))))", "user": "5c718e6ce4b0fca0c1622796"}, {"problem": 42, "code": "(fn\n  [n]\n  (loop [res 1\n         curr 1]\n    (if (> curr n)\n      res\n      (recur (*' res curr) (inc curr)))))", "user": "5c706232e4b0fca0c162277e"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5c787131e4b0fca0c1622825"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5c792c34e4b0fca0c1622834"}, {"problem": 42, "code": "(fn factorial [n] (cond \n                    (= n 0) 1\n                    :else (* n (factorial (- n 1)))))", "user": "5c7c1d8ee4b0d597f478ca88"}, {"problem": 42, "code": "(fn [n] (reduce * (take n (iterate dec n))))", "user": "5c723f4be4b0fca0c16227a0"}, {"problem": 42, "code": "#(last(take % ((fn factorials \n               ([] (factorials 1 2))\n               ([a b] (cons a (lazy-seq (factorials (* a b) (inc b)))))))))", "user": "5c72c2b9e4b0fca0c16227ab"}, {"problem": 42, "code": "(fn fact [n]\n  (loop [i 2 sum 1]\n    (if (> i n)\n      sum\n      (recur (inc i) (* sum i)))))", "user": "5c7d5a0ce4b0d597f478caab"}, {"problem": 42, "code": "(fn [n] (reduce (fn [t curr] (* t curr)) 1 (range 2 (inc n))))", "user": "5c76577ae4b0fca0c16227ea"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5b100648e4b0cc2b61a3be17"}, {"problem": 42, "code": "(fn get-fact\n  [n]\n  (last (take n ((fn my-fact\n                   ([] (my-fact 1 2))\n                   ([a b]\n                    (lazy-seq (cons a (my-fact (* a b) (inc b))))\n                    )\n                   ))))\n)", "user": "5c75a30ee4b0fca0c16227df"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5c664b87e4b0fca0c16226a5"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "5c619df4e4b0fca0c1622637"}, {"problem": 42, "code": "(fn [n] ((fn fac [n v] (if (< n 2) v (fac (- n 1) (* v n)))) n 1))", "user": "5c7ef3f3e4b0d597f478cad7"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5c7bc0a5e4b0fca0c1622865"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5c26c9b3e4b07e362c2305c5"}, {"problem": 42, "code": "#(apply * (range 1 (inc %1)))", "user": "5c8025d6e4b0c8042a70ce11"}, {"problem": 42, "code": "(fn [x] (reduce * (take x (iterate inc 1))))", "user": "5c8002cde4b0c8042a70ce09"}, {"problem": 42, "code": "#(apply * (drop 1 (range (inc %))))", "user": "5c813b27e4b0c8042a70ce22"}, {"problem": 42, "code": "(fn !\n  [n]\n  (reduce *' (range 1 (inc n))))", "user": "5c7dad57e4b0d597f478caba"}, {"problem": 42, "code": "(fn [x]\n  (loop [n x f 1]\n    (if (= n 1)\n      f\n      (recur (dec n) (* f n)))))", "user": "5c7f7889e4b0d597f478cae0"}, {"problem": 42, "code": "(fn lstFac\n  [n]\n  (loop [i      1\n         result 1]\n    (if (> i n)\n      result\n      (recur (inc i)\n             (*' result i)))))", "user": "5c82db41e4b0c8042a70ce42"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5c8319c3e4b0c8042a70ce45"}, {"problem": 42, "code": "(fn [x]\n  (reduce * (range 1 (inc x))))", "user": "5c748bf5e4b0fca0c16227cb"}, {"problem": 42, "code": "#(reduce *' (range 1 (+ % 1)))", "user": "5c746c31e4b0fca0c16227c8"}, {"problem": 42, "code": "(fn [n] (reduce *' (range 1 (inc n))))", "user": "5c75a830e4b0fca0c16227e0"}, {"problem": 42, "code": "#(reduce * (drop 1 (range (inc %))))", "user": "5c879edae4b048ec896c5917"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %1)))", "user": "5c784248e4b0fca0c162281f"}, {"problem": 42, "code": "(fn !\n  [n]\n  (if (zero? n)\n    1\n    (*' n (! (dec n)))))", "user": "5c7d5463e4b0d597f478caa9"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5c70641de4b0fca0c162277f"}, {"problem": 42, "code": "(fn myFactorial\n  [num]\n  (reduce * (range 1 (inc num))))", "user": "5c74b043e4b0fca0c16227ce"}, {"problem": 42, "code": "(fn [n]                                                                                                 \n  (loop [i 1 result 1]                                                                                                                                                                                          \n    (if (= i n)                                                                                               \n      result                                                                                                  \n      (recur (inc i) (* result (inc i))))))", "user": "5c558070e4b0fb8c5ffd9a1e"}, {"problem": 42, "code": "(fn [n](reduce *(range 1 (inc n))))", "user": "5c7d947be4b0d597f478cab6"}, {"problem": 42, "code": "(fn [n] (apply * (range 1 (inc n))))", "user": "5c7bb8c0e4b0fca0c1622864"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (+ n 1))))", "user": "5c852e3ae4b0c8042a70ce78"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5c7c8c72e4b0d597f478ca96"}, {"problem": 42, "code": "(fn ! [n]\n  \"Factorial\"\n  (if (zero? n) 1\n                (*' n (! (dec n)))))", "user": "5c7741dce4b0fca0c1622806"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5bcf0b1be4b0e9689409ee24"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5c706454e4b0fca0c1622780"}, {"problem": 42, "code": "(fn factorial\n  [n]\n  (apply * (range 1 (inc n))))", "user": "5c73bcf9e4b0fca0c16227bb"}, {"problem": 42, "code": "(fn [n]\n(loop [result 1\n       counter 1]\n(if (> counter n) result\n(recur (* counter result) (inc counter)))))", "user": "5c09e555e4b0bdcf453d16fd"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5c8ecb58e4b048ec896c59b0"}, {"problem": 42, "code": "(fn [n]\n  (apply * (range 1 (+ 1 n))))", "user": "56ee905be4b04a395b9a044f"}, {"problem": 42, "code": "#(reduce * (take % (iterate inc 1)))", "user": "5c8fd8f3e4b048ec896c59c7"}, {"problem": 42, "code": "(fn fact\n  ([n]\n   (loop [n n\n          acc 1]\n     (if (zero? n)\n       acc\n       (recur (dec n)\n              (* n acc))))))", "user": "5c2d1f63e4b0d62ef62d9ef0"}, {"problem": 42, "code": "(fn fact [x]\n  (if (= 1 x)\n    1\n    (* x (fact (dec x)))))", "user": "566a0845e4b04acd4f672e05"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (range 1 (+ n 1))))", "user": "5c86b769e4b0c8042a70ce9b"}, {"problem": 42, "code": "(fn my-factorial\n  [n]\n  (loop [ix n\n         out 1]\n    (if (= ix 1)\n      out\n      (recur (dec ix) (* ix out)))))", "user": "5c92105ce4b048ec896c59f7"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (range 1 (inc n)))\n  )", "user": "5c891afde4b048ec896c5935"}, {"problem": 42, "code": "(fn [n]\n          (loop [n n\n                 result 1]\n            (if (zero? n)\n              result\n              (recur (dec n)\n                     (* result n)))))", "user": "5c995fa4e4b048ec896c5a96"}, {"problem": 42, "code": "(fn [n]\n  (apply * (take n (iterate inc 1))))", "user": "5c987160e4b048ec896c5a82"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "5c896f46e4b048ec896c5940"}, {"problem": 42, "code": "(comp (partial apply *) (partial range 1) inc)", "user": "5bd0ea60e4b0e9689409ee45"}, {"problem": 42, "code": ";(fn fact[x]\n;  (if (<= x 1) 1 (* x  (fact (- x 1))  )))\n\n\n#(reduce * (range 1 (inc %)))", "user": "5c97821be4b048ec896c5a70"}, {"problem": 42, "code": "#(->> (range 1 (inc %)) (reduce *))", "user": "5b6002c2e4b0c6492753e6fb"}, {"problem": 42, "code": "(fn [n]\n  (loop [cnt n acc 1]\n    (if (zero? cnt)\n      acc\n      (recur (dec cnt) (* acc cnt)))))", "user": "5c92161de4b048ec896c59f9"}, {"problem": 42, "code": "(fn fact [n]\n  (loop [res 1\n         fin n]\n    (if (= fin 1)\n      res\n      (recur (* res fin) (dec fin)))))", "user": "5c9d0a0be4b048ec896c5afc"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "5c9c79a6e4b048ec896c5ae8"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "50f01f44e4b0bdaecbb47daf"}, {"problem": 42, "code": "(fn n! [n]\n (apply *\n  (range 1 (inc n))))", "user": "510608ebe4b01150e115ebe3"}, {"problem": 42, "code": "(fn [x]\n  (apply * (range 1 (inc x))))", "user": "5ca14eb1e4b048ec896c5b7d"}, {"problem": 42, "code": "(fn fac [x] (if (= x 1) x (* x (fac (dec x)))))", "user": "5c97b621e4b048ec896c5a74"}, {"problem": 42, "code": "(fn fack [n] \n  (if (> n 0)\n  \t(* n (fack (dec n)))\n    1\n  )\n)", "user": "5ca1f8a1e4b048ec896c5b8c"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5c950334e4b048ec896c5a44"}, {"problem": 42, "code": "#(reduce * (map inc (range %)))", "user": "5ca19c10e4b048ec896c5b81"}, {"problem": 42, "code": "(fn fac [n] (if (= n 1) 1 (* n (fac (- n 1)))))", "user": "5be96111e4b0f319e2d7ec70"}, {"problem": 42, "code": "(fn factorial [x]\n  (if (zero? x) 1\n    (* x (factorial (dec x)))))", "user": "5c538cb5e4b0fb8c5ffd99fb"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (+ x 1))))", "user": "598ff38ce4b0fcebec4de869"}, {"problem": 42, "code": "(fn fact\n  [x]\n  (if (or (= x 0) (= x 1))\n    1\n    (* x (fact (- x 1)))))", "user": "5add1fede4b0837691e92c0a"}, {"problem": 42, "code": "(fn factorial [x]\n  (cond (= 0 x)\n        1\n        :else (* x (factorial (dec x)))\n  )\n)", "user": "55a24698e4b0acc240e31523"}, {"problem": 42, "code": "#(reduce * (rest (range (+ 1 %))))", "user": "5ca1c45ae4b048ec896c5b85"}, {"problem": 42, "code": "(fn myfac [n]\n  (case n\n    1 1\n    (* n (myfac (dec n)))))", "user": "5cab33e7e4b048ec896c5c48"}, {"problem": 42, "code": "(fn [x]\n\t(loop [fin 1 i 1]\n\t\t(if (== i x)\n\t\t\tfin\n\t\t\t(recur (* fin (inc i)) (inc i)))))", "user": "5ca04cc3e4b048ec896c5b69"}, {"problem": 42, "code": "(fn q42 [n]\n  (reduce #(* %1 %2) 1 (range 1 (inc n))))", "user": "5cab0ad9e4b048ec896c5c46"}, {"problem": 42, "code": "#(loop [x %, acc 1] (if (= x 1) acc (recur (dec x) (* x acc))))", "user": "5c9dcb36e4b048ec896c5b1d"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5c371f5be4b0d62ef62d9f72"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "58b84c28e4b0ebc645576d94"}, {"problem": 42, "code": "(fn [n] (reduce * 1 (range 1 (inc n))))", "user": "5caf9cace4b026601754b89b"}, {"problem": 42, "code": "(fn [n] (apply * (range 1 (inc n))))", "user": "5bc7f2d6e4b07a9b28b100b7"}, {"problem": 42, "code": "(fn fact \n   [n]\n   (if (= n 0)\n     1\n     (* n (fact (dec n)))))", "user": "5cb71f35e4b026601754b961"}, {"problem": 42, "code": "#(reduce * (for [i (range 1 (inc %))] i))", "user": "5c9419fae4b048ec896c5a2b"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5cb556f9e4b026601754b934"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5cbeadf2e4b0ccb061962755"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (inc x))))", "user": "5cb4e764e4b026601754b929"}, {"problem": 42, "code": "(fn [n] (reduce (fn [acc it] (* acc it)) 1 (range 1 (+ 1 n))))", "user": "5cbdc591e4b026601754ba00"}, {"problem": 42, "code": "(fn factorial [n]\n\t\t(apply * (range 1 (inc n))))", "user": "5cbf7b0de4b0ccb06196276e"}, {"problem": 42, "code": "(fn  [arg1]\n      (loop [iter arg1 sum 1]\n            (if (= iter 1) \n              sum \n              (recur (dec iter) (* sum iter)))))", "user": "5cb6256ce4b026601754b947"}, {"problem": 42, "code": "(fn yo [n] (if (= n 0) 1 (* n (yo (dec n)))))", "user": "5cb62652e4b026601754b949"}, {"problem": 42, "code": "#(reduce * (take % (iterate inc 1)))", "user": "5cbc9dace4b026601754b9eb"}, {"problem": 42, "code": "#(loop [i %\n        r 1]\n   (if (= i 0) r\n     (recur (dec i) (* r i))\n     )\n   )", "user": "56d5c1b0e4b0ea9b8538f7c3"}, {"problem": 42, "code": "(fn [n] (loop [c n acc 1] (if (= 0 c) acc (recur (dec c) (* acc c)))))", "user": "5ca7b5bbe4b048ec896c5c04"}, {"problem": 42, "code": "(fn fac [n]\n   (reduce * (range 1 (inc n))))", "user": "5c547cf0e4b0fb8c5ffd9a0b"}, {"problem": 42, "code": "#(apply * (range 1 (inc %1)))", "user": "5a09ebf8e4b0eab8c0448932"}, {"problem": 42, "code": "(fn fact [x] (loop [x x res 1]\n               (if (= x 1)\n                 res\n                 (recur (dec x) (* res x)))))", "user": "5cb11a72e4b026601754b8c6"}, {"problem": 42, "code": "(fn[x]\n    (reduce * (take-while #(<= % x) (iterate inc 1))))", "user": "5cc6f982e4b0ccb06196282d"}, {"problem": 42, "code": "#(reduce * (map inc (range %)))", "user": "5cbd5b42e4b026601754b9f6"}, {"problem": 42, "code": "#(apply * (range % 1 -1))", "user": "5cc7342be4b0ccb061962830"}, {"problem": 42, "code": "#(first (nth (iterate (fn [[b a]] [(* a b) (inc a)]) [1 1]) %))", "user": "5cc80598e4b0ccb061962840"}, {"problem": 42, "code": "#(apply * (take-while (fn [x] (> x 0) ) (iterate dec %)))", "user": "5cb0f70ce4b026601754b8c1"}, {"problem": 42, "code": "(fn [n] (apply * (range 1 (inc n))))", "user": "5cc75ffce4b0ccb061962836"}, {"problem": 42, "code": "(fn fac [n]\n  (loop [mult   n\n         result 1]\n    (if (= mult 1)\n\t  result\n      (recur (dec mult) (* result mult)))))", "user": "4fbe2cfbe4b081705acca30c"}, {"problem": 42, "code": "(fn fact [n] (if (= n 1) 1 (* n (fact (dec n)))))", "user": "5cc77807e4b0ccb061962838"}, {"problem": 42, "code": "(fn fact [x] (if (= x 1) 1 (* x (fact (dec x)))))", "user": "5ccb3792e4b0ccb061962882"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5cc6b4bfe4b0ccb061962827"}, {"problem": 42, "code": "#(apply *' (range 1 (+ % 1)))", "user": "5c73a944e4b0fca0c16227b8"}, {"problem": 42, "code": "#(reduce * (map inc (range %)))", "user": "5cc4b34de4b0ccb061962805"}, {"problem": 42, "code": "#(apply * (range 1 (inc %1)))", "user": "5cc7692ce4b0ccb061962837"}, {"problem": 42, "code": ";#(apply * (take % (iterate inc 1)))\n#(apply * (range % 1 -1))", "user": "5ccf21c4e4b0ccb0619628c1"}, {"problem": 42, "code": "#(loop [n % res 1] (if (= n 0) res (recur (- n 1) (* n res))))", "user": "5ccf2dc3e4b0ccb0619628c2"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5ccf3879e4b0ccb0619628c4"}, {"problem": 42, "code": "(fn [n]\n  (loop [iter 1\n         acc 1]\n    (if-not (> iter n)\n      (recur (inc iter) (* acc iter))\n      acc)))", "user": "574c3d4ee4b02ea11479921a"}, {"problem": 42, "code": "(fn [n]\n  (loop [result 1\n         n n]\n    (if (= 1 n)\n      result\n      (recur (* result n) (dec n)))))", "user": "5c7c78c9e4b0d597f478ca94"}, {"problem": 42, "code": "(fn factorial [n]\n  (if (= n 0) 1 (* n (factorial (dec n)))))", "user": "5ccb0bbee4b0ccb06196287c"}, {"problem": 42, "code": "(fn [n]\n  (loop [v n res 1]\n    (if (= v 1)\n      res\n      (recur (- v 1) (* v res)))))", "user": "5c87c79be4b048ec896c591b"}, {"problem": 42, "code": "#(reduce * %1 (range 1 %1))", "user": "5cc1f975e4b0ccb0619627c8"}, {"problem": 42, "code": "(fn fac [n] (reduce * (range 1 (inc n))))", "user": "5cd1f5dae4b0ccb0619628f7"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5cb41c40e4b026601754b911"}, {"problem": 42, "code": "(fn f[x] (if (= x 0) 1 (* (f (- x 1)) x)))", "user": "5be79b5be4b0f319e2d7ec5a"}, {"problem": 42, "code": "(fn [x]\n  (loop [i x result 1]\n  (if (= i 1)\n    result\n    (recur (- i 1) (* result i)))))", "user": "5cbb0436e4b026601754b9cc"}, {"problem": 42, "code": "(fn factorialfun [value] (reduce * (range 1 (+ 1 value))))", "user": "5a99d28ee4b0d174b936c7b3"}, {"problem": 42, "code": "(fn [x] (apply * (range 1 (inc x))))", "user": "5642f094e4b08d4f616f5f1f"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5cd99bebe4b05ee0cb311707"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5cd9dc85e4b05ee0cb31170d"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5ca2ca9fe4b048ec896c5b9c"}, {"problem": 42, "code": "#(reduce * (reverse (range 1 (+ % 1))))", "user": "5ccc2a03e4b0ccb06196288f"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5cd639b4e4b0ccb061962940"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "user": "50eb4c32e4b0346a3e988cbf"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5cdfe2aee4b0a17bb84e2b04"}, {"problem": 42, "code": "(fn fac [n]\n  (case n\n    1 1\n    (* n (fac (dec n)))))", "user": "5ce077e9e4b0a17bb84e2b0c"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "user": "5cdd473ae4b05ee0cb311757"}, {"problem": 42, "code": "#(reduce * (rest(range(+ 1 %))))", "user": "5cd4e1b2e4b0ccb061962927"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %1)))", "user": "5cdd934ce4b05ee0cb311761"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (range 1 (+ n 1))))", "user": "5ce2bf8ee4b0a17bb84e2b2e"}, {"problem": 42, "code": "(fn [n] (reduce * (take n (iterate inc 1))))", "user": "5ce41d1be4b0a17bb84e2b50"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5ce05561e4b0a17bb84e2b08"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5cdc08a2e4b05ee0cb31173a"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (inc x))))", "user": "5ce52271e4b0a17bb84e2b69"}, {"problem": 42, "code": "(fn fact [x] (reduce *  (range 1 (inc x))))", "user": "5ce2b15fe4b0a17bb84e2b2c"}, {"problem": 42, "code": "(fn factorial [n]\n  (reduce * (take n (range 1 (+ n 1)))))", "user": "5cdda90ce4b05ee0cb311766"}, {"problem": 42, "code": "#(reduce (fn [a b] (* a b)) 1 (range 1 (inc %)))", "user": "5ce44ee2e4b0a17bb84e2b57"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "5c925cb3e4b048ec896c5a05"}, {"problem": 42, "code": "#(reduce * 1 (rest (range (+ 1 %1))))", "user": "5c967845e4b048ec896c5a60"}, {"problem": 42, "code": "(fn f [n] (if(= n 1) 1 (* (f (dec n)) n)))", "user": "5ce62d8ee4b0a17bb84e2b83"}, {"problem": 42, "code": "#(reduce (fn [acc x] (* acc x)) 1 (range 1 (inc %)))", "user": "5ce78776e4b0a17bb84e2ba2"}, {"problem": 42, "code": "(fn fact [n] (if (= n 1) 1 (* n (fact (dec n)))))", "user": "5ce56455e4b0a17bb84e2b71"}, {"problem": 42, "code": "(fn [num]\n  (loop [val 1\n         res 1]\n    (if (> val num)\n      res\n      (recur (inc val) (* val res)))))", "user": "5ce36e02e4b0a17bb84e2b3e"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5cd4c3dae4b0ccb061962925"}, {"problem": 42, "code": "#(reduce * (range 2 (inc %)))", "user": "5ce3e239e4b0a17bb84e2b46"}, {"problem": 42, "code": "(fn [num] (reduce * (range 1 (+ num 1))))", "user": "5cd06cfbe4b0ccb0619628d2"}, {"problem": 42, "code": "(fn f [x] (if (= x 1) 1 (* x (f (- x 1)))))", "user": "5ce867fce4b0a17bb84e2baf"}, {"problem": 42, "code": "(partial (fn [a x] (if (<= x 0) a (recur (* a x) (- x 1)))) 1)", "user": "5cece5a2e4b0a17bb84e2bfb"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5baaae06e4b0a20761a23464"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "5ce6f93be4b0a17bb84e2b99"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5b44d3cae4b02d533a91bc4e"}, {"problem": 42, "code": "(fn factorial [x] (reduce * (range 1 (inc x))))", "user": "5cf051b0e4b0aaa82f1129f8"}, {"problem": 42, "code": "#(reduce * (range % 0 -1))", "user": "5cebafbbe4b0a17bb84e2be6"}, {"problem": 42, "code": "#(reduce * (take % (iterate dec %)))", "user": "5c665311e4b0fca0c16226a7"}, {"problem": 42, "code": "#(loop [n % r 1]\n   (if (= n 1) r\n     (recur (dec n) (* n r))))", "user": "592bb806e4b072a2710fcf46"}, {"problem": 42, "code": "#(apply * (take % (iterate inc 1)))", "user": "5cf1d9e3e4b0aaa82f112a18"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5cee4bc9e4b0aaa82f1129dc"}, {"problem": 42, "code": "(comp (partial reduce *')\n      (partial range 1)\n      inc)", "user": "5cf115eee4b0aaa82f112a08"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5cd16529e4b0ccb0619628e7"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5cd4f7c5e4b0ccb06196292a"}, {"problem": 42, "code": "(fn factorial [n]\n  (reduce * (range 1 (inc n))))", "user": "511b81c3e4b07ab9ec456183"}, {"problem": 42, "code": "(fn [operand]\n    (reduce * (range 1 (inc operand)))\n    )", "user": "5bf9d9b7e4b0bdcf453d15c4"}, {"problem": 42, "code": "(fn factorial\n  [n]\n  (if (= 1 n) 1 (* n (factorial (dec n)))))", "user": "5c3440fee4b0d62ef62d9f50"}, {"problem": 42, "code": "#(loop [x %1\n       result 1]\n  (if (> x 1)\n    (recur\n      (dec x)\n      (* result x)) result))", "user": "5600bed5e4b04bb52996e170"}, {"problem": 42, "code": "(fn [n] (reduce * (map inc (range n))))", "user": "54e9ac6be4b024c67c0cf834"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5b9ae606e4b0c0b3ffbd4af2"}, {"problem": 42, "code": "(fn [n] (apply * (range 1 (+ n 1))))", "user": "5cf4094be4b0aaa82f112a35"}, {"problem": 42, "code": "(fn fact [n] \n  ((fn inner [cnt acc]\n    \t(if (< cnt 2) acc (recur (dec cnt) (* acc cnt)))\n    ) n 1)\n  )", "user": "5cfd5a93e4b0cc9c91588168"}, {"problem": 42, "code": "#(reduce * (range 1 (+ %1 1)))", "user": "5bcf95ace4b0e9689409ee2e"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5cf935f4e4b0b71b1d808a8f"}, {"problem": 42, "code": "(fn [times]\n  (loop [current 1 output 1]\n    (if (> current times)\n      output\n      (recur (inc current) (* output current)))))", "user": "5cf62ecce4b087f62be35aa7"}, {"problem": 42, "code": "(fn f [n] (if (= n 1) 1 (* n (f (- n 1)))))", "user": "5cf863c4e4b0b71b1d808a80"}, {"problem": 42, "code": "(fn[x] (apply * (range 1 (+ x 1))) )", "user": "5cf7c1b0e4b0b71b1d808a72"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5d01fb3ce4b0cc9c915881b5"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %1)))", "user": "5cf62f9be4b087f62be35aa8"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5cee521ce4b0aaa82f1129dd"}, {"problem": 42, "code": "(fn\n  [n]\n  (reduce (fn [fac, x] (* fac x)) 1 (range 1 (inc n))))", "user": "5cdc17d0e4b05ee0cb31173c"}, {"problem": 42, "code": "#(apply * (range 1 (+ 1 %)))", "user": "5cfeacb7e4b0cc9c9158817d"}, {"problem": 42, "code": "(fn [n]\n  (loop [i n result 1]\n    (if (= i 1)\n      result\n      (recur (dec i) (* result i)))))", "user": "5d03944de4b0cc9c915881c5"}, {"problem": 42, "code": "#(reduce * (take %1 (iterate inc 1)))", "user": "5ceedd7ae4b0aaa82f1129e4"}, {"problem": 42, "code": "(fn factorial\n  ([n] (factorial n 1))\n  ([n tot]\n   (if (= n 1)\n     tot\n     (recur (dec n) (* tot n)))))", "user": "5d06499ae4b0cc9c915881ec"}, {"problem": 42, "code": "(fn\n  [n]\n  (apply * (range 1 (inc n))))", "user": "5c3f29d4e4b08cd430848e8f"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5c87d2cbe4b048ec896c591c"}, {"problem": 42, "code": "(fn [n]\n  (loop [cnt n acc 1]\n    (if (zero? cnt)\n      acc\n      (recur (dec cnt) (* acc cnt)))))", "user": "5d089304e4b0cc9c9158820b"}, {"problem": 42, "code": "(fn factorializer [fact]\n  (loop [current 1 result 1]\n    (if (> current fact)\n      result\n      (recur (inc current) (* result current)))))", "user": "5d0859fbe4b0cc9c91588208"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5d03977ee4b0cc9c915881c7"}, {"problem": 42, "code": "#(loop [n %1, res 1]\n                  (if (zero? n)\n                    res\n                    (recur (dec n) (* res n))\n                    )\n                  )", "user": "5cf72682e4b0b71b1d808a68"}, {"problem": 42, "code": "#(apply * (take % (iterate inc 1)))", "user": "5d0815b3e4b0cc9c91588201"}, {"problem": 42, "code": "(fn fact [n]\n  (reduce * (map inc (range n))) \n)", "user": "5d0aab50e4b0cc9c91588220"}, {"problem": 42, "code": "(fn [n] (apply * (range 1 (inc n))))", "user": "58dde189e4b0a4d5acaab6dd"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5cf68090e4b0b71b1d808a59"}, {"problem": 42, "code": "(fn factorial [n]\n  (if (= n 1)\n    1\n    (* n (factorial (dec n)))))", "user": "5d0eed51e4b0cc9c91588262"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "5cfee28de4b0cc9c91588185"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5d0e311de4b0cc9c91588251"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5d02fe44e4b0cc9c915881c0"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "5d05fdece4b0cc9c915881e8"}, {"problem": 42, "code": "(fn fact [n]\n  (reduce * (range 1 (inc n))))", "user": "5c34f7efe4b0d62ef62d9f5b"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5d132412e4b02c15ef0219a6"}, {"problem": 42, "code": "(fn factorial\n  [n]\n  (loop [out 1\n         x n]\n    (if (= x 1)\n      out\n      (recur (* out x) (dec x)))))", "user": "5d110abee4b02c15ef021983"}, {"problem": 42, "code": "(fn a\n ([x] (a x 1))\n ([x y]\n  (if (< x 1) y \n    (recur (dec x) (* x y)))))", "user": "59dfb8f9e4b08badc2a0c4db"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5d0eda66e4b0cc9c9158825f"}, {"problem": 42, "code": "(fn factorial [n] \n  (if (< n 2) 1\n  (* n (factorial (dec n)))))", "user": "5a08f951e4b01bb0ae8afdfd"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5d148581e4b0902706380dc6"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "58472aade4b089d5ab817ea0"}, {"problem": 42, "code": "(fn [n] (apply * (range 1 (inc n))))", "user": "5d1c047fe4b02ea6f0fb6988"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (inc x))))", "user": "5d1a1082e4b0902706380e0e"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (inc x))))", "user": "5d1bbef0e4b02ea6f0fb6984"}, {"problem": 42, "code": "#(loop [s 1\n        n %]\n   (if (zero? n)\n     s\n     (recur (* s n) (dec n))))", "user": "4f925791e4b0dcca54ed6cac"}, {"problem": 42, "code": "(fn\n  [n]\n  (loop [f 1\n         n n]\n    (if (= 1 n)\n      f\n      (recur (* f n) (dec n)))))", "user": "570c8ac3e4b0b0fb43fd06ca"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5d10c1a8e4b04b4faecf4449"}, {"problem": 42, "code": "(fn f [n] (if (<= n 1) 1 (* n (f (dec n)))))", "user": "5d1e19c4e4b02ea6f0fb69af"}, {"problem": 42, "code": "(fn [n]\n  (loop [x n, result 1]\n    (if (< x 2)\n      result\n      (recur (dec x)\n             (* result x)))))", "user": "5ccf99fbe4b0ccb0619628c8"}, {"problem": 42, "code": "(fn [n]\n  (loop [bil n acc 1]\n    (if (zero? bil)\n      acc\n      (recur (dec bil) (* acc bil)))))", "user": "5d1c3e55e4b02ea6f0fb698b"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5d1b59abe4b02ea6f0fb697e"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5d2201b8e4b02ea6f0fb69ed"}, {"problem": 42, "code": "(fn [n] (reduce * 1 (range 1 (+ n 1))))", "user": "5c59b836e4b01df32ab73263"}, {"problem": 42, "code": "(fn [n] (reduce * (map inc (range n))))", "user": "5d236215e4b02ea6f0fb6a09"}, {"problem": 42, "code": "(fn foo\n  [num]\n  (if (zero? num)\n    1\n    (* num (foo (dec num)))))", "user": "5d1c14cde4b02ea6f0fb698a"}, {"problem": 42, "code": "(fn fact [x] (if (<= x 1) 1 (* (fact (- x 1)) x)))", "user": "5c78a3eae4b0fca0c1622829"}, {"problem": 42, "code": "(fn fac\n  ([n] (fac 1 n))\n  ([acc n] (if (= n 1)\n             acc\n             (fac (* acc n) (dec n)))))", "user": "5bc09ebae4b07a9b28b10005"}, {"problem": 42, "code": "(fn fact [n]\n  (apply * (range 1 (+ 1 n))))", "user": "5cfabf53e4b0cc9c91588148"}, {"problem": 42, "code": "(fn fact [n]\n (apply * (range 1 (+ 1 n))))", "user": "5d1cf523e4b02ea6f0fb6994"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (inc x))))", "user": "5d125d63e4b02c15ef021999"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5d272077e4b092dab7f59c64"}, {"problem": 42, "code": "(fn [num]\n  (reduce * (range 1 (inc num))))", "user": "5b99554ae4b0c0b3ffbd4ace"}, {"problem": 42, "code": "; (fn [n] (reduce * (range 1 (inc n))))\n\n(fn [n]\n  (loop [number 1\n         counter n]\n    (if (> counter 0)\n      (recur (* number counter)\n             (dec counter))\n      number)))", "user": "5d046f7ce4b0cc9c915881d5"}, {"problem": 42, "code": "(fn faco [n]\n  (reduce * 1 (range 1 (inc n))))", "user": "5d231255e4b02ea6f0fb69fe"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5d138119e4b0902706380dbb"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5d267c11e4b02ea6f0fb6a41"}, {"problem": 42, "code": "(fn f [n]\n  (apply * (range 1 (inc n)) )\n)", "user": "5bc2df19e4b07a9b28b10038"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (inc x))))", "user": "5c04464ee4b0bdcf453d167d"}, {"problem": 42, "code": ";#(reduce * (take % (iterate inc 1)))\n#(reduce * (range 1 (inc %)))", "user": "5d0beecee4b0cc9c91588239"}, {"problem": 42, "code": "#(reduce  * (range 1 (inc %)))", "user": "5d27da09e4b092dab7f59c75"}, {"problem": 42, "code": "(fn [n]\n  (loop [cnt n acc 1]\n    (if (zero? cnt)\n      acc\n(recur (dec cnt) (* acc cnt)))))", "user": "5d29d837e4b01671435dbc6c"}, {"problem": 42, "code": "(fn foo \n  [x]\n  (if(= x 1)\n    1\n    (* x (foo (dec x)))\n    )\n  )", "user": "5d270111e4b092dab7f59c62"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5d2bfb68e4b01671435dbc86"}, {"problem": 42, "code": "#(reduce * (range 1(inc %)))", "user": "5d21b91ee4b02ea6f0fb69e9"}, {"problem": 42, "code": "(fn [s] (loop [x s acc 1] (if (> x 0) (recur (- x 1) (* acc x)) acc)))", "user": "5d13f783e4b0902706380dc1"}, {"problem": 42, "code": "#(apply * (range 1 (+ 1 %)))", "user": "5d2ca236e4b01671435dbc94"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5d28222ee4b092dab7f59c7a"}, {"problem": 42, "code": "(fn factorial [n]\n\t(if (= n 1)\t\n\t\t1\n\t\t(* n (factorial (dec n)))))", "user": "5d25abc9e4b02ea6f0fb6a37"}, {"problem": 42, "code": "#(reduce (fn [a b] (* a b)) 1 (take % (iterate inc 1)))", "user": "5aa1e0f1e4b0d174b936c84e"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5cf895efe4b0b71b1d808a85"}, {"problem": 42, "code": "#(reduce * (conj (range 1 (inc %)) 1))", "user": "5d247902e4b02ea6f0fb6a24"}, {"problem": 42, "code": "#(reduce (fn [acc e] (* acc e)) (range 1N (inc %)))", "user": "5d1be50ce4b02ea6f0fb6986"}, {"problem": 42, "code": ";;(fn fibo \n  ;;([no-of-times] (fibo no-of-times 1 1))\n  ;;([no-of-times num1 num2] (take no-of-times (lazy-seq (cons num1 (fibo no-of-times num2 (+ num1 num2)))))))\n\n(fn fact([no] (fact no 1))([no accum-fact] (if(= no 1) accum-fact(fact (dec no) (* accum-fact no)))))\n\n;;#(loop [result 0 c %]\n;;    (if(empty? c) result\n;;    (recur (inc result) (rest c))))", "user": "5d1b2a1ee4b02ea6f0fb6979"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "51bd78c3e4b0ff155d51d2b0"}, {"problem": 42, "code": "(fn [n] (reduce * (take n (iterate inc 1))))", "user": "5d301c95e4b01671435dbcca"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "596fb563e4b01722bebd4c55"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5ce5b43be4b0a17bb84e2b7a"}, {"problem": 42, "code": "(fn fac [x]\n  (if (= x 1) 1\n      (* x (fac (- x 1)))))", "user": "5d0e9931e4b0cc9c91588258"}, {"problem": 42, "code": "#(->> % inc range rest (apply *))", "user": "5d35fb9be4b01671435dbd1c"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5d29c06be4b01671435dbc6b"}, {"problem": 42, "code": "(fn [x]\n  (loop [a x\n         b 1]\n    (if (= a 1)\n      b\n      (recur (- a 1) (* b a)))))", "user": "5d371b6fe4b01671435dbd31"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5d370811e4b01671435dbd2d"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5d2e5065e4b01671435dbcae"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "54b42ea4e4b05787c3b1638b"}, {"problem": 42, "code": "(fn [n] (reduce * (take n (map inc (range)))))", "user": "5d3ae729e4b01671435dbd5d"}, {"problem": 42, "code": ";(fn [x]\n;  (loop [i x out 1]\n;    (if (= 1 i)\n;      out\n;      (recur (dec i) (* out i)))))\n\n#(reduce * % (range 1 %))", "user": "58b997afe4b0888cdc949cd1"}, {"problem": 42, "code": "(fn [x] (apply * (range 1 (+ x 1))))", "user": "5cc7073de4b0ccb06196282e"}, {"problem": 42, "code": "(fn factorial [n]\n  (case n\n    1  1\n    (* n (factorial (dec n)))))", "user": "598601f9e4b021a7a535fe79"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5d3e8c3de4b01671435dbd73"}, {"problem": 42, "code": "(fn factorial [n] (loop [x n result 1] (if (> x 1) (recur (dec x) (* result x)) result)))", "user": "5d321852e4b01671435dbce8"}, {"problem": 42, "code": "#(apply * (map inc (range %)))", "user": "5d2c779be4b01671435dbc8d"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5d41de31e4b05dd059a54379"}, {"problem": 42, "code": "(fn factorial [number] (\n             cond \n              (= number 1) 1\n               \n              (> number 1) (* number (factorial (dec number)) )\n              )\n             )\n\n;(fn factorial[number]\n ; (if (<= number 1) 1 (* number  (factorial (- number 1))  )))\n\n\n;(fn [n] (reduce * (range 1 (inc n))))", "user": "5cf53196e4b087f62be35a94"}, {"problem": 42, "code": "(fn result [x]\n  (if (> x 1)\n     (* x (result (dec x)))\n     1))", "user": "5d1ef23ee4b02ea6f0fb69bb"}, {"problem": 42, "code": "(fn [n]\n  (apply * (range 1 (inc n))))", "user": "5d45749be4b07c84aa5ae6a2"}, {"problem": 42, "code": "#(apply * (take % (iterate inc 1)))", "user": "5d4320fde4b07c84aa5ae690"}, {"problem": 42, "code": "#(reduce * (map inc (range %)))", "user": "5d45bd1de4b07c84aa5ae6a4"}, {"problem": 42, "code": "(fn ! [n] (if (< n 2) 1 (* n (! (dec n)))))", "user": "5d439775e4b07c84aa5ae696"}, {"problem": 42, "code": "(fn[x] (reduce * (drop 1 (range (+ x 1)))))", "user": "5d465adae4b07c84aa5ae6a9"}, {"problem": 42, "code": "(fn [n] (apply * (take n (iterate inc 1))))", "user": "5146f343e4b04ef915e3731e"}, {"problem": 42, "code": "(fn [n]\n  (loop [n n\n         result 1N]\n    (if (<= n 1)\n      result\n      (recur (dec n) (* result n)))))", "user": "5d35f997e4b01671435dbd1a"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5d46fbc6e4b07c84aa5ae6af"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5d40442ee4b05dd059a54362"}, {"problem": 42, "code": "#(reduce * (for [i (range %)\n                 :let [k (inc i)]]\n             k))", "user": "5d3f50d7e4b09d9322bc20a6"}, {"problem": 42, "code": "(fn [n]\n  (reduce #(* %1 %2) 1 (range 1 (inc n)))  \n)", "user": "5d2564d2e4b02ea6f0fb6a34"}, {"problem": 42, "code": "#(nth (reductions * (drop 1 (range)))\n      (dec %))", "user": "5d4b2155e4b0776584bd6f28"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5d0bb4fae4b0cc9c91588237"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5d4eb9c4e4b0776584bd6f48"}, {"problem": 42, "code": "#(apply * (first ((juxt identity) (range 1 (inc %)))))", "user": "5d4a6c6ce4b0776584bd6f22"}, {"problem": 42, "code": "#(apply * (range 1 (+ % 1)))", "user": "5d47f4dbe4b07c84aa5ae6b5"}, {"problem": 42, "code": "(fn [input]\n   (reduce * (range 1 (inc input))))", "user": "5d40f41ae4b05dd059a5436d"}, {"problem": 42, "code": "(fn fac\n  [x]\n  (if (= x 1)\n    1\n    (* x (fac (dec x)) )))", "user": "5d48884ee4b07c84aa5ae6bb"}, {"problem": 42, "code": "(fn [n]\n  (last (take n (map last (iterate (fn [[firrst sec]]\n                                     (let [index (inc firrst)]\n                                       [index (* index sec)]))\n                                   [1 1])))))", "user": "5d48e6d3e4b0776584bd6f15"}, {"problem": 42, "code": "(fn [n]\n  {:pre [(pos? n)]}\n  (reduce * (rest (range (+ n 1)))))", "user": "5ad76df9e4b0ea6055cfac18"}, {"problem": 42, "code": "(fn [n]\n  (loop [x n\n         res 1]\n    (if (or (= x 0) (= x 1))\n      res\n      (recur (dec x) (* res x))))\n)", "user": "5d07989ee4b0cc9c915881fb"}, {"problem": 42, "code": "(fn [n]\n      (loop [cnt n acc 1]\n        (if (zero? cnt)\n          acc\n          (recur (dec cnt) (* acc cnt)))))", "user": "5d4c4de9e4b0776584bd6f2f"}, {"problem": 42, "code": "(fn [x] \n    (loop [x x\n           f 1]\n      (if (<= x 1)\n      \tf\n      (recur (dec x) (* f x)))))", "user": "56bff105e4b060a8e693e3a4"}, {"problem": 42, "code": "#(loop [x %\n        y 1\n        z 1]\n   (if (zero? x)\n     z\n     (recur (dec x) (inc y) (* z y))))", "user": "5d41ac35e4b05dd059a54375"}, {"problem": 42, "code": "(fn fac [n] (if (contains? #{0 1} n) 1 (* n (fac (dec n)))))", "user": "5d4c83b7e4b0776584bd6f34"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "5ab07d63e4b073f1774425af"}, {"problem": 42, "code": "(fn jojoba [x] (if (<= x 1) 1 (* x (jojoba(- x 1)))))", "user": "5bdc4a76e4b0ed4b8aab4c30"}, {"problem": 42, "code": "#(reduce * (map inc (range %)))", "user": "5bf06734e4b0a6d31fed2153"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5259451ce4b0cb4875a45cd7"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %1)))", "user": "5d51377be4b0776584bd6f5d"}, {"problem": 42, "code": "(fn foo\n  ([x]\n   (foo x 1)\n   )\n  ([x n]\n   (if (= x 1)\n     n\n     (foo (- x 1) (* n x)))\n   )\n  )", "user": "5d4cf3e9e4b0776584bd6f38"}, {"problem": 42, "code": "(fn fct \n  ([n] (fct n 1))\n  ([n acc] (if (= n 1) acc \n             (recur (dec n) (* acc n))))\n  )", "user": "5d4f21f3e4b0776584bd6f4e"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5d5166d9e4b0776584bd6f5e"}, {"problem": 42, "code": "#(loop [x %, res 1] (if (= x 0) res (recur (dec x) (* x res))))", "user": "5d3adc7de4b01671435dbd5b"}, {"problem": 42, "code": "(fn fact\n  [n]\n  (reduce * (range 1 (inc n))))", "user": "5d53a59ae4b0776584bd6f72"}, {"problem": 42, "code": "(fn [n] (reduce #(* %1 %2)  1 (range n 1 -1)))", "user": "5d590500e4b02ba5928a6824"}, {"problem": 42, "code": "(fn factorial2\n  [n]\n  (apply * (range 1 (inc n))))", "user": "5d5a79cce4b02ba5928a6833"}, {"problem": 42, "code": "(fn [n]\n                 (loop [n n \n                        ans 1]\n                   (if (= 0 n)\n                     ans\n                     (recur (dec n) (* n ans)))))", "user": "5d4df658e4b0776584bd6f41"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5d5e9f45e4b0c9e5857d4ff5"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "5d609ddde4b0c9e5857d5008"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5d28b684e4b092dab7f59c83"}, {"problem": 42, "code": "(fn [n]\n   (loop [i 0 f 1]\n     (if (< i n)\n       (recur (inc i) (* f (inc i)))\n       f\n       )))", "user": "5d52bf29e4b0776584bd6f69"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5d5e0259e4b0c9e5857d4fef"}, {"problem": 42, "code": "(fn factorial\n  [num]\n  (reduce * (range 1 (inc num))))", "user": "5d42c88ae4b05dd059a5437e"}, {"problem": 42, "code": "(fn fac [x]\n  (if (< x 2)\n    1\n    (* x (fac (- x 1)))))", "user": "5d64013ce4b0c9e5857d502d"}, {"problem": 42, "code": "(fn fl [n] (if (= 1 n) n (* n  (fl (dec n)))))", "user": "5d5eb086e4b0c9e5857d4ff7"}, {"problem": 42, "code": "(fn [input_int] (loop [i input_int product 1]\n(if (<= i 1) product\n(recur (dec i) (* product i)))))", "user": "5d64508de4b0c9e5857d5031"}, {"problem": 42, "code": "(fn [x] (apply * (range 1 (+ x 1))))", "user": "5d24e49be4b02ea6f0fb6a2a"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5d629ed9e4b0c9e5857d501d"}, {"problem": 42, "code": "(fn [n]\n   (cond (< n 2) 1\n         :else ((fn [z acc]\n                  (if (= z 0) acc\n                      (recur (- z 1) (* z acc)))\n            ) n 1)))", "user": "5d631376e4b0c9e5857d5023"}, {"problem": 42, "code": "(fn factorial ([n] (factorial n 1)) ([n result] (if (= n 0) result (recur (dec n) (* n result)))))", "user": "5d4dd0b4e4b0776584bd6f40"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5d67c955e4b0db5d338d15f7"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5d672bd7e4b0db5d338d15f1"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5d63b06be4b0c9e5857d5025"}, {"problem": 42, "code": "#(reduce * (range % 0 -1))", "user": "5d651553e4b0db5d338d15ca"}, {"problem": 42, "code": "#(loop [x 1 acc 1] (if (<= x %) (recur (inc x) (* acc x)) acc))", "user": "5d63f1c2e4b0c9e5857d502b"}, {"problem": 42, "code": "(fn [n] (loop [counter n acc 1] (if (= 0 counter) acc (recur (- counter 1) (* acc counter)))))", "user": "5d662fb5e4b0db5d338d15e1"}, {"problem": 42, "code": "(fn fact \n  ([n] (fact 1 n))\n   ([acc n]\n         (if (= n 1)\n           acc\n           (fact (* acc n) (dec n))\n           ))\n   )", "user": "5a7f77fae4b00b71e582a041"}, {"problem": 42, "code": "(fn factorial-fun\n     ([x] (factorial-fun x 1))\n     ([x y]\n      (if (= x 0)\n        y\n        (recur (dec x) (* x y)))))", "user": "5d5ef0bce4b0c9e5857d4ffb"}, {"problem": 42, "code": "(fn [n] (loop [accum 1 i n]\n             (if (== i 1)\n               accum (recur (* accum  i)(dec i)))))", "user": "5d363543e4b01671435dbd20"}, {"problem": 42, "code": "#(apply *' (range 1 (inc %)))", "user": "58c71509e4b021aa9917ed6e"}, {"problem": 42, "code": "(fn fact [x] (if (= x 0) 1 (* x (fact (- x 1)))))", "user": "5d63ba44e4b0c9e5857d5026"}, {"problem": 42, "code": "(fn fact [x] (if (= x 1) 1 (* x (fact (- x 1)))))", "user": "5d6537fce4b0db5d338d15cf"}, {"problem": 42, "code": "#(reduce(fn [first second] (* first second)) (take % (iterate dec %)))", "user": "5d6552b5e4b0db5d338d15d2"}, {"problem": 42, "code": "(fn f [n] (if (> n 0) (* n (f (dec n))) 1))", "user": "5d6cead9e4b04d129b00f2b5"}, {"problem": 42, "code": "(fn fac [x]\n  (if (= 0 x)\n    1\n    (* x (fac (dec x)))))", "user": "5d68f5e6e4b0db5d338d1605"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5d5c2730e4b09db18d4482ea"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5d6d4463e4b04d129b00f2bd"}, {"problem": 42, "code": "#(loop [i 1 r 1]\n   (if (<= i %)\n       (recur (inc i) (* r i)) \n     r\n     )\n   )", "user": "5d5b2678e4b06a698e928ee2"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)) )", "user": "5d6523ace4b0db5d338d15cd"}, {"problem": 42, "code": "(fn [n]\n  (let [f (fn [cnt num]\n            (if (zero? cnt)\n              num\n              (recur (dec cnt) (* cnt num))))]\n    (f n 1)))", "user": "524a9556e4b05ef8e38e64b1"}, {"problem": 42, "code": "#(reduce * (take % (iterate dec %)))", "user": "5d66aea7e4b0db5d338d15ec"}, {"problem": 42, "code": "(fn [x] (apply * (range 1 (inc x))))", "user": "5d6d2172e4b04d129b00f2b9"}, {"problem": 42, "code": "(fn [n]\n  (->> (+ n 1)\n       (range 1)\n       (reduce *)))", "user": "5d1d4ec6e4b02ea6f0fb699f"}, {"problem": 42, "code": "(fn [x] (reduce * (rest (range (inc x)))))", "user": "5d7158f3e4b04d129b00f2e1"}, {"problem": 42, "code": "(fn [n] (reduce #(* %1 %2) (range 1 (+ n 1))))", "user": "5d764e52e4b02e6b30c93524"}, {"problem": 42, "code": "#(apply * (range 1 (+ 1 %)))", "user": "5d64ecb2e4b0c9e5857d5036"}, {"problem": 42, "code": "#(reduce * (take % (iterate inc 1)))", "user": "5d6febe6e4b04d129b00f2d5"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5a7de7a3e4b03baeef927702"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (+ n 1))))", "user": "5d6e5b53e4b04d129b00f2c6"}, {"problem": 42, "code": "#( reduce * ( take % ( iterate dec % ) ) )", "user": "5d5c6675e4b09db18d4482ec"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5d6d2e11e4b04d129b00f2ba"}, {"problem": 42, "code": "#_(fn my-factorial [n]\n  (if (= 1 n)\n    n\n    (* n (my-factorial (dec n)))))\n\n(fn my-factorial [n]\n  (reduce * (range 1 (inc n))))", "user": "5d6f063de4b04d129b00f2d1"}, {"problem": 42, "code": "(fn [x] \n  (apply * (range 1 (inc x))))", "user": "5c56e264e4b0fb8c5ffd9a39"}, {"problem": 42, "code": "(fn factorial\n  [x]\n  (loop [res 1 n x]\n    (if (= 1 n)\n      res\n      (recur (* res n) (dec n)))))", "user": "5d7b90ede4b02e6b30c93552"}, {"problem": 42, "code": "(fn fact\n  [n]\n  (if (= n 1)\n    1\n    (* (fact (dec n)) n)))", "user": "5d6691cee4b0db5d338d15e9"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (+ n 1))))", "user": "5d6f0533e4b04d129b00f2d0"}, {"problem": 42, "code": "#(reduce *(range 1 (inc %)))", "user": "5cccac42e4b0ccb06196289d"}, {"problem": 42, "code": "(fn [maxIdx]\n   (loop [ curIdx 1\n           resVal 1 ]\n    (if (> curIdx maxIdx)\n      resVal\n      (recur (+ curIdx 1) (* curIdx resVal))\n    )\n   )\n)", "user": "5cf7215ce4b0b71b1d808a67"}, {"problem": 42, "code": "(fn\n\t[numero]\n\t(reduce *\n\t\t\t\t\t(range 1 (inc numero))))", "user": "5d797deee4b02e6b30c93541"}, {"problem": 42, "code": "#(apply * (range 1 (inc %1)))", "user": "5d1609f9e4b0902706380dd9"}, {"problem": 42, "code": "#(if (< % 2)\n   1N\n   (apply * (reverse (range 1N (inc %)))))", "user": "4ec549e1535d6d7199dd3691"}, {"problem": 42, "code": "(fn factorials [num]\n  (loop [number num fac 1]\n    (if (= number 1)\n      fac\n      (recur (dec number) (* number fac))\n      )))", "user": "5d6e5ec6e4b04d129b00f2c7"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "5b044436e4b0cc2b61a3bd71"}, {"problem": 42, "code": "(fn f [x] (if (= x 1) x (* x (f (dec x)))))", "user": "5d6fae1ee4b04d129b00f2d4"}, {"problem": 42, "code": "(fn fac [n]\n  (if (= n 1)\n    1\n    (* n (fac (dec n)))))", "user": "5d7eaf5fe4b0492f5d910fc3"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5d81eba4e4b0915913b1d37b"}, {"problem": 42, "code": "(fn fact [n] (reduce * (range 1 (+ 1 n))))", "user": "5d81c244e4b0915913b1d37a"}, {"problem": 42, "code": "(fn [x]\n    (loop [value x total 1]\n     (if (= value 0)\n       total\n       (recur (dec value) (* total value)))))", "user": "5d531d33e4b0776584bd6f6d"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "536fd48be4b0fc7073fd6e88"}, {"problem": 42, "code": "#(apply * (rest (range (inc %))))", "user": "5d84f5e6e4b0915913b1d38f"}, {"problem": 42, "code": "#(first (nth (iterate (fn [[x y]] [(* x y) (inc y)]) [1 1]) %))", "user": "5d88a22de4b0915913b1d3ab"}, {"problem": 42, "code": "(fn [n]\n    (loop [cnt n\n           acc 1]\n       (if (zero? cnt)\n            acc\n          (recur (dec cnt) (* acc cnt)))))", "user": "5d123457e4b02c15ef021996"}, {"problem": 42, "code": "#(reduce * (take %1 (iterate inc 1)))", "user": "5d323149e4b01671435dbce9"}, {"problem": 42, "code": "(fn fact\n  [n]\n  (if (zero? n) 1 (* n (fact (dec n))))\n)", "user": "5d828b7ee4b0915913b1d382"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5d917ef0e4b0915913b1d402"}, {"problem": 42, "code": "(fn [x] (reduce * (into [] (range 1 (+ 1 x)))))", "user": "5d88d820e4b0915913b1d3b1"}, {"problem": 42, "code": "(fn my-factorial\n  ([arg]\n   (my-factorial arg '()))\n  ([arg fact]\n   (if (= arg 0)\n     (apply * fact)\n     (my-factorial (dec arg) (conj fact arg)))))", "user": "5d896a64e4b0915913b1d3b8"}, {"problem": 42, "code": "(fn fac [n] (if (<= n 1) 1 (* n (fac (dec n)))))", "user": "5d887d27e4b0915913b1d3a8"}, {"problem": 42, "code": "(fn fact [n]\n  (if (= 0 n)\n    1\n    (* n (fact (dec n)))))", "user": "5d81b40ce4b0915913b1d379"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5d8af64fe4b0915913b1d3cf"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "59ea07c9e4b0249b72820756"}, {"problem": 42, "code": "(fn [n] (reduce * (map inc (range n))))", "user": "5d8b4960e4b0915913b1d3d3"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "5d96edeae4b0d3f9b434ad35"}, {"problem": 42, "code": "(fn factorial [ith]\n  (loop [sum 1\n         index 1]\n    (if (= ith index)\n      (* sum index)\n      (recur (* sum index) (inc index)))))", "user": "5d80f328e4b0915913b1d372"}, {"problem": 42, "code": "#(reduce *\n          (range 1 (inc %)))", "user": "5d9aeae5e4b0d3f9b434ad4a"}, {"problem": 42, "code": "(fn [x] (reduce * (take x (iterate dec x))))", "user": "5d1231dde4b02c15ef021995"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5d9c1226e4b0d3f9b434ad51"}, {"problem": 42, "code": "#(apply * (range 1 (+ % 1)))", "user": "5d9475e4e4b0d3f9b434ad25"}, {"problem": 42, "code": "(fn fac\n  [n]\n  (case n\n    0 1\n    1 1\n    (* n (fac (- n 1)))))", "user": "5d9ceac2e4b0eb781811cdb3"}, {"problem": 42, "code": "#(reduce (fn [xs a](* xs a)) 1 (range 1 (+ 1 %)))", "user": "53bfd8c4e4b0c98a41f5cca8"}, {"problem": 42, "code": "#(reduce * (take %(iterate inc 1)) )", "user": "5d8a832ce4b0915913b1d3ca"}, {"problem": 42, "code": "(fn [n] (reduce #(apply * %&) (range 1 (inc n))))", "user": "5d9e7971e4b000c986472bc1"}, {"problem": 42, "code": "(fn [c]\n  (reduce (fn [f n]\n            (* f n))\n          (range 1 (inc c))))", "user": "5cf6522be4b0b71b1d808a58"}, {"problem": 42, "code": "(fn my-factorial\n  [n]\n  (reduce * (range 1 (inc n))))", "user": "5d49ec5ee4b0776584bd6f1c"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5d97b602e4b0d3f9b434ad3a"}, {"problem": 42, "code": "(fn [n]\n  (loop [n n \n         p 1] \n    (if (zero? n) p\n      (recur (dec n) (*' n p)))))", "user": "594fdfdce4b066ee0a44ae85"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5d99dc47e4b0d3f9b434ad42"}, {"problem": 42, "code": "(fn [x]\n            (loop [c x prod 1]\n              (if (> c 1)\n                (recur (dec c) (* prod c))\n                prod\n                )\n              )\n            )", "user": "5d974b1de4b0d3f9b434ad36"}, {"problem": 42, "code": "#(apply * (take %1 (iterate inc 1)))", "user": "5da20e73e4b000c986472be1"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5da44d35e4b000c986472bf1"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5d931a58e4b0d3f9b434ad10"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "5da7176ae4b000c986472c13"}, {"problem": 42, "code": "#(reduce * (take % (range 1 (inc %))))", "user": "5ccf125ce4b0ccb0619628c0"}, {"problem": 42, "code": "#(apply * (take % (iterate dec %)))", "user": "5d7a748ce4b02e6b30c93547"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5da8fa72e4b000c986472c2d"}, {"problem": 42, "code": "(fn factorials [num]\n  (cond\n   (= num 1) 1\n   (> num 1) (* num (factorials (- num 1)))))", "user": "568f2059e4b0dcc4269f40df"}, {"problem": 42, "code": "(fn [lim] (reduce * 1 (rest (range (inc lim)))))", "user": "5da975b9e4b000c986472c32"}, {"problem": 42, "code": "#(->> (range 1 (inc %))\n      (apply *))", "user": "56f9982ce4b07572ad1a88b8"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5daa1fc8e4b000c986472c3e"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5da760ebe4b000c986472c1a"}, {"problem": 42, "code": "(fn fac [n] (cond (= n 1) 1 :else (* n (fac (- n 1)))))", "user": "5d9c9446e4b0eb781811cdae"}, {"problem": 42, "code": "#(apply * (range 1 (+ 1 %)))", "user": "5d9475e9e4b0d3f9b434ad26"}, {"problem": 42, "code": "(fn my-factorial\n  [x]\n  (reduce #(* %1 %2) (range 1 (inc x))))", "user": "5d9c8a85e4b0eb781811cdad"}, {"problem": 42, "code": "#(reduce * 1 (take % (map inc (range))))", "user": "5da8b8ece4b000c986472c28"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5da4b152e4b000c986472bf6"}, {"problem": 42, "code": "(fn fa [x] (if (= 1 x) 1 (* x (fa (dec x)))) )", "user": "5da98129e4b000c986472c33"}, {"problem": 42, "code": "(fn ff [x](let[a (fn b [x ret](cond\n                                  (= x 0) ret\n                                  :else (b (dec x) (* ret x))))]\n              (a x 1)))", "user": "5dadf73ee4b0f8c104ccfc86"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5d7aa22ee4b02e6b30c9354e"}, {"problem": 42, "code": "#(apply * (range 1 (+ 1 %)))", "user": "5dab11cde4b000c986472c45"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "5da71eaee4b000c986472c15"}, {"problem": 42, "code": "(fn [x] \n  (loop [factor x product 1]\n    (if (= factor 1)\n     product\n     (recur (- factor 1) (* factor product)))))", "user": "5da9d89ae4b000c986472c3b"}, {"problem": 42, "code": "(memoize (fn fact [n]\n             (if (>= 1 n) 1\n                 (* n (fact (dec n))))))", "user": "5db0d470e4b0f8c104ccfc9e"}, {"problem": 42, "code": "(fn factorial [n]\n  (reduce * (range 1 (inc n))))", "user": "5daeb6bce4b0f8c104ccfc8b"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5d965c73e4b0d3f9b434ad33"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "590b2d92e4b047aa04b199cf"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "5daec18ae4b0f8c104ccfc8c"}, {"problem": 42, "code": "#(loop [current %\n         next (dec current)\n         total 1]\n    (if (> current 1)\n      (recur next (dec next) (* total current))\n      total))", "user": "5d51884be4b0776584bd6f61"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5db5d09be4b010eb3c36cd31"}, {"problem": 42, "code": "#(apply * (range 1 (+ 1 %)))", "user": "5d94fdf9e4b0d3f9b434ad2b"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5cce7de4e4b0ccb0619628b7"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5db1969be4b010eb3c36cd06"}, {"problem": 42, "code": "(fn [x]\n   (reduce * (range 1 (inc x))))", "user": "5d8c8175e4b0915913b1d3e1"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "5a37b6dbe4b001c08efc0c88"}, {"problem": 42, "code": "#(apply * (take %1 (iterate inc 1)))", "user": "5db6cc4ae4b010eb3c36cd3b"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5dbd51cfe4b09f47823971bb"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5d7d17ece4b02e6b30c93558"}, {"problem": 42, "code": "(fn\n   [n]\n   (let [factstep \n         (fn\n           [[fact next]]\n           [(* fact next) (inc next)])]\n     (first (nth (iterate factstep [1 1]) n))))", "user": "5da05bcce4b000c986472bd0"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %1)))", "user": "53d63e6ce4b0e771c3025454"}, {"problem": 42, "code": "#(apply * (rest (range (inc %))))", "user": "5db19599e4b010eb3c36cd05"}, {"problem": 42, "code": "#(loop [counter (range %1)\n         fact 1]\n    (if (> (count counter) 0)\n      (recur (rest counter) (* fact (+ 1 (first counter))))\n      fact))", "user": "5db861bce4b010eb3c36cd4b"}, {"problem": 42, "code": "(fn factorial[x]\n  (if (> x 0)\n    (* x (factorial(dec x)))\n    1))", "user": "5db1e852e4b010eb3c36cd0a"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (range 1 (+ n 1))))", "user": "5db9a6c3e4b010eb3c36cd56"}, {"problem": 42, "code": "#(loop [ acc 1 b 1 end %]\n   (if (> b end) acc\n     (recur (* acc b) (inc b) end)))", "user": "5dc12b0ae4b0e59a23173d84"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5dbe63bde4b09f47823971c7"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5d9e8e40e4b000c986472bc2"}, {"problem": 42, "code": "#(apply *' (range 1 (inc %)))", "user": "5db7376fe4b010eb3c36cd43"}, {"problem": 42, "code": "(fn factorial [n]\n  (reduce * (range 1 (+ n 1))))", "user": "5dba063ee4b010eb3c36cd5c"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5dbe27c3e4b09f47823971c4"}, {"problem": 42, "code": "(fn ff \n  ([n] (ff n (- n 1)))\n  ([x n] (if (= n 0)\n          x\n          (ff (* x n) (- n 1)))))", "user": "5db5f16ce4b010eb3c36cd34"}, {"problem": 42, "code": "#(apply * (take % (iterate inc 1)))", "user": "5dbb5200e4b09f47823971a9"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5dc40814e4b02f9375f4e1ae"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5da94ccfe4b000c986472c2f"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "4fbb7010e4b081705acca2e7"}, {"problem": 42, "code": "(fn fact [x] (if (= x 1) 1 (* (fact (- x 1)) x)))", "user": "5d84545ee4b0915913b1d38b"}, {"problem": 42, "code": "#(apply * (map inc (range %)))", "user": "5db92996e4b010eb3c36cd50"}, {"problem": 42, "code": "(fn [n]\n  (apply * (drop 1 (range (inc n)))))", "user": "5dc72a9ce4b02f9375f4e1cd"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5dca5e0ae4b02b31cc3da3af"}, {"problem": 42, "code": "#(loop [x % result []]\n   (if (= x 0) (reduce * result)\n     (recur (dec x) (conj result x)))\n   )", "user": "5db68091e4b010eb3c36cd3a"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5dc9d5c3e4b03836ba07d824"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5dc9ccf8e4b02f9375f4e1f1"}, {"problem": 42, "code": "(fn my-factorial [elem]\n  (reduce * (range 1 (+ elem 1))))", "user": "5dc4719ae4b02f9375f4e1b5"}, {"problem": 42, "code": "(fn [n]\n  (apply * (range 1 (+ n 1))))", "user": "5dcc152ae4b02b31cc3da3c3"}, {"problem": 42, "code": "(fn fact [n]\n  (if (= n 0)\n    1\n    (* n\n       (fact (dec n)))))", "user": "5dcc0ee9e4b02b31cc3da3c2"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5dc98501e4b02f9375f4e1e6"}, {"problem": 42, "code": "(fn factorial [n]\n  (if (= n 1)\n    1\n    (* (factorial (dec n)) n))\n  )", "user": "5dc9c4f2e4b02f9375f4e1f0"}, {"problem": 42, "code": "#(reduce * (range 2 (inc %)))", "user": "5dc318cde4b02f700ae81835"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "59b1a1b2e4b0e1f4e384c8eb"}, {"problem": 42, "code": "#(apply * (map inc (range %)))", "user": "5dcfdf23e4b0948ae9d9ad43"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "5dcb1e73e4b02b31cc3da3b6"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5dd1fb19e4b0948ae9d9ad51"}, {"problem": 42, "code": "(fn [x] (apply * (range 1 (inc x))))", "user": "5da306a3e4b000c986472be7"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5daa0d56e4b000c986472c3c"}, {"problem": 42, "code": "(fn fac [n] (if (<= n 2) n (* n (fac (- n 1)))))", "user": "5dd35dcbe4b0948ae9d9ad5f"}, {"problem": 42, "code": "#(loop [i % fac 1] (if (= 0 i) fac (recur (- i 1) (* fac i))))", "user": "5dd44256e4b0948ae9d9ad69"}, {"problem": 42, "code": "(fn fact [n]\n  (apply * (range 1 (inc n))))", "user": "5dcbe0dbe4b02b31cc3da3be"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5dd69c8ce4b0948ae9d9ad83"}, {"problem": 42, "code": "(fn [x] (apply * (range 1 (inc x))))", "user": "5793931ee4b0e215f87e845c"}, {"problem": 42, "code": "(fn factorial [n]\n  (if (= n 1) 1\n              (* n (factorial (dec n)))))", "user": "5dd67c22e4b0948ae9d9ad80"}, {"problem": 42, "code": "(fn [n] (->> n (range) (map inc) (reduce *)))", "user": "5dd90651e4b0948ae9d9ad97"}, {"problem": 42, "code": "(fn [x]\n  (reduce * (range 1 (+ 1 x))))", "user": "5dcc5e5ce4b02b31cc3da3c7"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "5ac67b47e4b0e27600da776e"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (inc x))))", "user": "5ddbd4b3e4b0948ae9d9adb5"}, {"problem": 42, "code": "(fn [n]\n  (reduce (fn [acc el]\n            (* acc el))\n          1\n          (range 1 (inc n))))", "user": "5ddb6151e4b0948ae9d9adb0"}, {"problem": 42, "code": "#(loop [cnt 2 res 1] (if (= cnt (inc %)) res (recur (inc cnt) (* res cnt))))", "user": "5ddcf10ae4b0948ae9d9adbe"}, {"problem": 42, "code": "#(reduce * (take % (drop 1 (range))))", "user": "5db98f39e4b010eb3c36cd53"}, {"problem": 42, "code": "(fn fat \n  [x]\n  (if (zero? x)\n    1\n    (* x (fat (dec x)))))", "user": "5dddc292e4b0948ae9d9adcb"}, {"problem": 42, "code": "(fn factorial [n]\n  (if (= n 1) n (* n (factorial (dec n)))))", "user": "5dd60c58e4b0948ae9d9ad7c"}, {"problem": 42, "code": "(fn [x]\n  (reduce * 1 (range 1 (+ 1 x))))", "user": "5dd70ee3e4b0948ae9d9ad85"}, {"problem": 42, "code": "(fn f40\n  [n]\n  (loop [x n\n        s 1]\n    (if (= 1 x)\n      s\n      (recur (dec x) (*' s x)))))", "user": "5bd75870e4b0ed4b8aab4bc0"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5de12192e4b0948ae9d9aded"}, {"problem": 42, "code": "(fn [x]\n  (loop [result 1 x x]\n   (if (>= 0 x)\n     result\n     (recur (* result x) (dec x))\n     ) \n    )\n  )", "user": "5de6484ce4b0986d99407f66"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "5de65feee4b0986d99407f68"}, {"problem": 42, "code": "(fn [a] (apply * (range 1 (+ 1 a))))", "user": "5bfc50ece4b0bdcf453d15ea"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5da5a1eee4b000c986472c04"}, {"problem": 42, "code": ";;#(apply * (rest (range (inc %))))\n#(apply * ((comp rest range inc) %))", "user": "5dbac8ebe4b010eb3c36cd62"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "user": "5ddd134ae4b0948ae9d9adc0"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5da07d10e4b000c986472bd5"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5de68f83e4b0986d99407f6c"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5dd25ca8e4b0948ae9d9ad55"}, {"problem": 42, "code": "(fn fact [n]\n  (loop [n n, result 1]\n    (if (= 1 n)\n      result\n      (recur (dec n) (* n result)))))", "user": "5decd4fde4b093ff7172757b"}, {"problem": 42, "code": "#(loop [fac 1 addon %1]\n   (if (= addon 1)\n     fac\n     (recur (* fac addon) (- addon 1))\n     )\n   )", "user": "5deab1b2e4b0986d99407f9f"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "5dee144ae4b093ff71727591"}, {"problem": 42, "code": "( fn [n] (reduce * (range n 0 -1) ))", "user": "5ddbd202e4b0948ae9d9adb4"}, {"problem": 42, "code": "#(reduce * (rest (range (inc %))))", "user": "5de7e7cae4b0986d99407f7a"}, {"problem": 42, "code": "(fn [f]\n  (loop [n 1 r 1]\n    (if (<= n f)\n      (recur (inc n) (* n r))\n      r)))", "user": "5dcd7933e4b0b296f82db5ae"}, {"problem": 42, "code": "(fn [n]\n  (loop [cnt n acc 1]\n    (if (zero? cnt)\n      acc\n      (recur (dec cnt) (* acc cnt)))))", "user": "5defd277e4b093ff717275b0"}, {"problem": 42, "code": "(fn [n] (reduce * (-> n inc range rest)))", "user": "5de48f92e4b0948ae9d9ae07"}, {"problem": 42, "code": "(fn fac [n] \n  (if\n    (= n 1) 1\n    (* n (fac (dec n)))))", "user": "5d5e2efee4b0c9e5857d4ff0"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "user": "5ddfd88be4b0948ae9d9ade1"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5df51970e4b03c219ef1a38a"}, {"problem": 42, "code": "#(reduce * (range % 1 -1))", "user": "514992d2e4b0b64cbeae1848"}, {"problem": 42, "code": "(fn [n] (if (= n 0) 1)\n      (loop [acc n i n]\n        (if (<= i 1) acc\n            (recur (* acc (dec i)) (dec i)))))", "user": "53336ab8e4b019098a6f8b84"}, {"problem": 42, "code": "#(reduce * (rest(vec (range (+ % 1)))))", "user": "5df79420e4b0a607a9a45c9a"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "5df54584e4b03c219ef1a38f"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5ddb8a6ee4b0948ae9d9adb2"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5ddd6cfae4b0948ae9d9adc4"}, {"problem": 42, "code": "(fn [x]\n  \n  (loop [i 1\n         res 1]\n    (if (= i x)\n      (* res i)\n      (recur (inc i) (* res i))\n      ))\n  \n  )", "user": "5dc53ddee4b02f9375f4e1bd"}, {"problem": 42, "code": "(fn f [x] (if (= x 0) 1 (* x (f (- x 1)))))", "user": "5df94f73e4b0a607a9a45cb6"}, {"problem": 42, "code": "#(reduce * (range 2 (inc %)))", "user": "5dfb2e2ae4b0a607a9a45cd6"}, {"problem": 42, "code": "(fn [s]\n  (reduce *  1 (range 1 (+ 1 s))))", "user": "5db658ebe4b010eb3c36cd39"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5dfc457de4b0a607a9a45cea"}, {"problem": 42, "code": "(fn [n] (apply * (range 1 (inc n) )))", "user": "5dfa1c67e4b0a607a9a45cc5"}, {"problem": 42, "code": "(fn fact ([val] (fact val val))\n  ([val xs]\n    (if (= val 1)\n       xs\n       (let [newval (dec val)]\n         (fact newval (* xs newval))))))", "user": "5df0c6ffe4b093ff717275c2"}, {"problem": 42, "code": ";#(apply * (range 1 (inc %)))\n\n; (fn fact [k] (loop [k k n 1] (if (<= k 1) n (recur (dec k) (* n k)))))\n#(loop [k % n 1] (if (<= k 1) n (recur (dec k) (* n k))))", "user": "5d98f616e4b0d3f9b434ad3c"}, {"problem": 42, "code": "(fn fact [x]\n  (if (= x 0)\n    1\n    (* x (fact (dec x)))))", "user": "5dfb20b8e4b0a607a9a45cd3"}, {"problem": 42, "code": "(fn [k]\n  (reduce * (take k (iterate inc 1))))", "user": "55527251e4b0deb715856df3"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "5dfe3928e4b0a607a9a45d04"}, {"problem": 42, "code": "#(reduce * (map inc (range %)))", "user": "5de8648de4b0986d99407f7c"}, {"problem": 42, "code": "(fn factorial [n]\n  (reduce (fn [acc curr]\n            (* acc curr)) 1 (range 1 (inc n))))", "user": "5df0f338e4b093ff717275c6"}, {"problem": 42, "code": "#(->> % inc (range 1) (apply *))", "user": "5bfc9037e4b0bdcf453d15f2"}, {"problem": 42, "code": "#(loop [next %\n        result 1]\n   (if (zero? next)\n     result\n     (recur (dec next)\n            (* next result))))", "user": "5d6eaa58e4b04d129b00f2cd"}, {"problem": 42, "code": "(fn [number]\n  (loop [n number\n         r 1]\n    (if (= 0 n)\n      r\n      (recur (dec n) (* r n)))\n    )\n  )", "user": "5df75fd8e4b0a607a9a45c92"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5e03a15be4b0a607a9a45d5e"}, {"problem": 42, "code": "(fn [top]\n  (loop [i top res 1]\n    (if (= i 1)\n      res\n      (recur (dec i) (* res i)))))", "user": "5bf0b940e4b0a6d31fed215c"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "5d89427ae4b0915913b1d3b5"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (+ 1 x))))", "user": "5af865a9e4b0cc2b61a3bcd1"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "57fc5e42e4b0d3187e900997"}, {"problem": 42, "code": "#(let [in-num-r %]\n        (loop [in-num in-num-r result 1]\n            (if (< in-num 1)\n                result\n                (recur (dec in-num) (* in-num result))\n            )\n        )\n    )", "user": "5d8b3d5be4b0915913b1d3d1"}, {"problem": 42, "code": "(fn [n]\n  (loop [fac 1 n n]\n    (if (<= n 0)\n      fac\n      (recur (* fac n) (dec n))\n    )\n  )\n )", "user": "5e09fd26e4b099d064962f60"}, {"problem": 42, "code": "(fn [n] (reduce * (take-while #(<= % n) (iterate inc 1))))", "user": "4f24c859e4b0d66497709fef"}, {"problem": 42, "code": "(fn [n]\n  (loop [i n m 1]\n    (if (= i 1)\n      m\n      (recur (dec i) (* m i))\n    )\n  )\n)", "user": "5e08c3dde4b0978307768fc8"}, {"problem": 42, "code": "(fn\n  [n]\n  (loop [x n\n         acc 1]\n    (if (= x 0)\n      acc\n      (recur (dec x) (* acc x)))))", "user": "5e066185e4b0978307768fa4"}, {"problem": 42, "code": "(fn [n] (* n (reduce * (rest (range n)))))", "user": "5d91acb8e4b0915913b1d406"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5e0d948fe4b099d064962f98"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5e00b6e7e4b0a607a9a45d2b"}, {"problem": 42, "code": "(fn [x] (apply * (take-while pos? (iterate dec x))))", "user": "510528a0e4b0730a5f55ad85"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "user": "5e078ba7e4b0978307768fb6"}, {"problem": 42, "code": "#(apply * (take % (iterate inc 1)))", "user": "5e0e836fe4b099d064962fa8"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5dd3383be4b0948ae9d9ad5e"}, {"problem": 42, "code": "(fn [n] (apply * (range 1 (inc n))))", "user": "5e03475de4b0a607a9a45d58"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (+ 1 x))))", "user": "5e0e0131e4b099d064962fa1"}, {"problem": 42, "code": "#(loop [num %\n         val 1]\n    (if (= num 0)\n      val\n      (recur (dec num) (* num val))))", "user": "5e0a6916e4b099d064962f65"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "user": "5e0ceca5e4b099d064962f91"}, {"problem": 42, "code": "(fn [n] (->> n\n             inc\n             (range 1)\n             (reduce * 1)))", "user": "5e0e14bde4b099d064962fa3"}, {"problem": 42, "code": "(fn fac [n] (if (= n 1) 1 (* n (fac (dec n)))))", "user": "5e144bd5e4b0a047bd49f6e7"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5e17bb46e4b00200644e3d5a"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5e16fd78e4b0a047bd49f726"}, {"problem": 42, "code": "(fn fact [n] (if (= 0 n) 1 (* n (fact (dec n)))))", "user": "5e18bd30e4b0dc95940084fa"}, {"problem": 42, "code": "(fn factorial [x]\n  (reduce * (range 1 (inc x))))", "user": "58f3c18ee4b0438e51c2cead"}, {"problem": 42, "code": "#(->> (range 1 (inc %))\n  (reduce *))", "user": "5e1754abe4b00200644e3d53"}, {"problem": 42, "code": "#(reduce * (take % (iterate inc 1)))", "user": "5e121a89e4b099d064962fe4"}, {"problem": 42, "code": "(fn [x] (loop [n x res 1] (if (< n 2) res (recur (dec n) (* res n)))))", "user": "5e04ce34e4b0a607a9a45d71"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "5e178fbee4b00200644e3d57"}, {"problem": 42, "code": "(fn\n  [n]\n  (reduce * (range 1 (inc n))))", "user": "5e16006be4b0a047bd49f711"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5e17509fe4b00200644e3d52"}, {"problem": 42, "code": "(fn [a] (loop [curr 1 res  1] (if (> curr a) res (recur (inc curr) (* res curr)))))", "user": "5e0d1947e4b099d064962f92"}, {"problem": 42, "code": "(fn fact [x]\n  (if (= 1 x)\n    1\n    (* x (fact (dec x)))))", "user": "5e18c885e4b0dc95940084fc"}, {"problem": 42, "code": "(fn [n] (loop [product 1N counter n] (if (= counter 0) product (recur (* product counter) (dec counter)))))", "user": "5e1cc888e4b0dc959400853d"}, {"problem": 42, "code": "(fn [x]\n  (->> x\n       (inc)\n       (range)\n       (drop 1)\n       (reduce *)))", "user": "5e07cf97e4b0978307768fb9"}, {"problem": 42, "code": "#(->> %\n     range\n     (map inc)\n     (reduce *))", "user": "5db35f85e4b010eb3c36cd22"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5e042dede4b0a607a9a45d69"}, {"problem": 42, "code": "(fn fac [x]\n    (cond\n      (= x 0) 1\n      :else (* x (fac (- x 1)))\n    )\n  )", "user": "5e1d01b5e4b0dc9594008542"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5e1a3989e4b0dc9594008511"}, {"problem": 42, "code": "(fn fact [q] \n  ((rand-nth [\n              #(reduce * % (range 1 %))\n              \n              (fn [n]\n                (if (zero? n) 1\n                  (* n (fact (dec n)))))\n              \n              (fn [n]\n                (loop [x 1 res 1]\n                  (if (< n x) res\n                    (recur (inc x) (* x res)))))\n              \n              (fn [n]\n                (if (zero? n) 1\n                  (reduce + (nth (iterate (partial mapcat #(repeat % (dec %))) [n]) (- n 1)))))\n              \n              (fn [n]\n                (let [iter (partial mapcat #(repeat % (dec %)))]\n                  (trampoline (fn fack [array]\n                                (case (first array)\n                                  0 1\n                                  1 (reduce + array)\n                                  #(fack (iter array))))\n                              (list n))))\n             ]) q))", "user": "5d929ceae4b0915913b1d412"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5e21c933e4b05b4b01516128"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5e1c3e6ee4b0dc9594008530"}, {"problem": 42, "code": "(fn f [n] (if (= n 1) 1 (* n (f (dec n)))))", "user": "5e2549c8e4b05b4b0151615f"}, {"problem": 42, "code": "(fn [x]\n  (loop [n x\n         r 1]\n    (if (= n 1)\n      r\n      (recur (- n 1) (* r n))\n     )\n   )\n )", "user": "5e265173e4b05b4b01516175"}, {"problem": 42, "code": "#(reduce * (take % (iterate dec %)))", "user": "5e23d513e4b05b4b01516145"}, {"problem": 42, "code": "(fn FactorialFun\n  [limit]\n  (reduce * (range 1 (inc limit))))", "user": "5e16b820e4b0a047bd49f71f"}, {"problem": 42, "code": "(fn [x]\n  (reduce \n   (fn [value colu]\n     (* value colu)  \n   )\n   1\n   (range  1 (+ x 1))\n   \n  )\n )", "user": "5e23ca7fe4b05b4b01516144"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "5e21f944e4b05b4b0151612d"}, {"problem": 42, "code": ";;#(reduce * (range 1 (inc %)))\n#(->> %\n     inc\n     (range 1)\n     (reduce *))", "user": "5e22e4c5e4b05b4b01516137"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5e054752e4b0a607a9a45d78"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "5e246f92e4b05b4b01516150"}, {"problem": 42, "code": "(fn [n] (loop[n n coll 1] (if (= n 1) coll (recur (- n 1) (* coll n)))))", "user": "5e29cb4ce4b05b4b015161ae"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5e257a33e4b05b4b01516166"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5e2ead6ae4b05b4b015161f5"}, {"problem": 42, "code": "(fn [n] \n  (apply *' (range 1 (inc n))))", "user": "5e357507e4b0650de70e2b2a"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5e38a9cbe4b01d43a70e8dc2"}, {"problem": 42, "code": "(fn [x](reduce * (reverse (range 1 (+' x 1)))))", "user": "5e266943e4b05b4b01516178"}, {"problem": 42, "code": "(fn fact [n] (loop [n n result n]\n               (if (= n 1)\n                 result\n                 (recur (- n 1) (* result (- n 1))))))", "user": "5e380e72e4b01d43a70e8db0"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5d47fa13e4b07c84aa5ae6b6"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5e36ca7de4b0650de70e2b3c"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5e3302ece4b0650de70e2b02"}, {"problem": 42, "code": "(fn factorial-of [n]\n\t(if (= n 1)\n\t\t1\n\t\t(* n (factorial-of (- n 1)))\n\t)\n)", "user": "5e3b6ae9e4b01d43a70e8df4"}, {"problem": 42, "code": "(fn [n]\n  ((fn [n curr res]\n     (if (= n curr)\n       (* curr res)\n       (recur n (inc curr) (* curr res)))) n 1 1))", "user": "5e394c33e4b01d43a70e8dd1"}, {"problem": 42, "code": "(fn \n  [number]\n\t( loop [ i number fact 1]\n      (if (> i 0)\n        (recur ( dec i ) ( * fact i) )\n        fact\n       );end if\n      );end loop\n  );end fn", "user": "5e381434e4b01d43a70e8db4"}, {"problem": 42, "code": "#(reduce \n  (fn [a x]\n    (* a x))\n  1 (range 1 (inc %1)))", "user": "5e3a25d4e4b01d43a70e8dde"}, {"problem": 42, "code": "#(reduce * (take % (iterate dec %)))", "user": "5e01addee4b0a607a9a45d3f"}, {"problem": 42, "code": "(fn [n] (reduce (fn [acc v] (* acc v)) 1 (range 1 (inc n))))", "user": "5e392de0e4b01d43a70e8dcb"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5e3e23d9e4b01d43a70e8e20"}, {"problem": 42, "code": "(fn\n  [n]\n  (reduce * (range 1 (inc n))))", "user": "5c9a638fe4b048ec896c5aae"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5e259d05e4b05b4b01516169"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "5e3ef7d4e4b01d43a70e8e2d"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5e3975a3e4b01d43a70e8dd3"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5e41b679e4b01d43a70e8e58"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "5e12b21be4b099d064962feb"}, {"problem": 42, "code": "#(apply * (range % 1 -1))", "user": "5d28d935e4b092dab7f59c88"}, {"problem": 42, "code": "#(apply * (range 1 (+ 1 %)))", "user": "5e48ec09e4b043cd24807a45"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5e348945e4b0650de70e2b1d"}, {"problem": 42, "code": ";8! = 8 * 7 * 6 * 5 * 4 * 3 * 2 * 1\n#(apply * (range 1 (inc %)))", "user": "5e2586afe4b05b4b01516167"}, {"problem": 42, "code": "(fn fact [n]\n  (if (= n 1) 1\n    (* n (fact (dec n)))))", "user": "5e42b688e4b01d43a70e8e6b"}, {"problem": 42, "code": "#(->> (range 1 (inc %))\n     (reduce *))", "user": "5e491182e4b043cd24807a46"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5e2f73e5e4b05b4b01516204"}, {"problem": 42, "code": "(fn factorial_fun\n  [n]\n  (loop [count n accumulator 1]\n    (if (zero? count)\n      accumulator\n      (recur (dec count) (* accumulator count)))))", "user": "5da8e170e4b000c986472c29"}, {"problem": 42, "code": "#(loop [acc 1 n %]\n     (if (= 1 n)\n       acc\n       (recur (* acc n) (dec n))))", "user": "5e4471e1e4b01d43a70e8e85"}, {"problem": 42, "code": "(fn fact [n]\n  (if (= n 1)\n      1\n      (* n (fact (dec n)))))", "user": "5d078e2de4b0cc9c915881fa"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5e471203e4b043cd24807a2a"}, {"problem": 42, "code": "(fn fac \n   ([val] (fac val 1))\n   ([val acc] \n    (if (= val 1) \n      acc \n      (recur (dec val) (* acc val))\n      )))", "user": "5e44c804e4b01d43a70e8e89"}, {"problem": 42, "code": "(fn factorial [n]\n    (loop [acc 1\n           a   n]\n      (if (zero? a) acc\n          (recur (* acc a) (dec a)))))", "user": "505223fae4b0a561d07d8f17"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "5e41cb44e4b01d43a70e8e5b"}, {"problem": 42, "code": "(fn [n]\n  (loop [n n res 1]\n    (if (zero? n)\n      res\n      (recur (dec n) (* res n)))))", "user": "55d354e0e4b0e31453f64a62"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "54be7c0de4b0ed20f4ff6eec"}, {"problem": 42, "code": "(fn[n] (loop [cot n\n              cur (dec n)]\n         (if (< cur 1)\n           cot\n           (recur (* cot cur)\n                  (dec cur)))))", "user": "5e4375e7e4b01d43a70e8e73"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5e5809bbe4b027a2e10ac104"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5e50012ae4b027a2e10ac0bd"}, {"problem": 42, "code": "(fn ! [n] (if (= 0 n) 1 (* n (! (dec n)))))", "user": "5e5b8d92e4b0fd0acd158658"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5e5c425ae4b0fd0acd158662"}, {"problem": 42, "code": "(fn factorial [x]\n   (loop [i 1 acc 1]\n      (if (<= i x)\n         (recur (inc i) (* acc i))\n         acc)))", "user": "5e595637e4b027a2e10ac10e"}, {"problem": 42, "code": "(fn [n]\n    (loop [cnt n\n           acc 1]\n       (if (zero? cnt)\n            acc\n          (recur (dec cnt) (* acc cnt)))))", "user": "5e5913b5e4b027a2e10ac10b"}, {"problem": 42, "code": "#(reduce (fn [acc x] (* acc x)) (take % (iterate dec %)))", "user": "5e5fd7afe4b0fd0acd158680"}, {"problem": 42, "code": "#(loop [n % p 1] (if (> n 0) (recur (- n 1) (* n p)) p))", "user": "5e546e20e4b027a2e10ac0eb"}, {"problem": 42, "code": "#(loop [i 0\n        sum  %]\n   (if (< i (dec %))\n     (recur (inc i) (+ sum (* i sum)))\n     sum))", "user": "5e63ffa0e4b0fd0acd1586a6"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5df70ee8e4b0a607a9a45c8a"}, {"problem": 42, "code": "#(apply * (take % (iterate inc 1)))", "user": "54b51366e4b05787c3b16398"}, {"problem": 42, "code": "#(reduce (fn [res i] (inc i) (* res i)) 1 (rest (range (+ % 1))))", "user": "5e5f8a07e4b0fd0acd15867c"}, {"problem": 42, "code": "(fn f [n]\n  (if (pos? n)\n    (* n (f(dec n)))\n    1))", "user": "5dd47f7ce4b0948ae9d9ad6d"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "5e65bfe4e4b0fd0acd1586b9"}, {"problem": 42, "code": "(fn [x] (apply * (rest (range (+ 1 x)))))", "user": "5e68f6dde4b04a83ad7cd268"}, {"problem": 42, "code": "#(apply * (range 1 (+ 1 %)))", "user": "5e66c144e4b0e171e1033683"}, {"problem": 42, "code": "(fn factorial [value]\n  (cond (= value 1) 1\n        :else (* value (factorial (- value 1)))))", "user": "5e663073e4b0fd0acd1586bc"}, {"problem": 42, "code": "#(reduce * (take % (iterate dec %)))", "user": "5df79c31e4b0a607a9a45c9b"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %1)))", "user": "5e692be9e4b04a83ad7cd269"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (inc x))))", "user": "5e6ff368e4b04a83ad7cd2a8"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "5e6e6537e4b04a83ad7cd29a"}, {"problem": 42, "code": "(fn factorial [n] \n  (loop [cnt n acc 1]\n    (if (zero? cnt)\n      acc\n      (recur (dec cnt) (* acc cnt))\n)))", "user": "5e731c7fe4b085ba37836dcd"}, {"problem": 42, "code": "(fn [x]\n  (apply * (range 1 (inc x))))", "user": "5e724492e4b085ba37836dc7"}, {"problem": 42, "code": "(fn\n  [n]\n  (reduce * (drop 1 (range (inc n)))))", "user": "5e6df58ee4b04a83ad7cd297"}, {"problem": 42, "code": "(fn [n]\n  (loop [n n\n         acc []]\n    (if (= n 0)\n      (reduce * acc)\n      (recur (dec n) (conj acc n)))))", "user": "5e5fa1ffe4b0fd0acd15867d"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %1)))", "user": "5e5096c6e4b027a2e10ac0c6"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5e6cfc25e4b04a83ad7cd28e"}, {"problem": 42, "code": "#(->> % inc (range 1) (apply *))", "user": "5bb36a9ce4b0a20761a23523"}, {"problem": 42, "code": "#(apply * (take % (iterate dec %)))", "user": "5e71f267e4b085ba37836dc1"}, {"problem": 42, "code": "#(apply * (rest (range (inc %))))", "user": "5e6ca949e4b04a83ad7cd289"}, {"problem": 42, "code": "(fn [x]\n (reduce * (range 1 (inc x))))", "user": "5e78e8d3e4b085ba37836dfd"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "5e7af7ffe4b085ba37836e0f"}, {"problem": 42, "code": "(fn [n] (loop [cnt n acc 1]\n    (if (= cnt 0)\n      acc\n      (recur (- cnt 1) (* cnt acc)))))", "user": "5cbc1ee7e4b026601754b9e1"}, {"problem": 42, "code": "(fn [x]\n  (if (= 0 x) 1\n      (reduce #(* % %2) 1 (range 1 (inc x)))))", "user": "5e12327ee4b099d064962fe5"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "59bdeb22e4b0a024fb6ae42d"}, {"problem": 42, "code": "#(loop [x %1 r 1]\n    (cond\n      (= x 1) r\n      :else (recur  (dec x) (* r x))\n     )\n  )", "user": "5e7aba9fe4b085ba37836e0c"}, {"problem": 42, "code": "(fn fact [n]\n     (if (zero? n)\n       1\n       (* n (fact (dec n)))))", "user": "5e7b1ef4e4b085ba37836e10"}, {"problem": 42, "code": "(fn [factor]\n  (loop [result 1 i factor]\n    (if (= i 0)\n      result\n      (recur (* result i) (dec i)))))", "user": "5e7f62cce4b085ba37836e3b"}, {"problem": 42, "code": "(fn fac\n  [n]\n  (if (< n 1)\n    1 \n    (* n (fac (dec n) ))\n    )\n  )", "user": "5e77ece9e4b085ba37836df3"}, {"problem": 42, "code": "(fn [n]\n  (loop [n n, res 1]\n    (if (zero? n)\n      res\n      (recur (dec' n) (*' res n)))))", "user": "5e76274ce4b085ba37836deb"}, {"problem": 42, "code": "#(loop \n   [n %1, res 1]\n   (if (= n 1)\n     res \n   \t(recur (dec n) (* n res))\n   ) \n  )", "user": "5e79fcb9e4b085ba37836e08"}, {"problem": 42, "code": "(fn [x] (loop [top-border x\n                           cur 1\n                           factorial 1] (if (> cur top-border)\n                                            factorial\n                                            (recur top-border (inc cur) (* factorial cur)))))", "user": "5e7bb000e4b085ba37836e1d"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5e486cb0e4b043cd24807a3e"}, {"problem": 42, "code": "(fn [n]\n  (loop [curr n\n         next (dec curr)\n         total 1]\n    (if (> curr 1)\n      (recur next (dec next) (* total curr))\n      total)))", "user": "585c16c3e4b0f14aab7c877d"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "5e805895e4b085ba37836e44"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5e790f6be4b085ba37836e01"}, {"problem": 42, "code": "(fn [n] (reduce * (rest (range (inc n)))))", "user": "5e89b832e4b0cb0169546315"}, {"problem": 42, "code": "#(reduce * (take % (iterate inc 1)))", "user": "5e13a6b7e4b099d064963001"}, {"problem": 42, "code": "(fn factorial [x]\n  (if (= x 1)\n    x\n    (* x (factorial (dec x)))))", "user": "5e839edde4b09a7a73c8bbba"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "4eb70649535d7eef30807373"}, {"problem": 42, "code": "(fn [n]\n   (reduce * (range 1 (inc n))))", "user": "5e856736e4b09a7a73c8bbd2"}, {"problem": 42, "code": "(fn[n] (reduce * (range 1 (+ n 1))))", "user": "5e208e4be4b05b4b01516113"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5e85b853e4b09a7a73c8bbd5"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5e8ce2fee4b0cb0169546328"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5e7dc2d8e4b085ba37836e2f"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5e8f87c7e4b0cb0169546342"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5c3e5227e4b08cd430848e80"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5e62444fe4b0fd0acd158694"}, {"problem": 42, "code": "(fn [x] (loop[i 1 sum 1] (if (= i (+ 1 x) ) sum (recur (inc i) (* sum i))   )))", "user": "5e94ff5fe4b0fbed045a37ff"}, {"problem": 42, "code": "#(loop [fct 1 nm %]\n   (if (<= nm 0)\n     fct\n     (recur (* fct nm) (dec nm))\n  )\n)", "user": "5e947a69e4b0fbed045a37f8"}, {"problem": 42, "code": "#(apply * (range 1 (+ % 1)))", "user": "5e639b4be4b0fd0acd1586a2"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5e83696ce4b09a7a73c8bbb7"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5dc88a38e4b02f9375f4e1db"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5e92adb6e4b0fbed045a37ea"}, {"problem": 42, "code": "(fn factorial\n  [value]\n  (if (< value 2)\n    1\n    (* value (factorial (dec value)))))", "user": "5e9636fee4b0fbed045a3816"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5e954b9ee4b0fbed045a3809"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5be9ad9be4b0f319e2d7ec76"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5e980e6be4b0157ca96647d6"}, {"problem": 42, "code": "(fn [x]\n  (reduce * (range 1 (inc x))))", "user": "5e99cbd4e4b0157ca96647e6"}, {"problem": 42, "code": "(fn factorial [n]\n  (if (= n 1)\n    1\n    (* n (factorial (- n 1)))))", "user": "5e98e8a9e4b0157ca96647dc"}, {"problem": 42, "code": "(fn !\n  [n]\n  (reduce *' (range 1 (inc n))))", "user": "5e95013fe4b0fbed045a3800"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5e96c662e4b0157ca96647ca"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5e95873ae4b0fbed045a380a"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5e976fa8e4b0157ca96647cf"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "5e996e76e4b0157ca96647e4"}, {"problem": 42, "code": "(fn f [x]\n  (if (= x 1) 1\n    (* x (f (- x 1)))))", "user": "5e84b48ee4b09a7a73c8bbc8"}, {"problem": 42, "code": "(fn factorial \n  [n]\n  (reduce * (range 1 (inc n))))", "user": "5e9771dee4b0157ca96647d0"}, {"problem": 42, "code": "(fn [n]\n  (apply * (range 1 (inc n)))\n  )", "user": "5e3c6db5e4b01d43a70e8e05"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "user": "5e978fe5e4b0157ca96647d1"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "user": "5e9e8648e4b00a66d4a95178"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5e9e408fe4b00a66d4a95172"}, {"problem": 42, "code": "#(loop [x %, res 1] \n   (if (> x 1) (recur (dec x) (* res x)) res)\n )", "user": "5e85d0bde4b09a7a73c8bbd6"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5e9d1c75e4b0157ca9664801"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5ea21034e4b00a66d4a95191"}, {"problem": 42, "code": "#(loop [total 1\n         n %]\n    (if (= 1 n)\n      total\n      (recur\n       (* total n)\n       (dec n))))", "user": "5e950178e4b0fbed045a3801"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5e950310e4b0fbed045a3802"}, {"problem": 42, "code": "(fn !\n  [n]\n  (reduce *' (range 1 (inc n))))", "user": "5ea3711ae4b00a66d4a9519d"}, {"problem": 42, "code": "#(reduce * (take % (iterate inc 1)))", "user": "5df08767e4b093ff717275bf"}, {"problem": 42, "code": "(fn [x]\n  (loop [c 1, res 1]\n    (if (= c x)\n      (* c res)\n      (recur (inc c) (* c res)))))", "user": "5e9f38cce4b00a66d4a9517e"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5ea444b7e4b00a66d4a951a0"}, {"problem": 42, "code": "(fn [n]\n  (loop [tot 1 n n]\n    (if (= n 1) tot\n        (recur (* n tot) (dec n)))))", "user": "59750a68e4b01722bebd4cba"}, {"problem": 42, "code": "(fn solution\n  ([n]\n   (solution n 1))\n  ([n product]\n   (if (= n 0)\n     product\n     (recur (dec n) (* product n)))))", "user": "5e2ef900e4b05b4b015161fc"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5ea6f88de4b00a66d4a951b1"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5ea2e6bfe4b00a66d4a95197"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5e218bb7e4b05b4b01516123"}, {"problem": 42, "code": "#(reduce *\n(range 1 (+ 1 %)))", "user": "5e9e642ce4b00a66d4a95174"}, {"problem": 42, "code": "(fn fac [x] \n  (if (= x 0)\n    1\n    (* x (fac (dec x)))\n    )\n  )", "user": "5ea7b04de4b00a66d4a951b6"}, {"problem": 42, "code": "(fn [n]\n  (loop [acc 1 cnt n]\n    (if (= cnt 0)\n      acc\n      (recur (* acc cnt) (- cnt 1))\n    )\n  )\n)", "user": "5ea97df7e4b00a66d4a951c8"}, {"problem": 42, "code": "(fn factorial [x]\n  (if (= 1 x)\n    x\n    (* x (factorial (- x 1)))))", "user": "5e9683f1e4b0157ca96647c7"}, {"problem": 42, "code": "(fn [x] (reduce * (drop 1 (range (+ x 1)))))", "user": "5bc02fabe4b07a9b28b0fff9"}, {"problem": 42, "code": "(fn [n] (reduce * (reverse (range 1 (+ n 1)))))", "user": "5c9adfebe4b048ec896c5ab9"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5eaba9c0e4b00a66d4a951d6"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5e9b7aefe4b0157ca96647f1"}, {"problem": 42, "code": "#(->> (range 1 (inc %))\n      (reduce * 1))", "user": "5e64ae6ce4b0fd0acd1586ac"}, {"problem": 42, "code": "(fn [n] (apply * (range 1 (+ 1 n))))", "user": "5ea8bed8e4b00a66d4a951c2"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5eb1c786e4b00a66d4a95201"}, {"problem": 42, "code": "#(reduce (fn [a v]\n          (* a v))\n        %\n        (range 1 %))", "user": "5eb1e42ae4b00a66d4a95202"}, {"problem": 42, "code": "(fn f [n] \n  (if (<= n 0)\n    1\n    (* n (f (dec n)))))", "user": "5e98e338e4b0157ca96647db"}, {"problem": 42, "code": "(fn [a] (reduce * 1 (map inc (range a))))", "user": "5eb4927fe4b00a66d4a95221"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5e67ab18e4b0e171e103368a"}, {"problem": 42, "code": "(fn [x]\n  (apply * (range 1 (+ x 1))))", "user": "5eb1a80ce4b00a66d4a951ff"}, {"problem": 42, "code": "(fn [n]\n                     (loop [n n\n                            out 1]\n                       (if (< n 1)\n                         out\n                         (recur (dec n) (* out n)))))", "user": "5eb22708e4b00a66d4a95204"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5eb193fde4b00a66d4a951fe"}, {"problem": 42, "code": "(fn fak [arg]\n  (if (< arg 2)\n    1\n    (* arg (fak (dec arg)))))", "user": "5cc092d1e4b0ccb061962790"}, {"problem": 42, "code": "(fn factorial [n]\n  (if (= n 1)\n    n\n    (* n (factorial (dec n)))\n  )\n)", "user": "5eb56fc1e4b00a66d4a95224"}, {"problem": 42, "code": "#(reduce * (take % (iterate dec %)))", "user": "5eb5d9bbe4b00a66d4a9522e"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5ebb0f7be4b00a66d4a95261"}, {"problem": 42, "code": "(fn [n] (reduce (fn [n e] (* n e)) n (rest (range n))))", "user": "5e4beca9e4b0889a8790a560"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5ebc7c13e4b00a66d4a95267"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "user": "5ebff55de4b00a66d4a95286"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (inc x))))", "user": "5ea970d1e4b00a66d4a951c6"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (range n 0 -1)))", "user": "5ec21ef0e4b00a66d4a95299"}, {"problem": 42, "code": "(fn [x]\n  (reduce * (range 1 (+ x 1))))", "user": "5ebaa4a3e4b00a66d4a95258"}, {"problem": 42, "code": "(fn factor \n  ([n a]\n   (if (or (= n 1) (= n 0))\n     a\n     (factor (dec n) (* n a))))\n  ([n] (factor n 1)))", "user": "5defc177e4b093ff717275af"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5ec3a13ae4b08d0ec38692b9"}, {"problem": 42, "code": "(fn factorial* [a]\n    (reduce (fn [x y] (* x y))\n            1\n            (range 1 (+ a 1))))", "user": "5ec66326e4b08d0ec38692d5"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "5ebdb3d2e4b00a66d4a95275"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "51412b0ae4b0694e2952b79d"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5ec3cdf7e4b08d0ec38692bc"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %1)))", "user": "5ec82b11e4b08d0ec38692e6"}, {"problem": 42, "code": "(fn [n]\n  (apply * (rest (range (inc n)))))", "user": "5e0b6375e4b099d064962f7b"}, {"problem": 42, "code": "#(apply * (range 2 (inc %)))", "user": "58f64f71e4b0438e51c2cef0"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5eb9e97ce4b00a66d4a95253"}, {"problem": 42, "code": "(fn fac [n]\n  (if (<= n 1)\n    1\n    (* (fac (dec n)) n)))", "user": "5ebb4751e4b00a66d4a95262"}, {"problem": 42, "code": "(fn [y] (reduce (fn [acc x] (* acc x)) 1 (drop 1 (range (+ y 1)))))", "user": "5ebed654e4b00a66d4a9527c"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5ec1b293e4b00a66d4a95296"}, {"problem": 42, "code": "#(reduce * (rest (range (inc %1))))", "user": "5e0828b9e4b0978307768fbe"}, {"problem": 42, "code": "(fn fac [n] (if (< n 3) n (* n (fac (- n 1)))))\n\n; Like this solution\n;\n; #(reduce * (range 1 (inc %)))", "user": "5eccc5c2e4b016b56eae058f"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5a3e1243e4b0447ef91cc5ae"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5ecf4ee4e4b016b56eae05a6"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "5ecf55dae4b016b56eae05a8"}, {"problem": 42, "code": "(fn factorial \n  [n]\n  (if (= n 1)\n    1\n    (* n (factorial (dec n)))))", "user": "5ed08785e4b016b56eae05b1"}, {"problem": 42, "code": "#(apply * (range 1N (inc %)))", "user": "5ece3d25e4b016b56eae059b"}, {"problem": 42, "code": "(fn f [n] (if (< n 2) 1 (reduce * (rest (range (inc n))))))", "user": "5ed15e23e4b016b56eae05ba"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5ecfd429e4b016b56eae05a9"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5ed3c43be4b016b56eae05c4"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5ec6de19e4b08d0ec38692da"}, {"problem": 42, "code": "(fn _fa [x] (if (> x 1) (* x (_fa (dec x))) 1))", "user": "5ecc0831e4b016b56eae058c"}, {"problem": 42, "code": "#(reduce * (take % (iterate dec %)))", "user": "5ed03b7fe4b016b56eae05ae"}, {"problem": 42, "code": "(fn fac [n]\n  (reduce * (range 1N (inc n))))", "user": "5eac172fe4b00a66d4a951dd"}, {"problem": 42, "code": "#(loop [cnt %\n         acc 1]\n    (if (zero? cnt)\n      acc\n      (recur (dec cnt) (* cnt acc))))", "user": "5ed4f927e4b016b56eae05d0"}, {"problem": 42, "code": "#(reduce * (range 2 (inc %)))", "user": "5e9154c1e4b0cb0169546354"}, {"problem": 42, "code": "(fn [x] (let [r (range 1 (inc x))]\n                     (reduce * r)))", "user": "5eccbce6e4b016b56eae058e"}, {"problem": 42, "code": "(fn [n] (loop [res 1 i n] (if (= i 1) res (recur (* res i) (- i 1)))))", "user": "5ed4a4ade4b016b56eae05cd"}, {"problem": 42, "code": "(fn [n]\n  (#(if (< %2 2)\n   %1\n   (recur (* %1 %2) (dec %2)))\n  1\n  n))", "user": "5ed52854e4b016b56eae05d2"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5ed11279e4b016b56eae05b7"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "5ed9b912e4b0c7845d86b0e3"}, {"problem": 42, "code": "#(reduce * (take % (iterate dec %)))", "user": "5ed6030de4b016b56eae05db"}, {"problem": 42, "code": "(fn [x]\n  (reduce * (range 1 (+ x 1))))", "user": "5ed5148ee4b016b56eae05d1"}, {"problem": 42, "code": "(fn x [a] (if (= a 0) 1 (* a (x (- a 1)))))", "user": "5edaabade4b0c7845d86b0e8"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5ed4b1e8e4b016b56eae05ce"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "5d6f8b4de4b04d129b00f2d3"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5ed9c2cde4b0c7845d86b0e4"}, {"problem": 42, "code": "(fn fac [x] (if (> x 1) (* x (fac (dec x))) x))", "user": "5ed4482be4b016b56eae05ca"}, {"problem": 42, "code": "#(reduce * (range 2 (inc %)))", "user": "5ed8a12fe4b0c7845d86b0d7"}, {"problem": 42, "code": "(fn factorial [nu] (println nu) (cond\n                     (= 1 nu) 1\n                     :else (* nu (factorial (-  nu 1)))))", "user": "5ec819b4e4b08d0ec38692e2"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5ec5f7f2e4b08d0ec38692d1"}, {"problem": 42, "code": "(fn [n]  (reduce * (range 1 (inc n))))", "user": "5ec25800e4b00a66d4a9529b"}, {"problem": 42, "code": "#(apply * (take % (iterate inc 1)))", "user": "565b371fe4b068f2fe63dbff"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5ebd7296e4b00a66d4a95273"}, {"problem": 42, "code": "; (fn [n]\n;   (loop [n n\n;          l '()]\n;     (if (zero? n)\n;       (apply * l)\n;       (recur (dec n) (cons n l)))))\n(fn [i]\n  (loop [i i\n         c 1]\n    (if (zero? i) c\n      (recur (dec i) (* i c)))))", "user": "5d83b9aae4b0915913b1d386"}, {"problem": 42, "code": "(fn fac [n]\n  (if (= n 1)\n    1\n  \t(* n (fac (dec n)))))", "user": "5edd6eb7e4b0c7845d86b0f7"}, {"problem": 42, "code": "#(reduce * (-> % inc range rest)  )\n;#(reduce * (range 1 (inc %)))\n;#(apply * (range 1 (inc %)))", "user": "5ed30cb6e4b016b56eae05c2"}, {"problem": 42, "code": "(fn fact \n ([n] (fact n 1))\n ([n acc] \n  (if (= n 1)\n   acc\n   (recur (dec n) (* acc n)))))", "user": "4f6543cae4b07046d9f4ef41"}, {"problem": 42, "code": "(fn [x] (loop [i x acc 1] (if (> i 0) (recur (- i 1) (* i acc) ) acc)))", "user": "5c527129e4b0fb8c5ffd99de"}, {"problem": 42, "code": "#(reduce * 1 (take % (iterate inc 1)))", "user": "5644149de4b0018b46ad8c07"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "53c73e8ae4b00fb29b2212a5"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5e909685e4b0cb016954634d"}, {"problem": 42, "code": "(fn fact [n] (if (= n 0) 1 (* n (fact (dec n)))))", "user": "5ed875abe4b016b56eae05f2"}, {"problem": 42, "code": "#(loop [k % r 1]\n    (if (= 1 k)\n      r\n      (recur (dec k) (* k r))\n    ))", "user": "5e42ba49e4b01d43a70e8e6c"}, {"problem": 42, "code": "(fn fact [x]\n   (if (= x 1) 1\n       (* x (fact (dec x)))\n       )\n   )", "user": "5ee75f8be4b029a2061bbea5"}, {"problem": 42, "code": "(fn factorial [x]\n  (if (= x 1)\n    1\n    (* x (factorial (- x 1)))))", "user": "5eb6561fe4b00a66d4a95233"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5edb07dde4b0c7845d86b0ed"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5ee738dee4b029a2061bbea2"}, {"problem": 42, "code": "(fn [x] (reduce * (take x (iterate inc 1))))", "user": "5ed6c4ede4b016b56eae05e3"}, {"problem": 42, "code": "(fn fact [n] (if (= n 0)\n               1\n               (* n (fact (dec n)))))", "user": "5ee93720e4b029a2061bbeb7"}, {"problem": 42, "code": "(fn fact [x]\n    (if (= x 1)\n      x\n      (* x (fact (dec x)))\n      )\n    )", "user": "5dd84170e4b0948ae9d9ad93"}, {"problem": 42, "code": "(fn fac [n]\n  (if (zero? n)\n    1\n    (* n (fac (- n 1)))))", "user": "5edfb1e5e4b0c7845d86b107"}, {"problem": 42, "code": "(fn \n  [n]\n  (loop [i 1\n         v 1]\n    (if (>= i n)\n      v\n      (recur (inc i) (* v (inc i))))))", "user": "5eeb03dde4b029a2061bbeca"}, {"problem": 42, "code": "(fn [n] (reduce * 1 (range 1 (inc n))))", "user": "5eebbf9ee4b029a2061bbed2"}, {"problem": 42, "code": "(fn [a]\n\t(loop [n a val 1]\n\t\t(if (<= n 1)\n\t\t\tval\n\t\t\t(recur (dec n) (* n val)))))", "user": "5eea5ce7e4b029a2061bbec0"}, {"problem": 42, "code": "#(reduce * (map inc (range %)))", "user": "5e9b6471e4b0157ca96647f0"}, {"problem": 42, "code": "#(case %\n       1 1\n       3 6\n       5 120\n       8 40320\n       :this :is-not-robust\n       :also :is-very-fragile)", "user": "5ee7274ce4b029a2061bbea0"}, {"problem": 42, "code": "#(loop [now %1\n         result 1]\n    (if (= now 0) result\n                  (recur (- now 1) (* result now))))", "user": "5eeeb000e4b07c55ae4a0515"}, {"problem": 42, "code": "(fn fact [n] (if (<= n 1) 1 (* n (fact (dec n)))))", "user": "5eee7311e4b07c55ae4a0510"}, {"problem": 42, "code": "#(loop [n % f 1] (if (= n 1) f (recur (dec n) (* f n))))", "user": "5eee9352e4b07c55ae4a0512"}, {"problem": 42, "code": "(fn [n]\n  (reduce * \n    (range 1 (inc n))))", "user": "5eecd339e4b07c55ae4a0507"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %1)))", "user": "5eea5c98e4b029a2061bbebf"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %1)))", "user": "5e83a273e4b09a7a73c8bbbb"}, {"problem": 42, "code": "(fn [num] (reduce #(* %1 %2) 1 (range 1 (+ num 1))))", "user": "5edc16e1e4b0c7845d86b0f1"}, {"problem": 42, "code": "(fn my-factorial [n]\n  (reduce * (range 1 (inc n))))", "user": "5eec1001e4b07c55ae4a0502"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5ec7d7f2e4b08d0ec38692e1"}, {"problem": 42, "code": "(fn fac [no] (if (= no 1) 1 (* no (fac (dec no)))))", "user": "5ef5ee81e4b07c55ae4a054a"}, {"problem": 42, "code": "(fn fac [n]\n  (if (= 1 n)\n    1\n    (* n (fac (- n 1)))))", "user": "5ef381a3e4b07c55ae4a053c"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %1)))", "user": "5ef18431e4b07c55ae4a0529"}, {"problem": 42, "code": "(fn fac [x] (if (= x 1) 1 (* x (fac (- x 1)))))", "user": "5ed70b97e4b016b56eae05e6"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5eb741e4e4b00a66d4a9523b"}, {"problem": 42, "code": "(fn factorial [n]  \t\n                    (if (= n 0)\n                      1 \n                      (* n (factorial(dec n)))))", "user": "576aea4fe4b0a07e8fc18126"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5ee81beae4b029a2061bbeac"}, {"problem": 42, "code": "(fn factorial [x] (reduce * (range x 0 -1)))", "user": "5ef9ea69e4b09b61f08553d1"}, {"problem": 42, "code": "#(apply * (range % 1 -1))", "user": "5dd45bb8e4b0948ae9d9ad6b"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5eff339ae4b0cf489e8d7f0c"}, {"problem": 42, "code": "(fn fac [n] \n  (if (= 1 n)\n    1\n    (* n (fac (dec n)))\n    )\n  )", "user": "5f016f37e4b0cf489e8d7f20"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5b4bfd04e4b02d533a91bca2"}, {"problem": 42, "code": "(fn fac [n]\n    (case n\n      0 1\n      (* n (fac (dec n)))))", "user": "5ef8e9e0e4b09b61f08553cb"}, {"problem": 42, "code": "(fn [n] (loop [cnt n acc 1](if (= 1 cnt) acc (recur (dec cnt) (* cnt acc)))))", "user": "5f06da46e4b0cf489e8d7f54"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (inc x))))", "user": "5f02f365e4b0cf489e8d7f2c"}, {"problem": 42, "code": "(fn ! [n]\n  (loop [x n\n         r 1]\n    (if (< x 2)\n      r\n      (recur (dec x) (* x r)))))", "user": "5f03550ce4b0cf489e8d7f33"}, {"problem": 42, "code": "(fn factorial [n]\n  (loop [i n sum n]\n    (if (= i 1)\n      sum\n      (let [idec (dec i)]\n        (recur idec (* sum idec))))))", "user": "5f012a2ee4b0cf489e8d7f1e"}, {"problem": 42, "code": "(fn [n]\n  (loop [acc 1\n           rem n]\n      (println acc rem)\n      (case rem\n        1 acc\n        (recur (* acc rem) (dec rem)))))", "user": "5484c3b2e4b0e286459a11a2"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5f0890ffe4b0cf489e8d7f61"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5f088bb3e4b0cf489e8d7f5f"}, {"problem": 42, "code": "#(loop [n %1 fact 1]\n     (if (= n 1)\n       fact\n       (recur (dec n) (* fact n))))", "user": "5f0a4904e4b09a3f05b71805"}, {"problem": 42, "code": "(fn fact\n  [n]\n  (if (= n 0) 1\n    (* n (fact (- n 1)))))", "user": "58f98231e4b0438e51c2cf4c"}, {"problem": 42, "code": "#(reduce * (take % (iterate dec %)))", "user": "5eecf110e4b07c55ae4a050b"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5c9da580e4b048ec896c5b12"}, {"problem": 42, "code": "(fn factorial [n]\n  (reduce #(* % %2) 1 (range 1 (inc n))))", "user": "5f003099e4b0cf489e8d7f17"}, {"problem": 42, "code": "(fn fac [y x]\n   (if (> x 0)\n     (fac (* y x) (dec x))\n     (+ 0 y)\n   )\n   ) 1", "user": "5f082d9ee4b0cf489e8d7f5c"}, {"problem": 42, "code": "(fn [x] \n   (loop [total 1\n          ind x]\n     (if-not (>= ind 1)\n       total\n       (recur (* total ind) (- ind 1)))))", "user": "58ed2e21e4b056aecfd47d7a"}, {"problem": 42, "code": "(fn fun [x] \n  (if (= 1 x) x (* x (fun (dec x)))))", "user": "5f0c8b0de4b0f30dddfb5d4c"}, {"problem": 42, "code": "#(loop [n %1, result 1] ; 3 1,\n   (if (= n 1) result (recur (dec n) (* n result)))\n)", "user": "5d73530ce4b02e6b30c93514"}, {"problem": 42, "code": "#(apply * (range 1 (+ % 1)))", "user": "5ef82119e4b09b61f08553c6"}, {"problem": 42, "code": "(fn [x]\n  (loop [n x \n         acc 1]\n    (if (= n 1)\n      acc\n      (recur (dec n) (* acc n)))))", "user": "57e070fde4b0bd073c202478"}, {"problem": 42, "code": "(fn [n] (loop [x 2, acc 1]\n          (if (> x n)\n            acc\n            (recur (+ 1 x) (* acc x)))))", "user": "5e6ba862e4b04a83ad7cd27d"}, {"problem": 42, "code": "#(reduce * (drop 1 (range (inc %))))", "user": "5f01952fe4b0cf489e8d7f22"}, {"problem": 42, "code": "(fn [n]\n  (reduce * 1 (range 1 (inc n))))", "user": "5d431c77e4b07c84aa5ae68f"}, {"problem": 42, "code": "#(loop [n %\n        res 1]\n   (if (zero? n)\n       res\n       (recur (dec n) (* n res))))", "user": "5f0b8243e4b0f30dddfb5d45"}, {"problem": 42, "code": "#(apply * (range 1 (+ % 1)))", "user": "5f0f6540e4b091ba50b4db9c"}, {"problem": 42, "code": "#(apply * (map inc (range %)))", "user": "5f03ab5be4b0cf489e8d7f37"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5b7f2d75e4b047b03b203768"}, {"problem": 42, "code": "#(apply * (map inc (range %)))", "user": "5509a23ee4b06e50f9beb11a"}, {"problem": 42, "code": "(fn fact [x]\n  (loop [n x f 1]\n    (if (= n 1)\n      f\n      (recur (dec n) (* f n)))))", "user": "5f122f93e4b091ba50b4dbae"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5f15a50fe4b091ba50b4dbbc"}, {"problem": 42, "code": "#(apply * (take % (iterate inc 1)))", "user": "5f0824c5e4b0cf489e8d7f5b"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5f086f54e4b0cf489e8d7f5e"}, {"problem": 42, "code": "(fn fac [x]\n  (if \n    (= x 1) \n    1 \n    (* x (fac (dec x)))\n   ))", "user": "5ec0de29e4b00a66d4a9528e"}, {"problem": 42, "code": "(fn foo [n]  \n   (if (> n 1)\n    (* n (foo (dec n)))\n    n\n))", "user": "5f1aade6e4b091ba50b4dbe4"}, {"problem": 42, "code": "(fn [n]\n   (reduce * (range 1 (+ n 1))))", "user": "5ec03772e4b00a66d4a95289"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5f0e32a1e4b0f30dddfb5d59"}, {"problem": 42, "code": "#(reduce (fn [factorial value] (* factorial value)) 1 (drop 1 (range (+ %1 1))))", "user": "5f17e3c5e4b091ba50b4dbd0"}, {"problem": 42, "code": "(fn my-fac [n] (if (< n 2) 1\n                 (* n (my-fac (dec n)))))", "user": "5f15b1e2e4b091ba50b4dbbd"}, {"problem": 42, "code": "(fn [x]\n  (reduce * (range 1 (inc x))))", "user": "4f0f7339535d0136e6c2233e"}, {"problem": 42, "code": "(fn fac [x]\n  (if (> x 0) \n    (* x (fac (dec x))) \n    1\n  ))", "user": "5f18444ee4b091ba50b4dbd3"}, {"problem": 42, "code": "(fn fac [n] (if (= n 1) n (* n (fac (dec n)))))", "user": "5e3071abe4b05b4b01516213"}, {"problem": 42, "code": "#(reduce * (drop 1 (range (+ 1 %))))", "user": "5f1c7c3be4b0f565ad998261"}, {"problem": 42, "code": "(fn fact [x] (if (= x 0) 1 (* x (fact (dec x)))))", "user": "5f06d26ae4b0cf489e8d7f53"}, {"problem": 42, "code": "(fn fact[x]\n  (cond \n    (<= x 1) \n        1 \n    :else (* x  (fact (- x 1)))\n  )\n)", "user": "5f0cb4f3e4b0f30dddfb5d4e"}, {"problem": 42, "code": "(fn fac [n] (if (= n 1) 1 (* n (fac (dec n)))))", "user": "5f0e8312e4b0f30dddfb5d5b"}, {"problem": 42, "code": "(fn [n]\n  (apply * (take n (iterate inc 1))))", "user": "5f081f6de4b0cf489e8d7f5a"}, {"problem": 42, "code": "(fn factorial [n] (loop [ret (if (zero? n) 1 n) \n                          cur (dec n)]\n                     (if (pos? cur) \n                       (recur (* ret cur) (dec cur))\n                       ret)))", "user": "5f21d172e4b0f565ad998286"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5f247827e4b0f565ad998292"}, {"problem": 42, "code": "(fn [x]\n  (loop [p x acc 1]\n    (if (zero? p)\n      acc\n      (recur (dec p) (* acc p)))))", "user": "5cf8864be4b0b71b1d808a84"}, {"problem": 42, "code": "(fn [n]\n   (reduce * (rest (range (+ n 1)))))", "user": "59331397e4b072a2710fd046"}, {"problem": 42, "code": "(fn [n]\n    (loop [cnt n\n           acc 1]\n       (if (zero? cnt)\n            acc\n          (recur (dec cnt) (* acc cnt)))))", "user": "5d8a3f3ee4b0915913b1d3c9"}, {"problem": 42, "code": "(fn [number]\n   (loop [n number\n          factorial n]\n     (if (= n 0)\n       0\n       (if (= n 1)\n         factorial\n         (recur (- n 1) (* factorial (- n 1)))))))", "user": "58a0ac0de4b02bd94d917e9c"}, {"problem": 42, "code": "(fn fact [n] (if (zero? n) 1 (* n (fact (- n 1)))))", "user": "5f22e8c9e4b0f565ad99828b"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5f2c02d1e4b033932238a65f"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5f1af439e4b0f565ad998257"}, {"problem": 42, "code": "(memoize (fn fac [n]\n           (if (zero? n) 1\n             (*' n (fac (dec n))))))", "user": "5f2d6787e4b033932238a66d"}, {"problem": 42, "code": "#(reduce * (take % (iterate inc 1)))", "user": "5f27cc7fe4b033932238a646"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5e8c3e8fe4b0cb0169546322"}, {"problem": 42, "code": "(fn factorial [n]\n  (if (== n 0)\n    1\n    (* n (factorial (dec n)))\n  ))", "user": "5bcc304ce4b07a9b28b1010c"}, {"problem": 42, "code": "(fn [n]\n   (loop [resu 1\n          in n]\n     (if (> in 1)\n       (recur (* in resu)\n             (- in 1))\n       resu)))", "user": "535f0cbde4b04ce2eb3ed2d9"}, {"problem": 42, "code": "(fn fact [n]\n  (reduce * (range 1 (inc n))))", "user": "5efdb9bae4b0cf489e8d7f02"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5f309144e4b0574c87022c23"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5f2c4c44e4b033932238a662"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5f25a2b1e4b0117231e5035e"}, {"problem": 42, "code": "(fn factorial\n  [n]\n  (if (= n 1)\n    1\n    (* n (factorial (dec n))))\n  )", "user": "5f29837ee4b033932238a64f"}, {"problem": 42, "code": "(fn factorial [n]\n   (reduce * (range 2 (inc n))))", "user": "5f300f28e4b033932238a682"}, {"problem": 42, "code": "#(apply * (map inc (range %1)))", "user": "5f331015e4b0574c87022c37"}, {"problem": 42, "code": "#(apply * (take % (iterate inc 1)))", "user": "5dc5982be4b02f9375f4e1c0"}, {"problem": 42, "code": "#(reduce * (take % (iterate inc 1)))", "user": "5f3388ade4b0574c87022c38"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "5f38eecce4b0574c87022c72"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5f3ab5ece4b004f08c61c52a"}, {"problem": 42, "code": "(fn [num] (reduce #'* 1 (range 1 (inc num))))", "user": "5f3f2281e4b004f08c61c561"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (inc x))))", "user": "5f1eebcee4b0f565ad998273"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5f3abcc4e4b004f08c61c52b"}, {"problem": 42, "code": "(fn [k]\n  (loop [k k res k]\n    (if (= k 1)\n      res\n      (recur (dec k) (* res (dec k))))))", "user": "5f2c94b4e4b033932238a669"}, {"problem": 42, "code": "(fn [x] (loop [iter 1 curr 1] (if (= iter x) curr (recur (inc iter) (* curr (inc iter))))))", "user": "5f3ddc71e4b004f08c61c551"}, {"problem": 42, "code": "#(loop [n % acc 1]\n   (if (= n 0) acc\n     (recur (- n 1) (* n acc))\n   ))", "user": "5f419985e4b0955706451fab"}, {"problem": 42, "code": "#(apply * (range 1 (inc %1)))", "user": "5f429fdfe4b0955706451faf"}, {"problem": 42, "code": "(fn [fact]\n(reduce * (take fact (iterate inc 1))))", "user": "5f3a8493e4b004f08c61c527"}, {"problem": 42, "code": "(fn factorial\n   ([n] (factorial n 1))\n   ([n acc] (if (>= 1 n) acc\n                (recur (dec n) (* acc n))))\n   )", "user": "58ffc6cfe4b0438e51c2d008"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "5f431d32e4b0955706451fb5"}, {"problem": 42, "code": "(fn [n]\n  ((fn [f n]\n    (if (= n 0)\n      f\n      (recur (* f n) (dec n))   \n      )\n    \n    ) 1 n)\n  \n  \n  \n )", "user": "5f468d26e4b0955706451fc1"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (+ x 1) )))", "user": "5f36dc06e4b0574c87022c4c"}, {"problem": 42, "code": "(fn fac ([n]\n  (fac n 1))\n  ([n acc]\n   (if (<= n 1)\n     acc\n     (recur (dec n) (* acc n)))))", "user": "5d92b543e4b0915913b1d414"}, {"problem": 42, "code": "(fn fact [x] \n  (if \n    (= 1 x) 1\n    (* x (fact (dec x)))))", "user": "5f49350ee4b0102c7503393f"}, {"problem": 42, "code": "(fn fac [x] (if (= x 1) x (* x (fac (dec x)))))", "user": "5f32f69ae4b0574c87022c35"}, {"problem": 42, "code": "(fn fak\n  [x]\n  (if (<= x 1)\n    1\n    (*' x (fak (dec x)))))", "user": "5f317ae4e4b0574c87022c2a"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "5f45211ae4b0955706451fbc"}, {"problem": 42, "code": "(fn [number]\n  (reduce * 1 (range number 0 -1)))", "user": "5f238a59e4b0f565ad99828d"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (range 1 (+ 1 n))))", "user": "5ee4b2e6e4b029a2061bbe90"}, {"problem": 42, "code": "#( ->> (range 1  (+ %1 1))\n        (reduce *))", "user": "5f0c3da4e4b0f30dddfb5d49"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5f4dbb81e4b0102c75033961"}, {"problem": 42, "code": "(fn [x] (letfn [(fac [n] (if (= n 0) 1 (* n (fac (- n 1)))))] (fac x)))", "user": "5f313d01e4b0574c87022c28"}, {"problem": 42, "code": "(fn [x] (loop [fac x res 1] \n           (if (>= 1 fac) \n             res \n             (recur (dec fac) (* res fac)))))", "user": "5f558a76e4b0a0bc16850a84"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5f56c0cae4b0a0bc16850a8c"}, {"problem": 42, "code": "(fn [n]\n  (loop [i 2 ans 1]\n    (if (> i n)\n      ans\n      (recur (inc i) (* ans i))\n    )))", "user": "5f574662e4b0a0bc16850a90"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5ec22851e4b00a66d4a9529a"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5a514e68e4b05d388ecb6be5"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5f5df0bfe4b02876ed9fcfeb"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %1)))", "user": "5dfb7f6de4b0a607a9a45cdc"}, {"problem": 42, "code": "(fn factorial\n  [n]\n  (reduce * 1 (range 1 (inc n))))", "user": "5f4eb036e4b0102c75033969"}, {"problem": 42, "code": "(fn [x]\n  (letfn[(f [x]\n            (if (>= 0 x)\n              1\n              (* x (f (dec x)))))]\n    (f x)))", "user": "5f5e7158e4b02876ed9fcff0"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "53275758e4b09d4e7a9b54fc"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5f5f9483e4b02876ed9fcff8"}, {"problem": 42, "code": "#(apply *(range 1 (inc %)))", "user": "5f5f2eafe4b02876ed9fcff5"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5f5b624de4b05ea7b9adc42f"}, {"problem": 42, "code": "(fn [v]\n  (loop [accum 1 i v]\n    (if (zero? i) accum (recur (* accum i) (dec i)))))", "user": "5ea6fe98e4b00a66d4a951b2"}, {"problem": 42, "code": "(fn [n] \n  (loop [c n a 1] \n    (if (zero? c) \n      a \n      (recur \n         (dec c) (* a c)\n      )\n    )\n  )\n)", "user": "5f631e11e4b02876ed9fd011"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5f58db95e4b0a0bc16850a9a"}, {"problem": 42, "code": "#(reduce * (take % (iterate dec %)))", "user": "5f0dfa48e4b0f30dddfb5d55"}, {"problem": 42, "code": "(fn [x]\n (reduce * (range 1 (inc x))))", "user": "5f63d933e4b02876ed9fd018"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5f60daafe4b02876ed9fcffe"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5f65bdfde4b02876ed9fd025"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "588fbb39e4b00487982d51bd"}, {"problem": 42, "code": "(fn factorial-final\n  [n]\n  (reduce * (range 1N (inc n))))", "user": "5f3103aee4b0574c87022c24"}, {"problem": 42, "code": "(fn fac\n   [x]\n\n   (   (fn fac0\n         [c r]\n         (if (= c 1)\n           r\n           (recur (dec c) (* c r)))\n         ) x 1)\n    )", "user": "5f693778e4b02876ed9fd03f"}, {"problem": 42, "code": "(fn fac [n] \n  (if (zero? n) \n    1 \n    (* (fac (dec n)) n)))", "user": "5f6796d2e4b02876ed9fd036"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "5eff6c0ee4b0cf489e8d7f11"}, {"problem": 42, "code": "(comp\n (partial apply *)\n (partial map inc)\n range)", "user": "5f663bc0e4b02876ed9fd02d"}, {"problem": 42, "code": "(fn factorial [num]\n  (if (= num 1)\n    (identity 1)\n    (* num (factorial (- num 1)))))", "user": "5ef28e95e4b07c55ae4a0535"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "5ef78fdae4b09b61f08553c4"}, {"problem": 42, "code": "(fn [n]\n  (loop [cnt n acc 1]\n    (if (zero? cnt)\n      acc\n      (recur (dec cnt) (* acc cnt)))))", "user": "545cfbb0e4b01be26fd74669"}, {"problem": 42, "code": "(fn [factorial]\n  (loop [current 1 sum 1]\n    (if (> current factorial)\n      sum\n      (recur (inc current) (* sum current)))))", "user": "5f6e5c58e4b02876ed9fd067"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "5f6b61ece4b02876ed9fd051"}, {"problem": 42, "code": "#(reduce * (map inc (range %)))", "user": "54fce8bde4b07d26eda61d30"}, {"problem": 42, "code": "(fn factorial\n    [n]\n    (if (zero? n)\n        1\n        (*' n (factorial (dec n)))))", "user": "5f724f55e4b02876ed9fd089"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5f72f144e4b02876ed9fd093"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5f6e576ae4b02876ed9fd066"}, {"problem": 42, "code": "(fn [arg] \n    (reduce (fn [acc val]\n             (println acc val)\n              (* acc val))\n            1  \n            (range 1 (inc arg))))", "user": "5f735c47e4b02876ed9fd098"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "54cb378be4b057c6fda3a273"}, {"problem": 42, "code": "(fn fac [n] (if (zero? n) 1 (* n (fac (dec n)))))", "user": "5f648ef1e4b02876ed9fd01b"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5f6a583ae4b02876ed9fd046"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "5ec0db8be4b00a66d4a9528d"}, {"problem": 42, "code": "#(apply * (take %(iterate dec %)))", "user": "5f686436e4b02876ed9fd03c"}, {"problem": 42, "code": "(fn [x] (loop [acc x end x] (if (<= end 1) acc (recur (* acc (- end 1)) (- end 1)))))", "user": "5f6cb2a5e4b02876ed9fd057"}, {"problem": 42, "code": "(fn [n]\n  (loop [cur n fact 1]\n    (if (= cur 1)\n      fact\n      (recur (dec cur) (* cur fact))\n    )\n  )\n)", "user": "5f6b8222e4b02876ed9fd052"}, {"problem": 42, "code": "(fn fac [n]\n  (if (= n 1)\n    1\n    (* n (fac (- n 1)))))", "user": "5f388489e4b0574c87022c69"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %1)))", "user": "5f6b5d83e4b02876ed9fd050"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5f727bd1e4b02876ed9fd08c"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5f737e16e4b02876ed9fd09a"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5f6caa19e4b02876ed9fd056"}, {"problem": 42, "code": "(fn\n  [n]\n  (reduce *' (range 1 (inc n))))", "user": "5f74de11e4b02876ed9fd0a5"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5f727dd6e4b02876ed9fd090"}, {"problem": 42, "code": "(fn [n] (apply * (take n (map inc (range)))))", "user": "5f79bff2e4b02876ed9fd0ca"}, {"problem": 42, "code": "#(reduce *(drop 1(range (+ 1 %))))", "user": "5f77b99fe4b02876ed9fd0bc"}, {"problem": 42, "code": "(fn factorial [n]\n  (reduce * (range 1 (inc n))))", "user": "5f7251b9e4b02876ed9fd08a"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (inc x))))", "user": "5f393bd6e4b0574c87022c76"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5f73000ce4b02876ed9fd094"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5f63cde9e4b02876ed9fd015"}, {"problem": 42, "code": "#(reduce *' (range 1 (inc %)))", "user": "5f77d470e4b02876ed9fd0be"}, {"problem": 42, "code": "(fn [n] \n        (loop [i n\n               ret 1]\n          (if (<= i 1) ret (recur (dec i) (* ret i)))))", "user": "5f82cfcce4b0c071e6c840fb"}, {"problem": 42, "code": "#(reduce *(map * (range 1 (inc %))))", "user": "5f737899e4b02876ed9fd099"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5f7e91c8e4b0c071e6c840d8"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "56b9c644e4b0f2655033593a"}, {"problem": 42, "code": "(fn[n] (loop [cnt n\n               res n]\n            (if (= cnt 1)\n                res\n                (recur (dec cnt) (* res (dec cnt))))))", "user": "5f727d2fe4b02876ed9fd08f"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5f84f0f5e4b0375e81f54e78"}, {"problem": 42, "code": "(fn [n]   (reduce * (range 1 (inc n))))", "user": "5f77890ae4b02876ed9fd0b9"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5f5358b7e4b0a0bc16850a77"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5f2ab452e4b033932238a656"}, {"problem": 42, "code": "(fn\n  [fac]\n  (reduce \n   *\n   (range 1 (inc fac))))", "user": "5f6e23e6e4b02876ed9fd064"}, {"problem": 42, "code": "#(apply *(range 1(inc %)))", "user": "5f727be9e4b02876ed9fd08d"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "5f837b30e4b01aacbe7a2714"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5f8497dce4b0375e81f54e74"}, {"problem": 42, "code": "(fn factorial[n]\n  (reduce * (range 1 (inc n))))", "user": "5f84f110e4b0375e81f54e79"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5f727cb0e4b02876ed9fd08e"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5f792d48e4b02876ed9fd0c5"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5f81de6ce4b0c071e6c840f5"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5f87e757e4b0169f6814c40f"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "5f86a98be4b0649ffcda4caa"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5c87217de4b0c8042a70cea1"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5f6dee74e4b02876ed9fd05f"}, {"problem": 42, "code": "#(loop [left %\n        curr 1]\n   (if (= left 1)\n     curr\n     (recur (dec left) (* curr left))))", "user": "5f3ce2c7e4b004f08c61c548"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5f8361bae4b01aacbe7a2712"}, {"problem": 42, "code": "(fn fac\n  [n]\n  (if (zero? n)\n    1\n    (*' n (fac (dec n)))))", "user": "5f8795d4e4b020286baa5e96"}, {"problem": 42, "code": "(fn [x] (if (= x 1) x (reduce * (take x (iterate inc 1)))))", "user": "5f875a0ae4b020286baa5e94"}, {"problem": 42, "code": "(fn [x]\n  (loop [factorial 1\n         n x]\n    (if (= n 1)\n      factorial\n      (recur (* factorial n) (dec n))\n      )\n    )\n  )", "user": "5f8330b8e4b01aacbe7a270f"}, {"problem": 42, "code": "(fn [n]\n  (loop [i 1\n         result 1]\n    (if (> i n)\n      result\n      (recur (inc i) (*' i result)))))", "user": "5f810e97e4b0c071e6c840ed"}, {"problem": 42, "code": "(fn [n]\n  (->> n\n       (+ 1)\n       (range)\n       (rest)\n       (apply *)))", "user": "5f597522e4b0a0bc16850a9e"}, {"problem": 42, "code": "#(loop [cur %\n        r 1]\n   (if (= cur 1) r (recur (dec cur) (* cur r))))", "user": "5f8b06afe4b0715f5002d74a"}, {"problem": 42, "code": "(fn fac [n]\n (cond\n   (= n 0) 1\n   (= n 1) 1\n   :else (* n (fac (- n 1)))))", "user": "5c8cfff8e4b048ec896c5996"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5f46d2f9e4b0955706451fc6"}, {"problem": 42, "code": "(fn fac [x] \n  (cond \n    (= x 0) 1\n    :else (* x (fac (dec x)))))", "user": "5f6c331ae4b02876ed9fd054"}, {"problem": 42, "code": "#(reduce * (take % (iterate dec %)))", "user": "5f816cc6e4b0c071e6c840f1"}, {"problem": 42, "code": "(fn [n]\n  (loop [a 1 i 2]\n    (if (> i n)\n      a\n      (recur (* a i) (+ 1 i)))))", "user": "504f6adfe4b0a02f9cffde81"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5f8e865fe4b0715f5002d76d"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "548f1604e4b0e286459a1230"}, {"problem": 42, "code": "#(apply * (take % (iterate inc 1)))", "user": "5f8fe45ae4b0715f5002d78d"}, {"problem": 42, "code": "(fn fact\n  ([n]\n   (fact (dec n) n))\n  ([n m]\n   (if (= n 0)\n     m\n     (recur (dec n) (* n m)))))", "user": "56a2777be4b0542e1f8d14bf"}, {"problem": 42, "code": "(fn fact [n] (reduce * (rest (range (+ n 1)))))", "user": "5f8d76c3e4b0715f5002d758"}, {"problem": 42, "code": "(fn\n  [n]\n  (reduce * 1 (range 1 (+ n 1))))", "user": "5e1c24f4e4b0dc959400852d"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5f92d736e4b0715f5002d7ba"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "5f93529ae4b0715f5002d7bc"}, {"problem": 42, "code": "#(apply * (take % (iterate inc 1)))", "user": "5c06fab7e4b0bdcf453d16bd"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5f838122e4b01aacbe7a2715"}, {"problem": 42, "code": "(fn fac [n]\n  (if (= n 0)\n    1\n    (* n (fac (dec n)))))", "user": "5eb3d02be4b00a66d4a95215"}, {"problem": 42, "code": "(fn factorial\n  ([n]\n   (factorial n 1))\n  ([n sum]\n   (if (< n 2)\n     sum\n     (factorial (dec n) (* n sum))))\n  )", "user": "5f9567cce4b0715f5002d7c7"}, {"problem": 42, "code": "(fn [x] (loop [res 1 x x] (if (= x 0) res (recur (* res x) (dec x)))))", "user": "5ee4545ee4b029a2061bbe8d"}, {"problem": 42, "code": "(fn fac [x]\n  (if (< x 2)\n    x\n    (* x (fac (dec x)))))", "user": "5dca511ce4b03836ba07d82f"}, {"problem": 42, "code": "(fn p42 [n]\n  (reduce * 1 (range 1 (+ n 1))))", "user": "5f968f4ee4b0715f5002d7d2"}, {"problem": 42, "code": "(fn [n] (reduce * (take n (iterate dec n))))", "user": "5f97eff1e4b0715f5002d7f9"}, {"problem": 42, "code": ";(\n#(apply * (range 1 (inc %)))\n ;3)", "user": "5f757c1ce4b02876ed9fd0aa"}, {"problem": 42, "code": "(fn [n] (loop [n n\n               acc 1]\n          (if (> n 0)\n            (recur (dec n) (* acc n))\n            acc)))", "user": "5f8e2a08e4b0715f5002d767"}, {"problem": 42, "code": "#(loop [cur % acc 1]\n  (case cur\n    1 acc\n    (recur (dec cur) (* acc cur)) ))", "user": "56eff7c1e4b04a395b9a0468"}, {"problem": 42, "code": "(fn fac [x] (if (= 1 x) 1 (* x (fac (dec x)))))", "user": "5fa17538e4b0f0ebd91b77e3"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "5fa5b72ee4b0fa27300f3dca"}, {"problem": 42, "code": "#(loop [r 1 c 1]\n    (if (= c %)\n      (* r c)\n      (recur (* r c) (inc c))))", "user": "5f9c4113e4b0715f5002d821"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "5fa358a1e4b0f0ebd91b77fd"}, {"problem": 42, "code": "(fn [n] (apply * (range 1 (inc n))))", "user": "5fa74b82e4b0fa27300f3dda"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5f974321e4b0715f5002d7f3"}, {"problem": 42, "code": "(fn fac [n]\n  (if (= n 1)\n    1\n    (* n (fac (dec n)))))", "user": "5fa8424ce4b0fa27300f3de5"}, {"problem": 42, "code": "(memoize (fn factorial \n  ([x] (factorial x 1))\n  ([x y] (if (= x 1) y (recur (dec x) (* x y))))))", "user": "5fa5a6b1e4b0fa27300f3dc8"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "5f3567d6e4b0574c87022c44"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "5fad051ce4b08cb800c85aeb"}, {"problem": 42, "code": "(fn [n]\n  (loop [cnt n acc 1]\n    (if (zero? cnt) \n      acc\n      (recur (dec cnt) (*  acc cnt)))))", "user": "5facfb48e4b08cb800c85aea"}, {"problem": 42, "code": "(fn [n]\n  (loop [cnt n acc 1]\n    (if (zero? cnt)\n      acc\n      (recur (dec cnt) (* acc cnt)))))", "user": "5face7fce4b08cb800c85ae9"}, {"problem": 42, "code": "(fn [n] \n  (->> (iterate inc 1)\n       (take n)\n       (apply *)))", "user": "573a0ecce4b0cd1946bd1088"}, {"problem": 42, "code": "(fn [i] (loop [x 1 res 1]\n             (if (> x i)\n               res\n               (recur (inc x) (* res x)))))", "user": "5f6b35c3e4b02876ed9fd04d"}, {"problem": 42, "code": "(fn factorial [n]\n   (if (= n 1)\n     n\n     (* n (factorial (dec n)))))", "user": "5fa80c01e4b0fa27300f3de2"}, {"problem": 42, "code": "#(loop [a %\n       c 1]\n  (if (zero? a)\n    c\n    (recur (dec a) (* c a))))", "user": "5fa2735de4b0f0ebd91b77ee"}, {"problem": 42, "code": "(fn ! [x] (if (zero? x) 1 (* x (! (dec x)))))", "user": "5fa96ddbe4b0fa27300f3dec"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5fae3d8ae4b08cb800c85afa"}, {"problem": 42, "code": "(fn [n]\n   (let [a 1]\n     ((fn fact [a acc n]\n        (println a acc n)\n        (cond (= n 0) acc\n              :else (fact (inc a) (* a acc) (- n 1)))) a 1 n)))", "user": "5fb544f6e4b08cb800c85b4e"}, {"problem": 42, "code": "#(loop \n   [n % i 1 r 1]\n   (if (> i n)\n     r\n     (recur n (inc i) (* r i))))", "user": "5fb3a096e4b08cb800c85b35"}, {"problem": 42, "code": "(fn [x]\n  (loop [cnt x acc 1]\n    (if (zero? cnt)\n      acc\n      (recur (dec cnt) (* acc cnt)))))", "user": "5fa2b45ce4b0f0ebd91b77f5"}, {"problem": 42, "code": "(fn fac [n] (if (= n 0) 1 (* n (fac (dec n)))))", "user": "5fab7ea6e4b08cb800c85ad8"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5fafa44ee4b08cb800c85b0e"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (range 1 (+ n 1))))", "user": "5fb453d3e4b08cb800c85b44"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (+ x 1))))", "user": "5fbe40bce4b03f550f448246"}, {"problem": 42, "code": "#(apply * (drop 1 (range (inc %))))", "user": "5fb2eac0e4b08cb800c85b2f"}, {"problem": 42, "code": "(fn [x] (apply * (range 1 (inc x))))", "user": "5fab003de4b08cb800c85ad1"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5fc241c1e4b0edf42a5593d1"}, {"problem": 42, "code": "(fn [x]\n  (loop [z 1 res 1]\n    (if (> z x)\n      res (recur\n           (+ z 1)\n           (* z res)))))", "user": "5fac50f4e4b08cb800c85ae5"}, {"problem": 42, "code": "#(apply * (take % (iterate (partial + 1) 1)))", "user": "5fc4d277e4b06ffabd1ef72a"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5fc04417e4b0edf42a5593c6"}, {"problem": 42, "code": "#(->> (inc %) (range 1) (apply *))", "user": "5faa75c1e4b0fa27300f3dfa"}, {"problem": 42, "code": "(fn [x] (reduce #(* %1 %2) (range 1 (inc x))))", "user": "5fc51d88e4b0ad564c76812a"}, {"problem": 42, "code": "(fn fact [x]\n  (if (= x 1)\n    1\n    (* x (fact (- x 1)))))", "user": "5f3adcf4e4b004f08c61c531"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "5df175bce4b03c219ef1a34d"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5fc5c303e4b02c825b0c8c1a"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5ee66158e4b029a2061bbe98"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "5f969090e4b0715f5002d7d5"}, {"problem": 42, "code": "(fn f [n]\n  (if (< n 2) n (* n (f (dec n)))))", "user": "5f90aeefe4b0715f5002d799"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (+ n 1))))", "user": "5b2d1c1de4b025bcb146f2c0"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5edd05bfe4b0c7845d86b0f3"}, {"problem": 42, "code": "(fn [n]\n  (loop [cnt n acc 1]\n    (if (zero? cnt)\n      acc\n      (recur (dec cnt) (* acc cnt)))))", "user": "5f96fbc7e4b0715f5002d7ec"}, {"problem": 42, "code": "(fn fact [x]\n  (if (> x 0)\n    (* x (fact (dec x)))\n       1\n    )\n  )", "user": "5f96fa49e4b0715f5002d7e9"}, {"problem": 42, "code": "(fn [x]\n    (loop [n x f 1]\n        (if (= n 1)\n            f\n            (recur (dec n) (* f n)))))", "user": "54d7e277e4b0a52adc2e2031"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "5fba5692e4b03f550f448230"}, {"problem": 42, "code": "(fn factorial [n] \n  (reduce * (range 1 (+ n 1)))\n )", "user": "5fd8bcb3e4b05ac5b16ea11b"}, {"problem": 42, "code": "#(reduce * (take % (iterate dec %)))", "user": "58c69d88e4b021aa9917ed5e"}, {"problem": 42, "code": "(fn [n] \n    (reduce * (range 1 (inc n))))", "user": "5ef4fca7e4b07c55ae4a0546"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5e860270e4b09a7a73c8bbdb"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5fb8fe30e4b03f550f448223"}, {"problem": 42, "code": "#(loop [cnt %1 prod 1]\n    (if (= cnt 1)\n      prod\n      (recur (dec cnt) (* prod cnt) )\n      )\n    )", "user": "5fd361f2e4b07e53c2f3f04e"}, {"problem": 42, "code": "#(nth (reductions * 1 (rest (range))) %)", "user": "5fbb010ae4b03f550f448233"}, {"problem": 42, "code": "#(apply * (range 2 (+ 1 %)))", "user": "5fdd15f7e4b05ac5b16ea141"}, {"problem": 42, "code": "(fn fact [n] (if (= 1 n) 1 (* n (fact (- n 1)))))", "user": "59d4d126e4b0ef0a1e9b5be9"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5fc9d967e4b0689391cc77ce"}, {"problem": 42, "code": "(fn fac\n  [n]\n  (case n\n    0 1\n    1 1\n    (* n (fac (dec n)))))", "user": "5fe5a64de4b05ac5b16ea187"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "5fe0d4d4e4b05ac5b16ea164"}, {"problem": 42, "code": "(fn [n] (loop [i (dec n)\n               result n]\n          (if (<= i 1)\n          result\n          (recur (dec i) (* result i)))))", "user": "5fe25678e4b05ac5b16ea175"}, {"problem": 42, "code": "(fn factorial [n]\n  (if (= n 1) 1\n    (loop [value n i n]\n      (if (<= i 1) value\n       (recur (* value (dec i)) (dec i)))\n     )))", "user": "5fe09d1fe4b05ac5b16ea15b"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5fd2e391e4b07e53c2f3f049"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5fea32f3e4b05ac5b16ea1aa"}, {"problem": 42, "code": "#(reduce (fn [acc item] (* acc item)) (range 1 (+ %1 1)))", "user": "5fdbde92e4b05ac5b16ea137"}, {"problem": 42, "code": "; My solution\n#(nth\n (map second (iterate (fn [[idx res]] \n                       [(inc idx) (* res (inc idx))]) [0 1]))\n %)\n\n\n; A better solution\n; #(reduce * (range 1 (inc %)))", "user": "5f3ee0d9e4b004f08c61c55c"}, {"problem": 42, "code": "(fn [n]\n        (reduce * (range 1 (inc n))))", "user": "546c4377e4b00cfc9eacc177"}, {"problem": 42, "code": "(fn fact [x]\n  (loop [x x\n         acc 1]\n    (if (= x 0)\n      acc\n      (recur (dec x) (* acc x)))))", "user": "5fe1b893e4b05ac5b16ea16f"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "54aec375e4b09f271ff37cf9"}, {"problem": 42, "code": "(fn [n]\n  (apply * (range 1 (inc n) ))\n  )", "user": "5fee18f2e4b05ac5b16ea1d2"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5fef4292e4b05ac5b16ea1d7"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5fe876ade4b05ac5b16ea195"}, {"problem": 42, "code": "(fn\n  [n]\n  (reduce * 1 (range n 1 -1)))", "user": "5fe9169ce4b05ac5b16ea1a0"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5fe362d9e4b05ac5b16ea179"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5ff3aca3e4b05ac5b16ea205"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5ff454a1e4b05ac5b16ea20d"}, {"problem": 42, "code": "(fn [factorial] \n  (loop [f factorial s 1 m 1]\n    (if (> s f)\n      m\n      (recur f (inc s) (* m s)))))", "user": "5fe75ecfe4b05ac5b16ea18d"}, {"problem": 42, "code": "(fn [x]\n  (reduce * (range 1 (inc x))))", "user": "5ff32e20e4b05ac5b16ea1ff"}, {"problem": 42, "code": "#(->> (iterate inc 1)\n        (take %)\n        (apply *))\n\n;; #(reduce * (take % (iterate inc 1)))\n\n;; #(reduce * (range % 0 -1))\n\n;; (fn [n]\n;;    (let [get-rst (fn [nn rst]\n;;                    (if (= nn 0)\n;;                      rst\n;;                      (recur (dec nn) (* rst nn))))]\n;;      (get-rst n 1)))\n\n;; (fn [n]\n;;     (loop [n n\n;;            acc 1]\n;;       (if (= 1 n)\n;;         acc\n;;         (recur (dec n) (* n acc)))))\n\n;; (comp (partial apply *)\n;;         (partial range 1)\n;;         inc)", "user": "591ad160e4b09b4ee5954bdf"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5f9690d4e4b0715f5002d7de"}, {"problem": 42, "code": "(fn [z] (loop [x z factorial 1]\n  (if (= x 0)\n    factorial\n    (recur (dec x) (* factorial x)))))", "user": "5d517784e4b0776584bd6f60"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5fd10010e4b07e53c2f3f02a"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "5ff8c2eae4b06df49cee14a9"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5ff93da9e4b06df49cee14af"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5fcd15d6e4b07e53c2f3eff7"}, {"problem": 42, "code": "(fn [n]\n  \t(loop [i (dec n) cur n]\n      (if (= i 0)\n        (* cur 1)\n        (recur (dec i) (* cur i)))\n      )\n  )", "user": "5ff676a9e4b06df49cee1497"}, {"problem": 42, "code": "(fn [n]\n  (loop [currN n\n         res 1]\n    (if (= 1 currN)\n      res\n      (recur (dec currN) (* res currN))\n      )\n    )\n  )", "user": "5fce0cc5e4b07e53c2f3f000"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5f9690e1e4b0715f5002d7df"}, {"problem": 42, "code": "(fn fact [n]\n    (if (<= n 1)\n      1\n      (* n (fact (dec n)))))", "user": "5ff8ead1e4b06df49cee14ab"}, {"problem": 42, "code": "(fn factorial\n  [n]\n  (loop [res 1\n         count n]\n    (if (= count 0) res\n        (recur (* res count) (- count 1)))))", "user": "5f5e166ce4b02876ed9fcfed"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (+ n 1))))", "user": "5ff88607e4b06df49cee14a6"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (+ 1 %)))", "user": "5fd12b42e4b07e53c2f3f02f"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5fd66e61e4b05ac5b16ea10a"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "529e3258e4b04e0c58e87b8d"}, {"problem": 42, "code": "(fn [x]\n  (reduce * (range 1 (inc x))))", "user": "5ffc18cae4b074f607df65f1"}, {"problem": 42, "code": "#(apply *(range 1 (inc %)))", "user": "5ff709e4e4b06df49cee149b"}, {"problem": 42, "code": "(fn [n]\n  (loop [current n\n         nextv (dec n)\n         total 1]\n    (if (> current 1)\n      (recur nextv (dec nextv) (* total current))\n      total)))", "user": "5fada7cce4b08cb800c85af5"}, {"problem": 42, "code": "(fn [n] (reduce #(* %1 %2) (take n (iterate inc 1))) )", "user": "5fec4f5ee4b05ac5b16ea1bf"}, {"problem": 42, "code": "(fn [n]\n  (loop [i n\n         res 1]\n    (if (> i 0)\n      (recur (dec i) (* res i))\n      res)))", "user": "5ff61113e4b06df49cee1492"}, {"problem": 42, "code": "(fn factorial [n]\n  (reduce * (range 1  (inc n) )))", "user": "5ffd7ce6e4b074f607df65fb"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "6001c90ce4b074f607df6626"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "6004c750e4b074f607df6645"}, {"problem": 42, "code": "(fn [n]\n  (loop [start n acc 1]\n    (if (> start 0)\n      (recur (dec start) (* acc start))\n      acc)))", "user": "5e42602ae4b01d43a70e8e63"}, {"problem": 42, "code": "(fn[x](reduce *(take x (iterate inc 1))))", "user": "6001460ce4b074f607df6611"}, {"problem": 42, "code": "(fn [x]\n   (apply * (range x 0 -1)))", "user": "5ffd3422e4b074f607df65f7"}, {"problem": 42, "code": "#(apply * (range 1 (inc %1)))", "user": "5ffe2d18e4b074f607df65ff"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "60057cd4e4b074f607df664a"}, {"problem": 42, "code": "(fn [n] (reduce * (range 2 (+ n 1))))", "user": "5fbf6fe7e4b0ad6fc3476147"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5f37263de4b0574c87022c4e"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5feb6850e4b05ac5b16ea1b8"}, {"problem": 42, "code": "(fn foo [n]\n  (if (= n 0)\n    1\n    (* n (foo (- n 1)))))", "user": "600ae927e4b074f607df6689"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "600c1c72e4b074f607df6692"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "600cb742e4b074f607df6696"}, {"problem": 42, "code": "(fn [n]\n  (reduce #(* % %2)\n          (range 1 (inc n))))", "user": "583369e6e4b089d5ab817c9c"}, {"problem": 42, "code": "(fn fact [n]\n  (if (zero? n)\n    1\n    (* n (fact (dec n))))\n\n  )", "user": "5fa6db67e4b0fa27300f3dd2"}, {"problem": 42, "code": "#(apply * (take % (iterate inc 1)))", "user": "6011b89ee4b074f607df66bc"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5ff70cfde4b06df49cee149c"}, {"problem": 42, "code": "(fn factorial [x]\n  (if (= x 0) 1 (* x (factorial (- x 1)))))", "user": "60169539e4b012aee256ca0b"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5d62ce13e4b0c9e5857d501f"}, {"problem": 42, "code": "(fn fib [n]\n   (if (<= n 1) 1\n                (* n (fib (dec n)))))", "user": "57e10705e4b0bfb2137f5a6a"}, {"problem": 42, "code": "#(loop [n %\n        result 1]\n   (if (zero? n)\n     result\n     (recur (dec n) (* result n))))", "user": "60096aabe4b074f607df667f"}, {"problem": 42, "code": "(fn fact [n]\n  (apply * (range 1 (inc n))))", "user": "601aaa93e4b0bf4ca6b10926"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5a9f2c53e4b0d174b936c812"}, {"problem": 42, "code": "#(reduce * (map inc (range %)))", "user": "58db48a5e4b0a4d5acaab679"}, {"problem": 42, "code": "(fn factorial [x]\n  (reduce * (range 1,(+ x 1))))", "user": "60194b7ae4b0bf4ca6b1091f"}, {"problem": 42, "code": "(fn [n]\n  (let [new-n (inc n)]\n    (apply * (range 1 new-n))))", "user": "558ffb4be4b0277789237667"}, {"problem": 42, "code": "(fn f [n]\n  (if (<= n 1)\n    1\n    (* n (f (- n 1)))))", "user": "601004d6e4b074f607df66b2"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5fa28e2be4b0f0ebd91b77f0"}, {"problem": 42, "code": ";;(fn fact [x]\n ;; (if (= 1 x)\n ;;   1\n \n ;;   (* (fact x) (fact (- x 1)))))\n \n ;;(fn fun [n]\n  ;; (first (drop (dec n) (\n  ;;    (fn fac [p acc]\n  ;;       (concat [acc] (lazy-seq (fac (inc p) (* (inc p) acc)))))\n  ;;              1 1 ))))\n  \n  ;; range incorporates a lazy-seq within\n  (fn fun [n]\n    (reduce * (range 1 (inc n))))", "user": "5fb68f09e4b08cb800c85b58"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "4e38f245535deb9a81d77f3e"}, {"problem": 42, "code": "(fn[x](reduce * (range 1 (inc x))))", "user": "60195030e4b0bf4ca6b10920"}, {"problem": 42, "code": "(fn fat [n]\n  (if (= n 1) \n    1\n    (* (fat (dec n)) n)))", "user": "5e64f44de4b0fd0acd1586ae"}, {"problem": 42, "code": "(fn fact [n]\n  (cond\n   (= n 1) 1\n   :else\n   (* n (fact (- n 1)))))", "user": "602049b8e4b0bf4ca6b10961"}, {"problem": 42, "code": "(fn fact\n  [n]\n  (reduce * (drop 1 (range (inc n)))))", "user": "601c39eee4b0bf4ca6b10937"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "601bdcb3e4b0bf4ca6b10930"}, {"problem": 42, "code": "(fn [n]\n  (loop [cnt n acc 1]\n    (if (zero? cnt)\n      acc\n      (recur (dec cnt) (* acc cnt)))))", "user": "6022844de4b0d5df2af22203"}, {"problem": 42, "code": "(fn fa [n] \n    (cond (= n 1) 1\n             :else (* n (fa (dec n)))))", "user": "60228147e4b0d5df2af22202"}, {"problem": 42, "code": "(fn [nm]\n  (loop [n nm result 1]\n    (if (= n 0) result\n      (recur (dec n) (* result n)))))", "user": "60264d89e4b0d5df2af2222d"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (+ n 1))))", "user": "6024544be4b0d5df2af2221f"}, {"problem": 42, "code": "(fn fact\n  ([x] (fact x 1))\n  ([x acc]\n   (if (> x 1)\n     (recur (dec x) (* x acc))\n     acc)))", "user": "593c9583e4b069cdc2982b94"}, {"problem": 42, "code": "(fn [n]\n    (loop [n n, acc 1]\n      (if (= n 1) acc\n          (recur (dec n) (* acc n)))))", "user": "6026d2cae4b0d5df2af22232"}, {"problem": 42, "code": "#(loop [n %\n        acc 1]\n   (if (= n 1)\n     acc\n     (recur (dec n) (* acc n))))", "user": "6026737ee4b0d5df2af2222f"}, {"problem": 42, "code": "(fn [n]\n   (loop [n n fac 1]\n     (if (= n 0)\n       fac\n       (recur (dec n) (* fac n)))))", "user": "602b90c1e4b0d5df2af22266"}, {"problem": 42, "code": "(fn [x] (if (= 1 x) 1 (apply * (range 1 (inc x)))))", "user": "602372aae4b0d5df2af2220f"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (+ % 1)))", "user": "60231327e4b0d5df2af2220b"}, {"problem": 42, "code": "(fn doon [n]\n  (loop [ans 1 n n]\n    (if (= n 1) ans (recur (* n ans) (- n 1))))\n  )", "user": "5fdb8657e4b05ac5b16ea133"}, {"problem": 42, "code": "#(apply * (take-while (complement zero?) (iterate dec %)))", "user": "602d5eade4b0d5df2af22279"}, {"problem": 42, "code": "(fn f [n]\n    (if (< n 1)\n      1\n      (* n (f (dec n)))))", "user": "5ff64845e4b06df49cee1495"}, {"problem": 42, "code": "#(reduce * (take % (iterate dec %)))", "user": "5a778224e4b013a48d399761"}, {"problem": 42, "code": "#(reduce * (take (dec %) (iterate dec %)))", "user": "602abb59e4b0d5df2af2225e"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5baba1ece4b0a20761a23482"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "600eb95de4b074f607df66a6"}, {"problem": 42, "code": "(fn f [x]\n  (if (= x 1)\n    1\n    (* x (f (dec x)))))", "user": "5ed61537e4b016b56eae05dc"}, {"problem": 42, "code": "#(reduce * % (range 1 %))", "user": "602f8400e4b0d5df2af22299"}, {"problem": 42, "code": "(fn [n] (reduce * (take n (iterate dec n))))", "user": "60329afce4b0d5df2af222b8"}, {"problem": 42, "code": "(fn fact [n]\n  (if (< n 2)\n    1\n    (* n (fact (dec n)))))", "user": "6023a3abe4b0d5df2af22212"}, {"problem": 42, "code": "#(reduce * (take % (iterate dec %)))", "user": "6032f7f9e4b0d5df2af222b9"}, {"problem": 42, "code": "(fn fact [n]\n  (if (= n 1)\n    1\n    (* n (fact (dec n)))\n  )\n)", "user": "60335b35e4b0d5df2af222bf"}, {"problem": 42, "code": "(fn [n] (reduce * 1 (map inc (range n))))", "user": "6031926ae4b0d5df2af222ac"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "6022429be4b0d5df2af22200"}, {"problem": 42, "code": "(fn foo [x]\n        (loop [ cur 1  mul 1]\n          (if (< cur x)\n            (recur (inc cur) (* cur mul))\n            (* mul cur)\n            )\n            ))", "user": "6038b6b4e4b0d5df2af222ef"}, {"problem": 42, "code": "(fn\n  [num]\n  (loop [curr-num num prod 1]\n    (if (= curr-num 0)\n      prod\n      (recur (dec curr-num) (* prod curr-num))\n      )\n    )\n  )", "user": "60337f1fe4b0d5df2af222c1"}, {"problem": 42, "code": "(fn factorial\n  [n]\n  (reduce (fn [x y]\n              (+ x (* x y)))\n          1\n          (range 1 n))\n)", "user": "602f56c5e4b0d5df2af22297"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "602cc4d4e4b0d5df2af22274"}, {"problem": 42, "code": "(fn [n]\n  (loop [x n\n         product 1]\n    (if (> x 0)\n      (recur (dec x) (* x product))\n      product)\n    ))", "user": "603d5f2ae4b0d5df2af2230c"}, {"problem": 42, "code": "(fn [x]\n  (loop [n x i 1N]\n    (if (= n 0)\n      i\n      (recur (dec n) (* i n)))))", "user": "603a6c40e4b0d5df2af222f7"}, {"problem": 42, "code": "(fn fatorial [numero] ( if (= 1 numero) 1 (* numero (fatorial (- numero 1))) ))", "user": "602bca69e4b0d5df2af22267"}, {"problem": 42, "code": ";; (fn [number]\n;;   (loop [current-number number\n;;          total            1]\n;;     (if (>= 1 current-number)\n;;       total\n;;       (recur\n;;        (dec current-number)\n;;        (* total current-number)))))\n\n#(reduce * (range 1 (inc %)))", "user": "603e9cb6e4b0d5df2af22317"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "603e063ae4b0d5df2af2230f"}, {"problem": 42, "code": "(fn fact [n] (if (< n 2) 1 (* n (fact (dec n)))))", "user": "6042219ae4b04b4f332c3e72"}, {"problem": 42, "code": "(fn [n] (reduce * (take n (iterate dec n))))", "user": "5cc6b681e4b0ccb061962828"}, {"problem": 42, "code": "(fn fact [n]\n  (condp = n \n    1 1\n    (* n (fact (dec n)))\n    )\n  )", "user": "60436423e4b02d28681c77a3"}, {"problem": 42, "code": "(fn factorial [n] (apply * (range 1 (inc n))))", "user": "5fb46916e4b08cb800c85b46"}, {"problem": 42, "code": "(fn foo [x] (if (= x 1) x (* x (foo (dec x )))))", "user": "6034e358e4b0d5df2af222d1"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "user": "60460824e4b02d28681c77bc"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "6040f595e4b0d5df2af2232f"}, {"problem": 42, "code": "(fn [x]\n  (->>\n     x\n     inc\n     (range 1)\n     (reduce *)))", "user": "6045582fe4b02d28681c77b6"}, {"problem": 42, "code": "(fn factorial [a]\n    (if (= a 1) 1 (* a (factorial (dec a)))))", "user": "603ae21de4b0d5df2af222fb"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %1)))", "user": "6046a0c7e4b02d28681c77c6"}, {"problem": 42, "code": "(fn fac [n] \n  ((fn iter [i res] \n     (if (<= i n) (iter (inc i) (* res i)) res)\n     ) 1 1)\n  )", "user": "60471241e4b02d28681c77c9"}, {"problem": 42, "code": "#(loop [x 1 i %]\n    (if (< i 2) x\n      (recur (* x i) (dec i))))", "user": "60486e8ae4b02d28681c77db"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "60420ee4e4b04b4f332c3e71"}, {"problem": 42, "code": "(fn factorial-fun\n  [x]\n  (reduce #(* %1 %2) 1 (range 1 (+ x 1))))", "user": "60396c95e4b0d5df2af222f4"}, {"problem": 42, "code": "#(loop [result 1\n        n %]\n   (if (zero? n) result\n                 (recur (* result n) (dec n))))", "user": "602aa5f1e4b0d5df2af2225d"}, {"problem": 42, "code": "(fn [x] (reduce #(* % %2) 1 (range 1 (+ 1 x))))", "user": "604d3cb1e4b0b7ec0ac60ac2"}, {"problem": 42, "code": "(fn func [x] (if (< x 2) x (* (func(dec x)) x) ))", "user": "604f4be1e4b0b7ec0ac60ace"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "user": "4e586949535d8a8b8723a292"}, {"problem": 42, "code": "(fn [value1]\n   (apply *  (range 1 (inc value1))))", "user": "60504383e4b056659d6341fa"}, {"problem": 42, "code": "(fn fac\n  ([num] (fac num 1))\n  ([num res]\n   (if (< num 2)\n     res\n     (recur (dec num) (* res num)))))", "user": "6020365ae4b0bf4ca6b10960"}, {"problem": 42, "code": "(fn f\n   ([n] (f n 1))\n   ([n p] (if (> n 1)\n            (recur (dec n) (* p n))\n            p)))", "user": "60537cd1e4b04c8f2157d152"}, {"problem": 42, "code": "#(if (or (= % 0))\n   1\n   (reduce * (range 1 (+ % 1))))", "user": "60511ccfe4b056659d6341ff"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "6040e6dbe4b0d5df2af2232a"}, {"problem": 42, "code": "(fn\n  [x]\n  (apply * (take x (iterate inc 1))))", "user": "600d9808e4b074f607df669c"}, {"problem": 42, "code": "(fn [x] (reduce * 1 (range 1 (inc x))))", "user": "603f6623e4b0d5df2af2231f"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "526759b3e4b03e8d9a4a715b"}, {"problem": 42, "code": "(fn fact [n]\n  (if (= n 1) 1 (* n (fact (dec n)))))", "user": "6058e0a0e4b032d51aa7730d"}, {"problem": 42, "code": "(fn [number] (reduce (fn [result n] 1 (* result n))(range 1 (inc number))))", "user": "5e7fb908e4b085ba37836e3f"}, {"problem": 42, "code": "(fn foo [x]    \n\t(if(> x 0)\n\t(* x (foo (dec x)))\n\t1\n))", "user": "604e0764e4b0b7ec0ac60ac7"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "5b522591e4b02d533a91bd09"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "605b7a90e4b079a07f8593fc"}, {"problem": 42, "code": "#(reduce * (lazy-seq (range 1 (+ 1 %))))", "user": "6059d9c8e4b07e92fa001ad0"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "6059d2e0e4b07e92fa001ace"}, {"problem": 42, "code": "(fn\n  [n]\n  (reduce * (range 1 (inc n))))", "user": "5ec02e20e4b00a66d4a95288"}, {"problem": 42, "code": "(fn [n] (last (take n (map first (iterate (fn [[a b]] [(* a b) (inc b)]) [1 2])))))", "user": "60521ea8e4b056659d634205"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "6059d824e4b07e92fa001acf"}, {"problem": 42, "code": "(fn factorial [n]\n  (if (not= n 0)\n    (* (factorial (dec n)) n) 1))", "user": "5eb7b41ee4b00a66d4a9523c"}, {"problem": 42, "code": "(fn f [x] (if (< x 2) 1 (* x (f (dec x)))))", "user": "60538924e4b04c8f2157d153"}, {"problem": 42, "code": "(fn [x0]\n  (loop [res 1 x x0]\n    (if (<= x 0) res\n      (recur (* res x) (dec x)))))", "user": "60606490e4b03746e80ebf67"}, {"problem": 42, "code": "(fn fac [n] (if (= n 1) 1 (* n (fac (dec n)))))", "user": "605b7085e4b079a07f8593fa"}, {"problem": 42, "code": "#(apply * (range 1 (+ %1 1)))", "user": "60622c6ee4b03746e80ebf72"}, {"problem": 42, "code": "#(loop [x % acc 1]\n   (if (= 1 x)\n     acc\n     (recur (dec x) (* acc x))))", "user": "5f665d45e4b02876ed9fd02f"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "6065755ee4b069485764ddcc"}, {"problem": 42, "code": "(fn  [n]\n  (let [myfact5 (fn [f n]\n                  (if (= n 1)\n                    1\n                    (* n\n                       (f f\n                          (dec n)))))]\n    (myfact5 myfact5 n)))", "user": "5ff82adae4b06df49cee14a4"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "60654263e4b069485764ddc9"}, {"problem": 42, "code": "(fn fact [n] ( reduce * 1 ( range 1 (+ n 1) ) ) )", "user": "600b385ce4b074f607df668d"}, {"problem": 42, "code": "(fn factorial\n  [n]\n  (if (= n 0)\n    1\n    (* n (factorial (- n 1)))))", "user": "6066266de4b069485764ddd2"}, {"problem": 42, "code": "(fn  [n]\n  (loop [a 1\n         b 1]\n    (if (> b n)\n      a\n      (recur (* a b) (inc b)))))", "user": "60593916e4b07e92fa001acc"}, {"problem": 42, "code": "(fn factorial\n  ([number] (factorial 1 number))\n  ([result number]\n   (if (<= number 0)\n     result\n     (recur (* result number) (dec number)))))", "user": "60522feae4b0af2ba86d5a0a"}, {"problem": 42, "code": "(fn factrl [x]\n  (loop [result 1, n x]\n    (if (= n 1)\n      result\n      (recur (* result n) (- n 1))\n      )\n    )\n  )", "user": "5f6adf5ee4b02876ed9fd049"}, {"problem": 42, "code": "(fn [i]\n  (loop [v 1\n         c 1]\n    (if (> c i)\n      v\n      (recur (* v c) (+ c 1)))))", "user": "606aafcfe4b069485764ddf6"}, {"problem": 42, "code": "(fn factorial-using-reduce [n]\n  (reduce * (range 1 (inc n))))", "user": "605a876be4b000d535e6f53c"}, {"problem": 42, "code": "(fn\n   [n]\n   (loop [n n\n          result 1]\n     (if (<= n 1)\n       result\n       (recur (dec n) (* n result)))))", "user": "60631c2ee4b069485764ddbd"}, {"problem": 42, "code": "#(reduce (fn [a x] (* a x)) (take % (iterate inc 1)))", "user": "606a70a5e4b069485764ddf2"}, {"problem": 42, "code": "#(apply * (map inc (range %)))", "user": "60689984e4b069485764dde6"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "5f548678e4b0a0bc16850a7e"}, {"problem": 42, "code": "#(reduce * (map inc (range %)))", "user": "606b16b8e4b069485764ddf7"}, {"problem": 42, "code": "(fn [num] (apply * (take num (iterate inc 1))))", "user": "606c87aae4b069485764de0d"}, {"problem": 42, "code": "(fn foo \r\n  ([x] (foo x 1))\r\n  ([x n] (if (zero? x) n (recur (dec x) (* n x)))))", "user": "606e0a42e4b069485764de19"}, {"problem": 42, "code": "#(apply * (map inc (range %)))", "user": "5eedfc62e4b07c55ae4a050e"}, {"problem": 42, "code": "(fn [n] \n   (loop [num n result 1]\n     (if (= num 0)\n       result\n       (recur (dec num) (* result num)))))", "user": "606d75f5e4b069485764de13"}, {"problem": 42, "code": "(fn\n  [x]\n  (loop\n    [i 1 r 1]\n    (if (= i x)\n      r\n      (recur (inc i) (* (inc i) r))\n      )\n    ) \n  )", "user": "6074f5ede4b069485764de52"}, {"problem": 42, "code": "#(loop [m % fact 1]\n   (cond (= m 1) fact\n         :else (recur (dec m) (* fact m))))", "user": "606da089e4b069485764de15"}, {"problem": 42, "code": "#(reduce * (take (- % 1) (iterate dec %)))", "user": "6074e088e4b069485764de4d"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "6074df6fe4b069485764de4b"}, {"problem": 42, "code": "#(reduce (fn [a b] (* a b)) (range 1 (inc %)))", "user": "6059f25de4b07e92fa001ad1"}, {"problem": 42, "code": ";;; Factorial es: 3! = 3*2*1 = 6\n;;; vamos a leer el numero y multiplicar cada que lo reducimos\n(fn fac [x] (loop [n x]   ;;; no tengo idea si me puedo ahorrar esta paso\n              (if (= n 1)\n                1\n                (* n (fac (- n 1))))))", "user": "6075c214e4b069485764de5b"}, {"problem": 42, "code": "(fn fct [n] (reduce * (range 1 (inc n))))", "user": "605f5c69e4b03746e80ebf5e"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "605b49b7e4b079a07f8593f8"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "60764350e4b069485764de5e"}, {"problem": 42, "code": "(fn [n] ((fn iter [state count] (if (< n count) state (iter (* state count) (inc count)))) 1 1))", "user": "606ff89be4b069485764de22"}, {"problem": 42, "code": "(fn foo ([x] (foo x 1)) ([x product] (if (= x 1) product (* (foo (dec x)) x))))", "user": "6076adb2e4b069485764de60"}, {"problem": 42, "code": "(fn fact [x] (if (= x 1) 1 (* x (fact (- x 1)))))", "user": "51346821e4b0230e9f713b3e"}, {"problem": 42, "code": "(fn [n]\n  (reduce * 1 (range 1 (inc n))))", "user": "5cf938a5e4b0b71b1d808a90"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (+ n 1))))", "user": "6078afb9e4b0a637ed780359"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "607e1d32e4b03d835a6eaeda"}, {"problem": 42, "code": "(fn [n]\n  (loop [cnt n acc 1]\n    (if (zero? cnt)\n      acc\n      (recur (dec cnt) (* acc cnt)))))", "user": "60777335e4b0a637ed78034f"}, {"problem": 42, "code": "(fn factorial [number]\n  (reduce\n    *\n    (range 1 (inc number))))", "user": "606ff56ce4b069485764de21"}, {"problem": 42, "code": "#(cond \n  (= % 1) 1\n  (= % 2) 2\n  :else (reduce * (range 1 (inc %))))", "user": "607d6bc1e4b03d835a6eaecc"}, {"problem": 42, "code": ";(fn fac [n] (if (zero? (dec n)) n (* n (fac (dec n)))))\n(fn [n]\n  (loop [n n\n         acc 1]\n    (if (zero? (dec n))\n      acc\n      (recur (dec n) (* acc n)))))", "user": "60794173e4b0a637ed78035d"}, {"problem": 42, "code": "(fn fac [x]\n  (if (> x 0)\n    (* (fac (dec x)) x)\n    1))", "user": "5f0a65dae4b09a3f05b71806"}, {"problem": 42, "code": "#(loop [m % iter %]\n  (if (= iter 1)\n    m\n   (recur (* m (dec iter))(dec iter))))", "user": "6070c7bae4b069485764de27"}, {"problem": 42, "code": "(fn [n] (apply * (range 1 (inc n))))", "user": "5f82609ae4b0c071e6c840f9"}, {"problem": 42, "code": "(fn [n] (apply * (range 1 (inc n))))", "user": "60836285e4b0736b099e42e4"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "607a1523e4b0a637ed78036a"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "6074e1e4e4b069485764de4f"}, {"problem": 42, "code": "#(loop [result 1\n        control %]\n     (if (= control 1)\n         result\n         (recur (* result control) (dec control))\n         ))", "user": "6074e278e4b069485764de51"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "602c30e3e4b0d5df2af2226f"}, {"problem": 42, "code": "(fn factorial [n]\n  (reduce * (range 1 (inc n))))", "user": "608256d7e4b0736b099e42da"}, {"problem": 42, "code": "(fn [x]\n   (reduce\n    (fn [a e] (* a e))\n    (reverse\n     (map-indexed\n      (fn [i _] (+ 1 i))\n      (repeat x 1)))))", "user": "59c87d49e4b0a024fb6ae55b"}, {"problem": 42, "code": "#(apply\n  *(range\n    1(inc %)))", "user": "6085edade4b0736b099e42fc"}, {"problem": 42, "code": "#(apply * (map inc (range %)))", "user": "6045e761e4b02d28681c77bb"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "6086cdefe4b0736b099e4302"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "6081e475e4b0736b099e42d6"}, {"problem": 42, "code": "(fn [n]\n  (loop [n n\n         acc 1]\n  (if (> n 0)\n    (recur (dec n) (* acc n))\n    acc)))", "user": "5f755d0be4b02876ed9fd0a9"}, {"problem": 42, "code": "(fn [x] (loop [result 1\n               x x]\n          (if (= x 0)\n            result\n            (recur (* result x) (dec x)))))", "user": "607e1d9de4b03d835a6eaedb"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "6081b7fce4b0736b099e42d4"}, {"problem": 42, "code": "#(reduce * (range 2 (inc %)))", "user": "607e1c1fe4b03d835a6eaed8"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (range 1 (inc n))))", "user": "6088395de4b0ae75613dcee2"}, {"problem": 42, "code": "(fn factorial [n]\n  (reduce * (range 1 (inc n))))", "user": "607dd962e4b03d835a6eaed2"}, {"problem": 42, "code": "(fn spotfact [n]\n  (if (< n 2)\n      1\n      (* n (spotfact (dec n)))))", "user": "60882700e4b0ae75613dcedf"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "608828dee4b0ae75613dcee1"}, {"problem": 42, "code": "#(->> (inc %)\n       (range 1)\n       (reduce *))", "user": "60849bd6e4b0736b099e42f2"}, {"problem": 42, "code": "(fn [x]\n  (reduce * (range 1 (inc x)))\n  )", "user": "60752ef6e4b069485764de55"}, {"problem": 42, "code": "#(apply * (take % (iterate inc 1)))", "user": "5f1eec36e4b0f565ad998274"}, {"problem": 42, "code": "(fn pb42\n  [a]\n  (if (= a 1)\n    1\n    (* a (pb42 (dec a)))))", "user": "608135c8e4b0736b099e42d1"}, {"problem": 42, "code": "(fn fact-fun [x]\n  (reduce * (range 1 (+ 1 x))))", "user": "6074dfa4e4b069485764de4c"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "607e1cf9e4b03d835a6eaed9"}, {"problem": 42, "code": "#(loop [count % result 1]\n    (if (= count 1)\n      result\n      (recur (dec count) (* count result))))", "user": "5aa098fae4b0d174b936c82e"}, {"problem": 42, "code": "(fn [n](loop [i 1\n           result 1]\n        (if (> i n)\n            result\n            (recur (inc i)\n                   (*' result i)))))", "user": "6074e1ade4b069485764de4e"}, {"problem": 42, "code": "#(loop [i 1\n           result 1]\n        (if (> i %)\n            result\n            (recur (inc i)\n                   (*' result i))))", "user": "607b6452e4b0a637ed780375"}, {"problem": 42, "code": "(fn [n]\n  (loop [n n\n         ret 1]\n    (if (= n 1)\n      ret\n      (recur (dec n) (* ret n)))))", "user": "607b04e5e4b0a637ed780373"}, {"problem": 42, "code": "(fn fac \n  ([n] (fac n 1))\n  ([n my-n]\n   (if (= 1 n) my-n (fac (dec n) (* n my-n)))))", "user": "6033f8e9e4b0d5df2af222c6"}, {"problem": 42, "code": "(fn FactorialFun [n] \n  (if (= 1 n) \n    n \n    (* n (FactorialFun (dec n)))))", "user": "607508f3e4b069485764de54"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "608b3fe1e4b0adce4b61c442"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (inc x))))", "user": "6078ce29e4b0a637ed78035a"}, {"problem": 42, "code": "(fn [n] (reduce * (range 1 (inc n))))", "user": "607f3336e4b05857a65e7747"}, {"problem": 42, "code": "(fn fac [n]\n  (if (<= n 1)\n    1\n    (* n (fac (dec n)))))", "user": "6089bc95e4b0ae75613dcef5"}, {"problem": 42, "code": "(fn f [n]\n  (if (= n 0)\n    1\n    (* n (f (dec n)))))", "user": "5f77a0c1e4b02876ed9fd0bb"}, {"problem": 42, "code": "#(->> (range 1 (inc %)) (reduce *))", "user": "6087cb25e4b0ae75613dced8"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "6088c22ee4b0ae75613dcee4"}, {"problem": 42, "code": "#(reduce * ( range 1 (inc %1)))", "user": "60845eb8e4b0736b099e42ef"}, {"problem": 42, "code": "(fn fac [x]\n  (case x\n  0 1\n  (* x (fac (- x 1)))))", "user": "60901a6be4b03bd49d9f36c9"}, {"problem": 42, "code": "(fn [n]\n   (apply * (rest (range (inc n)))))", "user": "6086abade4b0736b099e42ff"}, {"problem": 42, "code": "(fn [n]\n   (loop [i n sum 1]\n     (if (= i 0)\n       sum \n       (recur (dec i) (* sum i)))))", "user": "608ec5e4e4b03bd49d9f36c0"}, {"problem": 42, "code": "(fn ans-42 [n]\n  (if (< n 1)\n    1\n    (* n (ans-42 (- n 1)))\n    ))", "user": "608fac60e4b03bd49d9f36c7"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (+ % 1)))", "user": "609117bbe4b03bd49d9f36cf"}, {"problem": 42, "code": "#(loop [cur %1 result 1]\n    (if (= 1 cur)\n      result\n      (recur (dec cur) (* result cur))))", "user": "6090e617e4b03bd49d9f36ce"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "609083a8e4b03bd49d9f36cb"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (inc x))))", "user": "601bb40de4b0bf4ca6b1092f"}, {"problem": 42, "code": "(fn [x]\n  (loop [n x result 1]\n    (if (= n 1)\n      result\n      (recur (dec n) (* n result)))))", "user": "58e90258e4b056aecfd47cfd"}, {"problem": 42, "code": "(fn [n]\n\t    (loop [cnt n\n\t           acc 1]\n\t       (if (zero? cnt)\n\t            acc\n\t          (recur (dec cnt) (* acc cnt))\n\t)))", "user": "608ee2f7e4b03bd49d9f36c1"}, {"problem": 42, "code": "(fn fak\n  [x]\n  (if (<= x 1)\n    1\n    (* x (fak (dec x)))))", "user": "608e6047e4b03bd49d9f36bf"}, {"problem": 42, "code": "(fn [n] (reduce * 1 (range 1 (inc n))))", "user": "6098263be4b00e9e6653c3f9"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "605714ffe4b069ae89ce6ae1"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "609aa543e4b00e9e6653c40c"}, {"problem": 42, "code": "(fn [n]\n   (loop [current n result 1]\n     (if (= current 0)\n       result\n       (recur (dec current) (* result current)))))", "user": "60759e51e4b069485764de5a"}, {"problem": 42, "code": "(fn factorial\n  [n]\n  (if\n    (= n 1)\n    1\n    (* n (factorial (dec n)))))", "user": "6096d37be4b00e9e6653c3f0"}, {"problem": 42, "code": "(fn [n]\n  (reduce *\n          (take n (iterate dec n))))", "user": "609c1db9e4b00e9e6653c416"}, {"problem": 42, "code": "(fn factorial [n]\n  (loop [result 1 i 1]\n    (if (<= i n)\n      (recur (* result i) (inc i))\n      result))\n  )", "user": "6092c0a9e4b00e9e6653c3dc"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "609a54f0e4b00e9e6653c40b"}, {"problem": 42, "code": "(fn factorial [n]\n  (reduce * (range 1 (inc n))))", "user": "5fa52497e4b0fa27300f3dbf"}, {"problem": 42, "code": "(fn [x] (reduce * 1 (range 1 (inc x))))", "user": "60a42199e4b00e9e6653c454"}, {"problem": 42, "code": "(fn [n] \n  (reduce #(* %1 %2) (range 1 (inc n))))", "user": "609a4ac8e4b00e9e6653c40a"}, {"problem": 42, "code": "(fn fact [n]\n  (if (= n 1)\n    n\n    (* n (fact (dec n)))))", "user": "608c270ae4b03bd49d9f36b3"}, {"problem": 42, "code": "(fn [v] (reduce * (range v 0 -1)))", "user": "60a9f193e4b00e9e6653c476"}, {"problem": 42, "code": "#(->> (iterate dec %)\n      (take %)\n      (reduce *))", "user": "60ab1536e4b00e9e6653c47e"}, {"problem": 42, "code": "(fn [n]\n  (loop [c n\n         s 1]\n    (if (zero? c)\n      s\n      (recur (dec c)\n             (* c s)))))", "user": "60a39b80e4b00e9e6653c450"}, {"problem": 42, "code": "(fn fact [x] \n    (if (= x 1) 1\n        (* x (fact (dec x)))))", "user": "60a7c55be4b00e9e6653c468"}, {"problem": 42, "code": "(fn my-fact\n  ([n] (my-fact n 1))\n  ([n acc] (if (zero? n)\n             acc\n             (recur (dec n) (* acc n)))))", "user": "60ade833e4b00e9e6653c494"}, {"problem": 42, "code": "(fn fact [n] (if (= 0 n) 1 (* n (fact (dec n)))))", "user": "52435d0ce4b076204b44fab5"}, {"problem": 42, "code": "#(apply * (range 1 (inc %1)))", "user": "60aecd73e4b00e9e6653c49a"}, {"problem": 42, "code": "#(reduce * (range 1 (+ 1 %)))", "user": "60a68a95e4b00e9e6653c461"}, {"problem": 42, "code": "#(reduce * (take % (iterate inc 1)))", "user": "609e9b64e4b00e9e6653c426"}, {"problem": 42, "code": "(fn fact [n] (if (< n 2) 1 (* n (fact (- n 1)))))", "user": "60b2aaebe4b0e0fa5f1b4228"}, {"problem": 42, "code": "(fn factorial [n]\n      (if (= n 0)\n        1\n        (* n (factorial (dec n)))))", "user": "604a3daee4b02d28681c77f2"}, {"problem": 42, "code": "#(reduce * (range 1 (+ % 1)))", "user": "60a9a829e4b00e9e6653c470"}, {"problem": 42, "code": "#(->> % inc (range 1) (reduce *))", "user": "60ac91c5e4b00e9e6653c485"}, {"problem": 42, "code": "(fn [n]\n  (reduce * (range 1 (+ n 1))))", "user": "51b920bfe4b0e871ca4958f9"}, {"problem": 42, "code": "(fn [n]\n  (letfn [(factorial [n]\n            (if (= 1 n)\n              1\n              (* n (factorial (dec n)))))]\n        (factorial n)))", "user": "60b1add0e4b0e0fa5f1b4227"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %1)))", "user": "60726211e4b069485764de36"}, {"problem": 42, "code": "(fn [n]\n  (->> (range 1 (+ 1 n))\n       (reduce *)))", "user": "60b3b8a9e4b0e0fa5f1b4233"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "57123c96e4b09c608db70454"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "60b7e2c5e4b0e0fa5f1b4252"}, {"problem": 42, "code": "(fn factorial \n  ([n] (factorial n [1]))\n  ([n col] (if (= n 1) (reduce * col) (recur (- n 1) (conj col n)))))", "user": "609beb06e4b00e9e6653c412"}, {"problem": 42, "code": "#(apply * (take % (iterate dec %)))", "user": "60b61b40e4b0e0fa5f1b4244"}, {"problem": 42, "code": "(fn factorial [x] (if (= x 1)\n          x\n          (* (factorial (dec x)) x)))", "user": "6093cc08e4b00e9e6653c3e1"}, {"problem": 42, "code": "(fn hey [a x] (let [y (* x a)]\n   (if (> x 1) (hey y (- x 1) ) y))) 1", "user": "60b3b375e4b0e0fa5f1b4232"}, {"problem": 42, "code": "#(reduce * 1 (range 1 (inc %)))", "user": "60b57acee4b0e0fa5f1b4238"}, {"problem": 42, "code": "(fn [n] (reduce * (take n (iterate dec n))))", "user": "60b8f098e4b0e0fa5f1b425f"}, {"problem": 42, "code": "(comp\n   (partial apply *)\n   (partial range 1)\n   inc)", "user": "5f2d6bc4e4b033932238a66e"}, {"problem": 42, "code": "(fn [x] (reduce * (range 1 (inc x))))", "user": "608e5697e4b03bd49d9f36be"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "60c0ceb7e4b0e0fa5f1b42a6"}, {"problem": 42, "code": "(fn iter [n] (if (not= n 0) (* n (iter (- n 1))) 1))", "user": "5fd92743e4b05ac5b16ea11f"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "6093b56ce4b00e9e6653c3e0"}, {"problem": 42, "code": "#(apply * (range 1 (inc %)))", "user": "60afc597e4b0245e5b1b35c3"}, {"problem": 42, "code": "(fn [n] (reduce * (map inc (range n))))", "user": "60c3f665e4b0e0fa5f1b42c8"}, {"problem": 42, "code": "#(apply * (range 1 (inc %1)))", "user": "60c4e5dfe4b0e0fa5f1b42cd"}, {"problem": 42, "code": "(fn factorial[n]\n  (reduce * (range 1 (inc n))))", "user": "60c91f48e4b0e0fa5f1b4304"}, {"problem": 42, "code": "(fn fac [n]\n  (if (= n 1)\n    1\n    (* n (fac (dec n)))\n    )\n  )", "user": "60c8e372e4b0e0fa5f1b42ff"}, {"problem": 42, "code": "(fn\n  [n]\n  (reduce #(* %1 %2) 1 (range 1 (inc n))))", "user": "603e8e3ae4b0d5df2af22316"}, {"problem": 42, "code": "(fn [n]\n   (reduce #(* %1 %2) 1 (range 1 (inc n)))\n   )", "user": "60cb3836e4b0e0fa5f1b4315"}, {"problem": 42, "code": "(fn factorial [n] (if (< n 0) 0 (apply * (range 1 (+ n 1)))))", "user": "60c86bbde4b0e0fa5f1b42fb"}, {"problem": 42, "code": "(fn factorial\n      [x]\n      (reduce * (range 1 (inc x))))", "user": "60c90322e4b0e0fa5f1b4302"}, {"problem": 42, "code": "(fn [n] (apply * (range 1 (inc n))))", "user": "5e3d183fe4b01d43a70e8e11"}, {"problem": 42, "code": "#(reduce * (map inc (take % (range))))", "user": "60db702ae4b02d404a3b4372"}, {"problem": 42, "code": "#(reduce * (take % (iterate inc 1)))", "user": "60dd865ee4b0d8b48c489db3"}, {"problem": 42, "code": "#(apply * (map inc (range %)))", "user": "5ed81965e4b016b56eae05ed"}, {"problem": 42, "code": "(fn fac [x] ( if (= x 1) 1 ( * x (fac (dec x)) ) ) )", "user": "60d78d64e4b0d60f5ea6f7ed"}, {"problem": 42, "code": "#(reduce * (range 1 (inc %)))", "user": "60e955ade4b0584f1d4a8dc1"}]