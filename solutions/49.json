[{"code": "(fn [n xs] [(take n xs) (drop n xs)])", "problem": 49, "user": "4dd62278535d2dad7130b5c7"}, {"code": "(fn [index coll]\r\n  (map #(map second %) (split-with #(not= index (first %)) (map-indexed list coll))))", "problem": 49, "user": "4dd6fa35535d2dad7130b5cd"}, {"code": "(juxt take drop)", "problem": 49, "user": "4dce6e41535d5973398f92a2"}, {"code": "#(do[(take%%2)(drop%%2)])", "problem": 49, "user": "4dd66da7535d2dad7130b5c8"}, {"code": "(fn splitSeq [nume lis] (list (take nume lis) (drop nume lis)))", "problem": 49, "user": "4dadca03c9a9d6ed4199dc57"}, {"code": "(fn self\r\n([c cols]\r\n (if(empty? cols)\r\n  cols\r\n  (self [] c cols )))\r\n([res c cols]\r\n (if(= (count res) c )\r\n  (conj (conj [] res) (vec cols))\r\n  (self (conj res (first cols)) c (rest cols))\r\n)\r\n))", "problem": 49, "user": "4dc7f472535d8a4b2fd74293"}, {"code": "(fn my-split-at [n xs]\r\n  (list (take n xs) (drop n xs)))", "problem": 49, "user": "4dd023dd535d5973398f92ad"}, {"code": "(fn [n coll]\r\n    (vector (take n coll) (drop n coll)))", "problem": 49, "user": "4dd61f98535d2dad7130b5c6"}, {"code": "(juxt take drop)", "problem": 49, "user": "4dd6d6a0535d2dad7130b5ca"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4ddbfb8a535d02782fcbea00"}, {"code": "(fn droptake [n lst]\r\n  (list (take n lst)\r\n  (drop n lst)))", "problem": 49, "user": "4ddc620d535d02782fcbea06"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "4ddcabcb535d6ebe9be03f52"}, {"code": "#(reduce\r\n   (fn [[head tail] [elm at]]\r\n     (if (<= at %)\r\n       [(conj head elm) tail]\r\n       [head (conj tail elm)]))\r\n   [[] []]\r\n   (map vector\r\n  %2\r\n\t(take (count %2) (iterate inc 1))))", "problem": 49, "user": "4dd6d7ee535d2dad7130b5cb"}, {"code": "(fn [num col] \r\n  (cons (take num col)\r\n\t\t(list (take-last (- (count col) num) col))\r\n\t)\r\n)", "problem": 49, "user": "4dd579b5535dae65d5c462ea"}, {"code": "(fn [n xs] [(take n xs) (drop n xs)])", "problem": 49, "user": "4dd52e29535dae65d5c462e5"}, {"code": "#(vector (vec (take % %2)) (vec (drop % %2)))", "problem": 49, "user": "4db342d7535df7e46ed9b6cd"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4ddbd934535d02782fcbe9fc"}, {"code": "(fn [i-size i-list]\r\n    (conj (conj [] (take i-size i-list)) (take-last (- (count i-list) i-size) i-list)))", "problem": 49, "user": "4dddf817535d08e6dec9fdd3"}, {"code": "(fn [n xs] [(take n xs) (drop n xs)])", "problem": 49, "user": "4ddc1c89535d02782fcbea01"}, {"code": "(fn [n coll]\r\n  ((juxt (partial take n) (partial drop n)) coll))", "problem": 49, "user": "4ddbdc1b535d02782fcbe9fd"}, {"code": "(fn [n coll]\r\n  (loop [n n\r\n         coll coll\r\n         r '()]\r\n    (if (= n 0)\r\n      `(~(reverse r) ~coll)\r\n      (recur (- n 1) (rest coll) (conj r (first coll))))))", "problem": 49, "user": "4de2f44f535d08e6dec9fdec"}, {"code": "(fn [n coll]\r\n  [(take n coll) \r\n   (take-last (- (count coll) n) coll)])", "problem": 49, "user": "4ddee37c535d08e6dec9fddc"}, {"code": "(fn  [n x]  [(take  n x) (drop n x)])", "problem": 49, "user": "4dcc5aff535d5973398f9293"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4dea9406535d08e6dec9fe01"}, {"code": "(fn [n lst]\r\n  (cons (take n lst) (cons (drop n lst) nil)))", "problem": 49, "user": "4dda5d07535d02782fcbe9f2"}, {"code": "(fn cut-seq [n coll]\r\n  [(take n coll) (drop n coll)]\r\n  )", "problem": 49, "user": "4ddeb916535d08e6dec9fdd9"}, {"code": "(juxt take drop)", "problem": 49, "user": "4de77a0a535d08e6dec9fdfa"}, {"code": "(fn [i coll]\r\n  (loop [idx i\r\n         [x & xs] coll\r\n          prev []]\r\n     (if (= 1 idx)\r\n        [(conj prev x) xs]\r\n        (recur (dec idx) xs (conj prev x)))))", "problem": 49, "user": "4dae869dedd6309eace4d154"}, {"code": "(fn [a b] [(take a b) (drop a b)])", "problem": 49, "user": "4df1ce44535d08e6dec9fe1f"}, {"code": "(fn [n seq]\r\n  (conj (list (take-last (- (count seq) n) seq)) (take n seq)))", "problem": 49, "user": "4df1e213535d08e6dec9fe20"}, {"code": "(fn [index coll]\r\n  (loop [s coll r1 [] r2 [] i index]\r\n    (let [h (first s) t (rest s) j (dec i)]\r\n      (if (nil? h) [r2 r1]\r\n        (if (= i 0)\r\n          (recur t (conj r2 h) r1 j)\r\n          (recur t (conj r1 h) r2 j))))))", "problem": 49, "user": "4dee4a9c535d08e6dec9fe11"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4deb529a535d08e6dec9fe04"}, {"code": "(fn [n coll]\r\n   [ (take n coll) (drop n coll)])", "problem": 49, "user": "4df168bd535d08e6dec9fe1d"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4df3d4f4535d08e6dec9fe2c"}, {"code": "(fn [n s] (vector \r\n  (vec \r\n    (take n s))\r\n  (vec \r\n    (nthnext s n))))", "problem": 49, "user": "4de18de7535d08e6dec9fde8"}, {"code": "(fn [at coll]\r\n   (list (take at coll) (drop at coll)))", "problem": 49, "user": "4de623ef535d08e6dec9fdf4"}, {"code": "(fn [n coll]\r\n  (let [zip (map #(list %1 %2) (range 1 (inc (count coll))) coll) ]\r\n    (list (map last (filter #(<= (first %) n) zip))\r\n      (map last (filter #(> (first %) n) zip)))))", "problem": 49, "user": "4df407c3535d08e6dec9fe2e"}, {"code": "(fn [n s]\r\n  (cons (take n s) (cons (take-last (- (count s) n) s) '())))", "problem": 49, "user": "4df3df8a535d08e6dec9fe2d"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "4df669d4535d08e6dec9fe35"}, {"code": "(fn [n coll]\r\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "4dfd4ba8535d04ed9115e781"}, {"code": "#(do [(subvec %2 0 %) (subvec %2 %)])", "problem": 49, "user": "4df20dda535d08e6dec9fe23"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4def301c535d08e6dec9fe12"}, {"code": "(fn [n coll]\r\n  (list (take n coll)\r\n        (drop n coll)))", "problem": 49, "user": "4e02bee8535d04ed9115e791"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4e03c616535d04ed9115e796"}, {"code": "(fn [at xs]\r\n   (list (take at xs) (drop at xs)))", "problem": 49, "user": "4e0d8c27535d04ed9115e7b7"}, {"code": "(fn [n col] [(take n col) (drop n col)])", "problem": 49, "user": "4e0e0529535d04ed9115e7b9"}, {"code": "(fn f\r\n  ([n xs ret]\r\n     (if (= n 0)\r\n       (concat (list ret) (list xs))\r\n       (f (dec n) (rest xs) (concat ret (list (first xs))))))\r\n  ([n xs]\r\n     (f n xs nil)))", "problem": 49, "user": "4e059278535d04ed9115e7a5"}, {"code": "(juxt take drop)", "problem": 49, "user": "4dae0510c9a9d6ed4b99dc57"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4e111538535d04ed9115e7c3"}, {"code": "(fn [l c] (map #(% l c) [take drop]))", "problem": 49, "user": "4daa374930acd6ed13482a68"}, {"code": "(fn sp [n xs]\r\n  (loop [n n xs xs acc '()]\r\n    (cond\r\n      (empty? xs) acc\r\n      (= n 0) (cons (reverse acc) (cons xs '()))\r\n      :else (recur (dec n) (rest xs) (cons (first xs) acc)))))", "problem": 49, "user": "4dc7e7a5535d8a4b2fd74290"}, {"code": "(fn splitat [n xs]\r\n  [(vec (take n xs)) (vec (drop n xs))])", "problem": 49, "user": "4e123905535d04ed9115e7ce"}, {"code": "(fn [n c] [(take n c) (drop n c)])", "problem": 49, "user": "4dbad895535d1e037afb21ae"}, {"code": "(fn [n coll]\r\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "4dd7d040535d2dad7130b5d6"}, {"code": "(juxt take drop)", "problem": 49, "user": "4e14b925535d04ed9115e7df"}, {"code": "(fn [n coll]\r\n    [(take n coll) (drop n coll)])", "problem": 49, "user": "4e1158aa535d04ed9115e7c6"}, {"code": "#(identity [(take % %2) (drop % %2)])", "problem": 49, "user": "4deff9f9535d08e6dec9fe15"}, {"code": "(fn mysplit [n lt]\r\n     (let [head (take n lt) tail (take-last (- (count lt) n) lt)]\r\n       (list head tail)))", "problem": 49, "user": "4e1b2cd9535d04ed9115e7fd"}, {"code": "(fn [n coll] (vector (take n coll) (drop n coll)))", "problem": 49, "user": "4e14108c535d04ed9115e7dd"}, {"code": "(fn split\n  ([x y]\n    (split x (rest y) [(first y)]))\n  ([x y z]\n    (if (= x (count z))\n      [z y]\n      (recur x (rest y) (conj z (first y))))))", "problem": 49, "user": "4e16bdef535d04ed9115e7e9"}, {"code": "(fn split-a-seq [n lat]\r\n  (cons (take n lat) (cons (drop n lat) '())))", "problem": 49, "user": "4ddb339c535d02782fcbe9f9"}, {"code": "(fn [n coll]\r\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "4e22b78b535d04ed9115e81e"}, {"code": "(fn [n ls]\n  [(take n ls) (nthnext ls n)])", "problem": 49, "user": "4de165f3535d08e6dec9fde6"}, {"code": "(fn [n coll] (list (take n coll) (drop n coll)))", "problem": 49, "user": "4e1ec17a535d04ed9115e80a"}, {"code": "(fn [x y] [(take x y) (drop x y)])", "problem": 49, "user": "4e1e7f88535d04ed9115e808"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4e232f34535d04ed9115e81f"}, {"code": "(fn [n x]\n  [(take n x)\n   (drop n x)])", "problem": 49, "user": "4e28120f535deb9a81d77efa"}, {"code": "(fn [n x] [(take n x) (drop n x)])", "problem": 49, "user": "4e21c0c7535d04ed9115e818"}, {"code": "(fn [n as]\r\n   (loop [n n fs '()  rs as]\r\n     (if (zero? n)\r\n       (list (reverse fs) rs)\r\n       (recur (dec n) (conj fs (first rs)) (rest rs)))))", "problem": 49, "user": "4e26e8b4535deb9a81d77ef6"}, {"code": "(juxt take drop)", "problem": 49, "user": "4e307313535deb9a81d77f14"}, {"code": "(fn [n C] [(vec (take n C)) (vec (drop n C))])", "problem": 49, "user": "4e31a15c535deb9a81d77f1e"}, {"code": "(fn my-split-at [n sq]\n  (list (take n sq) (drop n sq)))", "problem": 49, "user": "4dc54eb2535d8a4b2fd74284"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "4daef21cedd6309eace4d169"}, {"code": "(fn [num seq]\n    [(take num seq) (take-last (- (count seq) num) seq)])", "problem": 49, "user": "4e2f9e71535deb9a81d77f11"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4e356d2b535deb9a81d77f2d"}, {"code": "(fn [n coll] (vector (take n coll) (drop n coll)))", "problem": 49, "user": "4e39fb68535deb9a81d77f47"}, {"code": "(new clojure.core$split_at)", "problem": 49, "user": "4e3b6bff535deb9a81d77f52"}, {"code": "(fn [n l] [(take n l) (drop n l)])", "problem": 49, "user": "4e218470535d04ed9115e817"}, {"code": "(fn [n xs]\n  [(take n xs) (drop n xs)])", "problem": 49, "user": "4e3996b0535deb9a81d77f41"}, {"code": "(fn [n l] [(take n l) (drop n l)])", "problem": 49, "user": "4e218464535d04ed9115e816"}, {"code": "(fn f [n coll]\n  (cons (take n coll) [(drop n coll)]))", "problem": 49, "user": "4e113a81535d04ed9115e7c5"}, {"code": "(fn [n v] [(subvec v 0 n) (subvec v n)])", "problem": 49, "user": "4e3ac1b2535deb9a81d77f4c"}, {"code": "(fn [n c]\n  [(vec (take n c))\n   (vec (drop n c))])", "problem": 49, "user": "4e39d763535deb9a81d77f46"}, {"code": "#(vec (list (take %1 %2) (drop %1 %2)))", "problem": 49, "user": "4e3f480c535dc968683fc497"}, {"code": "#(vector (vec (take %1 %2)) (vec (drop %1 %2)))", "problem": 49, "user": "4e273301535deb9a81d77ef7"}, {"code": "(fn [i coll]\n  [(take i coll) (drop i coll)])", "problem": 49, "user": "4e435681535dc968683fc4a1"}, {"code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "4db87deb535d1e037afb2197"}, {"code": "(fn divide [n xs]\n  (list (take n xs) (drop n xs)))", "problem": 49, "user": "4db51ce0535d87e67b28fe06"}, {"code": "(fn split [n s]\n  ((fn split_in [i s1 s2]\n     (cond\n       (= i 0) (list (reverse s1) s2)\n       :else (split_in (dec i) (cons (first s2) s1) (next s2)))) n [] s))", "problem": 49, "user": "4e444c11535dc968683fc4a9"}, {"code": "(fn [x y]\n  (let [a (take x y) b (nthnext y x )]\n    (vec (conj (vec [a]) (vec b) ) ) ) )", "problem": 49, "user": "4e333091535deb9a81d77f25"}, {"code": "(fn mysplit-at [n coll]\r\n      (list (take n coll) (drop n coll)))", "problem": 49, "user": "4e46ac46535dc968683fc4b5"}, {"code": "(fn [n c] [(take n c) (drop n c)])", "problem": 49, "user": "4e49badd535dc968683fc4c9"}, {"code": "(fn [idx s]\n           [(vec (take idx s)) (vec (drop idx s))])", "problem": 49, "user": "4e08fb7a535d04ed9115e7ac"}, {"code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "4e42f930535dc968683fc49f"}, {"code": "#(let [r [(take %1 %2) (drop %1 %2)]]\n  r)", "problem": 49, "user": "4e4870d1535dc968683fc4bc"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "4e4ae5aa535dc968683fc4d2"}, {"code": "(fn split [n xs]\n  (map vec [(take n xs) (drop n xs)]))", "problem": 49, "user": "4e4c238f535dc968683fc4dc"}, {"code": "(fn spl [index x]\n  (vector\n    (take index x)\n    (take-last (- (count x) index) x)\n  )\n)", "problem": 49, "user": "4e3456f9535deb9a81d77f2a"}, {"code": "(fn my-split-at [n coll]\n  (cons (take n coll)\n        (list (drop n coll))))", "problem": 49, "user": "4e4b4564535dc968683fc4d3"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4e4ad154535dc968683fc4d1"}, {"code": "(fn[n c][(take n c) (drop n c)])", "problem": 49, "user": "4e2b1d48535deb9a81d77f03"}, {"code": "(fn [n xs] [(take n xs) (drop n xs)])", "problem": 49, "user": "4e50b67b535dc968683fc4ed"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "4e513ecf535dc968683fc4f6"}, {"code": "(fn [n xs] \n  [(take n xs) (drop n xs)])", "problem": 49, "user": "4e513758535dc968683fc4f3"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4e52d815535d302ef430da77"}, {"code": "#(vec (list (subvec %2 0 %1) (subvec %2 %1)))", "problem": 49, "user": "4e5315c6535d8a8b8723a26f"}, {"code": "(juxt take drop)", "problem": 49, "user": "4e12cc9d535d04ed9115e7d2"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4e498df9535dc968683fc4c4"}, {"code": "(fn [n c] [(take n c) (drop n c)])", "problem": 49, "user": "4e399685535deb9a81d77f40"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "4e50e2a0535dc968683fc4ef"}, {"code": "(fn [n seq]\n  [(take n seq) (drop n seq)])", "problem": 49, "user": "4e5411e8535d8a8b8723a279"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4e5676b2535d8a8b8723a282"}, {"code": "(fn split-seq [n coll]\n  (list\n   (take n coll)\n   (drop n coll )))", "problem": 49, "user": "4e4bd94b535dc968683fc4d7"}, {"code": "#(if (< (count %2) %1) [(vec %2) []]  [(take %1 %2) (drop %1 %2)])", "problem": 49, "user": "4e521cef535d302ef430da6d"}, {"code": "(fn[n a-seq]\n  [(take n a-seq)\n   (take-while identity (drop n a-seq))])", "problem": 49, "user": "4e58bcd4535d8a8b8723a296"}, {"code": "(fn [i xs]\n  [(take i xs)\n   (drop i xs)])", "problem": 49, "user": "4e593dac535d8a8b8723a29c"}, {"code": "(fn [n xs] (list (take n xs) (drop n xs)))", "problem": 49, "user": "4ddabc33535d02782fcbe9f5"}, {"code": "(fn splt [n coll]\n    (vector (into [] (take n coll)) (into [] (drop n coll))))", "problem": 49, "user": "4e5a2403535d8a8b8723a2a7"}, {"code": "(fn [n c] [(take n c) (nthnext c n)])", "problem": 49, "user": "4e589bdc535d8a8b8723a295"}, {"code": "(fn [n s] [(take n s) (drop n s)])", "problem": 49, "user": "4e599577535d8a8b8723a29f"}, {"code": "(fn [n lat]\n  (cons \n    (take n lat) \n    (cons (drop n lat) '())\n  )\n)", "problem": 49, "user": "4e570f47535d8a8b8723a287"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4e588e84535d8a8b8723a294"}, {"code": "(fn [x y] (vector (take x y) (drop x y)))", "problem": 49, "user": "4e5867d1535d8a8b8723a291"}, {"code": "(fn f [n s] [(take n s) (drop n s)])", "problem": 49, "user": "4e5c801e535d8a8b8723a2c1"}, {"code": "(fn [n c] [ (take n c) (drop n c) ])", "problem": 49, "user": "4e597b2c535d8a8b8723a29d"}, {"code": "(fn [spl coll] [(take spl coll) (drop spl coll)])", "problem": 49, "user": "4e5d2dc5535d8a8b8723a2ca"}, {"code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "4e5bff2b535d8a8b8723a2bd"}, {"code": "(fn [n coll] (vector (take n coll) (drop n coll)))", "problem": 49, "user": "4e5b192e535d8a8b8723a2b3"}, {"code": "(juxt take drop)", "problem": 49, "user": "4dad938fc9a9d6ed1b99dc57"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4e5f08c7535d8a8b8723a2da"}, {"code": "(fn mysplit [n s]\r\n  [(take n s) (drop n s)])", "problem": 49, "user": "4e50c894535dc968683fc4ee"}, {"code": "(fn [a b] (vector (take a b) (drop a b)))", "problem": 49, "user": "4e4b911f535dc968683fc4d6"}, {"code": "(fn\n  [n coll]\n  ((juxt (comp vec (partial take n))\n         (comp vec (partial drop n)))\n   coll))", "problem": 49, "user": "4dad7adac9a9d6ed0599dc57"}, {"code": "#(vector (take %1 %2)\n         (drop %1 %2))", "problem": 49, "user": "4e615cd2535d8ccf87e9fe58"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4e3bccb1535deb9a81d77f55"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4e5914e0535d8a8b8723a29b"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4e5ecd65535d8a8b8723a2d6"}, {"code": "(fn split \r\n  ([at lis] (split at lis []))\r\n  ([at lis res] \r\n    (if (> at 0) \r\n      (recur (dec at) (next lis)(conj res (first lis)))\r\n       [res (vec lis)]\r\n    ))  \r\n)", "problem": 49, "user": "4e44358f535dc968683fc4a8"}, {"code": "(fn *split                                                                                              \n  [n coll]                                                                                                \n  (conj [] (vec (take n coll)) (vec (drop n coll))))", "problem": 49, "user": "4e3bcccd535deb9a81d77f56"}, {"code": "#(vec [(take %1 %2) (drop %1 %2)])", "problem": 49, "user": "4e634eb9535d8ccf87e9fe63"}, {"code": "(fn split- [n coll]\n  \"49. Write a function which will split a sequence into two parts.\"\n  [(take n coll) (drop n coll)]\n  )", "problem": 49, "user": "4e5eb843535d8a8b8723a2d4"}, {"code": "(fn [n coll]\n (cons (into [] (take n coll)) (conj [] (into [] (take-last (- (count coll) n) coll)))))", "problem": 49, "user": "4db045b5838c48654951d9be"}, {"code": "(fn split-it [x s] [(take x s) (drop x s)])", "problem": 49, "user": "4e5e9f6b535d8a8b8723a2d2"}, {"code": "(fn [n xs]\n  (list (take n xs) (drop n xs)))", "problem": 49, "user": "4e68dbd5535d8ccf87e9fe8f"}, {"code": "(fn [i s]\n  (loop [pos 0\n         acc []\n         rm s]\n         (if (= pos i)\n          [acc (vec rm)]\n          (recur (inc pos) (conj acc (first rm)) (rest rm)))))", "problem": 49, "user": "4e68b46c535d8ccf87e9fe87"}, {"code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "4e68c434535d8ccf87e9fe89"}, {"code": "(fn [n v] (list (take n v) (drop n v)))", "problem": 49, "user": "4e5bdc2b535d8a8b8723a2bb"}, {"code": "(fn mysplit-at [index aSeq]\n            (loop [answer [], i index, remainder aSeq]\n               (if (> i 0)\n                   (recur \n                    (conj answer (first remainder))\n                    (dec i)\n                    (rest remainder))\n                   (conj [] answer (vec remainder)))))", "problem": 49, "user": "4e463703535dc968683fc4b2"}, {"code": "(fn [position seq]\n    (loop [leftseq (list (first seq)) rightseq (rest seq) current 1]\n      (if (= position current)\n          [leftseq rightseq]\n          (recur (concat leftseq (list (first rightseq))) (rest rightseq) (+ current 1)))))", "problem": 49, "user": "4e653558535d8ccf87e9fe6f"}, {"code": "(juxt take drop)", "problem": 49, "user": "4e5fe31a535d8ccf87e9fe50"}, {"code": "(juxt take drop)", "problem": 49, "user": "4e6a412e535d8ccf87e9feb6"}, {"code": "(fn [at stuff]\n  (let [size (count stuff)]\n    (vec \n      (list\n        (vec(drop-last (- size at) stuff))\n        (vec(drop at stuff))))))", "problem": 49, "user": "4e6a60cd535d8ccf87e9fed7"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4e6a48d5535d8ccf87e9febd"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "4e6ab9cb535d8ccf87e9fefe"}, {"code": "(fn [n s] [(take n s) (drop n s)])", "problem": 49, "user": "4e6a2f51535d8ccf87e9fea9"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4e6b3fc8535d8ccf87e9ff0f"}, {"code": "(fn [n xs]\n  (let [groups (partition n n () xs)]\n    (cons (first groups) (list (apply concat (next groups))))))", "problem": 49, "user": "4e6a97a9535d8ccf87e9fef8"}, {"code": "(fn [n xs] (cons \n  (take n xs) \n  (cons (drop n xs) nil)))", "problem": 49, "user": "4df0524e535d08e6dec9fe17"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "4e6472b7535d8ccf87e9fe6c"}, {"code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "4e6dd51b535d5021c1a895f6"}, {"code": "(fn [n a-seq] [ (take n a-seq) (drop n a-seq) ])", "problem": 49, "user": "4e6dc95a535d5021c1a895f1"}, {"code": "#(do [(take %1 %2) (drop %1 %2)])", "problem": 49, "user": "4e6dc5f5535d5021c1a895f0"}, {"code": "#(cons (take %1 %2) (list (drop %1 %2)))", "problem": 49, "user": "4e6e6630535d5021c1a89609"}, {"code": "(fn [x l] [(take x l) (drop x l)])", "problem": 49, "user": "4e6def42535d5021c1a895f7"}, {"code": "(fn split [n s]\n  (conj (conj nil (drop n s)) (take n s)))", "problem": 49, "user": "4e2f377a535deb9a81d77f10"}, {"code": "(fn [n,l] [(take n l) (drop n l)])", "problem": 49, "user": "4e6e10d8535d5021c1a895fd"}, {"code": "#(vector (take % %2)(drop % %2))", "problem": 49, "user": "4e6dd0f5535d5021c1a895f3"}, {"code": "(fn sp [n c] [(take n c) (drop n c)])", "problem": 49, "user": "4e70c0b1535d5021c1a89640"}, {"code": "(fn [n coll] (vector (take n coll) (drop n coll)))", "problem": 49, "user": "4e223bd6535d04ed9115e81c"}, {"code": "(fn [n v] [(vec (map #(v %) (range n))) \n          (vec (map #(v %) (range n (count v))))])", "problem": 49, "user": "4e6e3a1e535d5021c1a89602"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4e6a2f93535d8ccf87e9feaa"}, {"code": "(fn [n b] \n  [(take n b) (drop n b)])", "problem": 49, "user": "4e68be01535d8ccf87e9fe88"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4e704293535d5021c1a89634"}, {"code": "(fn[n s](list (take n s) (take-last (- (alength (to-array s)) n) s)))", "problem": 49, "user": "4e6df3c9535d5021c1a895fa"}, {"code": "(juxt take drop)", "problem": 49, "user": "4e7115b3535d5021c1a89647"}, {"code": "(fn [n xs]\n  [(vec (take n xs)) (vec (drop n xs))])", "problem": 49, "user": "4e6a3985535d8ccf87e9feb1"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "4e6e97ca535d5021c1a8960c"}, {"code": "(fn [i a] (vector (take i a) (drop i a)))", "problem": 49, "user": "4e6fa38b535d5021c1a89622"}, {"code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "4e6defcc535d5021c1a895f8"}, {"code": "(fn s [n coll]\n  [(subvec coll 0 n) (subvec coll n)]\n)", "problem": 49, "user": "4e6a79ca535d8ccf87e9feeb"}, {"code": "(fn [pos coll]\n  [(vec (take pos coll)) (vec (drop pos coll))])", "problem": 49, "user": "4e6a4950535d8ccf87e9febf"}, {"code": "#(partition-by {1 1 2 1 3 1 :a 1 [5 6] 1} %2)", "problem": 49, "user": "4e71da4d535d5021c1a89653"}, {"code": "#(cons (take %1 %2) (conj nil (drop %1 %2)))", "problem": 49, "user": "4e5a3891535d8a8b8723a2aa"}, {"code": "#(loop [i 1 rem %2 pre []]\n  (if (> i %1)\n    (cons pre [rem])\n    (recur (inc i) (rest rem) (conj pre (first rem)))))", "problem": 49, "user": "4e6f1b7a535d5021c1a89618"}, {"code": "#(vector (reverse (drop (- (count %2) %) (reverse %2))) (drop % %2))", "problem": 49, "user": "4e71920f535d5021c1a8964e"}, {"code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "4e71705e535d5021c1a89649"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4e6a11ee535d8ccf87e9fe9f"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4e6f8d36535d5021c1a89621"}, {"code": "(fn [n c] [(take n c) (drop n c)])", "problem": 49, "user": "4e6e7018535d5021c1a8960b"}, {"code": "(fn [n coll]\n   [(take n coll) (drop n coll)])", "problem": 49, "user": "4daedd1eedd6309eace4d164"}, {"code": "(fn [n l]\n  (map #(vec (map second %))\n   (partition-by #(< n (first %))\n    (map #(list (+ 1 %) (nth l %)) (range 0 (count l)))))\n)", "problem": 49, "user": "4e720985535d5021c1a89655"}, {"code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "4e5d0e96535d8a8b8723a2c8"}, {"code": "(fn split* [n xs]\n  (cons (take n xs) [(drop n xs)]))", "problem": 49, "user": "4e691c79535d8ccf87e9fe97"}, {"code": "(fn [n xs] [(take n xs) (drop n xs)])", "problem": 49, "user": "4e765170535d324fb2983d69"}, {"code": "(fn part [n coll]\n  [ (vec (take n coll)) (vec (take-last (- (count coll) n) coll)) ])", "problem": 49, "user": "4e6a4edd535d8ccf87e9fec4"}, {"code": "(fn [n coll]\n  (cons (take n coll) \n        (vector (drop n coll))))", "problem": 49, "user": "4e40529b535dc968683fc49a"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4e79a143535db169f9c796a2"}, {"code": "(fn [n coll]\n  (vector (take n coll) (drop n coll)))", "problem": 49, "user": "4e726914535d5021c1a89661"}, {"code": "(fn [n col]\n  [\n    (vec (take n col))\n    (vec (reverse (take (- (count col) n) (reverse col))))\n    ]\n  )", "problem": 49, "user": "4db7da66535d1e037afb2187"}, {"code": "(fn [n col] (conj [] (take n col) (nthnext col n)))", "problem": 49, "user": "4e794004535db169f9c796a1"}, {"code": "(fn [n s]\n  (let [x (keep-indexed #(vector (inc %) %2) s)\n        f (take n (map last x))\n        r (drop n (map last x))]\n    (list f r)))", "problem": 49, "user": "4daf907aedd6309eace4d17b"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4e6a5f5c535d8ccf87e9fed6"}, {"code": "(fn [n c]\n  (conj []  (take n c) (drop n c)))", "problem": 49, "user": "4e773be8535d324fb2983d6e"}, {"code": "(juxt take drop)", "problem": 49, "user": "4e6e3aac535d5021c1a89603"}, {"code": "(fn [n coll]\n  (list (take n coll) (nthnext coll n)))", "problem": 49, "user": "4e7c8fd1535db169f9c796be"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4e79ff2a535db169f9c796a9"}, {"code": "(fn [n c]\n  [(subvec (vec c) 0 n)\n   (subvec (vec c) n)])", "problem": 49, "user": "4e7c4290535db169f9c796bc"}, {"code": "(fn [n coll] \n      [ (take n coll) (take-last (- (count coll) n) coll)])", "problem": 49, "user": "4e739e13535dff18050a9c76"}, {"code": "(juxt take drop)", "problem": 49, "user": "4e7db3b4535db169f9c796e1"}, {"code": "(fn [n s] [(take n s) (drop n s)])", "problem": 49, "user": "4e7dd982535db169f9c796ee"}, {"code": "(fn [n s] [(take n s) (drop n s)])", "problem": 49, "user": "4e7dfab0535db169f9c796f9"}, {"code": "(fn [i w] [(take i w) (drop i w)])", "problem": 49, "user": "4e7e55ab535db169f9c79711"}, {"code": "#(list(take%1%2)(drop%1%2))", "problem": 49, "user": "4e7eff9e535db966e863cc38"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4e78c208535db95036265722"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4e7f4147535db966e863cc3d"}, {"code": "(fn my-split-at [n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "4e7f51eb535db966e863cc3f"}, {"code": "#(list (take %1 %2) (drop %1 %2) )", "problem": 49, "user": "4e7e93f5535db169f9c7971a"}, {"code": "(fn [n c] [(take n c)(drop n c)])", "problem": 49, "user": "4e5229dc535d302ef430da6f"}, {"code": "(fn [i seq] (conj [] (take i seq) (drop i seq)))", "problem": 49, "user": "4e7e05a6535db169f9c796fe"}, {"code": "(fn [n s] (vec (list (take n s) (drop n s))))", "problem": 49, "user": "4e6a73d0535d8ccf87e9fee7"}, {"code": "(fn [n c] [(take n c) (drop n c)])", "problem": 49, "user": "4e80aa10535db62dc21a62b1"}, {"code": "#(concat [(take %1 %2)] [(drop %1 %2)])", "problem": 49, "user": "4e70ed07535d5021c1a89643"}, {"code": "(fn [n s]\n  [(take n s) (drop n s)])", "problem": 49, "user": "4e7e6b51535db169f9c79712"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "4e80d71b535db62dc21a62b7"}, {"code": "(fn [n c] (list (take n c) (drop n c)))", "problem": 49, "user": "4e7f7e48535db966e863cc42"}, {"code": "(fn mysplit\n  [ind col]\n  (conj (conj [] (take ind col)) (drop ind col)))", "problem": 49, "user": "4e7ada51535db169f9c796ae"}, {"code": "(juxt take drop)", "problem": 49, "user": "4db858d1535d1e037afb218c"}, {"code": "(fn [nm a]\n    (list\n        (first (partition-all nm a))\n        (reduce concat (rest (partition-all nm a)))\n    )\n    \n)", "problem": 49, "user": "4e78dc98535db95036265724"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4e6ea1f5535d5021c1a8960e"}, {"code": "(fn [i c] (vector (vec (take i c)) (vec (drop i c))))", "problem": 49, "user": "4e837808535db62dc21a62d9"}, {"code": "(juxt take drop)", "problem": 49, "user": "4e823ed7535db62dc21a62c7"}, {"code": "(juxt take drop)", "problem": 49, "user": "4db1f7d223724b71670a9c07"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4e5a460f535d8a8b8723a2ab"}, {"code": "(juxt take drop)", "problem": 49, "user": "4e8612f8535db62dc21a62f2"}, {"code": "(fn [n-first sequence]\r\n    (loop [s sequence p1 (empty sequence) p2 (empty sequence) n n-first]\r\n\t   (if (empty? s)\r\n\t       [p1 p2]\r\n\t       (if (> n 0)\r\n\t\t   (recur (rest s) (conj p1 (first s)) p2 (dec n))\r\n\t\t   (recur (rest s) p1 (conj p2 (first s)) (dec n))))))", "problem": 49, "user": "4e821ca5535db62dc21a62c2"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4e8510e7535db62dc21a62e7"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4e707db6535d5021c1a8963a"}, {"code": "(juxt take drop)", "problem": 49, "user": "4db8ec47535d1e037afb219d"}, {"code": "(fn [n xs] [(take n xs) (drop n xs)])", "problem": 49, "user": "4e8681b7535dae1a5effa438"}, {"code": "(fn [n s]\n   [ (take n s), (drop n s) ])", "problem": 49, "user": "4e860e85535db62dc21a62f1"}, {"code": "(fn my-split [n coll] (vector\r\n  (vec (keep-indexed #(if (< %1 n) %2) coll))\r\n\t(vec (keep-indexed #(if (>= %1 n) %2) coll))))", "problem": 49, "user": "4e75d6b6535d7a570dd295c6"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4e80e0f2535db62dc21a62b8"}, {"code": "(fn [n s] [(take n s) (drop n s)])", "problem": 49, "user": "4e6a4954535d8ccf87e9fec0"}, {"code": "(fn sp[n s]\n    [(into [] (take n s))\n\t  (into [] (take-last (- (count s) n) s))])", "problem": 49, "user": "4e842ebb535db62dc21a62df"}, {"code": "(fn [n col] [(take n col) (drop n col)] )", "problem": 49, "user": "4e8768f6535dceadca469850"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4e6ebd4a535d5021c1a89610"}, {"code": "(fn [i coll] [(take i coll) (drop i coll)])", "problem": 49, "user": "4dfe65a1535d04ed9115e787"}, {"code": "(fn [n s]\n  (list (take n s) (drop n s)))", "problem": 49, "user": "4e89f46c535d3e98b8023288"}, {"code": "(fn [n coll] (list (take n coll) (drop n coll)))", "problem": 49, "user": "4daf36c2edd6309eace4d175"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4e8c1d97535d65386fec2127"}, {"code": "(fn [n coll]\r\n  (loop [i 0 split1 [] split2 []]\r\n    (cond\r\n      (= (inc i) (count coll)) [split1 (conj split2 (get coll i))]\r\n      (< i n) (recur (inc i) (conj split1 (get coll i)) split2)\r\n      :else (recur (inc i) split1 (conj split2 (get coll i))))))", "problem": 49, "user": "4e88feef535d8b9bb0147ca8"}, {"code": "(fn [n coll]\n  (loop [i 0, f [], s []]\n    (if (< i (count coll))\n      (if (< i n)\n        (recur (inc i) (conj f (coll i)) s)\n        (recur (inc i) f (conj s (coll i))))\n      [f s])))", "problem": 49, "user": "4e89f9e5535d3e98b8023289"}, {"code": "(fn [n sequence] [(take n sequence) (drop n sequence)])", "problem": 49, "user": "4e89de60535d3e98b8023285"}, {"code": "(fn [n coll]\n    [(take n coll) (drop n coll)])", "problem": 49, "user": "4e8aef69535d65386fec2114"}, {"code": "(fn [num col] [(take num col) (drop num col)])", "problem": 49, "user": "4e6dfe57535d5021c1a895fc"}, {"code": "(fn [n s]\n  (loop [accu '()\n   n n\n\t s s]\n    (if (= n 0)\n      (cons (reverse accu) (cons s '()))\n      (recur (cons (first s) accu) (- n 1) (rest s)))))", "problem": 49, "user": "4e82c062535db62dc21a62cc"}, {"code": "#(vector (take %1 %2)(drop %1 %2))", "problem": 49, "user": "4dcfbc44535d5973398f92a7"}, {"code": "(fn [x l] (conj (conj [] (take x l)) (reverse (take (- (count l) x) (reverse l)))))", "problem": 49, "user": "4e84836a535db62dc21a62e1"}, {"code": "#(loop [c 0 l [] r %2]\n  (if (= c %1)\n    (vector l r)\n    (recur (inc c) (conj l (first r)) (rest r))))", "problem": 49, "user": "4e8dc25f535d65386fec213a"}, {"code": "(fn [n coll]\n    (vector (take n coll) (drop n coll)))", "problem": 49, "user": "4e8e8c24535d65386fec2143"}, {"code": "(fn [n s]\n  ((fn splitter [i n s fs ls]\n    (if (empty? s)\n        (vector fs ls)\n        (if (< i n)\n            (splitter (inc i) n (rest s) (conj fs (first s)) ls)\n            (splitter (inc i) n (rest s) fs (conj ls (first s)))\n))) 0 n s [] []))", "problem": 49, "user": "4e73a9dc535dff18050a9c77"}, {"code": "(fn [n seqn]\n  [(take n seqn) (drop n seqn)])", "problem": 49, "user": "4e8944b6535d4ef0aa30db98"}, {"code": "(juxt take drop)", "problem": 49, "user": "4dfd018c535d04ed9115e77f"}, {"code": "(fn split [n sq]\n     (if (= 0 n)\n       (list () sq)\n       (let [rs (split (- n 1) (rest sq)),\n             f (first sq)]\n         (list (cons f (first rs)) (second rs)))))", "problem": 49, "user": "4e8f5eba535d65386fec214c"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4dc0ff08535d020aff1edf84"}, {"code": "(fn [n lista] (list (take n lista) (drop n lista)))", "problem": 49, "user": "4e8a0c82535d3e98b802328d"}, {"code": "(fn [x y] [(take x y) (drop x y)])", "problem": 49, "user": "4db016af838c48654951d9b9"}, {"code": "#(conj (conj [] (vec(take % %2))) (subvec %2 %))", "problem": 49, "user": "4e6f8431535d5021c1a8961e"}, {"code": "(fn [a ns] \n  (loop [counter 0 nums ns at a va [] vb []]\n    (if (= counter (count nums))\n      [(vec va) (vec vb)]\n      (if (>= counter at)\n        (recur (inc counter) nums at va (concat vb (list (nums counter))))\n        (recur (inc counter) nums at (concat va (list (nums counter))) vb)\n      )      \n    )    \n  )\n)", "problem": 49, "user": "4e8b73e4535d65386fec2120"}, {"code": "#(vector (subvec %2 0 %1) (subvec %2 %1))", "problem": 49, "user": "4e89ddf9535d3e98b8023284"}, {"code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "4e84f77c535db62dc21a62e5"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "4e8df08f535d65386fec213e"}, {"code": "(fn [n v] [(subvec v 0 n) (subvec v n)])", "problem": 49, "user": "4e8f4f64535d65386fec2149"}, {"code": "(fn [n c] (list (take n c) (drop n c)))", "problem": 49, "user": "4e9361c9535dbda64a6f6b0f"}, {"code": "(fn splitat [at li] ( conj (conj '() ((fn drop-first [n li] ( if (> n 0) (drop-first (- n 1) ( rest li)  ) li  ) )  at li) ) (drop-last (- (count li) at) li) ))", "problem": 49, "user": "4e8d5edd535d65386fec2134"}, {"code": "(fn fc-49 [n sq]\n    (loop [s1 []\n           s2 sq]\n        (if (= (count s1) n)\n            [s1 s2]\n            (recur (conj s1 (first s2))\n                   (rest s2)))))", "problem": 49, "user": "4e7f32ee535db966e863cc3a"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4e951ce5535dbda64a6f6b2e"}, {"code": "(juxt take drop)", "problem": 49, "user": "4e9660ec535dbda64a6f6b44"}, {"code": "#(-> [(take %1 %2) (drop %1 %2)])", "problem": 49, "user": "4e96557d535dbda64a6f6b43"}, {"code": "(fn [at seq]\n   (conj [] (vec (take at seq)) (vec (drop at seq))))", "problem": 49, "user": "4e955b95535dbda64a6f6b33"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4e781a2e535d324fb2983d74"}, {"code": "(fn [n l] [(take n l) (drop n l)])", "problem": 49, "user": "4e904d9c535d65386fec2152"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4e976f79535dbda64a6f6b55"}, {"code": "(juxt take drop)", "problem": 49, "user": "4e8f1ac6535d65386fec2146"}, {"code": "(fn [n vet]\n  (vector (take n vet) (drop n vet))\n)", "problem": 49, "user": "4e8b6f4d535d65386fec211e"}, {"code": "(fn[n c][(take n c)(drop n c)])", "problem": 49, "user": "4de8a7d7535d08e6dec9fdfe"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "4db13ff51254ad5b4805fa68"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4e994541535dbda64a6f6b64"}, {"code": "(fn my-split [pos coll]\n  (loop [result nil\n         p pos\n         c coll]\n    (if (not (= 1 p))\n      (recur (conj result (first c)) (dec p) (rest c))\n      (list (reverse (conj result (first c))) (rest c)))))", "problem": 49, "user": "4e7e241a535db169f9c79705"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4e98a6d0535dbda64a6f6b5e"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4e9c66e2535dbda64a6f6b7f"}, {"code": "(fn [n v]\n  (vector (take n v) (drop n v)))", "problem": 49, "user": "4e94a8b5535dbda64a6f6b16"}, {"code": "#(vec [(take %1 %2) (drop %1 %2)])", "problem": 49, "user": "4e9b22e2535dbda64a6f6b74"}, {"code": "(fn [x y] (list (take x y) (drop x y)))", "problem": 49, "user": "4e8d5911535d65386fec2133"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4e9b230c535dbda64a6f6b75"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4e7263a1535d5021c1a8965f"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4e9609ad535dbda64a6f6b3e"}, {"code": "(fn [n x]\r\n  (list (take n x) (drop n x)))", "problem": 49, "user": "4e81e29b535db62dc21a62bd"}, {"code": "(fn [a b] [(take a b) (drop a b)])", "problem": 49, "user": "4e9dafe1535dbda64a6f6b89"}, {"code": "(fn [n s] [(take n s) (drop n s)])", "problem": 49, "user": "4e9e0640535dbda64a6f6b91"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "4e72ac47535d5021c1a89666"}, {"code": "(fn [n xs]\n    (conj [] (take n xs) (drop n xs)))", "problem": 49, "user": "4e9fd521535d7eef3080729a"}, {"code": "(fn [x y] [(take x y) (drop x y)])", "problem": 49, "user": "4e975bce535dbda64a6f6b53"}, {"code": "(fn spliter [pivot s1] (vector (take pivot s1) (drop pivot s1)))", "problem": 49, "user": "4e9de526535dbda64a6f6b8e"}, {"code": "(juxt take drop)", "problem": 49, "user": "4e8516d0535db62dc21a62e8"}, {"code": "#(do [(take % %2) (drop % %2)])", "problem": 49, "user": "4db85bdd535d1e037afb218d"}, {"code": "(juxt take drop)", "problem": 49, "user": "4e9a8c0e535dbda64a6f6b72"}, {"code": "(fn[n coll]\n    [(take n coll) (drop n coll)])", "problem": 49, "user": "4e9e6bd6535dbda64a6f6b96"}, {"code": "#(list (vec (take %1 %2)) (vec (drop %1 %2)))", "problem": 49, "user": "4e9e7ce3535dbda64a6f6b98"}, {"code": "(fn [n s]\n  [(vec (take n s)) (vec (drop n s))])", "problem": 49, "user": "4dbb0f2d535d1e037afb21b1"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "4ea09fa4535d7eef308072aa"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4daee8e9edd6309eace4d166"}, {"code": "(fn [n s] [(take n s) (drop n s)])", "problem": 49, "user": "4ea092f4535d7eef308072a6"}, {"code": "(fn [n s]\n  (loop [s s\n         i 0\n         res []]\n    (if (= i n)\n      (conj [] res s)\n      (recur (rest s) (inc i) (conj res (first s))))))", "problem": 49, "user": "4e59b02c535d8a8b8723a2a2"}, {"code": "(fn [n l] (conj '() (drop n l) (take n l)))", "problem": 49, "user": "4e9c81e8535dbda64a6f6b80"}, {"code": "#(identity [(take % %2) (drop % %2)])", "problem": 49, "user": "4ea1b9e4535d7eef308072b8"}, {"code": "(fn [i s]\n  (vector (take i s) (drop i s)))", "problem": 49, "user": "4ea348ad535d7eef308072c4"}, {"code": "(juxt take drop)", "problem": 49, "user": "4ea0cfb0535d7eef308072ae"}, {"code": "(fn [n coll]\n  (loop [r n a [] b coll]\n    (if (= r 0)\n      [a b]\n      (recur (dec r) (conj a (first b)) (rest b)))))", "problem": 49, "user": "4dbd2aa3535d020aff1edf40"}, {"code": "#(vec [(take %1 %2) (drop %1 %2)])", "problem": 49, "user": "4ea41fc2535d7eef308072cb"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4e9e12b2535dbda64a6f6b92"}, {"code": "(fn [x y] (list (take x y) (drop x y)))", "problem": 49, "user": "4e9ff8d0535d7eef3080729c"}, {"code": "(juxt take drop)", "problem": 49, "user": "4e5af6d7535d8a8b8723a2b2"}, {"code": "(fn [n s]\n  [(take n s) (take-last (- (count s) n) s)])", "problem": 49, "user": "4ea67906535d7eef308072e4"}, {"code": "(fn [i lst]\n  (let [a \n    (keep-indexed (fn [index item]\n                      (when (< index i) item)) lst)\n        b\n    (keep-indexed (fn [index item]\n                      (when (>= index i) item)) lst)]\n      [a b]))", "problem": 49, "user": "4e9528ef535dbda64a6f6b32"}, {"code": "#(vector (subvec %2 0 %1) \n         (subvec %2 %1 (count %2)))", "problem": 49, "user": "4e7650c5535d324fb2983d68"}, {"code": "(fn [at seq] \n  (conj \n    []\n    (vec (take at seq)) \n    (vec (drop at seq))))", "problem": 49, "user": "4ea4fe1f535d7eef308072cf"}, {"code": "(fn [n ls]\n  [(for [x (range n)] (nth ls x)) \n  (for [x (range (- (count ls) n))] (nth ls (+ n x)))]\n)", "problem": 49, "user": "4ea57300535d7eef308072d5"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "4dad76588e77d6ed63f12a44"}, {"code": "(fn [x se] [(take x se) (drop x se)])", "problem": 49, "user": "4e9fde3c535d7eef3080729b"}, {"code": "#(list (take % %2)(drop % %2))", "problem": 49, "user": "4ea5e794535d7eef308072df"}, {"code": "(fn [i nums] [(vec (take i nums)) (vec (drop i nums))])", "problem": 49, "user": "4ea365e2535d7eef308072c5"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4db2eac3535df7e46ed9b6c8"}, {"code": "(fn split-a-seq [n lat]\r\n  (cons (take n lat) (cons (drop n lat) '())))", "problem": 49, "user": "4e8ddf32535d65386fec213c"}, {"code": "(fn split[n c1]\r\n  (conj [] (take n c1 ) (drop n c1)  )\r\n  )", "problem": 49, "user": "4e9def6b535dbda64a6f6b8f"}, {"code": "(fn [n s]\n  (conj '() (drop n s) (take n s) )\n)", "problem": 49, "user": "4dd1de4d535dae65d5c462d7"}, {"code": "#(cons (take % %2) (cons (drop % %2) '()))", "problem": 49, "user": "4e9d6a65535dbda64a6f6b87"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "4eaa96e1535d7eef3080730d"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4e8a460e535d65386fec2109"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4eab612d535d7eef30807316"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "4ea85846535d7eef308072f9"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4e7d2448535db169f9c796c8"}, {"code": "(juxt take drop)", "problem": 49, "user": "4ead6418535d7eef3080731f"}, {"code": "(fn [n coll]\n  (reduce (fn [[fir sec] [i item]]\n            (if (>= i n)\n              [fir (conj sec item)]\n              [(conj fir item) sec]))\n          [[] []]\n          (map vector (range) coll)))", "problem": 49, "user": "4eae5fe4535d7eef30807325"}, {"code": "(fn [n c] [(take n c) (drop n c)])", "problem": 49, "user": "4e8d86d5535d65386fec2136"}, {"code": "(fn [x y] (conj [] (subvec y 0 x) (subvec y x)))", "problem": 49, "user": "4ea9b80c535d7eef30807306"}, {"code": "#(list (take %1 %2)(drop %1 %2))", "problem": 49, "user": "4e58c019535d8a8b8723a297"}, {"code": "#(conj [] (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4eb0a757535d7eef3080733d"}, {"code": "(fn [x y]\n(cons (take x y) (cons (drop x y) '())))", "problem": 49, "user": "4eb0afed535d7eef3080733e"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4eaede1f535d7eef30807329"}, {"code": "(fn [pos data]\n  (conj [] (take pos data) (drop pos data)))", "problem": 49, "user": "4eb1dd39535d7eef30807345"}, {"code": "(fn s [n x] [(take n x) (drop n x)])", "problem": 49, "user": "4ea1ecfa535d7eef308072bb"}, {"code": "(fn [n s] [(take n s) (drop n s)])", "problem": 49, "user": "4eb2e6ca535d7eef3080734f"}, {"code": "(fn [n c]\n  (loop [n n c c h '()]\n(if (> n 0)\n(recur (dec n) (next c) (conj h (first c)))\n(cons (reverse h) (list c)))))", "problem": 49, "user": "4eb27fad535d7eef3080734a"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "4e949d18535dbda64a6f6b15"}, {"code": "(fn [n coll]\n    [(take n coll) (drop n coll)])", "problem": 49, "user": "4e89e939535d3e98b8023287"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4eb5750a535d7eef30807366"}, {"code": "(fn foo [x list]\n  (if (= x 0)\n    (vector [] list)\n    (let [res (foo (- x 1) (rest list))]\n      (vector (cons (first list) (first res)) (second res)))))", "problem": 49, "user": "4eb66737535d7eef3080736b"}, {"code": "(fn split [n,s] [(subvec s 0 n) (subvec s n (count s))])", "problem": 49, "user": "4e8b98fc535d65386fec2124"}, {"code": "#(vector (take %1 %2) (nthnext %2 %1))", "problem": 49, "user": "4eb01df4535d7eef30807337"}, {"code": "(fn [n s] [(take n s) (drop n s)])", "problem": 49, "user": "4eb80ce6535d7eef3080737d"}, {"code": "#(do [(take %1 %2) (drop %1 %2)])", "problem": 49, "user": "4eabb245535d7eef30807319"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4ea55757535d7eef308072d3"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "4eb97b2e535dfed6da9c6d54"}, {"code": "#(vec [(take % %2) (drop % %2)])", "problem": 49, "user": "4eb97234535dfed6da9c6d53"}, {"code": "(fn split-a-seq [n lat]\r\n  (cons (take n lat)\r\n  (cons (drop n lat) '())\r\n  )\r\n)", "problem": 49, "user": "4eb7ff08535d7eef30807379"}, {"code": "#(conj [(subvec %2 0 %1)] (subvec %2 %1))", "problem": 49, "user": "4eb9c82d535dfed6da9c6d5c"}, {"code": "(fn [n xv] [(subvec xv 0 n) (subvec xv n)])", "problem": 49, "user": "4ea7999e535d7eef308072ee"}, {"code": "(juxt take drop)", "problem": 49, "user": "4ebb78a2535dfed6da9c6d70"}, {"code": "(juxt take drop)", "problem": 49, "user": "4e82f85d535db62dc21a62ce"}, {"code": "(fn [x s]\n  [(take x s) (drop x s)])", "problem": 49, "user": "4ebc08a8535dfed6da9c6d7c"}, {"code": "(fn [n s]\n  [(take n s) (drop n s)])", "problem": 49, "user": "4dbdc9da535d020aff1edf4c"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4e6e2ac4535d5021c1a895ff"}, {"code": "(fn [n c] [(take n c) (drop n c)])", "problem": 49, "user": "4e8a0d5d535d3e98b802328e"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "4eac5bc1535d7eef3080731b"}, {"code": "(fn [n s] [(take n s) (drop n s)])", "problem": 49, "user": "4e1350af535d04ed9115e7d8"}, {"code": "(fn [n coll]\n  (list (take n coll) (drop n coll)))", "problem": 49, "user": "4dadb891c9a9d6ed3699dc57"}, {"code": "(fn [n x] [(take n x) (drop n x)])", "problem": 49, "user": "4ebf45c3535dfed6da9c6d9d"}, {"code": "(fn [a b] [(take a b) (drop a b)])", "problem": 49, "user": "4eb2d0ae535d7eef3080734e"}, {"code": "(fn [i v] \r\n  [(vec (take i v)) \r\n    (vec (drop i v))])", "problem": 49, "user": "4eb44d78535d7eef30807360"}, {"code": "(fn [n s]\n  [(take n s) (drop n s)])", "problem": 49, "user": "4ebe766d535dfed6da9c6d94"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "4ec132a0535dfed6da9c6da9"}, {"code": "(fn [n sequence]\n  [\n    (take n sequence) \n    (take-last (- (count sequence) n)\n               sequence)])", "problem": 49, "user": "4e570b60535d8a8b8723a286"}, {"code": "(fn [x,y] \r\n  (reduce \r\n    #(if (< (count (% 0)) x) \r\n      [(conj (% 0) %2) (% 1)]\r\n      [(% 0) (conj (% 1) %2)] \r\n    ) \r\n    [[][]] \r\n    y\r\n  )\r\n)", "problem": 49, "user": "4ec0c7ba535dfed6da9c6da4"}, {"code": "(partial\n(fn [c1 n c2]\n  (if (= n 0)\n    [c1 c2]\n    (recur (conj c1 (first c2))\n      (- n 1) (next c2))))\n[])", "problem": 49, "user": "4ec12577535dfed6da9c6da8"}, {"code": "(fn [i coll] ( vector (take i coll)(drop i coll) ))", "problem": 49, "user": "4ebd4448535dfed6da9c6d8f"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4ea0c284535d7eef308072ad"}, {"code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "4ec2fe3f535dcc7ae8597d4f"}, {"code": "(fn [x item-vector] (vector (vec (take x item-vector)) (vec (take-last (- (count item-vector) x) item-vector))))", "problem": 49, "user": "4ec12516535dfed6da9c6da7"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "4eb2eae5535d7eef30807351"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4ec34578535dcc7ae8597d51"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4e9519b4535dbda64a6f6b2d"}, {"code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "4eb51942535d7eef30807365"}, {"code": "(fn [n s] [(take n s) (nthnext s n)])", "problem": 49, "user": "4ec17677535dfed6da9c6dad"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4ec5d40d535d6d7199dd36b9"}, {"code": "#(list (take % %2)\n      (drop % %2))", "problem": 49, "user": "4ec6157b535d6d7199dd36c2"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4ec2f192535dcc7ae8597d4c"}, {"code": "(fn [n l]\n  [(take n l) (drop n l)])", "problem": 49, "user": "4eae2f9e535d7eef30807324"}, {"code": "(fn [N lst]\n  (conj\n    (vector (apply vector (take N lst)))\n    (apply vector (drop N lst))))", "problem": 49, "user": "4e117dea535d04ed9115e7c9"}, {"code": "(fn [n xs] (list (take n xs) (drop n xs)))", "problem": 49, "user": "4ec07699535dfed6da9c6da2"}, {"code": "(fn [x c] [(take x c) (drop x c)])\n; (juxt take drop) is a much better solution!", "problem": 49, "user": "4ebb20c0535dfed6da9c6d6f"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "4ec16c21535dfed6da9c6dac"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4dadc6f2c9a9d6ed4099dc57"}, {"code": "(fn [pos col]\n  (vector (take pos col) (drop pos col) )\n)", "problem": 49, "user": "4ec5bec6535d6d7199dd36b3"}, {"code": "(juxt take drop)", "problem": 49, "user": "4ec812d9535d6d7199dd36f0"}, {"code": "(fn [num col] [(take num col) (drop num col)])", "problem": 49, "user": "4ecb1641535d6d7199dd370e"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4ec70f26535d6d7199dd36dd"}, {"code": "(juxt take drop)", "problem": 49, "user": "4ec74de3535d6d7199dd36df"}, {"code": "(fn [n s] [(vec (take n s)) (vec (drop n s))])", "problem": 49, "user": "4ec6559a535d6d7199dd36c9"}, {"code": "(fn my-split [c coll]\n  (let [map-first #(map first %)]\n    (map map-first (partition-by #(< (second %) c)\n      (map vector coll (range))))))", "problem": 49, "user": "4e25176e535d04ed9115e829"}, {"code": "(fn [c s]\n  [\n    (take c s)\n    (drop c s)])", "problem": 49, "user": "4e6f578c535d5021c1a8961b"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4e7e4d5c535db169f9c7970f"}, {"code": "(fn [n coll]\n  [(take n coll)\n   (drop n coll)])", "problem": 49, "user": "4eb9ce75535dfed6da9c6d5e"}, {"code": "#(conj [] (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4eb13d60535d7eef3080733f"}, {"code": "(fn [n c] [(take n c) (drop n c)])", "problem": 49, "user": "4ecfb458535d44c135fd68bb"}, {"code": "#(list (take % %2) (take-last (- (count %2) %) %2))", "problem": 49, "user": "4ecbb249535df97575fdabdf"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4ed06ea6535d44c135fd68c4"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4ebef65e535dfed6da9c6d9b"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4ecf42b4535d1f5ad70dba3c"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4ecf1f51535d1f5ad70dba3a"}, {"code": "(fn [n s]\n   [(take n s) (drop n s)])", "problem": 49, "user": "4ed188c8535d44c135fd68cf"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4ecc147b535d23f0362276f7"}, {"code": "(juxt take drop)", "problem": 49, "user": "4db091b7838c48654951d9c2"}, {"code": "(fn[n,coll] [(take n coll) (drop n coll)] )", "problem": 49, "user": "4ec75829535d6d7199dd36e1"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4ec28d86535dfed6da9c6dbc"}, {"code": "(fn [n coll] (vector (take n coll)(drop n coll)))", "problem": 49, "user": "4ebc829e535dfed6da9c6d86"}, {"code": "(fn [n coll]                                                      \n  ((fn [n a b]                                                                  \n     (if (> n 0)                                                                \n       (recur (dec n) (conj a (first b)) (rest b))                              \n       [a b])) n [] coll))", "problem": 49, "user": "4ec75077535d6d7199dd36e0"}, {"code": "(fn [n v]\n  (vector (subvec v 0 n) (subvec v n)))", "problem": 49, "user": "4ec21058535dfed6da9c6dba"}, {"code": "(fn [n l] [(take n l) (drop n l)])", "problem": 49, "user": "4ed2b168535d44c135fd68dd"}, {"code": "(fn[x coll] (loop [n x  r [] c coll] (if (or (= n 0) (empty? c)) [r c]\n  \t\t\t\t (recur (dec n) (conj r (first c)) (rest c)))))", "problem": 49, "user": "4ea4e98a535d7eef308072ce"}, {"code": "(juxt take drop)", "problem": 49, "user": "4ec49231535dcc7ae8597d63"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4e65027c535d8ccf87e9fe6e"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "4ecaaa25535d6d7199dd3708"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4ebbf772535dfed6da9c6d76"}, {"code": "(fn [n s] [(take n s) (drop n s)])", "problem": 49, "user": "4ed292ac535d44c135fd68d9"}, {"code": "(fn [idx x]\n  (let [len (count x)]\n    [(take idx x) (drop idx x)]))", "problem": 49, "user": "4ec5cdb0535d6d7199dd36b8"}, {"code": "(fn [n xs] [(take n xs) (drop n xs)])", "problem": 49, "user": "4ed500bb535d10e5ff6f52d3"}, {"code": "#(vec [(vec (take %1 %2)) (vec (drop %1 %2))])", "problem": 49, "user": "4ed68752535d10e5ff6f52e2"}, {"code": "(fn [n list] [(take n list)(drop n list)])", "problem": 49, "user": "4dfd7ecf535d04ed9115e783"}, {"code": "(fn [n col]\n  (list (take n col) (drop n col)))", "problem": 49, "user": "4e7f8f85535db966e863cc44"}, {"code": "#(\n  (juxt \n    (partial take %1) \n    (partial drop %1)\n  ) \n  %2\n)", "problem": 49, "user": "4ece7617535d23f03622770c"}, {"code": "#(seq [(take % %2) (drop % %2)])", "problem": 49, "user": "4e5af45e535d8a8b8723a2b1"}, {"code": "(juxt take drop)", "problem": 49, "user": "4ed69ea4535d10e5ff6f52e3"}, {"code": "(fn [n x]\n  (list (take n x) (drop n x)))", "problem": 49, "user": "4e36e647535deb9a81d77f36"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4ece9ca9535d23f03622770f"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4ed578d1535d10e5ff6f52d9"}, {"code": "(fn split [n v]\n    [(subvec v 0 n) (subvec v n)])", "problem": 49, "user": "4ed72e51535d10e5ff6f52ee"}, {"code": "(fn my-split [n xs]\n  (cons (take n xs) (cons (drop n xs) [])))", "problem": 49, "user": "4dad8d4bc9a9d6ed1799dc57"}, {"code": "(fn [n c]\n  (vector (take n c) (drop n c)))", "problem": 49, "user": "4ec7def0535d6d7199dd36e9"}, {"code": "(fn split [at xs]\n  [(take at xs) (drop at xs)])", "problem": 49, "user": "4ed6238d535d10e5ff6f52de"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4eca40cd535d6d7199dd3703"}, {"code": "(fn [i x] [(take i x) (drop i x)])", "problem": 49, "user": "4ed94d69535d10e5ff6f5303"}, {"code": "(fn split [n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "4eda7cc3535d10e5ff6f530e"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4ec5aa1f535d6d7199dd36b0"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4edab806535d10e5ff6f5311"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4ed6ac40535d10e5ff6f52e4"}, {"code": "(juxt take drop)", "problem": 49, "user": "4ed0e139535d44c135fd68c7"}, {"code": "(juxt take drop)", "problem": 49, "user": "4ede8789535d10e5ff6f5337"}, {"code": "(fn [n lst] [(take n lst) (drop n lst)])", "problem": 49, "user": "4ecfa05c535d44c135fd68b9"}, {"code": "(fn [e v]\r\n  (conj [] (vec (take e v)) (vec (drop e v)))\r\n)", "problem": 49, "user": "4e94aa18535dbda64a6f6b1e"}, {"code": "(fn te [valor x]\r\n  (conj [] (vec(take valor x)) (vec(drop valor x)) )\r\n)", "problem": 49, "user": "4edf92f0535d10e5ff6f5341"}, {"code": "(fn [n l]\n  (letfn [(shift [n l1 l2]\n            (if (or (zero? n) (empty? l2))\n                (vector l1 l2)\n                (shift (dec n) (concat l1 (vector (first l2))) (rest l2))))]\n    (shift n [] l)))", "problem": 49, "user": "4ede8e1d535d10e5ff6f5339"}, {"code": "(fn[n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "4dbf7a31535d020aff1edf75"}, {"code": "(juxt take drop)", "problem": 49, "user": "4edeac6b535d10e5ff6f533a"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4ebd33e4535dfed6da9c6d8e"}, {"code": "(juxt take drop)", "problem": 49, "user": "4eb955da535dfed6da9c6d50"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "4ed27f9f535d44c135fd68d5"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "4e89ff3d535d3e98b802328a"}, {"code": "(juxt take drop)", "problem": 49, "user": "4edd038c535d10e5ff6f5327"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4ec6357a535d6d7199dd36c5"}, {"code": "(fn [index coll] (vector (take index coll) (drop index coll)))", "problem": 49, "user": "4ea11921535d7eef308072af"}, {"code": "(fn [n col]\n  [(vec (take n col)) (vec (drop n col))])", "problem": 49, "user": "4e52777f535d302ef430da76"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "4ee2da14535d10e5ff6f536c"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4e95f5a5535dbda64a6f6b3b"}, {"code": "(fn [n xs] [(take n xs) (drop n xs)])", "problem": 49, "user": "4ee3b586535d10e5ff6f5371"}, {"code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "4ed9fe5f535d10e5ff6f5308"}, {"code": "(fn [n sq]\r\n  (let [fs (take n sq)\r\n        sn (drop n sq)]\r\n    [fs sn]))", "problem": 49, "user": "4ee40938535d10e5ff6f5375"}, {"code": "(fn [n s] (list (take n s) (drop n s)))", "problem": 49, "user": "4ee26f01535d10e5ff6f5368"}, {"code": "(fn [n seq] (vector (take n seq) (drop n seq)))", "problem": 49, "user": "4edd4b77535d10e5ff6f5328"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "4e7e8684535db169f9c79717"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4e944706535dbda64a6f6b11"}, {"code": "(fn[a b][ (vec (take a b)) (vec (drop a b))])", "problem": 49, "user": "4edf5dc6535d10e5ff6f5340"}, {"code": "#(conj [] (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4ee88269535d93acb0a6687f"}, {"code": "(fn [at coll]\n  [(take at coll) (drop at coll)])", "problem": 49, "user": "4eddcbbf535d10e5ff6f532d"}, {"code": "(fn [n c] [(take n c) (drop n c)])", "problem": 49, "user": "4ee7ef87535d93acb0a66872"}, {"code": "(fn [n l]\n  [(take n l) (drop n l)])", "problem": 49, "user": "4ee82539535d93acb0a66878"}, {"code": "(fn split [nr lst]\n  (loop [flist [] slist lst i nr]\n    (if (= i 0)\n     (list flist slist)\n      (recur (conj flist (first slist) ) (rest slist) (dec i)))))", "problem": 49, "user": "4ec3b393535dcc7ae8597d59"}, {"code": "#(cons (take %1 %2) (list (drop %1 %2)))", "problem": 49, "user": "4ee82223535d93acb0a66877"}, {"code": "(fn [n v] [(take n v) (drop n v)])", "problem": 49, "user": "4ee9ddb8535d93acb0a66896"}, {"code": "(juxt take drop)", "problem": 49, "user": "4eb30868535d7eef30807355"}, {"code": "(fn [n x] [(vec (take n x)) (vec (drop n x))])", "problem": 49, "user": "4ee9d697535d93acb0a66895"}, {"code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "4ed7b617535d10e5ff6f52f3"}, {"code": "#(list(take % %2) (drop % %2))", "problem": 49, "user": "4ed19f00535d44c135fd68d1"}, {"code": "#(vec [(take % %2) (drop % %2)])", "problem": 49, "user": "4ee63d8d535d93acb0a66859"}, {"code": "(fn [n s] [(take n s) (drop n s)])", "problem": 49, "user": "4ee7d177535d93acb0a6686f"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "4dadc27ec9a9d6ed3c99dc57"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4eebfd03535d93acb0a668ab"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4eebc5da535d93acb0a668aa"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4ee868be535d93acb0a6687d"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "4e894068535d4ef0aa30db97"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4edee6a2535d10e5ff6f533e"}, {"code": "(fn[x y] [(take x y) (drop x y)])", "problem": 49, "user": "4daeabf6edd6309eace4d15c"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "4eeae8f0535d93acb0a668a2"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "4ee88bfb535d93acb0a66881"}, {"code": "(juxt take drop)", "problem": 49, "user": "4e6a0667535d8ccf87e9fe9e"}, {"code": "(fn [d s] [(take d s) (drop d s)])", "problem": 49, "user": "4eecdd66535d93acb0a668b9"}, {"code": "(fn [n l] [(take n l) (drop n l)])", "problem": 49, "user": "4db883e1535d1e037afb2198"}, {"code": "#(cons (take % %2) (cons (drop % %2) nil))", "problem": 49, "user": "4ef0a39b535dced4c769f20c"}, {"code": "(fn [n l]\n  (vector (take n l)\n          (drop n l)))", "problem": 49, "user": "4daea889edd6309eace4d15b"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4ee6400c535d93acb0a6685b"}, {"code": "(fn [n s]\n  (loop [acc [] c n r s]\n    (cond \n      (not (seq r)) [acc]\n      (= 0 c) [acc r]\n      :else (recur (conj acc (first r))\n                   (dec c)\n                   (rest r)))))", "problem": 49, "user": "4ef0a38e535dced4c769f20b"}, {"code": "(fn [n coll] (reduce #(if (< (count (first %1)) n) [(conj (first %1) %2) (second %1)]\n                                                   [(first %1) (conj (second %1) %2)])\n                                              [[] []] coll))", "problem": 49, "user": "4ef0a39b535dced4c769f20d"}, {"code": "(fn[n lst]\n  (loop [k 1\n         first-half []\n         second-half []\n         elts lst]\n    (cond (= [] elts) (vector first-half second-half)\n          (> k n) (recur (inc k) \n                          first-half \n                          (conj second-half (first elts))\n                          (rest elts))\n          :default (recur (inc k)\n                          (conj first-half (first elts))\n                          second-half\n                          (rest elts)))))", "problem": 49, "user": "4e49a7bb535dc968683fc4c6"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4ee3afde535d10e5ff6f5370"}, {"code": "#(concat \n  (list (take %1 %2)) \n  (list (drop %1 %2)))", "problem": 49, "user": "4ee91d00535d93acb0a6688b"}, {"code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "4ec6297b535d6d7199dd36c4"}, {"code": "(juxt take drop)", "problem": 49, "user": "4ef2d243535dced4c769f221"}, {"code": "(juxt take drop)", "problem": 49, "user": "4ef49c2c535dced4c769f238"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4ef4e5fa535dced4c769f242"}, {"code": "(fn [n xs]\n  (let [[left right]\n        (->> (map-indexed vector xs)\n          (split-with (fn [[idx x]] (< idx n))))]\n    [(vec (map second left))\n     (vec (map second right))]))", "problem": 49, "user": "4edecdae535d10e5ff6f533c"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "4ef41f26535dced4c769f230"}, {"code": "(fn [n lst] (list (take n lst) (drop n lst)))", "problem": 49, "user": "4ec18451535dfed6da9c6db0"}, {"code": "(juxt take drop)", "problem": 49, "user": "4ef667c4535dced4c769f24c"}, {"code": "(fn [n s]\r\n     (loop [[x & xs :as xss] s, acc [], i 0]\r\n       (if (or (empty? xss) (= i n))\r\n         [acc xss]\r\n         (recur xs (conj acc x) (inc i)))))", "problem": 49, "user": "4ef1ee67535dced4c769f219"}, {"code": "(fn [n s] [(vec (take n s)) (vec (drop n s))])", "problem": 49, "user": "4ef355e3535dced4c769f228"}, {"code": "(juxt take drop)", "problem": 49, "user": "4ef77c82535dced4c769f253"}, {"code": "#(let  [[f & all] (partition-all %1 %2) ] [f (reduce concat all)])", "problem": 49, "user": "4ef5c7ce535dced4c769f248"}, {"code": "(fn [n col]\n  [(take n col) (drop n col)])", "problem": 49, "user": "4ef4acf8535dced4c769f23c"}, {"code": "(fn [a b] [(take a b) (drop a b)])", "problem": 49, "user": "4ef57a7f535dced4c769f246"}, {"code": "#(conj [] (take % %2) (drop % %2))", "problem": 49, "user": "4ef992c8535dced4c769f268"}, {"code": "(fn [n coll]\n    (loop [n n\n           a []\n           b (seq coll)]\n      (if (zero? n)\n        [a (vec b)]\n        (recur (dec n) (conj a (first b)) (rest b)))))", "problem": 49, "user": "4e5be681535d8a8b8723a2bc"}, {"code": "(fn [a b ] [(drop-last (- (count b) a) b) (drop a b)])", "problem": 49, "user": "4ef4d24d535dced4c769f23f"}, {"code": "(fn my-split [n s]\n  (list (take n s) (nthnext s n)))", "problem": 49, "user": "4efb92ce535dced4c769f27a"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "4ec5d62c535d6d7199dd36ba"}, {"code": "(fn [n c] [(take n c) (drop n c)])", "problem": 49, "user": "4eee5c7f535d93acb0a668c6"}, {"code": "(fn split-seq [n xs]\n  (cons (take n xs) (list (drop n xs))))", "problem": 49, "user": "4ef6f5ea535dced4c769f250"}, {"code": "#(conj [(take %1 %2)](take-last (- (.size %2) %1) %2))", "problem": 49, "user": "4ed2dd98535d44c135fd68e2"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4e6fe3a6535d5021c1a89629"}, {"code": "(fn [i xs] [(take i xs) (drop i xs)])", "problem": 49, "user": "4ef8d47c535dced4c769f261"}, {"code": "(fn [n xs][(take n xs) (drop n xs)])", "problem": 49, "user": "4efcac3a535de96065cf507e"}, {"code": "(fn [a b] [(take a b) (drop a b)])", "problem": 49, "user": "4ef4c1ff535dced4c769f23e"}, {"code": "#(cons (take % %2) (list (drop % %2)))", "problem": 49, "user": "4efb2fd7535dced4c769f274"}, {"code": "(fn [n xs]\n  (list (take n xs) (drop n xs)))", "problem": 49, "user": "4ee67d74535d93acb0a66861"}, {"code": "(juxt take drop)", "problem": 49, "user": "4ed9354f535d10e5ff6f5301"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4effb663535dcb61093f6a2e"}, {"code": "#(let [f (take % %2) l (drop % %2)] [f l])", "problem": 49, "user": "4efb87f7535dced4c769f279"}, {"code": "(fn [a b] [(take a b) (drop a b)])", "problem": 49, "user": "4f017593535dcb61093f6a36"}, {"code": "#(let [a (take %1 %2) b (list (drop %1 %2))] (cons a b))", "problem": 49, "user": "4ee2baa8535d10e5ff6f536b"}, {"code": "#(list (take % %2) (drop % %2))\n;juxt take drop is better", "problem": 49, "user": "4dd88803535d2dad7130b5d9"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "4f01ff83535dcb61093f6a3a"}, {"code": "#(concat [(take %1 %2)] [(drop %1 %2)])", "problem": 49, "user": "4f031eac535dcb61093f6a67"}, {"code": "#(list (subvec %2 0 %1)\n       (subvec %2 %1 (count %2)))", "problem": 49, "user": "4db8f6c4535d1e037afb219e"}, {"code": "(fn [n s] [(take n s) (drop n s)])", "problem": 49, "user": "4f03d0fe535dcb61093f6b6d"}, {"code": "(fn [n xs] (list (take n xs) (drop n xs)))", "problem": 49, "user": "4ee82ce9535d93acb0a6687a"}, {"code": "(juxt take drop)", "problem": 49, "user": "4f01c938535dcb61093f6a39"}, {"code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "4e8239d6535db62dc21a62c4"}, {"code": "#((juxt take drop) % %2)", "problem": 49, "user": "4f036d9b535dcb61093f6ac1"}, {"code": "(fn [n s] (list (take n s) (take-last (- (count s) n) s)))", "problem": 49, "user": "4f038017535dcb61093f6afa"}, {"code": "(juxt take drop)", "problem": 49, "user": "4f03857e535dcb61093f6b0d"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4e6cf521535de274dd8d818b"}, {"code": "(juxt take drop)", "problem": 49, "user": "4f039a8b535dcb61093f6b36"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4f047c07535dcb61093f6bcd"}, {"code": "(fn my-split-at\n  ([pos iseq] (conj '() (drop pos iseq) (take pos iseq))))", "problem": 49, "user": "4eee3e6a535d93acb0a668c3"}, {"code": "(fn split* [k l]\n  (vector (apply vector (take k l))\n          (apply vector (drop k l))))", "problem": 49, "user": "4f04a06d535dcb61093f6bd9"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4f0397ee535dcb61093f6b30"}, {"code": "(fn [n xs] [(take n xs) (drop n xs)])", "problem": 49, "user": "4ef6e689535dced4c769f24f"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4f043ed1535dcb61093f6bb4"}, {"code": "#(loop [a [] b %2]\n  (if (= %1 (count a))\n    (list a b)\n    (recur (conj a (first b)) (rest b))))", "problem": 49, "user": "4ec5a5f9535d6d7199dd36ad"}, {"code": "#(cons (take % %2) [(drop % %2)])", "problem": 49, "user": "4f062d4a535dcb61093f6c08"}, {"code": "#(vector (take %1 %2) (take-last (- (count %2) %1) %2))", "problem": 49, "user": "4f032977535dcb61093f6a6c"}, {"code": "(fn [index l]\n  (loop [i index\n         end l\n         start []]\n    (if (= i 0)\n      [start end]\n      (recur (dec i) (next end) (conj start (first end))))))", "problem": 49, "user": "4f04f847535dcb61093f6beb"}, {"code": "(fn [n X]\r\n  (loop [c 0 a [] b []]\r\n\t\t(if (< c (count X))\r\n\t\t\t(if (< c n)\r\n\t\t\t\t(recur (inc c) (conj a (nth X c)) b)\r\n\t\t\t\t(recur (inc c) a (conj b (nth X c)))\r\n\t\t\t)\r\n\t\t\t[a b]\r\n\t\t)\r\n\t)\r\n)", "problem": 49, "user": "4f031883535dcb61093f6a5e"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "4efec33f535dcb61093f6a2a"}, {"code": "(fn [n s]\n  (list (take n s) (drop n s)))", "problem": 49, "user": "4ef0eaef535dced4c769f211"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4f038bcd535dcb61093f6b1d"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "4f04b66b535dcb61093f6bdd"}, {"code": "(fn my-split-helper [n l]\r\n    (loop [l l cnt 1 a []]\r\n      (if (empty? l)\r\n        (reverse a)\r\n        (if (< cnt n)\r\n          (recur (rest l) (inc cnt) (cons (first l) a))\r\n          (cons (reverse (cons (first l) a)) (list (rest l)))))))", "problem": 49, "user": "4f039524535dcb61093f6b2c"}, {"code": "(juxt take drop)", "problem": 49, "user": "4f083048535dcb61093f6c33"}, {"code": "(fn [n a] [(take n a) (drop n a)])", "problem": 49, "user": "4f0664bd535dcb61093f6c0f"}, {"code": "(fn [i in-seq]\n  (vector (vec (take i in-seq)) (vec (drop i in-seq))))", "problem": 49, "user": "4ef4ab95535dced4c769f23b"}, {"code": "(fn [n s] [(take n s) (drop n s)])", "problem": 49, "user": "4e1f9bb5535d04ed9115e80d"}, {"code": "(fn [n x] [(take n x) (drop n x)])", "problem": 49, "user": "4f0365fc535dcb61093f6aa4"}, {"code": "(fn [n seq] (list (take n seq) (drop n seq)))", "problem": 49, "user": "4f082ad1535dcb61093f6c32"}, {"code": "(fn [x c] [(vec (take x c)) (drop x c)])", "problem": 49, "user": "4dc1e1e4535d020aff1edf90"}, {"code": "(fn [n s]\n  (loop [s_ s i n ret '()]\n    (cond\n      (not s_) (list s '())\n      (= i 0) (list (into '() ret) s_)\n      :else (recur (next s_) (dec i) (conj ret (first s_))))))", "problem": 49, "user": "4f050dec535dcb61093f6bef"}, {"code": "(fn [n c] [(take n c) (drop n c)])", "problem": 49, "user": "4e6a6be7535d8ccf87e9fee1"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4f0381db535dcb61093f6b02"}, {"code": "(fn my-split-at [n coll]\n  (if (<= n 0)\n    [[] coll]\n    (let [[before after] (my-split-at (- n 1) (rest coll))]\n      [(cons (first coll) before) after])))", "problem": 49, "user": "4f03d4dc535dcb61093f6b6e"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4f06dcad535dcb61093f6c16"}, {"code": "(juxt take drop)", "problem": 49, "user": "4f039bbe535dcb61093f6b39"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4f0a4e7e535d0136e6c222f4"}, {"code": "(fn [n xs] (list (take n xs) (drop n xs)))", "problem": 49, "user": "4de760a3535d08e6dec9fdf9"}, {"code": "#(seq [(take % %2) (drop % %2)])", "problem": 49, "user": "4f047542535dcb61093f6bc7"}, {"code": "(juxt take drop)", "problem": 49, "user": "4f08b15b535dcb61093f6c40"}, {"code": "(fn our-split [a b]\r\n    (loop [cnt 0 acc1 [] acc2 b]\r\n       (if (>= cnt a)\r\n            (list acc1 acc2)\r\n          (recur (inc cnt) \r\n                 (conj acc1 (first acc2))\r\n                 (rest acc2\r\n                 )))))", "problem": 49, "user": "4ef0f1a1535dced4c769f212"}, {"code": "(fn [n coll]\n  (vector (take n coll) (drop n coll))\n)", "problem": 49, "user": "4f03154a535dcb61093f6a58"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4f070ce6535dcb61093f6c1e"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4f067029535dcb61093f6c12"}, {"code": "(juxt take drop)", "problem": 49, "user": "4f052eaf535dcb61093f6bf3"}, {"code": "(fn my-split [x coll]\n  (cons (take x coll) (cons (drop x coll) '())))", "problem": 49, "user": "4eb2c45e535d7eef3080734d"}, {"code": "(fn my-split [n xs] \n  [(take n xs) (drop n xs)])", "problem": 49, "user": "4f0660ee535dcb61093f6c0d"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4f0b2028535d0136e6c222ff"}, {"code": "(fn my-split-at [n coll]\n  (vector (take n coll) (drop n coll)))", "problem": 49, "user": "4e95a440535dbda64a6f6b37"}, {"code": "(juxt take drop)", "problem": 49, "user": "4ee67364535d93acb0a6685f"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "4eeaf88f535d93acb0a668a3"}, {"code": "(fn [n s]\n  [(take n s) (drop n s)])", "problem": 49, "user": "4f0bc223535d0136e6c22307"}, {"code": "(fn [n xs] (list (take n xs) (nthnext xs n)))", "problem": 49, "user": "4f037bb5535dcb61093f6aec"}, {"code": "#(cons (take %1 %2) (cons (drop %1 %2) nil))", "problem": 49, "user": "4ef89fb0535dced4c769f260"}, {"code": "(fn split [n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "4e2d84bf535deb9a81d77f09"}, {"code": "(fn [n l] [(take n l) (drop n l)])", "problem": 49, "user": "4eecc3a0535d93acb0a668b3"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4f089f1a535dcb61093f6c3c"}, {"code": "(fn [n col] [(take n col) (drop n col)])", "problem": 49, "user": "4f03ac2d535dcb61093f6b4a"}, {"code": "(fn [n coll]\n  (vector (first(partition n coll)) (drop n coll))\n)", "problem": 49, "user": "4eaa66eb535d7eef3080730b"}, {"code": "(fn [n s] [(take n s)(take-last (- (count s) n) s)])", "problem": 49, "user": "4eff81ca535dcb61093f6a2d"}, {"code": "#(list (take % %2) (take-last (- (count %2) %) %2))", "problem": 49, "user": "4f0333f6535dcb61093f6a77"}, {"code": "#(vector (into [] (take %1 %2)) (into [] (drop %1 %2)))", "problem": 49, "user": "4f038567535dcb61093f6b0c"}, {"code": "(fn my-split-at [n coll]\n  (vector\n    (take n coll)\n    (take-last (- (count coll) n) coll)))", "problem": 49, "user": "4ec1b80c535dfed6da9c6db6"}, {"code": "(fn sp [n s]\n  (let [len (count s)]\n    [(take n s) (take (- len n) (drop n s))]))", "problem": 49, "user": "4f0ef874535d0136e6c22328"}, {"code": "(fn [x y] (cons (take x y) [(drop x y)]))", "problem": 49, "user": "4f03b3fb535dcb61093f6b52"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4f0c4518535d0136e6c2230b"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "4f0f174c535d0136e6c22330"}, {"code": "(juxt take drop)", "problem": 49, "user": "4ebcb8ff535dfed6da9c6d8a"}, {"code": "#(let [x %1 y %2] (vector (subvec y 0 x) (subvec y x)))", "problem": 49, "user": "4f066916535dcb61093f6c10"}, {"code": "(fn [n xs] (vector (vec (take n xs)) (vec (drop n xs))))", "problem": 49, "user": "4efd98fa535de96065cf5086"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "4e9a3a03535dbda64a6f6b70"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4f0e995e535d0136e6c22326"}, {"code": "(fn spli\n  [n coll]\n    [(take n coll) (drop n coll)])", "problem": 49, "user": "4f10175e535d64f603146411"}, {"code": "(fn [at y] [(take at y) \n(take-last (- (count y) at) \ny)])", "problem": 49, "user": "4f00f997535dcb61093f6a34"}, {"code": "(fn [n seq] [(take n seq) (drop n seq)])", "problem": 49, "user": "4f13047d535d64f60314642c"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4f1052b9535d64f603146418"}, {"code": "(juxt take drop)", "problem": 49, "user": "4f0446f9535dcb61093f6bb8"}, {"code": "(fn [n seq] [(take n seq) (drop n seq)])", "problem": 49, "user": "4ed55b5d535d10e5ff6f52d8"}, {"code": "(fn my-split-at [n coll]                                                                                                                     \r\n    [(take n coll)                                                                                                                            \r\n     (drop n coll)])", "problem": 49, "user": "4f149e0f535d64f60314643d"}, {"code": "#(list (vec (take % %2)) (vec (drop % %2)))", "problem": 49, "user": "4ede361a535d10e5ff6f5332"}, {"code": "(fn [num s]\n    (cons (take num s) (list (drop num s))))", "problem": 49, "user": "4f128865535d64f603146428"}, {"code": "#(vec [(take %1 %2) (drop %1 %2)])", "problem": 49, "user": "4f1595da535d64f603146444"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4f12ab23535d64f603146429"}, {"code": "(fn sa [n seq] [(take n seq) (drop n seq)])", "problem": 49, "user": "4f048f67535dcb61093f6bd3"}, {"code": "(fn [n coll] \n  [(take n coll) (drop n coll)])", "problem": 49, "user": "4f11b078535d64f603146422"}, {"code": "#(list (take % %2) (nthnext %2 %))", "problem": 49, "user": "4f0c84ce535d0136e6c2230e"}, {"code": "(fn [i col] (list (take i col) (take-last (- (count col) i) col)))", "problem": 49, "user": "4f0e4ebd535d0136e6c22322"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "4ee4f4a9535d1385b2869d85"}, {"code": "(fn [n, v]\n  (vector (subvec v 0 n) (subvec v n)))", "problem": 49, "user": "4edffe54535d10e5ff6f5347"}, {"code": "(fn [n x]\n  (loop [todo x\n         acc []\n         counter n]\n     (if (zero? counter)\n      [acc todo]\n      (recur (subvec todo 1) (conj acc (first todo)) (dec counter)))))", "problem": 49, "user": "4f08a8a2535dcb61093f6c3d"}, {"code": "(fn [a b]\n  ((fn myFac [data n cnt result]\n    (if (= cnt n)\n      [result data]\n      (myFac\n        (rest data)\n        n\n        (inc cnt)\n        (conj result (first data))\n      )\n    )\n  ) b a 0 [])\n)", "problem": 49, "user": "4f16d6ed535d64f60314644f"}, {"code": "(fn [n x] [ (take n x) (drop n x)])", "problem": 49, "user": "4ea09441535d7eef308072a7"}, {"code": "(fn [c x] (vector (subvec x 0 c) (subvec x  c)))", "problem": 49, "user": "4e6b6294535d8ccf87e9ff11"}, {"code": "#(vector\n  (take %1 %2)\n  (drop %1 %2))", "problem": 49, "user": "4f1b0ab3535d64f603146474"}, {"code": "(juxt take drop)", "problem": 49, "user": "4f1b92d1535d64f60314647b"}, {"code": "(fn my-split [n s]\n  (let [[f & r] (partition-all n s)]\n    [f (apply concat r)]))", "problem": 49, "user": "4f0f40d3535d0136e6c2233b"}, {"code": "#(vector (take %1 %2) (take-last (- (count %2) %1) %2))", "problem": 49, "user": "4ea31da2535d7eef308072c1"}, {"code": "(fn splt [n coll] \n    (vector\n      (vec (take n (seq coll)))\n      (vec (drop n (seq coll)))\n    )\n)", "problem": 49, "user": "4f036d6e535dcb61093f6ac0"}, {"code": "(fn [n sq]\n  (cons (take n sq) (cons (drop n sq) nil)))", "problem": 49, "user": "4e7d1c22535db169f9c796c5"}, {"code": "#(list (take % %2)(drop % %2))", "problem": 49, "user": "4ee7d113535d93acb0a6686e"}, {"code": "(fn my-split [p s] [(take p s) (take-last (- (count s) p) s)])", "problem": 49, "user": "4f03ebf7535dcb61093f6b7f"}, {"code": "(fn [n lst] [(take n lst) (drop n lst)])", "problem": 49, "user": "4f1fd734535d64f6031464a5"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4f032f30535dcb61093f6a73"}, {"code": "(fn [n s] [(take n s) (drop n s)])", "problem": 49, "user": "4f0cc259535d0136e6c22310"}, {"code": "(fn [ p s] ( conj '() (drop p s) (take p s) ) )", "problem": 49, "user": "4f030775535dcb61093f6a43"}, {"code": "#(list (take %1 %2) (subvec %2 %1))", "problem": 49, "user": "4eccb190535d23f0362276fe"}, {"code": "(fn [x col]\n  [(take x col) (drop x col)])", "problem": 49, "user": "4f1c2a3a535d64f603146480"}, {"code": "(fn [sep col] (vector (take sep col) (drop sep col)))", "problem": 49, "user": "4f246938e4b0d66497709fec"}, {"code": "(fn [at coll] (list (take at coll) (drop at coll)))", "problem": 49, "user": "4eb02674535d7eef30807338"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4f251302e4b0d66497709ff0"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4f1c9652535d64f603146483"}, {"code": "(fn [n s] [(take n s) (drop n s)])", "problem": 49, "user": "4f215350e4b0d66497709fd0"}, {"code": "(fn cutit [n lst]\n  (vector (subvec lst 0 n) (subvec lst n)))", "problem": 49, "user": "4f00e9c7535dcb61093f6a33"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4f1abbfb535d64f60314646e"}, {"code": "(fn [n x] [(take n x) (drop n x)])", "problem": 49, "user": "4f0d093b535d0136e6c22313"}, {"code": "(fn [x y] [(take x y) (drop x y)])", "problem": 49, "user": "4f26c487e4b0d6649770a006"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4f294c48e4b0d6649770a023"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4f26d6d9e4b0d6649770a007"}, {"code": "#(conj [] (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4f2965ffe4b0d6649770a029"}, {"code": ";#(list (take % %2) (nthnext %2 %))\r\n\r\n(fn [n xs]\r\n  [(take n xs) (drop n xs)])", "problem": 49, "user": "4f07c8c3535dcb61093f6c2d"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4f280840e4b0d6649770a010"}, {"code": "(fn [num, sq] [(take num sq) (drop num sq)] )", "problem": 49, "user": "4f21838fe4b0d66497709fd2"}, {"code": "(fn [n xs] (vector (take n xs) (drop n xs)))", "problem": 49, "user": "4f2a35ace4b0d6649770a03a"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4f29cdc8e4b0d6649770a033"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4e8ad247535d65386fec2111"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4f0891a2535dcb61093f6c3b"}, {"code": "#(list\n    (take % %2)\n    (drop % %2))", "problem": 49, "user": "4f03688d535dcb61093f6aac"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4f230dfbe4b0d66497709fe0"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4f2c593ee4b0d6649770a053"}, {"code": "(fn [cnt seq]\n    [(take cnt seq) (drop cnt seq)])", "problem": 49, "user": "4e48b61d535dc968683fc4be"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4f1d1d95535d64f603146488"}, {"code": "(fn [n coll]\n  (vector (vec (take n coll)) (vec (drop n coll))))", "problem": 49, "user": "4e131443535d04ed9115e7d3"}, {"code": "(fn [n s] (cons (take n s) [(drop n s)]))", "problem": 49, "user": "4f1d1299535d64f603146487"}, {"code": "(juxt take drop)", "problem": 49, "user": "4e6a5a32535d8ccf87e9fed0"}, {"code": "(fn [n lst]\n  (cons (take n lst) (list (drop n lst))))", "problem": 49, "user": "4f28c979e4b0d6649770a01a"}, {"code": "(fn [i s]\n   [(subvec s 0 i)\n    (subvec s i)])", "problem": 49, "user": "4f301d02e4b0d6649770a072"}, {"code": "(fn [n xs]\n   (list(take n xs) (drop n xs)))", "problem": 49, "user": "4f2ef48be4b0d6649770a06c"}, {"code": "(fn [n coll]\n  [ (take n coll) (drop n coll)])", "problem": 49, "user": "4e1248b1535d04ed9115e7cf"}, {"code": "(fn [n c] [(take n c) (nthnext c n)])", "problem": 49, "user": "4f0f01c0535d0136e6c22329"}, {"code": "(fn [n coll]\n  (list (take n coll) (nthnext coll n)))", "problem": 49, "user": "4f192b29535d64f603146464"}, {"code": "(fn [n x] [(take n x) (drop n x)])", "problem": 49, "user": "4ee1f2ba535d10e5ff6f535f"}, {"code": "(fn [n s]\n  [(take n s) (drop n s)])", "problem": 49, "user": "4f31519ae4b0d6649770a086"}, {"code": "#(conj [] (take % %2) (drop % %2))", "problem": 49, "user": "4f04d312535dcb61093f6be7"}, {"code": "#(conj [] (take % %2) (drop % %2))", "problem": 49, "user": "4dc1bd76535d020aff1edf8d"}, {"code": "(fn [n v] [ (subvec v 0 n) (subvec v n) ])", "problem": 49, "user": "4f2f6678e4b0d6649770a06e"}, {"code": "#(cons (take %1 %2) (list (drop %1 %2)))", "problem": 49, "user": "4f2e0369e4b0d6649770a064"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4f32a7f1e4b0d6649770a095"}, {"code": "(fn f [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "4ea84250535d7eef308072f5"}, {"code": "(fn [k xs]\n  ((fn [k xs acc]\n    (if (= k 0) [acc xs]\n      (recur (dec k) (rest xs) (conj acc (first xs)))))\n  k xs []))", "problem": 49, "user": "4f038499535dcb61093f6b09"}, {"code": "(fn [x xs] \n  [(take x xs) (drop x xs)])", "problem": 49, "user": "4eb9353f535dfed6da9c6d4e"}, {"code": "#(list (take % %2) (take-last (- (count %2) %) %2))", "problem": 49, "user": "4f341320e4b0e243712b1eb4"}, {"code": "#(identity [(take % %2) (drop % %2)])", "problem": 49, "user": "4f2de7e9e4b0d6649770a061"}, {"code": "(fn [n c] [(take n c) (drop n c)])", "problem": 49, "user": "4f34eb87e4b0e243712b1eba"}, {"code": "(juxt take drop)", "problem": 49, "user": "4ef48422535dced4c769f236"}, {"code": "(fn q\n  ([n s] (q n s []))\n  ([n s l1]\n    (if (> n 0)\n      (q (dec n) (rest s) (conj l1 (first s)))\n      [l1 s]\n      )\n    )\n  )", "problem": 49, "user": "4f2004a1535d64f6031464a7"}, {"code": "#(vector (subvec %2 0 %1) (subvec %2 %1))", "problem": 49, "user": "4f2de9e8e4b0d6649770a062"}, {"code": "(fn [n s]\r\n  (list (take n s) (take-last (- (count s) n) s)))", "problem": 49, "user": "4f359c7ee4b0e243712b1ec4"}, {"code": "(fn [a v] [(subvec v 0 a) (subvec v a)])", "problem": 49, "user": "4f2c2ccbe4b0d6649770a050"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4f2582bae4b0d66497709ff6"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4f378631e4b0e243712b1ed3"}, {"code": "#(let [[x & y] (partition-all % %2)] [x (apply concat y)])", "problem": 49, "user": "4f3444b7e4b0e243712b1eb6"}, {"code": "(fn [n coll] [(vec (take n coll)) (vec (drop n coll))])", "problem": 49, "user": "4f1bee08535d64f60314647e"}, {"code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "4f38d6bbe4b0e243712b1ee2"}, {"code": "(fn [n lst] [(take n lst) (drop n lst)])", "problem": 49, "user": "4f36f5f2e4b0e243712b1ece"}, {"code": "(fn [n sequence] (loop [sqnc sequence left [] ]\n                 (if (= (count left) n)\n                     (vector left (vec sqnc))\n                     (recur (rest sqnc) (conj left (first sqnc))))))", "problem": 49, "user": "4f2aff4de4b0d6649770a044"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "4f15de56535d64f603146448"}, {"code": "(juxt take drop)", "problem": 49, "user": "4f39f902e4b0e243712b1efe"}, {"code": "(fn [n lst] [(take n lst) (drop n lst)])", "problem": 49, "user": "4f339c04e4b0d6649770a09c"}, {"code": "(fn [x col] [(take x col) (drop x col)])", "problem": 49, "user": "4f31ad57e4b0d6649770a089"}, {"code": "#(list (take % %2) (loop [x % col %2]\n                    (if (= x 0)\n                    col\n                    (recur (dec x) (rest col)))))", "problem": 49, "user": "4f3cc2fbe4b0e243712b1f55"}, {"code": "(juxt take drop)", "problem": 49, "user": "4ddbf54e535d02782fcbe9ff"}, {"code": "#(list\n    (first (partition-all %1 %2))\n    (apply concat\n      (rest (partition-all %1 %2))))", "problem": 49, "user": "4ec60dc4535d6d7199dd36c0"}, {"code": "(fn [n s]\n  [(take n s) (drop n s)])", "problem": 49, "user": "4f29eb2ae4b0d6649770a037"}, {"code": "(fn  [n x]\n  [(take n x) (drop n x)])", "problem": 49, "user": "4f343e60e4b0e243712b1eb5"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "4e1b8106535d04ed9115e801"}, {"code": "(fn [n l]\n    ((fn [n l1 l2]\n      (if (= n 0)\n          [(reverse l1) l2]\n          (recur (dec n)\n                (cons (first l2) l1)\n                (rest l2))))\n      n [] l))", "problem": 49, "user": "4f404dcee4b0e243712b1fb0"}, {"code": "(fn [n s]\n  [(take n s)(drop n s)])", "problem": 49, "user": "4f107e0e535d64f60314641c"}, {"code": "(fn [n s]\n  [(take n s) (drop n s)])", "problem": 49, "user": "4f418eaee4b0d7d3c9f3fce9"}, {"code": "(fn [v c] [(take v c) (drop v c)])", "problem": 49, "user": "4f4274f2e4b0d7d3c9f3fd00"}, {"code": "(fn [p q] [(take p q) (drop p q)])", "problem": 49, "user": "4f426a7ae4b0d7d3c9f3fcff"}, {"code": "(juxt take drop)", "problem": 49, "user": "4ef77edb535dced4c769f254"}, {"code": "(fn [x y] [(take x y)(drop x y)])", "problem": 49, "user": "4f4003d9e4b0e243712b1fa5"}, {"code": "#(vec (list (subvec %2 0  %1) (subvec %2 %1)))", "problem": 49, "user": "4e6ec58c535d5021c1a89611"}, {"code": "(fn[n col]\n  (vector (take n col) (drop n col)))", "problem": 49, "user": "4f3e2fbbe4b0e243712b1f7e"}, {"code": "(fn [n xs] [(take n xs) (drop n xs)])", "problem": 49, "user": "4f46bc41e4b0d56e7bb92ba5"}, {"code": "(fn [loc coll]\n  (conj () (loop [coll coll loc loc]\n              (if (< 0 loc)\n                (recur (rest coll) (dec loc))\n                coll)) \n              (take loc coll)))", "problem": 49, "user": "4f4544e1e4b0d56e7bb92b7a"}, {"code": "(fn [n c] [(take n c) (drop n c)])", "problem": 49, "user": "4f38b7d9e4b0e243712b1ee0"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "4efd8b67535de96065cf5085"}, {"code": "#(letfn [(worker [l n lhs]\r\n           (if (zero? n)\r\n             [lhs (vec l)]\r\n             (recur (rest l) (dec n) (conj lhs (first l)))))]\r\n   (worker %2 %1 []))", "problem": 49, "user": "4f474f43e4b0d56e7bb92bb7"}, {"code": "(fn [n s] [(take n s) (drop n s)])", "problem": 49, "user": "4f382eb7e4b0e243712b1ed9"}, {"code": "(fn [i l]\n  [(vec (take i l)) (vec (drop i l))])", "problem": 49, "user": "4f2baf1ae4b0d6649770a04c"}, {"code": "#(concat (list (take %1 %2))(list(drop %1 %2)))", "problem": 49, "user": "4f4a34b2e4b0d56e7bb92c09"}, {"code": "#(vec [(take %1 %2) (drop %1 %2)])", "problem": 49, "user": "4f17df72535d64f603146458"}, {"code": "#(vector (into [] (take % %2)) ((apply comp (take % (repeat rest))) %2))", "problem": 49, "user": "4f4319ebe4b0d7d3c9f3fd13"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4f3c772de4b0e243712b1f4c"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4f141dee535d64f603146434"}, {"code": "(fn split-seq [position sequ]\n  (if (zero? position)\n     [[] sequ]\n     (let [tmp (split-seq (dec position) (rest sequ))]\n       [(concat [(first sequ)] (first tmp)) (last tmp)])\n  )\n)", "problem": 49, "user": "4ee259a1535d10e5ff6f5366"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "4f2f7e87e4b0d6649770a06f"}, {"code": "(fn [n xs]\n  [(take n xs) (drop n xs)])", "problem": 49, "user": "4f49e869e4b0d56e7bb92c02"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "4f4ba29ae4b03ad3f0c10c7a"}, {"code": "(fn [n c]\r\n  (list (take n c) (drop n c)))", "problem": 49, "user": "4f17ab99535d64f603146457"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4f4ac35ae4b0d56e7bb92c18"}, {"code": "(fn [i coll]\n  [(take i coll) (drop i coll)])", "problem": 49, "user": "4f39c08ae4b0e243712b1efb"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "4f3ec266e4b0e243712b1f8c"}, {"code": "(fn [num coll] [(take num coll) (nthnext coll num)])", "problem": 49, "user": "4f2acb29e4b0d6649770a040"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4f065217535dcb61093f6c0c"}, {"code": "(fn [n ls] (list (take n ls) (take-last (- (count ls) n ) ls)))", "problem": 49, "user": "4f03ba9c535dcb61093f6b58"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4f461e57e4b0d56e7bb92b92"}, {"code": "(fn [n xs] [(take n xs) (drop n xs)])", "problem": 49, "user": "4f4e91a9e4b03ad3f0c10cca"}, {"code": "(fn [n s] [(take n s) (drop n s)])", "problem": 49, "user": "4f2b0951e4b0d6649770a045"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4f4f0287e4b03ad3f0c10cd7"}, {"code": "(fn [n x] [(take n x) (drop n x)])", "problem": 49, "user": "4f4ff5a8e4b03ad3f0c10cf3"}, {"code": "#(cons (take % %2) (list (drop % %2)))", "problem": 49, "user": "4f50c414e4b03ad3f0c10d0d"}, {"code": "(fn [at coll]\n  [\n    (into [] (take at coll))\n    (into [] (drop at coll))\n  ])", "problem": 49, "user": "4db2f208535df7e46ed9b6c9"}, {"code": "(fn [x coll]\n  (list (take x coll) (drop x coll)))", "problem": 49, "user": "4f4f08c8e4b03ad3f0c10cd8"}, {"code": "(fn [n col]\n  [(take n col) (drop n col)])", "problem": 49, "user": "4db8d37d535d1e037afb219c"}, {"code": "#(vec (list (vec (take %1 %2)) (vec (drop %1 %2))))", "problem": 49, "user": "4e8ad1d2535d65386fec2110"}, {"code": "(fn [count lst]\n    [(take count lst) (drop count lst)])", "problem": 49, "user": "4f047902535dcb61093f6bcc"}, {"code": "(fn my-split-at\n  [n s]\n  [(take n s) (drop n s)])", "problem": 49, "user": "4f25c4c4e4b0d66497709ffc"}, {"code": "(fn [n s] (vector (vec (take n s)) (vec (take-last (- (count s) n) s))))", "problem": 49, "user": "4f40f055e4b0e243712b1fc2"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4f4e7c01e4b03ad3f0c10cc9"}, {"code": "(fn [n s]\n  (list (take n s) (drop n s)))", "problem": 49, "user": "4f4c6b21e4b03ad3f0c10c8f"}, {"code": "(fn [n coll] (vector (take n coll) (take-last (- (count coll) n) coll)))", "problem": 49, "user": "4f0404df535dcb61093f6b91"}, {"code": "(juxt take drop)", "problem": 49, "user": "4f3e6244e4b0e243712b1f85"}, {"code": "(fn [n l] [(for [i (range 0 n)] (l i)) (for [i (range n (count l))] (l i))])", "problem": 49, "user": "4ed1f84f535d44c135fd68d3"}, {"code": "(fn [x y] [(take x y) (drop x y)])", "problem": 49, "user": "4f51e8a4e4b03ad3f0c10d2d"}, {"code": "(fn [index sq]\n  (loop [f [] l sq i index]\n    (if (= i 0)\n      [f l]\n      (recur (conj f (first l))\n             (rest l)\n             (dec i)))))", "problem": 49, "user": "4f4a5ca6e4b0d56e7bb92c0f"}, {"code": "(fn [n xs] (list (take n xs) (drop n xs)))", "problem": 49, "user": "4ed60c9c535d10e5ff6f52dd"}, {"code": "(fn [idx coll]\n    (map #(map second %1)\n         (partition-by #(< (first %1) idx)\n                       (map-indexed list coll))))", "problem": 49, "user": "4f4a8707e4b0d56e7bb92c12"}, {"code": "(fn [i s] (vector (take i s) (drop  i s)))", "problem": 49, "user": "4f569218e4b0a7574ea71826"}, {"code": "(fn [at coll]\r\n    (loop [coll coll\r\n           n at\r\n           acc []]\r\n      (cond (zero? n) [acc coll]\r\n            (seq coll) (recur (rest coll) (dec n) (conj acc (first coll))))))", "problem": 49, "user": "4f047177535dcb61093f6bc6"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4f46df00e4b0d56e7bb92bac"}, {"code": "(fn [n s] \n  [(take n s) (drop n s)])", "problem": 49, "user": "4f567cdbe4b0a7574ea71824"}, {"code": "(fn [n c] [(take n c) (drop n c)])", "problem": 49, "user": "4f18677d535d64f603146459"}, {"code": "#(conj [] (subvec %2 0 %1) (subvec %2 %1 (count %2)))", "problem": 49, "user": "4f4bbda0e4b03ad3f0c10c7b"}, {"code": "(fn [n s] [(take n s) (drop n s)])", "problem": 49, "user": "4f569a3ce4b0a7574ea71828"}, {"code": "(fn [n coll]\n  (cons (take n coll) (list (drop n coll))))", "problem": 49, "user": "4db6ce85535d1e037afb217f"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4f528bcde4b03ad3f0c10d3e"}, {"code": "(fn [n s]\n  [(take n s), (drop n s)])", "problem": 49, "user": "4f5c0549e4b0030a34fb2b1a"}, {"code": "#(vector (take %1 %2)(drop %1 %2))", "problem": 49, "user": "4f5cc3b8e4b0030a34fb2b2b"}, {"code": "(fn [n s] [(take n s) (drop n s)])", "problem": 49, "user": "4f2893d0e4b0d6649770a019"}, {"code": "(fn [a b]   \n   (loop [n a\n          l b\n          r []]   \n     (if (zero? n)\n       (conj (vector r)  l)\n       (recur (dec n) (rest l) (conj r (first l))))))", "problem": 49, "user": "4f1684c7535d64f60314644b"}, {"code": "(fn [x col] [(take x col) (drop x col)])", "problem": 49, "user": "4ec53831535d6d7199dd3684"}, {"code": "(fn [i s]\n    [(subvec s 0 i) (subvec s i)])", "problem": 49, "user": "4dd9d299535d2dad7130b5dd"}, {"code": "(fn [n s]\n  [(take n s) (drop n s)])", "problem": 49, "user": "4f036fb3535dcb61093f6ac8"}, {"code": "(fn f[n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "4e53bf5e535d8a8b8723a275"}, {"code": "(fn [pos coll]\n  (vector (take pos coll) (drop pos coll)))", "problem": 49, "user": "4f504739e4b03ad3f0c10d00"}, {"code": "#(vector(take %1 %2)(drop %1 %2))", "problem": 49, "user": "4f57a153e4b0a7574ea7183a"}, {"code": "(juxt take drop)", "problem": 49, "user": "4f6160a7e4b0defedf855fbe"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4f387c2ee4b0e243712b1edd"}, {"code": "(fn [x coll]\r\n    (loop [result [] n 1 coll coll]\r\n\t     (if(> n x)\r\n\t\t(conj [] result coll)\r\n\t\t(recur (conj result (first coll))(inc n)(rest coll)))))", "problem": 49, "user": "4f4ec77ae4b03ad3f0c10cd0"}, {"code": "(fn [n s] [(take n s) (drop n s)])", "problem": 49, "user": "4f3e5e87e4b0e243712b1f83"}, {"code": "(fn [n xs]\n  (loop [cntr n xsp xs acc []]\n    (if (empty? xsp)\n      acc\n      (if (= cntr 1)\n        [(conj acc (first xsp)) (rest xsp)]\n        (recur (dec cntr) (rest xsp) (conj acc (first xsp)))))))", "problem": 49, "user": "4e7f5a0b535db966e863cc41"}, {"code": "(fn [x coll]\n  [(take x coll) (drop x coll)])", "problem": 49, "user": "4f604bdee4b0defedf855fa7"}, {"code": "#(cons (take %1 %2) (list (drop %1 %2)))", "problem": 49, "user": "4f651f66e4b07046d9f4ef3c"}, {"code": "(fn [n s] (list (take n s) (drop n s)))", "problem": 49, "user": "4f559d2ce4b0a7574ea71808"}, {"code": "(fn spl [n s]\n  [(take n s) (drop n s)])", "problem": 49, "user": "4f611127e4b0defedf855fb4"}, {"code": "(fn psplit [x y] (cond\n    (= x 0) (list () y)\n  :else (conj (rest (psplit (- x 1) (rest y)))\n  (conj (first (psplit (- x 1) (rest y))) (first y)))))", "problem": 49, "user": "4f524d11e4b03ad3f0c10d34"}, {"code": "(fn split [n lst]\r\n   [(vec (take n lst)) (vec (take-last (- (count lst) n) lst))])", "problem": 49, "user": "4f629697e4b0defedf855fd6"}, {"code": "(fn [n l]\n  [(take n l) (take-last (- (count l) n) l)]\n)", "problem": 49, "user": "4f63777be4b0defedf855fe4"}, {"code": "(fn [n coll] (list (take n coll)(drop n coll)))", "problem": 49, "user": "4f65eec7e4b07046d9f4ef48"}, {"code": "(fn [n seq] [(take n seq) (drop n seq)])", "problem": 49, "user": "4f62b29ce4b0defedf855fd9"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4f58fe71e4b0a7574ea7185f"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "4ed845a8535d10e5ff6f52f8"}, {"code": "(fn [x coll]\n  (vector (take x coll) (drop x coll)))", "problem": 49, "user": "4eb8ec4a535dfed6da9c6d4b"}, {"code": "#(vec (list (vec (take % %2)) (vec (drop % %2) )))", "problem": 49, "user": "4f4bd422e4b03ad3f0c10c7e"}, {"code": "(fn\n  [n seq]\n    [(take n seq) (drop n seq)])", "problem": 49, "user": "4e6ac7a8535d8ccf87e9ff03"}, {"code": "(fn splitter [i col]\n  [(take i col) (drop i col)])", "problem": 49, "user": "4f61be97e4b0defedf855fc5"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "4eca2cea535d6d7199dd3702"}, {"code": "#(vector (take %1 %2) (subvec %2 %1) )", "problem": 49, "user": "4df8644f535d04ed9115e778"}, {"code": "(juxt take drop)", "problem": 49, "user": "4f1bb9d8535d64f60314647d"}, {"code": "(fn [n c] [(take n c) (drop n c)])", "problem": 49, "user": "4f6688d6e4b07046d9f4ef5d"}, {"code": "(fn my-split [num coll]\n  (loop [col1 coll,col2 [],n num ]\n    (if (= 0 n)\n        [col2 col1] \n        (recur (rest col1) \n            (conj col2  (first col1) ) \n            (dec n) \n            )\n     )\n     )\n )", "problem": 49, "user": "4f6d9d7ee4b07046d9f4efcd"}, {"code": "(juxt take drop)", "problem": 49, "user": "4f6fbb68e4b07046d9f4efeb"}, {"code": "(fn [x, coll] [(take x coll) (nthnext coll x)])", "problem": 49, "user": "4f6b4237e4b07046d9f4efa9"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4ddc56e1535d02782fcbea04"}, {"code": "(fn sp-at [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "4e370a04535deb9a81d77f37"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4ef2da4f535dced4c769f224"}, {"code": "(fn [n l] [(take n l) (drop n l)])", "problem": 49, "user": "4f68c485e4b07046d9f4ef7c"}, {"code": "(fn [a b] (vector (take a b) (drop a b)))", "problem": 49, "user": "4ef0b523535dced4c769f20e"}, {"code": "(fn [n sq]\r\n  (list (take n sq)\r\n        (drop n sq)))", "problem": 49, "user": "4f71db68e4b07046d9f4f015"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4f706cc3e4b07046d9f4eff7"}, {"code": "(fn [n l] (list (take n l) (drop n l)))", "problem": 49, "user": "4f7219d8e4b07046d9f4f01d"}, {"code": "(fn split-at_ [n seq_]\n  [(take n seq_) (drop n seq_)]\n)", "problem": 49, "user": "4f71f782e4b07046d9f4f018"}, {"code": "(fn [n xs] [(take n xs) (drop n xs)])", "problem": 49, "user": "4f724e56e4b07046d9f4f027"}, {"code": "(fn [n xs] (list (take n xs) (drop n xs)))", "problem": 49, "user": "4f734e93e4b07046d9f4f043"}, {"code": "(juxt take drop)", "problem": 49, "user": "4f6845d2e4b07046d9f4ef74"}, {"code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "4efb6411535dced4c769f277"}, {"code": "(fn [n l]\n    (let \n      [p (partition-all n l)] \n      (cons (first p) (list (apply concat (rest p))))))", "problem": 49, "user": "4f69f34fe4b07046d9f4ef90"}, {"code": "#(list (subvec %2 0 %) (subvec %2 %))", "problem": 49, "user": "4eb298c1535d7eef3080734b"}, {"code": "(fn [n s]\n  (list (take n s) (drop n s)))", "problem": 49, "user": "4f70afb8e4b07046d9f4effb"}, {"code": "(fn [n l]\n  [(take n l) (drop n l)])", "problem": 49, "user": "4e568873535d8a8b8723a283"}, {"code": "(fn [n s] [(take n s) (drop n s)])", "problem": 49, "user": "4f713878e4b07046d9f4f00a"}, {"code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "4ec6c878535d6d7199dd36d5"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "4dafba62838c986e7473b5f7"}, {"code": "(fn splitat [at sequ]\n  [(take at sequ) (drop at sequ)])", "problem": 49, "user": "4f7250cce4b07046d9f4f02a"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "4f6a2ff2e4b07046d9f4ef98"}, {"code": "#(concat [(take % %2)] [(drop % %2)])", "problem": 49, "user": "4f565bebe4b0a7574ea7181e"}, {"code": "(fn [s xs] [(take s xs) (drop s xs)])", "problem": 49, "user": "4f725201e4b07046d9f4f02f"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "4e89dbce535d3e98b8023283"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4f7207d3e4b07046d9f4f019"}, {"code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "4f4e4ecbe4b03ad3f0c10cbf"}, {"code": "(fn [n seq] [(take n seq)(drop n seq)])", "problem": 49, "user": "4f7a9416e4b06e829148e19b"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4f7d75a2e4b06e829148e1c2"}, {"code": "#(identity [(take %1 %2) (nthnext %2 %1)])", "problem": 49, "user": "4f725466e4b07046d9f4f030"}, {"code": "(fn foo [n l]\n  (loop [f '() s '() [fl & args :as my-l] l f-count 0]\n    (if (empty? my-l)\n      (list f s)\n      (if (= f-count n)\n        (recur f (concat s (list fl)) args f-count)\n        (recur (concat f (list fl)) s args (inc f-count))))))", "problem": 49, "user": "4f7e29dde4b06e829148e1ca"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4f7d5328e4b06e829148e1bf"}, {"code": "(fn [num, x] [(take num x) (drop num x)])", "problem": 49, "user": "4f72147ae4b07046d9f4f01b"}, {"code": "(fn spat [n xs]\n  (list (take n xs) (drop n xs)))", "problem": 49, "user": "4f7f0827e4b06e829148e1d5"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4f7869c2e4b0fbe0118ec589"}, {"code": "(fn [n ls]\n  (list (take n ls) (drop n ls)))", "problem": 49, "user": "4f7fc9a1e4b033992c121bee"}, {"code": "(fn my-split [number vect]\r\n     (vector (subvec vect 0 number) (subvec vect number (count vect))))", "problem": 49, "user": "4f82e14be4b033992c121c0c"}, {"code": "(fn [n sq]\n  [(take n sq) (drop n sq)])", "problem": 49, "user": "4f831fd3e4b033992c121c17"}, {"code": "(fn [m d]\n  ((fn [n s rs]\n    (if (= 0 n) (conj [] rs s)\n      (recur (dec n) (rest s) (conj rs (first s))))) m d [] ))", "problem": 49, "user": "4f3242bae4b0d6649770a08f"}, {"code": "(fn [n xs] (map #(map last %)\n                (partition-by (fn [v] (<= n (first v)))\n                              (map-indexed vector xs))))", "problem": 49, "user": "4f8345c6e4b033992c121c1b"}, {"code": "(fn [split-index coll]\r\n  (let [p1 (vec (take split-index coll))\r\n        p2 (vec (drop split-index coll))]\r\n  \t(conj [] p1 p2)))", "problem": 49, "user": "4f60ed88e4b0defedf855fb2"}, {"code": "(juxt take drop )", "problem": 49, "user": "4f83ee95e4b033992c121c26"}, {"code": "(fn splitt [at,x] (if (= at 0) [[] x]\n                                  (let [y (splitt (- at 1) (rest x))]\n                                    [\n                                     (cons (first x) (first y))\n                                     (last y)])))", "problem": 49, "user": "4f84f6c3e4b033992c121c3d"}, {"code": "(fn [n s]\n  (vector\n    (apply vector (take n s))\n    (apply vector (drop n s))))", "problem": 49, "user": "4f03fb59535dcb61093f6b89"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "4f85b7b5e4b033992c121c49"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4dc78527535d8a4b2fd7428f"}, {"code": "(fn split [n v]\n  [(subvec v 0 n)(subvec v n)]\n)", "problem": 49, "user": "4f84400de4b033992c121c2e"}, {"code": "#(conj [] (take %1 %2) (take-last (- (count %2) %1) %2))", "problem": 49, "user": "4ec6f4ee535d6d7199dd36dc"}, {"code": "(juxt take drop)", "problem": 49, "user": "4f7b6b90e4b06e829148e1a4"}, {"code": "#(conj [(subvec %2 0 %)] (subvec %2 % (count %2)))", "problem": 49, "user": "4f7c2ac4e4b06e829148e1ad"}, {"code": "(fn [x,y]\n  [(take x y) (drop x y)])", "problem": 49, "user": "4f85ef29e4b033992c121c4d"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4f88ae35e4b033992c121c6d"}, {"code": "(fn [n s]\n  (vector (vec (take n s)) (vec (drop n s)))\n)", "problem": 49, "user": "4f8b56dae4b02e764a0a517e"}, {"code": "(fn foo [n s] (if (= n 0) [(empty s) s]\n                          (let [a (foo (dec n) (rest s))] [(concat [(first s)] (first a)) (second a)])))", "problem": 49, "user": "4f8b20fce4b02e764a0a5178"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4f83665ee4b033992c121c1c"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4f8aa1c1e4b02e764a0a516e"}, {"code": "(fn [n sq]\r\n    (list (take n sq) (drop n sq)))", "problem": 49, "user": "4f0da4e4535d0136e6c22319"}, {"code": "(fn split [n seq] [(take n seq) (drop n seq)])", "problem": 49, "user": "4f29afc7e4b0d6649770a02e"}, {"code": "(fn [split-point items] [(take split-point items) (reverse (take (- (count items) split-point) (reverse items)))])", "problem": 49, "user": "4f689a17e4b07046d9f4ef77"}, {"code": "(fn [index the-seq] [(take index the-seq) (drop index the-seq)])", "problem": 49, "user": "4f71ba6ee4b07046d9f4f012"}, {"code": "(fn [loc lst]\n  (loop [a ()  b lst]\n    (if (>= (count a) loc)\n      (list (reverse a) b)\n      (recur \n        (conj a (first b)) \n        (rest b)))))", "problem": 49, "user": "4f90e238e4b0dcca54ed6c94"}, {"code": "(fn [n l] [(take n l) (drop n l)])", "problem": 49, "user": "4f8c5f4fe4b02e764a0a5198"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4f91a38ae4b0dcca54ed6c9f"}, {"code": "(fn [at col]\n  (let [ln (count col)]\n\t(loop [hacc (vec []) tacc (vec []) curr 0]\n\t\t(if (= curr ln)\n\t\t\t[hacc tacc]\n\t\t\t(if (< curr at)\n\t\t\t\t(recur (conj hacc (nth col curr)) tacc (inc curr))\n\t\t\t\t(recur hacc (conj tacc (nth col curr)) (inc curr)))))))", "problem": 49, "user": "4f73536ee4b07046d9f4f044"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4f92709de4b0dcca54ed6cad"}, {"code": "(fn [n s]\n    (let [[fir & res] (partition-all n s)]\n  [fir (apply concat res)]))", "problem": 49, "user": "4f91fd31e4b0dcca54ed6ca8"}, {"code": "(fn s[n x]\n   [(take n x) (drop n x)])", "problem": 49, "user": "4f891abde4b033992c121c77"}, {"code": "(juxt take drop)", "problem": 49, "user": "4f6511eee4b07046d9f4ef3a"}, {"code": "(fn [i s] [(take i s) (drop i s)])", "problem": 49, "user": "4f9120d8e4b0dcca54ed6c96"}, {"code": "(fn f [%1 %2] [(take %1 %2) (drop %1 %2)])", "problem": 49, "user": "4f8ea1f7e4b0d4e659cdde69"}, {"code": "(fn\n  [x coll]\n  (conj [] (take x coll) (drop x coll)))", "problem": 49, "user": "4f8490fae4b033992c121c34"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4f9597e0e4b0dcca54ed6cd4"}, {"code": "(juxt take drop)", "problem": 49, "user": "4f727023e4b07046d9f4f035"}, {"code": "(fn [n xs]\n  [(take n xs) (drop n xs)])", "problem": 49, "user": "4f3fb586e4b0e243712b1f9c"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4f7f9665e4b033992c121bea"}, {"code": "(juxt take drop)", "problem": 49, "user": "4f890488e4b033992c121c76"}, {"code": "(fn [at s] (list (take at s)(drop at s)))", "problem": 49, "user": "4f951375e4b0dcca54ed6cc8"}, {"code": "(fn splitter [n coll]\n  (vec (list (vec (take n coll)) (vec (drop n coll))))\n)", "problem": 49, "user": "4f8ac2bde4b02e764a0a5172"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4e778d36535d324fb2983d71"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4dc21233535d020aff1edf92"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4f9754d4e4b0dcca54ed6ce9"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "4f969214e4b0dcca54ed6cdd"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "4f98ead0e4b0dcca54ed6cf8"}, {"code": "(fn [n xs] [(take n xs) (drop n xs)])", "problem": 49, "user": "4f7ab8c7e4b06e829148e19c"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4f991ec1e4b0dcca54ed6cfb"}, {"code": "(juxt take drop)", "problem": 49, "user": "4f9174d0e4b0dcca54ed6c9b"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4f9920a3e4b0dcca54ed6cfc"}, {"code": "(fn [i s] [(take i s) (drop i s)])", "problem": 49, "user": "4f97d8f3e4b0dcca54ed6ced"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "4f9d53f3e4b0dcca54ed6d21"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4ee77f15535d93acb0a66868"}, {"code": "(fn [n coll]\n  [(vec (take n coll))\n   (vec (drop n coll))])", "problem": 49, "user": "4f3cd535e4b0e243712b1f56"}, {"code": "(juxt take drop)", "problem": 49, "user": "4f954dbce4b0dcca54ed6ccd"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4f71347ae4b07046d9f4f009"}, {"code": "(fn blah [n coll]\n    (vector (take n coll) (drop n coll)))", "problem": 49, "user": "4f17aa97535d64f603146456"}, {"code": "(juxt take drop)", "problem": 49, "user": "4f9fe2b9e4b0dcca54ed6d40"}, {"code": "(fn [p s] [(take p s) (drop p s)])", "problem": 49, "user": "4f465096e4b0d56e7bb92b9a"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4e1fe7f1535d04ed9115e810"}, {"code": "(juxt take drop)", "problem": 49, "user": "4f969a66e4b0dcca54ed6cde"}, {"code": "(fn [index list]\n  [(take index list) (drop index list)])", "problem": 49, "user": "4f03396d535dcb61093f6a7b"}, {"code": "#(vector\n  (subvec %2 0 %)\n  (subvec %2 %))", "problem": 49, "user": "4f8db862e4b02e764a0a51b2"}, {"code": "(fn [pos coll] \n    [(take pos coll) (drop pos coll)])", "problem": 49, "user": "4fa2fa5ee4b081705acca186"}, {"code": "(fn split-at-n [n coll] [(take n coll)(drop n coll)])", "problem": 49, "user": "4fa39b3ee4b081705acca191"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4f9f7daae4b0dcca54ed6d37"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4fa4ef2ee4b081705acca1a9"}, {"code": "(fn [n x]\n    (loop [n n\n           x x\n           c []]\n      (if (zero? n)\n        (conj [] c x)\n        (recur (dec n) (rest x) (conj c (first x))))))", "problem": 49, "user": "4f410b63e4b0e243712b1fc5"}, {"code": "(fn [n inp]\r\n  (vector (vec (take n inp)) (vec (drop n inp)))\r\n  )", "problem": 49, "user": "4f7d25b4e4b06e829148e1ba"}, {"code": "(fn [n s] [(take n s) (drop n s)])", "problem": 49, "user": "4fa3f91fe4b081705acca196"}, {"code": "(fn my-split-at [idx v] (vector (subvec v 0 idx) (subvec v idx)))", "problem": 49, "user": "4f9c4080e4b0dcca54ed6d1a"}, {"code": "#(list\n  (reverse (nthnext (reverse %2) (- (count %2) %)))\n  (nthnext %2 %))", "problem": 49, "user": "4fa5406fe4b081705acca1ac"}, {"code": "(juxt take drop)", "problem": 49, "user": "4f40ccd9e4b0e243712b1fc0"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4fa0a4b1e4b0dcca54ed6d4f"}, {"code": "#(conj [] (take % %2) (drop % %2))", "problem": 49, "user": "4fa30027e4b081705acca187"}, {"code": "(fn my-split-at [n coll]\n  [(take n coll) (take-last (- (count coll) n) coll)])", "problem": 49, "user": "4fa17b00e4b0dcca54ed6d5f"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4f9d8083e4b0dcca54ed6d23"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "4fa6d532e4b081705acca1be"}, {"code": "#(vec [(take % %2) (drop % %2)])", "problem": 49, "user": "4fa58500e4b081705acca1ae"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4f9acea6e4b0dcca54ed6d10"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4e65f9d4535d8ccf87e9fe73"}, {"code": "(fn [n coll]\n    [(take n coll) (drop n coll)])", "problem": 49, "user": "4f9970b3e4b0dcca54ed6cfd"}, {"code": "(fn [a s]\n  [(vec (take a s)) (vec (drop a s))])", "problem": 49, "user": "4faa8de0e4b081705acca1f8"}, {"code": "(fn split [n lst]\n  (loop [m 0, A [], B lst]\n    (if (< m n)\n      (recur (+ m 1) (conj A (first B)) (rest B))\n      [A, B])))", "problem": 49, "user": "4faa9593e4b081705acca1f9"}, {"code": "(fn [n coll]\n  [(take n coll)  (drop n coll)] )", "problem": 49, "user": "4e86d3cf535dceadca46984c"}, {"code": "(fn [x in] [(take x in) (drop x in)])", "problem": 49, "user": "4eb59464535d7eef30807369"}, {"code": "#(list\n  (take %1 %2)\n  (drop %1 %2))", "problem": 49, "user": "4fabb1dce4b081705acca21a"}, {"code": "(fn splitSeq [m x] (conj [] (take m x) (reverse (take (- (count x) m) (reverse x)))))", "problem": 49, "user": "4f9336ece4b0dcca54ed6cb7"}, {"code": "(fn [n s]\n    [(vec (take n s)) (vec (drop n s))])", "problem": 49, "user": "4facd2fae4b081705acca22f"}, {"code": "(fn [n c] [(take n c) (drop n c)])", "problem": 49, "user": "4db3393e535df7e46ed9b6cc"}, {"code": "(juxt take drop)", "problem": 49, "user": "4ebbb6bc535dfed6da9c6d71"}, {"code": "(fn [i c]\n  (let [t (partition-all i c)]\n    (vector (first t) (apply concat (rest t)))))", "problem": 49, "user": "4facff22e4b081705acca230"}, {"code": "#(loop [l %2 a [] b [] c 0]\n    (cond (empty? l) [a b]\n          (>= c %1) (recur (rest l) a (conj b (first l)) (inc c))\n          :else (recur (rest l) (conj a (first l)) b (inc c))))", "problem": 49, "user": "4fae258de4b081705acca246"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4fad33e8e4b081705acca236"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4fa069c3e4b0dcca54ed6d4a"}, {"code": "(fn [n s] [(take n s) (drop n s)])", "problem": 49, "user": "4fa67030e4b081705acca1b7"}, {"code": "#(conj (conj [] (vec (take %1 %2))) (vec (drop %1 %2)))", "problem": 49, "user": "4faec810e4b081705acca24e"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4fad77a6e4b081705acca23a"}, {"code": "(fn my-split [n s]\n  (if (= 1 n)\n\t\t[ [(first s)] (rest s) ]\n\t\t(let [res (my-split (dec n) (rest s))]\n\t\t\t[ (cons (first s) (first res)) (second res) ]\n\t\t)\n\t)\n)", "problem": 49, "user": "4faacc04e4b081705acca201"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "4fadbc3fe4b081705acca23f"}, {"code": "(fn [n xs]\n  [(take n xs) (drop n xs)])", "problem": 49, "user": "4e8338d6535db62dc21a62d3"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4e43b0d9535dc968683fc4a3"}, {"code": "(fn [x y](conj (vector (take x y)) (drop x y)))", "problem": 49, "user": "4fb069b1e4b081705acca266"}, {"code": "(fn [spl xs]\n   (vector\n    (keep-indexed #(if (< %1 spl) %2) xs)\n    (keep-indexed #(if (>= %1 spl) %2) xs)\n    )\n   )", "problem": 49, "user": "4f91f5b1e4b0dcca54ed6ca7"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4fb37882e4b081705acca2a0"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "4f8386c5e4b033992c121c1d"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4e5d1912535d8a8b8723a2c9"}, {"code": "(fn [n s]\n  (loop [acc '()\n         n n\n         s s]\n    (if (= n 0)\n        [(reverse acc) s]\n        (recur (cons (first s) acc)\n               (dec n)\n               (rest s)))))", "problem": 49, "user": "4f9a0064e4b0dcca54ed6d03"}, {"code": "(fn [n s] (list (take n s) (drop n s)))", "problem": 49, "user": "4fb2101ce4b081705acca284"}, {"code": "(fn [n col] [(take n col) (drop n col)])", "problem": 49, "user": "4fb4099be4b081705acca2a9"}, {"code": "(fn [idx s]\n  (list (take idx s) (drop idx s)))", "problem": 49, "user": "4f8bbb27e4b02e764a0a5182"}, {"code": "(fn [v l] [(take v l) (drop v l)])", "problem": 49, "user": "4f82ed48e4b033992c121c0e"}, {"code": "(fn psl [a, ln] [(drop-last (- (count ln) a) ln) (drop a ln)])", "problem": 49, "user": "4f859146e4b033992c121c46"}, {"code": "(fn [n xs] [(take n xs) (drop n xs)])", "problem": 49, "user": "4fa6a491e4b081705acca1bc"}, {"code": "(juxt take drop)", "problem": 49, "user": "4fb3b865e4b081705acca2a2"}, {"code": "(fn my-split-at [n coll] \n  [(take n coll) (drop n coll)])", "problem": 49, "user": "4f6bab49e4b07046d9f4efb1"}, {"code": "(fn [n col] [(take n col) (take-last (- (count col) n) col)])", "problem": 49, "user": "4fab31a8e4b081705acca215"}, {"code": "(fn [i v]\n  ((juxt\n    #(into [] (take i %))\n    #(into [] (drop i %))) v))", "problem": 49, "user": "4f45c72be4b0d56e7bb92b8a"}, {"code": "(fn mysplit [n coll]\n  [(take n coll) \n    (take-last (- (count coll) n) coll)\n  ]\n)", "problem": 49, "user": "4fb3fec7e4b081705acca2a7"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4e83bb61535db62dc21a62dd"}, {"code": "(fn [n col] [(take n col) (drop n col)])", "problem": 49, "user": "4fae6e7be4b081705acca24a"}, {"code": "(fn [x coll] [(take x coll) (drop x coll)])", "problem": 49, "user": "4fa99ee1e4b081705acca1e4"}, {"code": "(fn [x seq] [(take x seq) (drop x seq)])", "problem": 49, "user": "4f7e07f4e4b06e829148e1c9"}, {"code": "(fn [n s] [(subvec s 0 n) (subvec s n)])", "problem": 49, "user": "4eca7a87535d6d7199dd3705"}, {"code": "#(vector (subvec %2 0 %1) (subvec %2 %1))", "problem": 49, "user": "4fb65f2fe4b081705acca2c7"}, {"code": "(fn split-this [pos coll]\n  (list (take pos coll) (take-last (- (count coll) pos) coll)))", "problem": 49, "user": "4faafccde4b081705acca209"}, {"code": "(fn [n xs] (vec (list (vec (take n xs)) (vec (drop n xs)))))", "problem": 49, "user": "4fb510b5e4b081705acca2b8"}, {"code": "(fn[y, x] (conj [] (take y x) (drop y x)))", "problem": 49, "user": "4fb3dd1ee4b081705acca2a5"}, {"code": "#(identity [(take % %2) (drop % %2)])", "problem": 49, "user": "4fbd24d2e4b081705acca2ff"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "4f05ea25535dcb61093f6c02"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4faac363e4b081705acca200"}, {"code": "#(cons (take %1 %2 ) (list (drop %1 %2)))", "problem": 49, "user": "4faa6184e4b081705acca1f1"}, {"code": "(fn [n s] [(take n s) (drop n s)])", "problem": 49, "user": "4fc0221ce4b081705acca322"}, {"code": "(fn [n s] [(take n s) (drop n s)])", "problem": 49, "user": "4fc13433e4b081705acca32b"}, {"code": "(fn [n cola]\r\n  [(take n cola)\r\n   (drop n cola)])", "problem": 49, "user": "4f039c67535dcb61093f6b3a"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4fbfe9a4e4b081705acca31f"}, {"code": "(fn [n coll] \n  [(take n coll) (drop n coll)])", "problem": 49, "user": "4f9a7dc0e4b0dcca54ed6d0b"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4fc0853ae4b081705acca327"}, {"code": "(fn chop [dstlst count srclst]\n  (if (= 0 count) (list dstlst srclst)\n      (chop (conj dstlst (first srclst)) (dec count) (rest srclst)))) []", "problem": 49, "user": "4fb86dc9e4b081705acca2d8"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4fbe42b7e4b081705acca30f"}, {"code": "(fn self\r\n([c cols]\r\n (if(empty? cols)\r\n  cols\r\n  (self [] c cols )))\r\n([res c cols]\r\n (if(= (count res) c )\r\n  (conj (conj [] res) (vec cols))\r\n  (self (conj res (first cols)) c (rest cols))\r\n)\r\n))", "problem": 49, "user": "4fa82205e4b081705acca1cf"}, {"code": "#(vector (vec (take % %2)) (vec (take-last (- (count %2) %) %2)))", "problem": 49, "user": "4fb79872e4b081705acca2d2"}, {"code": "(juxt take drop)", "problem": 49, "user": "4fc4eadee4b081705acca353"}, {"code": "(fn [n s]\n  (loop [i 0 left [] right [] s s]\n    (if (empty? s)\n      (do\n        (print \"*********\" left right)\n        (vector right left))\n      (if (>= i n)\n        (recur (inc i) (conj left (first s)) right (rest s))\n        (recur (inc i) left (conj right (first s)) (rest s))))))", "problem": 49, "user": "4fb4f42ae4b081705acca2b4"}, {"code": "(fn [x l] (list (take x l) (nthnext l x)))", "problem": 49, "user": "4e6cf61a535de274dd8d818c"}, {"code": "(fn [n l] [(take n l) (drop n l)])", "problem": 49, "user": "4fbdcb87e4b081705acca30a"}, {"code": "(fn [n c] [(subvec c 0 n) (subvec c n)])", "problem": 49, "user": "4fc6104ae4b0ee37620e1808"}, {"code": "(juxt take drop)", "problem": 49, "user": "4fb1d907e4b081705acca282"}, {"code": "(fn split\n  [n coll] {:pre [(integer? n)]}\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "4fc6305de4b0ee37620e180b"}, {"code": "(fn [idx coll] [(take idx coll) (drop idx coll)])", "problem": 49, "user": "4fabbb97e4b081705acca21d"}, {"code": "(fn [pos col]\n  (list (take pos col) (drop pos col)))", "problem": 49, "user": "4fc7db47e4b0ee37620e182a"}, {"code": "#(list (take %1 %2) (nthnext %2 %1))", "problem": 49, "user": "4fa11204e4b0dcca54ed6d56"}, {"code": "(fn [index col] (split-with #(< (.indexOf col %) index) col))", "problem": 49, "user": "4fb2f9b2e4b081705acca294"}, {"code": "(fn [n l] (list (take n l) (drop n l)))", "problem": 49, "user": "4fc8c8d8e4b0ee37620e183b"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4fc4dca8e4b081705acca350"}, {"code": "#(conj [(vec (take %1 %2))] (vec (drop %1 %2)))", "problem": 49, "user": "4f73f78de4b044e54cd9a8f3"}, {"code": "(fn[x y] (cons ((fn[x y](loop [cnt 0 acc[]](if (= cnt x) acc (recur(inc cnt) (conj acc (nth y cnt)))))) x y) (cons ((fn[x y](loop [cnt x acc[]](if (= cnt (count y)) acc (recur(inc cnt) (conj acc (nth y cnt)))))) x y) [])))", "problem": 49, "user": "4f32135ae4b0d6649770a08e"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4fca1cd6e4b0ee37620e184c"}, {"code": "(fn splitter [n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "4fcaf7a4e4b0ee37620e1857"}, {"code": "(juxt take drop)", "problem": 49, "user": "4f7431d2e4b044e54cd9a8f7"}, {"code": "(fn [ j l ]\n  (vector (take j l) (take-last (- (count l) j) l)))", "problem": 49, "user": "4fc43a8ee4b081705acca346"}, {"code": "(fn split [n inlist]\n  (vector\n    (take n inlist)\n    (drop n inlist)))", "problem": 49, "user": "4fc50bcbe4b081705acca375"}, {"code": "(fn [ c l]\n  [(take c l) (take-last (- (count l) c) l)]\n)", "problem": 49, "user": "4fc18846e4b081705acca331"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4fc67081e4b0ee37620e1813"}, {"code": "(juxt take drop)", "problem": 49, "user": "4fce5474e4b0d4b2a7a9d451"}, {"code": "(fn mysplit\n  ([n coll] (mysplit n coll 0 ()))\n  ([n coll c result]\n    (if (= c n)\n      (cons (reverse result) (cons coll ()))\n      (recur n (rest coll) (inc c) (cons (first coll) result)))))", "problem": 49, "user": "4fbb9d80e4b081705acca2ea"}, {"code": "(fn [n c] \n     (list (take n c) (take-last (- (count c) n) c))\n       )", "problem": 49, "user": "4fccdc75e4b0ee37620e186d"}, {"code": "(fn [x col] (vector \n       (vec (take x col)) \n       (vec (drop x col))))", "problem": 49, "user": "4fc2e302e4b081705acca33a"}, {"code": "(fn [c v]\n  (vector (take c v) (drop c v))\n)", "problem": 49, "user": "4fcad14ce4b0ee37620e1856"}, {"code": "(juxt take drop)", "problem": 49, "user": "4f148418535d64f60314643a"}, {"code": "(fn [n lst]\n  (list (take n lst) (drop n lst)))", "problem": 49, "user": "4fba7d1ee4b081705acca2e0"}, {"code": "(fn [n l]\n  [(take n l)\n  (drop n l)])", "problem": 49, "user": "4fc8ce6ce4b0ee37620e183c"}, {"code": "(fn [n l]\r\n   [(take n l)\r\n    (drop n l)])", "problem": 49, "user": "4fc8b012e4b0ee37620e1838"}, {"code": "(fn splitted-at \n  [n coll]\n    [(take n coll) (drop n coll)]\n)", "problem": 49, "user": "4fbfbd4fe4b081705acca31c"}, {"code": "(juxt take drop)", "problem": 49, "user": "4fbacdbae4b081705acca2e5"}, {"code": "(fn [n v] [(take n v) (drop n v)])", "problem": 49, "user": "4fc7b079e4b0ee37620e1827"}, {"code": "(fn [n l] [(take n l) (drop n l)])", "problem": 49, "user": "4fcebce4e4b03432b189f404"}, {"code": "(fn [n seq]\n  [ (take n seq)                                                                                                                                                                              \n    (drop n seq)])", "problem": 49, "user": "4fbd292fe4b081705acca300"}, {"code": "(fn [n coll] (list (take n coll) (drop n coll)))", "problem": 49, "user": "4fd22e70e4b04c3a95aa041c"}, {"code": "(fn [n coll] (conj [] (vec (take n coll)) (vec (drop n coll))))", "problem": 49, "user": "4fc52d79e4b081705acca386"}, {"code": "(fn [n l] (list (subvec l 0 n) (subvec l n (count l))))", "problem": 49, "user": "4daf4d2fedd6309eace4d178"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4fb12b35e4b081705acca275"}, {"code": "(juxt take drop)\n;#(vector (take %1 %2) (drop %1 %2))\n\n;#(concat [(take %1 %2)] [(drop %1 %2)])", "problem": 49, "user": "4fcc103fe4b0ee37620e185f"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "4ecbd630535df97575fdabe1"}, {"code": "(fn [n s] [(take n s) (drop n s)])", "problem": 49, "user": "4e5fdd68535d8ccf87e9fe4f"}, {"code": "(fn [n coll] [(take n coll)(drop n coll)])", "problem": 49, "user": "4fbcbd50e4b081705acca2f9"}, {"code": "(fn split-sequence\n  ; \"split a sequence into two parts\"\n  [n s]\n  (loop [n n s s acc []]\n    (cond\n     (zero? n) [acc s]\n     (empty? s) acc\n     :else (recur (dec n) (rest s) (conj acc (first s))))))", "problem": 49, "user": "4fd16778e4b04c3a95aa040f"}, {"code": "(fn [i l](\n  (fn r [ci cl fl] (\n    if (< ci 1) \n      (vector fl cl) \n      (r (dec ci) (rest cl) (concat fl (vector (first cl))))\n    )) i l (vector)\n  ))", "problem": 49, "user": "4fcf5292e4b03432b189f40e"}, {"code": "(fn [num col] [(take num col) (drop num col)])", "problem": 49, "user": "4fd7962ee4b0dab7d829f385"}, {"code": "(fn [n s] [(take n s) (drop n s)])", "problem": 49, "user": "4fc8f1fee4b0ee37620e183f"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4fadbb17e4b081705acca23e"}, {"code": "#(list (take % %2)(drop % %2))", "problem": 49, "user": "4fb23582e4b081705acca28a"}, {"code": "(fn [n c](vector (subvec c 0 n) (subvec c n)))", "problem": 49, "user": "4fd29d7ce4b04c3a95aa0424"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "4fd96694e4b05e33b9224f37"}, {"code": "(juxt take drop)", "problem": 49, "user": "4fd2789ee4b04c3a95aa0422"}, {"code": "#(vector (take %1 %2) (nthnext %2 %1))", "problem": 49, "user": "4fccb31be4b0ee37620e1868"}, {"code": "(fn [n s]\n  (let [c (count s)]\n    (list (take n s) (take-last (- c n) s))))", "problem": 49, "user": "4fc50441e4b081705acca36f"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4e929dd0535dbda64a6f6b05"}, {"code": "(juxt take drop)", "problem": 49, "user": "4f463dfde4b0d56e7bb92b99"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "4fcd155de4b065de69964ca3"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4ead2841535d7eef3080731e"}, {"code": "(fn [n x]\n  [(take n x)\n  (reverse (take (- (count x) n) (reverse x)  ) )]\n\n  )", "problem": 49, "user": "4fbd12a5e4b081705acca2fd"}, {"code": "(fn [n c] [(take n c) (drop n c)])", "problem": 49, "user": "4fca2ef0e4b0ee37620e184e"}, {"code": "(fn [p s]\n  [(subvec s 0 p) (subvec s p)]\n)", "problem": 49, "user": "4ec56b5b535d6d7199dd369f"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "4e726575535d5021c1a89660"}, {"code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "4fc66c43e4b0ee37620e1812"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4fd6f4d8e4b0dab7d829f37b"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4fc6d2c1e4b0ee37620e181b"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4fdd27f3e4b05e33b9224f78"}, {"code": "(fn [x coll]\n        [(take x coll) (drop x coll)])", "problem": 49, "user": "4fb591aee4b081705acca2c0"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "4fd6028ce4b0d4de60cee37b"}, {"code": "(fn [n s] [(take n s) (drop n s)])", "problem": 49, "user": "4dad8c92c9a9d6ed1699dc57"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "4ee6166e535d93acb0a66854"}, {"code": "(fn [N S]\n  (loop [S1 [],S2 S,i 1]\n    (if (<= i N)\n      (recur (conj S1 (first S2)) (rest S2) (inc i))\n      (conj [] S1 S2))))", "problem": 49, "user": "4fda016ae4b05e33b9224f42"}, {"code": "(fn split[n coll] (\n  list (take n coll) (drop n coll)\n  )\n)", "problem": 49, "user": "4fce75cfe4b03432b189f400"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4fa05b99e4b0dcca54ed6d47"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4fd2e5d8e4b04c3a95aa0427"}, {"code": "(fn [ n s ]  (vector   (take n s)   (subvec s n)) )", "problem": 49, "user": "4fdf750be4b05e33b9224f9c"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4fba0877e4b081705acca2dd"}, {"code": "(fn sp-at [n s]\r\n  (loop [l 0\r\n         s s\r\n         h '()]\r\n    (if (= l n)\r\n        (list (reverse h) s)\r\n        (recur (inc l) (rest s) (cons (first s) h)))))", "problem": 49, "user": "4fcc6cb3e4b0ee37620e1861"}, {"code": "(fn my-split-at [n coll]\r\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "4fe54ee8e4b0e8f79898fec3"}, {"code": "(fn sp [x y]\n  [(take x y)\n   ((apply comp (take x (repeat rest))) y)])", "problem": 49, "user": "4fc93728e4b0ee37620e1844"}, {"code": "#(vector \r\n    (subvec %2 0 %1) \r\n    (apply vector (nthnext %2 %1))\r\n   )", "problem": 49, "user": "4fe588b6e4b0e8f79898fec5"}, {"code": "(fn [n s]\n  [(take n s) (drop n s)])", "problem": 49, "user": "4f726dd2e4b07046d9f4f034"}, {"code": "(fn [num coll] [(take num coll) (drop num coll)])", "problem": 49, "user": "4fdf2b50e4b05e33b9224f93"}, {"code": "(fn [split-ind xs] [(take split-ind xs) (drop split-ind xs)])", "problem": 49, "user": "4f748b54e4b044e54cd9a8fa"}, {"code": "(juxt take drop)", "problem": 49, "user": "4fe21889e4b0dd6cd5ce3641"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4fb57e06e4b081705acca2bf"}, {"code": "(fn [n s] [(take n s) (drop n s)])", "problem": 49, "user": "4e70a7c1535d5021c1a8963c"}, {"code": "#(let [x (take % %2) y (take-last (- (count %2) %) %2)] (conj (list y) x))", "problem": 49, "user": "4fd0af0ee4b04c3a95aa0405"}, {"code": "(juxt take drop)", "problem": 49, "user": "4fdec88fe4b05e33b9224f8e"}, {"code": "#(do [(take %1 %2) (drop %1 %2)])", "problem": 49, "user": "4fe8aef4e4b07c9f6fd12c6c"}, {"code": "(fn [amt coll]\n  [(take amt coll) (drop amt coll)])", "problem": 49, "user": "4fae4c11e4b081705acca248"}, {"code": "(fn [n xs] [(take n xs) (drop n xs)])", "problem": 49, "user": "4fc34787e4b081705acca33e"}, {"code": "(fn my-split-at\n   ([n xs] (my-split-at n [] xs))\n   ([n s [x & xs :as all]]\n    (if \n       (zero? n) [s all]\n      \t(recur (dec n) (conj s x) xs))))", "problem": 49, "user": "4fe8d862e4b0547ebccb2428"}, {"code": "(fn [at coll]\n  ((fn iter [in first-halve i]\n    (if (>= i at)\n      [first-halve, in]\n      (iter (rest in) (conj first-halve (first in)) (+ i 1))))\n    coll [] 0))", "problem": 49, "user": "4fe8e771e4b0547ebccb2431"}, {"code": "(fn [n s]\n  [(vec (take n s)) (vec (take-last (- (count s) n) s))])", "problem": 49, "user": "4f1e4ab5535d64f603146496"}, {"code": "(fn split [n coll]\r\n  ((juxt take drop) n coll))", "problem": 49, "user": "4e7e4a1f535db169f9c7970c"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4fe88f78e4b07c9f6fd12c45"}, {"code": "(fn [at coll]\n  [(take at coll) (drop at coll)])", "problem": 49, "user": "4fe9d647e4b0547ebccb2472"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4feada56e4b0140c20fb9c11"}, {"code": "(fn [n x]\r\n    (concat [(take n x)] [(drop n x)]))", "problem": 49, "user": "4fea08a9e4b0547ebccb2484"}, {"code": "(fn [n seq]\n   [(take n seq) (drop n seq)])", "problem": 49, "user": "4fe87e56e4b07c9f6fd12c40"}, {"code": "(fn [n xs]\r\n          [(take n xs) (drop n xs)])", "problem": 49, "user": "4f07ad89535dcb61093f6c2a"}, {"code": "(fn [i coll]\n  (let [init (empty coll)] ; ensure the correct datatype\n    (conj\n      (conj init (into init (take i coll)))\n      (into init (drop i coll)))))", "problem": 49, "user": "4fdb881ee4b05e33b9224f5e"}, {"code": "(fn [n coll] (vector (take n coll) (drop n coll)))", "problem": 49, "user": "4fdf4e2be4b05e33b9224f96"}, {"code": "(fn [n a] [(take n a) (drop n a)])", "problem": 49, "user": "4fe9de74e4b0547ebccb2475"}, {"code": "(fn [n c] [(take n c) (drop n c)])", "problem": 49, "user": "4fd11a93e4b04c3a95aa040a"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4da8dd6e30acd6ed12482a68"}, {"code": "#(vec [(take %1 %2) (nthnext %2 %1)])", "problem": 49, "user": "4fe13ad7e4b0dd6cd5ce3632"}, {"code": "(fn [n ls] [(take n ls) (take-last (- (count ls) n) ls)])", "problem": 49, "user": "4fe1597fe4b0dd6cd5ce3633"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4fea2de5e4b0140c20fb9bfe"}, {"code": "#(do [(take %1 %2) (drop %1 %2)])", "problem": 49, "user": "4fde492be4b05e33b9224f8a"}, {"code": "(juxt take drop)", "problem": 49, "user": "4fe84c74e4b07c9f6fd12c3c"}, {"code": "(fn pn [n s]\r\n  (conj [] (take n s)  (drop n s))\r\n)", "problem": 49, "user": "4febb4dae4b0681fd128dc98"}, {"code": "(fn mysplit-at [n coll]\r\n  (vector (take n coll) (drop n coll)))", "problem": 49, "user": "4fd170fce4b04c3a95aa0411"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4fe8b6afe4b07c9f6fd12c76"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4fd9d162e4b05e33b9224f3c"}, {"code": "(fn split [n coll]\r\n    [(take n coll) (drop n coll)])", "problem": 49, "user": "4ff07688e4b0678c553fc324"}, {"code": "#(cons (take %1 %2) (list (drop %1 %2)))", "problem": 49, "user": "4fe83efbe4b07c9f6fd12c3b"}, {"code": "(fn [n s]\n  [(take n s) (drop n s)])", "problem": 49, "user": "4ff304f4e4b0678c553fc343"}, {"code": "(fn [x c] (concat (vector (take x c)) (vector (drop x c))))", "problem": 49, "user": "4e95c771535dbda64a6f6b39"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "4fe15ffee4b0dd6cd5ce3634"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4f4fbed7e4b03ad3f0c10ce8"}, {"code": "(fn [n l]\r\n  (list (take n l) (drop n l)))", "problem": 49, "user": "4ff201d7e4b0678c553fc330"}, {"code": "(fn [n aseq]\n  \t(let [v (vec aseq)]\n\t\t\t[(subvec v 0 n) (subvec v n)]))", "problem": 49, "user": "4e6a63fd535d8ccf87e9feda"}, {"code": "(fn \n  split [i s] [(take i s) (drop i s)])", "problem": 49, "user": "4fedd2cae4b0198f34b063ba"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4ff50604e4b0678c553fc365"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4ff5744ae4b0678c553fc36a"}, {"code": "(fn [n lat]\r\n  (cons (take n lat) (cons (drop n lat) '())))", "problem": 49, "user": "4fb4ca71e4b081705acca2b0"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4fe2501ae4b0dd6cd5ce3644"}, {"code": "(fn\r\n  [n coll]\r\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "4fee04a0e4b0678c553fc308"}, {"code": "#(vec (list \n    (vec (take %1 %2))\n    (vec (take-last (- (count %2) %1) %2))\n  ))", "problem": 49, "user": "4fba77fae4b081705acca2df"}, {"code": "(fn [n c]\n  (cons (take n c) (list (drop n c))))", "problem": 49, "user": "4ff4c9dae4b0678c553fc360"}, {"code": "#(cons (take %1 %2) (list (drop %1 %2)))", "problem": 49, "user": "4ff3e771e4b0678c553fc356"}, {"code": "#(vector (first (partition %1 %2)) (nthnext %2 %1))", "problem": 49, "user": "4fcc70b3e4b0ee37620e1862"}, {"code": "(fn [i col]\n  [(take i col) (take (count col) (drop i col))])", "problem": 49, "user": "4feff3b6e4b0678c553fc31e"}, {"code": "(fn [n lst]\n  (list (take n lst) (drop n lst))\n)", "problem": 49, "user": "4ff743fde4b0678c553fc38d"}, {"code": "(fn [i a] [(take i a) (drop i a)])", "problem": 49, "user": "4fedd993e4b0198f34b063bc"}, {"code": "(fn [d s]\n  (loop [x s\n         c d\n         l []\n         r []]\n    (if (nil? x)\n      [l r]\n      (if (zero? c)\n        (recur (next x) c l (conj r (first x)))\n        (recur (next x) (dec c) (conj l (first x)) r)))))", "problem": 49, "user": "4ff9d4e5e4b0678c553fc3b0"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4ff889f2e4b0678c553fc399"}, {"code": "(fn [n c] [(take n c) (drop n c)])", "problem": 49, "user": "4e84a7dd535db62dc21a62e2"}, {"code": "(fn [copy-count seq-to-split] \n  [\n    (take copy-count seq-to-split)\n    (drop copy-count seq-to-split)\n  ])", "problem": 49, "user": "4f92884de4b0dcca54ed6caf"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "4e9c3648535dbda64a6f6b7d"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4fefd624e4b0678c553fc31b"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "4fe89297e4b07c9f6fd12c4c"}, {"code": "(fn [n l]\n  (let [getter (fn [x] (get l x))]\n         [(vec (map getter (range 0 n)))\n        (vec (map getter (range n (count l))))]))", "problem": 49, "user": "4f0324d2535dcb61093f6a69"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4ffb38e8e4b0678c553fc3c6"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4f230adde4b0d66497709fdf"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "4db2cd84535df7e46ed9b6c6"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "4e57d1e2535d8a8b8723a289"}, {"code": "(fn [n l]\n[n l]\n  (let [d (- (count l) n)]\n    [ (vec (drop-last d l)) (vec  (take-last d l))]))", "problem": 49, "user": "4fea1f9ee4b0547ebccb248b"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "4ec7c32c535d6d7199dd36e6"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4fe8da4de4b0547ebccb2429"}, {"code": "(fn my-split [n coll]\n  (vector (take  n coll) (drop n\tcoll)))", "problem": 49, "user": "4fe8e719e4b0547ebccb2430"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4f4d0a52e4b03ad3f0c10c9d"}, {"code": "(fn [n col] (vector (take n col) (take-last (- (count col) n) col)))", "problem": 49, "user": "4fdb02aae4b05e33b9224f56"}, {"code": "(fn [i sq] [(take i sq) (drop i sq)])", "problem": 49, "user": "4fe89db2e4b07c9f6fd12c59"}, {"code": "#(vec [(take %1 %2) (drop %1 %2)])", "problem": 49, "user": "4fe1a734e4b0dd6cd5ce3637"}, {"code": "(juxt take drop)", "problem": 49, "user": "4f244f26e4b0d66497709fea"}, {"code": "#(conj (empty %2) (take % %2) (drop % %2))", "problem": 49, "user": "4ff83003e4b0678c553fc396"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "4fe9efe5e4b0547ebccb247a"}, {"code": "(fn [x xs] [(take x xs) (drop x xs)])", "problem": 49, "user": "4ffa213ee4b0678c553fc3b7"}, {"code": "#(vec [(take % %2) (drop % %2)] )", "problem": 49, "user": "4ff67852e4b0678c553fc37e"}, {"code": "(fn splt\r\n  ([n x] (splt n x [] 0))\r\n  ([n x y i]\r\n    (if (< i n)\r\n      (recur n (rest x) (conj y (first x)) (inc i))\r\n      [y x])))", "problem": 49, "user": "500159b3e4b0678c553fc419"}, {"code": "#(vec [(vec (take %1 %2)) (vec (drop %1 %2))])", "problem": 49, "user": "4ff355a1e4b0678c553fc34d"}, {"code": "(fn [n s]\n  (let [newseq (partition-all n s)]\n       [(first newseq) \n        (mapcat identity (rest newseq))]))", "problem": 49, "user": "4ec9549d535d6d7199dd36fe"}, {"code": "#(vec [(take % %2) (drop % %2)])", "problem": 49, "user": "4ff9a200e4b0678c553fc3ab"}, {"code": "(fn [n coll] (vector (take n coll) (drop n coll)))", "problem": 49, "user": "4fe8a3bde4b07c9f6fd12c61"}, {"code": "(fn [nth lst]                                                       \n            (cons (take nth lst) (cons (drop nth lst) '() )))", "problem": 49, "user": "4eed6b32535d93acb0a668bc"}, {"code": "(fn [n s] [(take n s) (drop n s)])", "problem": 49, "user": "5003b5a1e4b0678c553fc43f"}, {"code": "(fn [i lst]\n  [(take i lst) (drop i lst)])", "problem": 49, "user": "4ffe4d43e4b0678c553fc3f1"}, {"code": "(fn [n lst] (cons (take n lst) (list (drop n lst))))", "problem": 49, "user": "4ff9cfd6e4b0678c553fc3af"}, {"code": "(fn [n s] [(take n s) (drop n s)])", "problem": 49, "user": "5003deb9e4b0678c553fc445"}, {"code": "(juxt take drop)", "problem": 49, "user": "5003ee7de4b0678c553fc446"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "50045388e4b0678c553fc44e"}, {"code": "#(list (take %1 %2) \n(nthrest %2 %1))", "problem": 49, "user": "4fdf5403e4b05e33b9224f98"}, {"code": "(fn [n seq] (list (take n seq) (nthrest seq n)))", "problem": 49, "user": "5003bb77e4b0678c553fc442"}, {"code": "(fn[n s]\n  (let [f (take n s) l (drop n s)]\n    [f l]))", "problem": 49, "user": "4ec64981535d6d7199dd36c7"}, {"code": "(fn [n,s] [(take n s) (nthrest s n)])", "problem": 49, "user": "4ff76effe4b0678c553fc390"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "5002b6e5e4b0678c553fc42c"}, {"code": "#(vector (subvec %2 0 %) (subvec %2 %))", "problem": 49, "user": "4e260220535deb9a81d77ef0"}, {"code": "(fn [n c] [(take n c) (drop n c)])", "problem": 49, "user": "4ff8a89de4b0678c553fc39d"}, {"code": "(fn [n l]\n  [(take n l) (drop n l)])", "problem": 49, "user": "4fbef9a6e4b081705acca316"}, {"code": "(fn [n s]\n  [(take n s) (subvec s n)])", "problem": 49, "user": "4eb6d3ab535d7eef30807370"}, {"code": "(fn chop-after [ct ovec]                                                                                                                         \n    [(subvec ovec 0 ct) (subvec ovec ct (count ovec))])", "problem": 49, "user": "50057f23e4b0678c553fc466"}, {"code": "(juxt take drop)", "problem": 49, "user": "500933a6e4b046cdb195e074"}, {"code": "(fn [n coll]\n  (vector \n    (into [] (take n coll))\n    (into [] (drop n coll))))", "problem": 49, "user": "50097962e4b03d00572d2d6c"}, {"code": "(fn [n c] [(take n c) (drop n c)])", "problem": 49, "user": "500aa15ee4b03d00572d2d76"}, {"code": "#(vector (into [] (take %1 %2)) (into [] (drop %1 %2)) )", "problem": 49, "user": "50057aa5e4b0678c553fc465"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "4ee75ec2535d93acb0a66867"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "500d8c49e4b07ccb9a7ddb00"}, {"code": "(fn [n coll] (conj [] (vec (subvec coll 0 n)) (vec (subvec coll n  ))))", "problem": 49, "user": "4fc9a977e4b0ee37620e1847"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4f94d3a5e4b0dcca54ed6cc5"}, {"code": "(fn [n lst] [(take n lst) (drop n lst)])", "problem": 49, "user": "500cb910e4b05f7c30cfa698"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "4fe900a6e4b0547ebccb243a"}, {"code": "(fn my-split-at\n  ([spot s] (my-split-at [] [] spot s))\n  ([f l spot s]\n    (if (empty? s)\n      [f l]\n      (if (< (count f) spot)\n        (my-split-at (conj f (first s)) l spot (rest s))\n        (my-split-at f (conj l (first s)) spot (rest s))\n      )\n    )\n  )\n)", "problem": 49, "user": "4fff00ede4b0678c553fc3fc"}, {"code": "(fn [n coll]\n  (loop [fst [], snd [], i 0, xs coll]\n    (if (seq xs)\n      (if (< i n)\n        (recur (conj fst (first xs)) snd (inc i) (rest xs))\n        (recur fst (conj snd (first xs)) (inc i) (rest xs)))\n      [fst snd])))", "problem": 49, "user": "500ff421e4b0ae202717946f"}, {"code": "(fn z [n l] [(take n l) (drop n l)])", "problem": 49, "user": "4fd8544be4b0dab7d829f390"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "500900dee4b0144d4f561e42"}, {"code": "(fn[n,s] (list (take n s) (take-last (- (count s) n) s)) )", "problem": 49, "user": "4ffd92e7e4b0678c553fc3e3"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "500d1db4e4b05f7c30cfa69f"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4ff4f5c4e4b0678c553fc362"}, {"code": "(juxt take drop)", "problem": 49, "user": "5014718fe4b094324338f8e3"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4f8320e9e4b033992c121c18"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "50142490e4b07d18bdaaf70a"}, {"code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "5007f751e4b0b17c647f522b"}, {"code": "#(concat [(take %1 %2)] [(drop %1 %2)])", "problem": 49, "user": "5012614ee4b02a085b99dc79"}, {"code": "(fn [n coll]\n  (loop [m 0\n        coll-1 []\n        coll-2 (vec coll)]\n    (if (= m n)\n        (vector coll-1 coll-2)\n        (recur (inc m) (conj coll-1 (first coll-2))\n                (rest coll-2)))))", "problem": 49, "user": "50127fbfe4b030d97e4db70f"}, {"code": "(fn [n x]\n  (list (take n x) (take-last (- (count x) n) x)))", "problem": 49, "user": "5012aefce4b0c8732600222a"}, {"code": "#(vector (take %1 %2)\n         (drop %1 %2))", "problem": 49, "user": "5014754de4b094324338f8e5"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "50166470e4b052339a490e76"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "5009fd0ae4b03d00572d2d70"}, {"code": "(fn [n s] (list (take n s) (drop n s)))", "problem": 49, "user": "5007cdb9e4b0b17c647f5227"}, {"code": "(fn [n s]\n  [(map #(nth s %) (range 0 n))\n   (map #(nth s %) (range n (count s)))])", "problem": 49, "user": "501284d9e4b030d97e4db710"}, {"code": "(fn [n xs] [(take n xs) (drop n xs)])", "problem": 49, "user": "4fe4c09ee4b0e8f79898febb"}, {"code": "(fn[n s][(take n s) (drop n s)])", "problem": 49, "user": "5017eface4b02f523d7cc5e7"}, {"code": "#(list (take % %2)(drop % %2))", "problem": 49, "user": "4f5d0f25e4b0030a34fb2b33"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "501688f7e4b052339a490e7a"}, {"code": "(fn b [n nn] (loop [i 0 l nn e '()] (if (= i n) (cons (reverse e) (conj '() l)) (if (> n i) (recur (inc i) (next l) (conj e (first l)))))))", "problem": 49, "user": "4fe97adde4b0547ebccb245e"}, {"code": "(juxt take drop)", "problem": 49, "user": "500b61b1e4b03d00572d2d81"}, {"code": "(fn splt [n l] [(take n l) \n                (reverse \n                  (take (- (count l) n) \n                          (reverse l)))])", "problem": 49, "user": "5009902ee4b03d00572d2d6d"}, {"code": "(fn [num s]\n  [(take num s) (drop num s)])", "problem": 49, "user": "50052fd0e4b0678c553fc45d"}, {"code": "#(concat [(take %1 %2)] [(drop %1 %2)])", "problem": 49, "user": "5017f840e4b02f523d7cc5e8"}, {"code": "(fn [n c]\n    [(take n c) (drop n c)])", "problem": 49, "user": "500ea957e4b00fff93030f9b"}, {"code": "(fn [x s] [(apply vector (take x s)) (apply vector (drop x s))])", "problem": 49, "user": "500854c4e4b028e089d3518c"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "500e91aae4b00fff93030f99"}, {"code": "(fn [pos coll]\n  [(take pos coll) (nthrest coll pos)]\n)", "problem": 49, "user": "50182f53e4b02f523d7cc5ec"}, {"code": "(fn [x y] [(take x y) (drop x y)])", "problem": 49, "user": "501d34f6e4b066e56b9d0b1e"}, {"code": "(fn __ [i l]\n  [(take i l) (drop i l)])", "problem": 49, "user": "4fa719c0e4b081705acca1bf"}, {"code": "(fn [a b]\n   (let [ekat (keep-indexed #(if (< %1 a) %2) b)\n         tokat (keep-indexed #(if (>= %1 a) %2) b)]\n     (concat [ekat] [tokat])))", "problem": 49, "user": "5013141de4b0f26a0e3320a9"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4f528f70e4b03ad3f0c10d3f"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4fb7b80ae4b081705acca2d4"}, {"code": "#(concat (vector (take % %2)) (vector (subvec %2 %)))", "problem": 49, "user": "4ff2f0a9e4b0678c553fc341"}, {"code": "(fn [n s]\n  (let [test #(fn [idx x](if (% idx n) x))]\n    [(keep-indexed (test <) s) (keep-indexed (test >=) s)]))", "problem": 49, "user": "4ed8b598535d10e5ff6f52fc"}, {"code": "(fn [s coll] [(take s coll) (drop s coll)])", "problem": 49, "user": "4e61bb60535d8ccf87e9fe5c"}, {"code": ";Thought too much :)\n(fn my-split-at [n coll]\n  ((fn [n res accum]\n\t\t(cond \n\t\t\t(> n (count res)) res\n\t\t\t(zero? n) [accum res]\n\t\t\t:else\n\t\t\t\t(recur (dec n) (rest res) (conj accum (first res))))) n coll []))", "problem": 49, "user": "501c1492e4b086d93747d180"}, {"code": "(fn [n col] [(vec (take n col)) (vec (drop n col))])", "problem": 49, "user": "5013193ae4b0f26a0e3320ab"}, {"code": "(fn splt-at [n s] (list (take n s) (nthnext s n)))", "problem": 49, "user": "4fcf642ee4b03432b189f410"}, {"code": "(fn [n coll] [ (take n coll) (drop n coll) ])", "problem": 49, "user": "5018ed15e4b011a2e0bf6412"}, {"code": "#(vector (subvec %2 0 %) (subvec %2 %))", "problem": 49, "user": "501d52a8e4b066e56b9d0b20"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4fd2529ae4b04c3a95aa041f"}, {"code": "(fn [i s] [(take i s) (drop i s)])", "problem": 49, "user": "501dfd54e4b051153f3b5b80"}, {"code": "(fn [x s]\n  [(take x s) (drop x s)])", "problem": 49, "user": "50270618e4b01614d1633feb"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "4fa09916e4b0dcca54ed6d4e"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "5028cd0fe4b01614d1633ffc"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4ff9f5c5e4b0678c553fc3b4"}, {"code": "(fn [n v]\n  [(take n v) (drop n v)])", "problem": 49, "user": "5028bce0e4b01614d1633ffb"}, {"code": "(fn [num col]\n  (loop [n num\n         c1 []\n         c2 col]\n    (if (zero? n)\n        [c1 c2]\n        (recur\n          (dec n)\n          (conj c1 (first c2))\n          (rest c2)))))", "problem": 49, "user": "4e4ca885535dc968683fc4df"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "502ac96de4b0614b5299611b"}, {"code": "(fn [n coll] \n  (conj (list (drop n coll)) (take n coll)))", "problem": 49, "user": "502a5fa4e4b09e8f859a9fbd"}, {"code": "(fn asdf [x ss]\n   (if (= 2 x) [(take 2 ss) (drop 2 ss)] \n       (if (= 1 x ) [(take 1 ss) (drop 1 ss)] [(take 3 ss) (drop 3 ss)])))", "problem": 49, "user": "5012036ce4b0a040369c12f4"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "502873a8e4b01614d1633ff8"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "50052d38e4b0678c553fc45c"}, {"code": "(fn [n x] [(take n x) (drop n x)])", "problem": 49, "user": "50223ee2e4b0846bc458ae48"}, {"code": "#( let [a (range %1) \n        b (range %1 (count %2))]\n  [ (vec (map %2 a)) \n    (vec (map %2 b))]\n)", "problem": 49, "user": "502952c9e4b0b33e9bf6fdf1"}, {"code": "(juxt take drop)", "problem": 49, "user": "5027fc0ce4b01614d1633ff2"}, {"code": "(fn [n sq]\n  [(take n sq) (drop n sq)])", "problem": 49, "user": "5025b93ce4b0c969f0b056df"}, {"code": "(fn [n coll]\n  (let [a (take n coll)\n        b (drop n coll)]\n    [a b]))", "problem": 49, "user": "4e47f4f3535dc968683fc4bb"}, {"code": "(fn [idx xs] [(keep-indexed (fn [i x] (if (< i idx) x)) xs)\n             (keep-indexed (fn [i x] (if (>= i idx) x)) xs)])", "problem": 49, "user": "502d387fe4b0d96a44ab202f"}, {"code": "#(conj [(subvec %2 0 %1)] (subvec %2 %1))", "problem": 49, "user": "4f601623e4b0defedf855fa3"}, {"code": "#(vector (subvec %2 0 %) (subvec %2 %))", "problem": 49, "user": "502d39c5e4b0d96a44ab2031"}, {"code": "#((fn foo [n x acc]\n  (cond\n    (= n 0) (list acc x)\n    :else (foo (dec n) (rest x) \n      (concat acc (list (first x)))))) %1 %2 '[])", "problem": 49, "user": "4dea9fae535d08e6dec9fe02"}, {"code": "#(vector (take %1 %2) (drop %1 %2) )", "problem": 49, "user": "4eaf08ce535d7eef3080732d"}, {"code": "#(vector (subvec %2 0 %1) (subvec %2 %1))", "problem": 49, "user": "4ff78679e4b0678c553fc392"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4fb1325de4b081705acca276"}, {"code": "(fn [n coll]\n  (vector (vec (take n coll)) (vec (nthnext coll n))\n))", "problem": 49, "user": "5030f16fe4b05b7df5a0b84b"}, {"code": "(fn [n s]\n  (loop [x [] y[] n n s s]\n    (if (= n 0) (vector x y)\n      (recur (conj x (first s)) (rest s) (dec n) (rest s)))))", "problem": 49, "user": "5029fccee4b023940c84aa47"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4ee528fb535d1385b2869d87"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "4fb01e53e4b081705acca260"}, {"code": "(fn [n s] [ (take n s) (drop n s)])", "problem": 49, "user": "502904e0e4b0feaf66e22fad"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "502bb7c0e4b0194ad32ea1a3"}, {"code": "(fn [x s]\n  [(take x s) (drop x s)])", "problem": 49, "user": "50335235e4b0c6c1199c710b"}, {"code": "(juxt take drop)", "problem": 49, "user": "503255d0e4b0e78df07b092b"}, {"code": "(fn [x xs] into [] (map #(into [] %) (split-with #(< (.indexOf xs %) x) xs)))", "problem": 49, "user": "5032b398e4b00c0952a257eb"}, {"code": "(fn [a b]\n  (loop [x a\n         l b\n         res1 []\n         res2 []]\n    (cond \n      (empty? l) (conj [] res1 res2)\n      (= x 0) (recur x (rest l) res1 (conj res2 (first l)))\n      :else (recur (dec x) (rest l) (conj res1 (first l)) res2)\n    )         \n  )  \n)", "problem": 49, "user": "4fe610fde4b0e8f79898fece"}, {"code": "(juxt take drop)", "problem": 49, "user": "50336c6be4b0c6c1199c710f"}, {"code": "(fn [cnt lst] (conj (list (take-last (- (count lst) cnt) lst)) (take cnt lst)))", "problem": 49, "user": "4fe9dda9e4b0547ebccb2474"}, {"code": "(fn [a l] [(take a l) (drop a l)])", "problem": 49, "user": "502d39f8e4b0d96a44ab2032"}, {"code": "#(let [a (take %1 %2) b (drop %1 %2)] [a b])", "problem": 49, "user": "5032a96ae4b0e78df07b0932"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "502a9fdee4b095a7adb898b4"}, {"code": "#(list (take %1 %2) (nthrest %2 %1))", "problem": 49, "user": "4ffe8193e4b0678c553fc3f4"}, {"code": "#(concat [(take % %2) (drop % %2)] [])", "problem": 49, "user": "50361b6be4b0fbe0a74d26be"}, {"code": "(fn [n xs] [(take n xs) (drop n xs)])", "problem": 49, "user": "4f3ae998e4b0e243712b1f1f"}, {"code": "(fn [n coll]\n  (loop [input coll output []]\n    (if (= (count output) n)\n      [output input]\n      (recur (rest input) (concat output [(first input)])))))", "problem": 49, "user": "5033a1fbe4b062bc5d7ae155"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4ded27db535d08e6dec9fe0a"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "503a234de4b088a6a14ca76d"}, {"code": "(fn [n s]\n  [(take n s) (drop n s)])", "problem": 49, "user": "4f58d92fe4b0a7574ea71858"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "5034b0e1e4b062bc5d7ae167"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "5034a14de4b062bc5d7ae165"}, {"code": "(fn [s coll]\n  [(take s coll),(nthrest coll s)])", "problem": 49, "user": "5038f8d2e4b088a6a14ca75f"}, {"code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "5032b066e4b00c0952a257ea"}, {"code": "(fn [num list]\n   (let\n       [front (vec (take num list))\n        back (vec (drop num list))]\n     [front back]))", "problem": 49, "user": "4f03818e535dcb61093f6b00"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "503917a0e4b088a6a14ca763"}, {"code": "(juxt take drop)", "problem": 49, "user": "501fa1aee4b0cb6ebc0a42eb"}, {"code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "5036dea0e4b0af0658af77a4"}, {"code": "(fn [i e]\n  (partition-by #(< (.indexOf e %) i) e))", "problem": 49, "user": "502940a9e4b061fd216be4b8"}, {"code": "(fn [initial-x lst]\n  (loop [x 0 coll [] rst lst]\n    (cond (or (empty? rst) (= x initial-x)) [(reverse coll) rst]\n          :else (recur (+ x 1) \n                       (cons (first rst) coll)\n                       (rest rst)))))", "problem": 49, "user": "4f515bd3e4b03ad3f0c10d1f"}, {"code": "(fn [n v] [(take n v) (drop n v)])", "problem": 49, "user": "503b6995e4b07a1917cc34dd"}, {"code": "#(concat [(take %1 %2)] [(drop %1 %2)])", "problem": 49, "user": "503ca47fe4b06c4e0e1fa24f"}, {"code": "(fn [n x] (vector (take n x) (drop n x)))", "problem": 49, "user": "4f616892e4b0defedf855fbf"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "5036eba7e4b0af0658af77a5"}, {"code": "(fn f [pos s]\r\n  (let [sone (take pos s)\r\n        stwo (subvec s pos)]\r\n    [sone stwo]))", "problem": 49, "user": "4eb99b3d535dfed6da9c6d57"}, {"code": "(fn [i xs] (list (take i xs) (drop i xs)))", "problem": 49, "user": "503d129fe4b06c4e0e1fa254"}, {"code": "(juxt take drop)", "problem": 49, "user": "503de5aae4b06c4e0e1fa259"}, {"code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "5012ec0ae4b0c87326002230"}, {"code": "(fn [c v] (reduce (fn [s i] (let [a (if (<= c (count (s 0))) 1 0)] (assoc s a (conj (s a) i)))) [[][]] v))", "problem": 49, "user": "4e99f2e1535dbda64a6f6b6c"}, {"code": "(fn [n xs] (vector (take n xs) (drop n xs)))", "problem": 49, "user": "4fcf763de4b03432b189f413"}, {"code": "(juxt take drop)", "problem": 49, "user": "50427899e4b0add3005c0fc2"}, {"code": "(juxt take drop)", "problem": 49, "user": "4fd81472e4b0dab7d829f38e"}, {"code": "#(conj [] (vec (take % %2)) (vec (drop % %2)))", "problem": 49, "user": "502d4ea0e4b02fc10c6c6e46"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4fb266a5e4b081705acca28c"}, {"code": "(juxt take drop)", "problem": 49, "user": "4db0114d838c48654951d9b8"}, {"code": "(fn [n l]\n  [(take n l) (drop n l)])", "problem": 49, "user": "50435852e4b034ff00315d22"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "503ea917e4b06c4e0e1fa26b"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "50479524e4b0371827a27bc4"}, {"code": "(fn [n s]\r\n  (list (take n s) (drop n s)))", "problem": 49, "user": "4fdc067fe4b05e33b9224f69"}, {"code": "#(list (take % %2) (nthrest %2 %))", "problem": 49, "user": "50464831e4b011c5dfee771f"}, {"code": "(fn [num vct]\n    (loop [num num hd [] tl vct]\n      (if (zero? num)\n           [ hd tl]\n           (recur (- num 1) (conj hd (first tl)) (vec (rest tl)))\n)))", "problem": 49, "user": "5032e6c8e4b0e4096af89718"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "5046b003e4b011c5dfee7727"}, {"code": "(fn [n s]\n   (cons (take n s) (list (drop n s)) )\n  )", "problem": 49, "user": "5048202fe4b0ec70b3ef8d9a"}, {"code": "(fn spl [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "4fab1ea1e4b081705acca210"}, {"code": "#(conj (conj () (drop % %2)) (take % %2))", "problem": 49, "user": "503354c3e4b0c6c1199c710c"}, {"code": "(fn splitAt [n coll]\n  (conj (empty coll)\n        (take n coll)\n        (drop n coll)))", "problem": 49, "user": "4efa3d4b535dced4c769f270"}, {"code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "50481532e4b0ec70b3ef8d96"}, {"code": "(juxt take drop)", "problem": 49, "user": "50432da5e4b034ff00315d1e"}, {"code": "#(conj [] (subvec %2 0 %1) (subvec %2 %1) )", "problem": 49, "user": "50463347e4b011c5dfee771e"}, {"code": "(fn [n l]\n  (loop [a [] l l n n]\n    (if (zero? n)\n        [a l]\n        (recur (conj a (first l)) (rest l) (dec n)))))", "problem": 49, "user": "4db6d993535d1e037afb2180"}, {"code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "504d0116e4b022602c20b089"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "504e13fce4b078edc5f593bc"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "504ed350e4b069badc5a33d1"}, {"code": "(fn [n coll]\n  (list (take n coll)(drop n coll)))", "problem": 49, "user": "4db2cc55535df7e46ed9b6c5"}, {"code": "(fn split-at*\n  [where lst]\n  (let [front (take where lst)\n        end (filter #(not (some #{%} front)) lst)]\n    (vector front end)))", "problem": 49, "user": "4edfb618535d10e5ff6f5343"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "50431cbce4b034ff00315d1c"}, {"code": "#(list (apply take %&) (apply drop %&))", "problem": 49, "user": "504e14c2e4b078edc5f593bf"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "504e397ee4b0f6ff3350c485"}, {"code": "(fn [n c]\n    [(take n c) (drop n c)])", "problem": 49, "user": "504f44cfe4b0a02f9cffde65"}, {"code": "(fn [n coll]\n    (loop [left (empty coll)\n           right (empty coll)\n           input coll\n           c 0]\n      (if (empty? input)\n        (conj (empty coll) left right)\n        (if (< c n)\n          (recur\n            (conj left (first input))\n            right\n            (rest input)\n            (inc c))\n          (recur\n            left\n            (conj right (first input))\n            (rest input)\n            (inc c))))))", "problem": 49, "user": "4fcbc18ae4b0ee37620e185c"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "504f2071e4b0e7ad84dbc4be"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "504dff92e4b078edc5f5938a"}, {"code": "(fn [n s] (cons (take n s) (cons (drop n s) nil)))", "problem": 49, "user": "4e8a880b535d65386fec210d"}, {"code": "(fn [n coll]\n (let [A (first (partition-all n coll))\n        B (apply concat (drop 1 (partition-all n coll)))]\n  (list A B )))    \n\n; this is the First issue solved with no help", "problem": 49, "user": "5041b3c0e4b06d8231e4facf"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "50456731e4b01f6c9a8b236b"}, {"code": "(fn f [s n o] (if (= n 0) [s o] (f (conj s (first o)) (dec n) (rest o)))) []", "problem": 49, "user": "504e9f5ce4b069badc5a33bd"}, {"code": "(fn [x s]\n  [(take x s) (drop x s)])", "problem": 49, "user": "504e1fdde4b0f6ff3350c468"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4fc5a693e4b0ee37620e17fc"}, {"code": "#(conj [] (take % %2) (drop % %2))", "problem": 49, "user": "504f865ee4b0a02f9cffde90"}, {"code": "#(cons (take %1 %2) (list (drop %1 %2)))", "problem": 49, "user": "504e685fe4b0f6ff3350c4ae"}, {"code": "(fn [x col]\n  [(take x col) (drop x col)])", "problem": 49, "user": "50435689e4b034ff00315d21"}, {"code": "(fn [k coll]\r\n  (cons (take k coll) (list (drop k coll))))", "problem": 49, "user": "4e75edfe535d7a570dd295c7"}, {"code": "(fn [n sq] [(take n sq)(drop n sq)])", "problem": 49, "user": "504e108ce4b078edc5f593b3"}, {"code": "(fn [pos coll] \n  [(take pos coll) (drop pos coll)])", "problem": 49, "user": "4f038ed6535dcb61093f6b24"}, {"code": "(fn [n coll]\n    [(take n coll) (nthrest coll n)])", "problem": 49, "user": "504e1abee4b0f6ff3350c45d"}, {"code": "(fn [n coll]\r\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "50436470e4b034ff00315d23"}, {"code": "(juxt take drop)", "problem": 49, "user": "4ebbc1f6535dfed6da9c6d72"}, {"code": "(fn [n xs] [(take n xs) (drop n xs)])", "problem": 49, "user": "504ffb8fe4b0a02f9cffdeae"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "504e04a4e4b078edc5f59397"}, {"code": "(fn [n x] (list (subvec x 0 n) (subvec x n)))", "problem": 49, "user": "503cc8cae4b06c4e0e1fa251"}, {"code": "#(conj (conj [] (take % %2)) (drop % %2))", "problem": 49, "user": "504457c0e4b01f6c9a8b2360"}, {"code": "#(cons (take % %2) \n(vector (drop % %2)))", "problem": 49, "user": "5055899de4b0ce54f56f03fd"}, {"code": "(fn [n ls]\n  (list (take n ls) (take (- (count ls) n) (drop n ls))))", "problem": 49, "user": "4ff769bce4b0678c553fc38f"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "504f57c7e4b0a02f9cffde71"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "4f045946535dcb61093f6bba"}, {"code": "(fn [n s] [(take n s) (drop n s)])", "problem": 49, "user": "504c8165e4b09724c857af31"}, {"code": "(fn [i xs]\r\n  (loop [n i x xs cur [] acc []]\r\n    (if (empty? x)\r\n      (conj acc cur)\r\n      (if (zero? n)\r\n        (recur (dec n) (rest x) (conj [] (first x)) (conj acc cur))\r\n        (recur (dec n) (rest x) (conj cur (first x)) acc)))))", "problem": 49, "user": "5050b107e4b063148f524126"}, {"code": "(fn [n s]\n  [(take n s) (drop n s)])", "problem": 49, "user": "503e6047e4b06c4e0e1fa266"}, {"code": "(fn  [n s]\r\n  (list (take n s) (drop n s)))", "problem": 49, "user": "504ec4d3e4b069badc5a33c9"}, {"code": "(fn [c s][(take c s) (take-last (- (count s) c) s)])", "problem": 49, "user": "5053de37e4b0b1b9d1860ea8"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "504e2600e4b0f6ff3350c46f"}, {"code": "(fn [x xs]\n  (loop [i x ys '() zs xs]\n    (cond (empty? zs) (list (reverse ys) zs)\n          (= i 0) (list (reverse ys) zs)\n          :else (recur (dec i) (conj ys (first zs)) (rest zs)))))", "problem": 49, "user": "50555c06e4b0ce54f56f03fa"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "504f3fa3e4b0a02f9cffde62"}, {"code": "(fn [n s] (loop [i 0 h [] t s] (if (= i n) [h t] (recur (inc i) (conj h (first t)) (rest t)))))", "problem": 49, "user": "4fca2a13e4b0ee37620e184d"}, {"code": "(juxt take drop)", "problem": 49, "user": "50586354e4b06522596eba78"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "504e2333e4b0f6ff3350c46c"}, {"code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "5054c853e4b0b1b9d1860eb3"}, {"code": "(fn [x y]\n  (vector (subvec y 0 x) (subvec y x)))", "problem": 49, "user": "50517ebfe4b0a561d07d8f06"}, {"code": "#(vector (subvec %2 0 %) (subvec %2 %))", "problem": 49, "user": "5005b57de4b0678c553fc46a"}, {"code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "505bd09fe4b032b709c81373"}, {"code": "(fn[n col] [(take n col) (drop n col)])", "problem": 49, "user": "4fc6e1a8e4b0ee37620e181d"}, {"code": "(fn [n xs]\r\n  [(take n xs)(drop n xs)])", "problem": 49, "user": "4f9aa97ae4b0dcca54ed6d0e"}, {"code": "(juxt take drop)", "problem": 49, "user": "5040edf4e4b0ff5d2cc40db5"}, {"code": "(fn [n xs] [(take n xs) (drop n xs)])", "problem": 49, "user": "50563ae2e4b0ce54f56f0405"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "50588ff1e4b06522596eba7e"}, {"code": "(fn my-split-at [n lat]\n  (letfn [(s [lat1 lat2]\n            (cond\n             (= (count lat1) n) (list lat1 lat2)\n             :else\n             (s (conj lat1 (first lat2))(rest lat2))))]\n    (s [] lat)))", "problem": 49, "user": "4eb6f065535d7eef30807372"}, {"code": "(fn [n col] [(take n col) (drop n col)])", "problem": 49, "user": "4ed98b40535d10e5ff6f5307"}, {"code": "(fn my-split-at [num xl]\n  \"Splits xl at nth num.\"\n  (loop [xl xl\n         res []\n         count 0]\n    (if (= num count)\n      [(vec (reverse res)),(vec xl)]\n      (recur (rest xl) (cons (first xl) res) (inc count)))))", "problem": 49, "user": "4eb47bb1535d7eef30807362"}, {"code": "(fn split-seq-n [c iseq]\n  (loop [i iseq fs [] count c]\n    (if (< count 1)\n      (vector fs i)\n      (recur (subvec i 1) (conj fs (first i)) (- count 1)))))", "problem": 49, "user": "4f046d70535dcb61093f6bc5"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "5055e7f4e4b0ce54f56f0401"}, {"code": "(fn [n coll] [(take n coll)(drop n coll)])", "problem": 49, "user": "504e8e48e4b069badc5a33b3"}, {"code": "#(vector (take %1 %2) (nthnext %2 %1))", "problem": 49, "user": "5048bcf8e4b06e644c63f1ae"}, {"code": "#(vector (subvec %2 0 %1) (subvec %2 %1))", "problem": 49, "user": "502ade49e4b0614b52996120"}, {"code": "(fn split [x y]\n  (list (take x y) (drop x y)))", "problem": 49, "user": "50588af1e4b06522596eba7d"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "50310b8be4b05b7df5a0b84d"}, {"code": "(fn [n l] (map #(% n l) [take drop]))", "problem": 49, "user": "50090fc7e4b0144d4f561e44"}, {"code": "(fn [n l] [(take n l) (drop n l)])", "problem": 49, "user": "504e72cee4b0f6ff3350c4b4"}, {"code": "#(do [(take % %2) (drop % %2)])", "problem": 49, "user": "5054bc87e4b0b1b9d1860eb0"}, {"code": "(fn [n xs]\n  (let [h (take n xs)\n        t (drop n xs)]\n    [h t]))", "problem": 49, "user": "5063b9a0e4b075d771da6f9d"}, {"code": "(fn [n in-seq] (vector (take n in-seq) (drop n in-seq)))", "problem": 49, "user": "5060d137e4b0dc10a69545a0"}, {"code": "(fn [n v] [(vec (take n v)) (vec (drop n v))])", "problem": 49, "user": "5063fe48e4b075d771da6f9e"}, {"code": "(fn [n s] [(take n s) (drop n s)])", "problem": 49, "user": "504f191ae4b0e7ad84dbc4ba"}, {"code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "50630247e4b05ac47bc68d6b"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "505fc8e3e4b08f2a82ad10b6"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "50645e12e4b007509339a58a"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "50668a06e4b03d366d7cb2b2"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "504e3aaae4b0f6ff3350c487"}, {"code": "(fn [n l]\n  [ (take n l) (take-last (- (count l) n) l) ]  )", "problem": 49, "user": "4f8b05d2e4b02e764a0a5176"}, {"code": "#(list (take % %2) (nthrest %2 %))", "problem": 49, "user": "5065faf9e4b0313a384e5645"}, {"code": "(fn [x coll]\n  (loop [i (dec x) s [] t coll]\n    (if (zero? i)\n      [(conj s (first t)) (vec (rest t))]\n      (recur (dec i) (conj s (first t)) (vec (rest t))))))", "problem": 49, "user": "4e4be570535dc968683fc4d8"}, {"code": "(juxt take drop)", "problem": 49, "user": "50657775e4b0deb876850599"}, {"code": "(fn my-split-at [n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "4fd769a1e4b0dab7d829f382"}, {"code": "(fn [c s] [(take c s) (drop c s)])", "problem": 49, "user": "4edb4c7c535d10e5ff6f5318"}, {"code": "(fn [n xs] [(take n xs) (take-last (- (count xs) n) xs)])", "problem": 49, "user": "4ed2a31c535d44c135fd68db"}, {"code": "(fn [n xs] [(take n xs) (take-last (- (count xs) n) xs)])", "problem": 49, "user": "506b016de4b0a2a5463de37f"}, {"code": "(fn [n xs]\n  (conj []\n    (take n xs)\n    (drop n xs)))", "problem": 49, "user": "50611456e4b0dc10a69545a5"}, {"code": "(fn [pos xs]\n  [(take pos xs) (drop pos xs)])", "problem": 49, "user": "506b0a9ce4b0a2a5463de380"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "506e0e5ae4b09350ab4199eb"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "506ef8c3e4b09350ab4199f4"}, {"code": "(fn s-a [point collection]\n  [(take point collection)(drop point collection)])", "problem": 49, "user": "5020d2aee4b0cb6ebc0a42fb"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "50705072e4b07bd6ad9b9f27"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "5054c7e1e4b0b1b9d1860eb2"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "506617c3e4b03d366d7cb2ab"}, {"code": "(fn\n                   [n coll]\n                   [(take n coll) (drop n coll)])", "problem": 49, "user": "4f07bc41535dcb61093f6c2c"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "506fd0afe4b07bd6ad9b9f23"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "507056b8e4b07bd6ad9b9f29"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "4eb404ba535d7eef3080735a"}, {"code": "(juxt take drop)", "problem": 49, "user": "50548ce8e4b0b1b9d1860ead"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4f614976e4b0defedf855fbb"}, {"code": "(fn [n l] [(take n l) (nthnext l n)])", "problem": 49, "user": "505f55d3e4b08f2a82ad10b0"}, {"code": "(juxt take drop)", "problem": 49, "user": "4f3b5219e4b0e243712b1f2a"}, {"code": "#( cons  (vec(take %1 %2))  (vec(list(drop %1 %2))) )", "problem": 49, "user": "5071e520e4b0e3170b5a8683"}, {"code": "#(conj [] (take % %2) (drop % %2))", "problem": 49, "user": "5071b614e4b0e3170b5a867d"}, {"code": "(fn [n s] (list (take n s) (drop n s)))", "problem": 49, "user": "5070e31ee4b0e3170b5a8678"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "50657858e4b0deb87685059a"}, {"code": "(fn [s c]\n  [(keep-indexed #(if (< % s) %2) c)\n   (keep-indexed #(if (> (inc %) s) %2) c)])", "problem": 49, "user": "4e77c1db535d324fb2983d72"}, {"code": "(fn [n l] [(take n l) (drop n l)])", "problem": 49, "user": "507437c2e4b054001656acd0"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "506a1985e4b01dc6af13f83e"}, {"code": "(fn [i l] (map #(map last %) (split-with #(< (first %) i) (map-indexed vector l))))", "problem": 49, "user": "50481b70e4b0ec70b3ef8d98"}, {"code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "5041bdf3e4b06d8231e4fad0"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "503f872ee4b00d1a725ff2ac"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "4ee85476535d93acb0a6687c"}, {"code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "4f32ef71e4b0d6649770a098"}, {"code": "(fn [n c] ((juxt #(take n %) #(drop n %)) c))", "problem": 49, "user": "4dbb0b6c535d1e037afb21b0"}, {"code": "(fn my-split-at [n col]\n  (loop [head '()\n         rst col\n         count n]\n    (if (zero? count)\n      (list (reverse head) rst)\n      (recur (conj head (first rst)) (rest rst) (dec count)))))", "problem": 49, "user": "50763574e4b0a894bb95bf3d"}, {"code": "(fn [i l]\n  (conj\n    []\n    (take i l)\n    (drop i l)))", "problem": 49, "user": "504e48ace4b0f6ff3350c498"}, {"code": "#(concat [(take %1 %2)] [(drop %1 %2)])", "problem": 49, "user": "503efe01e4b06c4e0e1fa26f"}, {"code": "(fn [n s] (vector (take n s) (nthrest s n)))", "problem": 49, "user": "50783762e4b0fc74642bff67"}, {"code": "(fn [num seq]\n  (vector (take num seq) (drop num seq)))", "problem": 49, "user": "504eff22e4b0e7ad84dbc4a9"}, {"code": "(fn [n col]\n  [\n    (apply vector (for [x (range n)]\n      (nth col x)))\n    (apply vector (for [x (range n (count col))]\n      (nth col x)))])", "problem": 49, "user": "507a08e4e4b08327cd804a67"}, {"code": "(juxt take drop)", "problem": 49, "user": "507a9b29e4b08327cd804a6e"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "5046f909e4b03b02161376b5"}, {"code": "#(vector (take % %2) (nthrest %2 %))", "problem": 49, "user": "5061cc17e4b0a30dc9a35d34"}, {"code": "(fn [n s]\n  [ (take n s) (drop n s)])", "problem": 49, "user": "507db411e4b03c76e5499e06"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "507b7dbee4b09034bfeeb71e"}, {"code": "#(conj [] (take % %2) (drop % %2))", "problem": 49, "user": "505d4b21e4b0e6aca564be07"}, {"code": "(fn [n coll]\n      [(vec (take n coll)), (vec (drop n coll))]\n      )", "problem": 49, "user": "506755b3e4b03d366d7cb2bc"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "507eddf4e4b06ce648bcdbfa"}, {"code": "(fn [n c] [(take n c) (drop n c)])", "problem": 49, "user": "507c7c8be4b0b083f3ff82ef"}, {"code": "(fn [idx xs]\n  (let [first-part (take idx xs)\n        last-part (take-last (- (count xs) idx) xs)]\n  (cons first-part [last-part])))", "problem": 49, "user": "4fc7ddffe4b0ee37620e182b"}, {"code": "(juxt take drop)", "problem": 49, "user": "4fda108ee4b05e33b9224f46"}, {"code": "(fn [at sq]\n          (loop [at at x [] sq sq]\n                (if (= at 0) [x sq]\n                  (recur (dec at) (conj x (first sq)) (rest sq)))))", "problem": 49, "user": "504db141e4b021508a333965"}, {"code": "(fn [n s] [(take n s) (drop n s)])", "problem": 49, "user": "50807940e4b01a93d3f38e44"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "5074b3ece4b054001656acd5"}, {"code": "(fn [k coll] [(take k coll) (drop k coll)])", "problem": 49, "user": "508157b2e4b0946d0443855c"}, {"code": "(juxt take drop)", "problem": 49, "user": "4f7beb36e4b06e829148e1ab"}, {"code": "(fn [n l] (list (take n l) (drop n l)))", "problem": 49, "user": "5084cb7de4b0fb8f40674bfb"}, {"code": "#(vector (subvec %2 0 %1) (subvec %2 %1))", "problem": 49, "user": "4e72dd5d535d5021c1a89667"}, {"code": "(fn [x y]\n  [(subvec y 0 x) (subvec y x)])", "problem": 49, "user": "507ef25ce4b0f753b6f9788e"}, {"code": "(fn [a b] \r\n  ((fn myf[n x y] (\r\n    if (= 0 n)\r\n    (into [] (concat [y] (vector (reduce conj [] x))))\r\n    (myf (dec n) (rest x) (conj y (first x))))\r\n  ) a b [])\r\n)", "problem": 49, "user": "506b437de4b0eda3100c0906"}, {"code": "(fn [n s]\n  (cons (take n s) (cons (drop n s) [])))", "problem": 49, "user": "4f329974e4b0d6649770a093"}, {"code": "(juxt take drop)", "problem": 49, "user": "5088082ae4b0198722bd9854"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "507a396be4b08327cd804a69"}, {"code": "(fn [n l]\r\n  (cons (take n l) (list (drop n l))))", "problem": 49, "user": "50576483e4b001218172198b"}, {"code": "(fn [i s]\n  (loop [i i s s n []]\n    (if (= i 0)\n      [n s]\n      (recur (dec i) (rest s) (conj n (first s))))))", "problem": 49, "user": "50843a4ae4b0c98812d0788b"}, {"code": "(fn split-seq \n  [n xs] \n    [(take n xs) (drop n xs)])", "problem": 49, "user": "4f2942ace4b0d6649770a01e"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "508b95a0e4b0be79e5b189c6"}, {"code": "(fn [len x]\n  [(take len x) (reverse (take (- (count x) len) (reverse x)))])", "problem": 49, "user": "4f5576c2e4b0a7574ea71801"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "4db86aee535d1e037afb2193"}, {"code": "#(conj [] (take %1 %2) (drop %1 %2))", "problem": 49, "user": "507e68abe4b085af06e3afd2"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "5069874de4b01dc6af13f832"}, {"code": "(fn [n s] [(take n s) (drop n s)])", "problem": 49, "user": "506ab9bae4b05d3b7762c74c"}, {"code": "(fn [n s]\n  [(take n s) (drop n s)])", "problem": 49, "user": "50901b2ee4b0ea685a20f774"}, {"code": "(fn [pos list] [(take pos list) (drop pos list)])", "problem": 49, "user": "4e5f034b535d8a8b8723a2d9"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "509160dae4b0742c82730aef"}, {"code": "(fn [n l]\n  (cons (take n l) \n    [(take-last (- (count l) n) l)] \n  )\n)", "problem": 49, "user": "4fc8f671e4b0ee37620e1840"}, {"code": "#(let \n  [parti (partition %1 %1 [] %2)] \n  (cons\n    (first parti)\n    (list (apply concat (rest parti)))\n  )\n)", "problem": 49, "user": "508bf05ae4b0f17d83ea26aa"}, {"code": "(fn my-split [n coll]\n[(vec (take n coll)) (vec (take-last (- (count coll) n) coll))])", "problem": 49, "user": "506b8242e4b0eda3100c090a"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "507fbd77e4b089ade05efbd3"}, {"code": "(fn [i xs] [(take i xs) (drop i xs)])", "problem": 49, "user": "5089ebfee4b03217b26a539f"}, {"code": "(fn [n v] [(vec (take n v)) (vec (take-last (- (count v) n) v))])", "problem": 49, "user": "5069c09be4b01dc6af13f837"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "5086ca15e4b004985b776e62"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "508ee17ae4b0706b2ed3ef8d"}, {"code": "#(list (take %1 %2) (take-last (- (count %2) %1) %2))", "problem": 49, "user": "4f85a75ce4b033992c121c48"}, {"code": "(fn [n xs] [(take n xs) (drop n xs)])", "problem": 49, "user": "5097b556e4b00ad8bab4e970"}, {"code": "#(vector (vec (take % %2)) (vec (drop % %2)))", "problem": 49, "user": "5084c43be4b0fb8f40674bfa"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "5097a95fe4b00ad8bab4e96e"}, {"code": "(juxt take drop)", "problem": 49, "user": "508fabf9e4b0ea685a20f769"}, {"code": "(fn [n coll]\n  (conj [ (take n coll) ] (nthnext coll n)))", "problem": 49, "user": "50959df3e4b087f34d351ab4"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "5098f5d6e4b0cae2931060a4"}, {"code": "(fn [s col] \n  [(take s col) (drop s col)])", "problem": 49, "user": "50053d6ce4b0678c553fc45e"}, {"code": "(fn [x y]\n  (cond\n    (zero? x) y\n    (empty? y) '()\n    :else\n    (concat \n      (list ((fn foo[a b c] ( if (> c a) '() \n          (concat (list (first b)) (foo a (rest b) (inc c))) )) x y 1)) \n      (list ((fn foo[a b c] ( if (> c a) b\n           (foo a (rest b) (inc c)))) x y 1)) \n)))", "problem": 49, "user": "5078300de4b0fc74642bff66"}, {"code": "#(list (take %1 %2)\n(drop %1 %2))", "problem": 49, "user": "509b152be4b0412cdea6eb1e"}, {"code": "#(map identity [(take % %2) (drop % %2)])", "problem": 49, "user": "4f49108ae4b0d56e7bb92be5"}, {"code": "(fn [x s]\n  (loop \n    [a s\n      b []\n        c x]\n        (if (= c 0) [b a]\n(recur (vec (rest a)) (conj b (first a)) (dec c)))))", "problem": 49, "user": "50989786e4b04e098a4c7274"}, {"code": "#(conj (empty %2) (take % %2) (take-last (- (count %2) %) %2))", "problem": 49, "user": "4dbdc898535d020aff1edf4a"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "50217818e4b00bba4502f7a7"}, {"code": "(fn [n coll]\n    (list (take n coll) (drop n coll)))", "problem": 49, "user": "509e8da7e4b08df8156e9e2f"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "50970f51e4b00ad8bab4e950"}, {"code": "(fn [c xs] [(take c xs) (drop c xs)])", "problem": 49, "user": "4f0f36a7535d0136e6c22336"}, {"code": "(fn [n c] \n  (list (take n c) (drop n c)))", "problem": 49, "user": "5089d52ce4b03217b26a539d"}, {"code": "(fn [n s]\n  [(vec (take n s)) (vec (drop n s))])", "problem": 49, "user": "4f04664a535dcb61093f6bc1"}, {"code": "(fn [num seq]\n  (vector (take num seq) (drop num seq)))", "problem": 49, "user": "4ecd1143535d23f036227702"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "502ac868e4b0614b5299611a"}, {"code": "(fn [n coll]\n  (vector (take n coll) (drop n coll)))", "problem": 49, "user": "4f2cdd42e4b0d6649770a055"}, {"code": "(fn [n c] [(take n c) (drop n c)])", "problem": 49, "user": "4f42ae16e4b0d7d3c9f3fd09"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "50a2f901e4b029e8bace362a"}, {"code": "(fn [n coll] (vector (take n coll) (drop n coll)))", "problem": 49, "user": "5038381ce4b0803468ea2c6b"}, {"code": "(fn[x s] [(take x s) (drop x s)])", "problem": 49, "user": "4f542fd9e4b0a7574ea717db"}, {"code": "#(conj '() (drop % %2) (take % %2))", "problem": 49, "user": "5098bcfee4b0cae2931060a1"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "50996a38e4b0cae2931060b3"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "4e0febe6535d04ed9115e7be"}, {"code": "#(vector (subvec %2 0 %) (subvec %2 %))", "problem": 49, "user": "50982769e4b04e098a4c726a"}, {"code": "(juxt take drop)", "problem": 49, "user": "4ec3650f535dcc7ae8597d56"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "50981062e4b04e098a4c7268"}, {"code": "(fn [x s]\n  [(take x s) (drop x s)])", "problem": 49, "user": "4f1ae082535d64f603146470"}, {"code": "(fn [splitn coll]\n  [(take splitn coll) (drop splitn coll)])", "problem": 49, "user": "50a7b76de4b090657f4a5cdc"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4f956072e4b0dcca54ed6ccf"}, {"code": "(fn [num coll]\n  (loop [n num, c coll, cnt 1, acc []]\n    (if (empty? c)\n      [acc []]\n      (let [h (first c), t (rest c)]\n        (if (= n cnt)\n          [(conj acc h) t]\n          (recur n t (inc cnt) (conj acc h)))))))", "problem": 49, "user": "50a83794e4b054305ba5a831"}, {"code": "#(vector (subvec %2 0 %) (subvec %2 %))", "problem": 49, "user": "509eeb3be4b08df8156e9e37"}, {"code": "#(vec (list (vec (take %1 %2)) (vec (drop %1 %2))))", "problem": 49, "user": "5027b41ee4b01614d1633fee"}, {"code": "(fn fart [n s]\n  (list (take n s) (nthrest s n)))", "problem": 49, "user": "508dbd56e4b0f17d83ea26c2"}, {"code": "(fn [n l] (vector (take n l) (drop n l)))", "problem": 49, "user": "509c03f3e4b085ae113522a8"}, {"code": "(juxt take drop)", "problem": 49, "user": "509f3bc9e4b08df8156e9e39"}, {"code": "(juxt take drop)", "problem": 49, "user": "4dbe5390535d020aff1edf5c"}, {"code": "#(map (fn [i](i %1 %2)) [take drop])", "problem": 49, "user": "50a83315e4b054305ba5a830"}, {"code": "(fn [n col]\r\n  [(take n col) (drop n col)])", "problem": 49, "user": "508453abe4b0c98812d07891"}, {"code": "(fn [n s]\n  [(take n s) (drop n s)])", "problem": 49, "user": "4dd0e8f7535da60f04a96e57"}, {"code": "#(conj [] (vec (take %1 %2))(vec (drop %1 %2)))", "problem": 49, "user": "4f327844e4b0d6649770a092"}, {"code": "(fn [a b] [(take a b) (drop a b)])", "problem": 49, "user": "509c2c55e4b085ae113522ab"}, {"code": "(fn [n l] [(take n l) (drop n l)])", "problem": 49, "user": "4ed152d5535d44c135fd68cc"}, {"code": "(fn [n c] [(take n c) (drop n c)])", "problem": 49, "user": "50928084e4b097f48cc3856c"}, {"code": "(fn [n coll][(take n coll) (drop n coll)])", "problem": 49, "user": "50a4cbbee4b0344e360f3bc2"}, {"code": "#(conj [] (take % %2) (drop % %2))", "problem": 49, "user": "50a4f36be4b0344e360f3bc9"}, {"code": "#(identity [(take % %2) (drop % %2)])", "problem": 49, "user": "50ab8ae3e4b01d6eb43ce9a0"}, {"code": "(fn [index s] [(take index s) (drop index s)])", "problem": 49, "user": "5092fe10e4b097f48cc3857e"}, {"code": "#(vector \n       (vec (take %1 %2)) \n       (vec (drop %1 %2)))", "problem": 49, "user": "50ae22c3e4b0a40c9cfb08d0"}, {"code": "(fn [n s] [(take n s) (drop n s)])", "problem": 49, "user": "50ad7888e4b0a40c9cfb08c7"}, {"code": "#(list (take % %2) (nthnext %2 %))", "problem": 49, "user": "5078d366e4b08327cd804a5b"}, {"code": "(fn [n s]\n  (list (take n s) (drop n s)))", "problem": 49, "user": "4f03f3b7535dcb61093f6b85"}, {"code": "(fn [n coll] (vector (take n coll) (drop n coll)))", "problem": 49, "user": "50aab057e4b056ee0193586b"}, {"code": "(juxt take drop)", "problem": 49, "user": "50b24a2fe4b03ea88043355c"}, {"code": "(fn mysplit [x y]\r\n   (conj [(subvec  y 0 x)] (subvec y x)))", "problem": 49, "user": "50a85af1e4b054305ba5a833"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4f03bf5e535dcb61093f6b5d"}, {"code": "#(list   (take %1 %2)  (nthrest %2 %1)   )", "problem": 49, "user": "4ea8f887535d7eef30807300"}, {"code": "(juxt take drop)", "problem": 49, "user": "500ec210e4b00fff93030f9d"}, {"code": "(juxt take drop)", "problem": 49, "user": "508e13abe4b0f17d83ea26c7"}, {"code": "(fn m [n col]\n  [(take n col) (drop n col)])", "problem": 49, "user": "50a2cd3be4b048eb8059339d"}, {"code": "#(vec `(~(take %1 %2) ~(drop %1 %2)))", "problem": 49, "user": "508c3d42e4b0f17d83ea26b2"}, {"code": "(fn [n s] [(take n s) (drop n s)])", "problem": 49, "user": "50b67515e4b08fb537db98f3"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "50b668dde4b08fb537db98f2"}, {"code": "(fn split-49\n  [n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "501b1a8ee4b0b12d9c5f4d81"}, {"code": "(fn [n lst]\n    [(take n lst)\n     (nthnext lst n)])", "problem": 49, "user": "502a4fdfe4b09dd42f6f3644"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "50a5f72fe4b0aa96157e2611"}, {"code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "505aa653e4b021387fb89857"}, {"code": "(fn [n a-list]\n  (list (take n a-list) (drop n a-list)))", "problem": 49, "user": "50ba3acae4b03e68e4411c78"}, {"code": "(fn [n s]\n   (loop [acc []\n          lst s\n          x 0]\n     (if (= x n)\n       (list acc lst)\n       (recur (conj acc (first lst)) (rest lst) (inc x)))\n    )\n   )", "problem": 49, "user": "50868795e4b004985b776e5e"}, {"code": "#(vector\n  (take % %2)\n  (drop % %2))", "problem": 49, "user": "4f253a49e4b0d66497709ff3"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "50ba4b9ee4b03e68e4411c7b"}, {"code": "#(conj [] (take %1 %2) (nthrest %2 %1))", "problem": 49, "user": "4f03e7b3535dcb61093f6b7c"}, {"code": "(fn[at coll]\n  [(take at coll)(drop at coll)])", "problem": 49, "user": "506406c8e4b075d771da6f9f"}, {"code": "(fn [c l] [(take c l) (drop c l)])", "problem": 49, "user": "50956c2be4b087f34d351ab2"}, {"code": "(fn [n xs]\n  (list (take n xs) (drop n xs)))", "problem": 49, "user": "50b21551e4b03ea880433559"}, {"code": "#(list (take % %2) (nthrest %2 %))", "problem": 49, "user": "50b65966e4b0a86f8358ca6c"}, {"code": "(fn test42\n  [n coll]\n  (let [f (vec (take n coll))\n        r (vec (nthrest coll n))]\n    (vector f r)))", "problem": 49, "user": "50b0cffae4b009df37c708c5"}, {"code": "(fn [n s]\n  [(take n s) (drop n s)])", "problem": 49, "user": "50acbd15e4b071b89ef26234"}, {"code": "(fn [n, s] [(take n s) (drop n s)])", "problem": 49, "user": "4fdf566fe4b05e33b9224f99"}, {"code": "(fn [i l] [(keep-indexed #(if (< %1 i) %2 nil) l),(keep-indexed #(if (>= %1 i) %2 nil) l)])", "problem": 49, "user": "50112acee4b0d82cfac69f4c"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "50b64b55e4b0a86f8358ca6b"}, {"code": "(fn [n xs] [(take n xs) (drop n xs)])", "problem": 49, "user": "50982cc7e4b04e098a4c726c"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "50bb646de4b03e68e4411ca3"}, {"code": "(juxt take drop)", "problem": 49, "user": "509251f3e4b09a7d0b586de5"}, {"code": "(fn my-split-at [n l]\n  (cons (take n l) (cons (drop n l) '())))", "problem": 49, "user": "50812debe4b01a93d3f38e4c"}, {"code": "(fn [n col]\r\n  (cons (take n col) (list (drop n col))))", "problem": 49, "user": "50bfe725e4b080409b860f26"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "5097cfcbe4b00ad8bab4e977"}, {"code": "(\n juxt take drop \n)", "problem": 49, "user": "50bf7b72e4b0ffd967a66cc1"}, {"code": "(fn [n xs]\n  [(take n xs) (drop n xs)])", "problem": 49, "user": "50bd6033e4b0594b91591c66"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "50921f9ae4b09a7d0b586de1"}, {"code": "#(conj [] (subvec %2 0 %1) (subvec %2 %1))", "problem": 49, "user": "50b25f2ce4b03ea88043355f"}, {"code": "(fn [x coll]\n  (cons (take x coll) (cons (drop x coll) '())))", "problem": 49, "user": "50b0804de4b009df37c708bb"}, {"code": "(juxt take drop)", "problem": 49, "user": "4f89d489e4b033992c121c7e"}, {"code": "(fn [n items]\n  (conj [(take n items)] (drop n items)))", "problem": 49, "user": "50c4baa6e4b0210b849018b0"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "50afc0f9e4b0c3f5ed5c29a3"}, {"code": "(fn [n lst]\n  (list\n    (drop-last (- (count lst) n) lst)\n    (take-last (- (count lst) n) lst)\n    )\n  )", "problem": 49, "user": "50ae5659e4b0a40c9cfb08d2"}, {"code": "(fn \n  [n coll]\n    [(take n coll) (drop n coll)])", "problem": 49, "user": "4ea5ba92535d7eef308072d9"}, {"code": "(juxt take drop)", "problem": 49, "user": "50b47c46e4b0c464d223d1b8"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "50c75d38e4b00bb60fe0c532"}, {"code": "#(vec [(take % %2) (drop % %2)] )", "problem": 49, "user": "5093ca51e4b097f48cc38585"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "50608ea0e4b07251188e4456"}, {"code": "(fn [n coll]\n  [\n    (loop [i 0 x coll answer []]\n      (if (= i n) answer\n         (recur (+ i 1) (rest x) (conj answer (first x)))\n      )\n    )\n    (nthnext coll n)\n   ]\n)", "problem": 49, "user": "50bfbf25e4b05ae8c1cbbd9b"}, {"code": "#(conj '() (take-last (- (count %2) %1) %2) \n           (take %1 %2))", "problem": 49, "user": "50c84ba2e4b00bb60fe0c53e"}, {"code": "#(vector (take %1 %2) (nthnext %2 %1))", "problem": 49, "user": "4f3ca5a6e4b0e243712b1f53"}, {"code": "(fn [n xs] [(take n xs) (drop n xs)])", "problem": 49, "user": "50c9e5e3e4b0a409464667d7"}, {"code": "(fn [n l] [(take n l)(drop n l)])", "problem": 49, "user": "50c8697ce4b00bb60fe0c53f"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "50c9ece0e4b0a409464667d8"}, {"code": "(juxt take drop)", "problem": 49, "user": "50cb4cf6e4b0f78a8e1645b4"}, {"code": "(fn [n s] (list (take n s) (drop n s)))", "problem": 49, "user": "50b29029e4b03ea880433563"}, {"code": "(fn [index s] [(take index s) (drop index s)])", "problem": 49, "user": "50ce09e6e4b0ffc302be4bc6"}, {"code": "(fn[size seqX] [(take size seqX )(drop size seqX)])", "problem": 49, "user": "50c6fad1e4b00bb60fe0c52d"}, {"code": "#(let[a (take % %2) b (nthnext %2 %)] [a b])", "problem": 49, "user": "50503117e4b0a02f9cffdeb5"}, {"code": "(fn [x y] (vector (take x y) (drop x y)))", "problem": 49, "user": "4eeb8f68535d93acb0a668a9"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "4f8b27b3e4b02e764a0a5179"}, {"code": "#(conj (list (drop %1 %2)) (take %1 %2) )", "problem": 49, "user": "50ca2faee4b0a409464667dc"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "50733b31e4b0e3170b5a869a"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "4f072644535dcb61093f6c20"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "50ccf729e4b0f7a459302aac"}, {"code": "(fn split [pivot, l]\n   [((fn upTo [pivot, l]\n       (if\n         (= pivot 0)\n         ()\n         (cons\n          (first l)\n          (upTo\n           (- pivot 1)\n           (rest l)))))\n     pivot\n     l),\n    ((fn after [pivot, l]\n       (if\n         (= pivot 0)\n         l\n         (after\n          (- pivot 1)\n          (rest l))))\n     pivot\n     l)])", "problem": 49, "user": "50d2fa5ce4b049d4ed5650cf"}, {"code": "(fn [spos coll] (vector (take spos coll) (drop spos coll)))", "problem": 49, "user": "4f0412f8535dcb61093f6b99"}, {"code": "(fn split [index sequ & [accu]]\n  (let [accu (if (nil? accu) (vec nil) accu)]\n    (if (= index 0)\n      (vec (list accu (vec sequ)))\n      (split (dec index) (rest sequ) (conj accu (first sequ))))))", "problem": 49, "user": "50d4dde8e4b09cc622d65a72"}, {"code": "(fn [x y] (vector (vec (take x y)) (vec (drop x y))))", "problem": 49, "user": "4eb0175b535d7eef30807336"}, {"code": "(fn [n s]\n  (loop [n n s s s1 []]\n    (if (= (count s1) n) \n      (conj [] s1 s)\n      (recur n (next s) (conj s1 (first s))))))", "problem": 49, "user": "50d4909ce4b09cc622d65a6c"}, {"code": "(fn [n s]\n           (loop [x n s1 s s2 []]\n              (if (zero? x)\n                  [s2 (into [] s1)]\n                  (recur (dec x) (rest s1) (conj s2 (first s1))))))", "problem": 49, "user": "4f03f197535dcb61093f6b84"}, {"code": "(fn [n s]\n  [(take n s) (drop n s)])", "problem": 49, "user": "50d882d4e4b01f0871336e69"}, {"code": "(juxt take drop)", "problem": 49, "user": "50cae881e4b0f75dcc9a6e51"}, {"code": "(fn [n s] [(take n s) (drop n s)])", "problem": 49, "user": "50d8f4b6e4b01f0871336e74"}, {"code": "#(loop [idx %1, lst %2, ele nil]\n    (if (zero? idx)\n      (conj '() lst (take-while (partial not= (first lst)) %2))\n      (recur (dec idx) (rest lst) (first lst))\n      )\n    )", "problem": 49, "user": "4fa7de4ce4b081705acca1c9"}, {"code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "5092f940e4b097f48cc3857b"}, {"code": "(fn f [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "4e79f28b535db169f9c796a8"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "50493b52e4b06e84b772a23e"}, {"code": "(fn [n s]\n  (concat\n    [(first (partition n s))]\n    [(last (take (inc n) (iterate rest s)))]))", "problem": 49, "user": "50d8de3fe4b01f0871336e72"}, {"code": "#( vector (vec (take %1 %2))  (vec (drop %1 %2)))", "problem": 49, "user": "50cf2267e4b0e61f11ddcd8c"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "50de11b2e4b061dbdced7217"}, {"code": "(fn [c xs]\n  (loop [counter 0 res [] s xs]\n    (if (= counter c)\n      (concat [res] [s])\n      (recur (inc counter)\n             (conj res (first s))\n             (rest s)))))", "problem": 49, "user": "4e71a12c535d5021c1a8964f"}, {"code": "(fn [val coll]\n   (let [lect (partition val val nil coll)]\n     (list (first lect)\n           (apply concat (rest lect)))))", "problem": 49, "user": "50bd13dee4b0594b91591c65"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "5095f761e4b0ba05ca7aebfd"}, {"code": "(fn my-split-at [n, s]\n  (list (take n s) (drop n s)))", "problem": 49, "user": "50a7ef7fe4b090657f4a5ce0"}, {"code": "(fn[no data]\n  (list (take no data)\n   (drop no data)))", "problem": 49, "user": "4ef87ea7535dced4c769f25f"}, {"code": "(fn myspt [n s]\n  (let [f1 (fn [c l result]\n             (if (= c 0)\n               result\n               (recur (dec c)\n                      (rest l) \n                      (concat result\n                              (list (first l)))))) \n        ss (f1 n s '())]\n    (vec (cons (vec ss) (vector (vec (nthnext s n))) ))))", "problem": 49, "user": "5021f0b3e4b00bba4502f7ac"}, {"code": "(fn [pos coll]\n  [(take pos coll) (drop pos coll)])", "problem": 49, "user": "50e3e108e4b01912b3285c48"}, {"code": "(fn [n a] (vector (apply vector(take n a)) (apply vector (drop n a))))", "problem": 49, "user": "500a214de4b03d00572d2d74"}, {"code": "(fn [n c] (concat [(take n c)] [(nthrest c n)]))", "problem": 49, "user": "50cf94bde4b0abc485cb9bb2"}, {"code": "(fn [n coll]\n      (conj [(apply vector (take n coll))]\n      (apply vector (drop n coll)))\n)", "problem": 49, "user": "50e3cf55e4b01912b3285c45"}, {"code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "50e3f311e4b0463d32072487"}, {"code": "(fn [n c] [(take n c) (drop n c)])", "problem": 49, "user": "50e3ec87e4b0463d32072486"}, {"code": "(fn [n xs] [(take n xs) (drop n xs)])", "problem": 49, "user": "50e3ddd4e4b01912b3285c47"}, {"code": "#(list (take %1 %2) (loop [x 0 l %2 cnt %1] (if (= x cnt) l (recur (inc x) (next l) cnt))))", "problem": 49, "user": "503539dee4b0ed9c821488f6"}, {"code": "(fn my-split-at [i, sequence]\n  [(take i sequence) (drop i sequence)]\n)", "problem": 49, "user": "50e496e8e4b0cb9ec68fbca0"}, {"code": "(fn [x sq]\n  [(take x sq) (drop x sq)])", "problem": 49, "user": "50e35b2de4b094329ae7f4bb"}, {"code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "4dda44f2535d02782fcbe9f1"}, {"code": "(fn [len avec]\n  (let [beg (take len avec)\n        end (drop len avec) ]\n    [beg end] ) )", "problem": 49, "user": "504eb604e4b069badc5a33c4"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "50b8914ce4b0cba0e598b64d"}, {"code": "(fn [times liste] (list (take times liste) (drop times liste) ))", "problem": 49, "user": "4e2164ff535d04ed9115e815"}, {"code": "(fn [n l] [(take n l) (drop n l)])", "problem": 49, "user": "50e82c31e4b0ebbe794eb7da"}, {"code": "(fn [n coll] [ (take n coll) (drop n coll) ]  )", "problem": 49, "user": "50d0d4c8e4b00b15ecee976a"}, {"code": "(fn [n s]\n  (loop [cur 0\n         left []\n         right s]\n    (if (= n cur)\n      (vector left right)\n      (recur (inc cur) (conj left (first right)) (rest right)))))", "problem": 49, "user": "50e87427e4b0ebbe794eb7e8"}, {"code": "#((juxt take drop) %1 %2)", "problem": 49, "user": "4db29f98535df7e46ed9b6c1"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "50dfb660e4b061dbdced7228"}, {"code": "(fn [loc list]\n  (loop [acc []\n         n loc\n         left list]\n    (if (zero? n)\n      [acc left]\n      (recur (conj acc (first left))\n             (dec n)\n             (rest left)))))", "problem": 49, "user": "4ffc10aae4b0678c553fc3d6"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "50e8a340e4b0ebbe794eb7ed"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "50e8ff6be4b0ebbe794eb7f3"}, {"code": "(juxt take drop)", "problem": 49, "user": "50e7dd5de4b077ad597af36b"}, {"code": "(fn s [n c] (vector (first(partition n c)) (drop n c )))", "problem": 49, "user": "50d179c7e4b05a71a896ef56"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "50e0d5a3e4b061dbdced723d"}, {"code": "#(vector (take % %2) (take-last (- (count %2) %) %2))", "problem": 49, "user": "50ae0d24e4b0a40c9cfb08ce"}, {"code": "#(list (take % %2) \n       (drop % %2))", "problem": 49, "user": "50d4c626e4b09cc622d65a70"}, {"code": "(fn [n s] [(take n s) (drop n s)])", "problem": 49, "user": "50e5bca5e4b09ae9427b0e75"}, {"code": "(fn my-split-at\n  ([n coll]      (my-split-at n nil coll))\n  ([n cand coll] (if (= n 0)\n                   (concat [cand] [coll])\n                   (my-split-at (dec n) (vec (conj cand (first coll))) (rest coll)))))", "problem": 49, "user": "50df6dd0e4b061dbdced7225"}, {"code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "50bc23e4e4b0594b91591c3c"}, {"code": "(fn split-sequence [n a]\n\t(conj [] (take n a) (drop n a)))", "problem": 49, "user": "50ed8a5fe4b06330c1f87c3d"}, {"code": "(fn f\n  [n xs]\n  [(take n xs) (drop n xs)])", "problem": 49, "user": "50ef77a4e4b0bdaecbb47d99"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "50ef9a7ae4b0bdaecbb47d9e"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "50d86fe2e4b01f0871336e67"}, {"code": "(juxt take drop)", "problem": 49, "user": "50ef4e2be4b0a78662fa2653"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "50ed5d1be4b06330c1f87c37"}, {"code": "(fn [index lst]\n  (loop [lst,lst res,[] i,index]\n    (if (zero? i)\n      [res lst]\n      (recur (rest lst) (conj res (first lst)) (dec i)))))", "problem": 49, "user": "50f0d000e4b0c5f4fa5ddb6f"}, {"code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "50ed3c6be4b01236b1d4983b"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "4ff3df0fe4b0678c553fc355"}, {"code": "(fn [number aSequence]\n  [(take number aSequence) (drop number aSequence)])", "problem": 49, "user": "50ee145de4b06330c1f87c53"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "50ed4626e4b01236b1d4983c"}, {"code": "#(vector (take %1 %2) (nthrest %2 %1))", "problem": 49, "user": "4ec1b090535dfed6da9c6db5"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "50f48298e4b004d364930527"}, {"code": "(fn [n lst]\n  (list (take n lst) (drop n lst)))", "problem": 49, "user": "50e4b066e4b0cb9ec68fbca6"}, {"code": "(fn [n l] \n    (loop [i n, h [], t l] \n      (if (= i 0) \n         (vector h t) \n         (recur (dec i) (conj h (first t)) (rest t)))))", "problem": 49, "user": "50ef3e5de4b0a78662fa2652"}, {"code": "(fn [a b] [(take a b) (drop a b)])", "problem": 49, "user": "50ef56dfe4b0bdaecbb47d94"}, {"code": "(fn [size sq]\n   [(take size sq) (drop size sq)])", "problem": 49, "user": "50f1dedbe4b0897c4366dcd8"}, {"code": "(juxt take drop)", "problem": 49, "user": "4ebaf790535dfed6da9c6d6e"}, {"code": "(fn splt [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "50ed9e8de4b06330c1f87c44"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "50c4a354e4b0210b849018af"}, {"code": "(fn [n coll]\n  [(take n coll) (drop n coll)])\n\n\n; (juxt take drop)\n; #(do [(take %1 %2) (drop %1 %2)])", "problem": 49, "user": "503f4759e4b00d1a725ff2a9"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "50f0ec9ce4b0d527ce5b30df"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "50eddbc4e4b06330c1f87c4b"}, {"code": "(juxt #(subvec %2 0 %) #(vec(nthnext %2 %)))", "problem": 49, "user": "50ec8d93e4b04edc3377704c"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "50f17c0de4b06d9538fe2123"}, {"code": "(fn [n xs]\n  (let [e (empty xs)\n        to (partial into e)]\n    (to (map to [(take n xs) (drop n xs)]))))", "problem": 49, "user": "50e47fa5e4b0cb9ec68fbc9c"}, {"code": "(fn [x y]\n  (list (take x y) (take-last (- (count y) x) y))\n  )", "problem": 49, "user": "4edf95a8535d10e5ff6f5342"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "50e4a5a9e4b0cb9ec68fbca3"}, {"code": "(fn [n col] (when-let [s (seq col)]\n              (let [q (take n s)]\n                (cons q (conj [] (drop n s))))))", "problem": 49, "user": "4fc8769be4b0ee37620e1833"}, {"code": "(fn [n c] [(take n c) (drop n c)])", "problem": 49, "user": "4f98b69ae4b0dcca54ed6cf4"}, {"code": "(fn [n x]\n  (vector (into [] (take n x)) (into [] (drop n x)))\n  )", "problem": 49, "user": "50f4894be4b004d364930528"}, {"code": "(juxt take drop)", "problem": 49, "user": "50d8739ae4b01f0871336e68"}, {"code": "#(conj '[] (subvec %2 0 %1) (subvec %2 %1))", "problem": 49, "user": "50f3bd98e4b041536e2eca3a"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "50fbf811e4b0d10d794c19f1"}, {"code": "(fn [n s] [(take n s) (drop n s)])", "problem": 49, "user": "4f55ab5ee4b0a7574ea71809"}, {"code": "#(identity [(take % %2) (drop % %2)])", "problem": 49, "user": "50ebd63ce4b04edc3377703c"}, {"code": "(fn [n sq] (list (take n sq) (drop n sq)))", "problem": 49, "user": "50fbdacfe4b0d10d794c19f0"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "50d46d53e4b09cc622d65a69"}, {"code": "(fn [n s] (cons (take n s) (cons (drop n s) [])))", "problem": 49, "user": "50f9c7fde4b0e7c80cb15a52"}, {"code": "(fn [n arr] [(take n arr) (drop n arr)])", "problem": 49, "user": "505caadfe4b0bcb5664c3d3e"}, {"code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "50ec4ed7e4b04edc33777046"}, {"code": "(fn \n  [n col]\n  [(take n col) (drop n col)])", "problem": 49, "user": "51008b6fe4b0700a7a02d6e4"}, {"code": "(fn split [n xs] (loop [i n, before '(), after xs] (if (= i 0) (cons before (list after)) (recur (dec i) (concat before (list (first after))) (rest after)))))", "problem": 49, "user": "50ef311fe4b0a78662fa2651"}, {"code": "(juxt take drop)", "problem": 49, "user": "50471d36e4b03b02161376b6"}, {"code": "(juxt take drop)", "problem": 49, "user": "5006b7d2e4b0678c553fc48c"}, {"code": "#(vector (vec (take % %2)) (vec (drop % %2)))", "problem": 49, "user": "5102489de4b00c483ae176f6"}, {"code": "(fn [index sqn] (vector (take index sqn) (drop index sqn)))", "problem": 49, "user": "50f2e5cee4b0ec8ee6fa8643"}, {"code": "(fn f [i ar] [(reverse (nthnext (reverse ar) (- (count ar) i))) (nthnext ar i)])", "problem": 49, "user": "50f8862de4b0aafb827eb203"}, {"code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "50d93c53e4b0fd36a4b89223"}, {"code": "(juxt take drop)", "problem": 49, "user": "50fe2b87e4b03cd852b4e84b"}, {"code": "(fn sp [pos s] (conj (conj [] (vec (take pos s))) (vec (nthrest s pos))) )", "problem": 49, "user": "5101192ae4b0bef64c30e266"}, {"code": "(fn [n l] [(take n l) (drop n l)])", "problem": 49, "user": "51059d33e4b0380e797c7d5c"}, {"code": "#(do [(take % %2) (drop % %2)])", "problem": 49, "user": "4f6fd91ae4b07046d9f4efed"}, {"code": "#(let [x (take %1 %2) y (drop %1 %2)] [x y])", "problem": 49, "user": "504e9011e4b069badc5a33b7"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "5103807fe4b00c483ae17703"}, {"code": "(fn [n li] [(take n li) (drop n li)])", "problem": 49, "user": "50ead6ffe4b02d54280826e2"}, {"code": "(fn [n coll] [(take n coll)(drop n coll)])", "problem": 49, "user": "5106bc8ae4b01150e115ebec"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "51095588e4b0e34872b3efa5"}, {"code": "(fn s [p l] (list (take p l) (nthrest l p)))", "problem": 49, "user": "510931ede4b0c71f76895663"}, {"code": "(fn split-at1\n  [n coll]\n    [(take n coll) (drop n coll)])", "problem": 49, "user": "50ab44b2e4b0f65d68208509"}, {"code": "(fn part-at [index coll] (list (take index coll) (drop index coll)))", "problem": 49, "user": "50e4f4e9e4b049a987753896"}, {"code": "(fn [n col] [(take n col)(drop n col)])", "problem": 49, "user": "5008d149e4b0144d4f561e41"}, {"code": "#(cons (take %1 %2) [(drop %1 %2)])", "problem": 49, "user": "50fe91c1e4b03cd852b4e84e"}, {"code": "#(reverse (conj (list (take %1 %2)) (drop %1 %2)))", "problem": 49, "user": "5047782ce4b0371827a27bc2"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "5107b86de4b05b2b4eee7495"}, {"code": "#(loop [col1 [] cur 0 tmp %2]\n             (if (= cur %1) [col1 (vec tmp)] \n               (recur (conj col1 (first tmp)) (inc cur) (rest tmp) )\n               )\n             )", "problem": 49, "user": "510d3dc6e4b078ea71921132"}, {"code": "(fn [x coll] (loop [sub1 []\n                    sub2 []\n                    remain coll\n                    i 1]\n               (cond\n                (empty? remain) (vector sub1 sub2)\n                (> i x) (recur sub1 (conj sub2 (first remain)) (next remain) (inc i))\n                (<= i x) (recur (conj sub1 (first remain)) sub2 (next remain) (inc i)))))", "problem": 49, "user": "507a33dee4b08327cd804a68"}, {"code": "#((juxt take drop) %1 %2)", "problem": 49, "user": "510d9d61e4b078ea71921141"}, {"code": "(fn [n s]\n  [(take n s) (drop n s)])", "problem": 49, "user": "510db6cde4b078ea71921145"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "5102ac9de4b00c483ae176fa"}, {"code": "#(vector (subvec %2 0 %1) (subvec %2 %1))", "problem": 49, "user": "51105c7fe4b04c71fce993ef"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "511026b1e4b04c71fce993ec"}, {"code": "(juxt take drop)", "problem": 49, "user": "50afdf00e4b0c3f5ed5c29a5"}, {"code": "(juxt take drop)", "problem": 49, "user": "510e1584e4b07438aa321458"}, {"code": "(fn [idx col]\n  [(into [] (take idx col)) (into [] (take-last (- (count col) idx) col))]\n  )", "problem": 49, "user": "510b704ee4b078ea71921100"}, {"code": "#(loop [i 0 n1 [] n2 []]\n   (if (< i (count %2))\n     (if (< i %1)\n       (recur (inc i) (conj n1 (%2 i)) n2)\n       (recur (inc i) n1 (conj n2 (%2 i))))\n       [n1 n2]\n       ))", "problem": 49, "user": "50bce014e4b0594b91591c63"}, {"code": "#(do [(vec (take % %2)) (vec (drop % %2))])", "problem": 49, "user": "50b45ee1e4b08fc3808f30ca"}, {"code": "#(conj (vector (take %1 %2)) (drop %1 %2))", "problem": 49, "user": "4e964f4a535dbda64a6f6b42"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "50eebf46e4b06330c1f87c61"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "50fac9e3e4b07934dda8b0d1"}, {"code": "(fn [n xs]\n  (loop [ys xs\n         zs []\n         m n]\n    (if (seq ys)\n      (if (> m 0)\n        (recur (rest ys) (conj zs (first ys)) (dec m))\n        [zs ys])\n      [zs ys])))", "problem": 49, "user": "511442d0e4b0e9c109bb74d5"}, {"code": "(fn [n s]\n  [(subvec s 0 n) (subvec s n)]\n)", "problem": 49, "user": "5081566ce4b0946d0443855b"}, {"code": "(fn [sp seq1]\n   (loop [result1 [] result2 [] elements seq1 index 0]\n     (if (empty? elements)\n       (conj (conj [] result1) result2)\n       (if (< index sp)\n         (recur (conj result1 (first elements)) result2 (rest elements) (inc index))\n         (recur result1 (conj result2 (first elements)) (rest elements) (inc index))\n         )\n       )          \n     )      \n   )", "problem": 49, "user": "5106dc1be4b01150e115ebf0"}, {"code": "(fn [n xs]\n  (vector (take n xs) (drop n xs)))", "problem": 49, "user": "5114ab7be4b0ce5098ee73b5"}, {"code": "(fn [x coll] [(take x coll) (drop x coll)])", "problem": 49, "user": "51195e77e4b055cfb310d499"}, {"code": "(juxt take drop)", "problem": 49, "user": "5060ae00e4b07251188e4459"}, {"code": "#(conj (conj [] (subvec %2 0 %1)) (subvec %2 %1))", "problem": 49, "user": "5115cf87e4b0ce5098ee73c3"}, {"code": "(juxt take drop)", "problem": 49, "user": "4fe8fda4e4b0547ebccb2438"}, {"code": "(juxt take drop)", "problem": 49, "user": "50742549e4b054001656accf"}, {"code": "(fn _split-at [n items]\n  (list (take n items) (drop n items)))", "problem": 49, "user": "510cd1dde4b078ea71921124"}, {"code": "(fn my-split-at [n s]\n  [(take n s) (drop n s)])", "problem": 49, "user": "5119f3d5e4b06c8af0111818"}, {"code": "(fn sp [n s]\n  (vector (take n s) (drop n s)))", "problem": 49, "user": "511aa2a4e4b0c87c59c9670a"}, {"code": "#(vector (take % %2) (nthnext %2 %))", "problem": 49, "user": "4ecc1d85535d23f0362276f8"}, {"code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "51181009e4b0e0897831a60f"}, {"code": "(fn [n s]\n  [(take n s) (drop n s)]\n)", "problem": 49, "user": "511cca27e4b00c2a1fa7ff7d"}, {"code": "(fn [n l]\n  [(take n l)\n   (drop n l)])", "problem": 49, "user": "50589113e4b06522596eba7f"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4f8c813de4b02e764a0a519f"}, {"code": "(fn [n xs] [(take n xs) (drop n xs)])", "problem": 49, "user": "4e50ad74535dc968683fc4ec"}, {"code": "(fn [a b] [(take a b) (nthnext b a)])", "problem": 49, "user": "511ac026e4b0c87c59c9670e"}, {"code": "(juxt take drop)", "problem": 49, "user": "4f702dcae4b07046d9f4eff4"}, {"code": "(fn my-split-at\n  [n items]\n  [(take n items) (drop n items)])", "problem": 49, "user": "511720eae4b0063b4e3e16da"}, {"code": "(juxt take drop)", "problem": 49, "user": "4fca4c37e4b0ee37620e184f"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "511b810ce4b07ab9ec456182"}, {"code": "#(vector (drop-last (- (count %2) %) %2) (drop % %2))", "problem": 49, "user": "511f88eee4b085952a83535f"}, {"code": "(fn [n s]\n  (cons (take n s) (list (drop n s))))", "problem": 49, "user": "5100d7dbe4b04f1d96d946df"}, {"code": "(fn [n sequ]\n   [(take n sequ) (nthrest sequ n)])", "problem": 49, "user": "50d3b03fe4b030b634c368b9"}, {"code": "(fn [n col]\n  [(take n col) (drop n col)])", "problem": 49, "user": "511c44fde4b00c2a1fa7ff77"}, {"code": "(juxt take drop)", "problem": 49, "user": "50f9739ce4b0e7c80cb15a4d"}, {"code": "(fn [n xs] [(take n xs) (drop n xs)])", "problem": 49, "user": "511623cbe4b0d4f670fd2fe1"}, {"code": "#(let [x (take % %2) y (drop % %2)] [x y])", "problem": 49, "user": "50b35486e4b03ea88043356a"}, {"code": "(fn [n x]\n  [(take n x) (drop n x)])", "problem": 49, "user": "5123ac8ee4b061b4c6f0e0b1"}, {"code": "(fn [n xs] [(take n xs) (drop n xs)])", "problem": 49, "user": "511ac2ede4b0c87c59c9670f"}, {"code": "(fn [i s]\r\n\t(vec (conj [(vec (take i s))] (vec (drop i s))))\r\n)", "problem": 49, "user": "510a6bece4b06956752d35af"}, {"code": "(fn [n seq] [(take n seq) (drop n seq)])", "problem": 49, "user": "4eecc9ad535d93acb0a668b4"}, {"code": "(fn [n coll] (vector (take n coll) (drop n coll)))", "problem": 49, "user": "5125745ae4b05d10e3e395f9"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "510acd6ee4b078ea719210f4"}, {"code": "#(-> [(take % %2) (drop % %2)])", "problem": 49, "user": "51256b40e4b05d10e3e395f8"}, {"code": "#(vector (take % %2) (nthnext %2 %))", "problem": 49, "user": "512474ede4b02c3f2a072cce"}, {"code": "(fn [n values]\n  [(take n values) (drop n values)])", "problem": 49, "user": "50621cbde4b0341461c88951"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "51284226e4b03a34742b4308"}, {"code": "(fn [n xs] [(take n xs) (drop n xs)])", "problem": 49, "user": "51281b25e4b03a34742b4304"}, {"code": "(fn __ [c coll]\n  [(take c coll) (drop c coll)])", "problem": 49, "user": "4f23e1cde4b0d66497709fe4"}, {"code": "#(vector (take %1 %2) (nthrest %2 %1))", "problem": 49, "user": "5127e504e4b03a34742b4302"}, {"code": "(fn [n seq] [(take n seq) (drop n seq)])", "problem": 49, "user": "4e9a1512535dbda64a6f6b6e"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "5125834ae4b05d10e3e395fa"}, {"code": "(fn [n coll] (vector (take n coll) (drop n coll)))", "problem": 49, "user": "5126dbabe4b083bb8f88cf0e"}, {"code": "(fn [i coll] [(vec (take i coll)) (vec (drop i coll))])", "problem": 49, "user": "511937eee4b055cfb310d495"}, {"code": "#(conj [] (take % %2) (drop % %2))", "problem": 49, "user": "511618b1e4b0d4f670fd2fdf"}, {"code": "#(vector (take %1 %2) (take-last (- (count %2) %1) %2))", "problem": 49, "user": "511e3454e4b028ee16def195"}, {"code": "(juxt take drop)", "problem": 49, "user": "4fbbcf0ce4b081705acca2ee"}, {"code": "(juxt take drop)", "problem": 49, "user": "511d11d7e4b022853b0e079f"}, {"code": "(fn [x y] (vector (vec (keep-indexed #(if (< %1 x) %2) y)) (vec (keep-indexed #(if (>= %1 x) %2) y))))", "problem": 49, "user": "5105ed16e4b01150e115ebe2"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "512d3304e4b040332b905b2d"}, {"code": "(fn [n coll]\n  [(take n coll)\n   (drop n coll)])", "problem": 49, "user": "510fd798e4b04c71fce993dc"}, {"code": "(fn f [n s] (loop [ sa [] sb s nn n ] (if (zero? nn) [sa sb] (recur (conj sa (first sb)) (rest sb) (dec nn)))))", "problem": 49, "user": "4ff2ff7ce4b0678c553fc342"}, {"code": "(fn [n col] (vector (take n col) (drop n col)))", "problem": 49, "user": "510967aae4b07c05fdf6dc0f"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4f525fdce4b03ad3f0c10d37"}, {"code": "(fn [n xs] [(take n xs) (drop n xs)])", "problem": 49, "user": "51307b84e4b08c712d3fae39"}, {"code": "(fn [c l] [\n   (vec(take c l)) \n   (vec(drop c l))\n   ])", "problem": 49, "user": "512f06c5e4b0762be4c7aad7"}, {"code": "(fn split-at'\n  [n xs]\n  (loop [n n\n         pre []\n         post xs]\n    (if (== n 0)\n      [pre post]\n      (recur (dec n) (conj pre (first post)) (rest post)))))", "problem": 49, "user": "5131104ae4b09e21d785bdfe"}, {"code": "(fn [n a]\n  (let [f (vec (take n a))\n        s (vec (drop n a))]\n    [f s]))", "problem": 49, "user": "5125d963e4b05d10e3e395fe"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "51057b2be4b06d28cacc92e8"}, {"code": "(fn [n coll]\n    ((fn ! [result cnt x]\n        (if (= cnt n)\n            [result x]\n            (! (conj result (first x))\n                    (inc cnt)\n                    (rest x)))) [] 0 coll))", "problem": 49, "user": "5132c6f0e4b021281ec7b6d3"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4dada426c9a9d6ed2a99dc57"}, {"code": "(juxt take drop)", "problem": 49, "user": "511b9017e4b00c2a1fa7ff6b"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4e55b3dc535d8a8b8723a27f"}, {"code": "(juxt take drop)", "problem": 49, "user": "512b7a05e4b04d059cf1fd14"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "50d3ec8be4b030b634c368bb"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "510dc185e4b078ea71921146"}, {"code": "(fn [idx sq]\n  [(apply vector (take idx sq))\n   (apply vector (drop idx sq))])", "problem": 49, "user": "504e12ade4b078edc5f593b7"}, {"code": "(fn [n s] [(take n s) (drop n s)])", "problem": 49, "user": "510528a0e4b0730a5f55ad85"}, {"code": "(fn [x xs] (loop [i 0 acu [] rxs xs] (if (= i x) [(seq acu) rxs] (recur (+ i 1) (conj acu (first rxs)) (rest rxs)))))", "problem": 49, "user": "511a0374e4b06c8af011181a"}, {"code": "#(vector (take %1 %2) (nthnext %2 %1))", "problem": 49, "user": "51000111e4b00d7ad4cab15e"}, {"code": "#(identity [(take %1 %2) (nthrest %2 %1)])", "problem": 49, "user": "4de52c87535d08e6dec9fdf0"}, {"code": "(fn [n x] [(take n x) (take-last (- (count x) n) x)])", "problem": 49, "user": "504ffa26e4b0a02f9cffdead"}, {"code": "#(vector (subvec %2 0 %1) (subvec %2 %1))", "problem": 49, "user": "512eb1e7e4b0b740abc5982a"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4e823f41535db62dc21a62c8"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "5117c31ee4b0e0897831a60c"}, {"code": "#(vector (take %1 %2) (nthnext %2 %1))", "problem": 49, "user": "5137c3b0e4b0509a8b470482"}, {"code": "(fn [n x] [(take n x) (drop n x)])", "problem": 49, "user": "51377c10e4b04059df19f305"}, {"code": "(fn [n s] [(take n s) (drop n s)])", "problem": 49, "user": "512eb723e4b0b740abc5982b"}, {"code": "(fn [x l] [(take x l)(drop x l)])", "problem": 49, "user": "51352899e4b082aeb3a3f03b"}, {"code": "(fn [n, xs]\n  [(take n xs) (drop n xs)])", "problem": 49, "user": "51365524e4b04ac1f358dd52"}, {"code": "(fn [n v] [(subvec v 0 n) (subvec v n)])", "problem": 49, "user": "50fa01bce4b07934dda8b0ba"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "511f9625e4b085952a835362"}, {"code": "#(let [xs (partition-all %1 %2)] (list (first xs) (apply concat (rest xs))))", "problem": 49, "user": "513a4babe4b067e25a345eca"}, {"code": "#(list (take % %2) (take-last (- (count %2) %) %2))", "problem": 49, "user": "5138d08be4b0a5db03d727db"}, {"code": "(fn [n coll] (vector (keep-indexed #(if (> n %1) %2) coll) (keep-indexed #(if (<= n %1) %2) coll)))", "problem": 49, "user": "513d121fe4b0e544971636a2"}, {"code": "(juxt take drop)", "problem": 49, "user": "50b78ac9e4b0cf3e51c3046a"}, {"code": "#(conj [] (take %1 %2) (drop %1 %2))", "problem": 49, "user": "50f53694e4b057d4c52de881"}, {"code": "(fn [n s] [(take n s) (drop n s)])", "problem": 49, "user": "4f8ab084e4b02e764a0a5171"}, {"code": "(fn [n items]\n\t\t(vector (vec (take n items)) (vec(drop n items))))", "problem": 49, "user": "51205867e4b0e88f5a20c40f"}, {"code": "(fn [x y]\n  [((fn tmp [a b] \n      (if (= a 1) \n        [(first b)] \n        (cons (first b) (tmp (dec a) (rest b)) )\n        )) \n    x y) \n   (drop x y)])", "problem": 49, "user": "513b77f3e4b00f740c76c403"}, {"code": "(fn [splt lst]\n  (list (keep-indexed #(if(< % splt) %2) lst) (keep-indexed #(if(>= % splt) %2) lst) )\n  )", "problem": 49, "user": "5124619ae4b02c3f2a072ccd"}, {"code": "(fn mysplitat [n xs]\n  [(take n xs) (drop n xs)])", "problem": 49, "user": "4fb804f7e4b081705acca2d6"}, {"code": "(fn [n xs] [(take n xs) (drop n xs)])", "problem": 49, "user": "513edd13e4b051389b345b39"}, {"code": "(fn [n s] (list (take n s) (drop n s)))", "problem": 49, "user": "513bb7a6e4b04402f587b77d"}, {"code": "(fn [n l] [(take n l) (drop n l)])", "problem": 49, "user": "51411e3be4b05ca1a0b379f3"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "4ec1923f535dfed6da9c6db2"}, {"code": "(juxt take drop)", "problem": 49, "user": "51424cc8e4b0b50abeb46b34"}, {"code": "#(conj [] (first (partition-all % %2)) (apply concat (rest (partition-all % %2))))", "problem": 49, "user": "513ca934e4b0b86ece9f3228"}, {"code": "(fn [n s]\n  (let [f (take n s)\n        l (take-last (- (count s) n) s)]\n    (vec (list f l))))", "problem": 49, "user": "51197750e4b057cba170bc99"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "5142ea50e4b0c172af7558ca"}, {"code": "(fn [idx s] (vec [(take idx s) (drop idx s)]))", "problem": 49, "user": "51430fb2e4b0c172af7558ce"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "50e3fe8fe4b0463d32072488"}, {"code": "#(vector (take %1 %2) (nthrest %2 %1) )", "problem": 49, "user": "513f53c6e4b051389b345b40"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "513f0565e4b051389b345b3b"}, {"code": "(juxt take drop)\n;(fn [n coll] [ (take n coll) (drop n coll) ])", "problem": 49, "user": "4ff01fa9e4b0678c553fc321"}, {"code": "(fn [at col]\n  (conj [] (take at col) (take-last (- (count col) at) col)))", "problem": 49, "user": "513cb853e4b0b86ece9f322b"}, {"code": "(fn [n coll] \n  (vector (take n coll) (drop n coll)))", "problem": 49, "user": "51392535e4b0a5db03d727e1"}, {"code": "(fn [n lst]\n  [(vec (take n lst)) (vec (drop n lst))])", "problem": 49, "user": "50e135f4e4b084616e11c667"}, {"code": "(fn [n xs] [(take n xs) (drop n xs)])", "problem": 49, "user": "513dca07e4b0825f97f7f962"}, {"code": "(fn [n s] [(take n s) (drop n s)])", "problem": 49, "user": "5145832be4b0e8879607340a"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])\n;(juxt take drop)", "problem": 49, "user": "505b9084e4b032b709c81371"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4f2d4d4ce4b0d6649770a058"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "513dcc1ce4b0825f97f7f964"}, {"code": "(fn [n xs]\n  [(take n xs) (drop n xs)])", "problem": 49, "user": "5140c505e4b049dea086df40"}, {"code": "(fn [n s]\n    (let [a [(vec (take n s))\n             (vec (drop n s))]\n          ]\n      a)\n    )", "problem": 49, "user": "50bf6f93e4b0ffd967a66cbf"}, {"code": "#(conj (conj [] (take %1 %2)) (nthrest %2 %1))", "problem": 49, "user": "514721c6e4b0d520409ed392"}, {"code": "(juxt take drop)", "problem": 49, "user": "5128554ee4b03a34742b430a"}, {"code": "(fn [i,s] (list (take i s) (drop i s)))", "problem": 49, "user": "5142e808e4b0c172af7558c9"}, {"code": "(fn f [n,l] (conj [] (take n l) (drop n l)))", "problem": 49, "user": "514b66f4e4b0bd81940b86cb"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "512a8ef7e4b0ff5c4bc1f99e"}, {"code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "513fb358e4b00f13ea1bd893"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "514457fbe4b0b4fb4ace5f43"}, {"code": "(juxt take drop)", "problem": 49, "user": "514d8084e4b019235f6c0588"}, {"code": "(juxt take drop)", "problem": 49, "user": "514d2c7ee4b019235f6c0582"}, {"code": "(fn [n p2 & p1]\n  (when-not p1\n    (let [p1 []]))\n  (if (not= n 0)\n    (recur (dec n) (rest p2) (cons (first p2) p1))\n    [(reverse p1) p2]))", "problem": 49, "user": "51460e4ce4b04ef915e37314"}, {"code": "(juxt take drop)", "problem": 49, "user": "51424c61e4b0b50abeb46b33"}, {"code": "(fn s [n l] \n  (if (= n 0)\n    (cons [] (list l))\n    (let [r (s (- n 1) (rest l))]\n      (cons (cons (first l) (first r)) (rest r)))))", "problem": 49, "user": "5110b8bae4b04c71fce993f4"}, {"code": "(fn [index coll]\n  (list (take index coll)\n        (drop index coll)))", "problem": 49, "user": "51502056e4b098b221effc25"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "5151aa14e4b03e678e393ad4"}, {"code": "(fn [x y] [(take x y) (drop x y)])", "problem": 49, "user": "514d398ee4b019235f6c0583"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "51037468e4b00c483ae17702"}, {"code": "(fn [at cols]\n\t  (vector (take at cols)\n\t\t  (nthrest cols at)))", "problem": 49, "user": "5016ac54e4b052339a490e7b"}, {"code": "#(vector (take % %2)(drop % %2))", "problem": 49, "user": "4f50d933e4b03ad3f0c10d11"}, {"code": "#(list(take%1%2)(drop%1%2))", "problem": 49, "user": "4f296a80e4b0d6649770a02a"}, {"code": "(fn [x xs] [(take x xs) (drop x xs)])", "problem": 49, "user": "514def61e4b019235f6c0591"}, {"code": "#(vector (subvec %2 0 %1) (subvec %2 %1))", "problem": 49, "user": "4ef2eb4d535dced4c769f226"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4fb4303fe4b081705acca2ac"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "51170b49e4b0063b4e3e16d9"}, {"code": "#(vector \n       (vec (take %1 %2)) \n       (vec (drop %1 %2)))", "problem": 49, "user": "51367626e4b04ac1f358dd53"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4e58ef07535d8a8b8723a299"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "50ba5113e4b03e68e4411c7d"}, {"code": "(juxt take drop)", "problem": 49, "user": "514afd1be4b0bd81940b86c6"}, {"code": "(juxt take drop)", "problem": 49, "user": "514f0723e4b019235f6c0599"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "510d1ff4e4b078ea7192112f"}, {"code": "(juxt take drop)", "problem": 49, "user": "51533ecde4b0252ac4b16619"}, {"code": "(fn mysplit [ctr sq]\n    [(take ctr sq) (drop ctr sq)])", "problem": 49, "user": "515737f0e4b0b0b4b87062d0"}, {"code": "#(let [p (partition-all % %2)]\n   [(first p) (apply concat (rest p))])", "problem": 49, "user": "5150a7d7e4b03e678e393abb"}, {"code": "(fn [n x] [(take n x) (drop n x)])", "problem": 49, "user": "5158bba4e4b059418b97f0ab"}, {"code": "(fn [i s] [(take i s) (take-last (- (count s) i) s) ])", "problem": 49, "user": "51547920e4b084ca81ee2e1c"}, {"code": "(fn [n col] [(take n col) (drop n col)])", "problem": 49, "user": "504e71cbe4b0f6ff3350c4b3"}, {"code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "515a6151e4b0394f658fe241"}, {"code": "#(loop [lim %1 lst %2 acc []]\n   (if (zero? lim)\n     [acc (apply vector lst)]\n     (recur (dec lim) (rest lst) (conj acc (first lst)))))", "problem": 49, "user": "515828b8e4b0a069fd272c71"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "514d7e29e4b019235f6c0587"}, {"code": "#(vector \n       (vec (take %1 %2)) \n       (vec (drop %1 %2)))", "problem": 49, "user": "514e4ae4e4b019235f6c0594"}, {"code": "(fn [n s] [(take n s) (drop n s)])", "problem": 49, "user": "5133e51ae4b0d7a043de8cf6"}, {"code": "#(conj [] (take %1 %2) (drop %1 %2))", "problem": 49, "user": "510c123be4b078ea7192110e"}, {"code": "(fn \n  [n l]\n  [(take n l) (drop n l)])", "problem": 49, "user": "515efd01e4b02c55805ea238"}, {"code": "(fn [n s] [(take n s) (drop n s)])", "problem": 49, "user": "515e38ace4b049add99a0538"}, {"code": "(fn split-seq [i, s]\n  [(take i s) (drop i s)]\n)", "problem": 49, "user": "513b43ede4b067e25a345ed3"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "50fe9d60e4b03cd852b4e84f"}, {"code": "(fn [n l] [(take n l) (drop n l)])", "problem": 49, "user": "515ead6be4b049add99a053e"}, {"code": "(fn [pos xs] [(take pos xs) (drop pos xs)])", "problem": 49, "user": "515cf9b5e4b00901442db1d4"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "50bfb5fbe4b05ae8c1cbbd9a"}, {"code": "(fn [n l] (loop [i 0 acc [] xs l]\n\t\t\t(if (= n i)\n\t\t\t    [acc xs]\n\t\t\t  (recur (inc i) (conj acc (first xs)) (rest xs)))))", "problem": 49, "user": "4eeccfc0535d93acb0a668b5"}, {"code": "(fn [n items] [(take n items) (drop n items)])", "problem": 49, "user": "504ee511e4b0e7ad84dbc4a4"}, {"code": "(fn a [n lst]\n  (if (= n 0)\n    (list '() lst)\n    (let [[v1 v2] (a (- n 1) (rest lst))]\n      (list (cons (first lst) v1) v2))))", "problem": 49, "user": "51607eb0e4b009fba0926e27"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "50705886e4b07bd6ad9b9f2a"}, {"code": "(fn [at coll]\n  [(take at coll) (drop at coll)])", "problem": 49, "user": "4fdbc075e4b05e33b9224f61"}, {"code": "(fn [N seqs] (conj [] (take N seqs) (drop N seqs)))", "problem": 49, "user": "5162757ee4b03cfa3774b3fe"}, {"code": "(fn [n c] [(take n c) (drop n c)])", "problem": 49, "user": "51592b81e4b0394f658fe22c"}, {"code": "#(vector (take % %2)(drop % %2))", "problem": 49, "user": "515e8ce2e4b049add99a053d"}, {"code": "(fn [n coll]\n    (loop [n n\n           l []\n           r coll]\n      (if (= n 0)\n        [l r]\n        (recur (dec n) (conj l (first r)) (rest r)))))", "problem": 49, "user": "515ef58be4b02c55805ea237"}, {"code": "(fn [n acoll]\n  ( conj '() (drop n acoll) (take n acoll) )\n  )", "problem": 49, "user": "5135a74ae4b04ac1f358dd46"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "5166e80de4b060c690c1f4c5"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "5142154ce4b0b50abeb46b2b"}, {"code": "#(vec [(take %1 %2) (drop %1 %2)])", "problem": 49, "user": "50fb46e6e4b0d10d794c19e5"}, {"code": "(juxt take drop)", "problem": 49, "user": "51670895e4b013fc800656c1"}, {"code": "(fn [i s]\n  [(take i s) (drop i s)])", "problem": 49, "user": "5165a235e4b079ad97ec44ac"}, {"code": "(juxt take drop)", "problem": 49, "user": "4f437751e4b0d7d3c9f3fd20"}, {"code": "(fn [n s]\n  (into [] (list (into [] (take n s)) (into [] (drop n s)))))", "problem": 49, "user": "504e0136e4b078edc5f5938e"}, {"code": "(fn [i coll] (partition-by #(< (.indexOf coll %) i) coll))", "problem": 49, "user": "50ef96a1e4b0bdaecbb47d9d"}, {"code": "(fn [amnt coll] (vector (take amnt coll) (drop amnt coll)))", "problem": 49, "user": "50723bbae4b0e3170b5a868b"}, {"code": "(fn split-a-seq [n lat]\n  (cons (take n lat) (cons (drop n lat) '())))", "problem": 49, "user": "51696bcde4b03f62cda68ce7"}, {"code": "(fn s \n  ([n l] (s n [] l 0))\n  ([n one two c]\n    (cond\n      (== c n) [one two]\n      :else (s n (conj one (first two)) (rest two) (inc c)))))", "problem": 49, "user": "4f05a9cf535dcb61093f6bfc"}, {"code": "(fn [a xs]\n  (let [v \n    (reduce #(if (< (%1 0) a)\n               [(inc (%1 0)) (conj (%1 1) %2) (%1 2)]\n               [(inc (%1 0)) (%1 1) (conj (%1 2) %2)]) [0 [] []] xs)]\n      [(v 1) (v 2)]))", "problem": 49, "user": "4e74e119535d7a570dd295bc"}, {"code": "(juxt take drop)", "problem": 49, "user": "5141bc82e4b02fd87f5064c5"}, {"code": "(fn [nombre liste]\n  (loop [n nombre \n         l liste\n         gauche []]\n    (cond\n     (= 0 n) (list (vec gauche) (vec l))\n     :else (recur (dec n) \n                  (rest l) \n                  (conj gauche (first l))))))", "problem": 49, "user": "5154fa3fe4b0179c5115f4e6"}, {"code": "#(vector (vec (take %1 %2)) (vec (drop %1 %2)))", "problem": 49, "user": "5150f87ae4b03e678e393ac7"}, {"code": "(fn [n l]\n  [(take n l) (drop n l)])", "problem": 49, "user": "50b1d166e4b03ea880433554"}, {"code": "(fn funcky [n col]\n(vector (take n col)(drop n col) ))", "problem": 49, "user": "51427a8be4b0b50abeb46b37"}, {"code": "(fn [n l] [(take n l) (drop n l)])", "problem": 49, "user": "515ffbfbe4b0e2be8aa20bdd"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "5143952fe4b0b4fb4ace5f38"}, {"code": "(fn [n xs] (list (take n xs) (take-last (- (count xs) n) xs)))", "problem": 49, "user": "516ea313e4b06aac486e5b2c"}, {"code": "(fn [x xs]\n  [(take x xs) (drop x xs)])", "problem": 49, "user": "516f06dce4b06aac486e5b39"}, {"code": "(fn [n s] (list (take n s) (drop n s)))", "problem": 49, "user": "4fb03cf4e4b081705acca262"}, {"code": "(juxt take drop)", "problem": 49, "user": "5164867fe4b003cf19fdde3e"}, {"code": "(fn [at s] [(take at s) (drop at s)])", "problem": 49, "user": "51473a70e4b0d520409ed394"}, {"code": "(fn ssplit [at col]\n   [(take at col) (drop at col)])", "problem": 49, "user": "51684318e4b03f62cda68cd6"}, {"code": "(juxt take drop)", "problem": 49, "user": "51740b65e4b0d277d717bc67"}, {"code": "#(seq [(take % %2) (drop % %2)])", "problem": 49, "user": "511d6a01e4b022853b0e07a5"}, {"code": "(fn split\n\t[x coll]\n\t(list (keep-indexed #(if (< %1 x) %2) coll) (keep-indexed #(if (>= %1 x) %2) coll)))", "problem": 49, "user": "51701a9ce4b034fe8eaf70f5"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "4ed90014535d10e5ff6f52fe"}, {"code": "(juxt take drop)", "problem": 49, "user": "51652141e4b003cf19fdde48"}, {"code": "(fn [n lst] [(take n lst) (take-last (- (count lst) n) lst)])", "problem": 49, "user": "516dc88ae4b046df6fbb76a1"}, {"code": "(fn [n xs]\n  [(take n xs) (drop n xs)])", "problem": 49, "user": "5173726be4b098276e74652c"}, {"code": "(fn p49 [d coll]\n  (list (take d coll)\n   (drop d coll)))", "problem": 49, "user": "51750fc5e4b07031762f2ee6"}, {"code": "(fn [n sq] (vector (vec (take n sq))\n                   (vec (reverse (take (- (count sq) n) (reverse sq))))))", "problem": 49, "user": "5175616ae4b0dea9bbfba576"}, {"code": "(juxt take drop)", "problem": 49, "user": "4f9ff06ce4b0dcca54ed6d41"}, {"code": "(fn [n v]\n  (vector (take n v) (drop n v)))", "problem": 49, "user": "515f8a0de4b0e2be8aa20bce"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "517531c6e4b07031762f2eea"}, {"code": "(fn [n l] (vector (take n l) (nthrest l n)))", "problem": 49, "user": "5164d97ee4b003cf19fdde43"}, {"code": "#(concat [(take %1 %2)] [(drop %1 %2)])", "problem": 49, "user": "51780f88e4b03d69594194c9"}, {"code": "(juxt take drop)", "problem": 49, "user": "51757af0e4b085adf681d873"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "5134973ce4b0230e9f713b42"}, {"code": "(fn [n s]\n  (let [indexed (fn [l] (map vector (iterate inc 0) l) )\n        v (indexed s)\n        [p r] (split-with #(> n (first %)) v) ] \n    [(map second p) (map second r)]\n    )\n  )", "problem": 49, "user": "51729002e4b044b2ef48a850"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "517adc6ce4b0925c997201c4"}, {"code": "(fn [n xs] [(take n xs) (drop n xs)])", "problem": 49, "user": "508a2c2fe4b016a2107004a1"}, {"code": "(fn [n xs] (list (take n xs) (drop n xs)))", "problem": 49, "user": "517bf28de4b07ef0e56148d5"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "51696ee7e4b03f62cda68ce8"}, {"code": "#(identity [(take % %2) (drop % %2)])", "problem": 49, "user": "51778122e4b085adf681d89d"}, {"code": "(fn [n coll] \n  [(take n coll) (drop n coll)])", "problem": 49, "user": "5153316ce4b0252ac4b16611"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "5163b06be4b055933a9ca030"}, {"code": "(fn [x l] [(take x l)(drop x l)])", "problem": 49, "user": "51789599e4b03d69594194d6"}, {"code": "(fn [n xs] [(take n xs) (drop n xs)])", "problem": 49, "user": "51780bfce4b0f89a8f53839c"}, {"code": "#(partition-by (fn [i] (> % (.indexOf %2 i))) %2)", "problem": 49, "user": "5093a80be4b097f48cc38583"}, {"code": "(fn [n s]\n\t(vector (take n s) (drop n s)))", "problem": 49, "user": "4eec82fe535d93acb0a668ae"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "5140771ae4b076604f1aa555"}, {"code": "(fn split [n coll]\n  (list (take n coll) (drop n coll)))", "problem": 49, "user": "51803613e4b04f45bde7d8fd"}, {"code": "(fn\n  [x coll]\n  (vector\n   (vec (take x coll))\n   (vec (drop x coll))))", "problem": 49, "user": "51804bcbe4b04f45bde7d901"}, {"code": "(juxt take drop)", "problem": 49, "user": "4dada913c9a9d6ed2d99dc57"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4ed286d4535d44c135fd68d7"}, {"code": "(fn split [i as] \n  ((fn spl [n xs ys] (if (or (<= n 0) (empty? ys)) [xs ys] (spl (- n 1) (conj xs (first ys)) (rest ys))))\n  i [] as\n  )\n)", "problem": 49, "user": "515fb48fe4b0e2be8aa20bd5"}, {"code": "#( vector (take %1 %2)   (drop %1 %2))", "problem": 49, "user": "517945dce4b0684c1c981a43"}, {"code": "#(conj [(into [] (take %1 %2))] (into [] (drop %1 %2)))", "problem": 49, "user": "5034b623e4b062bc5d7ae168"}, {"code": "(fn [n l] [(subvec l 0 n) (subvec l n)])", "problem": 49, "user": "515ff4b9e4b0e2be8aa20bd9"}, {"code": "(fn f [n lst]\n  [(subvec lst 0 n)\n  (subvec lst n)])", "problem": 49, "user": "51750cd4e4b07031762f2ee5"}, {"code": "(fn [x in] \n (list (take x in) (drop x in)))", "problem": 49, "user": "5186571de4b0da5a5be3bad1"}, {"code": "(juxt take drop)", "problem": 49, "user": "518696c1e4b0c40be512d708"}, {"code": "(fn [n c]\n  [(take n c) (drop n c)])", "problem": 49, "user": "517b59b8e4b0925c997201d0"}, {"code": "(fn [x lst] (loop [s x f [] r lst] (if (= 0 s) [f r] (recur (dec s) (conj f (first r)) (rest r)))))", "problem": 49, "user": "5179fd22e4b01aacecbecbe5"}, {"code": "#(list (drop-last (- (count %2) %1) %2) (drop %1 %2))", "problem": 49, "user": "517e6671e4b0329b27fa9f56"}, {"code": "(fn [n s] (vector (take n s) (drop n s)))", "problem": 49, "user": "5187dd58e4b057e3860ab7e4"}, {"code": "(fn [n xs] [(take n xs) (drop n xs)])", "problem": 49, "user": "5186134ce4b0da5a5be3bac7"}, {"code": "(juxt take drop)", "problem": 49, "user": "5160195ae4b0e2be8aa20be3"}, {"code": "(fn [place lst]\n  [(take place lst) (drop place lst)]\n  )", "problem": 49, "user": "4fecebe1e4b0681fd128dcac"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "517bc969e4b07ef0e56148d0"}, {"code": "(fn [x1 y1]\n  (loop [x x1, y y1, z []]\n    (if (= x (count z)) \n      [z (vec y)]\n\n        (recur x (rest y) (conj z (first y))))\n                        ))", "problem": 49, "user": "5099283ce4b0cae2931060af"}, {"code": "(fn [s n]\n  [(take s n) (drop s n)])", "problem": 49, "user": "51899891e4b0288ada3dbdab"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "51805d22e4b0e3fc13e244df"}, {"code": "(fn [x coll] [(take x coll) (nthrest coll x)])", "problem": 49, "user": "5170ea06e4b0d70c8bbbf235"}, {"code": "#(vector \n  (vec \n   (take % %2))\n  (vec\n   (drop % %2)))", "problem": 49, "user": "515e2000e4b049add99a0534"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "518ccf6be4b05e6c8537e386"}, {"code": "(fn [n coll]\n  (loop [xs1 []  xs2 coll i 0 ]\n    (if (< i n )\n      (recur (conj xs1 (first xs2) ) (rest xs2) (inc i) )\n      (vector xs1 xs2)\n      )\n    )\n  )", "problem": 49, "user": "4ec4d723535dcc7ae8597d65"}, {"code": "(juxt take drop)", "problem": 49, "user": "518b761ae4b0f028e99addee"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "51897709e4b0288ada3dbdaa"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "51823a97e4b0f2adb733651e"}, {"code": "(fn [n xs] [(take n xs) (drop n xs)])", "problem": 49, "user": "518ec633e4b0cd6ff516769e"}, {"code": "(fn split-n [n ve]\n  (vector (take n ve) (drop n ve)))", "problem": 49, "user": "516282c3e4b0e6d3c4734711"}, {"code": "(fn [y x] (vector (vec(take y x)) (vec(drop y x))))", "problem": 49, "user": "5177cacde4b0261ae665b877"}, {"code": "(fn [n lst]\n  (vector (take n lst) (drop n lst)))", "problem": 49, "user": "519136e9e4b0f8ef0be96c01"}, {"code": "(fn [x y] [(take x y) (drop x y)])", "problem": 49, "user": "5154b16be4b0179c5115f4e2"}, {"code": "#((comp vec list) (vec (take % %2)) (vec (drop % %2)))", "problem": 49, "user": "5159849ce4b0394f658fe236"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "51933b41e4b0c663c5d86ca2"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "5192dd39e4b0c663c5d86c9e"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "518a8c4be4b0df82f5685903"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4fae0b85e4b081705acca245"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "5196568fe4b04c0af7ff3c1c"}, {"code": "(fn [n s] (vector (take n s) (drop n s)))", "problem": 49, "user": "516733fce4b079759a74a5e9"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "50f69a3ce4b0035e89151844"}, {"code": "(fn [n v] [(take n v) (drop n v)])", "problem": 49, "user": "51990df9e4b068aa333628fc"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "518e6966e4b051adb72789ec"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "50377d53e4b0af0658af77ad"}, {"code": "(fn [c s]\n  (let [fst (subvec s 0 c)\n        rst (subvec s c)]\n    [fst rst]))", "problem": 49, "user": "4dade9e9c9a9d6ed4799dc57"}, {"code": "(juxt take drop)", "problem": 49, "user": "519b2570e4b0ac1b7dced6a3"}, {"code": "(fn [n coll] (list (take n coll) (drop n coll)))", "problem": 49, "user": "4f409e29e4b0e243712b1fb6"}, {"code": "(fn [n s] (vector (take n s) (drop n s)))", "problem": 49, "user": "516385cee4b055933a9ca02d"}, {"code": "(fn [n lst] [(vec (take n lst)) (vec (drop n lst))])", "problem": 49, "user": "5073de20e4b054001656acca"}, {"code": "#(vector (drop-last (- (count %2) %) %2) (drop % %2))", "problem": 49, "user": "50a8bb65e4b0deba384a58bd"}, {"code": "#(concat (vector (take % %2)) (vector (drop % %2)))", "problem": 49, "user": "5191e91de4b08962174cf733"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "519b7d76e4b02a926d9a436e"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "51131da8e4b0350614f07a83"}, {"code": "(fn [n xs]\n  [(take n xs) (drop n xs)])", "problem": 49, "user": "50cfcad6e4b00b15ecee9752"}, {"code": "#(let[ x (partition-all % %2) ]\n   (seq [(first x ) (apply concat (rest x ))]))", "problem": 49, "user": "518c5236e4b087e178201de0"}, {"code": "(juxt take drop)", "problem": 49, "user": "4f16d3fd535d64f60314644e"}, {"code": "#(vec (map (fn [x] into [] x) [(vec (take %1 %2)) (vec (drop %1 %2))]))", "problem": 49, "user": "51a05bede4b0b292b01ee3f4"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "51a3ca78e4b0e77c4ca60bfa"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "51377188e4b04059df19f303"}, {"code": "(fn [n c] [(take n c) (drop n c)])", "problem": 49, "user": "51a10b2ce4b0b292b01ee3fe"}, {"code": "(juxt take drop)", "problem": 49, "user": "506ba58be4b0eda3100c090b"}, {"code": "(fn [n c] (vector (take n c) (drop n c)))", "problem": 49, "user": "5180dc04e4b06b8caf33fa01"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "51a768e0e4b0da5f497bde84"}, {"code": "(fn [n c] (#(list (first %) (apply concat (rest %))) (partition-all n c)))", "problem": 49, "user": "519964cbe4b0aa09cbc0b849"}, {"code": "(fn [n xs] [(take n xs) (drop n xs)])", "problem": 49, "user": "51a8f0c6e4b08d8ec191b821"}, {"code": "#(vector (vec (take %1 %2)) (vec (drop %1 %2)))", "problem": 49, "user": "51a9dbc9e4b04e3dc0c27b1e"}, {"code": "(fn [n sq]\n  (vector (take n sq) (drop n sq)))", "problem": 49, "user": "515f2a85e4b0595cf3d1da44"}, {"code": "(fn [n c] [(take n c) (drop n c)])", "problem": 49, "user": "5065dd94e4b0313a384e5643"}, {"code": "#(vector (take % %2) (nthrest %2 %))", "problem": 49, "user": "51a1659de4b00957e520db72"}, {"code": "(fn [n x] [(take n x) (drop n x)])", "problem": 49, "user": "5183f5d7e4b02826a645f393"}, {"code": "(fn [n s] [(take n s) (drop n s)])", "problem": 49, "user": "51a7b4fee4b0da5f497bde8b"}, {"code": "(fn [n v] [(take n v) (drop n v)])", "problem": 49, "user": "506cad7de4b0a302964c548e"}, {"code": "(fn [at coll]\n   [(take at coll) (drop at coll)])", "problem": 49, "user": "4fe9f0f6e4b0547ebccb247b"}, {"code": "#(vector (vec (take %1 %2)) (vec (drop %1 %2)))", "problem": 49, "user": "51a477eee4b0def3c5c58692"}, {"code": "(fn [i col]\n    [(take i col) (drop i col)])", "problem": 49, "user": "5141abf1e4b02fd87f5064c3"}, {"code": "(fn [x s]\n  [(take x s) (drop x s)])", "problem": 49, "user": "50bc4e73e4b0594b91591c3d"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "51a54fb4e4b0def3c5c586a3"}, {"code": "(fn [n c] [(take n c) (drop n c)])", "problem": 49, "user": "51ab1718e4b04e3dc0c27b2f"}, {"code": "(fn [n xs]\n  [(take n xs) (drop n xs)])", "problem": 49, "user": "510b0480e4b078ea719210fa"}, {"code": "(fn [n c] [(take n c) (drop n c)])", "problem": 49, "user": "4fbf2818e4b081705acca317"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4fd11132e4b04c3a95aa0409"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "51ad0ab8e4b09397d510977b"}, {"code": "(fn [n s] (vector (take n s) (drop n s)))", "problem": 49, "user": "516db4f6e4b046df6fbb76a0"}, {"code": "#(vector (take %1 %2)(drop %1 %2))", "problem": 49, "user": "51b0fc95e4b0c53cf2e68a72"}, {"code": "#(list (take %1 %2) (take-last (- (count %2) %1) %2))", "problem": 49, "user": "51a417dde4b0def3c5c58688"}, {"code": "(fn [at lst]\n  (map (partial map second) (partition-by (comp (partial > at) first) (map vector (range) lst))))", "problem": 49, "user": "51040eb2e4b0432126ba9bb4"}, {"code": "(fn [x sq]\n  (loop [front [] end sq n 0]\n    (if (= x n)\n      [front end]\n      (recur (conj front (first end))\n             (rest end)\n             (inc n)\n             )\n      )\n    )\n  )", "problem": 49, "user": "51a2569ee4b00957e520db7d"}, {"code": "(fn split-help [n xs]\n  (when (seq xs)\n    [(take n xs) (drop n xs)]))", "problem": 49, "user": "51ac6360e4b09397d510976c"}, {"code": "#(let [fst (take %1 %2) lst (drop %1 %2)] [fst lst])", "problem": 49, "user": "51b24defe4b02f8f128bb963"}, {"code": "(fn [n coll]\n  [(take n coll) (nthrest coll n)])", "problem": 49, "user": "4dcd327b535d5973398f929b"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "51a3c9cde4b0e77c4ca60bf9"}, {"code": "(fn [n xs]\n  [(take n xs)\n   (drop n xs)])", "problem": 49, "user": "51aa2b4fe4b04e3dc0c27b21"}, {"code": "(fn spl [n s]\n  [(take n s) (drop n s)])", "problem": 49, "user": "51672d15e4b079759a74a5e7"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "51aa5434e4b04e3dc0c27b26"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "51b38769e4b026427ecf067f"}, {"code": "#(vec( concat [(vec (take % %2))] [(vec (drop % %2))]))", "problem": 49, "user": "51aa4eede4b04e3dc0c27b25"}, {"code": "#(conj (into [] [(take % %2)]) (drop % %2))", "problem": 49, "user": "50a5b7e9e4b0aa96157e2610"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "51b793d3e4b0d906fcd71d38"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "51aeb1f4e4b09397d5109794"}, {"code": "#(vec [(take % %2) (drop % %2)])", "problem": 49, "user": "51b3f109e4b0f094dd986fa9"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "51991a89e4b068aa333628fd"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "51b213c2e4b02f8f128bb962"}, {"code": "(fn [n c] (conj nil (drop n c) (take n c)))", "problem": 49, "user": "51b1ef95e4b02f8f128bb95e"}, {"code": "(fn [n s] [(take n s) (drop n s)])", "problem": 49, "user": "4fa340b4e4b081705acca18c"}, {"code": "(fn [at coll] (concat (list (take at coll)) (list (take-last (- (count coll) at) coll))))", "problem": 49, "user": "51b7b521e4b0d906fcd71d3a"}, {"code": "(fn [n v] (list (take n v) (drop n v)))", "problem": 49, "user": "51bc2f6ae4b0fe3ecfb46452"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "4ebf11bc535dfed6da9c6d9c"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "51bb970be4b0fe3ecfb4644e"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "51ae350fe4b09397d5109790"}, {"code": "#(list (take %1 %2) (take-last (mod (* -1 %1) (count %2)) %2))", "problem": 49, "user": "51b76227e4b0d906fcd71d35"}, {"code": "#(vector (vec (take %1 %2)) (vec (drop %1 %2)))", "problem": 49, "user": "5163a7bbe4b055933a9ca02f"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "4dd59d8b535dae65d5c462eb"}, {"code": "(fn [n coll]\n  (loop [n n\n         ys coll\n         xs []]\n    (if (zero? n)\n      (list xs ys)\n      (recur (dec n)\n             (rest ys)\n             (conj xs (first ys))))))", "problem": 49, "user": "519db0ede4b037b32803f9b9"}, {"code": "(fn my-split [x l]\n  (concat (list (take x l))\n          (list (drop x l))))", "problem": 49, "user": "51baff1be4b0fe3ecfb46443"}, {"code": "#(cons (take % %2) (list (drop % %2)))", "problem": 49, "user": "51bf4560e4b013aa0d74b817"}, {"code": "(juxt take drop)", "problem": 49, "user": "51b8e0dce4b050a1176cd69f"}, {"code": "(juxt take drop)", "problem": 49, "user": "51b90b88e4b050a1176cd6a2"}, {"code": "(fn [x y]\n  [(apply vector (take x y)) (apply vector (drop x y))]\n  )", "problem": 49, "user": "51bec919e4b013aa0d74b800"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "51beb32ae4b013aa0d74b7fd"}, {"code": "(fn [a b] (list (take a b) (nthrest b a)))", "problem": 49, "user": "4f47eab2e4b0d56e7bb92bc6"}, {"code": "#(vector (take %1 %2) \n         (take-last (- (count %2) %1) %2))", "problem": 49, "user": "51c330a9e4b0851ac09658f2"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "51789dfae4b03d69594194d7"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "51bd1a0de4b0df1216cefd93"}, {"code": "(fn [n coll]\n  [(into [] (take n coll))\n   (into [] (drop n coll))])", "problem": 49, "user": "51b86a0fe4b09e0e347b2e78"}, {"code": "(fn [idx, coll]\n[(take idx coll) (drop idx coll)])", "problem": 49, "user": "51b9d1f0e4b0e871ca49590b"}, {"code": "(fn [a b] [(take a b) (drop a b)])", "problem": 49, "user": "50b8e9a4e4b0cba0e598b656"}, {"code": "#(vector (vec (take % %2))\n         (vec (drop % %2)))", "problem": 49, "user": "518ad8fce4b06da86c1973c1"}, {"code": "(fn [n s]\n  [(take n s) (drop n s)])", "problem": 49, "user": "4fd93c42e4b05e33b9224f35"}, {"code": "(fn [n, l]    [(subvec l 0 n ) (subvec l n )] )", "problem": 49, "user": "51b5a6e0e4b0f094dd986fce"}, {"code": "(fn [s xs] (partition-by (zipmap xs (repeat s :a)) xs))", "problem": 49, "user": "51aab611e4b04e3dc0c27b2d"}, {"code": "(fn                                                                                                                                         \n    [by sq]                                                                                                                                        \n    (let [idxed-sq (partition                                                                                                                      \n                    2                                                                                                                              \n                    (interleave (iterate inc 0) sq))]                                                                                              \n      (reduce #(let [[idx elm] %2                                                                                                                  \n                     n (if (< idx by) 0 1)]                                                                                                        \n                 (update-in %1 [n] conj elm)) [[] []] idxed-sq)))", "problem": 49, "user": "51c3c6a6e4b0851ac09658f8"}, {"code": "(fn split-a-seq [n lat]\n  (cons (take n lat) (cons (drop n lat) '())))", "problem": 49, "user": "51ba59e4e4b0fe3ecfb4642d"}, {"code": "(fn [x y] (vector (take x y) (drop x y)))", "problem": 49, "user": "51c09719e4b0c9c82288293c"}, {"code": "(fn [n coll]\n  [(take n coll)(drop n coll)])", "problem": 49, "user": "51cb073ce4b068dadb8f2233"}, {"code": "#(cons (take %1 %2) (clojure.core/list (take-last (- (count %2) %1) %2)))", "problem": 49, "user": "51c76864e4b07ef393169e3f"}, {"code": "(fn [n c] [(take n c) (drop n c)])", "problem": 49, "user": "51c73959e4b07ef393169e3e"}, {"code": "(fn [idx coll] (vector (take idx coll) (drop idx coll)))", "problem": 49, "user": "4f99bf3ee4b0dcca54ed6d01"}, {"code": "(comp #(list (first %) (apply concat (next %))) partition-all)", "problem": 49, "user": "51cbdee1e4b08d8387cbede1"}, {"code": "(fn [n xs] (list (take n xs) (take-last (- (count xs) n) xs)))", "problem": 49, "user": "4f72f71be4b07046d9f4f03d"}, {"code": "(fn [idx se]\n  [(vec (take idx se)) (vec (drop idx se))])", "problem": 49, "user": "51cacda3e4b068dadb8f2227"}, {"code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "51d19c24e4b0cfcf579466c3"}, {"code": "(fn [dlim lst]\n  (reduce \n   (fn [result index]\n     (cond \n      (or (< (+ index 1) dlim) (= (+ index 1) dlim))\n      (into\n       [(into (first result) [(lst index)])] \n       [(first (rest result))])\n      (> (+ index 1) dlim)\n      (into\n       [(first result)]\n       [(into \n         (first (rest result))\n         [(lst index)])]))\n   )\n   (into [[[][]]] (range 0 (count lst)))\n  )\n  )", "problem": 49, "user": "50d6d7eee4b0159555a1fc76"}, {"code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "51d08d67e4b067c365486351"}, {"code": "(fn [n xs] [\n(take n xs) \n(drop n xs)])", "problem": 49, "user": "51ba4482e4b0fe3ecfb4642b"}, {"code": "(fn [n c]\n  [(take n c) (drop n c)])", "problem": 49, "user": "517cc671e4b0bbbf1f12af0a"}, {"code": "(fn sp [n input]\n    (vector (take n input) (nthnext input n))\n)", "problem": 49, "user": "51d1111ce4b067c36548635f"}, {"code": "(fn [n S] (let [p (partition-all n S)] (vector (first p) (apply concat (rest p)))))", "problem": 49, "user": "51cf126ae4b0e42293a2256b"}, {"code": "(fn [n coll] (list (take n coll) (drop n coll)))", "problem": 49, "user": "51cdd3f0e4b0e42293a2254b"}, {"code": "(fn [a b] [(take a b) (drop a b)])", "problem": 49, "user": "51cc5cb3e4b02254fc79486f"}, {"code": "(fn[n x] (conj [] (take n x) (drop n x)))", "problem": 49, "user": "51d10b1fe4b067c36548635e"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4f3d83b5e4b0e243712b1f69"}, {"code": "#(vector (take %1 %2) (drop %1 %2 ))", "problem": 49, "user": "50bfd849e4b042992946c649"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "51d360d1e4b099f3b6acddff"}, {"code": "(juxt take drop)", "problem": 49, "user": "51d4ed02e4b013d740b70dec"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "51ca7906e4b08b1cbd0d9487"}, {"code": "(fn [n coll] (list (take n coll) (drop n coll)))", "problem": 49, "user": "51c19873e4b0d204dbe2ca0d"}, {"code": "#(vector (vec (take %1 %2)) (vec (drop %1 %2)))", "problem": 49, "user": "51bdc609e4b0ff155d51d2b3"}, {"code": "(fn [n s] (list (take n s) (drop n s)))", "problem": 49, "user": "51d662fce4b0154f82ab92ef"}, {"code": "(juxt take drop)", "problem": 49, "user": "5082ccb3e4b06a522e8c7af3"}, {"code": "#(conj '() (drop % %2) (take % %2))", "problem": 49, "user": "51c4690fe4b06b70b3e207e1"}, {"code": "(fn [i xs] [(take i xs) (nthrest xs i)])", "problem": 49, "user": "51da111de4b02ceefd94775a"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "50955676e4b087f34d351ab1"}, {"code": "(fn [s xs] (list (take s xs) (drop s xs)))", "problem": 49, "user": "518644bce4b0da5a5be3baca"}, {"code": "(fn [s col]\n  [(take s col) (drop s col)])", "problem": 49, "user": "51cbaf14e4b08d8387cbedda"}, {"code": "(fn split\n  ([n coll] (split n coll []))\n  ([n coll aggr]\n   (if (= (count aggr) n)\n     [aggr coll]\n     (split n (rest coll) (conj aggr (first coll))))))", "problem": 49, "user": "51d96ad0e4b02ceefd94774f"}, {"code": "(fn [n coll]\n  (vector (take n coll) (drop n coll)))", "problem": 49, "user": "51da7e49e4b02ceefd947768"}, {"code": "(fn [n s] [(take n s) (drop n s)])", "problem": 49, "user": "5175533fe4b0dea9bbfba575"}, {"code": "(fn x\n  [n v]\n  (vector (take n v) (drop n v)))", "problem": 49, "user": "518c0f4ee4b0f028e99addf7"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "51c1d159e4b0d204dbe2ca18"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "51c8301ee4b07ef393169e4d"}, {"code": "(fn new-split-at [index a-list]\n   (loop [index index a-list a-list acc '()]\n     (if (zero? index)\n       (list (reverse acc) a-list)\n       (if (empty? a-list)\n         (reverse acc)\n         (recur (- index 1) (rest a-list) (conj acc (first a-list)))))))", "problem": 49, "user": "4ede0511535d10e5ff6f5330"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "51d46133e4b013d740b70de2"}, {"code": "(juxt take drop)", "problem": 49, "user": "51e00020e4b01188f0627534"}, {"code": "(fn [index data] (loop [i   index\n                        d   data\n                        cnt 0\n                        x   []]\n                   (if (= cnt i)\n                     (list x d)\n                     (recur i (rest d) (inc cnt) (conj x (first d))))))", "problem": 49, "user": "50214ffae4b0ef1d2d4433bc"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "51cec7b1e4b0e42293a2255b"}, {"code": "(fn s-split [x y]\n  [(take x y) (nthrest y x)])", "problem": 49, "user": "5195b8cce4b04c0af7ff3c08"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "51da565ae4b02ceefd947765"}, {"code": ";; not proud of this one\n;; but\n#(list (first (partition %1 %2)) (nthrest %2 %1))\n;; ok checked solutions\n;; take, drop , ?", "problem": 49, "user": "514cfa27e4b019235f6c057d"}, {"code": "(fn [at coll] [(take at coll) (drop at coll)])", "problem": 49, "user": "51da52dbe4b02ceefd947763"}, {"code": "(fn sp [at elems] [(take at elems) (drop at elems)])", "problem": 49, "user": "51df505be4b01188f062752a"}, {"code": "(fn [n col] [ (take n col) (drop n col)])", "problem": 49, "user": "51bcf091e4b0df1216cefd91"}, {"code": "(fn [n x]\n  (conj (vector (take n x))(drop n x)))", "problem": 49, "user": "51db8244e4b0e067a9bbadc7"}, {"code": "#(list (take % %2) (drop  % %2))", "problem": 49, "user": "51e1c176e4b06a68e693eafb"}, {"code": "#(into [] [(take %1 %2) (drop %1 %2)])", "problem": 49, "user": "51b66b31e4b02e5820733406"}, {"code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "51ce1320e4b0e42293a22551"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "516199bbe4b009fba0926e36"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "50e90813e4b033b0e80d11e7"}, {"code": "(fn [n cl]\n  [(take n cl) (drop n cl)]\n)", "problem": 49, "user": "51db9e1ee4b0e067a9bbadc9"}, {"code": "(fn [x coll] [(take x coll) (drop x coll)])", "problem": 49, "user": "4ec6a616535d6d7199dd36d2"}, {"code": "#( vector (take % %2) (drop % %2) )", "problem": 49, "user": "51e23b80e4b01e519814642b"}, {"code": "(juxt take drop)", "problem": 49, "user": "51e58e02e4b0efabf93c02d0"}, {"code": "(fn [n c] [(take n c) (drop n c)])", "problem": 49, "user": "4fe89c81e4b07c9f6fd12c57"}, {"code": "(fn [n input] (vector (take n input) (drop n input)))", "problem": 49, "user": "51e0198ee4b01188f0627539"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "51d49b75e4b013d740b70de6"}, {"code": "#(conj [] (take %1 %2) (drop %1 %2))", "problem": 49, "user": "51e1a1fae4b06a68e693eaf6"}, {"code": "(fn [n coll]\n  (let [n (- (count coll) n)]\n    [(drop-last n coll)\n     (take-last n coll)]))", "problem": 49, "user": "51e89428e4b006d205356a51"}, {"code": "(fn f [n s] (list (take n s) (drop n s)))", "problem": 49, "user": "51ba8f82e4b0fe3ecfb46434"}, {"code": "(juxt take drop)", "problem": 49, "user": "51b3d998e4b0f094dd986fa8"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "4f75469ee4b0fbe0118ec55a"}, {"code": "#(->[(take % %2)\n   (drop % %2)])", "problem": 49, "user": "51d9eb05e4b02ceefd947755"}, {"code": "(fn [n xs] [(take n xs) (take-last (- (count xs) n) xs)])", "problem": 49, "user": "51e24a04e4b01e5198146430"}, {"code": "(fn [n seq] [(take n seq) (drop n seq)])", "problem": 49, "user": "51df825de4b01188f062752b"}, {"code": "(fn [x col]\n  (let [sent (get col (dec x))\n        first (conj (vec (for [c col :while (not= c sent)] c)) sent)]\n    (conj (conj [] first) (drop (count first) col))))", "problem": 49, "user": "51eadb98e4b0f1f103a0d153"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "51e595a6e4b0efabf93c02d8"}, {"code": "#(list (first (partition-all % %2)) (apply concat (rest (partition-all % %2))))", "problem": 49, "user": "51eb0374e4b0f1f103a0d156"}, {"code": "(fn [n s]\n  (list (take n s ) (nthnext s n)))", "problem": 49, "user": "51eb3aace4b0f1f103a0d159"}, {"code": "(fn [a b] (vector (take a b) (take-last (- (count b) a) b)) )", "problem": 49, "user": "518aec06e4b06da86c1973c2"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "51ef66a7e4b0871fa145d9a5"}, {"code": "(fn [n s] [(take n s) (drop n s)])", "problem": 49, "user": "4e46e48b535dc968683fc4b7"}, {"code": "(fn [n coll]\n  (list (take n coll) (drop n coll)))", "problem": 49, "user": "51efd397e4b0249c592fbdeb"}, {"code": "(fn foo[acc n lst]\n  (if (= n 0)\n    (list acc lst)\n    (foo (concat acc (list (first lst)))\n          (- n 1)\n          (rest lst)))) '()", "problem": 49, "user": "51eec1a6e4b0871fa145d98d"}, {"code": "(fn [n col] (cons (take n col) (cons (drop n col) '())))", "problem": 49, "user": "518a59b3e4b02bf06f6bbb4b"}, {"code": "(fn\n  [n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "511b233ae4b07ab9ec456180"}, {"code": "(fn [s xs] (list (take s xs) (drop s xs)))", "problem": 49, "user": "51e780dae4b0730ab87cf353"}, {"code": "(fn [take-to sq]\n  (vector (take take-to sq) (nthrest sq take-to) )\n)", "problem": 49, "user": "5029f263e4b023940c84aa45"}, {"code": "#(conj [] (vec (take %1 %2)) (vec (drop %1 %2)))", "problem": 49, "user": "51f28a64e4b0210f90e7454e"}, {"code": "(juxt take drop)", "problem": 49, "user": "51f59607e4b0abb92f97f9d5"}, {"code": "#(vector \n       (vec (take %1 %2)) \n       (vec (drop %1 %2)))", "problem": 49, "user": "51d11f5de4b067c365486360"}, {"code": "#(list (into [] (take %1 %2)) (subvec %2 %1))", "problem": 49, "user": "51f13b80e4b06a20a2523f38"}, {"code": "(fn [at col]\n  (vector (take at col) (drop at col)))", "problem": 49, "user": "4f35e662e4b0e243712b1ec6"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "5046ee3ee4b03b02161376b4"}, {"code": "(fn [x y]\n  (let [s (map-indexed #(list (+ 1 %1) %2) y)\n        s1 (map last (filter #(< (first %) (+ x 1)) s))\n        s2 (map last (filter #(> (first %) x) s))]\n    (conj [] s1 s2)))", "problem": 49, "user": "5022292ee4b0846bc458ae46"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "51f04e89e4b0274c496158cd"}, {"code": "(fn [x xs]\n   (partition-by #(>= (.indexOf xs %) x) xs))", "problem": 49, "user": "50aedb8ce4b0a40c9cfb08d4"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "51fa7154e4b0f1313d4689da"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "50cf21dee4b0e61f11ddcd8b"}, {"code": "#(vector (take %1 %2)\n   (drop %1 %2))", "problem": 49, "user": "51ca9af6e4b08b1cbd0d948a"}, {"code": "(fn [x y]\n  (vector (take x y) (drop x y)))", "problem": 49, "user": "51f82769e4b09be9c177e527"}, {"code": "(fn splitter [n s] [(take n s) (drop n s)])", "problem": 49, "user": "4f017b4e535dcb61093f6a37"}, {"code": "(fn [size s]\n  [(take size s) (drop size s)])", "problem": 49, "user": "4fa3c137e4b081705acca193"}, {"code": "#(conj [] (take % %2) (drop % %2))", "problem": 49, "user": "51fa1375e4b0f1313d4689c9"}, {"code": "(juxt take drop)", "problem": 49, "user": "4dddff47535d08e6dec9fdd4"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4f93539de4b0dcca54ed6cba"}, {"code": "#(vec [(take % %2)(drop % %2)])", "problem": 49, "user": "51a584c7e4b051b01d55f44e"}, {"code": "(fn [n xs]\n   (let [x (take n xs)]\n     (conj \n       (empty list) \n       (remove (set x) xs) x)\n     ))", "problem": 49, "user": "51227a00e4b068a9582e656b"}, {"code": "(juxt take drop)", "problem": 49, "user": "5201572be4b0d7096e99ddbb"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "51f40975e4b0fca5e8b4822e"}, {"code": "(fn [n col]\n  (vector (take n col) (drop n col)))", "problem": 49, "user": "51891c96e4b04c2714a2670e"}, {"code": "(fn [n s]\n  (list\n    (take n s)\n    (drop n s)))", "problem": 49, "user": "51db0d99e4b06aa4d4669a9d"}, {"code": "(fn [n x] [(take n x) (drop n x)])", "problem": 49, "user": "51f9b1d0e4b09be9c177e550"}, {"code": "(juxt take drop)", "problem": 49, "user": "50c781bbe4b00bb60fe0c535"}, {"code": "(fn [a b] (conj (->>(vec (take a b)) (conj [])) (vec (take-last (- (count b) a) b))))", "problem": 49, "user": "516ab8c2e4b081287f204e9e"}, {"code": "(fn [n xs] [(take n xs) (drop n xs)])", "problem": 49, "user": "50366589e4b0fbe0a74d26c3"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "5201d2f3e4b0b2e020a18f22"}, {"code": "#(vector (take %1 %2) (subvec %2 %1))", "problem": 49, "user": "51944aaae4b0142f60b4aedc"}, {"code": "(fn [i s]\n(conj [] (take i s) (nthrest s i)))", "problem": 49, "user": "5202cfe7e4b030ee0c5b2702"}, {"code": "(fn [n s]\n  (vector (take n s) (drop n s)))", "problem": 49, "user": "52039e12e4b0fb7e47ea51ff"}, {"code": "#(conj [] (take %1 %2) (drop %1 %2))", "problem": 49, "user": "51dd9370e4b0c33a4e1da40c"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "52069fade4b0bf4f1882c82c"}, {"code": "(juxt take drop)", "problem": 49, "user": "51f55bdae4b0abb92f97f9d0"}, {"code": "#(vec [(take % %2) (drop % %2)])", "problem": 49, "user": "52016fd3e4b0b2e020a18f10"}, {"code": "(fn [s xs] (list (take s xs) (drop s xs)))", "problem": 49, "user": "50dfc83fe4b061dbdced7229"}, {"code": "(fn [n s] [(take n s) (drop n s)])", "problem": 49, "user": "5201ff99e4b0b2e020a18f26"}, {"code": "#(let [xs (partition-all %1 %2)]\n\t(list (first xs) (apply concat (rest xs))))", "problem": 49, "user": "52015698e4b0d7096e99ddba"}, {"code": "(fn f [n l]\n  (let\n   [f_ (fn f_ [n l c frst]\n         (cond\n          (= 0 c) (cons (reverse frst) (vector l))\n          true (f_ n (rest l) (- c 1) (cons (first l) frst))))]\n    (f_ n l n nil)))", "problem": 49, "user": "52091d57e4b0e152394d76f0"}, {"code": "(juxt take drop)", "problem": 49, "user": "4f4ff836e4b03ad3f0c10cf4"}, {"code": "#(vector (vec (take % %2)) (vec (drop % %2)))", "problem": 49, "user": "51f66e0ee4b06ff1c25c52c3"}, {"code": "#(conj [(take % %2)] (drop % %2))", "problem": 49, "user": "5203bc27e4b0fb7e47ea5204"}, {"code": "(fn split [index s]\n  (vector (take index s) (drop index s)))", "problem": 49, "user": "4e0d5a5a535d04ed9115e7b5"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "514c2d05e4b02b8cbb2a9278"}, {"code": "#(conj [] (take % %2) (nthrest %2 %))", "problem": 49, "user": "52029e5de4b030ee0c5b26fc"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "51db1abae4b094966a2cd685"}, {"code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "520612a7e4b0bf4f1882c81c"}, {"code": "(fn [x y] [(take x y) (drop x y)])", "problem": 49, "user": "52016690e4b0b2e020a18f0f"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "52084f75e4b01ce6bbf31dde"}, {"code": "#(vector (vec (take % %2)) (vec (nthrest %2 %)) )", "problem": 49, "user": "5208a3a2e4b0301979a6c235"}, {"code": "(fn [n coll] (vector (take n coll) (drop n coll)))", "problem": 49, "user": "515ebde3e4b01e5d11ccd0a8"}, {"code": "(fn [n coll]\n    [(take n coll) (drop n coll)])", "problem": 49, "user": "51ec9114e4b069f463c22ccd"}, {"code": "(fn split [pos seq] [(take pos seq ) (drop pos seq)])", "problem": 49, "user": "51faf9ece4b0f1313d4689f7"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "520e32a2e4b066f3ea161c93"}, {"code": "(juxt take drop)", "problem": 49, "user": "51e61772e4b0efabf93c02e2"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "5201cf92e4b0b2e020a18f21"}, {"code": "(fn [n xs]\n  [(take n xs) (drop n xs)])", "problem": 49, "user": "513fab65e4b00f13ea1bd891"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "5211d195e4b07aea8afc4f76"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "520242bae4b030ee0c5b26e3"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "5151c184e4b03e678e393add"}, {"code": "(juxt take drop)", "problem": 49, "user": "51f9527fe4b09be9c177e549"}, {"code": "(fn [at seq] \n  (let [f (take at seq)\n        ff (drop at seq)]\n    [f ff]))", "problem": 49, "user": "52173464e4b082aa80a88c75"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "5080a697e4b01a93d3f38e49"}, {"code": "(fn [x y] [(take x y) (nthnext y x)])", "problem": 49, "user": "51fc44c5e4b0f1313d468a1b"}, {"code": "(fn [n S] [(take n S)(drop n S)])", "problem": 49, "user": "52153bdde4b0961f15ac4daa"}, {"code": "(fn splitter [n xs]\n\t  (conj () (drop n xs) (take n xs)))", "problem": 49, "user": "5213ffd3e4b0961f15ac4d7d"}, {"code": "(fn [n c] [(take n c) (take-last (- (count c) n) c)])", "problem": 49, "user": "51aee76ce4b09397d5109796"}, {"code": "(fn [n s] [(take n s) (drop n s)])", "problem": 49, "user": "5131d817e4b06942423563ca"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "52160dbee4b0bf4bffd29cb3"}, {"code": "(juxt take drop)", "problem": 49, "user": "521249f5e4b06aa6d1666ba2"}, {"code": "(fn [n s] \n  [(take n s) (drop n s)])", "problem": 49, "user": "52199105e4b0c4ef0be82ff9"}, {"code": "(fn [n v]\n  (loop [a n b [] c v]\n    (if (= a 0) [b c] (recur (dec a) (conj b (first c)) (next c)))))", "problem": 49, "user": "52196842e4b0890f2f822bfa"}, {"code": "(fn [n coll] \n  (let [fx    (juxt first #(apply concat (rest %)))\n        pcoll (partition-all n coll)]\n    (fx pcoll)))", "problem": 49, "user": "51f805b0e4b06ff1c25c52e2"}, {"code": "(fn [n s] [(take n s) (drop n s)])", "problem": 49, "user": "5219e575e4b0c4ef0be82ffd"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "5213dbc3e4b0961f15ac4d74"}, {"code": ";;vec takes a collection and turns the contents into a vector\n;;vector takes takes arguments and puts them into a new vector\n(fn split-dat [n collection] (vector \n            (vec (take n collection)) \n            (vec (subvec collection n))))", "problem": 49, "user": "50e1bdd8e4b019fc399ce17f"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "521c6a1ae4b0c4ef0be83083"}, {"code": "#(conj [] (take %1 %2) (drop %1 %2))", "problem": 49, "user": "52117ea7e4b07aea8afc4f70"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "521679e9e4b0bf4bffd29cca"}, {"code": "(fn [n x] (conj [(vec (take n x))] (vec (nthrest x n))))", "problem": 49, "user": "5174ade2e4b07031762f2edf"}, {"code": "#(list (take %1 %2) (nthrest %2 %1))", "problem": 49, "user": "520cb8c4e4b0b022ef140c9a"}, {"code": "(fn s [n l] \n            \n  (concat (list (take n l)) (list (drop n l)))             \n            )", "problem": 49, "user": "5210e5c5e4b080a8d9b9d63f"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "51dc5033e4b09c47a74ce109"}, {"code": "(fn [n s]\n  [(take n s) (drop n s)])", "problem": 49, "user": "521b9f92e4b0c4ef0be8304c"}, {"code": "(fn [n s](vector (take n s) (nthrest s n)))", "problem": 49, "user": "519c4111e4b0a1d87b003458"}, {"code": "#(vector (take %1 %2) (take-last (- (count %2) %1) %2))", "problem": 49, "user": "521e8227e4b0dd19981ad082"}, {"code": "(fn [n sqnc] (list (take n sqnc) (drop n sqnc)))", "problem": 49, "user": "5213348ae4b0d32679a50652"}, {"code": "#(into [] [(take % %2) (drop % %2)])", "problem": 49, "user": "510ee996e4b07438aa321462"}, {"code": "(fn [n xs]\n  (vector (take n xs) (drop n xs)))", "problem": 49, "user": "521e4f22e4b0dd19981ad079"}, {"code": "(fn [x coll]\n  [(take x coll) (drop x coll)])", "problem": 49, "user": "50c113bee4b096f585049c37"}, {"code": "(fn [n s]\n   (let [x (partition-all n s)]\n     (cons (first x)\n           (list (apply concat (rest x))))))", "problem": 49, "user": "5220bc0fe4b0e6a83c8925a7"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "5216933be4b000d124d989cf"}, {"code": "#(vector\n       (vec (take %1 %2)) \n       (vec (drop %1 %2)))", "problem": 49, "user": "521dceeae4b050d5da042802"}, {"code": "(fn [sp i-seq]\n   ((fn [left-seq right-seq]\n      (if (= (count left-seq) sp)\n        [left-seq  right-seq]\n        (recur (conj left-seq (first right-seq)) (rest right-seq))\n        )\n      ) [] i-seq)\n   )", "problem": 49, "user": "52213426e4b0e6a83c8925c4"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "520693e1e4b0bf4f1882c829"}, {"code": "#(vector \n       (vec (take %1 %2)) \n       (vec (drop %1 %2)))", "problem": 49, "user": "51e6a311e4b0ab43cc26c21e"}, {"code": "#(vector (vec (take %1 %2)) (vec(take-last (- (count %2) %1) %2)))", "problem": 49, "user": "51f79238e4b06ff1c25c52d7"}, {"code": "(fn [n coll]\n  [(take n coll), (drop n coll)])", "problem": 49, "user": "5224a46ce4b01819a2de42e5"}, {"code": "(fn split-seq [n s]\n  (concat (list (take n s)) (list (drop n s))))", "problem": 49, "user": "521b339fe4b0c4ef0be83031"}, {"code": "(fn spritz [num-elem s]\n  (list (take num-elem s) (drop num-elem s)))", "problem": 49, "user": "522048b3e4b0e6c71e0c0c16"}, {"code": "(fn foo [n coll]\n  (let [start (take n coll)\n        rest (drop n coll)]\n    [start rest]))", "problem": 49, "user": "5220a770e4b0e6a83c8925a3"}, {"code": "(fn split [n xs]\n  [(take n xs) (drop n xs)])", "problem": 49, "user": "4fb710f4e4b081705acca2cd"}, {"code": "(fn [n x] [(take n x) (drop n x)])", "problem": 49, "user": "52244a77e4b01819a2de42d1"}, {"code": "(fn [m l]\n  ((fn [n [x z]]\n     (if (or (empty? z) (= n (count x))) (list x z)\n         (recur n [(conj  x (first z)) (subvec z 1)]))) m [[] l]))", "problem": 49, "user": "51b74a33e4b0d906fcd71d34"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "51508905e4b098b221effc2d"}, {"code": "(juxt take drop)", "problem": 49, "user": "51ef31dfe4b0871fa145d9a0"}, {"code": "(fn [amount s]\n  (conj (list (drop amount s)) (take amount s)))", "problem": 49, "user": "5225a0f5e4b01819a2de430e"}, {"code": "(fn [n x] [(take n x) (drop n x)])", "problem": 49, "user": "4daec4a0edd6309eace4d15e"}, {"code": "(fn __ [I L] \n  [(vec (take I L))\n   (subvec L I)])", "problem": 49, "user": "50293245e4b08353e5d459cf"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "52253004e4b01819a2de42fa"}, {"code": "(juxt take drop)", "problem": 49, "user": "522454f4e4b01819a2de42d3"}, {"code": "(fn [index array] \n  [(take index array) (drop index array)])", "problem": 49, "user": "520f46f9e4b0101e4be6fcee"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "522b922ee4b0d34ee08e71c3"}, {"code": "(fn [n x] [(vec (take n x)) \n           (vec (drop n x))])", "problem": 49, "user": "522600cfe4b0f4c7e20d29c8"}, {"code": "(fn [n s] (conj (list (drop n s)) (take n s)))", "problem": 49, "user": "52277ab9e4b0186687e23a4f"}, {"code": "(fn [n coll]\n  (list (take n coll) (drop n coll)))", "problem": 49, "user": "52127ee4e4b0d32679a5063c"}, {"code": "#(conj [] (take % %2) (drop % %2))", "problem": 49, "user": "522eb5cce4b01cdb292c5f0c"}, {"code": "(fn [spl xs] (list (seq (subvec xs 0 spl)) (seq (subvec xs spl))))", "problem": 49, "user": "52161db6e4b0bf4bffd29cb8"}, {"code": "#(cons (take % %2) (list (drop % %2)))", "problem": 49, "user": "51a91ac2e4b08d8ec191b822"}, {"code": "(fn [n s]\n  (cons (take n s) (list (drop n s))))", "problem": 49, "user": "51857e64e4b0da5a5be3babe"}, {"code": "(fn [x coll] (list (take x coll) (nthrest coll x)))", "problem": 49, "user": "5230d9bde4b0035e815da397"}, {"code": "(fn\n  [n v]\n  [(take n v) (drop n v)])", "problem": 49, "user": "510591dde4b06d28cacc92eb"}, {"code": "(fn test1 [s v] [(reduce conj [] (take s v)) (reduce conj [] (nthnext v s))])", "problem": 49, "user": "5125029de4b0ce9225d2ed3e"}, {"code": "(fn [n seq]\n  [(take n seq) (drop n seq)])", "problem": 49, "user": "51fe9d7ce4b0f1313d468a70"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "514fd753e4b0b449e54b8e00"}, {"code": "(fn [x y] (vector (take x y) (take-last (- (count y) x) y) ) )", "problem": 49, "user": "51e28063e4b08e53a149f0f2"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "5191ac45e4b0d428d29dc1b6"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "51cc5f20e4b02254fc794870"}, {"code": "(fn [n sequ]\n  (conj [] (take n sequ) (drop n sequ)))", "problem": 49, "user": "51f297a3e4b0210f90e74552"}, {"code": "(fn spl-at [n coll]\n  [(take n coll) (drop n coll)]\n  )", "problem": 49, "user": "5228f870e4b0186687e23a98"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "516abecae4b081287f204e9f"}, {"code": "(fn x [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "5167e4a2e4b0c5a4140a3099"}, {"code": "(fn hoge [n coll]\n\t(nth (iterate (fn [[head tail]]\n\t\t\t  [(conj head (first tail))\n\t\t\t   (rest tail)])\n\t\t      [[] coll])\n\t     n))", "problem": 49, "user": "52381b2ae4b0fae3832e99ef"}, {"code": "(fn [x coll] [(take x coll) (drop x coll)])", "problem": 49, "user": "5231d8fae4b0e2e8de81d1fb"}, {"code": "(fn [n col] [(take n col) (drop n col)])", "problem": 49, "user": "5233ad08e4b07e3ee2be83ac"}, {"code": "(fn mysplit-at                                                      \n  [at coll]                                                           \n  (loop [items coll c 0 acc '()]                                      \n    (if (= c at)                                                      \n      (concat (list (reverse acc) items))                             \n      (recur (rest items) (inc c) (conj acc (first items)))           \n      ))                                                              \n  )", "problem": 49, "user": "50573ed8e4b0012181721987"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "52394c03e4b0d705d026ef09"}, {"code": "(fn [i s] (vector (subvec s 0 i) (subvec s i)))", "problem": 49, "user": "5235a902e4b0a643f2dcb750"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "523b10dfe4b02f719975bdb8"}, {"code": "(fn [p v] [(subvec v 0 p) (subvec v p)])", "problem": 49, "user": "508fd6bae4b0ea685a20f76b"}, {"code": "(juxt take drop)", "problem": 49, "user": "508923d5e4b06d8254e936e8"}, {"code": "(fn[x y] [(take x y) (drop x y)])", "problem": 49, "user": "506c0a02e4b0eda3100c090d"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "5213d81de4b0961f15ac4d73"}, {"code": "#(conj [] (take %1 %2) (drop %1 %2))", "problem": 49, "user": "523b4e91e4b07becd5be21ef"}, {"code": "(fn [n coll] (conj [] (take n coll) (drop n coll)))", "problem": 49, "user": "523b82efe4b07becd5be21f0"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "523d02b0e4b0dbf0c3017289"}, {"code": "(fn[pos l] [(take pos l) (drop pos l)])", "problem": 49, "user": "52271ffee4b04e78ff2e19a9"}, {"code": "(fn [n x]\n  (loop [s x i n front [] end []]\n    (if (empty? s) (vector front end)\n      (if (= i 0)\n        (recur (rest s) i front (conj end (first s)))\n        (recur (rest s) (dec i) (conj front (first s)) end)))))", "problem": 49, "user": "523bc0e6e4b07becd5be21f9"}, {"code": "(fn [n l] [(take n l) (drop n l)])", "problem": 49, "user": "523f0bbfe4b01c266ffa7f91"}, {"code": "(fn [n coll] [(vec (take n coll)) (vec (drop n coll))] )", "problem": 49, "user": "5229211be4b04c906c9c6a63"}, {"code": "(fn [n sq]\n  (let [dst (empty sq)]\n    (conj dst (vec (take n sq)) (vec (drop n sq)))))", "problem": 49, "user": "523bd9c0e4b07becd5be2201"}, {"code": "#(list (take % %2) (nthrest %2 %))", "problem": 49, "user": "523b1988e4b02f719975bdbc"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "4f43894ee4b0d7d3c9f3fd21"}, {"code": "(fn f \n  [t xs]\n  [(subvec xs 0 t) (subvec xs t)])", "problem": 49, "user": "50aa60bee4b056ee01935865"}, {"code": "(fn not-split-at [pos coll] [(take pos coll) (drop pos coll)])", "problem": 49, "user": "52319066e4b0e2e8de81d1e9"}, {"code": "(fn spl [n sequ] (cons (vec (take n sequ)) (vector (drop n sequ))))", "problem": 49, "user": "5239caa6e4b0d705d026ef27"}, {"code": "#(map (partial apply vector) [(take % %2) (drop % %2)])", "problem": 49, "user": "4fec550de4b0681fd128dca6"}, {"code": "(fn [k l]\n  [(vec (take k l)) (vec (drop k l))]\n)", "problem": 49, "user": "51f09f3de4b0274c496158d7"}, {"code": "(fn [s xs] (list (take s xs) (drop s xs)))", "problem": 49, "user": "524025bce4b0ad64fa01030f"}, {"code": "(fn [n seq]\n    [(take n seq) (drop n seq)])", "problem": 49, "user": "511e763ce4b03e81d390ac29"}, {"code": "(fn [i s]\n  [(take i s) (drop i s)])", "problem": 49, "user": "5201ada5e4b0b2e020a18f14"}, {"code": "#(conj [] (take %1 %2) (drop %1 %2))", "problem": 49, "user": "52379c46e4b0fae3832e99db"}, {"code": "(juxt take drop)", "problem": 49, "user": "52393e16e4b0d705d026ef06"}, {"code": "#(conj (conj [] (vec (take %1 %2))) (vec (drop %1 %2)))", "problem": 49, "user": "5220909fe4b0e6a83c89259f"}, {"code": "(fn [n coll] (list (take n coll) (drop n coll)))", "problem": 49, "user": "523361d8e4b0f0b72fabf405"}, {"code": "(juxt take drop)", "problem": 49, "user": "523c6451e4b07becd5be2222"}, {"code": "(fn [num coll]\n   (loop [n num prev [] c coll]\n     (if (zero? n)\n         (list prev c)\n         (recur (dec n) (conj prev (first c)) (rest c))\n     )\n   )\n)", "problem": 49, "user": "522eba30e4b01cdb292c5f0e"}, {"code": "#(let [first-chunk %1\n        seq-to-split %2]\n    (list (take first-chunk seq-to-split) (drop first-chunk seq-to-split)))", "problem": 49, "user": "523288fee4b035af41902a88"}, {"code": "(fn [x s] [(take x s) (drop x s)])", "problem": 49, "user": "523ed522e4b057c4b7cd0a78"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "5236b6bce4b05f3be1c7c8fe"}, {"code": "#(conj [] (take % %2) (drop % %2))", "problem": 49, "user": "5230793be4b0035e815da383"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "4f2d5f5de4b0d6649770a05a"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "52437703e4b076204b44fabf"}, {"code": "(fn [one, two] (conj ((comp list drop) one two) (take one two)))", "problem": 49, "user": "5243d9a2e4b076204b44fadf"}, {"code": "#(conj [] (take %1 %2) (drop %1 %2))", "problem": 49, "user": "5245fbbbe4b09dbe66b56183"}, {"code": "(fn [n c] ((juxt (partial take n)(partial drop n)) c))", "problem": 49, "user": "51cfc616e4b0e42293a22578"}, {"code": "(fn [n xs] [(take n xs) (drop n xs)])", "problem": 49, "user": "52487654e4b05ef8e38e63dc"}, {"code": "(fn [x coll] \n  \n  (reduce\n   (fn [my-vec elm]\n     (if (< (.indexOf coll elm) x) \n       [(conj (first my-vec) elm) (last my-vec)]\n       [(first my-vec) (conj (last my-vec) elm)]\n       ))\n   [[][]]\n   coll))", "problem": 49, "user": "518d1b5be4b070277754617b"}, {"code": "(fn [skip coll] [(take skip coll) (drop skip coll) ])", "problem": 49, "user": "523a9fc9e4b081681ca7adca"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "5246e945e4b0644eb7b0783b"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "51269362e4b083bb8f88cf09"}, {"code": "#(list (take %1 %2) (nth (iterate rest %2) %1))", "problem": 49, "user": "5007c7c7e4b0b17c647f5226"}, {"code": "(fn [index col]\n   (let [\n         init  (range 0 index)\n         end (range index (count col))\n         the-fn (fn [the-col-part] (into []  (map #(nth col %)  the-col-part))) \n         ]\n     [ (the-fn init) (the-fn end)] )\n   \n   )", "problem": 49, "user": "50550f43e4b0b1b9d1860eb7"}, {"code": "#(identity [(take % %2) (drop % %2)])", "problem": 49, "user": "5245af03e4b08ba239308124"}, {"code": "(fn [n seq]\n  [(take n seq) (drop n seq)])", "problem": 49, "user": "524cdd51e4b0752c4cb68ccc"}, {"code": "#(let [a (take % %2), b (drop % %2)] [a b])", "problem": 49, "user": "52485723e4b05ef8e38e63d2"}, {"code": "(fn [l s]\n  (list (take l s) (drop l s)))", "problem": 49, "user": "524be8e0e4b09eba1c0223f1"}, {"code": "(fn [x coll]\n  (loop [n x in-coll coll out-coll []]\n    (if (= n 0)\n\t    (conj [out-coll] in-coll)\n      (recur (dec n) (subvec in-coll 1) (conj out-coll (first in-coll))))))", "problem": 49, "user": "52463059e4b09dbe66b56198"}, {"code": "(fn [n lst]\n    (let [l (count lst)\n          r (- l n)]\n      [(take n lst) (take-last r lst)]))", "problem": 49, "user": "524f213be4b0541d1855b7ff"}, {"code": "#(vector \n       (vec (take %1 %2)) \n       (vec (drop %1 %2)))", "problem": 49, "user": "51618519e4b009fba0926e35"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "51b0e7b3e4b0c53cf2e68a6e"}, {"code": "(fn [n lst] [(take n lst) (drop n lst)])", "problem": 49, "user": "522d3a16e4b0e26240291d50"}, {"code": "(fn my-split [x seq] [ (take x seq) (nthrest seq x)])", "problem": 49, "user": "524eebb0e4b0541d1855b7f7"}, {"code": "(fn [n xs] [(take n xs) (take-last (- (count xs) n) xs)])", "problem": 49, "user": "524f61bee4b0541d1855b80f"}, {"code": "#(concat (list (take %1 %2)) (list (drop %1 %2)))", "problem": 49, "user": "524feb3fe4b0541d1855b81f"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "524b90fae4b09eba1c0223df"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "523b1a65e4b02f719975bdbd"}, {"code": "(fn [n coll] (list\n  (for [i (range n)] (nth coll i))\n  (for [i (range n (count coll))] (nth coll i))))", "problem": 49, "user": "524ae8e6e4b09eba1c0223b5"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "524dd1c3e4b0f245900d275c"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "52479487e4b05ef8e38e6373"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "525078b6e4b0541d1855b832"}, {"code": "#(vector \n       (vec (take %1 %2)) \n       (vec (drop %1 %2)))", "problem": 49, "user": "5224060de4b01819a2de42c3"}, {"code": "#((juxt (partial take %1) (partial drop %1)) %2)", "problem": 49, "user": "525431dfe4b0541d1855b970"}, {"code": "(fn [n coll]\n  (vector (take n coll) (drop n coll)))", "problem": 49, "user": "52527192e4b0541d1855b8af"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "524e6b68e4b0541d1855b7db"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "524469dee4b0d8acf9ed6a9d"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "5213d7aae4b0961f15ac4d72"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "52525a0ee4b0541d1855b8a2"}, {"code": "(fn splitter\n  [n l]\n  (let [length (count l)]\n    (cons (take n l) (list (take-last  (- length n) l)))))", "problem": 49, "user": "5245d29ae4b09dbe66b56174"}, {"code": "(fn [n xs] [(take n xs) (drop n xs)])", "problem": 49, "user": "524740e7e4b05ef8e38e635d"}, {"code": "(fn\n  ([index coll]\n     (loop [off 0 left [] right coll]\n         (if (= off index)\n            (vector left right)\n           (recur (inc off) (conj left (first right)) (rest right))\n         )\n     )\n  )\n)", "problem": 49, "user": "51d28e15e4b0d13b04db0d9b"}, {"code": "(fn [n x] (list (take n x) (drop n x)))", "problem": 49, "user": "5217c26fe4b0a4bccb16cab8"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "4e3a9dae535deb9a81d77f4a"}, {"code": "(fn [n x]\n  (cons (take n x) (list (drop n x)))\n  )", "problem": 49, "user": "52586d24e4b0cb4875a45cb0"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "5250a13ee4b0541d1855b839"}, {"code": "(fn [n to-split] \n  [(take n to-split)(drop n to-split)] \n  )", "problem": 49, "user": "4ff8aa3fe4b0678c553fc39e"}, {"code": "(fn [n xs] [(take n xs) (drop n xs)])", "problem": 49, "user": "525b12b1e4b0cb4875a45d04"}, {"code": "(fn [i s]\n  (#(into[] (concat (list (first (partition i %))) (list (apply concat (rest (partition-all i %)))))) s))", "problem": 49, "user": "524ab5f2e4b09eba1c02239d"}, {"code": "#(vector (drop-last (- (count %2) %1)  %2)\n    (take-last (- (count %2 ) %1) %2) )", "problem": 49, "user": "5259a16ee4b0cb4875a45ce1"}, {"code": "(fn [n1 s1]\n  [(take n1 s1) (drop n1 s1)]\n)", "problem": 49, "user": "525ba7bbe4b0cb4875a45d28"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "5210ac52e4b080a8d9b9d63e"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "5236cd89e4b0e010857b4e45"}, {"code": "#(vector (subvec %2 0 %) (subvec %2 %))", "problem": 49, "user": "525b0b51e4b0cb4875a45d01"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "5252b59de4b0541d1855b8cf"}, {"code": "(fn [n coll] (list (take n coll) (drop n coll)))", "problem": 49, "user": "5244fa73e4b0d8acf9ed6acb"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "509a25b7e4b0efbae1fbc0a8"}, {"code": "(fn\n  [n coll]\n  (list (take n coll) (drop n coll)))", "problem": 49, "user": "525fffb8e4b03e8d9a4a702b"}, {"code": "(fn [n s] (list (take n s) (drop n s)))", "problem": 49, "user": "525f51bde4b0cb4875a45dc8"}, {"code": "(fn [n c] [\n    (vec((fn ennen [n1 c1] (if (empty? c1)\n                       []\n\t\t       (if (= n1 n)\n\t\t           [(first c1)]\n\t\t\t   (concat [(first c1)] (ennen (inc n1) (rest c1)))\n\t\t       )\n                    ) \n    ) 1 c))\n    (vec((fn jalkeen [n1 c1] (if (empty? c1)\n                       []\n\t\t       (if (= n1 n)\n\t\t           (rest c1)\n\t\t\t   (jalkeen (inc n1) (rest c1))\n\t\t       )\n                    )\n    ) 1 c))\n])", "problem": 49, "user": "52474ec2e4b05ef8e38e6361"}, {"code": "(fn split-seq\n\t[n coll]\n\t[(subvec (into [] (seq coll)) 0 n) (subvec (into [] (seq coll)) n)])", "problem": 49, "user": "50fc48dde4b0d10d794c19f6"}, {"code": "(fn [n xs] (vector (take n xs) (drop n xs)))", "problem": 49, "user": "52618ea3e4b03e8d9a4a7064"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "523eb110e4b057c4b7cd0a67"}, {"code": "(fn [n coll]\n  ((fn [c1 c2 n coll]\n     (if (= n 0)\n       [c1 c2]\n       (recur (conj c1 (first coll)) (rest coll) (dec n) (rest coll))))\n   [] [] n coll))", "problem": 49, "user": "521392bce4b0d32679a5065e"}, {"code": "(fn [a b]\n  [(vec (take a b)) (vec (drop a b))])", "problem": 49, "user": "51622fb8e4b009fba0926e3f"}, {"code": "#(vector (take %1 %2) (nthrest %2 %1))", "problem": 49, "user": "4f944f60e4b0dcca54ed6cc2"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "521d2564e4b01d5d410d8da8"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "525cc137e4b0cb4875a45d46"}, {"code": "(fn [n l]\n  [(take n l) (nthrest l n)]\n  )", "problem": 49, "user": "5252cbe7e4b0541d1855b8d2"}, {"code": "(juxt take drop)", "problem": 49, "user": "525ed5f4e4b0cb4875a45db8"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "525d5302e4b0cb4875a45d73"}, {"code": "(fn [n coll]\n   [(take n coll) (nthrest coll n)])", "problem": 49, "user": "52090567e4b0e152394d76ed"}, {"code": "(fn [i lst] (list (take i lst) (drop i lst)))", "problem": 49, "user": "52655949e4b03e8d9a4a710b"}, {"code": "(fn\n  [num lst]\n  [(take num lst) (drop num lst)])", "problem": 49, "user": "4ef7a483535dced4c769f258"}, {"code": "(fn [n seq] (list (take n seq) (nthrest seq n)))", "problem": 49, "user": "4f80db02e4b033992c121bf9"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "51f2851fe4b0210f90e7454b"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "524c7fcfe4b0752c4cb68cbd"}, {"code": "(fn split [pos xs] \n  (cons (take pos xs) [(drop pos xs)]))", "problem": 49, "user": "52452225e4b0d8acf9ed6ae6"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "5268f5b4e4b03e8d9a4a71cf"}, {"code": "(fn split [by col] \n  (list (take by col) (drop by col)))", "problem": 49, "user": "525aa499e4b0cb4875a45cf7"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "51dc1202e4b09c47a74ce107"}, {"code": "(fn [split-index array]\n  (partition-by (fn [item]\n                  (< split-index \n                     (inc (.indexOf array item)))) \n                array))", "problem": 49, "user": "525a643be4b0cb4875a45cf1"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "52112be7e4b07aea8afc4f68"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "5268eb68e4b03e8d9a4a71c6"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "52667ecfe4b03e8d9a4a713e"}, {"code": "(fn [n c] [(take n c) (drop n c)])", "problem": 49, "user": "5261aebbe4b03e8d9a4a7066"}, {"code": "(fn [n xs]\n    (list (take n xs) (take-last (- (count xs) n) xs)))", "problem": 49, "user": "526302eee4b03e8d9a4a70a2"}, {"code": "#(into [] [(vec (take % %2)) (vec (drop % %2))])", "problem": 49, "user": "525a8875e4b0cb4875a45cf6"}, {"code": "(fn [i l] (let [a (take i l) b (drop i l)] [a b]))", "problem": 49, "user": "52593207e4b0cb4875a45cd3"}, {"code": "#(vector (take % %2) (nthnext %2 %))", "problem": 49, "user": "526c2340e4b03e8d9a4a7281"}, {"code": "(fn [pos coll]\n  (loop [p 0\n        c coll\n        c2 []]\n    (if (= p pos)\n      [c2 c]\n      (recur (inc p) (rest c) (conj c2 (first c))))))", "problem": 49, "user": "5116e176e4b0063b4e3e16d7"}, {"code": "(let [splitter \n      (fn [leftover accum current split] \n        (if (= current split)\n          [accum leftover]\n          (recur (rest leftover) (conj accum (first leftover)) (inc current) split)\n        )\n      )\n     ]\n  (fn [n coll] (splitter coll [] 0 n))\n)", "problem": 49, "user": "526dd90de4b03e8d9a4a72fe"}, {"code": "(fn [n s]\n  [(take n s) (drop n s)])", "problem": 49, "user": "526439a4e4b03e8d9a4a70cc"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "51ca82e9e4b08b1cbd0d9488"}, {"code": "#(cons (take %1 %2) (cons (drop %1 %2) '()))", "problem": 49, "user": "5244cf39e4b0d8acf9ed6ac5"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "526e5be8e4b03e8d9a4a731c"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "5267d9bde4b03e8d9a4a7188"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "5012da69e4b0c8732600222d"}, {"code": "(fn mySplit-at [n col]\n  [(take n col) (drop n col)])", "problem": 49, "user": "526ee63de4b03e8d9a4a733f"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "509e62a8e4b08df8156e9e2e"}, {"code": "(fn [n s] [(take n s) (take-last (- (count s) n) s)])", "problem": 49, "user": "5260341ee4b03e8d9a4a7034"}, {"code": "#(conj [] (vec (take %1 %2)) (vec (drop %1 %2)))", "problem": 49, "user": "512318b6e4b03b44edbed433"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "5272669de4b03e8d9a4a742e"}, {"code": "(fn my-split-at [n coll]\n  (list (take n coll) (drop n coll)))", "problem": 49, "user": "5264301fe4b03e8d9a4a70ca"}, {"code": "(fn [n s]\n  [(take n s) (drop n s)])", "problem": 49, "user": "526f9715e4b03e8d9a4a7372"}, {"code": "(fn [n coll]\n    [(take n coll) (drop n coll)])", "problem": 49, "user": "5272d4b7e4b03e8d9a4a7453"}, {"code": "(fn splt-by\n  ([n vc] (splt-by (dec n) (rest vc) (vector (first vc))))\n  ([n vc acc]\n    (if (= n 0)\n      (vector acc (vec vc))\n      (splt-by (dec n) (rest vc) (conj acc (first vc)))))\n)", "problem": 49, "user": "52727d52e4b03e8d9a4a7439"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "5261f169e4b03e8d9a4a7072"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "5269c150e4b03e8d9a4a71f8"}, {"code": "(fn fx[n xs] \n      [(take n xs) (drop n xs)] )", "problem": 49, "user": "5271b940e4b03e8d9a4a73fb"}, {"code": "#( vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "52628bb0e4b03e8d9a4a7089"}, {"code": "(fn [at s] [(take at s) (drop at s)])", "problem": 49, "user": "526d6968e4b03e8d9a4a72d9"}, {"code": "#(\n  concat [(keep-indexed (fn [i x] (if (< i %1) x)) %2)] [(drop %1 %2)]\n)", "problem": 49, "user": "527513d8e4b03e8d9a4a74bd"}, {"code": "#(list (for [i (range %1)]\n         (nth %2 i))\n       (for [i (range %1 (count %2))]\n         (nth %2 i)))", "problem": 49, "user": "52736ca1e4b03e8d9a4a747e"}, {"code": "(fn [n coll]                                                                  \n    (list (take n coll) (drop n coll)))", "problem": 49, "user": "526397f1e4b03e8d9a4a70b6"}, {"code": "(fn  [n coll]\n  (vector (vec (take n coll)) (vec (drop n coll))))", "problem": 49, "user": "523bde95e4b07becd5be2202"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "522f483ce4b032bbe342415a"}, {"code": "(fn [n c] [(take n c)(drop n c)])", "problem": 49, "user": "517c1a3be4b07ef0e56148d6"}, {"code": "(juxt take drop)", "problem": 49, "user": "5276aa0de4b03e8d9a4a74ea"}, {"code": "(fn nn [n seqn]\n  (list (first (partition-all n seqn))(mapcat identity (rest(partition-all n seqn))))\n    )", "problem": 49, "user": "5274eb56e4b03e8d9a4a74bb"}, {"code": "(fn[a seq]\n  \n    (vector\n      (take a seq)\n      (take-last (- (count seq) a) seq)\n    )\n  \n)", "problem": 49, "user": "515919fbe4b0394f658fe229"}, {"code": "(fn split-sequence [x seqs]\n  (loop[car []\n        x x\n        others seqs]\n    (if(zero? x)\n      (vector car others)\n      (recur\n        (conj car (first others))\n        (dec x)\n        (rest others)))))", "problem": 49, "user": "5273562ae4b03e8d9a4a7479"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "51f4d46ee4b0fca5e8b48243"}, {"code": "(fn a [p c] (vector (take p c) (drop p c)))", "problem": 49, "user": "527a8eb7e4b03e8d9a4a755f"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "5152bc4ee4b001f44f99bfef"}, {"code": "(fn \n  [n coll]\n  (vector (take n coll) (drop n coll)))", "problem": 49, "user": "50651de3e4b0b1b6c8b1d85f"}, {"code": "(fn [n v] [(take n v) (drop n v)])", "problem": 49, "user": "527818f7e4b03e8d9a4a7519"}, {"code": "(fn spl[x y]\n  [(vec(take x y))(vec(reverse(take (- (count y) x) (reverse y))))])", "problem": 49, "user": "4eb2f89a535d7eef30807353"}, {"code": "(fn [n l]\n    [(take n l) (drop n l)])", "problem": 49, "user": "527675cbe4b03e8d9a4a74e2"}, {"code": "(fn  [n xs] \n  (list (take n xs) (drop n xs)))", "problem": 49, "user": "527236d4e4b03e8d9a4a741f"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "527c4071e4b0757a1b17135a"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "527b856fe4b03e8d9a4a758d"}, {"code": "(fn [n lst] [(take n lst) (drop n lst)])", "problem": 49, "user": "527ccaf4e4b0757a1b17136d"}, {"code": "(fn[n s][(subvec s 0 n)(subvec s n)])", "problem": 49, "user": "526a3412e4b03e8d9a4a721e"}, {"code": "(fn [n s] (vector (into [] (take n s)) (into [] (nthrest s n))) )", "problem": 49, "user": "525c575be4b0cb4875a45d38"}, {"code": "#(split-with (partial not= (get %2 %1)) %2)", "problem": 49, "user": "52810225e4b0757a1b171418"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "50be9b4ae4b00fb48fed2ef6"}, {"code": "(fn [n col]\n  (vector\n   \t(vec (take n col))\n    (vec (drop n col))))", "problem": 49, "user": "5272ccf1e4b03e8d9a4a7450"}, {"code": "(fn [index coll] [(take index coll) (drop index coll)])", "problem": 49, "user": "527ba29de4b03e8d9a4a7594"}, {"code": "(fn [splitPoint c]\n  (loop [xs c, result [], k splitPoint]\n    (if (zero? k)\n      (vector result xs)\n      (recur (rest xs) (conj result (first xs)) (dec k)))))", "problem": 49, "user": "4dcc2435535d5973398f9290"}, {"code": "(fn [n s] [(take n s) (drop n s)])", "problem": 49, "user": "519ef784e4b087743fad2198"}, {"code": "(fn [n col] (vector (take n col) (drop n col)))", "problem": 49, "user": "4f9510b5e4b0dcca54ed6cc7"}, {"code": "(juxt #(take % %2) #(drop % %2))", "problem": 49, "user": "522a01ade4b0590a43906ced"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "51e38568e4b0c611d6113e43"}, {"code": "(fn [n x]\n  (vector (take n x) (drop n x)))", "problem": 49, "user": "52890634e4b0239c8a67ae5e"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "5137fb22e4b0a5db03d727d3"}, {"code": "(fn [n s] [(take n s) (drop n s)])", "problem": 49, "user": "4e8dd6cb535d65386fec213b"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "527dc2aee4b0757a1b17138d"}, {"code": "(fn [split x] \n  (let [len (count x) ]\n    (concat\n     (vec (list (take split x)))\n    (vec (list ( nthrest  x split)))\n    )))", "problem": 49, "user": "52737333e4b03e8d9a4a747f"}, {"code": "(fn\n  [x coll]\n  (loop [x x res [] coll coll]\n    (if (= x 0)\n      (vector res (vec coll))\n      (recur (dec x) (conj res (first coll)) (rest coll)))))", "problem": 49, "user": "5289bba9e4b0239c8a67ae69"}, {"code": "#(list (vec (take %1 %2)) (vec (drop %1 %2)))", "problem": 49, "user": "528b08efe4b0239c8a67ae8a"}, {"code": "(juxt take drop)", "problem": 49, "user": "528d1094e4b0239c8a67aebe"}, {"code": "(fn split [n x] (list (take n x) (drop n x)))", "problem": 49, "user": "528b9efee4b0239c8a67aea0"}, {"code": "(fn [n s] (conj (list (drop n s)) (take n s) ))", "problem": 49, "user": "5262c73fe4b03e8d9a4a7098"}, {"code": "(fn splitat [n coll]\n  [(take n coll)\n   (drop n coll)])", "problem": 49, "user": "4f35b2ace4b0e243712b1ec5"}, {"code": "(fn[split list][(take split list) (drop split list)])", "problem": 49, "user": "52840004e4b0239c8a67adc1"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "5277da8ee4b03e8d9a4a7514"}, {"code": "(fn [n col] [(take n col) (drop n col)])", "problem": 49, "user": "4e7e032b535db169f9c796fc"}, {"code": "#(concat (list (take % %2)) (list (nthnext %2 %)))", "problem": 49, "user": "52741177e4b03e8d9a4a749b"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "528a791ae4b0239c8a67ae77"}, {"code": "(fn [split input]\n  (list (take split input) (drop split input)))", "problem": 49, "user": "528bba38e4b0239c8a67aea9"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "5290257ae4b0239c8a67af03"}, {"code": "(juxt take drop)", "problem": 49, "user": "52753740e4b03e8d9a4a74c1"}, {"code": "(fn [x y]\n  (conj (vector (vec (take x y))) (vec (drop x y)))\n  )", "problem": 49, "user": "528ce039e4b0239c8a67aebc"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "5255bf1ee4b0541d1855b9f1"}, {"code": "(juxt take drop)", "problem": 49, "user": "528e64b7e4b0239c8a67aedd"}, {"code": "(juxt take drop)", "problem": 49, "user": "528e95efe4b0239c8a67aee2"}, {"code": "(fn splitter [ind sequen] (list (take ind sequen) (drop ind sequen)))", "problem": 49, "user": "4fbd6210e4b081705acca303"}, {"code": "(fn [n c] [(take n c) (drop n c)])", "problem": 49, "user": "52951156e4b02ebb4ef7501b"}, {"code": "(fn [n s]\n  [(take n s) (drop n s)])", "problem": 49, "user": "4f3656d1e4b0e243712b1ec9"}, {"code": "(fn [n seq] [(take n seq) (drop n seq)])", "problem": 49, "user": "5294e44de4b02ebb4ef75016"}, {"code": "(fn [n s] \n  [(take n s) (drop n s)])", "problem": 49, "user": "52950ab6e4b02ebb4ef7501a"}, {"code": "#(vector (vec (take %1 %2)) (vec(take-last (- (count %2) %1) %2)) )", "problem": 49, "user": "5296008fe4b02ebb4ef7502a"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "50928ecfe4b097f48cc38570"}, {"code": "(fn split [n coll] (conj [] (take n coll) (drop n coll)))", "problem": 49, "user": "5296aa9be4b02ebb4ef75034"}, {"code": "#(concat (vector (take % %2)) (vector (drop % %2)))", "problem": 49, "user": "5287f34ee4b0239c8a67ae43"}, {"code": "(juxt take drop)", "problem": 49, "user": "51ad244fe4b09397d510977f"}, {"code": "(fn my-split-at [n col]\n  (let [a []\n        b []]\n    (vector (vec (take n col))\n            (vec (drop n col)))))", "problem": 49, "user": "4f6e7073e4b07046d9f4efd8"}, {"code": "(fn [n xs]\n  (loop [a []\n         b []\n         x xs\n         i 0]\n    (if (empty? x)\n      [a b]\n      (if (< i n)\n        (recur (conj a (first x)) b (rest x) (inc i))\n        (recur a (conj b (first x)) (rest x) (inc i))))))", "problem": 49, "user": "50294c28e4b0b33e9bf6fdef"}, {"code": "#(vec [(take %1 %2) (drop %1 %2)])", "problem": 49, "user": "52140b53e4b0961f15ac4d7e"}, {"code": "#(let [empt (empty %2)]\n  (loop [i 1 xs %2 left empt right empt]\n    (if (nil? xs) (into empt (list left right))\n      (if (<= i %1)\n        (recur (inc i) (next xs) (conj left (first xs)) right)\n        (recur (inc i) (next xs) left (conj right (first xs)))))))", "problem": 49, "user": "52990271e4b02ebb4ef7506d"}, {"code": "(fn [x y]\n  (vector (vec (take x y)) (vec(drop x y))))", "problem": 49, "user": "5294c95fe4b02ebb4ef75013"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "529d4f4be4b04e0c58e87b79"}, {"code": "(fn [n c] [(take n c) (drop n c)])", "problem": 49, "user": "527094f0e4b03e8d9a4a73b3"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4e72187b535d5021c1a8965b"}, {"code": "#(vec (list (vec (take %1 %2)) (vec (nthnext %2 %1))))", "problem": 49, "user": "52747090e4b03e8d9a4a74a5"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "52774dd2e4b03e8d9a4a74ff"}, {"code": "(fn splt [at xs]\n  [(take at xs) (drop at xs)])", "problem": 49, "user": "50fe2420e4b03cd852b4e84a"}, {"code": "(fn [n s] [(take n s) (drop n s)])", "problem": 49, "user": "529ce629e4b04e0c58e87b6e"}, {"code": "(fn [n col] [(take n col) (drop n col)])", "problem": 49, "user": "51c214bce4b0d204dbe2ca1c"}, {"code": "(fn [cnt l] (loop [cnt cnt acc [] l l]\n              (if (= cnt 0)\n                [acc l]\n                (recur (dec cnt) (conj acc (first l)) (rest l)))))", "problem": 49, "user": "52a09e05e4b04e0c58e87bc9"}, {"code": "(fn my-split [index coll] \n  (let [one (take index coll)\n        two (drop index coll)]\n    (conj [] one two)))", "problem": 49, "user": "5209cb44e4b0e152394d7702"}, {"code": "(fn [n s] [(take n s) (drop n s)])", "problem": 49, "user": "52a1acb2e4b04e0c58e87bdb"}, {"code": "#(identity [(take % %2) (drop % %2)])", "problem": 49, "user": "4fe91fa2e4b0547ebccb2440"}, {"code": "(fn [n coll](let [c (partition-all n coll)]\n  [(first c) (apply concat (rest c))]))", "problem": 49, "user": "509fe759e4b08df8156e9e43"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "52a32876e4b04e0c58e87bfb"}, {"code": "(fn [n s]\n  (reduce (fn [x y]\n            (if (< (count (first x)) n) \n              (vector (conj (first x) y) (second x)) \n              (vector (first x) (conj (second x) y))))\n          ['[] '[]] s))", "problem": 49, "user": "5226f8e9e4b04e78ff2e199a"}, {"code": "(fn [index coll]\n  (vector (take index coll) (drop index coll)))", "problem": 49, "user": "528b01a0e4b0239c8a67ae89"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "5290ffaee4b0239c8a67af10"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "52a04f0ee4b04e0c58e87bc1"}, {"code": "(fn [n a] [(take n a) (drop n a)])", "problem": 49, "user": "528652fbe4b0239c8a67ae14"}, {"code": "#(conj [] (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4ec1619b535dfed6da9c6dab"}, {"code": "(fn [i x] [(take i x)(nthrest x i)])", "problem": 49, "user": "52a0fa82e4b04e0c58e87bd1"}, {"code": "(fn my-split-at [k s]\n  [(vec (take k s)) (vec (drop k s))]\n  )", "problem": 49, "user": "529a73bde4b02ebb4ef75096"}, {"code": ";(fn [c l] [(take c l) (drop c l)])\n\n(juxt take drop)", "problem": 49, "user": "4f77b68de4b0fbe0118ec581"}, {"code": "(juxt take drop)", "problem": 49, "user": "528e1c88e4b0239c8a67aed1"}, {"code": "(fn split-seq [pivot coll]\n  (conj [] (subvec coll 0 pivot) (subvec coll pivot)))", "problem": 49, "user": "52a6ed15e4b0c58976d9ac0a"}, {"code": "(partial \n (fn [acc n l] \n   (if (= n 0) (list (reverse acc) l) \n     (recur (conj acc (first l)) (dec n) (rest l)))) '())", "problem": 49, "user": "5273e006e4b03e8d9a4a7495"}, {"code": "(fn [n xs]\n  (list (take n xs) (drop n xs)))", "problem": 49, "user": "529e3a4fe4b04e0c58e87b92"}, {"code": "#(do [(take % %2) (drop % %2)])", "problem": 49, "user": "528a3e14e4b0239c8a67ae72"}, {"code": "#(let [x (vec %2)]\n   [(subvec x 0 %1) (subvec x %1)\n    ])", "problem": 49, "user": "5298d3f4e4b02ebb4ef75068"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "520332f7e4b030ee0c5b2714"}, {"code": "(juxt take drop)", "problem": 49, "user": "51929214e4b08962174cf74c"}, {"code": "#(loop [ counter 0 part1 [] part2 %2 ]\n  (if(= counter %1)\n    (vec (list part1 part2))\n    (recur (inc counter) (conj part1 (first part2) ) (vec (rest part2)) )\n  )\n )", "problem": 49, "user": "4e94addc535dbda64a6f6b21"}, {"code": "(fn[x y] [(take x y) (drop x y)])", "problem": 49, "user": "51a058dae4b0b292b01ee3f3"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "5254ef3de4b0541d1855b9b8"}, {"code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "52ab6de1e4b0c58976d9ac78"}, {"code": ";partition\n\n(fn [position vect] (vector (take position vect) (into [] (reverse (take (- (count vect) position) (into [] (reverse vect)))))))", "problem": 49, "user": "52a28e1ce4b04e0c58e87bf0"}, {"code": "(fn my-split-at [n s]\n  (vector (take n s) (nthrest s n)))", "problem": 49, "user": "4ef9b021535dced4c769f269"}, {"code": "(fn [i l] [ (vec (take i l ) ) (vec ( drop i l)) ] )", "problem": 49, "user": "52aa40bde4b0c58976d9ac60"}, {"code": "(fn [n s]\n    [(take n s) (nthrest s n)])", "problem": 49, "user": "4eb7b049535d7eef30807377"}, {"code": "(fn chris-split [n coll]\n  (let [coll1 (take n coll)\n        coll2 (nthrest coll n)\n        tovector #(into [] %)]\n    (vector (tovector coll1)\n            (tovector coll2))))", "problem": 49, "user": "5289f1f4e4b0239c8a67ae6d"}, {"code": "#(concat (list (take %1 %2))(list (drop %1 %2)))", "problem": 49, "user": "52295917e4b04c906c9c6a6f"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "51937eb3e4b04df54c098022"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "52afbc69e4b0c58976d9acc0"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "52ac41fee4b0c58976d9ac85"}, {"code": "(juxt take drop)", "problem": 49, "user": "52a5e784e4b0c58976d9abf3"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "52a55adee4b0c58976d9abe7"}, {"code": "(fn [n coll]\n  (vector (take n coll) (drop n coll)))", "problem": 49, "user": "4ee8b9c9535d93acb0a66884"}, {"code": "(fn [n col] [(take n col) (drop n col)])", "problem": 49, "user": "52a62e16e4b0c58976d9abf9"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "527c040be4b03e8d9a4a75a7"}, {"code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "529d292fe4b04e0c58e87b74"}, {"code": "(fn [x coll]\n  (vec (map #(vec %) [(take x coll) (drop x coll)]))\n  )", "problem": 49, "user": "527c036ee4b03e8d9a4a75a5"}, {"code": "#(cons (take %1 %2) (list (drop %1 %2)))", "problem": 49, "user": "52b1d41ce4b0c58976d9ace6"}, {"code": "(fn [n s] (list (take n s) (drop n s)))", "problem": 49, "user": "527ba695e4b03e8d9a4a7596"}, {"code": "#(concat (list (take %1 %2)) (list (take-last (- (count %2) %1) %2)))", "problem": 49, "user": "52aad30ce4b0c58976d9ac6d"}, {"code": "(fn my-split[ind x](vector (vec (take ind x)) (vec (drop ind x))))", "problem": 49, "user": "52a1edd6e4b04e0c58e87be4"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "5298cc88e4b02ebb4ef75065"}, {"code": "(fn [n coll] (loop [x n c coll a []] (if (zero? x) [a c] (recur (dec x) (rest c) (conj a (first c))))))", "problem": 49, "user": "52b43468e4b0c58976d9ad1b"}, {"code": "(fn [i coll]\n  (list\n   (take i coll)\n   (drop i coll)))", "problem": 49, "user": "515896f2e4b059418b97f0a8"}, {"code": "#(cons (take %1 %2) (list (drop %1 %2)))", "problem": 49, "user": "52b5edd1e4b0c58976d9ad3c"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "524f4256e4b0541d1855b808"}, {"code": "(fn [n coll]\n        [(take n coll) (drop n coll)])", "problem": 49, "user": "52a88c4de4b0c58976d9ac30"}, {"code": "(fn split[at orig] \n  (loop [at at l orig accum []] \n    (if (= at 0) [accum l] \n      (recur (dec at) (rest l) (concat accum (list (first l)) ))\n    )))", "problem": 49, "user": "52ab61f5e4b0c58976d9ac75"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "52b65f26e4b0c58976d9ad43"}, {"code": "#(concat (vector (take %1 %2)) (vector (drop %1 %2)))", "problem": 49, "user": "52a1c6cee4b04e0c58e87be1"}, {"code": "(fn spltat [n x] (conj [] (take n x) (drop n x)))", "problem": 49, "user": "52b60e94e4b0c58976d9ad3e"}, {"code": "(fn [n s] (list (take n s) (drop n s)))", "problem": 49, "user": "52b80827e4b0c58976d9ad56"}, {"code": "(fn [n c] [(take n c) (drop n c)])", "problem": 49, "user": "52b453b0e4b0c58976d9ad21"}, {"code": "(fn f [x y]\n  [(take x y) (drop x y)])", "problem": 49, "user": "52b0323ee4b0c58976d9acc6"}, {"code": "#(vector (vec (take % %2)) (vec (drop % %2)))", "problem": 49, "user": "4fa38e3fe4b081705acca190"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "527fd663e4b0757a1b1713de"}, {"code": "#(vector (vec (take % %2)) (vec (drop % %2)))", "problem": 49, "user": "51852961e4b0da5a5be3babb"}, {"code": "(fn [n xs]\n  (loop [n n xs xs acc []]\n    (if (= n 0)\n      [acc xs]\n      (recur (dec n) (rest xs) (conj acc (first xs))))))", "problem": 49, "user": "52b8af15e4b07a9af57922b5"}, {"code": "(fn [n arr] [(take n arr) (take-last (- (count arr) n) arr)])", "problem": 49, "user": "52a5d1f3e4b0c58976d9abf1"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "50ed8fd1e4b06330c1f87c3f"}, {"code": "(fn [n l] (cons (take n l) (list (drop n l))))", "problem": 49, "user": "52ba43d0e4b07a9af57922cd"}, {"code": "(fn\n  [cnt seq]\n  [(take cnt seq) (drop cnt seq)])", "problem": 49, "user": "52b94f15e4b07a9af57922ba"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "52a9154ee4b0c58976d9ac3b"}, {"code": "(juxt take drop)", "problem": 49, "user": "52b42d7ee4b0c58976d9ad19"}, {"code": "(fn [n s] [(take n s) (drop n s)])", "problem": 49, "user": "4fc3a72ae4b081705acca342"}, {"code": "(fn [x y] [(take x y) (drop x y)])", "problem": 49, "user": "52a5f1e6e4b0c58976d9abf4"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "52976262e4b02ebb4ef75041"}, {"code": "(fn [n coll] [(take n coll) (nthrest coll n)])", "problem": 49, "user": "52963cc7e4b02ebb4ef7502d"}, {"code": "(fn [n lst] [(take n lst) (drop n lst)])", "problem": 49, "user": "52aa16d1e4b0c58976d9ac5a"}, {"code": "#(identity [(take %1 %2) (take-last (- (count %2) %1) %2)])", "problem": 49, "user": "4f7683dae4b0fbe0118ec56f"}, {"code": "(fn [n s]\n  [(take n s) (drop n s)])", "problem": 49, "user": "527cd633e4b0757a1b17136f"}, {"code": "(juxt take drop)", "problem": 49, "user": "52b02329e4b0c58976d9acc5"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "52b2d16ae4b0c58976d9acf8"}, {"code": "(fn [n l] (list (take n l) (drop n l)))", "problem": 49, "user": "52bb27fee4b07a9af57922df"}, {"code": "(fn [n xs]\n  [(take n xs), (drop n xs)])", "problem": 49, "user": "52b9c62ce4b07a9af57922c3"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "52b405e1e4b0c58976d9ad15"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "526fce6fe4b03e8d9a4a7383"}, {"code": "(juxt take drop)", "problem": 49, "user": "52bdb689e4b07a9af5792306"}, {"code": "(fn [n, xs] (vector (take n xs) (drop n xs)))", "problem": 49, "user": "52baea85e4b07a9af57922d9"}, {"code": "(fn _split-at \n  ([i coll] (_split-at i coll []))\n  ([i coll coll2] \n   (if (= i 0)\n     [coll2 coll]\n     (_split-at (- i 1) (apply vector (rest coll)) (conj coll2 (first coll))))))", "problem": 49, "user": "522d0360e4b0806774ddfef7"}, {"code": "(fn [n s] [(take n s) (drop n s)])", "problem": 49, "user": "52be5d55e4b07a9af579231e"}, {"code": "(juxt take drop)", "problem": 49, "user": "52bf29fde4b07a9af579232e"}, {"code": "(fn [n s]\n\t[(take n s) (nthrest s n)]\n)", "problem": 49, "user": "52470d42e4b05ef8e38e6350"}, {"code": "#(vec [(take %1 %2) (drop %1 %2)])", "problem": 49, "user": "52bf8e35e4b07a9af579233a"}, {"code": "(fn [n c] [(take n c) (drop n c)])", "problem": 49, "user": "4ffa8affe4b0678c553fc3bd"}, {"code": "(juxt take drop)", "problem": 49, "user": "52b577c9e4b0c58976d9ad39"}, {"code": "(fn [i s] [(take i s) (reverse (take (- (count s) i) (reverse s)))])", "problem": 49, "user": "52bb81d7e4b07a9af57922e8"}, {"code": "(juxt take drop)", "problem": 49, "user": "4eda8d7c535d10e5ff6f530f"}, {"code": "(fn split-seq [n a-seq]\n    (cons (take n a-seq)\n    (list (drop n a-seq)))\n )", "problem": 49, "user": "52763696e4b03e8d9a4a74d7"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "52ba2af3e4b07a9af57922cc"}, {"code": "(fn [at coll] ((juxt (partial take at) (partial drop at)) coll))", "problem": 49, "user": "52bc6f5ee4b07a9af57922f6"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4f3a979de4b0e243712b1f10"}, {"code": "(fn s [n,l] [(take n l) (drop n l)])", "problem": 49, "user": "52b7a904e4b0c58976d9ad51"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "50772e6ae4b0fc74642bff5d"}, {"code": "(fn [n coll]\n  (loop [l [] r [] i 0]\n    (if (= i (count coll))\n      [l r]\n      (let [elt (nth coll i)]\n        (if (< i n)\n          (recur (conj l elt) r (inc i))\n          (recur l (conj r elt) (inc i)))))))", "problem": 49, "user": "523f1245e4b01c266ffa7f95"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "5167d60de4b0c5a4140a3098"}, {"code": "(juxt take drop)", "problem": 49, "user": "52bbe6e1e4b07a9af57922ef"}, {"code": "(fn [n coll]\n  (vector (take n coll) (drop n coll)))", "problem": 49, "user": "527c166de4b03e8d9a4a75b3"}, {"code": "(juxt take drop)", "problem": 49, "user": "52bdf6bde4b07a9af579230d"}, {"code": "(fn [n ls]\n  (conj (list (nthrest ls n)) (take n ls)))", "problem": 49, "user": "52aa4a67e4b0c58976d9ac62"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "52b49aebe4b0c58976d9ad2b"}, {"code": "(fn split [position coll] \n  [(take position coll) (take-last (- (count coll) position) coll)]\n)\n  \n  \n  \n;  (def factorial\n ; (fn [n]\n  ;  (loop [cnt n acc 1]\n   ;    (if (zero? cnt)\n    ;        acc\n     ;     (recur (dec cnt) (* acc cnt))))))", "problem": 49, "user": "52be0c48e4b07a9af5792311"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "52c25645e4b07a9af579237d"}, {"code": "(fn [n coll] [(take n coll)(drop n coll)])", "problem": 49, "user": "52afa8a1e4b0c58976d9acbe"}, {"code": "#(vector \n       (vec (take %1 %2)) \n       (vec (drop %1 %2)))", "problem": 49, "user": "50dcb2f4e4b02e6ac9592c91"}, {"code": "(fn [n s] [(take n s) (drop n s)])", "problem": 49, "user": "52c4af71e4b0c2d177d620e1"}, {"code": "(fn [n s] (list (take n s) (drop n s)))", "problem": 49, "user": "52c4fe42e4b0c2d177d620e9"}, {"code": "(fn [c s]\n  (cons (into [] (take c s)) (list (into [] (drop c s)))))", "problem": 49, "user": "51eab308e4b0f1f103a0d150"}, {"code": "(fn [n l] (list (take n l) (drop n l)))", "problem": 49, "user": "52c52ef2e4b0c2d177d620ef"}, {"code": "(fn split-a-sequence [n c]\n  [(subvec c 0 n) (subvec c n)])", "problem": 49, "user": "515bbcd9e4b0388ca8ca1521"}, {"code": "(fn [n, coll]\n    [(subvec coll 0 n) (subvec coll n (count coll))])", "problem": 49, "user": "52c61564e4b0c2d177d62109"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "52c69672e4b0c2d177d62110"}, {"code": "#(list (take %1 %2) (nthrest %2 %1))", "problem": 49, "user": "52ab51c4e4b0c58976d9ac73"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "52bf936ee4b07a9af579233b"}, {"code": "#(conj [] (take % %2)(drop % %2))", "problem": 49, "user": "52c6a0abe4b0c2d177d62111"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "52a23af1e4b04e0c58e87beb"}, {"code": "(fn [s xs] (list (take s xs) (drop s xs)))", "problem": 49, "user": "52c580c2e4b0c2d177d620f5"}, {"code": "(fn [n coll] [(vec (take n coll)) (vec (drop n coll))])", "problem": 49, "user": "52c00263e4b07a9af579233f"}, {"code": "(fn [s lst](list (take s lst) (drop s lst)))", "problem": 49, "user": "52c58440e4b0c2d177d620f7"}, {"code": "(fn split-n [n lst]\n    (loop [acc [[] []] cnt 0 rema lst]\n        (cond (empty? rema) acc\n            (< cnt n) (recur (assoc acc 0 (conj (acc 0) (first rema))) (inc cnt) (rest rema))\n            true (recur (assoc acc 1 (conj (acc 1) (first rema))) (inc cnt) (rest rema))))\n)", "problem": 49, "user": "52c17e42e4b07a9af5792367"}, {"code": "(fn mysplit\n        ([n xs] (mysplit n xs []))\n        ([n xs acc]\n           (if (<= n 0)\n             (conj [acc] xs)\n             (mysplit (dec n) (rest xs) (conj acc (first xs))))))", "problem": 49, "user": "52c58561e4b0c2d177d620f8"}, {"code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "523089f8e4b0035e815da388"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "52c73194e4b0c2d177d6211e"}, {"code": "(fn [n vctr] (vector (take n vctr) (drop n vctr)))", "problem": 49, "user": "52c3a0f4e4b0c2d177d620c6"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "508f97c0e4b0ea685a20f768"}, {"code": "(fn meu-split [n seq]\n  (cons \n    (map #(nth seq %) (range 0 n))\n    (list (map #(nth seq %) (range n (count seq))))))", "problem": 49, "user": "52c8758be4b0c2d177d62135"}, {"code": "(fn [x col]\n    (reduce\n     (fn [a b] (if\n                   (> x (count (first a)))\n                 [(conj (first a) b) (second a)]\n                 [(first a) (conj (second a) b)]\n                 ))\n     [[] []]\n     col))", "problem": 49, "user": "52c1bd29e4b07a9af579236a"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "52cc09c1e4b07d0d72b27356"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "4f4fac2ae4b03ad3f0c10ce5"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "52cc582ae4b07d0d72b27362"}, {"code": "(fn [n xs] [(take n xs) (drop n xs)])", "problem": 49, "user": "4f03641a535dcb61093f6a9b"}, {"code": "#((fn [[head & tail]] (list head (apply concat tail))) (partition-all %1 %2))", "problem": 49, "user": "52cc85abe4b07d0d72b27367"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "52cb6bb0e4b07d0d72b2734c"}, {"code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "52cca65be4b07d0d72b2736b"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "505345d9e4b0517ede0d0a06"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "52c5c1c8e4b0c2d177d620fc"}, {"code": "(fn [n coll] (\n  #(  list (take n coll) (drop n coll))))", "problem": 49, "user": "528e1f30e4b0239c8a67aed4"}, {"code": "(fn m [n l]\n  (vector (take n l) (drop n l)))", "problem": 49, "user": "52828298e4b0757a1b17145b"}, {"code": "(fn [i s] (vector (take i s) (drop i s)))", "problem": 49, "user": "52caeb25e4b071a8d36bd3e7"}, {"code": "#(vector \n  (vec (take %1 %2))\n  (vec (drop %1 %2)))", "problem": 49, "user": "51c22a95e4b0d204dbe2ca1e"}, {"code": "(fn [i col] \n   [(take i col) (drop i col)]\n )", "problem": 49, "user": "5094057fe4b097f48cc38593"}, {"code": "(fn [i v] [(take i v) (subvec v i)])", "problem": 49, "user": "5238ca2de4b0d705d026eef6"}, {"code": "(juxt take drop)", "problem": 49, "user": "52d0902ee4b07d0d72b273bd"}, {"code": "(juxt take drop)", "problem": 49, "user": "5271605ae4b03e8d9a4a73ed"}, {"code": "(fn[x y] [(take x y) (drop x y)])", "problem": 49, "user": "529952a4e4b02ebb4ef75081"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "52c1f404e4b07a9af5792370"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "52bbd09ee4b07a9af57922ee"}, {"code": "(fn slit-at [n seq]\n  (list (take n seq) (take-last (- (count seq) n) seq)))", "problem": 49, "user": "52cefb7ee4b07d0d72b27397"}, {"code": "(fn splitter \n  [splitAt coll]\n  (split-with #(< (.indexOf coll %1) splitAt) coll))", "problem": 49, "user": "52d39acce4b099d49816f0c7"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "52d340ebe4b099d49816f0c1"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "52ce8648e4b07d0d72b27390"}, {"code": "(fn [pos values]\n    [(take pos values) (drop pos values)])", "problem": 49, "user": "4fe89475e4b07c9f6fd12c4f"}, {"code": "#(list (take % %2) (drop % %2) )", "problem": 49, "user": "52cdb7efe4b07d0d72b2737c"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "51b41150e4b0f094dd986fac"}, {"code": "#(conj (list (drop % %2)) (take % %2))", "problem": 49, "user": "4ed45563535d10e5ff6f52c9"}, {"code": "(fn [n coll]\n  [(subvec coll 0 n) (subvec coll n)]\n  )", "problem": 49, "user": "52b2a819e4b0c58976d9acf1"}, {"code": "(fn cs [x, coll]\n  (let [partioned (partition-all x coll)] (conj [] (first partioned) (apply concat (rest partioned)))))", "problem": 49, "user": "52cf084ce4b07d0d72b27399"}, {"code": "(fn [n l] (list (take n l) (drop n l)))", "problem": 49, "user": "52c81954e4b0c2d177d6212e"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "52cdec62e4b07d0d72b27382"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "52cdec6ce4b07d0d72b27383"}, {"code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "51a97f7ae4b08d8ec191b827"}, {"code": "(fn [n xs] [(take n xs) (drop n xs)])", "problem": 49, "user": "4f8c6bf6e4b02e764a0a519b"}, {"code": "#(list (take %1 %2) (nthrest %2 %1))", "problem": 49, "user": "52d3f666e4b09f7907dd1327"}, {"code": "(fn split [n l] (list (take n l) (drop n l)))", "problem": 49, "user": "52b35a6ee4b0c58976d9ad07"}, {"code": "(fn f [n l]\n  (let [rst (map first (iterate (fn [[item iter]] [(nth l (+ iter 1)) (inc iter)]) [(nth l n) n]))]\n    (conj [(take n l)] (take (- (count l) n) rst))))", "problem": 49, "user": "52d7b0ade4b09f7907dd137c"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "52d02380e4b07d0d72b273b7"}, {"code": "(fn [i s] [(subvec s 0 i) (subvec s i)])", "problem": 49, "user": "5256627ce4b0541d1855ba1a"}, {"code": "(fn [i s] (list (take i s) (drop i s)))", "problem": 49, "user": "52d7f7efe4b09f7907dd1380"}, {"code": "#(conj [] (take %1 %2) (drop %1 %2))", "problem": 49, "user": "52d4acc8e4b09f7907dd1333"}, {"code": "(fn [x col]\n  (list (take x col) (drop x col)))", "problem": 49, "user": "52cf5450e4b07d0d72b273a4"}, {"code": "(fn [i coll]\n  (loop [pos 0 c1 [] c2 coll]\n    (if (= pos i)\n      [c1 c2]\n      (recur (inc pos) (conj c1 (first c2)) (rest c2)))))", "problem": 49, "user": "52c884a2e4b0c2d177d62136"}, {"code": ";(fn [n s]\n;  (loop [[h & t] s\n;         i n\n;         out1 []\n;         out2 []]\n;    (if (nil? h)\n;      [out1 out2]\n;      (if (= i 0)\n;       (recur t i out1 (conj out2 h))\n;       (recur t (dec i) (conj out1 h) out2)))))\n\n#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "52d469c8e4b09f7907dd1330"}, {"code": "(fn [n coll]\n  (vector (subvec coll 0 n) (subvec coll n)))", "problem": 49, "user": "52c672e2e4b0c2d177d6210e"}, {"code": "(fn  [n v]\n  [(subvec v 0 n) (subvec v n)])", "problem": 49, "user": "51f8e057e4b09be9c177e53d"}, {"code": "(fn [n xs]\n  [(vec (take n xs)) (vec (drop n xs))])", "problem": 49, "user": "52a8ca0fe4b0c58976d9ac36"}, {"code": "(fn [a b] [(take a b) (drop a b)])", "problem": 49, "user": "5079fd71e4b08327cd804a66"}, {"code": "(fn p49\n  [n coll]\n  (into []\n    [(for [i (range n)] (coll i))\n     (for [i (range n (count coll))] (coll i))]))", "problem": 49, "user": "4e7d4544535db169f9c796d0"}, {"code": "(fn [x col] (vector (take x col) (drop x col)))", "problem": 49, "user": "52dad8bde4b09f7907dd13be"}, {"code": "(fn [n xs]\n  [(take n xs) (drop n xs)])", "problem": 49, "user": "52cca96ae4b07d0d72b2736e"}, {"code": "(fn [n coll] (conj [] (take n coll) (drop n coll)))", "problem": 49, "user": "52561be5e4b0541d1855ba08"}, {"code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "521d709ae4b050d5da0427ef"}, {"code": "(juxt take drop)", "problem": 49, "user": "52d10680e4b07d0d72b273c3"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "52d66ca0e4b09f7907dd135c"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "52cc4fd6e4b07d0d72b27360"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "5224cf82e4b01819a2de42ef"}, {"code": "(juxt take drop)", "problem": 49, "user": "52d00832e4b07d0d72b273b4"}, {"code": "(fn [n vs]\n  [(vec (take n vs))\n   (vec (take-last (- (count vs) n) vs))])", "problem": 49, "user": "4e1e1576535d04ed9115e806"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "52d92f13e4b09f7907dd13a2"}, {"code": "(fn [n coll]\n  (list (take n coll) (drop n coll)))", "problem": 49, "user": "52d51535e4b09f7907dd133a"}, {"code": "(fn my-split-at [x coll]\n  (list (take x coll) (drop x coll))\n  )", "problem": 49, "user": "5204f2b1e4b0bf4f1882c7f5"}, {"code": "(fn [x y] [(take x y) (drop x y)])", "problem": 49, "user": "52e0d23ce4b09f7907dd1415"}, {"code": "(fn [n s]\n    [(take n s) (drop n s)])", "problem": 49, "user": "52a7634ae4b0c58976d9ac16"}, {"code": "(fn [x coll] [(take x coll) (drop x coll)])", "problem": 49, "user": "51e3a549e4b0c611d6113e47"}, {"code": "#(conj [] (take %1 %2) (drop %1 %2))", "problem": 49, "user": "52df232fe4b09f7907dd13fc"}, {"code": "#(concat [(take %1 %2)] [(drop %1 %2)])", "problem": 49, "user": "52c1ede2e4b07a9af579236d"}, {"code": "(fn[n c] [\n  (take n c) \n  (last \n   (take (inc n) (iterate rest c))\n  )]\n)", "problem": 49, "user": "52ca720fe4b071a8d36bd3e2"}, {"code": "#(cons (take %1 %2) (cons (drop %1 %2) '[]))", "problem": 49, "user": "52d809bde4b09f7907dd1384"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "52e48632e4b09f7907dd1450"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "52d6a9c2e4b09f7907dd1365"}, {"code": "(fn [n a]\n  [(take n a) (drop n a)])", "problem": 49, "user": "52c8a8b9e4b0c2d177d62139"}, {"code": "(fn my-split\n  [n ls]\n  [(take n ls) (drop n ls)])", "problem": 49, "user": "52dd6cc8e4b09f7907dd13e2"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "52e59ca5e4b09f7907dd1464"}, {"code": "(fn [n li]\n  (loop [c 0 f [] r li]\n    (if (= c n)\n      [f r]\n      (recur (inc c) (conj f (first r)) (rest r))\n    )\n  )\n)", "problem": 49, "user": "513caa36e4b0b86ece9f3229"}, {"code": "#(cons (take %1 %2) (list (drop %1 %2)))", "problem": 49, "user": "51f2a491e4b0210f90e74553"}, {"code": "(fn [x y]\n  [(take x y) (drop x y)]\n  \n  )", "problem": 49, "user": "517e12e3e4b0fcc7c5d37d3c"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "52e0e646e4b09f7907dd1416"}, {"code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "51ac7e9be4b09397d510976f"}, {"code": "(fn [n l] [(take n l) (drop n l)])", "problem": 49, "user": "52d83c2ce4b09f7907dd138d"}, {"code": "(fn [n xs] [(take n xs) (drop n xs)])", "problem": 49, "user": "4ef9c8f9535dced4c769f26b"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "52e4361fe4b09f7907dd144d"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "52c7f036e4b0c2d177d62126"}, {"code": "(fn splitat\n  [i coll]\n  [(take i coll)\n   (drop i coll)])", "problem": 49, "user": "512c0f84e4b03a42b6300232"}, {"code": "(fn my-split\n  [i xx]\n  (conj (empty xx) (vec (take i xx)) (vec (drop i xx))))", "problem": 49, "user": "525d490ae4b0cb4875a45d70"}, {"code": "(fn [len ls] [(take len ls) (drop len ls)])", "problem": 49, "user": "50232eeae4b0b5d8b1bd2397"}, {"code": "#(-> [(vec (take %1 %2)) (vec (drop %1 %2))])", "problem": 49, "user": "52dc2bc8e4b09f7907dd13ca"}, {"code": "(fn [n l]\n  (let [indexed (map vector\n                     (range (count l))\n                     l)                 ; '([1 a] [2 b])\n        spliti (fn [[i _]] (> n i))\n        [p1 p2] (split-with spliti indexed)\n        [p1 p2] [(map second p1) (map second p2)]]\n    [p1 p2]))", "problem": 49, "user": "52e6351ae4b09f7907dd146e"}, {"code": "(fn ([i s] (vector (take i s) (nthnext s i) )))", "problem": 49, "user": "52bf0116e4b07a9af5792328"}, {"code": "(fn [x s] (vector (vec (take x s)) (vec (drop x s))))", "problem": 49, "user": "52e75667e4b09f7907dd1485"}, {"code": "(fn [n xs]\n  (let [h (take n xs)\n        r (drop n xs)]\n    [h r]))", "problem": 49, "user": "52e276d9e4b09f7907dd1436"}, {"code": "#(conj [] (into [] (take %1 %2)) (into [] (drop %1 %2)) )", "problem": 49, "user": "51f81925e4b09be9c177e526"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "4fb99483e4b081705acca2da"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "529223cbe4b0239c8a67af26"}, {"code": "#(list (take %1 %2) (take-last (- (count %2) %1) %2))", "problem": 49, "user": "52efd3d9e4b05e3f0be25ed4"}, {"code": "(fn splits [n alist]\n (let [empty-type (empty alist)]\n   (conj empty-type\n     (into empty-type (take n alist))\n     (into empty-type (take-last (- (count alist) n) alist)) \n\t)))", "problem": 49, "user": "52d6889ae4b09f7907dd1361"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "52f07ccee4b05e3f0be25edf"}, {"code": "(fn split [n s]\n  (list (take n s) (drop n s)))", "problem": 49, "user": "52ec1dfbe4b0705949c4444b"}, {"code": "#(loop [i 0 fc [] sc %2] (if (= i %1) [fc sc] (recur (inc i) (conj fc (first sc)) (rest sc) )))", "problem": 49, "user": "52570aeae4b0541d1855ba42"}, {"code": "(juxt take drop)", "problem": 49, "user": "50c2fbebe4b00e537d00253c"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "52bdd135e4b07a9af579230a"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "5102ef6be4b00c483ae176fc"}, {"code": "#(vec [(take %1 %2) (drop %1 %2)])", "problem": 49, "user": "52e3e6a8e4b09f7907dd1448"}, {"code": "#(when-let [s (seq %2)] [(take % s) (drop % s)])", "problem": 49, "user": "50e8cac5e4b0ebbe794eb7ef"}, {"code": "(fn [n coll]\n  (vector (take n coll) (nthrest coll n)))", "problem": 49, "user": "52f528f0e4b05e3f0be25f2a"}, {"code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "529b5301e4b02ebb4ef7509f"}, {"code": "(fn [n l] (let [h (take n l)  t  (drop n l)]\n            [h t]))", "problem": 49, "user": "4df9c598535d04ed9115e77a"}, {"code": "(fn [n coll]\n   [(take n coll) (drop n coll)])", "problem": 49, "user": "51ea4e35e4b0f1f103a0d148"}, {"code": "(fn [split-after coll]\n    (cons (take split-after coll) (list (take-last (- (count coll) split-after) coll))))", "problem": 49, "user": "52d9aaa1e4b09f7907dd13ae"}, {"code": "(fn [n col] [(take n col)(drop n col)])", "problem": 49, "user": "52d00a05e4b07d0d72b273b5"}, {"code": "(fn [n l] (list (take n l) (drop n l)))", "problem": 49, "user": "50c4ff23e4b0210b849018b8"}, {"code": "(fn [split this] (concat [(take split this)] [(drop split this)]))", "problem": 49, "user": "52b152fbe4b0c58976d9acdc"}, {"code": "(fn [a b] [(take a b) (drop a b)])", "problem": 49, "user": "52d7a930e4b09f7907dd1379"}, {"code": "(fn [n v] (vector (apply vector (take n v)) (apply vector (drop n v))))", "problem": 49, "user": "52a5a8ebe4b0c58976d9abed"}, {"code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "51ab4082e4b04e3dc0c27b31"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "52d7f9a8e4b09f7907dd1381"}, {"code": "(fn [n xs] (cons (take n xs) [(drop n xs)]))", "problem": 49, "user": "52f10094e4b05e3f0be25ee8"}, {"code": "#(vector (subvec %2 0 %1) (subvec %2 %1) )", "problem": 49, "user": "52f5eefbe4b09b582c12c9cb"}, {"code": "#(let [x (vec (take % %2)) y (vec (drop % %2))] [x y])", "problem": 49, "user": "51f2b8f1e4b0210f90e74556"}, {"code": "#(vector (take %1 %2)(drop %1 %2))", "problem": 49, "user": "52f1bc81e4b05e3f0be25eef"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "525fea5ae4b03e8d9a4a7026"}, {"code": "(fn [n xs]\n  (map #(map last %) (partition-by #(< (first %) n) (map-indexed (fn [i x] [i x]) xs))))", "problem": 49, "user": "4feaa579e4b0140c20fb9c0b"}, {"code": "(fn f49 [a, b]\n  (list (take a b) (reverse (take (- (count b) a) (reverse b)))))", "problem": 49, "user": "52c08c59e4b07a9af5792351"}, {"code": "(fn sp [n c]\n  [(take n c) (drop n c)])", "problem": 49, "user": "52f8f4d1e4b047fd55836fde"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "522404d8e4b01819a2de42c0"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "52ebdc9be4b0705949c44444"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "529dfc6de4b04e0c58e87b8a"}, {"code": "(fn [x l] [(take x l) (drop x l)])", "problem": 49, "user": "52eee533e4b05e3f0be25ecb"}, {"code": "(fn [n xs]\n  [ (take n xs) (drop n xs)])", "problem": 49, "user": "504e90bae4b069badc5a33b8"}, {"code": "#(-> [(vec (take %1 %2)) (vec (drop %1 %2))])", "problem": 49, "user": "52f8b2a2e4b047fd55836fda"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "52c60945e4b0c2d177d62108"}, {"code": "(fn [pos lst]\n  [(take pos lst) (drop pos lst)])", "problem": 49, "user": "52fa4f48e4b047fd55836ff7"}, {"code": "(juxt take drop)", "problem": 49, "user": "529b44afe4b02ebb4ef7509d"}, {"code": "(juxt take drop)", "problem": 49, "user": "52e32d55e4b09f7907dd143e"}, {"code": "(juxt take drop)", "problem": 49, "user": "52fd8de1e4b047fd5583702e"}, {"code": "(fn [x coll]\n   [(take x coll) (drop x coll)])", "problem": 49, "user": "52f4fae4e4b05e3f0be25f27"}, {"code": "(juxt take drop)", "problem": 49, "user": "52d838bee4b09f7907dd138b"}, {"code": "(fn [x y] (list (first (partition x y)) (nthnext y x)))", "problem": 49, "user": "52f9ce6de4b047fd55836ff0"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "52fb903ee4b047fd5583700b"}, {"code": "(fn [n xs] (vector (take n xs) (drop n xs)))", "problem": 49, "user": "52d660eae4b09f7907dd1356"}, {"code": "(fn [n x] [(take n x) (drop n x)])", "problem": 49, "user": "52f5f8b4e4b09b582c12c9cc"}, {"code": "(fn ! [x y] (concat [(take x y)] [(drop x y)]))", "problem": 49, "user": "52faec2ee4b047fd55837004"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "52fcfeeee4b047fd55837027"}, {"code": "(fn [n x] \n  (vector (vec (take n x)) \n          (vec(map second (filter #(<= n (first %))(map-indexed vector x ))))))", "problem": 49, "user": "5300aa1de4b0d8b024fd3710"}, {"code": "(fn my-split\n  [x in]\n  (vector (subvec in 0 x) (subvec in x (count in))))", "problem": 49, "user": "5300b750e4b0d8b024fd3711"}, {"code": "(fn [p s] [(take p s) (drop p s)])", "problem": 49, "user": "5300f68de4b0d8b024fd3714"}, {"code": "(fn [n c]\n  ( vector (take n c) (drop n c) )\n )", "problem": 49, "user": "52da20c7e4b09f7907dd13b3"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "528a2de7e4b0239c8a67ae71"}, {"code": "(fn [indx coll]\n  [(take indx coll)\n   (drop indx coll)])", "problem": 49, "user": "52eb400ee4b0705949c4443b"}, {"code": "#(vector (apply vector (take %1 %2)) (apply vector (nthrest %2 %1)))", "problem": 49, "user": "5176afd2e4b085adf681d889"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "528f4462e4b0239c8a67aef0"}, {"code": "(fn splt [n listy]\n  (cond\n   (< (count listy) n) listy\n   :else (concat (list (take n listy)) (list (drop n listy)))))", "problem": 49, "user": "51b89503e4b050a1176cd69a"}, {"code": "(fn [n s]\n  [(take n s)\n   (drop n s)])", "problem": 49, "user": "5139ff96e4b067e25a345ec1"}, {"code": "(fn [n xs]\n  [(take n xs) (drop n xs)])", "problem": 49, "user": "5302b580e4b0d8b024fd3732"}, {"code": "#(list (take % %2) (nthnext %2 %))", "problem": 49, "user": "4faf897be4b081705acca257"}, {"code": "(fn [n s] (list (take n s) (drop n s)))", "problem": 49, "user": "5302bb37e4b0d8b024fd3734"}, {"code": "(fn [splitIndex inList]  \n\t(let [partitions (partition-all splitIndex inList)]\n\t\t(list (first partitions)  (apply concat (rest partitions)) )))", "problem": 49, "user": "52bf6946e4b07a9af5792334"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "512587ade4b05d10e3e395fb"}, {"code": "(fn [n s]\n  [(take n s) (drop n s)])", "problem": 49, "user": "4e5fb634535d8ccf87e9fe4a"}, {"code": "(fn [n l]\n  (conj\n   [(take n l)]\n   (drop n l)))", "problem": 49, "user": "52f818a6e4b047fd55836fcc"}, {"code": "(fn f\n  [x s]\n  [(take x s) (drop x s)])", "problem": 49, "user": "52f3af46e4b05e3f0be25f14"}, {"code": "(fn [n xs] [(take n xs) (drop n xs)])", "problem": 49, "user": "52fb64b7e4b047fd55837009"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "530578ede4b0d8b024fd3760"}, {"code": "(fn [x v] [(take x v) (take-last (- (count v) x) v)])", "problem": 49, "user": "5307e4ece4b02e82168697a9"}, {"code": "(fn sat [n s]\n  (list (take n s) (drop n s))\n)", "problem": 49, "user": "52ffb7f2e4b0d8b024fd370b"}, {"code": "#(vec (list (vec (take %1 %2)) (vec (nthrest %2 %1))))", "problem": 49, "user": "5301157ae4b0d8b024fd3717"}, {"code": "(fn [n lst]\n  (vector\n    (take n lst)\n    (drop n lst)))", "problem": 49, "user": "53070615e4b02e821686979e"}, {"code": "(fn[x xs](into []\n                  (list\n                    (into [] (take x xs))\n                      (into [] (drop x xs)))))", "problem": 49, "user": "5302d79ce4b0d8b024fd3736"}, {"code": "(fn[n sq] \n    (if(>= n (count sq)) \n      sq \n      [(take n sq) (drop n sq)]\n      )\n    )", "problem": 49, "user": "52e68e61e4b09f7907dd1479"}, {"code": "(fn  [n s] (cons (take n s) (list (drop n s))))", "problem": 49, "user": "5226f9b8e4b04e78ff2e199b"}, {"code": "(fn\n  [n v]\n  [(take n v) (drop n v)]\n)", "problem": 49, "user": "530c462ae4b02e82168697d9"}, {"code": "(fn [n lst] (conj [(subvec lst 0 n)] (subvec lst n)))", "problem": 49, "user": "52fe3a9de4b047fd55837039"}, {"code": "#(conj [] (take %1 %2) (nthrest %2 %1))", "problem": 49, "user": "51583ee4e4b0a069fd272c72"}, {"code": "(fn [n s]\n  (loop\n    [i 0\n     a []\n     b []\n     r s]\n    (if (= nil (first r))\n      [a b]\n      (recur\n       (+ i 1)\n       (if (< i n)\n         (conj a (first r))\n         a)\n       (if (< i n)\n         b\n         (conj b (first r)))\n       (rest r)))))", "problem": 49, "user": "530d85dee4b08068f379eca8"}, {"code": "(fn [n xs]\n  [(take n xs) (drop n xs)])", "problem": 49, "user": "4dad8a6dc9a9d6ed1399dc57"}, {"code": "(fn [n coll]\n     (list (take n coll) (take-last (- (count coll) n) coll))\n  )", "problem": 49, "user": "52430d3ce4b076204b44faa5"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "530caf86e4b02e82168697df"}, {"code": "(fn [first-len coll]\n  [(take first-len coll) (drop first-len coll)])", "problem": 49, "user": "530e9729e4b08068f379ecbc"}, {"code": "(fn [n xs] (list (take n xs) (drop n xs)))", "problem": 49, "user": "50b9d991e4b04934c218a4a9"}, {"code": "(fn my-split [size x]\n  (concat (list (drop-last (- (count x) size) x)) (list (drop size x)))\n)", "problem": 49, "user": "5303a027e4b0d8b024fd3745"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "5152f82ee4b03f948212e718"}, {"code": "(juxt take drop)", "problem": 49, "user": "4e6961f0535d8ccf87e9fe9b"}, {"code": "#(vec (list (subvec %2 0 %) (subvec %2 %)))", "problem": 49, "user": "50b79c5fe4b0cf3e51c3046c"}, {"code": "#(list (vec (take % %2)) (vec (drop % %2)))", "problem": 49, "user": "5301a13ae4b0d8b024fd371e"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "53034738e4b0d8b024fd373e"}, {"code": "(fn spl [n s]\n  (list (take n s) (drop n s)))", "problem": 49, "user": "51aefceee4b09397d5109797"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "530e5469e4b08068f379ecb7"}, {"code": "(fn my-split-at [n s]\n  (list (take n s) (drop n s)))", "problem": 49, "user": "5310e7aee4b08068f379ecdc"}, {"code": "#(vector (take %1 %2) (nthrest %2 %1))", "problem": 49, "user": "53110f32e4b08068f379ece4"}, {"code": "(fn split-seq [x y]\n      (list (take x y)\n            (drop x y)))", "problem": 49, "user": "52e17e66e4b09f7907dd1423"}, {"code": "(fn x [n v] [(take n v) (drop n v)])", "problem": 49, "user": "4dbecb06535d020aff1edf6a"}, {"code": "(fn [i coll]\n  (let [ra (take i coll)\n        rb (drop i coll)]\n    [ra rb]\n  )\n)", "problem": 49, "user": "53153466e4b08068f379ed23"}, {"code": "(fn [n xs] [(take n xs) (drop n xs)])", "problem": 49, "user": "52f89125e4b047fd55836fd4"}, {"code": "(fn [n coll]\n  (cons\n    (take n coll)\n    (list (drop n coll))\n    \n  )\n  )", "problem": 49, "user": "531843c1e4b08068f379ed6c"}, {"code": "(fn [x v]\n  (loop [c 0 col v r [[] []]]\n    (if-not (seq col)\n      r\n      (let [[a b] r i (first col)]\n        (recur (inc c) (rest col)\n               (if (< c x)\n                 [(conj a i) b]\n                 [a (conj b i)]))))))", "problem": 49, "user": "531488f3e4b08068f379ed16"}, {"code": "#(vector (take %1 %2)(drop %1 %2))", "problem": 49, "user": "52bc6cb2e4b07a9af57922f5"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "507330e6e4b0e3170b5a8698"}, {"code": "#((juxt take drop) %1 %2)", "problem": 49, "user": "5300158ae4b0d8b024fd370f"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "530cb5b8e4b02e82168697e0"}, {"code": "#(list (take %1 %2)\n       (take-last (- (count %2) %1) %2))", "problem": 49, "user": "53134005e4b08068f379ed07"}, {"code": "(fn [n xs] [(take n xs) (drop n xs)])", "problem": 49, "user": "5315a4f0e4b08068f379ed2e"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "52265e41e4b04e78ff2e1981"}, {"code": "#(conj [(take % %2)] (drop % %2))", "problem": 49, "user": "52be0263e4b07a9af579230e"}, {"code": "#(concat (list (take % %2)) (list (drop (mod % (count %2)) %2)))", "problem": 49, "user": "531576b4e4b08068f379ed29"}, {"code": "(fn [num items]\n    [(take num items) (take-last (- (count items) num) items)])", "problem": 49, "user": "52af7a5ce4b0c58976d9acbd"}, {"code": "(fn [idx coll]\n  [(for [i (range idx)] (coll i)) (for [i (range idx (count coll))] (coll i))])", "problem": 49, "user": "511688d5e4b0b3e208dba05a"}, {"code": "#(loop [index 0\n        l %2\n        walked []]\n   (if (= index %1)\n     [walked l]\n     (recur (inc index) (rest l) (conj walked (first l)))))", "problem": 49, "user": "531c7f0de4b08068f379eda4"}, {"code": "(fn [pos seq_] (list (take pos seq_) (drop pos seq_)))", "problem": 49, "user": "4f320253e4b0d6649770a08d"}, {"code": "#(conj [] (take %1 %2) (drop %1 %2))", "problem": 49, "user": "531bfb69e4b08068f379ed97"}, {"code": "(fn [n s] [(take n s) (drop n s)])", "problem": 49, "user": "531ba143e4b08068f379ed91"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "52dd4fb4e4b09f7907dd13df"}, {"code": "#(letfn [(splt [index new orig]\n  (if (zero? index)\n    [(into [] new) (into [] orig)]\n    (recur (dec index) (conj new (first orig)) (rest orig))))]\n  (splt %1 [] %2))", "problem": 49, "user": "531c0619e4b08068f379ed98"}, {"code": "(fn [x y]\n  (let [f (take x y)\n        g (drop x y)]\n    (vector f g)))", "problem": 49, "user": "52474133e4b05ef8e38e635e"}, {"code": "(fn [a b] [(take a b) (drop a b)])", "problem": 49, "user": "5149c2f1e4b0829bd132edb0"}, {"code": "(fn [a b]\n  (loop [n a\n         b (seq b)\n         result []]\n    (if (< (count result) n)\n      (recur n (next b) (conj result (first b)))\n      (conj [] result b))))", "problem": 49, "user": "531e5c81e4b08068f379edba"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "531f1e63e4b08068f379edc2"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "532347dde4b09d4e7a9b54cc"}, {"code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "531c57ace4b08068f379ed9b"}, {"code": "#(vec (map vec (list (take %1 %2) (drop %1 %2))))", "problem": 49, "user": "52e683c0e4b09f7907dd1477"}, {"code": "(fn [n s]\n   (let [p (partition n n [] s)]\n     (concat [(first p)] [(apply concat (rest p))])))", "problem": 49, "user": "4ff505c8e4b0678c553fc364"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "5323a414e4b09d4e7a9b54d1"}, {"code": "(fn [at coll]\n  (loop [part1 (empty coll)\n         part2 coll\n         at at]\n    (if (= 0 at)\n      (conj [] part1 (vec part2))\n      (recur (conj part1 (first part2)) (rest part2) (dec at)))))", "problem": 49, "user": "52e25beee4b09f7907dd1433"}, {"code": "(fn [c a] \n  (vec [(vec (take c a)) (vec (drop c a))]))", "problem": 49, "user": "532418f3e4b09d4e7a9b54d8"}, {"code": "(fn [n col] (split-with (partial not= (nth col n)) col))", "problem": 49, "user": "52cb19abe4b07d0d72b27348"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "531f7a2de4b08068f379edc6"}, {"code": "(fn [k s]\n  [(take k s) (drop k s)])", "problem": 49, "user": "52bb4be0e4b07a9af57922e2"}, {"code": "#(vector (vec (take %1 %2)) (vec (drop %1 %2)))", "problem": 49, "user": "52c00e4fe4b07a9af5792342"}, {"code": "#(list (take %1 %2) (drop %1 %2) )", "problem": 49, "user": "5326c5f7e4b09d4e7a9b54f2"}, {"code": "(fn split [n coll] \n  (list (take n coll) (drop n coll)))", "problem": 49, "user": "531dfaf5e4b08068f379edb3"}, {"code": "(fn [cnt v] [(take cnt v)(drop cnt v)])", "problem": 49, "user": "531f0a26e4b08068f379edbf"}, {"code": "(juxt take drop)", "problem": 49, "user": "512700c4e4b083bb8f88cf14"}, {"code": "(fn [x l] [(take x l) (take-last (- (count l) x) l)])", "problem": 49, "user": "521b73f5e4b0c4ef0be83043"}, {"code": "(fn splitter [n l]\n        (loop [acc [] i n r l]\n          (if (zero? i)\n            (cons acc [r])\n            (recur (conj acc (first r)) (dec i) (rest r)))))", "problem": 49, "user": "52d1e364e4b0d9f9285948e7"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "53244c9de4b09d4e7a9b54db"}, {"code": "(fn [n coll]\n   [(take n coll) (drop n coll)])", "problem": 49, "user": "52fba50ce4b047fd5583700d"}, {"code": "(fn [n xs] (vector (take n xs) (drop n xs)))", "problem": 49, "user": "532b9075e4b09d4e7a9b5533"}, {"code": "(fn [n s]\n   [(take n s)\n    (drop n s)]\n   )", "problem": 49, "user": "53224d45e4b09d4e7a9b54c0"}, {"code": "(fn\n  [n coll]\n  (vector (take n coll) (drop n coll)))", "problem": 49, "user": "52ba447ee4b07a9af57922ce"}, {"code": "(fn [n v]\n  (vector (vec (take n v)) (vec (nthrest v n))))", "problem": 49, "user": "531016d0e4b08068f379ecd1"}, {"code": "(juxt take drop)", "problem": 49, "user": "532ab0bde4b09d4e7a9b5527"}, {"code": "(fn f [split_num x]\n  (let [firsthalf (range split_num)\n        tailhalf (range split_num (count x))\n        query (fn [index] (nth x index) )]\n   (\n    conj [] (into [] (map query firsthalf )) (into [] (map query tailhalf))\n    )\n  )\n  )", "problem": 49, "user": "5302ac7fe4b0d8b024fd3731"}, {"code": "(fn [n xs]\n  [(take n xs) (drop n xs)])", "problem": 49, "user": "5004034ce4b0678c553fc447"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "52facb9de4b047fd55837002"}, {"code": "(fn [n q] (vector (take n q) (drop n q)))", "problem": 49, "user": "532e0b20e4b019098a6f8b45"}, {"code": "(fn [x xs] [(take x xs) (drop x xs)])", "problem": 49, "user": "531490bde4b08068f379ed17"}, {"code": "(fn split2parts [x s]\n  (conj (vector (take x s)) (drop x s))\n)", "problem": 49, "user": "52d42021e4b09f7907dd132a"}, {"code": "(fn [n col] [(take n col) (drop n col)])", "problem": 49, "user": "5318f85ae4b08068f379ed76"}, {"code": "(fn [n coll]\n  (vector (vec (take n coll)) (vec (drop n coll))))", "problem": 49, "user": "53315c78e4b019098a6f8b67"}, {"code": "(fn splitseq [n x]\n  (vector (take n x) (drop n x)))", "problem": 49, "user": "532727bae4b09d4e7a9b54fa"}, {"code": "(fn [x y] \n  [(take x y)\n  (drop x y)])", "problem": 49, "user": "53150a4de4b08068f379ed22"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "532c0507e4b09d4e7a9b553c"}, {"code": "#(let [a (partition-all %1 %2)]\n    (concat (take 1 a) (list (apply concat (doall (drop 1 a))))))", "problem": 49, "user": "532bce35e4b09d4e7a9b5536"}, {"code": "(fn splt [pos xs]\n  [ (take pos xs) (drop pos xs) ]\n )", "problem": 49, "user": "531cd41ee4b08068f379eda9"}, {"code": "#(concat [(take %1 %2) (take-last (- (count %2) %1) %2)])", "problem": 49, "user": "53300924e4b019098a6f8b55"}, {"code": "(fn [n seq]\n    (list (take n seq)\n          (drop n seq)))", "problem": 49, "user": "51f5539fe4b0abb92f97f9cd"}, {"code": "(fn [pos the-seq]\n  (vector \n   \t(vec (take pos the-seq))\n   \t(vec (drop pos the-seq))))", "problem": 49, "user": "4f80a906e4b033992c121bf7"}, {"code": "(fn [n xs] (let [t (partition-all n xs)] (list (first t) (apply concat (next t)))))", "problem": 49, "user": "531792d9e4b08068f379ed5e"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "52d2f457e4b099d49816f0ba"}, {"code": "(fn [n x]\n  [(take n x)(drop n x)])", "problem": 49, "user": "533018b2e4b019098a6f8b56"}, {"code": "(fn [n xs]\n  (list (take n xs) (drop n xs)))", "problem": 49, "user": "533696b9e4b0e30313ee6c7c"}, {"code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "504f6721e4b0a02f9cffde7f"}, {"code": "(fn [value coll]\n  [(take value coll)\n   (drop value coll)])", "problem": 49, "user": "531d34cfe4b08068f379edac"}, {"code": "(fn [n s]\n  [(vec (take n s)) (vec (drop n s))])", "problem": 49, "user": "53219cece4b09d4e7a9b54b7"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "5336ca32e4b0e30313ee6c80"}, {"code": "#(vector (subvec %2 0 %1) (subvec %2 %1))", "problem": 49, "user": "52baefbae4b07a9af57922da"}, {"code": "(fn split [n x] (vec (list (take n x) (drop n x))))", "problem": 49, "user": "53388e2de4b0e30313ee6c9c"}, {"code": "(fn [n xs] [(take n xs) (drop n xs)])", "problem": 49, "user": "532b43c3e4b09d4e7a9b5531"}, {"code": "#(vector (take %1 %2)(drop %1 %2))", "problem": 49, "user": "532631e1e4b09d4e7a9b54ea"}, {"code": "(juxt take drop)", "problem": 49, "user": "53377725e4b0e30313ee6c89"}, {"code": "(fn [n v] [(take n v) (drop n v)])", "problem": 49, "user": "533056a4e4b019098a6f8b5b"}, {"code": "(fn [n xs] [(take n xs) (drop n xs)])", "problem": 49, "user": "52d2ca1ce4b099d49816f0b4"}, {"code": "#(vector (vec (take %1 %2)) (vec (drop %1 %2)))", "problem": 49, "user": "52d00521e4b07d0d72b273b3"}, {"code": "(fn spl [n xs]\n  (cons (take n xs) (cons (drop n xs) '())))", "problem": 49, "user": "5334d4f2e4b0656e627bfd71"}, {"code": "(juxt take drop)", "problem": 49, "user": "525ab6cfe4b0cb4875a45cf9"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "506d5e4ce4b0a302964c5493"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4eadc217535d7eef30807321"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "5339c08ee4b0e30313ee6cad"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "4fceda40e4b03432b189f407"}, {"code": "(fn [n s]\n  [(take n s) (nthrest s n)])", "problem": 49, "user": "533ab9abe4b0e30313ee6cbf"}, {"code": "(fn [n s] [(take n s) (drop n s)])", "problem": 49, "user": "51a3b135e4b0e77c4ca60bf6"}, {"code": "(fn [c s]\n  (concat [(take c s)] [(drop c s)]))", "problem": 49, "user": "533ee560e4b085b17e897d98"}, {"code": "#(list (take % %2)(drop % %2))", "problem": 49, "user": "5281a445e4b0757a1b17143a"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "531619c1e4b08068f379ed3d"}, {"code": "#(vec [(take %1 %2) (drop %1 %2)])", "problem": 49, "user": "520fff3ce4b080a8d9b9d633"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "510c01bae4b078ea7192110a"}, {"code": "(fn [n xs] (cons (take n xs) (cons (drop n xs) ())))", "problem": 49, "user": "5311cd03e4b08068f379ecef"}, {"code": "#(conj [] (take % %2) (drop % %2))", "problem": 49, "user": "523ea111e4b057c4b7cd0a65"}, {"code": "(fn [n l] [(take n l) (drop n l)])", "problem": 49, "user": "51da631be4b02ceefd947766"}, {"code": "(fn [n lst] (vector (take n lst) (drop n lst)))", "problem": 49, "user": "5341b141e4b00652c8746ecf"}, {"code": "#(conj [] (take %1 %2) (drop %1 %2))", "problem": 49, "user": "53307da1e4b019098a6f8b5e"}, {"code": "#(conj [] (take % %2) (nthrest %2 %))", "problem": 49, "user": "530262c8e4b0d8b024fd3728"}, {"code": "#(into () (vector (drop % %2) (take % %2)))", "problem": 49, "user": "50d4593ee4b09cc622d65a68"}, {"code": "(fn splity\n\t[n col]\n\t(let [count (count col)]\n\t  (vector (take n col) (take-last (- count n) col))))", "problem": 49, "user": "5339af7de4b0e30313ee6cab"}, {"code": "(fn [n x]\n    [(take n x) (drop n x)])", "problem": 49, "user": "533f09e1e4b085b17e897d9a"}, {"code": "(fn spilt [n coll]\n  (vector (into [] (take n coll))\n    (into [] (reverse (take (- (count coll) n) (reverse coll))))))", "problem": 49, "user": "5344a0efe4b084c2834f4a2d"}, {"code": "(fn [x col]\n    [(take x col) (drop x col)])", "problem": 49, "user": "524d90c0e4b0a16e35cf6ded"}, {"code": "#(vector (vec (take %1 %2)) (vec (drop %1 %2)))", "problem": 49, "user": "533b1dc4e4b0e30313ee6cc7"}, {"code": "(fn [n s] [(take n s) (drop n s)])", "problem": 49, "user": "533ea7e8e4b085b17e897d94"}, {"code": "(juxt take drop)", "problem": 49, "user": "53460d02e4b084c2834f4a39"}, {"code": "(fn [x y]\n  (list (take x y) (drop x y)))", "problem": 49, "user": "53468f6ce4b084c2834f4a3f"}, {"code": "(fn [n s]\n\t(list (take n s) (drop n s)))", "problem": 49, "user": "51b73a91e4b0d906fcd71d33"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "4f9b3532e4b0dcca54ed6d13"}, {"code": "(fn [i, col] (conj [](vec (take i col))(vec (take-last (- (count col) i) col))))", "problem": 49, "user": "53286389e4b09d4e7a9b5504"}, {"code": "(fn [n c] [(take n c) (drop n c)])", "problem": 49, "user": "4e705861535d5021c1a89635"}, {"code": "(fn [n l] [(take n l) (drop n l)])", "problem": 49, "user": "5349ac2be4b084c2834f4a67"}, {"code": "(fn [n xs] [(take n xs) (nthrest xs n)])", "problem": 49, "user": "534941d1e4b084c2834f4a60"}, {"code": "#(vector (into [] (take % %2)) (into [] (drop % %2)))", "problem": 49, "user": "52a32b52e4b04e0c58e87bfc"}, {"code": "(fn [x y] [(reverse (drop (- (count y) x) (reverse y))) (drop x y)])", "problem": 49, "user": "52ac2db3e4b0c58976d9ac82"}, {"code": "(fn [x a] [(take x a) (drop x a)])", "problem": 49, "user": "500e6c4ee4b04a05d36fcc05"}, {"code": "(fn [n coll] (conj [] (vec (take n coll)) (vec (drop n coll))))", "problem": 49, "user": "531902b1e4b08068f379ed77"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "50fc299ee4b0d10d794c19f2"}, {"code": "(fn [index coll]\n  [(take index coll) (drop index coll)])", "problem": 49, "user": "5348236ee4b084c2834f4a54"}, {"code": "(juxt take drop)", "problem": 49, "user": "534bde26e4b084c2834f4a81"}, {"code": "(fn [n coll]\n  (conj [] (subvec coll 0 n) (subvec coll n)))", "problem": 49, "user": "5346f409e4b084c2834f4a46"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "534bd9c1e4b084c2834f4a80"}, {"code": "(fn [n s]\n  [(take n s) (reverse (take (- (count s) n) (reverse s)))])", "problem": 49, "user": "53415755e4b00652c8746ecd"}, {"code": "#(vec (list (take % %2) (drop % %2)))", "problem": 49, "user": "53487737e4b084c2834f4a59"}, {"code": "(fn [n col]\n  [(take n col) (drop n col)])", "problem": 49, "user": "5322d370e4b09d4e7a9b54c7"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "52ae886de4b0c58976d9acab"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "532a111ee4b09d4e7a9b5520"}, {"code": "(fn [c l] [(take c l) (drop c l)])", "problem": 49, "user": "519e70d5e4b0acf32bc6a42c"}, {"code": "(fn [n coll] [(take  n coll) (drop n coll)])", "problem": 49, "user": "52b94e26e4b07a9af57922b9"}, {"code": "(fn [n c]\n  [(take n c) (drop n c)])", "problem": 49, "user": "51ab70c3e4b04e3dc0c27b33"}, {"code": "(fn [n coll]\n  (vector (take n coll) (drop n coll)))", "problem": 49, "user": "5349da55e4b084c2834f4a68"}, {"code": ";(fn [n col] [(take n col) (drop n col)])\n#(for [f [take drop]] (f %1 %2))", "problem": 49, "user": "534e9ed4e4b084c2834f4ab8"}, {"code": "(fn  [gap seq]\n  (loop [s seq\n         g gap\n         res []]\n    (if (zero? g) res (recur (next s)\n                             (dec g)\n                             (if (= 1 g)\n                                 [(conj res (first s)) (next s)]\n                                 (conj res (first s)))))))", "problem": 49, "user": "516081e7e4b009fba0926e28"}, {"code": "(fn [i sq]\n  [(take i sq) (drop i sq)])", "problem": 49, "user": "5339c105e4b0e30313ee6cae"}, {"code": "#(conj [(take % %2)] (drop % %2))", "problem": 49, "user": "534815bde4b084c2834f4a53"}, {"code": "(juxt take drop)", "problem": 49, "user": "526a7025e4b03e8d9a4a722a"}, {"code": "(fn [n x]\n  [(subvec x 0 n )\n   (subvec x n)])", "problem": 49, "user": "534f25f9e4b084c2834f4ac6"}, {"code": "(fn [i coll] [(take i coll) (drop i coll)])", "problem": 49, "user": "5250b7a5e4b0541d1855b83e"}, {"code": "(fn [n c]\n  [(take n c) (drop n c)])", "problem": 49, "user": "53436e60e4b084c2834f4a19"}, {"code": "(fn [n s] (vector (take n s) (drop n s)))", "problem": 49, "user": "53422c98e4b00652c8746ed6"}, {"code": "(fn [n li] (vector (subvec li 0 n) (subvec li n)))", "problem": 49, "user": "53383c74e4b0e30313ee6c92"}, {"code": "(fn [n s] [ (take n s) (drop n s)])", "problem": 49, "user": "53512bc6e4b084c2834f4ae1"}, {"code": "(fn [n s]\n  (list (take n s) (drop n s)))", "problem": 49, "user": "4ddb696b535d02782fcbe9fa"}, {"code": "(fn [idx, vct]\n   [(subvec vct 0 idx) (subvec vct idx)])", "problem": 49, "user": "5348cab4e4b084c2834f4a5e"}, {"code": "(fn [n, s]\n  \t\t[(take n s) (drop n s)])", "problem": 49, "user": "534f13b2e4b084c2834f4ac4"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "534efe66e4b084c2834f4ac1"}, {"code": "(juxt take drop)", "problem": 49, "user": "5336a339e4b0e30313ee6c7d"}, {"code": "(fn [size pieces]\n  [(vec (take size pieces)) (vec (drop size pieces))])", "problem": 49, "user": "52fc34cee4b047fd55837015"}, {"code": "(fn [num v] [(vec (take num v)) (vec (drop num v))])", "problem": 49, "user": "5351980ce4b084c2834f4ae5"}, {"code": "(fn [rm xs] (let [c (count xs) vs (vec xs) a (subvec vs 0 rm) b (subvec vs rm c)] (vector a b) ))", "problem": 49, "user": "533b9cace4b0e30313ee6cd1"}, {"code": "(juxt take drop)", "problem": 49, "user": "53513d28e4b084c2834f4ae3"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "534e4a29e4b084c2834f4ab0"}, {"code": "(fn [n xs]\n  [(take n xs) (drop n xs)])", "problem": 49, "user": "5344fe13e4b084c2834f4a32"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "535526a2e4b04ce2eb3ed259"}, {"code": "(fn [n xs] (conj '() (drop n xs) (take n xs)))", "problem": 49, "user": "5312cdaae4b08068f379ed03"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "5340ee60e4b00652c8746ec9"}, {"code": "(fn split-sec [i x]\n  (let [s1 (filter #(< (.indexOf x %) i)  x)\n        s2 (filter #(>= (.indexOf x %) i)  x)]\n    (conj [](vec s1)(vec s2))))", "problem": 49, "user": "52d6664be4b09f7907dd1359"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "5353afa0e4b084c2834f4b03"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "50f10f7be4b06d9538fe211a"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "53498f88e4b084c2834f4a64"}, {"code": "#(vector (take % %2) (nthrest %2 %))", "problem": 49, "user": "5357b241e4b04ce2eb3ed282"}, {"code": "(fn [n coll]\n  (vec (conj '() (vec (drop n coll)) (vec (take n coll)))))", "problem": 49, "user": "535778dee4b04ce2eb3ed27d"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "53500869e4b084c2834f4ad3"}, {"code": "(fn [n s]\n  (apply vector (cons (apply vector (take n s)) (vector (apply vector (drop n s))))))", "problem": 49, "user": "5356e04fe4b04ce2eb3ed271"}, {"code": "(fn [n coll]\n  [(subvec coll 0 n) (subvec coll n (count coll))])", "problem": 49, "user": "5225271fe4b01819a2de42f9"}, {"code": "#(vector (subvec %2 0 %1) (subvec %2 %1))", "problem": 49, "user": "52046600e4b0c283853240c5"}, {"code": "(fn my-split-at [n xs]\n  [(take n xs)(drop n xs)])", "problem": 49, "user": "53287dace4b09d4e7a9b5507"}, {"code": "(fn [n col]\n   (list (take n col) (drop n col)))", "problem": 49, "user": "530b8580e4b02e82168697cc"}, {"code": "(fn [n s] [(take n s) (drop n s)])", "problem": 49, "user": "534d1173e4b084c2834f4a98"}, {"code": "#(map vec [(take %1 %2) (nthrest %2 %1)])", "problem": 49, "user": "534dd600e4b084c2834f4aaa"}, {"code": "(fn [x coll] (vector (vec (take x coll)) (vec (drop x coll))))", "problem": 49, "user": "5356dcbee4b04ce2eb3ed270"}, {"code": "(fn [n xs]\n    (let [a (vec (take n xs))\n          b (vec (drop n xs))]\n      [a b]\n      ))", "problem": 49, "user": "535aba96e4b04ce2eb3ed2a8"}, {"code": "(fn  [n coll]\n [(take n coll)   (drop n coll)]  )", "problem": 49, "user": "52dced9de4b09f7907dd13d7"}, {"code": "(fn [n c]\n  [ (take n c) (drop n c) ] )", "problem": 49, "user": "53597288e4b04ce2eb3ed29c"}, {"code": "(fn s-a\n  [s coll]\n  [(take s coll) (drop s coll)])", "problem": 49, "user": "5338387de4b0e30313ee6c91"}, {"code": "(fn [var sq]\n  [(vec (take var sq)) (vec (take-last (- (count sq) var) sq))])", "problem": 49, "user": "52271a85e4b04e78ff2e19a7"}, {"code": "(fn [n l] [(take n l) (drop n l)])", "problem": 49, "user": "535920b2e4b04ce2eb3ed294"}, {"code": "#(concat [(take %1 %2)] [(drop %1 %2)])", "problem": 49, "user": "535d910ae4b04ce2eb3ed2c5"}, {"code": "(juxt take drop)", "problem": 49, "user": "535a18e3e4b04ce2eb3ed2a4"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "53523ae0e4b084c2834f4aee"}, {"code": "(fn [n l] [(take n l) (take-last (- (count l) n) l)])", "problem": 49, "user": "535d2533e4b04ce2eb3ed2bc"}, {"code": "(fn [idx coll] (partition-by #(> idx (.indexOf coll %)) coll))", "problem": 49, "user": "534f1c94e4b084c2834f4ac5"}, {"code": "(fn [pos v] [(take pos v) (drop pos v)])", "problem": 49, "user": "53480973e4b084c2834f4a52"}, {"code": "(fn [a b] [(take a b) (drop a b)])", "problem": 49, "user": "52761edae4b03e8d9a4a74d4"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "536254a5e4b0243289761e50"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "53489329e4b084c2834f4a5b"}, {"code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "50fd4838e4b033b9c38d78ce"}, {"code": "(fn [l s]\n  (vector (take l s) (drop l s)))", "problem": 49, "user": "53527551e4b084c2834f4af0"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "514b83b4e4b0bd81940b86ce"}, {"code": "(fn [n l] (cons (take n l) (list (drop n l))))", "problem": 49, "user": "53638ed2e4b0243289761e5b"}, {"code": "(fn [n x]\n   ((fn f [s left]\n      (if (> n (count left))\n        (f (rest s) (cons (first s) left))\n        [(reverse left) s]))\n    x []))", "problem": 49, "user": "536102efe4b0243289761e3e"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "532ecd44e4b019098a6f8b49"}, {"code": "#(list (take %1 %2) (nthrest %2 %1))", "problem": 49, "user": "5361a4f2e4b0243289761e47"}, {"code": "(fn [n l] (vector (vec (take n l)) (vec (drop n l))))", "problem": 49, "user": "53663e82e4b0243289761e73"}, {"code": "#(vec [(take %1 %2) (drop %1 %2)])", "problem": 49, "user": "5354bb38e4b084c2834f4b0a"}, {"code": "(fn [x coll] [(take x coll) (drop x coll)])", "problem": 49, "user": "4eed26af535d93acb0a668bb"}, {"code": "(juxt take drop)", "problem": 49, "user": "535d4b0ae4b04ce2eb3ed2be"}, {"code": "(fn [p coll]\n  [(take p coll) (drop p coll)])", "problem": 49, "user": "5338e33fe4b0e30313ee6ca1"}, {"code": "#(cons (take % %2) (list (drop % %2)))", "problem": 49, "user": "4fa9da14e4b081705acca1e7"}, {"code": "(fn [n coll]\n  (list (take n coll) (drop n coll)))", "problem": 49, "user": "5368a275e4b0243289761e8f"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "5369d072e4b0243289761ea1"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "536973e5e4b0243289761e9e"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "52c42bc2e4b0c2d177d620d0"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "536aa86de4b0243289761eb1"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "535eaa73e4b04ce2eb3ed2d4"}, {"code": "(fn [n xs] \n  [(take n xs) (drop n xs)])", "problem": 49, "user": "536d83cee4b0fc7073fd6e5e"}, {"code": "(fn [n s] (cons (take n s) (cons (drop n s) '()) ) )", "problem": 49, "user": "535197f2e4b084c2834f4ae4"}, {"code": "#( conj [] (take %1 %2) (drop %1 %2))", "problem": 49, "user": "52d24f60e4b099d49816f0a8"}, {"code": "(fn [n xs] [(take n xs) (drop n xs)])", "problem": 49, "user": "536ca4bde4b0fc7073fd6e49"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "53121863e4b08068f379ecf3"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "536ecd9fe4b0fc7073fd6e76"}, {"code": "(fn [n xs] (list (take n xs) (nthrest xs n)))", "problem": 49, "user": "4edb314d535d10e5ff6f5317"}, {"code": "#(list (take %1 %2) (drop %1 %2) )", "problem": 49, "user": "5364ab34e4b0243289761e64"}, {"code": "(fn [n v]\n  [(subvec v 0 n) (subvec v n)])", "problem": 49, "user": "536f5900e4b0fc7073fd6e7b"}, {"code": "(juxt take drop)", "problem": 49, "user": "524b0645e4b09eba1c0223bf"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "518ee4f9e4b0cd6ff51676a5"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "536e0930e4b0fc7073fd6e66"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "5370ef22e4b0fc7073fd6ea0"}, {"code": "(fn [n c] [(take n c) (drop n c)])", "problem": 49, "user": "529c585ae4b04e0c58e87b60"}, {"code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "4fe9ea87e4b0547ebccb2476"}, {"code": "(fn [n coll] [(vec (take n coll)) (vec (drop n coll))])", "problem": 49, "user": "53629381e4b0243289761e54"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "53691dc7e4b0243289761e97"}, {"code": "(fn splitS[x y] ( vector (take x y) (reverse (take  (- (count y) x) (reverse y)))))", "problem": 49, "user": "534d639ae4b084c2834f4a9e"}, {"code": "(fn [n s] [(take n s) (drop n s)])", "problem": 49, "user": "536f2faee4b0fc7073fd6e79"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "53705e2de4b0fc7073fd6e96"}, {"code": "(fn [x col] [(mapv identity (take x col)) (mapv identity (drop x col))])", "problem": 49, "user": "52f53589e4b05e3f0be25f2c"}, {"code": "(fn split [n collection]\n  (list (take n collection) ;takes the first n elements of the collection\n        (drop n collection))) ;takes the other elements\n\t;lists them all together", "problem": 49, "user": "53713ebee4b0fc7073fd6ead"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "5371167fe4b0fc7073fd6ea7"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "535056a7e4b084c2834f4adb"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "53720c5ce4b0493c815db704"}, {"code": "#(list (take % %2) (nthrest %2 %))", "problem": 49, "user": "4ec53f8c535d6d7199dd368b"}, {"code": "#(conj (vector (take % %2)) (subvec %2 %))", "problem": 49, "user": "536c7470e4b0fc7073fd6e3e"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "536be48ee4b0fc7073fd6e31"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "532c9dc9e4b019098a6f8b30"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "53712c03e4b0fc7073fd6ea9"}, {"code": "(fn [s seq] (conj [] (take s seq) (drop s seq)))", "problem": 49, "user": "53736ffce4b06d7f452d9e11"}, {"code": "(fn [n s] [(take n s) (drop n s)])", "problem": 49, "user": "52cc76eee4b07d0d72b27363"}, {"code": "(fn [at v] [(take at v) (drop at v)])", "problem": 49, "user": "518279abe4b0353c468deb65"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "536a37efe4b0243289761eaa"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "534c1c64e4b084c2834f4a8a"}, {"code": "(fn my-split-at [n coll]\n  [(vec (take n coll)) (vec (drop n coll))])", "problem": 49, "user": "53713ed9e4b0fc7073fd6eaf"}, {"code": "(fn [n a][(take n a) (drop n a)])", "problem": 49, "user": "5376966ae4b06839e8705e27"}, {"code": "(fn [n xs]\n  [(take n xs) (drop n xs)])", "problem": 49, "user": "53779a26e4b06839e8705e38"}, {"code": "(fn [n l] (map (fn [lst] (map #(do (% 1)) lst))\n                (partition-by #(do (>= (% 0) n)) (map-indexed vector l))))", "problem": 49, "user": "535e518ee4b04ce2eb3ed2cf"}, {"code": "(fn jsplit\n  [num lst]\n  (loop [one [] two [] remaining lst x 0]\n    (if-not (< x (count lst))\n      (conj [] one two)\n      (if (< x num)\n        (recur (conj one (first remaining)) two (rest remaining) (+ x 1))\n        (recur one (conj two (first remaining)) (rest remaining) (+ x 1))))))", "problem": 49, "user": "534ff8a6e4b084c2834f4ad1"}, {"code": "(fn [num coll]\n  (conj [] (take num coll) (drop num coll)))", "problem": 49, "user": "5317d78ee4b08068f379ed63"}, {"code": "#(cons (drop-last (- (count %2) %1) %2) (list (drop  %1 %2)))", "problem": 49, "user": "4e8849c5535d8b9bb0147ca4"}, {"code": "(fn [n l] (conj [] (vec (take n l)) (vec (nthnext l n))))", "problem": 49, "user": "536673a8e4b0243289761e76"}, {"code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "5379306fe4b06839e8705e50"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "53578543e4b04ce2eb3ed280"}, {"code": "#(let [c1 (take %1 %2), c2 (drop %1 %2)] [c1 c2])", "problem": 49, "user": "5370b386e4b0fc7073fd6e9b"}, {"code": "(fn [n s] [(take n s) (nthrest s n)])", "problem": 49, "user": "4f92de49e4b0dcca54ed6cb2"}, {"code": "(fn [n s]\n   [(take n s) (drop n s)])", "problem": 49, "user": "4f849f76e4b033992c121c36"}, {"code": "(fn [n coll]\n    [(take n coll) (drop n coll)])", "problem": 49, "user": "537bde5de4b06839e8705e73"}, {"code": "#(vector (take %1 %2) (take-last (- (count %2) %1) %2))", "problem": 49, "user": "5370f8ede4b0fc7073fd6ea2"}, {"code": "#(loop [f []\n        s %2\n        n %1]\n   (if (zero? n) (vector f s)\n     (recur (conj f (first s)) (rest s) (dec n))))", "problem": 49, "user": "537e745ae4b06839e8705ea6"}, {"code": "(fn\n  splitter\n  ([steps lis] (splitter steps lis []))\n  ([steps lis lis2]\n   (if (= steps 0)\n       (vector lis2 lis)\n       (recur (dec steps) (rest lis) (conj lis2 (first lis))))))", "problem": 49, "user": "53736f65e4b06d7f452d9e0f"}, {"code": "(fn [x y] (let [n (take x y)\n                m (drop x y)] [n m]))", "problem": 49, "user": "525cc912e4b0cb4875a45d48"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "536b2048e4b0243289761eb7"}, {"code": "(fn [n xs]\n  (list\n   (take n xs)\n   (loop [m n ys (seq xs)]\n     (if (= 0 m) ys (recur (dec m) (next ys))))))", "problem": 49, "user": "53800d99e4b06839e8705ebd"}, {"code": "(fn [n coll]\n  [(take n coll) (drop n coll)]\n  )", "problem": 49, "user": "53778b90e4b06839e8705e36"}, {"code": "(juxt take drop)", "problem": 49, "user": "537f4652e4b06839e8705eb1"}, {"code": "#(cons (take % %2) (cons (drop % %2) '()))", "problem": 49, "user": "537e4259e4b06839e8705e9e"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "53820087e4b06839e8705ecf"}, {"code": "(fn [n s]\n  [(take n s) (drop n s)])", "problem": 49, "user": "53834ed3e4b06839e8705edb"}, {"code": "(fn [V X] \n   (list (take V X) (drop V X)))", "problem": 49, "user": "536c77f1e4b0fc7073fd6e3f"}, {"code": "#( cons (take %1 %2)[ (vec (take-last (- (count %2) %1) %2))])", "problem": 49, "user": "537a1012e4b06839e8705e5c"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "53767991e4b06839e8705e25"}, {"code": "(fn [n coll] [(take n coll) (nthrest coll n)])", "problem": 49, "user": "53806e5be4b06839e8705ec1"}, {"code": "#(split-with (partial not= (nth %2 %1)) %2)", "problem": 49, "user": "534e1f56e4b084c2834f4aae"}, {"code": "(fn [size col]\n  (let [one ( take size col ) other (drop size col)]\n    (vector one other)))", "problem": 49, "user": "4dbb7d29535d1e037afb21b7"}, {"code": "(fn split-at2 [n lst]\n  (let [vlst (vec lst)\n        length (count vlst)\n        front (map #(nth vlst %1) (range n))\n        end (map #(nth vlst %1) (range n length))]\n    [front end]))", "problem": 49, "user": "5374adc3e4b06d7f452d9e27"}, {"code": "(fn [nb arg]\n  [(vec (take nb arg)) (vec (drop nb arg))])", "problem": 49, "user": "537881a4e4b06839e8705e46"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "53733312e4b06d7f452d9e0a"}, {"code": "(fn [pos v] (conj \n    (conj [] (vec (take pos v)))\n    (vec (drop pos v)) \n        ))", "problem": 49, "user": "5356d00ee4b04ce2eb3ed26f"}, {"code": "(fn [n c] (list (take n c) (drop n c)))", "problem": 49, "user": "538557aee4b06839e8705f02"}, {"code": "(fn [n seqn]\n  [(take n seqn) (drop n seqn)])", "problem": 49, "user": "53889587e4b0640c7a9a589e"}, {"code": "#(vector (into [](take %1 %2)) (into [](drop %1 %2)))", "problem": 49, "user": "534eecaee4b084c2834f4abf"}, {"code": "#(cons (take %1 %2) [(nthrest %2 %1)])", "problem": 49, "user": "531bad96e4b08068f379ed93"}, {"code": "(fn [n, col]\n     (conj [] \n           (vec (map second (filter #(< (first %) n) (map-indexed vector col))))\n           (vec (map second (filter #(>= (first %) n) (map-indexed vector col))))))", "problem": 49, "user": "4f7cbf4ae4b06e829148e1b7"}, {"code": "(fn [num seqs]\n  (list (take num seqs) (drop num seqs)))", "problem": 49, "user": "536f871de4b0fc7073fd6e7f"}, {"code": "(fn [n coll] (vector (take n coll) (drop n coll)))", "problem": 49, "user": "538b1644e4b0640c7a9a58c0"}, {"code": "(fn [x input] (vector (take x input) (drop x input)))", "problem": 49, "user": "53838742e4b06839e8705ee0"}, {"code": "#(cons (take %1 %2) (list (drop %1 %2)))", "problem": 49, "user": "534d5ab7e4b084c2834f4a9c"}, {"code": "#(list (take %1 %2) (nthrest %2 %1))", "problem": 49, "user": "538be6afe4b0640c7a9a58c9"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "53410c24e4b00652c8746eca"}, {"code": "(fn [n xs] [(into [] (take n xs)) (into [] (drop n xs))])", "problem": 49, "user": "53403110e4b085b17e897da6"}, {"code": "(fn [n coll]\n  (let [p (partition-all n coll)]\n    (vector (first p) (mapcat identity (rest p)))))", "problem": 49, "user": "5360f043e4b0243289761e3c"}, {"code": "(fn [c x]\n  (loop [x x\n         result []]\n    (if (= (count result) c)\n      (vector result x)\n      (recur (rest x) (conj result (first x))))))", "problem": 49, "user": "538d464ee4b0b51d73faae69"}, {"code": "(letfn [(R [n l r]\n          (cond (zero? n) [l r]\n                :else (R (dec n)\n                         (conj l (first r))\n                         (rest r))))\n        (S [n l]\n          (R n [] l))]\n  S)", "problem": 49, "user": "51a4416ae4b0def3c5c5868c"}, {"code": "(fn [n coll]\n  [(take n coll)(drop n coll)])", "problem": 49, "user": "4f7426fde4b044e54cd9a8f5"}, {"code": "(fn [x l]\n  [(take x l) (drop x l)])", "problem": 49, "user": "538d8bb8e4b0b51d73faae71"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "52e55e16e4b09f7907dd1460"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "537943c0e4b06839e8705e52"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "4fe8a1f8e4b07c9f6fd12c5f"}, {"code": "(fn [n l] [(take n l) (drop n l)])", "problem": 49, "user": "535943b3e4b04ce2eb3ed295"}, {"code": "(fn [n seq] (vector (take n seq) (drop n seq)))", "problem": 49, "user": "538c3424e4b0b51d73faae58"}, {"code": "#(vector (take % %2) (drop % %2))", "problem": 49, "user": "538de891e4b0b51d73faae78"}, {"code": "(fn [b coll] (let [a (map-indexed vector coll)] \n  (map (fn [d] (map #(last %) d)) \n       (partition-by #(< (first %) b) a))))", "problem": 49, "user": "538e29d1e4b0b51d73faae80"}, {"code": "(fn [n s] (list (take n s) (drop n s)))", "problem": 49, "user": "530bf87ee4b02e82168697d5"}, {"code": "(fn my-clumsy-split [n coll]\n      (let\n        [ len (count coll)\n          first-n (vec (reverse (nth (iterate rest (reverse coll)) (- len n))))\n          rest-n (vec (nth (iterate rest coll) n))\n          ]\n         [first-n rest-n]\n\n        )\n      )", "problem": 49, "user": "536827f1e4b0243289761e8a"}, {"code": "(fn [n xs]\n  (vector (take n xs) (drop n xs)))", "problem": 49, "user": "5383668ee4b06839e8705edd"}, {"code": "(fn [n lst]\n   (first (reduce (fn [[[l1 l2] i] e]\n                    (let [j (dec i)]\n                      (if (< i 1)\n                        [[l1 (conj l2 e)] j]\n                        [[(conj l1 e) l2] j])))\n                  [[[] []] n]\n                  lst)))", "problem": 49, "user": "5392b849e4b0b51d73faaeb1"}, {"code": "(juxt take drop)", "problem": 49, "user": "5394aa77e4b0b51d73faaecd"}, {"code": "#(into [] (list (into [] (take %1 %2)) (into [] (drop %1 %2))))", "problem": 49, "user": "528410bbe4b0239c8a67adc2"}, {"code": "(fn [x y] (list (take x y) (drop x y)))", "problem": 49, "user": "53906b89e4b0b51d73faae99"}, {"code": "#(conj (list (drop %1 %2)) (take %1 %2))", "problem": 49, "user": "539378fbe4b0b51d73faaebd"}, {"code": "#(cons (take % %2) (list (drop % %2)))", "problem": 49, "user": "53940789e4b0b51d73faaec3"}, {"code": "(fn [n coll] [ (take n coll) (drop n coll) ])", "problem": 49, "user": "5368fedee4b0243289761e93"}, {"code": "(fn [q l] [(take q l) (drop q l)])", "problem": 49, "user": "53979a87e4b0b51d73faaef0"}, {"code": "#(conj [] (take % %2) (drop % %2))", "problem": 49, "user": "53976599e4b0b51d73faaeea"}, {"code": "(fn  [n lst]\n  (let [s1 n, s2 (- (count lst) n)]\n    (conj [] (into [] (take s1 lst)) (into [] (take-last s2 lst)))))", "problem": 49, "user": "538e36c7e4b0b51d73faae81"}, {"code": "(fn[n col] (cons (take n col) (list (take-last (- (count col) n) col) )))", "problem": 49, "user": "53347274e4b0656e627bfd6b"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "53973e7be4b0b51d73faaee6"}, {"code": "(fn \n  [n s]\n  (loop [nn 0 s1 (empty s) s2 s]\n    (if (= nn n) (conj (empty s) s1 s2)\n      (recur (inc nn) (conj s1 (first s2)) (next s2)))))", "problem": 49, "user": "53997239e4b0b51d73faaf07"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "539a2901e4b0b51d73faaf0f"}, {"code": "(fn [s l]\n  [(take s l) (drop s l)])", "problem": 49, "user": "538c6db7e4b0b51d73faae5a"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "53908e6be4b0b51d73faae9a"}, {"code": "(fn [n c] [(take n c) (drop n c)])", "problem": 49, "user": "5398305fe4b0b51d73faaef6"}, {"code": "(fn [at coll] (vector (take at coll) (drop at coll)))", "problem": 49, "user": "539cacbde4b0b51d73faaf2f"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "536e5055e4b0fc7073fd6e6b"}, {"code": "(fn [num coll]\n     (conj []\n           (take num coll)\n           (take-last (- (count coll) num) coll)))", "problem": 49, "user": "53862316e4b06839e8705f0e"}, {"code": "#(list (take %1 %2) (drop %1 %2))", "problem": 49, "user": "539c64cde4b0b51d73faaf2a"}, {"code": "(fn [n coll]\n  (conj [] (take n coll) (drop n coll)))", "problem": 49, "user": "53886d2fe4b0640c7a9a589d"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "539ec9f9e4b0ca733b974491"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "539ad6b7e4b0b51d73faaf18"}, {"code": "#(list (take % %2) (drop % %2))", "problem": 49, "user": "5325cef5e4b09d4e7a9b54e7"}, {"code": "#(vector (take %1 %2) (drop %1 %2))", "problem": 49, "user": "50b63c5ee4b0a86f8358ca69"}, {"code": "(fn [n coll] [(take n coll) (drop n coll)])", "problem": 49, "user": "537e104ce4b06839e8705e9a"}, {"code": "(fn [n coll] [(take n coll) (nthnext coll n)])", "problem": 49, "user": "53a1b5c8e4b0ca733b9744c1"}, {"code": "(fn\n  [n coll]\n  [(take n coll) (drop n coll)])", "problem": 49, "user": "52dfc89be4b09f7907dd1405"}, {"code": "#(vector (vec (take %1 %2)) (vec (drop %1 %2)) )", "problem": 49, "user": "539c9e26e4b0b51d73faaf2e"}, {"code": "#(conj [] (take %1 %2) (drop %1 %2))", "problem": 49, "user": "53710c09e4b0fc7073fd6ea5"}, {"code": "(fn [n coll]\n   [(take n coll) (drop n coll)])", "problem": 49, "user": "52c49401e4b0c2d177d620de"}, {"code": "#(reverse (conj (conj '() (take %1 %2)) (drop %1 %2)))", "problem": 49, "user": "53a068cbe4b0ca733b9744ae"}, {"code": "#(-> [(take %1 %2) (drop %1 %2)])", "problem": 49, "user": "538e864ee4b0b51d73faae87"}, {"code": "(fn [n s]\n   (cons (map #(last %) (filter #(< (first %) n) (map-indexed #(vector %1 %2) s)))\n         (list (map #(last %) (filter #(not (< (first %) n)) (map-indexed #(vector %1 %2) s))))))", "problem": 49, "user": "52fac708e4b047fd55836fff"}, {"code": "(fn split-seq [n xs]\n\t(let [xp (partition-all n xs)]\n\t\t(list (first xp) (apply concat (rest xp)))))", "problem": 49, "user": "52e657e4e4b09f7907dd1472"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "53a36fd7e4b0f1fc74538834"}, {"problem": 49, "code": "#(let [x (take %1 %2) y (drop %1 %2)] [x y])", "user": "53a26cede4b0f1fc7453882a"}, {"problem": 49, "code": "(fn split-seq-at [n s]\n\t(partition-by #(if (>= (dec n) (.indexOf s %)) :first :rest) s))", "user": "52b71bd2e4b0c58976d9ad4d"}, {"problem": 49, "code": "(fn [n col]\n     (vec (list (vec (take n col))\n                (vec (drop n col)))) )", "user": "53858594e4b06839e8705f05"}, {"problem": 49, "code": "#(conj [] (take %1 %2) (drop %1 %2))", "user": "4f041de1535dcb61093f6ba5"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2) )", "user": "52eaba10e4b09f7907dd14c2"}, {"problem": 49, "code": "#(-> [(take % %2) (drop % %2)])", "user": "53a739b0e4b0ef122a8689d0"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "52d885afe4b09f7907dd1398"}, {"problem": 49, "code": "#(concat (vector (take %1 %2)) (vector (drop %1 %2)))", "user": "53a5c7ffe4b0ef122a8689c4"}, {"problem": 49, "code": "(fn f49 [x y]\n  (list (take x y) (drop x y)))", "user": "535aee3be4b04ce2eb3ed2aa"}, {"problem": 49, "code": "(fn [n coll] (vector (take n coll) (drop n coll)))", "user": "539b4268e4b0b51d73faaf1c"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "53a8d9efe4b047364c04442d"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "539c9d7ee4b0b51d73faaf2d"}, {"problem": 49, "code": "#(->[(take % %2) (drop % %2)])", "user": "539f4e9ee4b0ca733b974498"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "53aa1528e4b047364c04443f"}, {"problem": 49, "code": "(fn [x y] [(take x y) (drop x y)])", "user": "53874820e4b06839e8705f1b"}, {"problem": 49, "code": "(fn [x xs]\n  [(take x xs)\n   (drop x xs)])", "user": "5190772de4b09156e89b2a0a"}, {"problem": 49, "code": "#(vector (vec (take %1 %2)) (vec (drop %1 %2)))", "user": "53a19dece4b0ca733b9744c0"}, {"problem": 49, "code": "(fn [n xs]\n  (loop [xs xs\n         acc []\n         i 1]\n    (cond\n      (empty? xs) acc\n      (= i n) (list (conj acc (first xs)) (rest xs))\n      :else (recur (rest xs)\n                   (conj acc (first xs))\n                   (inc i)))))", "user": "51c116d4e4b0c9c822882942"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "5327c591e4b09d4e7a9b54ff"}, {"problem": 49, "code": "(fn [p r]\n  (list (take p r) (drop p r)))", "user": "53aaaf7ae4b047364c044444"}, {"problem": 49, "code": "#(vector (vec (take %1 %2)) (vec (drop %1 %2)))", "user": "53a7e3b9e4b047364c044423"}, {"problem": 49, "code": "(fn [n s] (vector (take n s) (drop n s)))", "user": "5396c94be4b0b51d73faaee3"}, {"problem": 49, "code": "(fn [n col]\n    (cons (take n col) (cons (drop n col)[])))", "user": "530c15f7e4b02e82168697d6"}, {"problem": 49, "code": "(fn mysplit [ret n s]\n    (if (= n 0)\n        (list ret s)\n        (mysplit (conj ret (first s)) (dec n) (rest s)))) []", "user": "53a94b63e4b047364c044434"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (nthnext coll n)])", "user": "53ac4719e4b047364c04445c"}, {"problem": 49, "code": "(fn [n xs] [(take n xs) (drop n xs)])", "user": "526e5159e4b03e8d9a4a7316"}, {"problem": 49, "code": "(fn [value collection]\n  (vector\n    (take value collection)\n    (drop value collection)))", "user": "52616198e4b03e8d9a4a705e"}, {"problem": 49, "code": "(fn [x y]\n   [(take x y)\n    (take-last (- (count y) x) y)])", "user": "51bf0ccee4b013aa0d74b811"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "53abf519e4b047364c044456"}, {"problem": 49, "code": "(fn [pos coll]\n  (vector (take pos coll)\n          (drop pos coll)))", "user": "53a55de5e4b0b62ce3005739"}, {"problem": 49, "code": "(fn [n s] [(take n s) (drop n s)])", "user": "50784ae5e4b0fc74642bff68"}, {"problem": 49, "code": "#(cons (take %1 %2) (list (drop %1 %2)))", "user": "53a0ab8ce4b0ca733b9744b3"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "536e56dbe4b0fc7073fd6e6c"}, {"problem": 49, "code": "(fn [n coll]\n  (list (take n coll) \n        (drop n coll)))", "user": "53a7771ee4b047364c04441b"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "538f4c1de4b0b51d73faae8c"}, {"problem": 49, "code": "(juxt take drop)", "user": "53b15e6ee4b047364c04448f"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "53a074a4e4b0ca733b9744af"}, {"problem": 49, "code": "(fn [head coll]\n  [(take head coll) (drop head coll)])", "user": "53ae16e2e4b047364c044472"}, {"problem": 49, "code": "(fn [n coll] (list (take n coll) (drop n coll)))", "user": "53ae0c50e4b047364c044471"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "53b182a5e4b047364c044491"}, {"problem": 49, "code": "#(vector (apply vector (take %1 %2)) (apply vector (drop %1 %2)))", "user": "5245e320e4b09dbe66b56177"}, {"problem": 49, "code": "(fn splt-at [c s]\n  (if (= c 0)\n    [[] s]\n    (let [[front back] (splt-at (dec c) (rest s))]\n      [(cons (first s) front) back])))", "user": "53acaf1fe4b047364c04445f"}, {"problem": 49, "code": "#(conj [] (into [] (take %1 %2)) (into [] (drop %1 %2)))", "user": "5391bc62e4b0b51d73faaea7"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "53acca34e4b047364c044460"}, {"problem": 49, "code": "(fn splt [n s] [(take n s) (drop n s)])", "user": "53b39d82e4b047364c0444a6"}, {"problem": 49, "code": "(fn [splitPoint coll] (loop [pos 0 firstArr [] secondArr coll] \n                        (if (not= pos splitPoint) \n                          (recur (inc pos) \n                                 (conj firstArr (first secondArr)) \n                                 (rest secondArr)) \n                          [firstArr secondArr] )))", "user": "53ad28ede4b047364c044462"}, {"problem": 49, "code": "(fn [n xs] [(take n xs) (drop n xs)])", "user": "4fcf1755e4b03432b189f40c"}, {"problem": 49, "code": "(fn [n l] [(take n l) (drop n l)])", "user": "5329b493e4b09d4e7a9b5515"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "5154c361e4b0179c5115f4e3"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "52d07cc5e4b07d0d72b273bb"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "52f0ea04e4b05e3f0be25ee6"}, {"problem": 49, "code": "(fn [index seqs]\n  (loop [result [] i index result2 seqs]\n    (if (= i 0)\n      [result result2]\n      ( recur (conj result (first result2)) (- i 1) (rest result2))\n    )\n  )\n )", "user": "53b492a5e4b047364c0444b6"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "5382704be4b06839e8705ed4"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "53b71b94e4b047364c0444cd"}, {"problem": 49, "code": "(fn [n l]\n  [(take n l) (drop n l)])", "user": "539c88e1e4b0b51d73faaf2c"}, {"problem": 49, "code": "(fn f [n s] (let [se (partition-all n s)] \n             (conj  (list (apply concat  (rest se))) (first se)) ) )", "user": "53b3ea79e4b047364c0444ab"}, {"problem": 49, "code": "(fn [n sq]\n     (loop [i n\n              sq sq\n              final []]\n           (if (zero? i)\n             (list final (vec sq))\n             (recur (dec i) (rest sq) (conj final (first sq))))))", "user": "4f867b25e4b033992c121c51"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "539ddf25e4b0b51d73faaf3e"}, {"problem": 49, "code": "(fn [n s] [(take n s) (drop n s)])", "user": "53b7c21ae4b047364c0444d4"}, {"problem": 49, "code": "(fn [n c] [(take n c)(drop n c)])", "user": "53b4bddae4b047364c0444b9"}, {"problem": 49, "code": "(fn [n col] [(take n col) (drop n col)])", "user": "53bb512ce4b047364c044503"}, {"problem": 49, "code": "(fn my-split \n  ([pos data]\n   (my-split pos data (vector) (vector) 0))\n  ([split-pos raw-data first-data second-data at-pos]\n   (if (empty? raw-data) (vector first-data second-data)\n     (my-split split-pos \n               (rest raw-data)\n               (if (< at-pos split-pos)\n                 (conj first-data (first raw-data))\n                 first-data)\n               (if (>= at-pos split-pos)\n                 (conj second-data (first raw-data))\n                 second-data)\n               (inc at-pos)))))", "user": "53bc279ae4b047364c04450e"}, {"problem": 49, "code": "(fn sp [n coll] [(take n coll) (drop n coll)])", "user": "520e37cfe4b066f3ea161c96"}, {"problem": 49, "code": "(fn [n coll]\n   [(take n coll) (drop n coll)])", "user": "53bdcf58e4b0d9a98559a6da"}, {"problem": 49, "code": "(fn split-seq [at s]\n  (let [isolated \n        (partition-by \n         #(= (.indexOf s %) at) \n         s)\n        [f s r] isolated]\n    (list f (concat s r))\n    ))", "user": "53bd6fcfe4b0d9a98559a6d0"}, {"problem": 49, "code": "#(list (take %1 %2)  (nthrest %2 %1))", "user": "53b2a7f8e4b047364c04449c"}, {"problem": 49, "code": "(fn sp\n  [n xs]\n  ((fn f\n     [i as bs]\n     (if (= i 0)\n       [as bs]\n       (f (- i 1)\n          (conj as (first bs))\n          (rest bs)))) n [] xs))", "user": "53c051a5e4b0c98a41f5ccae"}, {"problem": 49, "code": "(fn foo [idx se] \n  (cons \n   (seq (take idx se)) \n   (list  (drop idx se))))", "user": "5143824ae4b0b4fb4ace5f36"}, {"problem": 49, "code": "(fn my-split-at [n coll]\n  [(take n coll) (drop n coll)])", "user": "53bf0913e4b0c98a41f5cc99"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (take-last (- (count coll) n) coll)]\n)", "user": "53beacf9e4b0d9a98559a6e3"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "52b434c9e4b0c58976d9ad1c"}, {"problem": 49, "code": "(fn [n xs]\n  [(take n xs) (drop n xs)])", "user": "52cf1e25e4b07d0d72b2739c"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5310e968e4b08068f379ecdd"}, {"problem": 49, "code": "(fn [n s]\n  (list (take n s) (drop n s))\n  )", "user": "53c1ce3ee4b00fb29b221268"}, {"problem": 49, "code": "(fn [x y]\n  [ (take x y) (drop x y) ]\n  )", "user": "53aef31ce4b047364c04447b"}, {"problem": 49, "code": "(fn SplitSequence [n s]\n  [(take n s)\n   (drop n s)])", "user": "53b88e6ee4b047364c0444de"}, {"problem": 49, "code": "(fn [pos col] \n       [(take pos col)\n        (drop pos col)])", "user": "53c38b8ce4b00fb29b22127b"}, {"problem": 49, "code": "(fn [n s] [(take n s) (drop n s)])", "user": "53791ab7e4b06839e8705e4d"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "53aeb3ebe4b047364c044477"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "53bd8d27e4b0d9a98559a6d6"}, {"problem": 49, "code": "(fn [n s]\n  ((fn splitter [n s accum]\n     (if (zero? n)\n       [accum s]\n       (splitter (dec n) (rest s) (conj accum (first s))))) n s []))", "user": "537f8e7be4b06839e8705eb8"}, {"problem": 49, "code": "(fn my-split-at [n l]\n  (conj [] (into [] (drop-last (- (count l) n) l))\n        (into [] (drop n l))))", "user": "5018878ce4b029375d2a5056"}, {"problem": 49, "code": "(fn split-seq [n s] \n  \"Split a sequence s at index n\"\n  {:pre [(>= n 0)]}\n  (if (>= n (count s))\n    (list '() s)\n    (loop [left '() right s n n]\n      (if (= n 0)\n        (list (reverse left) right)\n        (recur (conj left (first right)) (rest right) (- n 1))))))", "user": "504f5804e4b0a02f9cffde72"}, {"problem": 49, "code": "(fn [pivot s]\n  (let [v (vec s)]\n    [(subvec v 0 pivot) (subvec v pivot)]))", "user": "53c649d3e4b00fb29b221297"}, {"problem": 49, "code": "(fn [x y]\n  [(take x y) (drop x y)])", "user": "53c74cfce4b00fb29b2212a7"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "53c6a2fde4b00fb29b22129d"}, {"problem": 49, "code": "#(vector \n       (vec (take %1 %2)) \n       (vec (drop %1 %2)))", "user": "53be3ee7e4b0d9a98559a6df"}, {"problem": 49, "code": "(juxt take drop)", "user": "538db083e4b0b51d73faae74"}, {"problem": 49, "code": "(fn [n xs]\n    (list (take n xs) (drop n xs)))", "user": "53c3397be4b00fb29b221279"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "53c126fce4b00fb29b22125b"}, {"problem": 49, "code": "#(conj [] (take % %2) (drop % %2))", "user": "53bed4b5e4b0c98a41f5cc94"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "53572767e4b04ce2eb3ed277"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "53cd4920e4b00fb29b2212de"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll)(drop n coll)])", "user": "53cdb2c4e4b00fb29b2212e5"}, {"problem": 49, "code": "(fn [n s] [(take n s) (drop n s)])", "user": "53ced9fee4b00fb29b2212f8"}, {"problem": 49, "code": "(fn [n c] (vector (take n c) (drop n c)))", "user": "53d17fdde4b00fb29b221315"}, {"problem": 49, "code": "(fn [x xs]\n   (conj [] (subvec xs 0 x) (subvec xs x))\n   )", "user": "53ca23e3e4b00fb29b2212c6"}, {"problem": 49, "code": "(fn [amount x]\n  [(take amount x) (take-last (- (count x) amount) x)])", "user": "514f6679e4b0b449e54b8df5"}, {"problem": 49, "code": "(fn [n coll]\n  (concat (list (take n coll)) (list (drop n coll))))", "user": "53b05a36e4b047364c044481"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "53c0bc5fe4b00fb29b221257"}, {"problem": 49, "code": "#(conj [] (take % %2) (drop % %2))", "user": "51c8f1d8e4b07ef393169e5d"}, {"problem": 49, "code": "(fn [x c]\n  [(take x c) (drop x c)])", "user": "53d032ace4b00fb29b221306"}, {"problem": 49, "code": "(fn [n coll] (vector (take n coll) (drop n coll)))", "user": "5227eacee4b0186687e23a5e"}, {"problem": 49, "code": "#(vector\n   (vec (take %1 %2))\n   (vec (drop %1 %2)))", "user": "53d612cbe4b0e771c3025452"}, {"problem": 49, "code": "(fn [n s] [(take n s) (drop n s)])", "user": "536c1531e4b0fc7073fd6e36"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "53d78b64e4b0e771c3025466"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "53ca41dae4b00fb29b2212c8"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "53d91412e4b0e771c3025474"}, {"problem": 49, "code": "(fn\n    [n init]\n    (loop [sofar []\n           remain init\n           N n]\n       (if (= N 0)\n         [(vec sofar) (vec remain)]\n         (recur (conj sofar (first remain)) (rest remain) (dec N)))))", "user": "53d6b266e4b0e771c3025459"}, {"problem": 49, "code": "#(for [f [take drop]] (f %1 %2))", "user": "523630eee4b05f3be1c7c8e8"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "53d6cf90e4b0e771c302545c"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "51febd40e4b0f1313d468a76"}, {"problem": 49, "code": "#(->[(take %1 %2) (drop %1 %2)])", "user": "4e6b8ac8535d8ccf87e9ff19"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "53da19fde4b0e771c3025484"}, {"problem": 49, "code": "#(merge [] (take %1 %2) (drop %1 %2))", "user": "53d40508e4b00fb29b221332"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "53ce4cd4e4b00fb29b2212ef"}, {"problem": 49, "code": "(fn my-split-at [n xs]\n    (let [f (take n xs ) l (take-last (- (count xs) n) xs)]\n      [f l]))", "user": "53b85932e4b047364c0444db"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "53cdbad1e4b00fb29b2212e6"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "53dcdde4e4b0d874e779ae24"}, {"problem": 49, "code": "(fn split\n  ([n lst]      (split (dec n) (rest lst) (list (first lst))))\n  ([n lst splt] (if (= 0 n)\n                  (concat (list splt) (list lst))\n                  (split (dec n) (rest lst) (concat splt (list (first lst)))))))", "user": "53ddd44be4b0d874e779ae2e"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "53d920d9e4b0e771c3025475"}, {"problem": 49, "code": "#(vector (vec (take %1 %2)) (vec (drop %1 %2)))", "user": "53de622ce4b0d874e779ae34"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "53dcf474e4b0d874e779ae25"}, {"problem": 49, "code": "(fn [n xs]\n  [(into [] (take n xs)) (into [] (drop n xs))])", "user": "4f856adfe4b033992c121c44"}, {"problem": 49, "code": "(fn [x y] (loop [output [] to_do y counter x]\n\t(if\n\t\t(zero? counter)\n\t\t[output to_do]\n\t\t(recur (conj output (first to_do)) (vec (rest to_do)) (dec counter))\n\t)))", "user": "53d5d24de4b0e771c302544a"}, {"problem": 49, "code": "(fn [idx col]\n  [(take idx col) (drop idx col)])", "user": "53a83c74e4b047364c044426"}, {"problem": 49, "code": "(fn [a b] [(take a b) (drop a b)])", "user": "51910da7e4b0f8ef0be96bf9"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "539dcb24e4b0b51d73faaf3d"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "53d0d7a9e4b00fb29b22130c"}, {"problem": 49, "code": "#(conj [] (into [] (take % %2)) (into [] (drop % %2)))", "user": "53dc05d4e4b094d41abdfefa"}, {"problem": 49, "code": "(juxt take drop)", "user": "53ded676e4b0d874e779ae3b"}, {"problem": 49, "code": "(fn [n s] [(take n s) (drop n s)])", "user": "53e19461e4b0d874e779ae59"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "53dc94c8e4b094d41abdfefc"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "53dfdf01e4b0d874e779ae46"}, {"problem": 49, "code": "#(concat [(take %1 %2)] [(drop %1 %2)])", "user": "53e2b212e4b036ad0777e3f4"}, {"problem": 49, "code": "#(vector \n       (vec (take %1 %2)) \n       (vec (drop %1 %2)))", "user": "53e051ece4b0d874e779ae4b"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll)  (drop n coll)] )", "user": "53e241a6e4b036ad0777e3f0"}, {"problem": 49, "code": "(fn [n coll] (vector (take n coll) (drop n coll)))", "user": "53da8fede4b0e771c30254a3"}, {"problem": 49, "code": "(juxt take drop)", "user": "53d4dadde4b00fb29b221337"}, {"problem": 49, "code": "(fn [idx col] [(take idx col) (drop idx col)])", "user": "53d5e45ae4b0e771c302544e"}, {"problem": 49, "code": "#( vector  \n   (vec (take %1 %2) ) \n   ( vec (drop %1 %2) ) )", "user": "516d227fe4b06f078fab252d"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "53dadf1de4b0e771c30254ad"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "530bae80e4b02e82168697d0"}, {"problem": 49, "code": "(fn [at l] [(into [] (take at l)) (into [] (drop at l))])", "user": "53d28800e4b00fb29b22131e"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "53a5737ee4b0b62ce300573a"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "53e4fa2ce4b036ad0777e454"}, {"problem": 49, "code": "(fn [n lst] (list (take n lst) (drop n lst)))", "user": "52f304b4e4b05e3f0be25f07"}, {"problem": 49, "code": "(fn x [a xs] \n  [(take a xs) (drop a xs)])", "user": "525890f7e4b0cb4875a45cb5"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "538ca203e4b0b51d73faae5f"}, {"problem": 49, "code": "(fn [n s] [(take n s)(drop n s)])", "user": "53e150e5e4b0d874e779ae53"}, {"problem": 49, "code": "(fn [n x] \n  (loop [y x z nil m n] \n    (if (= m 0) \n      (list (reverse z) y) \n      (recur (rest y) (conj z (first y)) (dec m)))))", "user": "53e91473e4b036ad0777e495"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "53d5a63be4b0e771c3025449"}, {"problem": 49, "code": "#(list (drop-last (- (count %2) %1)  %2) (drop %1 %2))", "user": "53d88bd5e4b0e771c302546e"}, {"problem": 49, "code": "#(cons (take %1 %2) (list (drop %1 %2)))", "user": "52ba2639e4b07a9af57922cb"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "53e30fcae4b036ad0777e3fc"}, {"problem": 49, "code": "(fn [n coll]\n  (vector (take n coll) (nthrest coll n)))", "user": "53d2afede4b00fb29b221321"}, {"problem": 49, "code": "(fn [n list]\n  (cons (take n list) (cons (drop n list) '())))", "user": "4ea8570f535d7eef308072f8"}, {"problem": 49, "code": "#(list (take % %2) (take-last (- (count %2) %) %2))", "user": "53e76bb2e4b036ad0777e47d"}, {"problem": 49, "code": "(fn my-split-at [n lyst]\n  (let [a (take n lyst)\n        b (drop n lyst)]\n    [(vec a) (vec b)]))", "user": "53e27bf1e4b036ad0777e3f2"}, {"problem": 49, "code": "(fn [n xs]\n  (vector (vec (take n xs)) (vec (drop n xs))))", "user": "51b8d3d5e4b050a1176cd69d"}, {"problem": 49, "code": "(fn [i s] [(take i s) (drop i s)])\n;(juxt take drop)", "user": "53ecac57e4b0d648e757f4b3"}, {"problem": 49, "code": "(juxt take drop)", "user": "5343753ae4b084c2834f4a1b"}, {"problem": 49, "code": "#(cons  (take % %2) (list (drop % %2)))", "user": "53e9a15be4b036ad0777e4ae"}, {"problem": 49, "code": "(fn [n coll] (vector (take n coll) (drop n coll)))", "user": "53dfbc75e4b0d874e779ae44"}, {"problem": 49, "code": "(fn[n seq] (conj [] (vec (take n seq)) (vec (nthrest seq n))))", "user": "53b952eee4b047364c0444e6"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "53ee7f2ee4b0d648e757f4cf"}, {"problem": 49, "code": "(fn my-split-at [n s]\n  [(take n s) (drop n s)])", "user": "53edb464e4b0d648e757f4c7"}, {"problem": 49, "code": "(fn [n sq] (list (take n sq) (drop n sq)))", "user": "53ea72b6e4b036ad0777e4e5"}, {"problem": 49, "code": "#(list (take %1 %2)\n       (drop %1 %2))", "user": "534bfc71e4b084c2834f4a88"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "50856bd1e4b004985b776e4c"}, {"problem": 49, "code": "(fn [n c]\n  [(take n c)\n   (drop n c)])", "user": "53eb8ceae4b036ad0777e4fb"}, {"problem": 49, "code": "(fn [n xs] \n   (list (subvec xs 0 n)\n         (subvec xs n)))", "user": "52eb2ec9e4b0705949c44439"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "53e4b5a3e4b036ad0777e44b"}, {"problem": 49, "code": "(juxt take drop)", "user": "53ea5307e4b036ad0777e4e2"}, {"problem": 49, "code": "(fn [split c]\n  [(subvec c 0 split) (subvec c split)])", "user": "523578efe4b0a643f2dcb74c"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "53f152bce4b0742d9025b0dc"}, {"problem": 49, "code": "(fn [point coll]\n  (loop [i 0 acc1 coll acc2 []]\n    (println acc1 acc2)\n    (if (< i point)\n      (recur (inc i) (rest acc1) (conj acc2 (first acc1)))\n        [acc2 acc1])))", "user": "53f2370ee4b0742d9025b0e7"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5052ab7ee4b0a561d07d8f20"}, {"problem": 49, "code": "(fn [i coll]\n        (let [i (- (/ (count coll) 2) 1)])\n        [(take i coll) (drop i coll)]\n      )", "user": "53ecd01fe4b0d648e757f4b9"}, {"problem": 49, "code": "(fn [n c]\n  [(take n c) (drop n c)])", "user": "53e3f7a8e4b036ad0777e408"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "528d6b10e4b0239c8a67aec3"}, {"problem": 49, "code": "(fn my-split-at\n  ([n xs] (my-split-at n xs []))\n  ([n xs front]\n    (cond\n      (empty? xs) (list front xs)\n      (= n 0)     (list front xs)\n      :else       (my-split-at (dec n) (rest xs) (conj front (first xs)))\n    )\n  )\n)", "user": "53edb628e4b0d648e757f4c8"}, {"problem": 49, "code": "(fn [n s]\n                   [(take n s) (drop n s)])", "user": "53f592b7e4b0db01ade6f9d0"}, {"problem": 49, "code": "(fn[num s]\n   [\n     (vec (take num s))\n     (vec  (nthrest s num))]\n     )", "user": "53d10553e4b00fb29b22130f"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "53968a70e4b0b51d73faaee0"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "537b1083e4b06839e8705e64"}, {"problem": 49, "code": "(fn [pos values]\n  (vector (take pos values) (drop pos values)))", "user": "53f50c03e4b0db01ade6f9ca"}, {"problem": 49, "code": "(fn [n coll]\n  [(into [] (take-while #(< (.indexOf coll %) n) coll))\n   (into [] (drop-while #(< (.indexOf coll %) n) coll))])", "user": "53ea3a63e4b036ad0777e4dc"}, {"problem": 49, "code": "(fn [n xs] [(take n xs) (drop n xs)])", "user": "513e8141e4b02b2a3d8235c1"}, {"problem": 49, "code": "(juxt take drop)", "user": "53f035c2e4b0742d9025b0d2"}, {"problem": 49, "code": "(partial (fn split-acc [acc at ls]\n  (if (zero? at)\n    [acc ls]\n    (split-acc (conj acc (first ls)) (dec at) (rest ls)))) [])", "user": "53d87449e4b0e771c302546d"}, {"problem": 49, "code": "#(let [cnt %1\n       head (take cnt %2)\n       tail (drop cnt %2)]\n   [head tail]\n )", "user": "53f7820be4b0de5c41848560"}, {"problem": 49, "code": "(fn[a b](list(take a b)(drop a b)))", "user": "53ed2fafe4b0d648e757f4c1"}, {"problem": 49, "code": "(fn [x l] [(take x l) (drop x l)])", "user": "53f6d555e4b0db01ade6f9e5"}, {"problem": 49, "code": "(fn [n coll] (concat (list (take n coll)) (list (drop n coll))))", "user": "53f17931e4b0742d9025b0dd"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "53e92aafe4b036ad0777e49a"}, {"problem": 49, "code": "(fn [n, coll]\n  (list\n    (take n coll)\n    (drop n coll)))", "user": "53bd7080e4b0d9a98559a6d1"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "53cd421ce4b00fb29b2212dd"}, {"problem": 49, "code": "(fn[n s]\n   [(take n s)\n    (drop n s)])", "user": "5398123ee4b0b51d73faaef3"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5377a23ce4b06839e8705e39"}, {"problem": 49, "code": "(fn [k coll] [(take k coll) (drop k coll)])", "user": "53ed6976e4b0d648e757f4c4"}, {"problem": 49, "code": "(fn [n se]\n   [(vec (take n se)) (vec (drop n se))])", "user": "53214efbe4b09d4e7a9b54b2"}, {"problem": 49, "code": "(fn \n  [n coll]\n  (let [x (- (count coll) n)]\n    (mapv vec [(drop-last x coll) (take-last x coll)])))", "user": "53e3e852e4b036ad0777e407"}, {"problem": 49, "code": "(fn [ind coll ]\n   (vector (vec (take ind coll))\n   (vec (drop ind coll))))", "user": "53f75957e4b0de5c4184855d"}, {"problem": 49, "code": "(fn [x y] (vector (vec (take x y)) (vec (drop x y))))", "user": "53fc8424e4b0de5c418485b3"}, {"problem": 49, "code": "#(vector(take %1 %2) (drop %1 %2))", "user": "53f3a4ace4b0742d9025b0f7"}, {"problem": 49, "code": "(fn[n sq] [(take n sq) (drop n sq)])", "user": "53e9681de4b036ad0777e4a4"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "53f35c34e4b0742d9025b0f4"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "53fb5256e4b0de5c4184857f"}, {"problem": 49, "code": "(fn [n s] (cons (drop-last (- (count s) n) s) (list (drop n s))))", "user": "53d86564e4b0e771c302546b"}, {"problem": 49, "code": "(fn [x y] (vector (take x y) (drop x y)) )", "user": "53f1c05ee4b0742d9025b0e1"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "53dd37aee4b0d874e779ae28"}, {"problem": 49, "code": "(fn [n s] [(take n s) (drop n s)])", "user": "53fe1c3be4b0de5c418485f2"}, {"problem": 49, "code": "(fn [x xs] [(take x xs) (drop x xs)])", "user": "525b4e8de4b0cb4875a45d0f"}, {"problem": 49, "code": "(fn [n xs]\n  (letfn\n      [(go [ys i rs]\n         (cond\n          (empty? ys) rs\n          (< 0 i) (go (rest ys) (dec i) (conj rs (first ys)))\n          :else [rs ys]))]\n    (go xs n [])))", "user": "53ef7f77e4b0742d9025b0ce"}, {"problem": 49, "code": "(juxt take drop)", "user": "53fddd71e4b0de5c418485eb"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "53fcdd1ae4b0de5c418485dd"}, {"problem": 49, "code": "(fn [x y](list (take x y) (drop x y)))", "user": "53fdc4b8e4b0de5c418485ea"}, {"problem": 49, "code": "(juxt take drop)", "user": "5400fc30e4b0de5c4184861b"}, {"problem": 49, "code": "(fn [p s]\n  (loop [b [] r s i 0]\n    (if (= i p)\n      [b r]\n      (recur (conj b (first r)) (rest r) (inc i)))))", "user": "53f77b6ae4b0de5c4184855f"}, {"problem": 49, "code": "#(into [(into [] (take % %2))] [(into [] (drop % %2))])", "user": "538d70abe4b0b51d73faae6e"}, {"problem": 49, "code": "(fn [n s] (let [k (group-by #(> n (.indexOf s %)) s)]\n                 (vector (k true) (k false))))", "user": "53e2ac1ae4b036ad0777e3f3"}, {"problem": 49, "code": "(fn split-sequence [at-index coll]\n  (letfn [(split-sequence* [first-part curr-index [x & xs :as inter-coll]]\n            (if (= curr-index at-index)\n              [first-part inter-coll]\n              (recur (conj first-part x) (inc curr-index) xs)))]\n    (split-sequence* [] 0 coll)))", "user": "53fd66a4e4b0de5c418485e3"}, {"problem": 49, "code": "#(vector \n       (vec (take %1 %2)) \n       (vec (drop %1 %2)))", "user": "524b827ce4b09eba1c0223d7"}, {"problem": 49, "code": "(fn [n xs]\n  [(take n xs) (drop n xs)])", "user": "53f5666ee4b0db01ade6f9cf"}, {"problem": 49, "code": "(fn mysplitat\n  [index myseq]\n  (list (keep-indexed #(if (< %1 index)%2) myseq)\n        (keep-indexed #(if (>= %1 index)%2) myseq))\n)", "user": "53fe459ae4b0de5c418485f4"}, {"problem": 49, "code": "(fn [x coll]\n  [(take x coll)(drop x coll)])", "user": "53bf9cfbe4b0c98a41f5cca4"}, {"problem": 49, "code": "(fn \n  [n coll]\n  [(take n coll) (drop n coll)])", "user": "5401aefbe4b0df28a13c62c7"}, {"problem": 49, "code": "(fn [x coll] \n   (loop [cnt 0 icoll coll acc []] \n     (if (= cnt x) [acc (vec icoll)] \n         (recur (inc cnt) (rest icoll) (conj acc (first icoll))))))", "user": "53c06438e4b0c98a41f5ccb0"}, {"problem": 49, "code": "#(list (into [] (take % %2))(into [] (drop % %2)))", "user": "53350264e4b0656e627bfd73"}, {"problem": 49, "code": "#(conj [] (take % %2) (drop % %2))", "user": "53fb4843e4b0de5c4184857d"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "53fcb8f7e4b0de5c418485d4"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "53fc713be4b0de5c418485a0"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "52a7fec0e4b0c58976d9ac25"}, {"problem": 49, "code": "(fn [n coll] (list (take n coll) (drop n coll)))", "user": "4ff4bed0e4b0678c553fc35f"}, {"problem": 49, "code": "(fn [size coll]\n  (loop [fst [] rst coll]\n    (if (= (count fst) size)\n      [(reverse fst) rst]\n      (recur (cons (first rst) fst) (rest rst)))))", "user": "4daeff24edd6309eace4d16e"}, {"problem": 49, "code": "(fn test [n coll]\n  [(subvec coll 0 n) (subvec coll n)]\n)", "user": "54021f13e4b0df28a13c62cc"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "540b2dcbe4b0addc1aec66f4"}, {"problem": 49, "code": "(fn mysplit [n xs]\n  ((juxt take drop) n xs))", "user": "53e8c684e4b036ad0777e48b"}, {"problem": 49, "code": "(juxt take drop)", "user": "4f392fc8e4b0e243712b1ee7"}, {"problem": 49, "code": "(fn [n se]\n  (conj [] (vec (take n se)) (vec (drop n se))))", "user": "52cda980e4b07d0d72b2737b"}, {"problem": 49, "code": "(fn [n s] [(take n s) (drop n s)])", "user": "5251b11be4b0541d1855b87b"}, {"problem": 49, "code": "(fn [n coll]\n  (vector \n   (take n coll)\n   (drop n coll)))", "user": "540d5085e4b0addc1aec670e"}, {"problem": 49, "code": "(fn [at xs] [(take at xs) (drop at xs)])", "user": "540d7dd1e4b0addc1aec6713"}, {"problem": 49, "code": "(fn [n s] [(take n s) (nthrest s n)])", "user": "54084784e4b0addc1aec66c9"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "54023bbfe4b0df28a13c62cd"}, {"problem": 49, "code": "(fn [x y] [(take x y) (nthrest y x)])", "user": "540479e7e4b0addc1aec665a"}, {"problem": 49, "code": "(fn [n xs]\n  (reduce #(if (> n (count (first %1)))\n             (assoc %1 0 (conj (first %1) %2))\n             (assoc %1 1 (conj (second %1) %2)))\n          [[] []] xs))", "user": "5097ea89e4b087ccf61a7af4"}, {"problem": 49, "code": "(fn sk-split-at [n xs]\n  (vector (vec (take n xs))\n          (vec (drop n xs))))", "user": "51d42f44e4b013d740b70ddb"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "540f2c48e4b0addc1aec6727"}, {"problem": 49, "code": "(fn splitter [coll point]\n  [(take coll point) (drop coll point)])", "user": "53eaa804e4b036ad0777e4ea"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2) )", "user": "53b9bb15e4b047364c0444ed"}, {"problem": 49, "code": "(fn [n coll]\n   (list (take n coll) (drop n coll)))", "user": "54094824e4b0addc1aec66da"}, {"problem": 49, "code": "(fn [n x] [(take n x) (drop n x)])", "user": "5409f8eae4b0addc1aec66e6"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "540e17c3e4b0addc1aec6719"}, {"problem": 49, "code": "(fn mysplit\n  [n coll]\n  [(take n coll ) (drop n coll)])", "user": "54091b82e4b0addc1aec66d5"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "52bc0dade4b07a9af57922f1"}, {"problem": 49, "code": "(fn [a b]\n  (list (take a b) (drop a b)))", "user": "541475afe4b01498b1a719eb"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "540e0637e4b0addc1aec6717"}, {"problem": 49, "code": "(fn [n sq]\n  [(take n sq) (drop n sq)])", "user": "540c54a7e4b0addc1aec6700"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "4fad9da0e4b081705acca23c"}, {"problem": 49, "code": "(fn [cut-off coll]\n   (vector (into [] (take cut-off coll))\n           (into [] (drop cut-off coll))))", "user": "53f6bfd9e4b0db01ade6f9e4"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "53e76728e4b036ad0777e47c"}, {"problem": 49, "code": "(fn [n c] [(subvec c 0 n) (subvec c n)])", "user": "541096bde4b01498b1a719b2"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "4fec08e8e4b0681fd128dc9d"}, {"problem": 49, "code": "(fn\n  [i s]\n  [(take i s) (drop i s)])", "user": "540efe2ee4b0addc1aec6724"}, {"problem": 49, "code": "(fn foo [x xs]\n  (conj [(subvec xs 0 x)] \n        (subvec xs x (count xs))))", "user": "54133900e4b01498b1a719de"}, {"problem": 49, "code": "(fn [idx coll] (map (fn [x] (map (fn [y] (first y)) x))\n                           (vals (group-by #(> (second %) idx)\n                                           (map vector coll (iterate inc 1))))))", "user": "526698c9e4b03e8d9a4a7144"}, {"problem": 49, "code": "(fn [n c] [(take n c)(drop n c)])", "user": "54139cd4e4b01498b1a719e3"}, {"problem": 49, "code": "#(into [] (list (take %1 %2) (drop %1 %2)))", "user": "5417385fe4b01498b1a71a08"}, {"problem": 49, "code": "(fn [n s]\n  [(take n s) (drop n s)]\n)", "user": "540f09b9e4b0addc1aec6725"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "54125eeee4b01498b1a719d3"}, {"problem": 49, "code": "#(vector (take % %2) (nthrest %2 %))", "user": "53e0001be4b0d874e779ae48"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5412d5d2e4b01498b1a719d9"}, {"problem": 49, "code": "(fn [n s]\n  [(take n s) (drop n s)])\n\n;#(vector (take % %2) (drop % %2))", "user": "54187e84e4b01498b1a71a1b"}, {"problem": 49, "code": "#(into (list (subvec %2 %1)) (list (subvec %2 0 %1)))", "user": "541619e8e4b01498b1a719f9"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "52382d91e4b0fae3832e99f0"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "541b37d2e4b01498b1a71a64"}, {"problem": 49, "code": "(fn [n l] [(take n l) (drop n l)])", "user": "5282f54be4b0239c8a67ada0"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "54149f2fe4b01498b1a719ec"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "52541fe6e4b0541d1855b964"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "52edc72de4b05e3f0be25ebb"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "541ae7dbe4b01498b1a71a61"}, {"problem": 49, "code": "#(list  (take %1 %2) (drop %1 %2))", "user": "541f5b37e4b01498b1a71a97"}, {"problem": 49, "code": "(fn [x y] [(take x y) (drop x y)])", "user": "511036c5e4b04c71fce993ee"}, {"problem": 49, "code": "(fn [n c]\n  [(take n c) (drop n c)])", "user": "52d6d490e4b09f7907dd1369"}, {"problem": 49, "code": "(fn [els lis]\n  (list (take els lis) (nthrest lis els)))", "user": "541c1e46e4b01498b1a71a70"}, {"problem": 49, "code": "#(conj [] (vec (take  % %2)) (vec (drop % %2)))", "user": "53844970e4b06839e8705eef"}, {"problem": 49, "code": "(fn my-split [index coll]\n  (loop [left [] right coll n index]\n    (if (= 0 n)\n      [left right]\n      (recur (conj left (first right)) (rest right) (dec n)))))", "user": "4ff0e01fe4b0678c553fc328"}, {"problem": 49, "code": "(fn [at numbers]\n  (let [left (take at numbers)\n        right (drop at numbers)]\n    (list left right)))", "user": "5412ef7ee4b01498b1a719da"}, {"problem": 49, "code": "(fn [x y] [(filter #(when (< (.indexOf y %) x) %) y) (filter #(when (>= (.indexOf y %) x) %) y)])", "user": "53ed03f0e4b0d648e757f4bb"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "53fd0a22e4b0de5c418485e1"}, {"problem": 49, "code": "(fn [n xs] \n  (loop [n n\n         xs xs\n         acc []]\n    (if (= n 0)\n      [acc xs]\n      (recur (dec n)\n             (rest xs)\n             (conj acc (first xs))))))", "user": "540961e9e4b0addc1aec66db"}, {"problem": 49, "code": "(juxt take drop)", "user": "54213a8fe4b01498b1a71aaf"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "541168dee4b01498b1a719c3"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "4eb3fcba535d7eef30807359"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "54246fcce4b01498b1a71aed"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "516ee939e4b06aac486e5b34"}, {"problem": 49, "code": "(fn [split, xs] (vector (take split xs) (drop split xs)))", "user": "5409a12fe4b0addc1aec66df"}, {"problem": 49, "code": "(fn [n s]\n  [(take n s) (drop n s)])", "user": "5424c523e4b01498b1a71b03"}, {"problem": 49, "code": "(fn [n s] [(take n s) (drop n s)])", "user": "54227fc6e4b01498b1a71ac0"}, {"problem": 49, "code": "(fn [x coll] [(take x coll) (drop x coll)])", "user": "51c1b644e4b0d204dbe2ca12"}, {"problem": 49, "code": "(fn [n l] \n  ((fn rec [n a b] \n     (if (= n 0) [a b] (rec (- n 1) (conj a (first b)) (rest b))))\n     n [] l))", "user": "542ab1afe4b01498b1a71b48"}, {"problem": 49, "code": "#(list \n  (take % %2) \n  (drop % %2)\n)", "user": "54258a7fe4b01498b1a71b0c"}, {"problem": 49, "code": "(fn [a x] [ (take a x), (take-last (- (count x) a) x)])", "user": "5425d454e4b01498b1a71b13"}, {"problem": 49, "code": "(fn my-split [index coll]\n   [(take index coll) (take-last (- (count coll) index) coll)]\n   )", "user": "5429986ce4b01498b1a71b3b"}, {"problem": 49, "code": "#(vec (list (vec (reverse (drop (- (count %2) %1) (reverse %2)))) (vec (drop %1 %2))))", "user": "54296802e4b01498b1a71b38"}, {"problem": 49, "code": "(fn [n col]\n  (list (take n col) (drop n col)))", "user": "542c22bde4b0dad94371f29e"}, {"problem": 49, "code": "#(let [tk (take %1 %2) dr (drop %1 %2)] [tk dr])", "user": "54302691e4b0dad94371f2d7"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "540e8d13e4b0addc1aec671e"}, {"problem": 49, "code": "(juxt take drop)", "user": "53a01fb1e4b0ca733b9744a6"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "542f574be4b0dad94371f2d0"}, {"problem": 49, "code": "(juxt take drop)", "user": "526c669be4b03e8d9a4a728f"}, {"problem": 49, "code": "(fn [n seq]\r\n   (loop [s seq\r\n          index n\r\n          acc []]\r\n     (if (= 0 index)\r\n       [acc (vec s)]\r\n       (recur (next s) (dec index) (conj acc (first s)) ))))", "user": "542b764ae4b0dad94371f28d"}, {"problem": 49, "code": "(fn [n col] \n  [(take n col) (nthrest col n)])", "user": "54194782e4b01498b1a71a29"}, {"problem": 49, "code": "(fn [n coll] \n\t[(take n coll) (drop n coll)])", "user": "54312081e4b0dad94371f2e3"}, {"problem": 49, "code": "(fn [splitAt, elements]\n  [(subvec elements 0 splitAt) (subvec elements splitAt)])", "user": "54336443e4b0b6b47310fcde"}, {"problem": 49, "code": "(fn splt [x ys]\n  (loop [pos x\n         a ys\n         curr 1\n         output []]\n      (if (= curr pos)\n        (conj [(conj output (first a))] (vec (rest a)))\n        (recur pos (rest a) (+ 1 curr) (conj output (first a)))\n        )\n    )\n  )", "user": "53b685e0e4b047364c0444c7"}, {"problem": 49, "code": "(fn _ [n l]\n    (let [taken (take n l)]\n      (if-not (empty? taken)\n        (list taken  (drop n l))\n        )))", "user": "5433a07be4b0b6b47310fce0"}, {"problem": 49, "code": "(fn [s v]\n[ (vec (take s v)) (vec (drop s v))]\n )\n\n; or\n;(fn [s v]\n;[(take s v) (drop s v)]\n; )", "user": "5412646de4b01498b1a719d4"}, {"problem": 49, "code": "(fn [n c] [(take n c) (drop n c)])", "user": "53f78944e4b0de5c41848561"}, {"problem": 49, "code": "(fn [n x] (loop [\n\t                 left [] \n\t                 remaining x\n\t                 n n]\n\t            (if (= (count left) n) \n\t              (vector left (into [] remaining) )\n\t              (recur (into left (vector(first remaining))) (drop 1 remaining)  n)\n\t             )\n\t  ) \n\t)", "user": "542baf7ce4b0dad94371f291"}, {"problem": 49, "code": "(fn [at my-seq]\n  [(take at my-seq) (drop at my-seq)])", "user": "53a511aae4b0b62ce3005735"}, {"problem": 49, "code": "(juxt #(first (partition %1 %2)) #(nthrest %2 %1))", "user": "532a033be4b09d4e7a9b551f"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "54349368e4b0b6b47310fcf1"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5423dc6ae4b01498b1a71ad5"}, {"problem": 49, "code": "(fn [n l] [(take n l) (drop n l)])", "user": "53e745a1e4b036ad0777e479"}, {"problem": 49, "code": "#(conj [] (subvec %2 0 %1) (subvec %2 %1 (count %2)))", "user": "54344721e4b0b6b47310fcea"}, {"problem": 49, "code": "(fn [n x] (conj [] (vec (take n x)) (vec (drop n x))))", "user": "52ee0de4e4b05e3f0be25ec1"}, {"problem": 49, "code": "(fn [x y] [(take x y) (drop x y)])", "user": "542c2de0e4b0dad94371f29f"}, {"problem": 49, "code": "(fn split [n s]\n  (list (take n s) (nthrest s n)))", "user": "541709b0e4b01498b1a71a06"}, {"problem": 49, "code": "(fn [n x] \n   (list (take n x) \n         (nthrest x n))\n   )", "user": "51eda45ce4b0bb507043159b"}, {"problem": 49, "code": "#(do [(take %1 %2) (drop %1 %2)])", "user": "54397533e4b032a45b86931d"}, {"problem": 49, "code": "(fn [n coll] [(vec (take n coll)) (vec (drop n coll))])", "user": "540e97f9e4b0addc1aec671f"}, {"problem": 49, "code": "(fn mySplit-at [n coll] (vector (take n coll) (drop n coll)))", "user": "542c1f73e4b0dad94371f29d"}, {"problem": 49, "code": "(juxt take drop) ;#(vector (take % %2) (drop % %2)) ;", "user": "54380631e4b032a45b86930f"}, {"problem": 49, "code": "#(let [a (subvec %2 0 %) b (subvec %2 % (count %2))] (list a b))", "user": "542c44f8e4b0dad94371f2a1"}, {"problem": 49, "code": "(fn [n lst]\n  (conj\n   (conj '() (drop n lst)) (take n lst)))", "user": "53da3fcde4b0e771c3025497"}, {"problem": 49, "code": "#(identity [(take %1 %2) (drop %1 %2)])", "user": "542edb4ae4b0dad94371f2c8"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "543a68d3e4b032a45b869326"}, {"problem": 49, "code": "(fn [counter col]\n  (loop [part []\n         res  col\n         n    counter]\n    (if (= n 0)\n      [part res]\n      (recur (conj part (first res))\n             (rest res)\n             (dec n)))))", "user": "53f67bcfe4b0db01ade6f9e1"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "52b2f9cae4b0c58976d9acfb"}, {"problem": 49, "code": "(fn [n xs]\n  [(take n xs) (drop n xs)])", "user": "524ad140e4b09eba1c0223a9"}, {"problem": 49, "code": "(fn [n sequence]\n      (let [start (take n sequence)\n            end (drop n sequence)]\n        [start end]))", "user": "53f891eee4b0de5c4184856d"}, {"problem": 49, "code": "#(concat (list (take % %2)) (list (drop % %2)))", "user": "543c39e0e4b032a45b86933d"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "54324be1e4b0dad94371f2ed"}, {"problem": 49, "code": "(fn [index l] \n  (let [tmp (partition-all index l)]\n    (vector (vec (first tmp)) (if (vector? (first l))\n                                (vector (vec (flatten (next tmp))))\n                                (vec (flatten (next tmp)))))))", "user": "539043e7e4b0b51d73faae97"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "543f854fe4b032a45b86935b"}, {"problem": 49, "code": "(fn [at coll]\n  (reduce-kv #(if (< %2 at)\n                [(conj (first %1) %3) (last %1)]\n                [(first %1) (conj (last %1) %3)])\n             [[][]]\n             coll))", "user": "5370d152e4b0fc7073fd6e9d"}, {"problem": 49, "code": "(fn [i data] [(take i data) (drop i data)])", "user": "53765e1ae4b06839e8705e23"}, {"problem": 49, "code": "#(vector (vec (take %1 %2)) (vec (drop %1 %2)))", "user": "543d5c61e4b032a45b86934d"}, {"problem": 49, "code": "(fn [x y]\n  [(take x y) (drop x y)]\n  )", "user": "5372c830e4b06d7f452d9dff"}, {"problem": 49, "code": "(fn [n c] [(take n c) (drop n c)])", "user": "543d07e8e4b032a45b869346"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "53c1b787e4b00fb29b221266"}, {"problem": 49, "code": "#(identity [(take % %2) (take-last (- (count %2) %) %2)])", "user": "52f8b86de4b047fd55836fdb"}, {"problem": 49, "code": "(fn [idx lst] (list (take idx lst) (drop idx lst)))", "user": "543d89dfe4b032a45b869350"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "542d2385e4b0dad94371f2b2"}, {"problem": 49, "code": "(fn [n l] [(take n l) (drop n l)])", "user": "54431b6ee4b032a45b869385"}, {"problem": 49, "code": "(juxt take drop)", "user": "533a399de4b0e30313ee6cb9"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "54448e84e4b032a45b869393"}, {"problem": 49, "code": "(fn [n coll]\n  (let [l (count coll)\n        r (- l n)]\n    [(vec (take n coll)) (vec (take-last r coll))]))", "user": "4e526cc4535d302ef430da74"}, {"problem": 49, "code": "(fn [i l]\n  [(take i l) (drop i l)])", "user": "53577049e4b04ce2eb3ed27b"}, {"problem": 49, "code": "(fn [n s] (conj '() (drop n s) (take n s)))", "user": "5441f5e8e4b032a45b869375"}, {"problem": 49, "code": "(juxt take drop)", "user": "50666699e4b03d366d7cb2b0"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "52561295e4b0541d1855ba03"}, {"problem": 49, "code": "(fn my-split-at [x seq]\n  [(take x seq) (take-last (- (count seq) x) seq)])", "user": "540271aee4b0df28a13c62d0"}, {"problem": 49, "code": "(fn [i c] [(take i c) (drop i c)])", "user": "530a6cbae4b02e82168697be"}, {"problem": 49, "code": "(fn [n coll] (list (take n coll) (drop n coll)))", "user": "542cb77ae4b0dad94371f2aa"}, {"problem": 49, "code": "(fn [n xs]\n  [(take n xs) (drop n xs)])", "user": "5392bfdee4b0b51d73faaeb2"}, {"problem": 49, "code": "(fn [n xs] (conj [] (take n xs) (drop n xs)))", "user": "5447e08ce4b032a45b8693c3"}, {"problem": 49, "code": "(fn [p c]\n  [(take p c) (take-last (- (count c) p)c)]\n  )", "user": "540997ede4b0addc1aec66dd"}, {"problem": 49, "code": "(fn foo [y x] \n  (conj  (list (reverse (take (- (count x) y) (reverse x))))  (take y x)   )\n)", "user": "54078851e4b0addc1aec66bd"}, {"problem": 49, "code": "(fn [n coll] \n     (loop [n n coll coll acc []]\n       (if (zero? n)\n         [acc coll]\n         (recur (dec n) (rest coll) (conj acc (first coll))))))", "user": "51bd255ce4b0df1216cefd94"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5267c74be4b03e8d9a4a7183"}, {"problem": 49, "code": "(fn [n c] (list (take n c) (drop n c)))", "user": "54487527e4b032a45b8693cc"}, {"problem": 49, "code": "#(merge [(subvec %2 0  %)] (subvec %2 %))", "user": "52ee9ac7e4b05e3f0be25ec9"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "54461393e4b032a45b8693a5"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "544e8369e4b0e39780006987"}, {"problem": 49, "code": "(fn [n col]  (vector (take n col) (drop n col)))", "user": "544ac9b5e4b0e39780006959"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5446ebc2e4b032a45b8693b8"}, {"problem": 49, "code": "(fn [val coll]\n  (loop [front []\n         count val\n         res coll]\n    (if (> count 0)\n      (recur (conj front (first res))\n             (dec count)\n             (rest res))\n      [front res])))", "user": "53322cece4b019098a6f8b73"}, {"problem": 49, "code": "(fn [x sek]\n  (list\n   ((fn dd [x sek]\n      (if (= x 0) nil (cons (first sek) (dd (- x 1) (rest sek))))\n      ) x sek)\n   \n   ((fn dd [x sek]\n      (if (= x 0) sek (dd (- x 1) (rest sek)))\n      ) x sek)\n   \n   )\n  )", "user": "544e1794e4b0e39780006980"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "544b699ce4b0e39780006964"}, {"problem": 49, "code": "(fn takesplit [n s]\n  [(take n s) (drop n s)])", "user": "54468fd3e4b032a45b8693b2"}, {"problem": 49, "code": "#(list (take %1 %2) (take-last (- (count %2) %1) %2))", "user": "52c45ac8e4b0c2d177d620d9"}, {"problem": 49, "code": "(fn [x xs]\n  [(take x xs) (drop x xs)])", "user": "542d5fa9e4b0dad94371f2b5"}, {"problem": 49, "code": "#(conj [] (take %1 %2) (drop %1 %2))", "user": "52a45a7be4b0c58976d9abd8"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "544fbabce4b0e39780006999"}, {"problem": 49, "code": "(fn [x y] [(take x y) (drop x y)])", "user": "54458995e4b032a45b86939e"}, {"problem": 49, "code": "(fn mysplit [n xs]\n  (loop [cnt n\n         col xs\n         acc []]\n    (if (= 0 cnt)\n      (conj [] acc (vec col))\n      (recur (dec cnt) (rest col) (conj acc (first col))))))", "user": "544257b4e4b032a45b869379"}, {"problem": 49, "code": "(fn [n s] (concat (vector (take n s)) (vector (nthrest s n))))", "user": "54524afbe4b0e397800069bc"}, {"problem": 49, "code": "#(vector (take %1 %2)(drop %1 %2))", "user": "5457e5f1e4b01be26fd74613"}, {"problem": 49, "code": "#(concat [(take %1 %2) (nthnext %2 %1)])", "user": "54524dbbe4b0e397800069bd"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "53b7aa6ce4b047364c0444d1"}, {"problem": 49, "code": "(juxt take drop)", "user": "54512df2e4b0e397800069ae"}, {"problem": 49, "code": "(fn\n  [n coll]\n  [(take n coll) (drop n coll)])", "user": "54570d08e4b080a794c2c888"}, {"problem": 49, "code": "(fn [x y]\n  (conj [(take x y)] (take-last (- (count y) x) y)))", "user": "54381729e4b032a45b869310"}, {"problem": 49, "code": "(juxt take drop)", "user": "544cf5d7e4b0e39780006977"}, {"problem": 49, "code": "(fn sp [n coll] [(take n coll) (drop n coll)])", "user": "5414b7c4e4b01498b1a719ed"}, {"problem": 49, "code": "(fn [n col]\n  (let [col (partition-all n col)]\n    (list (first col) (apply concat (rest col)))))", "user": "54580586e4b01be26fd74616"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "52e16face4b09f7907dd1421"}, {"problem": 49, "code": "#(cons (take %1 %2) (cons (drop %1 %2) nil))", "user": "545801f6e4b01be26fd74615"}, {"problem": 49, "code": "(fn [n l] [(take n l) (drop n l)])", "user": "5454b84ce4b0e397800069d9"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5367bc60e4b0243289761e81"}, {"problem": 49, "code": "(fn split [n x]\n   (loop [remaining n\n          head      []\n          tail      x]\n     (if (zero? remaining)\n       (vector (vec head) (vec tail))\n       (recur (dec remaining)\n              (conj head (first tail)) \n              (rest tail)))))", "user": "545e9cf1e4b01be26fd7467f"}, {"problem": 49, "code": "#(list(take % %2)(drop % %2))", "user": "5367f0a7e4b0243289761e88"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5405ae2be4b0addc1aec6671"}, {"problem": 49, "code": "(juxt take drop)", "user": "5461368ce4b01be26fd7469b"}, {"problem": 49, "code": "(fn\n  [n coll]\n  (list (take n coll) (drop n coll)))", "user": "545d881de4b01be26fd7466f"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "4f1ef6a0535d64f60314649b"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "526e1bd0e4b03e8d9a4a730b"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "5417bc50e4b01498b1a71a0f"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "5461c402e4b01be26fd746a6"}, {"problem": 49, "code": "#(vector (take %1 %2) (nthrest %2 %1))", "user": "545537c1e4b0e397800069dd"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "546280d8e4b01be26fd746b0"}, {"problem": 49, "code": "(fn[x coll]\n  (list (take x coll) (drop x coll)))", "user": "53b14289e4b047364c04448b"}, {"problem": 49, "code": "(fn [n l] (cons (take n l) (list (drop n l))))", "user": "54651982e4b01be26fd746d4"}, {"problem": 49, "code": "(fn[n l]\n  (let [s (- (count l) n)]\n  (vector (vec (take n l)) (vec (take-last s l)))))", "user": "54651ef5e4b01be26fd746d5"}, {"problem": 49, "code": "#(list (take %1 %2) (take-last (- (count %2) %1) %2))", "user": "5465712ee4b01be26fd746dc"}, {"problem": 49, "code": ";;(fn [n coll]\n;;  [(vec (take n coll)) (vec (drop n coll))])\n\n#(vector (vec (take %1 %2)) (vec (drop %1 %2)))\n;; I'd like to make this work without vector! :(", "user": "5462caf5e4b01be26fd746b7"}, {"problem": 49, "code": "#(cons (take %1 %2) (vector (drop %1 %2)))", "user": "54630e6be4b01be26fd746bc"}, {"problem": 49, "code": "(fn [at inp]\n  (loop [l1 [] i 0]\n    (if (= i at)\n      [l1 (nthrest inp i)]\n      (recur (conj l1 (nth inp i)) (inc i)))))", "user": "534e60c2e4b084c2834f4ab2"}, {"problem": 49, "code": "(fn -mysplitat\n  [x xs]\n  [(first (partition x xs)) (nthrest xs x)]\n)", "user": "546113ffe4b01be26fd74699"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "5458a729e4b01be26fd74622"}, {"problem": 49, "code": "(fn [split xs] [(take split xs) (drop split xs)])", "user": "5468033ee4b00cfc9eacc133"}, {"problem": 49, "code": "#(vector (subvec %2 0 %) (subvec %2 %))", "user": "5464a536e4b01be26fd746cf"}, {"problem": 49, "code": "(fn [at l]\n  (conj (vector (take at l)) (vec (drop at l))))", "user": "54651faee4b01be26fd746d6"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "53572176e4b04ce2eb3ed276"}, {"problem": 49, "code": "#(cons (take % %2)\n       [(drop % %2)])", "user": "53ea5851e4b036ad0777e4e4"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "54485727e4b032a45b8693c6"}, {"problem": 49, "code": "(fn [n xs]\n  [(take n xs) (drop n xs)])", "user": "540ff039e4b01498b1a7199b"}, {"problem": 49, "code": "(fn [idx col] (conj [] (take idx col) (nthrest col idx)))", "user": "5146fd44e4b0d12420447958"}, {"problem": 49, "code": "(fn [n col] \n  [ (take n col) (drop n col) ] )", "user": "5465febde4b01be26fd746e1"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "546c1b2ce4b00cfc9eacc174"}, {"problem": 49, "code": "(fn [n coll] (list (take n coll) (drop n coll)))", "user": "546a6dbbe4b00cfc9eacc156"}, {"problem": 49, "code": "(fn [n ls]\n  (loop [m n [x & xs] ls result '()]\n(if (zero? m) (cons (reverse result) (cons (cons x xs) '()))\n      (recur (dec m) xs (cons x result)))))", "user": "546176e7e4b01be26fd746a2"}, {"problem": 49, "code": "(fn [n xs]\n  [(vec (take n xs)) (vec (drop n xs))])", "user": "5136f659e4b04059df19f2fd"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "52d84ea7e4b09f7907dd1390"}, {"problem": 49, "code": "(fn [index coll] [(take index coll) (drop index coll)])", "user": "5462ce20e4b01be26fd746b8"}, {"problem": 49, "code": "#(conj [] (take % %2) (drop % %2))", "user": "5461873de4b01be26fd746a3"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "53e92821e4b036ad0777e499"}, {"problem": 49, "code": "#(conj [] (take % %2) (drop % %2))", "user": "54084089e4b0addc1aec66c7"}, {"problem": 49, "code": "(fn [n s]\n  (loop [index 1\n         first-p [(first s)]\n         second-p (rest s)]\n    (if (= index n)\n      [first-p second-p]\n      (recur (inc index) (conj first-p (first second-p)) (rest second-p)))))", "user": "546c4c5fe4b00cfc9eacc178"}, {"problem": 49, "code": "(fn [pos coll]\n  (loop [p pos left [] right coll]\n    (if (zero? p)\n      [left right]\n      (recur (dec p) (conj left (first right)) (rest right)))))", "user": "51ca5378e4b08b1cbd0d9480"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "544e9022e4b0e3978000698b"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "546ed28be4b00cfc9eacc1a5"}, {"problem": 49, "code": "(fn [n lst] [(take n lst) (drop n lst)])", "user": "543bb568e4b032a45b869334"}, {"problem": 49, "code": "(fn[n c] \n           (loop [acc (vec '()), local_acc (vec '()), col c, t 0]\n               (if (< t n)\n                 (recur acc (conj local_acc (first col)) (rest col) (+ 1 t))\n                 (conj (conj acc local_acc) col)\n               )\n               \n           )   \n         )", "user": "52149e21e4b0961f15ac4d94"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "546c1f73e4b00cfc9eacc175"}, {"problem": 49, "code": "(fn [i ls] \n  (let [upto (range 0 i) etc (range i (count ls))]\n    (into [(map (partial get ls) upto)] [(map (partial get ls) etc)])\n    ))", "user": "546d41bde4b00cfc9eacc18c"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (nthrest coll n)])", "user": "52a90056e4b0c58976d9ac39"}, {"problem": 49, "code": "(fn[n coll]\n  (vector (take n coll) (drop n coll)))", "user": "5472cba1e4b094393f72dd7a"}, {"problem": 49, "code": "(fn [split-point coll]\n  (vector (take split-point coll) (drop split-point coll)))", "user": "541cf6dfe4b01498b1a71a7a"}, {"problem": 49, "code": "(fn split-seq\r\n  [n s]\r\n  (vector\r\n    (take n s)\r\n    (nthrest s n)))", "user": "5470699ae4b00cfc9eacc1b6"}, {"problem": 49, "code": "(juxt take drop)", "user": "53613db8e4b0243289761e41"}, {"problem": 49, "code": "(fn [n ls] ((juxt (partial take n) (partial drop n)) ls))", "user": "547584d9e4b0c51c1f4d729b"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "547365d4e4b0c51c1f4d727d"}, {"problem": 49, "code": "#(split-with (fn [x] (< (.indexOf %2 x) %1)) %2)", "user": "54696e4ce4b00cfc9eacc147"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "54777719e4b0c51c1f4d72b3"}, {"problem": 49, "code": "(fn [f coll]\n   [(take f coll) (drop f coll)])", "user": "5473efc3e4b0c51c1f4d7285"}, {"problem": 49, "code": "(fn [n coll] (list (take n coll) (drop n coll)))", "user": "54734a0de4b0c51c1f4d727b"}, {"problem": 49, "code": "(juxt take drop)", "user": "5466aabbe4b01be26fd746e8"}, {"problem": 49, "code": "(fn splitter [n x]\n  [(subvec x 0 n) (subvec x n (count x))])", "user": "53703287e4b0fc7073fd6e8f"}, {"problem": 49, "code": "#(vector (vec (take %1 %2))\n         (vec (drop %1 %2)))", "user": "4e580746535d8a8b8723a28c"}, {"problem": 49, "code": "(fn [n coll]\n  (vector (take n coll) (drop n coll)))", "user": "5478c4fee4b0c51c1f4d72c0"}, {"problem": 49, "code": "(fn[x y][(take x y)(drop x y)])", "user": "5479c58de4b0c51c1f4d72c7"}, {"problem": 49, "code": "(fn [n a] [(vec (take n a))(vec (drop n a))])", "user": "545d5c3be4b01be26fd7466d"}, {"problem": 49, "code": "(fn [n s] [(take n s) (drop n s)])", "user": "5466199ce4b01be26fd746e2"}, {"problem": 49, "code": "(fn [cnt lst] (list (take cnt lst) (drop cnt lst) ))", "user": "5471f090e4b094393f72dd6e"}, {"problem": 49, "code": "#(conj [] (take %1 %2) (drop %1 %2))", "user": "54630cdae4b01be26fd746bb"}, {"problem": 49, "code": "(fn [n coll]\n  (let [a (into [] (take n coll))\n        b (into [] ( (apply comp (repeat n rest))  coll))\n         ]\n    [a b]\n  ))", "user": "5475d755e4b0c51c1f4d72a0"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "5470b3d0e4b00cfc9eacc1bb"}, {"problem": 49, "code": "(fn split-seq [n col] [\n                       (into [] (take n col)) \n                       (into [] (take-last (- (count col) n) col))\n                       ])", "user": "54797964e4b0c51c1f4d72c6"}, {"problem": 49, "code": "(fn [n coll] (conj [] (take n coll) (drop n coll)))", "user": "5471f2fbe4b094393f72dd70"}, {"problem": 49, "code": "(fn [i xs] [(take i xs) (drop i xs)])", "user": "5478e57de4b0c51c1f4d72c1"}, {"problem": 49, "code": "(fn [a b]\n  [(take a b) (nthnext b a)])", "user": "546e4ab8e4b00cfc9eacc19c"}, {"problem": 49, "code": "(juxt take drop)", "user": "535c2d21e4b04ce2eb3ed2b2"}, {"problem": 49, "code": "(fn [n coll]\n  (conj [] (take n coll) (drop n coll)))", "user": "545f737ce4b01be26fd74688"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "547adcb0e4b0c51c1f4d72cf"}, {"problem": 49, "code": "#(into [] [(take %1 %2) (drop %1 %2)])", "user": "52b9cfb9e4b07a9af57922c5"}, {"problem": 49, "code": "(fn f [i c] ;; dirty trick\n  (let [ps (partition i i [] c)]\n    [(first ps) (apply concat (rest ps))]))", "user": "547d8e93e4b0c51c1f4d72f4"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5456e4e7e4b080a794c2c883"}, {"problem": 49, "code": "(fn [i xs]\n  [(take i xs) (drop i xs)])", "user": "501b1efee4b0b12d9c5f4d82"}, {"problem": 49, "code": "(fn [n xs]\n  (list (take n xs) (drop n xs)))", "user": "547ad587e4b0c51c1f4d72ce"}, {"problem": 49, "code": "#(vector (vec (take %1 %2)) (vec (drop %1 %2)))", "user": "548026d8e4b0e286459a1155"}, {"problem": 49, "code": "(juxt take drop)", "user": "547d66a1e4b0c51c1f4d72f2"}, {"problem": 49, "code": "#(into [] [(take %1 %2) (drop %1 %2)])", "user": "53ed1cb8e4b0d648e757f4be"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "54357066e4b0b6b47310fcfd"}, {"problem": 49, "code": "#(list (take %1 %2) (nthrest %2 %1))", "user": "5463fbbde4b01be26fd746ca"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "54577fefe4b01be26fd7460d"}, {"problem": 49, "code": "(fn [n xs] \n  [(take n xs) (drop n xs)])", "user": "5483d59fe4b0e286459a1194"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5032748ae4b0e78df07b092f"}, {"problem": 49, "code": "#(cons (take %1 %2) [(drop %1 %2)])", "user": "548018dbe4b0c51c1f4d732a"}, {"problem": 49, "code": "(\n    fn [i coll]\n    (\n      concat (list (take i coll)) (list (drop i coll))\n      )\n    )", "user": "547f3434e4b0c51c1f4d7319"}, {"problem": 49, "code": "#(let [aseq (partition % % nil %2)] [(into [] (first aseq)) (into [] (mapcat identity (rest aseq)))])", "user": "5414dccbe4b01498b1a719f1"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "54857e3be4b0e286459a11ad"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll)\n   (drop n coll)])", "user": "54848141e4b0e286459a119e"}, {"problem": 49, "code": "(fn split-seq [n coll]\n  [(take n coll) (drop n coll)])", "user": "542c026ae4b0dad94371f29a"}, {"problem": 49, "code": "(fn[n %] (cons (take n %) (cons (nthrest % n)'())))", "user": "54802bd1e4b0e286459a1157"}, {"problem": 49, "code": "(fn [x y] [(take x y) (drop x y)])", "user": "548485f5e4b0e286459a119f"}, {"problem": 49, "code": "(fn [parts lst]\n  [(take parts lst) (drop parts lst)])", "user": "513facf5e4b00f13ea1bd892"}, {"problem": 49, "code": "#(vector (vec (take %1 %2)) (vec (drop %1 %2)))", "user": "5486adf7e4b0e286459a11be"}, {"problem": 49, "code": "(fn [k s] (vector (take k s) (drop k s)))", "user": "545944a2e4b01be26fd74627"}, {"problem": 49, "code": "(fn [a b] [(take a b) (drop a b)])", "user": "5472d919e4b094393f72dd7b"}, {"problem": 49, "code": "(fn my-split [n a-seq]\n  [(take n a-seq)\n   (reverse (take (- (count a-seq) n) (reverse a-seq)))])", "user": "547e3846e4b0c51c1f4d7302"}, {"problem": 49, "code": "(fn [n l] (list (take n l) (drop n l)))", "user": "548018e5e4b0c51c1f4d7332"}, {"problem": 49, "code": "(fn [n xs] [(take n xs) (drop n xs)])", "user": "5485b402e4b0e286459a11b0"}, {"problem": 49, "code": "(fn [n coll]\n    [(take n coll) (drop n coll)])", "user": "54508859e4b0e397800069a3"}, {"problem": 49, "code": "#(vector \n   (vec (take %1 %2)) \n   (vec (take-last \n          (- (count %2) %1) %2)))", "user": "5471f0f3e4b094393f72dd6f"}, {"problem": 49, "code": "(fn [x y]\n  (list (take x y) (drop x y)))", "user": "547fbe01e4b0c51c1f4d7321"}, {"problem": 49, "code": "#(list (take %1 %2) (take-last (- (count %2) %1) %2))", "user": "543823f1e4b032a45b869311"}, {"problem": 49, "code": "#(conj (conj [] (take % %2)) (drop % %2))", "user": "54893618e4b0e286459a11e0"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "535f9a5ce4b04ce2eb3ed2de"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5488872ee4b0e286459a11d3"}, {"problem": 49, "code": "(fn [n c] [(vec (take n c)) (vec (drop n c))])", "user": "4e41a04e535dc968683fc49e"}, {"problem": 49, "code": "(fn [n v]\n  [(subvec v 0 n)\n   (subvec v n (count v))])", "user": "545281bce4b0e397800069c3"}, {"problem": 49, "code": "(fn [n s]\n           [(take n s) (drop n s)])", "user": "4f47d84fe4b0d56e7bb92bc3"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "548cd637e4b0e286459a1210"}, {"problem": 49, "code": "(fn [n xs]  [(take n xs) (drop n xs)])", "user": "548cd813e4b0e286459a1211"}, {"problem": 49, "code": "(fn [n xs]\n  (loop [acc 0 one [] items xs]\n    (if (= acc n)\n      [one items]\n      (recur (inc acc) (conj one (first items)) (rest items)))))", "user": "5188c249e4b0bdff0e072d54"}, {"problem": 49, "code": "(fn [n xs] \n\t(loop [i      0\n           left  []\n           right []]\n      \n      (cond \n       \t\t(= i (count xs)) [left right]\n       \t\t(< i n)  (recur (+ 1 i) (into left [(xs i)]) right)\n            :else    (recur (+ 1 i) left (into right [(xs i)])))))", "user": "547cd90ee4b0c51c1f4d72ec"}, {"problem": 49, "code": "(juxt take drop)", "user": "51c611c4e4b03a28d42333bf"}, {"problem": 49, "code": "(fn split [idx col]\n  [(take idx col) (drop idx col)])", "user": "53b12c76e4b047364c04448a"}, {"problem": 49, "code": "(fn [idx s] [(take idx s) (drop idx s)])", "user": "548f5086e4b0e286459a1239"}, {"problem": 49, "code": "(juxt take drop)", "user": "548fa2dfe4b0e286459a1240"}, {"problem": 49, "code": "(fn splitter [x l]\n   (conj [] (subvec l 0 x) (subvec l x))\n   )", "user": "548f3ee4e4b0e286459a1237"}, {"problem": 49, "code": "(fn my-split\n  [index my-seq]\n  (list (take index my-seq) (drop index my-seq)))", "user": "548f19a8e4b0e286459a1231"}, {"problem": 49, "code": "(fn [a s]\n  [(take a s) (drop a s)])", "user": "54903056e4b0b312c081ff2e"}, {"problem": 49, "code": "(fn [a b] (conj [(vec (take a b))] (vec (take-last (- (count b) a) b))))", "user": "51d26b0ae4b0d13b04db0d97"}, {"problem": 49, "code": "(fn [i c] [(take i c) (drop i c)])", "user": "536e5b68e4b0fc7073fd6e6d"}, {"problem": 49, "code": "(fn [c my-nums] [(take c my-nums) (drop c my-nums)])", "user": "5492164ee4b0b312c081ff3e"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "512b07f7e4b078b06821febb"}, {"problem": 49, "code": "#(list (take %1 %2) (take-last (- (count %2) %1) %2))", "user": "52457931e4b08ba239308107"}, {"problem": 49, "code": "(fn my-split-at [n myseq]\n  [(take n myseq) (drop n myseq)])", "user": "5455510fe4b0e397800069df"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "54965534e4b0b312c081ff65"}, {"problem": 49, "code": "(fn [a b] [(take a b) (drop a b)])", "user": "53bcdd41e4b0d9a98559a6c0"}, {"problem": 49, "code": "#(conj \n  [] \n  (take %1  %2) \n  (take-last (- (count %2) %1) %2)\n)", "user": "54897284e4b0e286459a11e6"}, {"problem": 49, "code": "(fn [n v] [(subvec v 0 n) (subvec v n)])", "user": "5280539ce4b0757a1b1713f3"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "548f37c7e4b0e286459a1234"}, {"problem": 49, "code": "(fn [n c]\n  (concat (conj [] (take n c)) (conj [] (nthnext c n))))", "user": "5243e37ae4b076204b44fae3"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "549375e4e4b0b312c081ff4e"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "54975e99e4b0b312c081ff72"}, {"problem": 49, "code": "(juxt take drop)", "user": "54926752e4b0b312c081ff44"}, {"problem": 49, "code": "(fn [n aseq] \n  [(take n aseq) (drop n aseq)])", "user": "53576356e4b04ce2eb3ed27a"}, {"problem": 49, "code": "#(vector (take %1 %2) (take-last (- (count %2) %1) %2))", "user": "537d6d44e4b06839e8705e8c"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "548ade6de4b0e286459a11f6"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "549c3e0ce4b0f3d1d8e70f87"}, {"problem": 49, "code": "(fn splitn [idx coll]\n    (concat [(into [] (take idx coll))] [(into [] (drop idx coll))])\n)", "user": "54996971e4b0b312c081ff8d"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "549c22f7e4b0f3d1d8e70f86"}, {"problem": 49, "code": "(fn eh [pos x]\n  ((fn ehh [pos x acc]\n     (cond\n      (= pos 0) (cons (reverse acc) (cons x '()))\n      :else (ehh (- pos 1) (rest x) (cons (first x) acc)))) pos x '()))", "user": "549c8bbde4b0f3d1d8e70f8c"}, {"problem": 49, "code": "(fn [n l]\n  [ (take n l) (drop n l) ])", "user": "540217e1e4b0df28a13c62cb"}, {"problem": 49, "code": "(fn p49 [inv coll]\n  (apply\n    (fn [a & b] [a (apply concat b)])\n    (partition inv inv [] coll)))", "user": "543b12cce4b032a45b86932a"}, {"problem": 49, "code": "(fn my-split-at [n xs]\n  ((fn step [acc xs idx limit]\n     (if (= idx limit)\n       (conj [] acc (into [] xs))\n       (step (conj acc (first xs)) (next xs) (inc idx) limit)))\n   [] xs 0 n))", "user": "548018d1e4b0c51c1f4d7326"}, {"problem": 49, "code": "(fn [n s]\n (map\n  #(map last %)\n  (split-with\n   (fn [[idx]] (> n idx))\n   (map-indexed vector s)))\n)", "user": "549a999be4b0f3d1d8e70f6f"}, {"problem": 49, "code": "(fn [n coll]\n  (vector (take n coll) (drop n coll)))", "user": "53716539e4b0fc7073fd6eb1"}, {"problem": 49, "code": "(fn[n x] \n\t[(take n x) (drop n x)])", "user": "549e5e52e4b0f3d1d8e70f9e"}, {"problem": 49, "code": "(fn [x xs] (let [xfn (partial subvec xs)] ((juxt #(xfn 0 %) xfn) x)))", "user": "549def9ce4b0f3d1d8e70f99"}, {"problem": 49, "code": "#(concat [(take %1 %2)]\n         [(drop %1 %2)])", "user": "5470cb10e4b094393f72dd65"}, {"problem": 49, "code": "(fn [x y] [(take x y) (drop x y)])", "user": "549c1713e4b0f3d1d8e70f82"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "54769c7ae4b0c51c1f4d72a8"}, {"problem": 49, "code": "(fn [a b] [(take a b) (drop a b)])", "user": "5455c2f3e4b080a794c2c87d"}, {"problem": 49, "code": "(fn [n c] [(take n c) (drop n c)])", "user": "549a176ce4b0f3d1d8e70f69"}, {"problem": 49, "code": "(fn [n xs] [(take n xs) (drop n xs)])", "user": "549dd591e4b0f3d1d8e70f98"}, {"problem": 49, "code": "(fn split-seq [n coll]\n  (list (take n coll) (drop n coll)))", "user": "52b9e920e4b07a9af57922c9"}, {"problem": 49, "code": "(fn [n lis] [(take n lis) (drop n lis)])", "user": "54a1d643e4b09f271ff37c50"}, {"problem": 49, "code": "#(vector (take % %2) (nthrest %2 %))", "user": "53fe1b42e4b0de5c418485f1"}, {"problem": 49, "code": "(juxt take drop)", "user": "54908cc1e4b0b312c081ff32"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "549cd548e4b0f3d1d8e70f91"}, {"problem": 49, "code": "#((juxt (partial take %1) (partial drop %1))%2)", "user": "53029281e4b0d8b024fd372e"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "54a70af9e4b09f271ff37c93"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "5499e23de4b03163384f4706"}, {"problem": 49, "code": "(fn [n ls] [(take n ls) (drop n ls)])", "user": "4ea03f70535d7eef308072a1"}, {"problem": 49, "code": "#(vector (take % %2) (nthnext %2 %))", "user": "54a677a9e4b09f271ff37c88"}, {"problem": 49, "code": "(fn [num lst]\n  (vector\n   (take num lst)\n  (drop num lst)))", "user": "545b0275e4b01be26fd74648"}, {"problem": 49, "code": "(fn spl2 [n s]                                                                                                                                                                                                 \n  [(take n s) (drop n s)])", "user": "53403f42e4b085b17e897da8"}, {"problem": 49, "code": "#(vector (subvec %2 0 %) (subvec %2 %))", "user": "548f11a0e4b0e286459a122d"}, {"problem": 49, "code": "(fn my-split [n vs]\n  (loop [[x & rxs :as xs] vs\n         i 0\n         t1s []\n         t2s []]\n    (if (empty? xs)\n      (conj (conj [] t1s) t2s)\n      (if (>= i n)\n        (recur rxs (inc i) t1s (conj t2s x))\n        (recur rxs (inc i) (conj t1s x) t2s)))))", "user": "54a31fdae4b09f271ff37c64"}, {"problem": 49, "code": "#(vector (vec (take %1 %2)) (vec (drop %1 %2)))", "user": "50ec69e0e4b04edc3377704a"}, {"problem": 49, "code": "(fn f [x, y] (vector (into [] (take x y)) (into [] (drop x y))))", "user": "54a7efdee4b09f271ff37c9d"}, {"problem": 49, "code": "#(conj [(-> (take %1 %2) vec)] (-> (nthrest %2 %1) vec))", "user": "53ed290be4b0d648e757f4c0"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "5488537be4b0e286459a11cf"}, {"problem": 49, "code": "#(vector (take % %2) (nthrest %2 %))", "user": "52540bcce4b0541d1855b952"}, {"problem": 49, "code": "(fn splat [num coll]\n \n  [(take num coll) (drop num coll)]\n  \n)", "user": "54a7d707e4b09f271ff37c9b"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "54ab6773e4b09f271ff37cc8"}, {"problem": 49, "code": "(juxt take drop)", "user": "549ac3cde4b0f3d1d8e70f71"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "52e12ac5e4b09f7907dd141a"}, {"problem": 49, "code": "(juxt take drop)", "user": "54a854f5e4b09f271ff37ca2"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "54aa373de4b09f271ff37cb6"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "54af6fb0e4b09f271ff37d08"}, {"problem": 49, "code": "#(list(take %1 %2) (drop %1 %2))", "user": "54b13a40e4b09f271ff37d1b"}, {"problem": 49, "code": "(fn spat \n  ([x y] (spat x (empty y) y))\n  ([x y z] (if (= x 0) \n             (vector y z)\n             (spat (dec x) (conj y (first z)) (rest z))\n             )\n   )\n  )", "user": "54ab46fee4b09f271ff37cc3"}, {"problem": 49, "code": "#(list (take %1 %2)(drop %1 %2))", "user": "54ad4863e4b09f271ff37ce0"}, {"problem": 49, "code": ";; first approach: `#(list (take % %2) (drop % %2))`\n(juxt take drop)", "user": "54ad9d76e4b09f271ff37ce6"}, {"problem": 49, "code": "#(letfn [(aux [n acc coll]\n         (if (zero? n) [acc coll]\n             (aux (dec n) (conj acc (first coll)) (rest coll))))]\n        (aux %1 [] %2))", "user": "54ae541ae4b09f271ff37cef"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "54ab502fe4b09f271ff37cc4"}, {"problem": 49, "code": "(fn [n l] [(take n l) (drop n l)])", "user": "515b03fee4b0a102a3e5262a"}, {"problem": 49, "code": "#(concat [(take %1 %2)] [(drop %1 %2)])", "user": "53e3e353e4b036ad0777e406"}, {"problem": 49, "code": "#(identity [(take %1 %2) (drop %1 %2)])", "user": "53e88247e4b036ad0777e489"}, {"problem": 49, "code": "(fn[x,y] [(take x y) (drop x y)])", "user": "4fabbd3ee4b081705acca21e"}, {"problem": 49, "code": "(fn [n v] [(subvec v 0 n) (subvec v n)])", "user": "50b42cbbe4b001349b2f4abe"}, {"problem": 49, "code": "(juxt #(take % %2) #(drop % %2))", "user": "50aa777fe4b056ee01935866"}, {"problem": 49, "code": "(fn [n coll]\n  (let [f (take n coll)\n        l (drop n coll)]\n    [(vec f) (vec l)]))", "user": "545bd22fe4b01be26fd7465a"}, {"problem": 49, "code": "(fn [index list]\n  [(take index list)\n   (drop index list)])", "user": "5463c824e4b01be26fd746c5"}, {"problem": 49, "code": "#(vec (list (vec (take %1 %2)) (vec (drop %1 %2))))", "user": "52cee992e4b07d0d72b27395"}, {"problem": 49, "code": ";;(fn [n coll] (vector (vec (take n coll)) (vec (drop n coll))))\n#(vector (take %1 %2) (drop %1 %2))", "user": "536b9d8ae4b0243289761ebe"}, {"problem": 49, "code": "(fn [l n r]\n  (if (= 0 n)\n    [l r]\n    (recur (conj l (first r)) (dec n) (rest r)))) []", "user": "54b2ec84e4b09f271ff37d33"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "54b448f2e4b05787c3b1638e"}, {"problem": 49, "code": "(fn [n xs] \n  (loop [a [] b xs i n] \n    (if (= 0 i) [a b] \n      (recur (conj a (first b)) (rest b) (dec i)))))", "user": "549cc867e4b0f3d1d8e70f8f"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "52a267c6e4b04e0c58e87bef"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "52be58d7e4b07a9af579231d"}, {"problem": 49, "code": "(fn [ct coll]\n  [(take ct coll) (nthrest coll ct)])", "user": "532902f8e4b09d4e7a9b550e"}, {"problem": 49, "code": "(fn [n l]\n  (vector (take n l)\n          (drop n l)))", "user": "50478418e4b0371827a27bc3"}, {"problem": 49, "code": "(fn [x y] (vec [(take x y) (drop x y)] ))", "user": "5493d908e4b0b312c081ff52"}, {"problem": 49, "code": "(fn [n coll] (list (take n coll) (drop n coll)))", "user": "54b050cee4b09f271ff37d13"}, {"problem": 49, "code": "(fn \n  [idx coll]\n  [(take idx coll) (drop idx coll)])", "user": "548db64ce4b0e286459a121c"}, {"problem": 49, "code": "(fn [n coll] [(vec (take n coll)) (vec (drop n coll))])", "user": "54bad522e4b0ed20f4ff6eb8"}, {"problem": 49, "code": "#(conj [] (take %1 %2) (drop %1 %2))", "user": "54856d54e4b0e286459a11aa"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "54acf5c7e4b09f271ff37cdd"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "54b40fe6e4b05787c3b1638a"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5484143de4b0e286459a1197"}, {"problem": 49, "code": "#(do [(take %1 %2) (take-last (- (count %2) %1) %2)])", "user": "54b2d392e4b09f271ff37d2f"}, {"problem": 49, "code": "(fn [n s] [(take n s) (take-last (- (count s) n) s)])", "user": "54bd04e7e4b0ed20f4ff6ed8"}, {"problem": 49, "code": "(fn [n coll] (vector (take n coll) (take-last (- (count coll) n) coll)))", "user": "54b6c24be4b0ed20f4ff6e7c"}, {"problem": 49, "code": "(fn [x y] [(take x y)(drop x y)])", "user": "54543484e4b0e397800069d4"}, {"problem": 49, "code": "#(vector (take %1 %2)(drop %1 %2))", "user": "5481be5fe4b0e286459a1172"}, {"problem": 49, "code": "(fn [n l]\n  (loop [l1 '() l2 '() l l]\n    (if (empty? l)\n      (vector (vec l2) (vec l1))\n      (if (< n (count l))\n        (recur (conj l1 (peek l)) l2 (pop l))\n        (recur l1 (conj l2 (peek l)) (pop l))\n        )\n      )\n    )\n  )", "user": "54b90836e4b0ed20f4ff6e9d"}, {"problem": 49, "code": "(fn [n c] [(take n c)(drop n c)])", "user": "54b972bbe4b0ed20f4ff6ead"}, {"problem": 49, "code": "(fn [n s] (vector (take n s) (drop n s)))", "user": "54b04708e4b09f271ff37d11"}, {"problem": 49, "code": "#(list (take %1 %2) (take-last (- (count %2) %1) %2))", "user": "54bec835e4b0ed20f4ff6ef7"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "54be7772e4b0ed20f4ff6eea"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "54bd91d7e4b0ed20f4ff6ee2"}, {"problem": 49, "code": "(fn\n  [a col]\n  [(vec (take a col)) (vec (drop a col))])", "user": "5318594ee4b08068f379ed6d"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "54a73c1fe4b09f271ff37c96"}, {"problem": 49, "code": "(fn [n l]\n  [(take n l) (drop n l)])", "user": "54b95f3de4b0ed20f4ff6eab"}, {"problem": 49, "code": "#(loop [H [] T %2]\n    (if (= %1 (count H))\n      [H T]\n      (recur (conj H (first T)) (into [] (rest T)) )))", "user": "53d64811e4b0e771c3025456"}, {"problem": 49, "code": "(fn [c s] [(take c s) (drop c s)])", "user": "54c23252e4b045293a27f5fc"}, {"problem": 49, "code": "(fn [h s]\n   (let [splitter (get s h)]\n                 (split-with (fn [x]\n                               (if (not (= x splitter)) true false)\n                               ) s)              \n                 )\n   \n   )", "user": "54bbba99e4b0ed20f4ff6ec2"}, {"problem": 49, "code": "(fn mysplit\n  [n in]\n  (vector (vec (take n in)) (vec (take-last (- (count in) n) in))))", "user": "54b2e881e4b09f271ff37d32"}, {"problem": 49, "code": "(fn [x s] [(take x s) (drop x s)])", "user": "510fe537e4b04c71fce993dd"}, {"problem": 49, "code": "#(vector (vec (take % %2)) (vec (drop % %2)))", "user": "54c31f1be4b045293a27f609"}, {"problem": 49, "code": "(fn [e coll]\n  [(take e coll) (take-last (- (count coll) e) coll)])", "user": "54c11fdae4b0ed20f4ff6f1b"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "54bd3aefe4b0ed20f4ff6edb"}, {"problem": 49, "code": "(fn [num a-seq] (map #(% num a-seq) (list take drop)))", "user": "5235493ee4b05e80434a5064"}, {"problem": 49, "code": "(fn [n s]\n  [(take n s) (drop n s)])", "user": "54c271b9e4b045293a27f602"}, {"problem": 49, "code": "(fn [sp col]\n  (apply vector (take sp col) (vector (drop sp col))))", "user": "51e8ee6be4b07cae92c04bfd"}, {"problem": 49, "code": "(fn [idx sq] \n  (loop [i idx, s sq, left []] \n    (if (zero? i) \n      (list left s) \n      (recur (dec i) (rest s) (conj left (first s))))))", "user": "54bbe505e4b0ed20f4ff6ec5"}, {"problem": 49, "code": "#(vector (subvec %2 0 %1) (subvec %2 %1))", "user": "541074f1e4b01498b1a719ac"}, {"problem": 49, "code": "#(list (take %1 %2) (nthrest %2 %1))", "user": "546692aee4b01be26fd746e7"}, {"problem": 49, "code": "(fn [n coll] (vector (take n coll) (drop n coll)))", "user": "548b8a50e4b0e286459a11ff"}, {"problem": 49, "code": "(fn mysplit\n  ([n l] (mysplit n [] l))\n  ([n l1 l2]\n   (if (= n 0)\n     [l1 l2]\n     (recur (dec n) (conj l1 (first l2)) (rest l2))\n   )\n  )\n)", "user": "54c82b27e4b045293a27f645"}, {"problem": 49, "code": "(fn split-seq [n xs]\n  (loop [counter 0 left [] right xs]\n    (if (= counter n)\n      [left right]\n      (recur\n        (inc counter)\n        (conj left (first right))\n        (rest right)))))", "user": "54c8d4a8e4b045293a27f654"}, {"problem": 49, "code": "(fn [n l] [(take n l) (drop n l)])", "user": "525b142fe4b0cb4875a45d05"}, {"problem": 49, "code": "(fn [n x] (list (take n x) (drop n x) ))", "user": "54c169ade4b0ed20f4ff6f24"}, {"problem": 49, "code": "(fn [n l] [(take n l) (drop n l)])", "user": "54c9636fe4b045293a27f66e"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "5339b53fe4b0e30313ee6cac"}, {"problem": 49, "code": "(juxt take drop)", "user": "54b7f217e4b0ed20f4ff6e8f"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "4f8be895e4b02e764a0a5184"}, {"problem": 49, "code": "(fn [n coll] (list (take n coll) (drop n coll)))", "user": "54c9f165e4b045293a27f687"}, {"problem": 49, "code": "(fn [limit items]\n  (reduce\n   (fn [acc item]\n     (println acc item)\n     (if\n       (< (count (first acc)) limit)\n       (conj [] (conj (first acc) item) (last acc))\n       (conj [] (first acc) (conj (last acc) item))))\n   [[] []]\n   items))", "user": "54c13b87e4b0ed20f4ff6f20"}, {"problem": 49, "code": "(juxt take drop)", "user": "54cbe00ee4b057c6fda3a285"}, {"problem": 49, "code": "(juxt take drop)", "user": "54ca9ca8e4b057c6fda3a265"}, {"problem": 49, "code": "(fn [n xs]\n  (loop [[y & ys] xs\n         cntr 0\n         half1 []\n         half2 []]\n    \n    (if (nil? y)\n      (vector half1 half2)\n      \n      (if (< cntr n)\n        (recur ys (inc cntr) (conj half1 y) half2)\n        (recur ys (inc cntr) half1 (conj half2 y))))))", "user": "54bebeb9e4b0ed20f4ff6ef4"}, {"problem": 49, "code": "(fn [at lis]\n  [(subvec lis 0 at) (subvec lis at)])", "user": "53f11139e4b0742d9025b0d8"}, {"problem": 49, "code": "(juxt take drop)", "user": "54aa665fe4b09f271ff37cb8"}, {"problem": 49, "code": "(fn [n xs] (first (reduce (fn [[[ls rs] i] v] (if (> i 0) [[(conj ls v) rs] (- i 1)] [[ls (conj rs v)] i])) [[[] []] n] xs)))", "user": "54c641f8e4b045293a27f628"}, {"problem": 49, "code": "(juxt take drop)", "user": "54cbb0fde4b057c6fda3a27b"}, {"problem": 49, "code": "(fn [n xs]\n  (vector (take n xs) (drop n xs)))", "user": "54be792ee4b0ed20f4ff6eeb"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll)\n   (drop n coll)])", "user": "54af220ce4b09f271ff37d02"}, {"problem": 49, "code": "(fn [pos coll]\n  [(take pos coll) (drop pos coll)])", "user": "541b1f25e4b01498b1a71a63"}, {"problem": 49, "code": "(fn f [n s]\n  (conj (conj [] (take n s)) (drop n s)))", "user": "54ce3790e4b057c6fda3a2ab"}, {"problem": 49, "code": "(fn [n s] (vec (list (take n s) (drop n s))))", "user": "54c05fd7e4b0ed20f4ff6f12"}, {"problem": 49, "code": "(fn [n xs] (list (take n xs) (drop n xs)))", "user": "54d03026e4b018d918be98de"}, {"problem": 49, "code": "(fn [n c] (list (take n c) (drop n c)))", "user": "54246d6de4b01498b1a71aec"}, {"problem": 49, "code": "(fn split [n s]\n    ((fn help [remaining i sublist1 sublist2]\n       (if (empty? remaining)\n         [sublist1 sublist2]\n         (if (< i n)\n           (help (rest remaining)\n                 (inc i)\n                 (conj sublist1 (first remaining))\n                 sublist2)\n           (help (rest remaining)\n                 (inc i)\n                 sublist1\n                 (conj sublist2 (first remaining))))))\n     s\n     0\n     []\n     []))", "user": "54d26316e4b0e8a36923e5f2"}, {"problem": 49, "code": "(fn [n seq1]\n  (let [head (first (partition-all n seq1))\n        tail (list (reduce concat (rest (partition-all n seq1))))]\n    (vec (conj tail head))))", "user": "505d1b01e4b0e6aca564be04"}, {"problem": 49, "code": "(fn [x y]\n  (list (take x y) (take-last (- (count y) x) y)))", "user": "546a6e9fe4b00cfc9eacc157"}, {"problem": 49, "code": "(fn [a v] [(take a v) (drop a v)])", "user": "54d0e6c5e4b0e8a36923e5d4"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "54cd651be4b057c6fda3a2a2"}, {"problem": 49, "code": "(fn [s-at coll] [(take s-at coll) (drop s-at coll)])", "user": "54cad2d5e4b057c6fda3a26c"}, {"problem": 49, "code": "(fn spl [idx coll]\n  [(into [] (take idx coll)) (into [] (drop idx coll))])", "user": "54b07c1ee4b09f271ff37d16"}, {"problem": 49, "code": "(fn [x col] [(take x col) (drop x col)])", "user": "50c13f77e4b096f585049c3b"}, {"problem": 49, "code": "(fn [c l]\n  [(take c l) (drop c l)]\n  )", "user": "54d6f22de4b0a52adc2e2023"}, {"problem": 49, "code": "(fn [index coll] [(take index coll) (drop index coll)])", "user": "54b402dce4b05787c3b16388"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "54cc26c1e4b057c6fda3a28a"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "51eca2ace4b069f463c22cd0"}, {"problem": 49, "code": "(fn [n xs]\n  [(take n xs) (drop n xs)])", "user": "53bc10f5e4b047364c04450d"}, {"problem": 49, "code": "(fn [index coll]\n  [(take index coll) (drop index coll)])", "user": "510a3cd4e4b06956752d35ad"}, {"problem": 49, "code": "(fn [n coll] \n  (let [s (partition-all n coll)] \n    (list (first s) (apply concat (rest s)))))", "user": "541d3c0fe4b01498b1a71a7e"}, {"problem": 49, "code": "#(\n    list (take %1 %2) (drop %1 %2))", "user": "54d70f40e4b0a52adc2e2027"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "54d7ed8de4b0a52adc2e2034"}, {"problem": 49, "code": "(fn [n vec] \n   [ \n     (take n vec) \n     (drop n vec)\n    ] \n)", "user": "5273bae1e4b03e8d9a4a7490"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "54c5cc17e4b045293a27f624"}, {"problem": 49, "code": "(fn [n lst]\n  (let [lf (take n lst)\n        rt (drop n lst)]\n    (list lf rt)))", "user": "53f31dafe4b0742d9025b0f0"}, {"problem": 49, "code": "(fn [n xs]\n  (conj [] (take n xs) (drop n xs)))", "user": "54d753ebe4b0a52adc2e2029"}, {"problem": 49, "code": "(juxt take drop)", "user": "4ee7d6d8535d93acb0a66870"}, {"problem": 49, "code": "(fn [i lst]\n  [(take i lst)\n   (take-last (- (count lst) i) lst)])", "user": "53664e3be4b0243289761e74"}, {"problem": 49, "code": "(fn ([n s] [(take n s) (drop n s)]))", "user": "54d8cc38e4b0a52adc2e203e"}, {"problem": 49, "code": "(fn [ct s]\n  (vector\n   (vec (take ct s))\n   (vec (nthrest s ct))))", "user": "5215661be4b02f6d8ea676c7"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "54d6c80ce4b0a52adc2e2020"}, {"problem": 49, "code": "#(list (take %1 %2) (nthrest %2 %1))", "user": "54dd76c8e4b024c67c0cf794"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "4ec66e84535d6d7199dd36cd"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "54d1cf2ee4b0e8a36923e5eb"}, {"problem": 49, "code": "(fn [n c] [(take n c) (drop n c)])", "user": "4fc4eb1ee4b081705acca354"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "54da46e5e4b024c67c0cf753"}, {"problem": 49, "code": "(fn [n coll]\n    (list (take n coll) (drop n coll))\n    )", "user": "54cb3497e4b057c6fda3a272"}, {"problem": 49, "code": "(juxt take drop)", "user": "54ddb556e4b024c67c0cf798"}, {"problem": 49, "code": "(fn [n v]\n  [(take n v) (drop n v)])", "user": "540d0087e4b0addc1aec670b"}, {"problem": 49, "code": "(fn [x y] (list (take x y) (drop x y) ) )\n;(fn [x y] (list (first (partition x y)) (flatten (rest (partition x y))) ) )\n;i will look at this again when i learn this language ! (fn [x y]   \t\t\t(vals               (group-by                \t\t#(if (< % (inc x)) true false)               y)              ) )", "user": "54db33f1e4b024c67c0cf75d"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "54d4b3a7e4b0a52adc2e2003"}, {"problem": 49, "code": "(fn [i c] (vector (apply vector (take i c)) (apply vector (drop i c))))", "user": "54d2b411e4b0e8a36923e5f9"}, {"problem": 49, "code": "#(let [t (take %1 %2) d (drop %1 %2)] [t d])", "user": "54dae16de4b024c67c0cf758"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "543c5200e4b032a45b86933e"}, {"problem": 49, "code": "(fn\n     [n c]\n     [(vec (take n c))\n      (vec (drop n c))]\n )", "user": "54c8eb61e4b045293a27f658"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "54d70bbfe4b0a52adc2e2026"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "54e3df6ae4b024c67c0cf7e3"}, {"problem": 49, "code": "(fn my-split-at\n  [n elems]\n  (loop [remaining-num n remaining-elems elems res []]\n  (if (= remaining-num 0)\n    (cons res [remaining-elems])\n    (recur (dec remaining-num) (rest remaining-elems) (concat res [(first remaining-elems)])))))", "user": "54e0e911e4b024c67c0cf7bc"}, {"problem": 49, "code": "(fn [n s]\n  ((fn [remaining a b]\n     (if (< remaining 1)\n       [a b]\n       (recur (dec remaining) (concat a [(first b)]) (rest b))))\n   n [] s))", "user": "54d87b54e4b0a52adc2e2038"}, {"problem": 49, "code": "(fn [n coll]\n  (conj (empty coll) (take n coll) (drop n coll)))", "user": "54d2892fe4b0e8a36923e5f7"}, {"problem": 49, "code": "(fn [n xs]\n  [(take n xs) (drop n xs)]\n  )", "user": "546a6c7ce4b00cfc9eacc154"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "54c72b19e4b045293a27f636"}, {"problem": 49, "code": "(fn [size1 coll]\n   (vector (take size1 coll)\n         (drop size1 coll)))", "user": "54df3c94e4b024c67c0cf7aa"}, {"problem": 49, "code": "(fn [n xs] [(take n xs) (drop n xs)])", "user": "4e68c465535d8ccf87e9fe8a"}, {"problem": 49, "code": "(fn [x y]\n  (-> []\n      (conj (vec (take x y)))\n      (conj (vec (nthnext y x)))))", "user": "549a1fede4b0f3d1d8e70f6a"}, {"problem": 49, "code": "#(vector (subvec %2 0 %1) (subvec %2 %1))", "user": "54ca130ce4b057c6fda3a250"}, {"problem": 49, "code": "#(vector (vec (take % %2)) (vec (drop % %2)))", "user": "5315ba94e4b08068f379ed34"}, {"problem": 49, "code": "(juxt take drop)", "user": "54c97a56e4b045293a27f676"}, {"problem": 49, "code": "; (partition-all x coll) works for 1st and last tests, and I could never get past using that to get the 2nd test to pass. This one from chouser is tight:\n(juxt take drop)", "user": "54e3bd3fe4b024c67c0cf7e0"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "54e5bdf2e4b024c67c0cf7fe"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "533f1584e4b085b17e897d9b"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "54e2a779e4b024c67c0cf7d3"}, {"problem": 49, "code": "(fn tst[n coll]\n  (loop [first-part []\n         second-part coll\n         step n]\n    (if (= step 0)\n      [first-part (into [] second-part)]\n      (recur (conj first-part (first second-part))\n             (rest second-part)\n             (dec step)))))", "user": "502f6c56e4b0842eb223d8bb"}, {"problem": 49, "code": "(fn[x y](vector (take x y) (drop x y)))", "user": "54ecd7dde4b024c67c0cf85c"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "51b91b08e4b0e871ca4958f8"}, {"problem": 49, "code": "(fn split [n s]\n  (if (zero? n)\n    [[] s]\n    (let\n     [sp (split\n          (dec n)\n          (rest s))]\n      (concat\n       (list (concat\n        (list (first s))\n        (first sp)))\n       (rest sp)))))", "user": "54c9e00be4b045293a27f683"}, {"problem": 49, "code": "#(vector (subvec %2 0 %1) (subvec %2 %1 (count %2)))", "user": "54e51c7be4b024c67c0cf7f7"}, {"problem": 49, "code": "(fn [nt l] (cons (take nt l) (list (drop nt l))))", "user": "54edcf96e4b024c67c0cf866"}, {"problem": 49, "code": "#(conj (vector (take %1 %2)) (drop %1 %2))", "user": "54b5ce67e4b05787c3b163ac"}, {"problem": 49, "code": "(fn [index coll]\n  (vector (take index coll) (drop index coll)))", "user": "54a6baaee4b09f271ff37c8a"}, {"problem": 49, "code": "(fn [n v] (map #(% n v) [take drop]))", "user": "54b83ae9e4b0ed20f4ff6e95"}, {"problem": 49, "code": "(fn [n seq]\n    (map #(map last %) (map last (group-by #(< (first %) n) (map-indexed vector seq)))))", "user": "546ff835e4b00cfc9eacc1b4"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "54f0d3fde4b024c67c0cf8a6"}, {"problem": 49, "code": "#(let [xs (partition %1 %1 nil %2)] [(first xs)(mapcat identity (rest xs))])", "user": "5480cce5e4b0e286459a115f"}, {"problem": 49, "code": "(fn [cnt col] [(take cnt col) (drop cnt col)])", "user": "504e2d18e4b0f6ff3350c47a"}, {"problem": 49, "code": "(fn [i c] (#(list (first %) (apply concat (rest %))) (partition-all i c)))", "user": "4f598c87e4b0030a34fb2ada"}, {"problem": 49, "code": "(fn myf [size coll]\n  (letfn [(inner [[x & xs] index first second]\n    (if (nil? x)\n      (seq [first second])\n      (if (< index size)\n        (inner xs (inc index) (conj first x) second)\n        (inner xs (inc index) first (conj second x)))))]\n    (inner coll 0 [] [])))", "user": "518ba795e4b0f028e99addf0"}, {"problem": 49, "code": "(fn split [n xs]\n  (conj [] (take n xs) (drop n xs)))", "user": "54f06aede4b024c67c0cf896"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "54f2fe9fe4b050824f58f5b8"}, {"problem": 49, "code": "(fn [n c] \n   [(take n c) (drop n c)])", "user": "51a4d802e4b0def3c5c5869a"}, {"problem": 49, "code": "(fn split-at2 [n coll]\n  [(take n coll) (drop n coll)])", "user": "54e606c3e4b024c67c0cf803"}, {"problem": 49, "code": "(fn [n seq]\n  (list (take n seq) (drop n seq)))", "user": "54ecd716e4b024c67c0cf85a"}, {"problem": 49, "code": "(fn my-split [n x] \n   (list (take n x) (drop n x)))", "user": "54f64e99e4b0f2f3c5226ea4"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "54361d92e4b032a45b8692f7"}, {"problem": 49, "code": "(fn [x coll] (conj [] (vec (first (partition-all x coll)))\n\n                    (vec (apply concat (rest (partition-all x coll))))))", "user": "54eca495e4b024c67c0cf855"}, {"problem": 49, "code": "(fn split-seq [point  coll]\n  (let [p point c coll acc []]\n    (conj acc\n          (vec (reverse (subvec (vec (reverse c)) (- (count c) p))))\n          (subvec c p)\n          )))", "user": "54e1197fe4b024c67c0cf7c0"}, {"problem": 49, "code": "(fn [n coll]\n  (concat (list (take n coll)) (list (drop n coll))))", "user": "54f2a1b8e4b024c67c0cf8cb"}, {"problem": 49, "code": "(fn [c vs]\n  [(take c vs)\n   (drop c vs)\n   \n   ]\n  \n  )", "user": "54ef4a1ee4b024c67c0cf883"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "54b598d6e4b05787c3b163a8"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "539c736ce4b0b51d73faaf2b"}, {"problem": 49, "code": "(fn [idx coll]\n   (for [x (partition-by (fn [[a b]] (> b (dec idx))) (map-indexed #(conj [%2] %1) coll))]\n     (map first x)))", "user": "54d9366ce4b0a52adc2e204e"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "54f39cd6e4b050824f58f5c6"}, {"problem": 49, "code": "(fn spl [n xs]\n  (if (empty? xs)\n    nil\n  \t(let[ys (take n xs)\n       \t zs (drop n xs)]\n    \t(vector ys zs)\n      )\n   )\n  )", "user": "54f90537e4b01ecee9d88833"}, {"problem": 49, "code": "(fn [n v] (vector (subvec v 0 n) (subvec v n)))", "user": "54fdbe3fe4b07d26eda61d3b"}, {"problem": 49, "code": "#(let [m (take %1 %2)\n       n (loop [j %1 k %2] (if (> j 0) (recur (dec j) (rest k)) k))]\n   [m n])", "user": "54d5fbe9e4b0a52adc2e2014"}, {"problem": 49, "code": "(fn [n col]\n  [ (take n col) (take-last (- (count col) n) col)])", "user": "541f89a5e4b01498b1a71a99"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "54ff2342e4b07d26eda61d49"}, {"problem": 49, "code": "(fn [n coll] (vector \n              (take n coll)\n              (drop n coll)))", "user": "54f9d900e4b01ecee9d88844"}, {"problem": 49, "code": "(fn [n col]\n  [(vec (take n col)) (vec (drop n col))])", "user": "51f66891e4b06ff1c25c52c1"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "54e0a9c3e4b024c67c0cf7b5"}, {"problem": 49, "code": "(fn [n x] [(take n x) (drop n x)])", "user": "51ecb0fee4b0bb5070431583"}, {"problem": 49, "code": "(fn [n s] [(take n s) (drop n s)])", "user": "54febf4be4b07d26eda61d45"}, {"problem": 49, "code": "(fn split-at-number [split-number array] [(take split-number array)  (drop split-number array)])", "user": "54f6f00fe4b01ecee9d88814"}, {"problem": 49, "code": "(fn\n  [idx s]\n  (vector (into [] (take idx s)) (into [] (drop idx s))))", "user": "54bad977e4b0ed20f4ff6eb9"}, {"problem": 49, "code": "#(concat[(take % %2)][(drop % %2)])", "user": "54fc7d89e4b07d26eda61d2b"}, {"problem": 49, "code": "(fn [n s] (list (take n s) (take-last (- (count s) n) s)))", "user": "54eee3a3e4b024c67c0cf879"}, {"problem": 49, "code": "(fn\n  [index liste]\n  (conj\n\t  (conj []\n\t\t  (loop [accum [] i 0]\n    \t\t(if (== i index)\n    \t  \taccum\n      \t\t(recur (conj accum (nth liste i)) (inc i))\n      \t\t)\n          )\n      \t)\n     \t(drop index liste)\n  \t)\n)", "user": "54410a71e4b032a45b869367"}, {"problem": 49, "code": "(fn [n coll]\n\n    (loop [a [] b [] i 0]\n        (if-not (= i (count coll))\n           (if (< i n)\n              (recur (conj a (get coll i)) b (inc i))\n              (recur a (conj b (get coll i)) (inc i))\n           )\n           [a b]\n        )\n    )\n\n)", "user": "54ff2968e4b07d26eda61d4a"}, {"problem": 49, "code": "(fn [n l]\n  (let [cv #(comp vec %)\n        x (cv take)\n        y (cv drop)]\n    ((juxt x y) n l)))", "user": "54caaa48e4b057c6fda3a267"}, {"problem": 49, "code": "(fn[num col](\n  list(take num col)\n        (take-last (- (count col) num) col)\n))", "user": "54f4a457e4b0f2f3c5226e83"}, {"problem": 49, "code": "(fn [x y]\n((fn split [index col result] \n  (if (= 0 index)\n  [result (vec col)]\n  (recur (dec index) (rest col) (conj result (first col))\n      )\n   )\n) x y []))", "user": "55034bf0e4b086ebe8a79c6d"}, {"problem": 49, "code": "(fn [n coll] (vector (take n coll) (drop n coll)))", "user": "54edc818e4b024c67c0cf865"}, {"problem": 49, "code": "#(list (take %1 %2) (nthrest %2 %1))", "user": "54b31445e4b09f271ff37d35"}, {"problem": 49, "code": "#(vector  (take %1 %2) (drop %1 %2))", "user": "54bcab07e4b0ed20f4ff6ed5"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll)(drop n coll)])", "user": "54eea988e4b024c67c0cf875"}, {"problem": 49, "code": "(fn [i xs]\n  [(take i xs)\n   (drop i xs)])", "user": "521d064fe4b0c4ef0be830a8"}, {"problem": 49, "code": "(fn f [n s]\n  [(take n s) (drop n s)])", "user": "54ff6084e4b07d26eda61d50"}, {"problem": 49, "code": "(fn [x coll] [(take x coll) (drop x coll)])", "user": "55088bb3e4b06e50f9beb10c"}, {"problem": 49, "code": "#( map identity [(take % %2) (drop % %2)] )", "user": "54b331dbe4b09f271ff37d37"}, {"problem": 49, "code": "(fn [n l] [(take n l) (drop n l)])", "user": "54df2609e4b024c67c0cf7a9"}, {"problem": 49, "code": "(fn solve [n coll]\n  (if (zero? n)\n    [[] coll]\n    (let [ret (solve (dec n) (rest coll))]\n      [(cons (first coll) (first ret)) (second ret)])))", "user": "55058a4fe4b086ebe8a79c89"}, {"problem": 49, "code": "#(conj [] (take %1 %2) (drop %1 %2))", "user": "4f03e60d535dcb61093f6b7a"}, {"problem": 49, "code": "#(conj  (conj () (drop % %2))  (take % %2))", "user": "5508102ee4b021ccfedb96b0"}, {"problem": 49, "code": "#(vector (take %1 %2)(drop %1 %2))", "user": "5505ceb3e4b086ebe8a79c8b"}, {"problem": 49, "code": "(fn split-at1 [n lst]\n  (list (take n lst) (nthrest lst n)))", "user": "534f8c9ae4b084c2834f4acd"}, {"problem": 49, "code": "(fn splitsy [location lst] \n    (let [cnt (count lst)]\n        (conj '() (take-last (- cnt location) lst) (take location lst) )))", "user": "54f09599e4b024c67c0cf89d"}, {"problem": 49, "code": "#(concat (list (take %1 %2)) (list (rest (drop (dec %1) %2))))", "user": "54e24a05e4b024c67c0cf7ce"}, {"problem": 49, "code": "#(list (take %1 %2) (nthnext %2 %1))", "user": "5501de12e4b07d26eda61d7b"}, {"problem": 49, "code": "(fn [n xs]\n  (map #(% xs) \n       (map #(partial % n) \n            [take drop])))", "user": "54f904c2e4b01ecee9d88832"}, {"problem": 49, "code": "(fn [i coll]\n  [(take i coll) (drop i coll)])", "user": "550615c0e4b021ccfedb9696"}, {"problem": 49, "code": "(fn [n coll] (let [s (partition-all n coll)]\n  (list (first s) (apply concat (rest s)))))", "user": "534fa9dae4b084c2834f4acf"}, {"problem": 49, "code": "(fn [x y] [(take x y) (drop x y)])", "user": "550e0373e4b06e50f9beb162"}, {"problem": 49, "code": "(fn [n c] [(take n c) (drop n c)])", "user": "543be8f0e4b032a45b869337"}, {"problem": 49, "code": "(fn a [sep coll]\n  (vector\n     (vec (take sep coll)) (vec (drop sep coll))))", "user": "549674cde4b0b312c081ff66"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "550174b5e4b07d26eda61d73"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "550609b3e4b021ccfedb9695"}, {"problem": 49, "code": "#(vector (subvec %2 0 %1)(subvec %2 %1))", "user": "54f15cb8e4b024c67c0cf8b1"}, {"problem": 49, "code": "#(seq [(take %1 %2) (drop %1 %2)])", "user": "54fdaeace4b07d26eda61d39"}, {"problem": 49, "code": "#( list (take %1 %2) (drop %1 %2) )\n\n; (juxt take drop)", "user": "550fdc1de4b06e50f9beb17d"}, {"problem": 49, "code": "(fn [n v] \n  [(subvec v 0 n ) (subvec v n (count v))])", "user": "54d127b7e4b0e8a36923e5de"}, {"problem": 49, "code": "#(-> [(take %1 %2) (drop %1 %2)])", "user": "550aeddae4b06e50f9beb135"}, {"problem": 49, "code": "(fn [n c] [(take n c) (drop n c)])", "user": "4fa5c8dde4b081705acca1af"}, {"problem": 49, "code": "(fn \n  [n coll]\n  (list (take n coll) (nthrest coll n))\n  )", "user": "550e8e04e4b06e50f9beb167"}, {"problem": 49, "code": "(fn [num coll]\n  [(take num coll) (drop num coll)])", "user": "54ccf9d5e4b057c6fda3a295"}, {"problem": 49, "code": "(fn [i base] (cons (take i base) (list (drop i base))))", "user": "54cbd97ae4b057c6fda3a283"}, {"problem": 49, "code": "(fn [n coll] (conj nil (drop n coll) (take n coll)))", "user": "540a4f20e4b0addc1aec66ef"}, {"problem": 49, "code": "#(conj [] (take % %2) (drop % %2))", "user": "5507cfd3e4b021ccfedb96ad"}, {"problem": 49, "code": "(fn [i coll]\n  [(take i coll)\n   (drop i coll)])", "user": "51515a19e4b03e678e393acc"}, {"problem": 49, "code": "(fn my-split [n s]\n  (concat [(take n s)] [(drop n s)])\n  )", "user": "550c55d0e4b06e50f9beb14d"}, {"problem": 49, "code": "(fn [k s] \n  [(take k s) (drop k s)])", "user": "53213810e4b09d4e7a9b54b0"}, {"problem": 49, "code": "(fn [n s]\n                 (let [fst (take n s)\n                       snd (drop n s)]\n                   [fst snd]))", "user": "54c3747de4b045293a27f60e"}, {"problem": 49, "code": "#(vector (take %1 %2) (take-last (- (count %2) %1) %2))", "user": "5511fd7ee4b06e50f9beb19e"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "542725fce4b01498b1a71b22"}, {"problem": 49, "code": "(fn [ x y ] (vector (take x y) (drop x y)))", "user": "5510f734e4b06e50f9beb18f"}, {"problem": 49, "code": "(fn [n lst] [(take n lst) (drop n lst)])", "user": "54c8ac49e4b045293a27f64e"}, {"problem": 49, "code": "(fn [n coll]\n   (list (take n coll)\n         (drop n coll)))", "user": "5515b138e4b055c2f668d4ed"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5514a60fe4b055c2f668d4d7"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)]\n  )", "user": "5512aca6e4b055c2f668d4b4"}, {"problem": 49, "code": "(fn [s v] [(vec (take s v)) (vec (drop s v))])", "user": "532018efe4b08068f379edcd"}, {"problem": 49, "code": "#(cons (take %1 %2) (list (drop %1 %2)))", "user": "551535cee4b055c2f668d4df"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5510aa92e4b06e50f9beb188"}, {"problem": 49, "code": "(juxt take drop)", "user": "54708efce4b00cfc9eacc1b9"}, {"problem": 49, "code": "(juxt take drop)", "user": "55170dd9e4b06a49daca83bd"}, {"problem": 49, "code": "(juxt take drop)", "user": "52e087dde4b09f7907dd1412"}, {"problem": 49, "code": "(fn [i xs] (concat [(take i xs)] [(drop i xs)]))", "user": "51bb08a4e4b0fe3ecfb46446"}, {"problem": 49, "code": "(fn [n seq]\n  (loop [s seq n n aux [] r []]\n    (if (= n 0)\n      (loop [s2 s aux2 []]\n        (if (empty? s2)\n          (conj r aux aux2)\n          (recur (rest s2) (conj aux2 (first s2)))))\n      (recur (rest s) (dec n) (conj aux (first s)) r))))", "user": "55151417e4b055c2f668d4da"}, {"problem": 49, "code": "(fn [n xs]\n    (loop [n n xs xs acc []]\n      (if (zero? n)\n        (conj (vector acc) (vec xs))\n        (recur (dec n) (rest xs) (conj acc (first xs))))))", "user": "551a21ece4b091ff45eda993"}, {"problem": 49, "code": "(juxt take drop)", "user": "5512b15ae4b055c2f668d4b5"}, {"problem": 49, "code": "(fn sp [n l] \n  (if (= n 0) (cons '() (list l))\n    (cons\n     (cons (first l) \n           (first (sp (- n 1) (rest l)))) \n     (rest (sp (- n 1) (rest l))))))", "user": "53504a7de4b084c2834f4ad9"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5519c157e4b00ace28fe6e32"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5515649fe4b055c2f668d4e3"}, {"problem": 49, "code": "(fn [n s] (list (take n s) (drop n s)))", "user": "550ff2a3e4b06e50f9beb17f"}, {"problem": 49, "code": "(fn\n  [n coll]\n  (let [pcoll (partition-all n coll)\n\t\tfcoll (first pcoll)\n        lcoll (rest pcoll)\n        ]\n   \t[fcoll (apply concat lcoll)]\n    )\n  )", "user": "5510d948e4b06e50f9beb18d"}, {"problem": 49, "code": "#(identity [(take %1 %2) (drop %1 %2)])", "user": "503f923fe4b00d1a725ff2ad"}, {"problem": 49, "code": "(fn [n s]\n  (loop [r s,\n         p [],\n         n n]\n    (cond\n     (or (= n 0) (empty? r)) [p r]\n     true (recur (rest r) (conj p (first r)) (dec n)))))", "user": "551ed214e4b08d5046aa8a4d"}, {"problem": 49, "code": "(fn [n col]\n   (vector (take n col) (drop n col)))", "user": "550b5c10e4b06e50f9beb143"}, {"problem": 49, "code": "(fn [n c] (list (take n c) (drop n c)))", "user": "55164856e4b06a49daca83b3"}, {"problem": 49, "code": "(fn split[n xs]\n  [(take n xs) (drop n xs)])", "user": "4dd76bf9535d2dad7130b5d1"}, {"problem": 49, "code": "(fn [n xs]\n  [(take n xs) (drop n xs)])", "user": "551ecb76e4b08d5046aa8a4c"}, {"problem": 49, "code": "(fn [n coll]\n  (vector (into [] (take n coll)) (into [] (nthrest coll n))))", "user": "52b36925e4b0c58976d9ad0b"}, {"problem": 49, "code": "#((fn foo [x res1 res2] \n    (if (= x 0)\n      (list res1 res2)\n      (recur (dec x) (conj res1 (first res2)) (rest res2))\n      )\n    ) %1 [] %2)", "user": "5520974be4b08d5046aa8a63"}, {"problem": 49, "code": "(fn [a b] [(take a b) (drop a b)])", "user": "54126d0ce4b01498b1a719d5"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "551c66dae4b07993ea3788de"}, {"problem": 49, "code": "(fn [i v] (vector (subvec v 0 i) (subvec v i)))", "user": "4f4e78fee4b03ad3f0c10cc8"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "551a64cde4b091ff45eda996"}, {"problem": 49, "code": "#(list (take %1 %2) (take-last (- (count %2) %1) %2) )", "user": "514504c2e4b021a5ff8301fc"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "5426fb8fe4b01498b1a71b1f"}, {"problem": 49, "code": "(fn [x coll] (list (take x coll) (nthrest coll x)))", "user": "5509bec5e4b06e50f9beb121"}, {"problem": 49, "code": "#(vector (into [] (take %1 %2)) (into [] (drop %1 %2)))", "user": "54393c3fe4b032a45b86931a"}, {"problem": 49, "code": "(fn [n v] [(subvec v 0 n) (subvec v n (count v))])", "user": "552356fae4b0882d96d091af"}, {"problem": 49, "code": "(fn SplitSeq [n coll]\n  (conj [] (vec (take n coll)) (vec (drop n coll))))", "user": "50c6052ce4b0c9dc10d15c56"}, {"problem": 49, "code": "#( vector (take % %2) (drop % %2))", "user": "5156e767e4b04360f2428e6b"}, {"problem": 49, "code": "(fn [n xs]\n  [(take n xs) (drop n xs)])", "user": "551ee974e4b08d5046aa8a50"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "55201d18e4b08d5046aa8a5d"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "540459bfe4b0addc1aec6656"}, {"problem": 49, "code": "(fn [n x] \n  (list \n   (apply vector (take n x)) \n   (apply vector (nthrest x n))))", "user": "550e52dbe4b06e50f9beb165"}, {"problem": 49, "code": "#(conj [] (into [] (take %1 %2)) (into [] (take-last (- (count %2) %1) %2)))", "user": "55249b3fe4b0882d96d091c5"}, {"problem": 49, "code": "(fn [n xs]\n  [(take n xs) (drop n xs)])", "user": "5522cd9ae4b0882d96d091ab"}, {"problem": 49, "code": "(fn [n coll]\n      (map #(into [] %) (partition-by #(> n (.indexOf coll %)) coll)))", "user": "54b67463e4b05787c3b163bc"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "533c2605e4b0e30313ee6cd7"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2) )", "user": "55253217e4b0882d96d091ce"}, {"problem": 49, "code": "(fn [n coll]\n  (conj []\n        (vec (take n coll)) (vec (take-last (- (count coll) n) coll))))", "user": "54ab1b5ae4b09f271ff37cc2"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "53fcd574e4b0de5c418485d9"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "54074fc5e4b0addc1aec66b6"}, {"problem": 49, "code": "(juxt take drop)", "user": "53566545e4b04ce2eb3ed267"}, {"problem": 49, "code": "(fn [n x]\n   [(take n x)\n     (drop n x)])", "user": "55252392e4b0882d96d091cc"}, {"problem": 49, "code": "(fn [a b] [(take a b) (drop a b)])", "user": "55280930e4b0ffed3738f93b"}, {"problem": 49, "code": "(fn [n coll] (vector (vec (take n coll)) (vec (drop n coll))))", "user": "55249f64e4b0882d96d091c6"}, {"problem": 49, "code": "(fn [number coll] [(take number coll) (drop number coll)])", "user": "54e4edcae4b024c67c0cf7f3"}, {"problem": 49, "code": "(fn splitat\n  [n l]\n  [(take n l) (drop n l)])", "user": "551afdf8e4b07993ea3788cb"}, {"problem": 49, "code": "(fn [n xs] [(take n xs) (drop n xs)])", "user": "552a672de4b0ffed3738f954"}, {"problem": 49, "code": "(fn [n s] [(take n s) (drop n s)])", "user": "505106fee4b05ab4c7e07d38"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5484fab9e4b0e286459a11a6"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "552694e7e4b0ffed3738f920"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "550d9452e4b06e50f9beb15d"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll)(drop n coll)]\n  )", "user": "55240916e4b0882d96d091b6"}, {"problem": 49, "code": "(fn [n coll]\n  (loop [P [] C coll N n]\n    (if (or (zero? N) (empty? C))\n      [P C]\n      (recur (conj P (first C)) (rest C) (dec N))\n    )\n  )\n  )", "user": "552d9013e4b076ab5578f7ea"}, {"problem": 49, "code": "(fn [n xs] [(take n xs) (drop n xs)])", "user": "5524120fe4b0882d96d091b7"}, {"problem": 49, "code": "(fn [x  y] (vector (subvec y 0 x) (subvec y x)))", "user": "55253799e4b0882d96d091cf"}, {"problem": 49, "code": "#(list (subvec %2 0 %1) (subvec %2 %1))", "user": "552bc0f5e4b0ffed3738f968"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "54f4adc8e4b0f2f3c5226e86"}, {"problem": 49, "code": "(fn [n xs] (vector (take n xs) (drop n xs)))", "user": "55297a7ae4b0ffed3738f94b"}, {"problem": 49, "code": "(fn [s c]\n  (loop [c c\n         n 0\n         part1 (vector)\n         part2 (vector)]\n    (if (empty? c)\n      (vector part1 part2)\n      (if (< n s)\n      \t(recur (rest c) (inc n) (conj part1 (first c)) part2)\n      \t(recur (rest c) (inc n) part1 (conj part2 (first c)))))))", "user": "5530b827e4b076ab5578f818"}, {"problem": 49, "code": "(fn\n  [n xs]\n  (vec (list (vec (take n xs)) (vec (take-last (- (count xs) n) xs)))) )", "user": "51071f2ee4b05b2b4eee748e"}, {"problem": 49, "code": "(fn [n xs] [(take n xs) (drop n xs)])", "user": "5531e445e4b09218d5f44f76"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "552e1c98e4b076ab5578f7ee"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "545ddac3e4b01be26fd74676"}, {"problem": 49, "code": "(fn [n xs]\n    [(take n xs) (drop n xs)])", "user": "55316b8ae4b076ab5578f825"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "54db3d82e4b024c67c0cf75f"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll)\n   (drop n coll)])", "user": "553698fae4b09218d5f44fc0"}, {"problem": 49, "code": "#(list (take %1 %2) (nthnext %2 %1))", "user": "50e54fe4e4b049a9877538a0"}, {"problem": 49, "code": "(fn [n coll]\n  (loop [i 0 c coll part []]\n    (if (= i n)\n      (conj [] part (apply vector c))\n\t    (recur (+ i 1) (rest c) (conj part (first c))))))", "user": "5448616be4b032a45b8693c9"}, {"problem": 49, "code": "(fn split\n  ([n xs] (split n xs []))\n  ([n xs lh]\n   (if (= n 0)\n     [lh xs]\n     (split (- n 1) (rest xs) (conj lh (first xs))))))", "user": "55355397e4b09218d5f44fae"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "553a43cae4b09218d5f44ff2"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "55377460e4b09218d5f44fc9"}, {"problem": 49, "code": "(fn [x arr] (identity [(take x arr) (drop x arr)] )\n  )", "user": "553b8fdbe4b09218d5f45004"}, {"problem": 49, "code": "(fn [n xs] [(take n xs) (drop n xs)])", "user": "553abb28e4b09218d5f44ffb"}, {"problem": 49, "code": "(fn [n xso]\n  (loop [res [] xs xso i 0]\n    (if (= i n)\n      [res xs]\n      (recur (conj res (first xs))\n             (rest xs)\n             (inc i)))))", "user": "553b87abe4b09218d5f45003"}, {"problem": 49, "code": "(fn [n xs] (vector (take n xs) (drop n xs)))", "user": "553e0b70e4b0a04f792994e8"}, {"problem": 49, "code": "(fn [n xs] (vector (into [] (take n xs)) (into [] (drop n xs))))", "user": "52ea764ee4b09f7907dd14be"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "553dd883e4b0a04f792994e6"}, {"problem": 49, "code": "#(list (take % %2 ) (reverse (take (- (count %2) %) (reverse %2))))", "user": "550fd845e4b06e50f9beb17c"}, {"problem": 49, "code": "(juxt take drop)", "user": "5540cc0ce4b0a04f79299505"}, {"problem": 49, "code": "(fn [n lst] [(take n lst) (drop n lst)])", "user": "54e540c1e4b024c67c0cf7f9"}, {"problem": 49, "code": "#(let [x (take %1 %2) y (drop %1 %2)] [x y])", "user": "5313d68de4b08068f379ed0f"}, {"problem": 49, "code": "(fn [n xs] [(take n xs) (drop n xs)])", "user": "52cda397e4b07d0d72b2737a"}, {"problem": 49, "code": "#(cons (take % %2) (list (drop % %2)))", "user": "54eee38ce4b024c67c0cf878"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "55274467e4b0ffed3738f92b"}, {"problem": 49, "code": "(fn [n a]\n  [(->> a (take n))\n   (->> a (drop n))\n  ])", "user": "543496e1e4b0b6b47310fcf2"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "55074092e4b021ccfedb96a4"}, {"problem": 49, "code": ";(fn [n v]\n;  [(subvec v 0 n) (subvec v n)])\n(fn [n s]\n  [(take n s) (drop n s)])", "user": "534da51fe4b084c2834f4aa4"}, {"problem": 49, "code": "(juxt take drop)", "user": "550f1c99e4b06e50f9beb171"}, {"problem": 49, "code": "(juxt take drop)", "user": "52e851bfe4b09f7907dd149a"}, {"problem": 49, "code": "(fn [split-pos coll] [(take split-pos coll) (drop split-pos coll)] )", "user": "5535e822e4b09218d5f44fb2"}, {"problem": 49, "code": "(juxt take drop)", "user": "543366dde4b0b6b47310fcdf"}, {"problem": 49, "code": "(juxt take drop)", "user": "5532a04ee4b09218d5f44f82"}, {"problem": 49, "code": "(fn [d dd]  [(take d dd) (drop d dd)])", "user": "553478dce4b09218d5f44f9d"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "55337e61e4b09218d5f44f8e"}, {"problem": 49, "code": "(fn [n coll]\n  (list (take n coll) (drop n coll)))", "user": "551d5cb9e4b07993ea3788e9"}, {"problem": 49, "code": "(fn my-part2 [p c]\n  (-> [] (conj (take p c)) (conj (drop p c))))", "user": "5546704be4b0a04f7929953d"}, {"problem": 49, "code": "#(cons (take %1 %2) (cons (take-last (- (count %2) %1) %2 ) []) )", "user": "552800d7e4b0ffed3738f93a"}, {"problem": 49, "code": "(fn [x coll]\n  [(take x coll) (nthrest coll x)])", "user": "54980edae4b0b312c081ff79"}, {"problem": 49, "code": "(fn split [n coll]\n  [(take n coll) (drop n coll)])", "user": "5264383be4b03e8d9a4a70cb"}, {"problem": 49, "code": "(fn mc [n l]\n  (loop [ll l, i 1, res []]\n    (if (= i n) (vector (conj res (first ll)) (rest ll))\n                (recur (rest ll) (inc i) (conj res (first ll)))\n                )\n    )\n  )", "user": "54e84d1ee4b024c67c0cf822"}, {"problem": 49, "code": "#((juxt (partial take %) (partial drop %)) %2)", "user": "554680cbe4b0a04f7929953e"}, {"problem": 49, "code": "(fn [num seq]\n  (loop [seq seq count 1 accum []]\n    (if (= count num) [(conj accum (first seq)) (rest seq)]\n      (recur (rest seq) (inc count) (conj accum (first seq))))))", "user": "554dff83e4b00713264bd98d"}, {"problem": 49, "code": "#(vector (take %1 %2)\n         (drop %1 %2))", "user": "554b7056e4b0a04f79299583"}, {"problem": 49, "code": "(fn\n  [n se]\n  (loop [first-seq (vector)\n         second-seq se\n         m 0]\n    (if (< m n)\n      (recur (conj first-seq (first second-seq)) (rest second-seq) (inc m))\n      [first-seq second-seq])))", "user": "554d386ee4b0a04f792995b8"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "554b9c3ee4b0a04f79299594"}, {"problem": 49, "code": "#(let [ [a & b] (partition-all %1 %2)] [a (reduce concat b)])", "user": "54f86b8ce4b01ecee9d88828"}, {"problem": 49, "code": "#(vector (subvec %2 0 %) (subvec %2 %))", "user": "53571732e4b04ce2eb3ed275"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "555093b2e4b00713264bd9ab"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "554b8572e4b0a04f79299589"}, {"problem": 49, "code": "(fn [n coll]\n   [(take n coll) (drop n coll)])", "user": "5486e317e4b0e286459a11c0"}, {"problem": 49, "code": "(fn [x y] [(subvec y 0 x) (subvec y x)])", "user": "5540fe42e4b0a04f7929950a"}, {"problem": 49, "code": "(fn [n xs]\n  [(take n xs) (drop n xs)])", "user": "5283a919e4b0239c8a67adbe"}, {"problem": 49, "code": "(fn [a b]\n   [(take a b)\n    (take-last\n     (- (count b) a) b)\n    ]\n   )", "user": "554b2151e4b0a04f79299580"}, {"problem": 49, "code": "(fn [n seq] (list (take n seq) (drop n seq)))", "user": "5553b924e4b0deb715856e06"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "554edb85e4b00713264bd99a"}, {"problem": 49, "code": "(juxt take drop)", "user": "52ce1abfe4b07d0d72b27389"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5280a1ece4b0757a1b171407"}, {"problem": 49, "code": "(fn splt \n\t[i l]\n\t[(take i l)\n\t(take-last (- (count l) i) l)])", "user": "5545477fe4b0a04f79299531"}, {"problem": 49, "code": "#(conj [] (take %1 %2) (drop %1 %2))", "user": "55429859e4b0a04f7929951f"}, {"problem": 49, "code": "(fn [n s] [(take n s) (drop n s)])", "user": "55536a8ae4b0deb715856e03"}, {"problem": 49, "code": "#(vector (vec (take % %2)) (vec (drop % %2)))", "user": "5523fce8e4b0882d96d091b4"}, {"problem": 49, "code": "(fn [n my-seq] (vector (take n my-seq) (drop n my-seq)))", "user": "5545f713e4b0a04f7929953a"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "54d1b6ffe4b0e8a36923e5e6"}, {"problem": 49, "code": "(fn [n c]\n  [(take n c) (drop n c)])", "user": "552d2e4fe4b076ab5578f7e1"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "555521a5e4b0deb715856e12"}, {"problem": 49, "code": "#(conj [] (take % %2) (drop % %2))", "user": "55484800e4b0a04f79299558"}, {"problem": 49, "code": "#(let [first (into [] (take %1 %2)) \n       second (into [] (drop %1 %2))] \n   [first second])", "user": "547c2c6ce4b0c51c1f4d72e3"}, {"problem": 49, "code": "(juxt take drop)", "user": "5504dd64e4b086ebe8a79c83"}, {"problem": 49, "code": "(juxt take drop)", "user": "5547bcf2e4b0a04f79299551"}, {"problem": 49, "code": "(juxt take drop)", "user": "5552b617e4b0deb715856df8"}, {"problem": 49, "code": "(fn [i s]\n  (loop [i i s1 s s2 []]\n    (if (= 0 i)\n      [s2 (vec s1)]\n      (recur (dec i)\n             (rest s1)\n             (into s2 [(first s1)])))))", "user": "54cad59ee4b057c6fda3a26e"}, {"problem": 49, "code": "#(vec (map vec [(take %1 %2) (drop %1 %2)]))", "user": "5550bcece4b00713264bd9ae"}, {"problem": 49, "code": "(fn [n s]\n  (vector (into [] (take n s))\n          (into [] (drop n s))))", "user": "5169b23fe4b03f62cda68cee"}, {"problem": 49, "code": "(fn [x l] (vector (take x l) (drop x l)))", "user": "54857657e4b0e286459a11ac"}, {"problem": 49, "code": "(juxt take drop)", "user": "55568a7de4b0deb715856e1c"}, {"problem": 49, "code": "(juxt take drop)", "user": "54026d7de4b0df28a13c62cf"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))\n\n;(fn [n xs]\n;   (let [parts (partition-by #(>= (first %) n) (map-indexed vector xs))]\n;     (vector (map #(last %) (first parts)) (map #(last %) (last parts)))\n;     ))\n\n\n;(fn [n xs]\n;  (loop [in xs p1 [] p2 [] i 0]\n;    (cond\n;      (empty? in) [p1 p2]\n;      (< i n) (recur (rest in) (conj p1 (first in)) p2 (inc i))\n;      :else (recur (rest in) p1 (conj p2 (first in)) (inc i))\n;      )))", "user": "55150524e4b055c2f668d4d9"}, {"problem": 49, "code": "(fn [n sq]\n  (loop [i 0 remainder sq accume [[] []]]\n    (if (empty? remainder)\n      accume\n      (let [current (first remainder)\n            updated \n            (if (>= i n) \n              [(accume 0) (conj (accume 1) current)]\n              [(conj (accume 0) current) []])]\n        (recur (inc i) (rest remainder) updated)))))", "user": "5256a1d4e4b0541d1855ba29"}, {"problem": 49, "code": "(fn [n coll] (vector (take n coll) (drop n coll)))", "user": "553fe819e4b0a04f792994fc"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "55041b5ee4b086ebe8a79c78"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "4faf97d8e4b081705acca258"}, {"problem": 49, "code": "(fn [n seq] [(take n seq) (nthrest seq n)])", "user": "555bd27ae4b0b056612e2244"}, {"problem": 49, "code": "(fn split [n coll]\n  [(take n coll) (drop n coll)])", "user": "547884d7e4b0c51c1f4d72bd"}, {"problem": 49, "code": "#(vector (first (partition %1 %2)) (drop %1 %2))", "user": "535944d6e4b04ce2eb3ed296"}, {"problem": 49, "code": "(fn [p s]\n  (reduce\n    (fn [[s1 s2] v]\n      (if (= p (count s1))\n        [s1 (conj s2 v)]\n        [(conj s1 v) s2]))\n    [[] []]\n    s))", "user": "556159fae4b0c656e3ff17c7"}, {"problem": 49, "code": "(fn [n s] [(take n s) (drop n s)])", "user": "555a5731e4b0deb715856e44"}, {"problem": 49, "code": "(fn [n x]\n  [(take n x) (drop n x)])", "user": "5550b5a0e4b00713264bd9ad"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "553c05b7e4b09218d5f45011"}, {"problem": 49, "code": "#(list (vec (take %1 %2)) (vec (drop %1 %2)))", "user": "554bc64ae4b0a04f79299598"}, {"problem": 49, "code": "(fn [index xs]\n  [(take index xs) (drop index xs)])", "user": "5545eebee4b0a04f79299539"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "4ef08bd6535dced4c769f20a"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "5562f08ae4b0c656e3ff17df"}, {"problem": 49, "code": "#(cons (take %1 %2) (list (drop %1 %2)))", "user": "50c95c4fe4b0bed41a12298f"}, {"problem": 49, "code": "#(conj (list (drop %1 %2)) (take %1 %2))", "user": "54982522e4b0b312c081ff7c"}, {"problem": 49, "code": "(fn [n a ] (let [x (take n a)\n                y (drop n a)]\n            (vector x y)))", "user": "549b1e50e4b0f3d1d8e70f7a"}, {"problem": 49, "code": "(fn [n xs] (list (take n xs) (drop n xs)))", "user": "555f3bfde4b0a2eb076a39c1"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "55586905e4b0deb715856e2b"}, {"problem": 49, "code": "(fn [n s] [(take n s) (drop n s)])", "user": "55495318e4b0a04f79299566"}, {"problem": 49, "code": "(juxt take drop)", "user": "555ac933e4b0deb715856e49"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "55645592e4b0c656e3ff1802"}, {"problem": 49, "code": "(fn [n coll] [(vec (take n coll)) (vec (drop n coll))] )", "user": "55631739e4b0c656e3ff17e2"}, {"problem": 49, "code": "(fn [n v]\n  [(subvec v 0 n) (subvec v n)])", "user": "556405e5e4b0c656e3ff17fb"}, {"problem": 49, "code": "(fn [n l] [(take n l) (drop n l)])", "user": "54f8b6f4e4b01ecee9d8882c"}, {"problem": 49, "code": "(juxt take drop)", "user": "5566d812e4b0c656e3ff1837"}, {"problem": 49, "code": "(fn split-sequence [n coll]\n  [(subvec coll 0 n) (subvec coll n)])", "user": "5501a1e1e4b07d26eda61d75"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "552a793ee4b0ffed3738f955"}, {"problem": 49, "code": "(fn [n xs] [(take n xs) (drop n xs)])", "user": "554bced1e4b0a04f79299599"}, {"problem": 49, "code": "#(concat [(take %1 %2)] [(drop %1 %2)])", "user": "554c296ae4b0a04f792995a1"}, {"problem": 49, "code": "(fn [n xs] [(take n xs) (drop n xs)])", "user": "555f0789e4b0a2eb076a39bf"}, {"problem": 49, "code": "(juxt take drop)", "user": "5566463ee4b0c656e3ff1831"}, {"problem": 49, "code": "#(vector (into [] (take %1 %2)) (into [] (drop %1 %2)))", "user": "553fa883e4b0a04f792994f9"}, {"problem": 49, "code": "(fn [where what] [(take where what) (drop where what)])", "user": "5468a110e4b00cfc9eacc13d"}, {"problem": 49, "code": "(fn split [ n c ]\n   (loop [ oc c, lc [], rc []]\n     (if (<= (count oc) 0)\n       ( vector lc rc  )\n     (if (< (count lc) n)\n       (recur \n         (rest oc) \n         (conj lc  \n                 (first oc)) rc)\n       (recur (rest oc) \n              lc \n              (conj rc \n                    (first oc)))))))", "user": "556880dae4b0c656e3ff1856"}, {"problem": 49, "code": "(fn [idx col]\n    (let [firstres (take idx col)\n          rest (drop idx col)]\n      [firstres rest]))", "user": "554a75c9e4b0a04f79299575"}, {"problem": 49, "code": "#(identity [(drop-last (- (count %2) %1) %2) (drop %1 %2)])", "user": "52c70127e4b0c2d177d6211a"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "556b83fbe4b09a3098a524ee"}, {"problem": 49, "code": "(fn[pos, col]\n  [(subvec col 0 pos)(subvec col pos)])", "user": "556c70dae4b09a3098a524fd"}, {"problem": 49, "code": "#(concat (list (take %1 %2)) (list (drop %1 %2)))", "user": "55654e17e4b0c656e3ff1818"}, {"problem": 49, "code": "(fn foo\n  [x ys]\n  (let [c (count ys)]\n    (list (drop-last (- c x) ys) (drop x ys))))", "user": "55640c62e4b0c656e3ff17fd"}, {"problem": 49, "code": "#(conj [] (take % %2) (drop % %2))", "user": "524f3e6de4b0541d1855b805"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "55702081e4b09a3098a52529"}, {"problem": 49, "code": "(fn [n s]\n  [(take n s) (reverse(take (- (count s) n) (reverse s)))])", "user": "55625903e4b0c656e3ff17d7"}, {"problem": 49, "code": "#(vector (take %1 %2) (nthrest %2 %1))", "user": "556a3243e4b09a3098a524de"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "556f35fee4b09a3098a5251a"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "550fa523e4b06e50f9beb17a"}, {"problem": 49, "code": "(fn [size sq]\n  [\n         (into [](take size sq) ) (into [] (drop size sq))\n        ]\n  )", "user": "52c911dde4b0c2d177d6213a"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5579638fe4b05c286339e094"}, {"problem": 49, "code": "#(if(< %1 (/ (count %2) 2)) (reverse (map reverse (partition-all (- (count %2) %1) (reverse %2))))(partition-all %1 %2))", "user": "5565d5e4e4b0c656e3ff181f"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "536046a9e4b063bf7a5f8fe1"}, {"problem": 49, "code": "(fn [n coll][(take n coll) (drop n coll)])", "user": "55306b8ae4b076ab5578f812"}, {"problem": 49, "code": "(fn [n a]\n  (let [len (count a)]\n    (concat\n     [(reverse (drop (- len n) (reverse a)))\n     (drop n a)])))", "user": "53065acbe4b02e8216869792"}, {"problem": 49, "code": "(fn[deb vec] [(into [] (take deb vec)) (into [] (take-last (- (count vec) deb) vec))])", "user": "55757e81e4b05c286339e063"}, {"problem": 49, "code": "(fn [n c] [(take n c) (drop n c)])", "user": "554f7ef2e4b00713264bd9a1"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "557a1e18e4b05c286339e09e"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "4f963487e4b0dcca54ed6cd9"}, {"problem": 49, "code": "#(do [(take % %2) (drop % %2)])", "user": "54e1939ce4b024c67c0cf7c5"}, {"problem": 49, "code": "#(list \n  (take %1 %2)\n  (drop %1 %2)\n         )", "user": "52503747e4b0541d1855b828"}, {"problem": 49, "code": "(fn [at xs] [(take at xs) (drop at xs)])", "user": "557954aae4b05c286339e092"}, {"problem": 49, "code": "#(vector (take %1 %2)(nthrest %2 %1))", "user": "51a3cc45e4b0e77c4ca60bfb"}, {"problem": 49, "code": "(fn split [x coll]\n  (cons (map coll (range 0 x)) [(map coll (range x (count coll)))]))", "user": "55630cc1e4b0c656e3ff17e0"}, {"problem": 49, "code": "(fn [n coll] (vector (take n coll) (drop n coll)))", "user": "540c6a8ae4b0addc1aec6702"}, {"problem": 49, "code": ";(fn[n xs]\n;  (... n xs))\n(fn [n xs]\n    (conj [] (take n xs) (drop n xs)))", "user": "541b41d1e4b01498b1a71a65"}, {"problem": 49, "code": "(fn [n xs] (vector (take n xs) (drop n xs)))", "user": "557dbc9de4b05c286339e0cd"}, {"problem": 49, "code": "(fn [n lst] (vector (take n lst) (drop n lst)))", "user": "506f0968e4b09350ab4199f5"}, {"problem": 49, "code": "#(list (take %1 %2) (nthrest %2 %1))", "user": "5581747fe4b05c286339e0fa"}, {"problem": 49, "code": "(fn [n ls]\n  (list (take n ls) (drop n ls))\n)", "user": "5581a6dae4b05c286339e0fe"}, {"problem": 49, "code": "(fn [rang liste] \n  (concat \n    (->> liste (take rang) (list))\n    (-> liste  (nthrest rang) (list))\n  )\n)", "user": "556f2009e4b09a3098a52519"}, {"problem": 49, "code": "(fn [n x] [(take n x) (drop n x)])", "user": "54e345a1e4b024c67c0cf7db"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])\n;(juxt take drop)", "user": "55647a31e4b0c656e3ff1808"}, {"problem": 49, "code": "(fn my-split-at [i coll]\n  [(take i coll) (drop i coll)])", "user": "557bcce4e4b05c286339e0b9"}, {"problem": 49, "code": "(fn[n coll] [(take n coll) (drop n coll)])", "user": "4f6d23cde4b07046d9f4efc6"}, {"problem": 49, "code": "(fn [n s]\n  (concat [(take n s)] [(nthrest s n)]))", "user": "558378dce4b05c286339e115"}, {"problem": 49, "code": "(fn my-split\n  [n s]\n  [(vec (take n s)) (vec (drop n s))])", "user": "557e9d17e4b05c286339e0d8"}, {"problem": 49, "code": "(fn [v l]\n  (loop [li l le [] t v]\n    (if (= t 0)\n      (conj '[] le (into [] li))\n      (recur (rest li) (conj le (first li)) (dec t)))))", "user": "52979551e4b02ebb4ef75043"}, {"problem": 49, "code": "(fn [n coll] \n  [(take n coll) (drop n coll)])", "user": "55842c7ee4b05c286339e11d"}, {"problem": 49, "code": "(fn [idx list-]\n  (loop [i 1\n         acc '()]\n    (if-not (> i idx)\n      (recur (inc i) (conj acc (nth list- (- idx i))))\n      [acc (drop idx list-)])))", "user": "54e79094e4b024c67c0cf818"}, {"problem": 49, "code": "#(vector (into [] (take %1 %2)) (into [] (drop %1 %2)))", "user": "51bfc1f0e4b0e49ef9037dd4"}, {"problem": 49, "code": "#(vector (vec (take % %2))\n         (vec (drop % %2)))", "user": "5585aa48e4b001b0851d7510"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "52a4879ce4b0c58976d9abdb"}, {"problem": 49, "code": "(fn split [n s]\n  (concat (list (take n s)) (list (take-last (- (count s) n) s))))", "user": "55885edae4b059ccff29b1f6"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "558466fce4b04192f3441eee"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "55896a0ce4b059ccff29b204"}, {"problem": 49, "code": "(fn [n s]\n   (list (take n s)\n         (drop n s))\n   )", "user": "55895eade4b059ccff29b202"}, {"problem": 49, "code": "#(vec (map vec (let [p (drop %1 %2) q (take %1 %2)] [q p])))", "user": "5589e88ae4b0277789237610"}, {"problem": 49, "code": "(fn [n coll] \n  (let [part (partition-all n coll)]\n    (list (first part) (apply concat (rest part)))))", "user": "554a270fe4b0a04f79299570"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "558a81fbe4b027778923761c"}, {"problem": 49, "code": ";(fn split2 [n xs]\n ; (conj [] \n ;        (take n xs) (drop n xs)))\n (fn split [n xs]\n  (loop [acc [] n n xs xs]\n    (if (zero? n) \n      (conj [] acc xs)\n      (recur (conj acc (first xs)) (dec n) (rest xs)))))", "user": "54dce62be4b024c67c0cf78b"}, {"problem": 49, "code": "(fn [i sq]\n  [(take i sq) (drop i sq)])", "user": "558bb38fe4b0277789237631"}, {"problem": 49, "code": "(fn split-data\n  [n pool]\n  (list\n   (take n pool)\n   (drop n pool))\n  )", "user": "54eff2bee4b024c67c0cf88d"}, {"problem": 49, "code": "(fn split-at-pos\n  [pos coll]\n    (letfn [(take-frst [] (take pos coll))\n            (take-lst [] (drop pos coll))]\n      [(take-frst) (take-lst)]))", "user": "5553b729e4b0deb715856e05"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "52b89d55e4b07a9af57922b3"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "555c6344e4b0b056612e224c"}, {"problem": 49, "code": "#(vector (take %1 %2) (nthrest %2 %1))", "user": "558b50d5e4b027778923762b"}, {"problem": 49, "code": "(fn split-at* [n s]\n  (list (take n s) (drop n s)))", "user": "5392500ae4b0b51d73faaeaf"}, {"problem": 49, "code": "(juxt take drop)", "user": "5589a735e4b059ccff29b206"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5148bcbee4b05514c84b7cc6"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "5587d8b3e4b059ccff29b1e8"}, {"problem": 49, "code": "(fn mysplit\n  [cnt myseq]\n  (list (take cnt myseq) (drop cnt myseq)))", "user": "55897fe2e4b059ccff29b205"}, {"problem": 49, "code": "(fn [n s]\n(split-with #(< (.indexOf s %1) n) s)\n)", "user": "5559b443e4b0deb715856e3c"}, {"problem": 49, "code": "(fn [x y][ (take x y) (drop x y)])", "user": "55818b0ee4b05c286339e0fb"}, {"problem": 49, "code": "(fn [n coll] (conj (conj [] (take n coll)) (drop n coll)))", "user": "54530382e4b0e397800069cc"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "558aabbfe4b0277789237621"}, {"problem": 49, "code": "(fn [n col] \n  [(take n col) (drop n col)])", "user": "54d22860e4b0e8a36923e5ef"}, {"problem": 49, "code": "(fn foo [n, s]\n  (loop [i 0, f s, p1 [], p2 []]\n    (if (empty? f)\n      (vector p1 p2)\n      (if (< i n)\n        (recur (inc i) (rest f) (conj p1 (first f)) p2)\n        (recur (inc i) (rest f) p1 (conj p2 (first f)))))))", "user": "5590e55de4b0277789237676"}, {"problem": 49, "code": "#(conj [] (take % %2) (drop % %2))", "user": "557f7c8be4b05c286339e0e0"}, {"problem": 49, "code": "(fn my-split-at [n coll]\n  [(take n coll) (drop n coll)])", "user": "55916d7be4b0604b3f94d57d"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "558df2ebe4b0277789237649"}, {"problem": 49, "code": "#(let [arr %2] [(take % arr) (drop % arr)])", "user": "552f300fe4b076ab5578f7ff"}, {"problem": 49, "code": "(fn [i l]\n  [(take i l) (drop i l)])", "user": "531c6e72e4b08068f379eda0"}, {"problem": 49, "code": "(fn [n v]\n  [(take n v) (drop n v)])", "user": "559279b7e4b0604b3f94d58c"}, {"problem": 49, "code": "#(let [x (partition-all %1 %2)] (list (first x) (apply concat (rest x))))", "user": "557e6b73e4b05c286339e0d6"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "4fc5eb7fe4b0ee37620e1803"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "525873e8e4b0cb4875a45cb2"}, {"problem": 49, "code": "(juxt take drop)", "user": "5590ebb1e4b0277789237677"}, {"problem": 49, "code": "(fn [n coll]\n  (vector \n   (keep-indexed #(if(< %1 n) %2) coll)\n   (keep-indexed #(if-not(< %1 n) %2) coll)\n   )\n  )", "user": "55933c7ae4b0c79f6e1db938"}, {"problem": 49, "code": "(fn [n v] [(take n v) (take-last (- (count v) n) v)])", "user": "55934bebe4b0c79f6e1db93b"}, {"problem": 49, "code": "(fn [i col] \n  (loop [i i, col col, result []]\n    (if (= i 0)\n      [result col]\n      (recur (dec i) (rest col) (conj result (first col))))))", "user": "555883c5e4b0deb715856e2d"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "558f4fbae4b0277789237661"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5576e78de4b05c286339e075"}, {"problem": 49, "code": "(fn [number array] \n      (list (take number array) \n            (drop number array)))", "user": "55893b09e4b059ccff29b1fe"}, {"problem": 49, "code": "(fn [n s] [(take n s) (drop n s)])", "user": "55496eeae4b0a04f79299569"}, {"problem": 49, "code": "(fn [x y] (split-with (partial not= (nth y x)) y))", "user": "557e8326e4b05c286339e0d7"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5598cf5ae4b031d6649c9b9f"}, {"problem": 49, "code": "(fn [lim seqn]\n  (vector (take lim seqn) (drop lim seqn)))", "user": "5585f088e4b001b0851d7513"}, {"problem": 49, "code": "(fn [s col] [(take s col) (drop s col)])", "user": "5592bf9fe4b0c79f6e1db933"}, {"problem": 49, "code": "(fn [n xs] (cons (take n xs) (list (drop n xs))))", "user": "4fdb0c0ae4b05e33b9224f57"}, {"problem": 49, "code": "(fn [n s]\n  (loop [f [] \n         l s\n         c 0]\n    (if (= c n)\n      [f l]\n      (recur (conj f (first l))\n             (rest l)\n             (inc c)))))", "user": "55995fa7e4b031d6649c9ba9"}, {"problem": 49, "code": "(fn [n s]\n  (loop [cnt n head '() tail s]\n    (if (= cnt 0)\n      (cons (reverse head) (partition (count tail) tail))\n      (recur (dec cnt) (cons (first tail) head) (rest tail))\n    )\n  )\n)", "user": "554756b8e4b0a04f79299549"}, {"problem": 49, "code": "(juxt take drop)", "user": "559622cee4b0c79f6e1db975"}, {"problem": 49, "code": "(fn [n coll]\n  (list (take n coll) (drop n coll)))", "user": "555ee545e4b0a2eb076a39bd"}, {"problem": 49, "code": "#(vector \n  (vec (take %1 %2)) \n  (vec (drop %1 %2)))", "user": "55882c84e4b059ccff29b1f2"}, {"problem": 49, "code": "(fn [n S]\n    [(take n S)\n     (drop n S)])", "user": "559c13c5e4b066d22e731f61"}, {"problem": 49, "code": "(fn spl [n r] [ (take n r) (drop n r)])", "user": "538d7e2ee4b0b51d73faae70"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)] )", "user": "54c9571ee4b045293a27f66b"}, {"problem": 49, "code": "#(list (take % %2)(drop % %2))", "user": "50ec409ce4b04edc33777045"}, {"problem": 49, "code": "#(cons (take %1 %2) (list (drop %1 %2)))", "user": "54117417e4b01498b1a719c5"}, {"problem": 49, "code": "(juxt take drop)", "user": "559b2ad1e4b066d22e731f4e"}, {"problem": 49, "code": "(fn [split-point sq]\n  (let [first-halve (take split-point sq)\n        second-halve (drop split-point sq)]\n    (cons first-halve (cons second-halve (empty sq)))))", "user": "559d33b3e4b0ec2b359424d9"}, {"problem": 49, "code": "(juxt take drop)", "user": "559b55d6e4b066d22e731f54"}, {"problem": 49, "code": "(fn p49 [n coll]\n  [(take n coll) (drop n coll)])", "user": "5400e918e4b0de5c41848619"}, {"problem": 49, "code": "(fn [num cols] [(take num cols) (drop num cols)])", "user": "5376f0d0e4b06839e8705e2c"}, {"problem": 49, "code": "(fn [n coll][(take n coll) (drop n coll)])", "user": "54d0cedde4b0e8a36923e5d2"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5576f299e4b05c286339e077"}, {"problem": 49, "code": "(fn f [n xs & args] ; args = count, first half\n   (cond (empty? args) (f n xs 0 '[])\n         (= n (first args)) [(second args) xs]\n\t\t true (f n (rest xs) (inc (first args)) (conj (second args) (first xs)))))", "user": "5583888ae4b05c286339e117"}, {"problem": 49, "code": "#(into (cons (drop % %2) nil) (cons (take % %2) nil))", "user": "55929e89e4b0604b3f94d58e"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "559ffabae4b0acc240e314ef"}, {"problem": 49, "code": "(fn [n coll] (map vec [(take n coll) (drop n coll)]))", "user": "55a12668e4b0acc240e3150b"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "559972d1e4b031d6649c9bab"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5578c67fe4b05c286339e08d"}, {"problem": 49, "code": "(juxt take drop)", "user": "559e25fde4b08a52bd4f97d0"}, {"problem": 49, "code": "(fn [n coll] (vector (take n coll) (drop n coll)))", "user": "55306f9de4b076ab5578f814"}, {"problem": 49, "code": "(fn [n s]\n  [(take n s) (drop n s)])", "user": "524d91eae4b0a16e35cf6dee"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5537f30fe4b09218d5f44fd8"}, {"problem": 49, "code": "(fn \n  [i aseq]\n  [(take i aseq) (drop i aseq)])", "user": "557e2eafe4b05c286339e0d2"}, {"problem": 49, "code": "(fn [n l]\n  (cons ((fn split [n l]\n          (if (= n 1)\n            (vector (first l))\n            (cons (first l) (split (- n 1) (rest l))))) n l)\n        (vector (drop n l))))", "user": "55a35ef4e4b0acc240e31535"}, {"problem": 49, "code": "#(conj (conj [] (take %1 %2)) (drop %1 %2))", "user": "55989c25e4b031d6649c9b9b"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "55a1d7f6e4b0acc240e31519"}, {"problem": 49, "code": "#(conj (vector (take %1 %2)) (drop %1 %2))", "user": "5594e0e3e4b0c79f6e1db95b"}, {"problem": 49, "code": "(fn split\n  [n xs]\n  [(take n xs) (drop n xs)])", "user": "55a3ca84e4b0acc240e3153c"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "503e91d4e4b06c4e0e1fa269"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "55205564e4b08d5046aa8a60"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "54a96a15e4b09f271ff37cad"}, {"problem": 49, "code": "(fn [n coll]\n  (loop [coll1 []\n         [head & tail :as coll2] coll\n         c n]\n    (if (zero? c)\n      [coll1 coll2]\n      (recur (conj coll1 head) tail (dec c)))))", "user": "54d9f7f1e4b024c67c0cf751"}, {"problem": 49, "code": "(fn [n s] (conj [] (into [] (take n s)) (into [] (drop n s))))", "user": "5511f061e4b06e50f9beb19d"}, {"problem": 49, "code": "(juxt take drop)", "user": "54a627bce4b09f271ff37c83"}, {"problem": 49, "code": "(fn [idx s] ( list (take idx s) (drop idx s)))", "user": "558bdcefe4b0277789237633"}, {"problem": 49, "code": "(fn [n, coll] [(take n coll) (drop n coll)])", "user": "51e8736ae4b006d205356a4f"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "553527ede4b09218d5f44fab"}, {"problem": 49, "code": "(fn split [c coll]\n  (list (take c coll) (drop c coll)))", "user": "559f06bae4b0acc240e314e6"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5520d6b8e4b08d5046aa8a65"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "55aa1637e4b0988bba2ad949"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "55a74d46e4b09e57187da2a3"}, {"problem": 49, "code": "(juxt take drop)", "user": "5416b4a2e4b01498b1a71a01"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "55aa5f73e4b0988bba2ad94b"}, {"problem": 49, "code": "(fn [n xs]\n  (vector (vec (take n xs)) (vec (drop n xs))))", "user": "55a1ba5ee4b0acc240e31517"}, {"problem": 49, "code": "(juxt take drop)", "user": "5593b10ce4b0c79f6e1db943"}, {"problem": 49, "code": "(fn [n coll]\n    [(take n coll) (nthrest coll n)])", "user": "55ac07afe4b03311e7b7328f"}, {"problem": 49, "code": "#(conj [] (take %1 %2) (drop %1 %2))", "user": "5596af34e4b04c1e5c31d758"}, {"problem": 49, "code": "(fn [idx sq]\n  [(vec (take idx sq))\n  (vec (drop idx sq))]\n )", "user": "5351fca5e4b084c2834f4aec"}, {"problem": 49, "code": "(fn f [n coll]\n  [(take n coll) (drop n coll)])", "user": "55a62092e4b0acc240e31554"}, {"problem": 49, "code": "#(let [n %1] (loop [cl %2 i 0 r1 [] r2 []]\n   (cond\n    (empty? cl) [r1 r2]\n    (> n i) (recur (rest cl) (inc i) (conj r1 (first cl)) r2 )\n    :else (recur (rest cl) (inc i) r1 (conj r2 (first cl)) )\n )))", "user": "55adf4d7e4b03311e7b732af"}, {"problem": 49, "code": "(fn [n coll]\n  [(subvec coll 0 n) \n   (subvec coll   n)])", "user": "52dbd423e4b09f7907dd13c6"}, {"problem": 49, "code": "#(vector (vec (take %1 %2)) (vec (drop %1 %2)))", "user": "55a0e139e4b0acc240e31504"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "55a5c3bee4b0acc240e3154e"}, {"problem": 49, "code": "(fn [p s]\n  (loop [i 0 s1 [] s2 []]\n  (if (= i (count s))\n    (vector s1 s2)\n    (if (< i p)\n      (recur (inc i) (conj s1 (nth s i)) s2)\n      (recur (inc i) s1 (conj s2 (nth s i)))))))", "user": "55aaa36fe4b0988bba2ad94f"}, {"problem": 49, "code": "(fn [split v] (conj [] (subvec v 0 split) (subvec v split)))", "user": "559c4236e4b066d22e731f67"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "53cb5559e4b00fb29b2212d2"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "54236ce1e4b01498b1a71ad1"}, {"problem": 49, "code": "(fn [n sq] (concat [(take n sq)] [(drop n sq)]))", "user": "55b527cbe4b01b9910ae2985"}, {"problem": 49, "code": "(fn [index lst]\n  [(take index lst)(drop index lst)])", "user": "55838353e4b05c286339e116"}, {"problem": 49, "code": "(fn [idx coll] [(take idx coll) (drop idx coll)])", "user": "559a9a3de4b066d22e731f45"}, {"problem": 49, "code": "(juxt take drop)", "user": "522fdff7e4b032bbe342416c"}, {"problem": 49, "code": "(fn [n s] (cons (take n s) (list (drop n s))))", "user": "4fffa422e4b0678c553fc404"}, {"problem": 49, "code": "(fn [n v]\n    (loop [i 1 r [] p [] v1 v]\n        (if (seq v1)\n            (if (= i n)\n                (recur (inc i) (conj r (conj p (first v1))) [] (rest v1))\n                (recur (inc i) r (conj p (first v1)) (rest v1)))\n            (conj r p))))", "user": "55975569e4b031d6649c9b8e"}, {"problem": 49, "code": "(fn [n col] (vector (take n col) (drop n col)))", "user": "55b77c7ce4b01b9910ae29a3"}, {"problem": 49, "code": "(fn [n s] [(take n s) (drop n s)])", "user": "55ad59cde4b03311e7b732a7"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "55aa7c5ce4b0988bba2ad94d"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "55b69e37e4b01b9910ae2999"}, {"problem": 49, "code": ";;(fn [n xs] [(take n xs) (drop n xs)])\n(juxt take drop)", "user": "55b8c339e4b01b9910ae29b9"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "551d8796e4b07993ea3788ec"}, {"problem": 49, "code": "(fn [n x]\n  (cons (first (partition-all n  x)) (cons (drop n x) [])))", "user": "503c90aae4b06c4e0e1fa24b"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "55b1e9e7e4b0da326a65cf74"}, {"problem": 49, "code": "(fn [n coll]  \n  [(take n coll) (drop n coll)])", "user": "55aa8276e4b0988bba2ad94e"}, {"problem": 49, "code": "(fn [n coll]\n   (list\n    (take n coll)\n    (drop n coll)))", "user": "55b54ecbe4b01b9910ae2987"}, {"problem": 49, "code": "(fn\n  [n sequ]\n  [(take n sequ) (drop n sequ)])", "user": "54f36b36e4b050824f58f5c2"}, {"problem": 49, "code": "(juxt take drop)", "user": "55afc197e4b002ce9d5cbc18"}, {"problem": 49, "code": "(juxt take drop)", "user": "55be39f9e4b01b9910ae2a06"}, {"problem": 49, "code": "#(loop [dalist %2, n %1, r1 [], r2 []]\n   (if (seq dalist)\n     (if (= 0 n)\n       (recur (rest dalist) 0 r1 (conj r2 (first dalist)))\n       (recur (rest dalist) (dec n) (conj r1 (first dalist)) []))\n     [r1 r2]))", "user": "55868660e4b059ccff29b1d4"}, {"problem": 49, "code": "(fn [n coll] \n\t[\n     (take n coll)\n  \t (drop n coll)\n    ]\n)", "user": "5595c60ee4b0c79f6e1db96f"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "55b107fee4b002ce9d5cbc2a"}, {"problem": 49, "code": "(fn split\n  [a s]\n    (conj (conj [] (vec (take a s))) (vec (drop a s))))", "user": "55acd080e4b03311e7b73298"}, {"problem": 49, "code": "(fn [x coll] [(take x coll) (drop x coll)])", "user": "5537cbaee4b09218d5f44fd3"}, {"problem": 49, "code": "#(let [part1 (take % %2)\n       part2 (drop % %2)]\n   (list part1 part2)\n   )", "user": "55b3c03ee4b01b9910ae2975"}, {"problem": 49, "code": "(fn [a b] [(take a b) (nthnext b a)])", "user": "55af7e21e4b03311e7b732cc"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "55bfc39ee4b01b9910ae2a1a"}, {"problem": 49, "code": "#(list  (take %1 %2) (drop  %1 %2) )", "user": "55b1ab40e4b0da326a65cf6e"}, {"problem": 49, "code": "(fn [n xs] [(take n xs) (drop n xs)])", "user": "549dfe40e4b0f3d1d8e70f9a"}, {"problem": 49, "code": "(fn [n col]\n    [(take n col)\n     (drop n col)])", "user": "50978ca4e4b00ad8bab4e966"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "55c0afa5e4b01b9910ae2a27"}, {"problem": 49, "code": "(fn [n s]\n     (loop [a []            \n            n n\n            s s]\n       (if (or (zero? n) (empty? s))\n           (list a s)\n           (recur (conj a (first s)) (dec n) (rest s)))))", "user": "4e8a170c535d3e98b802328f"}, {"problem": 49, "code": "(fn [n c] [(take n c) (drop n c)])", "user": "55c10409e4b01b9910ae2a2c"}, {"problem": 49, "code": "(fn [n lst] (vector (take n lst) (drop n lst)))", "user": "4f7d91e6e4b06e829148e1c3"}, {"problem": 49, "code": "(fn [n s][(take n s) (drop n s)])", "user": "559454f2e4b0c79f6e1db952"}, {"problem": 49, "code": "(fn [c x] ( loop [remain c l [] r x]\n\t\t\t(if (= remain 0 )\n\t\t\t\t[(reverse l) r]\n\t\t\t (recur (dec remain) (cons (first r) l) (rest r))\n\t\t\t)\n\t   \t)\n)", "user": "51fea7d7e4b0f1313d468a74"}, {"problem": 49, "code": "(juxt take drop)", "user": "55c4e48be4b0e31453f649a7"}, {"problem": 49, "code": "#(conj() (subvec %2 %)(subvec %2 0 %))", "user": "553093bee4b076ab5578f817"}, {"problem": 49, "code": "#(vector (subvec %2 0 %1) (drop %1 %2))", "user": "54055aa9e4b0addc1aec6665"}, {"problem": 49, "code": "(juxt take drop)", "user": "55c652dde4b0e31453f649bd"}, {"problem": 49, "code": "#(concat (list (take % %2)) (list (drop % %2)))", "user": "54b817eee4b0ed20f4ff6e93"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "55b45825e4b01b9910ae297c"}, {"problem": 49, "code": "(fn [amount coll] (vector(take amount coll) (take-last (- (count coll) amount) coll)))", "user": "55c07e3ee4b01b9910ae2a24"}, {"problem": 49, "code": "(fn f [n s]\n  (->> (map-indexed (fn [i x] [i x]) s)\n       (partition-by #(<= n (first %)))\n       (map #(map second %))))", "user": "549c6792e4b0f3d1d8e70f8b"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "55c734a5e4b0e31453f649cb"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "55c77070e4b0e31453f649d0"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "55c423e1e4b0e31453f64994"}, {"problem": 49, "code": "#(reduce (fn [out x]\n             (let [part-index (if (> %1 (count (get out 0))) 0 1)]\n               (update-in out [part-index] conj x)))\n        [[][]] %2)", "user": "5582dfb6e4b05c286339e10d"}, {"problem": 49, "code": "(fn [n sq]\n  (loop [i 0 left [] right sq]\n    (if (= i n)\n      [left right]\n      (recur (inc i) (conj left (first right)) (rest right)))))", "user": "55c68089e4b0e31453f649c4"}, {"problem": 49, "code": "(fn [n s]\n       (list\n            (take n s)\n            (drop n s)\n            )\n       )", "user": "55c3149de4b0e31453f64987"}, {"problem": 49, "code": "(fn split-at-nth-position [n a-seq]\n  (loop [position 0 new-seq [] old-seq a-seq]\n    (if (= position n)\n      [new-seq old-seq]\n      (recur (inc position) (conj new-seq (first old-seq)) (rest old-seq))\n    )\n  )\n)", "user": "55c387e4e4b0e31453f6498b"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "55ca4273e4b0e31453f649f9"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "55a372f1e4b0acc240e31537"}, {"problem": 49, "code": "(fn msplt [n col] [(take n col) (drop n col)])", "user": "55c9bc1ee4b0e31453f649f1"}, {"problem": 49, "code": "(fn [index coll] [(take index coll) (drop index coll)])", "user": "55c1eb52e4b0e31453f64970"}, {"problem": 49, "code": "(fn [n l] [(take n l) (drop n l)])", "user": "55c20bd0e4b0e31453f64972"}, {"problem": 49, "code": "(fn [n items]\n  (conj [] (take n items) (take-last (- (count items) n) items)))", "user": "55a0d79fe4b0acc240e31502"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "546e1142e4b00cfc9eacc199"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "553f70cae4b0a04f792994f8"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (nthrest coll n)])", "user": "55caabd1e4b0e31453f649fb"}, {"problem": 49, "code": "#(vector (subvec %2 0 %1) (subvec %2 %1))", "user": "55ac16a0e4b03311e7b73291"}, {"problem": 49, "code": "(juxt take drop)", "user": "55cdc576e4b0e31453f64a1f"}, {"problem": 49, "code": "(juxt take drop)", "user": "55be464ce4b01b9910ae2a07"}, {"problem": 49, "code": "#(list (take %1 %2)\n       (drop %1 %2))", "user": "55d0e76ae4b0e31453f64a40"}, {"problem": 49, "code": "(fn f [split col]\n  (loop [res1 []\n         data col\n         x 0]\n         (if (< x split)\n           (recur \n            (conj res1 (first data)) \n            (rest data)\n            (inc x))\n           [res1 data])))", "user": "536db108e4b0fc7073fd6e61"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5561d2c2e4b0c656e3ff17cd"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "552456e3e4b0882d96d091c2"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "5589a941e4b059ccff29b207"}, {"problem": 49, "code": "#(list (take %1 %2) (nthnext %2 %1))", "user": "55b0f5bfe4b002ce9d5cbc28"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "4eb171d7535d7eef30807340"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "54864662e4b0e286459a11b8"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "541ddadbe4b01498b1a71a84"}, {"problem": 49, "code": "(juxt take drop)", "user": "55ccdc6be4b0e31453f64a18"}, {"problem": 49, "code": "#(list (take %1 %2)(drop %1 %2))", "user": "55bedd93e4b01b9910ae2a0d"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "55d332f5e4b0e31453f64a5f"}, {"problem": 49, "code": "(fn [i l]\n  (loop [left l\n         before-split i\n         acc []]\n    (if (= before-split 0)\n      (conj [] acc left)\n      (recur (rest left) \n             (dec before-split)\n             (conj acc (first left))))))", "user": "55d4dddde4b0e31453f64a7f"}, {"problem": 49, "code": "#(let [list (partition % % [] %2)]\n     (vector (into [] (first list))\n             (into [] (apply concat (drop 1 list)))))", "user": "55b22c33e4b0da326a65cf79"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "55d5e80ee4b0e31453f64a91"}, {"problem": 49, "code": "(fn\n  [n xs]\n  (list (take n xs) (drop n xs)))", "user": "5574c172e4b05c286339e059"}, {"problem": 49, "code": "(fn [n values]\n  (loop [iter n\n         to-process values\n         acc []]\n    (if (= 0 iter)\n      [acc to-process]\n      (recur \n       (dec iter)\n       (rest to-process)\n       (conj acc (first to-process))))))", "user": "55d06bcbe4b0e31453f64a3a"}, {"problem": 49, "code": "#(vector (take %1 %2) (take-last (- (count %2) %1) %2))", "user": "5586f418e4b059ccff29b1de"}, {"problem": 49, "code": "(fn my-split-at [position my-seq] (if (zero? position) [[] my-seq] (let [[this other] (my-split-at (dec position) (rest my-seq))] [(conj (seq this) (first my-seq)) other])))", "user": "55d95be7e4b0e31453f64ac9"}, {"problem": 49, "code": "(juxt take drop)", "user": "55d1b565e4b0e31453f64a49"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "55d045cde4b0e31453f64a38"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "55d29fb6e4b0e31453f64a59"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))\n\n; juxt take drop", "user": "55236ad6e4b0882d96d091b1"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "55d6a2ebe4b0e31453f64a9a"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "55d5ee3fe4b0e31453f64a92"}, {"problem": 49, "code": "#(conj [] (take % %2) (drop % %2))", "user": "55d8eed3e4b0e31453f64ac3"}, {"problem": 49, "code": "(fn [n xs] \n  (vector (take n xs) (drop n xs)))", "user": "55da1ebce4b0e31453f64ad2"}, {"problem": 49, "code": "(fn [n c] (conj [] (take n c) (drop n c)))", "user": "55d50a38e4b0e31453f64a80"}, {"problem": 49, "code": "(fn [at coll]\n      [(take at coll) (drop at coll)]\n)", "user": "5564c113e4b0c656e3ff180d"}, {"problem": 49, "code": "(juxt take drop)", "user": "55db7e15e4b0e31453f64ae8"}, {"problem": 49, "code": "(fn [n list]\n  [(take n list) (drop n list)])", "user": "55dab408e4b0e31453f64ad9"}, {"problem": 49, "code": "(juxt take drop)", "user": "55d1a721e4b0e31453f64a47"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "54722c55e4b094393f72dd74"}, {"problem": 49, "code": "(fn [x xs] (conj [] (take x xs) (drop x xs)))", "user": "55d79b87e4b0e31453f64aa8"}, {"problem": 49, "code": "#(list (take %1 %2) (nthrest %2 %1))", "user": "55dcb06ee4b050e68259b3b9"}, {"problem": 49, "code": "( fn [n s] (conj [] (take n s) (drop n s)))", "user": "55b39523e4b01b9910ae2973"}, {"problem": 49, "code": "(fn split-two\n  [pivot-index collection]\n  (vector (subvec collection 0 pivot-index)\n          (subvec collection pivot-index (count collection))))", "user": "55a9e0fee4b0988bba2ad945"}, {"problem": 49, "code": "(juxt take drop)", "user": "553bda0de4b09218d5f4500b"}, {"problem": 49, "code": "(fn [n l] [(take n l) (drop n l)])", "user": "4f435ee8e4b0d7d3c9f3fd1f"}, {"problem": 49, "code": "#(vector (vec (take %1 %2)) (vec (drop %1 %2)))", "user": "5582c5b1e4b05c286339e10a"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "55ded9fde4b050e68259b3e7"}, {"problem": 49, "code": "(juxt take drop)", "user": "55d87324e4b0e31453f64ab4"}, {"problem": 49, "code": "#(vector (subvec %2 0 %1) (subvec %2 %1))", "user": "55ab07e0e4b0988bba2ad953"}, {"problem": 49, "code": "(juxt take drop)", "user": "5233564ae4b0f0b72fabf403"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "55e1d34ae4b050e68259b421"}, {"problem": 49, "code": "#(vec [(take %1 %2) (drop %1 %2)])", "user": "55d85ac9e4b0e31453f64ab2"}, {"problem": 49, "code": "#(let [left (take %1 %2)\n       right (drop %1 %2)]\n   [left right])", "user": "55e26417e4b050e68259b433"}, {"problem": 49, "code": "#(list (take %1 %2) (nthrest %2 %1))", "user": "55627de1e4b0c656e3ff17d9"}, {"problem": 49, "code": "#(\n             vector (subvec %2 0 %1)\n                    (subvec %2 %1)\n\n             )", "user": "55bb7546e4b01b9910ae29e7"}, {"problem": 49, "code": "(fn [x s] [(take x s) (drop x s)])", "user": "54a1f494e4b09f271ff37c52"}, {"problem": 49, "code": "(juxt take drop)", "user": "534056fce4b085b17e897dac"}, {"problem": 49, "code": "(fn [n xs] (vector (take n xs) (drop n xs)))", "user": "55dc2ad1e4b050e68259b3ac"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "55d74e71e4b0e31453f64aa4"}, {"problem": 49, "code": "#(conj [(take %1 %2)] (nthrest %2 %1))", "user": "4dd5fdb0535d2dad7130b5c5"}, {"problem": 49, "code": "(fn [n,x] \n  [(take n x) (drop n x)]\n )", "user": "55d35a01e4b0e31453f64a63"}, {"problem": 49, "code": "(fn [n col]\n  (let [head (take n col)\n        tail (drop n col)]\n    [head tail]))", "user": "54c94376e4b045293a27f665"}, {"problem": 49, "code": "(fn [n c] ((juxt first (comp #(apply concat %) rest)) (partition-all n c)))", "user": "559067ace4b0277789237670"}, {"problem": 49, "code": "(fn [ n coll] [(take n coll) (drop n coll)])", "user": "55d44dd6e4b0e31453f64a75"}, {"problem": 49, "code": "#(vector \n       (vec (take %1 %2)) \n       (vec (drop %1 %2)))", "user": "55663e9be4b0c656e3ff182b"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll)\n   (take-last (- (count coll) n)\n              coll)])", "user": "54eb22a0e4b024c67c0cf845"}, {"problem": 49, "code": "(fn [n xs] (list (take n xs) (drop n xs)))", "user": "517e9526e4b09104ecebe7e2"}, {"problem": 49, "code": "(fn [at seq]\n    [(subvec seq 0 at) (subvec seq at)])", "user": "53a68c5ae4b0ef122a8689c8"}, {"problem": 49, "code": "(fn splitt-at [n l]\n  (vector (take n l) (drop n l)))", "user": "55e4487ce4b050e68259b44c"}, {"problem": 49, "code": "(fn [i xs] [(vec(take i xs)) (vec(drop i xs))])", "user": "55e7fc2ce4b0121d4835fd86"}, {"problem": 49, "code": "(fn f\n  ([n l]\n   (f n l []))\n  ([n l a]\n   (if (< 0 n)\n     (recur (dec n) (rest l) (conj a (first l)))\n     [a l])))", "user": "55e87696e4b0121d4835fd93"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "554bd33ce4b0a04f7929959a"}, {"problem": 49, "code": "(fn [x y] (conj [] (take x y) (drop x y)))", "user": "55d42f78e4b0e31453f64a73"}, {"problem": 49, "code": "#(conj [(subvec %2 0 %1)] (subvec %2 %1))", "user": "55e2f502e4b050e68259b43c"}, {"problem": 49, "code": "#(vector  (take %1 %2) (drop %1 %2))", "user": "53e9dce1e4b036ad0777e4bc"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "55e6c3f5e4b050e68259b48c"}, {"problem": 49, "code": "#(vector (take %1 %2) \n         (drop %1 %2))", "user": "55d2dd27e4b0e31453f64a5b"}, {"problem": 49, "code": "(fn [s col]\n  (let [part (take s col)]\n  (conj [] part (drop s col))))", "user": "55b0d315e4b002ce9d5cbc26"}, {"problem": 49, "code": "(fn [at coll]\n  [(take at coll)\n   (drop at coll)])", "user": "5530baa5e4b076ab5578f81a"}, {"problem": 49, "code": "(fn [n xs] [(take n xs)(drop n xs)])", "user": "55ecb2c0e4b0121d4835fdce"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "55ec04c4e4b0121d4835fdc1"}, {"problem": 49, "code": "(fn [idx, list] [(drop-last (- (count list) idx) list) (drop idx list)])", "user": "55ef12cfe4b0121d4835fdfc"}, {"problem": 49, "code": "(fn split-coll [n coll]\n  [(take n coll) (drop n coll)])", "user": "55ec1048e4b0121d4835fdc3"}, {"problem": 49, "code": "#(conj [] (take % %2) (drop % %2))", "user": "55ed962ae4b0121d4835fddd"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "529c722de4b04e0c58e87b63"}, {"problem": 49, "code": "(fn [n l]\n  [(take n l) (drop n l)])", "user": "53fc88e7e4b0de5c418485be"}, {"problem": 49, "code": "(juxt take drop)", "user": "55ddc5cbe4b050e68259b3d0"}, {"problem": 49, "code": "#(let [a % b %2] [(take a b) (drop a b)])", "user": "55d9743ae4b0e31453f64aca"}, {"problem": 49, "code": "#((juxt (partial take %1) (partial drop %1)) %2)", "user": "539e717fe4b0ca733b974488"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "55dbed2fe4b050e68259b3a6"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "55f2fdc3e4b06e875b46ce51"}, {"problem": 49, "code": "#(conj [] (take %1 %2) (drop %1 %2))", "user": "558fec41e4b0277789237666"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "55f20e4be4b06e875b46ce40"}, {"problem": 49, "code": "#(vector (take %1 %2) \n         (drop %1 %2))", "user": "55912230e4b027778923767a"}, {"problem": 49, "code": "(fn [i v] [(take i v) (drop i v)])", "user": "4f5eda39e4b0030a34fb2b56"}, {"problem": 49, "code": "(fn [n arr]\n  [(take n arr) (drop n arr)])", "user": "54d05a9de4b0e8a36923e5c7"}, {"problem": 49, "code": "(fn [at coll] \n  (let [partitions (partition at at '() coll)]\n    [(first partitions) (apply concat (rest partitions))]\n  )\n)", "user": "55f014ebe4b06e875b46ce1b"}, {"problem": 49, "code": "(fn split [idx coll]\n  (let [head (take idx coll)\n        tail (take-last (- (count coll) (count head)) coll)\n        ]\n    (if (nil? tail) head (list head tail)))\n  )", "user": "55f06183e4b06e875b46ce23"}, {"problem": 49, "code": "(fn splita [idx thelist] (let [firstpart (for [x (range 0 (count thelist)) :while (< x idx)] (nth thelist x))] (cons firstpart (list (nthnext thelist (count firstpart))))))", "user": "55f75c6be4b06e875b46cea9"}, {"problem": 49, "code": "(fn [s c] (vector (take s c) (drop s c)))", "user": "54534c83e4b0e397800069cd"}, {"problem": 49, "code": "(juxt take drop)", "user": "521ed5b4e4b0e6c71e0c0bc0"}, {"problem": 49, "code": "(fn [i xs] (vector (take i xs) (drop i xs)))", "user": "55cb11e9e4b0e31453f649ff"}, {"problem": 49, "code": "(fn [n v]\n  [(take n v) (drop n v)])", "user": "53573d70e4b04ce2eb3ed278"}, {"problem": 49, "code": "#(into [] (cons (into [] (take %1 %2)) (cons (into [] (drop %1 %2)) []) ) )", "user": "55e5c852e4b050e68259b474"}, {"problem": 49, "code": "(fn [n ls]\n  [(take n ls) (drop n ls)])", "user": "524e79c1e4b0541d1855b7e0"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5505d137e4b086ebe8a79c8c"}, {"problem": 49, "code": "(fn splt [% %2]\n    (let [partd (partition % % [] %2)\n          part1 (take % %2)\n          [head & tail] partd\n          ]\n      (conj\n              [(into [] part1)]\n              (reduce into [] tail)\n        )\n      )\n    )", "user": "558ee1c9e4b0277789237659"}, {"problem": 49, "code": "(fn prob49 [n col]\n  [(take n col) (drop n col)]\n)", "user": "4ebbff41535dfed6da9c6d78"}, {"problem": 49, "code": "(fn s[c n] [(take c n) (drop c n)])", "user": "55f01316e4b06e875b46ce1a"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "55f7e056e4b06e875b46ceb4"}, {"problem": 49, "code": "(fn [n s]\n  [(take n s) (drop n s)])", "user": "55f8fd70e4b03cbcff9738bc"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "55b42706e4b01b9910ae297b"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "55f6c0e2e4b06e875b46ce99"}, {"problem": 49, "code": "#(loop [coll %2\n        counter 1\n        split1 []\n        split2 []]\n   (if (empty? coll)\n     (vector split1 split2)\n     (recur (rest coll)\n            (inc counter)\n            (if (<= counter %)\n              (conj split1 (first coll))\n              split1)\n            (if (> counter %)\n              (conj split2 (first coll))\n              split2))))", "user": "55eeeb81e4b0121d4835fdf7"}, {"problem": 49, "code": "(fn my-split [n s]\n  [(take n s)\n   (drop n s)])", "user": "55f9c245e4b03cbcff9738ca"}, {"problem": 49, "code": "(fn [n col]\n  (loop [r []\n         c col]\n    (if (= n (count r))\n      [r c]\n      (recur (conj r (first c))\n             (rest c)))))", "user": "5541fa50e4b0a04f79299515"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "55df3b11e4b050e68259b3ef"}, {"problem": 49, "code": "(fn -split-at [n xs]\n  (concat [(take n xs)] [(drop n xs)]))", "user": "55fb58b2e4b0f488688e0661"}, {"problem": 49, "code": "(fn [n s] [(take n s) (drop n s)])", "user": "55e06f82e4b050e68259b40d"}, {"problem": 49, "code": "(juxt take drop)", "user": "55fc1f05e4b0f488688e066f"}, {"problem": 49, "code": "#(conj [] (take %1 %2) (drop %1 %2))", "user": "55f43228e4b06e875b46ce67"}, {"problem": 49, "code": "(fn [x coll] (list (take x coll) (nthrest coll x)))", "user": "55f6f1d3e4b06e875b46cea0"}, {"problem": 49, "code": "#(vector (vec (take %1 %2)) (vec (drop %1 %2)))", "user": "55fe7e15e4b00f4cabc57651"}, {"problem": 49, "code": "(fn [n aSeq]\n  [(subvec aSeq 0 n) (subvec aSeq n)]\n   )", "user": "55efc44ee4b066087aa9453e"}, {"problem": 49, "code": "(fn [n s]\n  (concat [(take n s)] [(drop n s)]))", "user": "55fee5e4e4b00f4cabc5765a"}, {"problem": 49, "code": "(fn [x coll] [(take x coll) (drop x coll)])", "user": "560094a0e4b04bb52996e16b"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "55fbf6cae4b0f488688e066c"}, {"problem": 49, "code": "(fn [index coll] [(take index coll) (drop index coll)])", "user": "560039cce4b04bb52996e162"}, {"problem": 49, "code": "(juxt take drop)", "user": "50a3ad0ee4b0ceace084d493"}, {"problem": 49, "code": "(fn my-split [n coll] \n   (cons (take n coll) (list (mapcat identity (rest (partition-all n coll))))))", "user": "55f8b32ae4b03cbcff9738ba"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "55f2b42be4b06e875b46ce4a"}, {"problem": 49, "code": "(fn [s c] [(take s c) (drop s c)]  )", "user": "55eeb37ae4b0121d4835fdf3"}, {"problem": 49, "code": "(juxt take drop)", "user": "55e1fc42e4b050e68259b424"}, {"problem": 49, "code": "(fn [n s] [(take n s) (drop n s)])", "user": "55f081bbe4b06e875b46ce25"}, {"problem": 49, "code": "(fn [v coll]\n    (conj (empty coll) (take v coll) (drop v coll)))", "user": "532f8569e4b019098a6f8b4f"}, {"problem": 49, "code": "(fn [n s]\n  [(take n s) (drop n s)])", "user": "5461dc79e4b01be26fd746a8"}, {"problem": 49, "code": "(fn [c i]\n  (map (fn [a]  (map (fn [[_ x]] x) a))\n       (partition-by (fn [[b _]] (< b c)) (map-indexed list i))))", "user": "53c6c9dfe4b00fb29b2212a1"}, {"problem": 49, "code": "(fn split[index input]\n  (loop [i 0\n         part-a []\n         remain input]\n    (if (= i index) [part-a (apply vector remain)]\n         (recur (+ i 1) (conj part-a (first remain)) (rest remain)))))", "user": "560151b5e4b04bb52996e185"}, {"problem": 49, "code": "; yeah\n(juxt take drop)\n\n; code golf\n#_(fn [n s] [(take n s) (drop n s)])\n\n; first try\n#_#(vector (take % %2) (drop % %2))", "user": "55e7d06ee4b050e68259b496"}, {"problem": 49, "code": "(fn [a b] [(take a b) (take-last (- (count b) a) b)])", "user": "56019662e4b04bb52996e190"}, {"problem": 49, "code": "(fn split[n, coll]\n  [(take n coll) (nthrest coll n)])", "user": "56069006e4b08b23635d3174"}, {"problem": 49, "code": "#(vec [(take %1 %2) (drop %1 %2)])", "user": "5606a4ace4b08b23635d3175"}, {"problem": 49, "code": "(fn split-sequence [n s]\n  [(take n s) (drop n s)] )", "user": "56040e58e4b0c80df0ca2654"}, {"problem": 49, "code": "(fn [n s] (vec(vector (vec(reverse(vals (drop (- (count s) n) (zipmap (range (count s)) s))))) (vec(reverse(vals (take (- (count s) n) (zipmap (range (count s)) s))))) )))", "user": "56039843e4b04bb52996e1be"}, {"problem": 49, "code": "#(vector (vec (take %1 %2))\n         (vec (drop %1 %2)))", "user": "56047160e4b0c80df0ca265d"}, {"problem": 49, "code": "(fn [n xs] [(take n xs) (drop n xs)])", "user": "560794bde4b08b23635d3182"}, {"problem": 49, "code": "#( vector (take %1 %2) (drop %1 %2))", "user": "558053b1e4b05c286339e0e9"}, {"problem": 49, "code": "(fn [pos col]\n  (loop [cur 0 head [] tail col]\n    (if (or (empty? tail) (= cur pos))\n      (conj [] head tail)\n      (recur (inc cur) (conj head (first tail)) (rest tail)))))", "user": "501fe6fae4b0cb6ebc0a42ef"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "55d62a68e4b0e31453f64a96"}, {"problem": 49, "code": "#(conj '() (drop %1 %2) (take %1 %2))", "user": "5602ab92e4b04bb52996e1a3"}, {"problem": 49, "code": "(juxt take drop)", "user": "55f3802be4b06e875b46ce5f"}, {"problem": 49, "code": "#(cons (take % %2) (cons (take-last (- (count %2) %) %2) []))", "user": "50746e23e4b054001656acd1"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5601bb7ee4b04bb52996e195"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5410499de4b01498b1a719a6"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5603c31fe4b04bb52996e1c1"}, {"problem": 49, "code": "(juxt take drop)", "user": "5609866ee4b0053d1b86c7e3"}, {"problem": 49, "code": "(fn [n l] [(take n l) (drop n l)])", "user": "56051095e4b08b23635d3162"}, {"problem": 49, "code": "#(vector (vec (take %1 %2)) (vec (drop %1 %2)))", "user": "560a7775e4b05f002753defa"}, {"problem": 49, "code": "(fn [n coll]\n  (vector\n   (vec (take n coll))\n   (vec (drop n coll))))", "user": "54d321b3e4b0e8a36923e602"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "55e274b4e4b050e68259b436"}, {"problem": 49, "code": "#(vector (vec (take %1 %2)) (vec (drop %1 %2)))", "user": "55bb1b26e4b01b9910ae29e0"}, {"problem": 49, "code": "#(vector (first (partition-all %1 %2)) (apply concat (rest (partition-all %1 %2))))", "user": "55810c73e4b05c286339e0f2"}, {"problem": 49, "code": "#((juxt (partial take %1) (partial drop %1)) %2)", "user": "55f2e47de4b06e875b46ce4d"}, {"problem": 49, "code": "(fn [n coll] [(vec (take n coll)) (vec (drop n coll))])", "user": "55e8a85be4b0121d4835fd98"}, {"problem": 49, "code": "(fn\n  [n s]\n  (list (take n s) (drop n s)))", "user": "56084e91e4b046a4fc0ac00f"}, {"problem": 49, "code": "(juxt take drop)", "user": "560a7b46e4b05f002753defb"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "560843dee4b046a4fc0ac00e"}, {"problem": 49, "code": "(fn [n s]\n  (let [l (count s)\n        m (- l n)]\n    [(take n s) (take-last m s)]))", "user": "560ae540e4b05f002753df0d"}, {"problem": 49, "code": "(fn [x l] [(take x l) (drop x l)])", "user": "4f6ba7bce4b07046d9f4efb0"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5606ea56e4b08b23635d317b"}, {"problem": 49, "code": "(fn [n c] [(take n c) (drop n c)])", "user": "561047eae4b05f002753df6d"}, {"problem": 49, "code": "(fn [n xs]\n  [(take n xs) (drop n xs)])", "user": "4ff24a1ae4b0678c553fc337"}, {"problem": 49, "code": "#(merge (vector (into [] (take %1 %2))) (into [] (drop %1 %2)))", "user": "560e9a2de4b05f002753df52"}, {"problem": 49, "code": "(fn [n v]\n  (vector (take n v) (drop n v)))", "user": "5604bcf7e4b08b23635d315a"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5605b5e9e4b08b23635d316e"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "55f2c898e4b06e875b46ce4b"}, {"problem": 49, "code": "(fn[x coll] [(take x coll) (drop x coll)])", "user": "53959edde4b0b51d73faaed8"}, {"problem": 49, "code": "(juxt take drop)", "user": "56011393e4b04bb52996e178"}, {"problem": 49, "code": "(fn[c s](conj(list(drop c s)) (take c s)))", "user": "560d491ae4b05f002753df3b"}, {"problem": 49, "code": "(fn [n s] (vector (take n s) (drop n s)))", "user": "50a00725e4b08df8156e9e46"}, {"problem": 49, "code": "(fn [n xs]\n  (list (take n xs) (drop n xs)))", "user": "52aaabf7e4b0c58976d9ac68"}, {"problem": 49, "code": "(fn split-seq [at coll]\n\n  [(take at coll) (drop at coll)]\n  )", "user": "55a65872e4b09e57187da299"}, {"problem": 49, "code": "(fn\n  [n xs]\n  [(take n xs) (drop n xs)])", "user": "55e732c5e4b050e68259b492"}, {"problem": 49, "code": "(fn [n coll] [(vec (take n coll)) (vec (drop n coll))])", "user": "560768a0e4b08b23635d317f"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "55f09e7be4b06e875b46ce28"}, {"problem": 49, "code": "(fn [x xs]\n  (let [left (take x xs)\n        right (drop x xs)]\n    (vector left right)))", "user": "5573ffb5e4b0aa18f790f3fd"}, {"problem": 49, "code": "(fn [x y]\n  (vector (subvec y 0 x) (subvec y x (count y))))", "user": "560ff632e4b05f002753df66"}, {"problem": 49, "code": "(fn my-split-at\n  [n coll]\n  [(take n coll) (drop n coll)])", "user": "56180d83e4b06b1bb2182a18"}, {"problem": 49, "code": "#(loop [n %1 coll %2 ans []]\n   (if (= n 0)\n     (vector ans coll)\n     (recur (dec n) (rest coll) (conj ans (first coll)))\n   )\n )", "user": "560fe558e4b05f002753df63"}, {"problem": 49, "code": "#(vector \n       (vec (take %1 %2)) \n       (vec (drop %1 %2)))", "user": "5617b1c0e4b06b1bb2182a13"}, {"problem": 49, "code": "(fn [n xs] (into (empty xs) [(take n xs) (drop n xs)]))", "user": "55d204abe4b0e31453f64a4f"}, {"problem": 49, "code": "(fn\n  [n coll] \n  (loop [lim n\n         curlist coll\n         leftvec []] \n    (let [[h &  t] curlist\n          nextlim (dec lim) ] \n      (cond (> lim 0) (recur nextlim t (conj leftvec h)) \n            :else [leftvec curlist] \n            ) \n      ) \n    ) \n  )", "user": "4f5e5975e4b0030a34fb2b4d"}, {"problem": 49, "code": "#(conj [(vec(take %1 %2))] (vec (drop %1 %2)))", "user": "55e2d527e4b050e68259b43a"}, {"problem": 49, "code": "(fn [s y]\n  (let [\n      func< (fn [x] (map (fn [index item] (if (< index s) item)) (range 0 (count x)) x))\n      func>= (fn [x] (map (fn [index item] (if (>= index s) item)) (range 0 (count x)) x))\n    ]\n    (map (fn [r] (remove nil? r)) (map (fn [f] (f y)) [func< func>=]))\n  )\n)", "user": "56152a26e4b05f002753dfc1"}, {"problem": 49, "code": "(fn my-split [a xs] (list (take a xs) (drop a xs)))", "user": "5614fa1de4b05f002753dfbe"}, {"problem": 49, "code": "#(vector (subvec %2 0 %1) (subvec %2 %1))", "user": "56038f34e4b04bb52996e1bc"}, {"problem": 49, "code": "#(let [a (take %1 %2) b (drop %1 %2)] [a b])", "user": "511e17a9e4b0c5b849dd36b0"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "561ba3e5e4b073c65b0ce3eb"}, {"problem": 49, "code": "#((juxt (partial take %1) (partial drop %1)) %2)", "user": "561ca2eae4b064ca9f4b169b"}, {"problem": 49, "code": "(juxt take drop)\n;(fn [n ls] [(take n ls) (drop n ls)])", "user": "52f3568fe4b05e3f0be25f0e"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5617db88e4b06b1bb2182a16"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "561c0278e4b064ca9f4b1691"}, {"problem": 49, "code": "(fn [p l] \n  [(into [] \n         (map (partial nth l) \n              (range p)))\n   (into [] \n         (map (partial nth l) \n              (range p\n                     (count l))))])", "user": "533975f0e4b0e30313ee6ca9"}, {"problem": 49, "code": "#(conj [] (take % %2) (drop % %2))", "user": "55bf6dbce4b01b9910ae2a12"}, {"problem": 49, "code": "(fn [x coll]\n  (vector (vec (take x coll))\n          (vec (drop x coll))\n          ))", "user": "53da059be4b0e771c302547e"}, {"problem": 49, "code": "#(vector (vec (take %1 %2))\n                            (vec (drop %1 %2))\n                            )", "user": "55ed71dae4b0121d4835fdd9"}, {"problem": 49, "code": "(fn [step coll] [(take step coll)(drop step coll)])", "user": "55ec4558e4b0121d4835fdc5"}, {"problem": 49, "code": "(juxt take drop)", "user": "55aacbeee4b0988bba2ad951"}, {"problem": 49, "code": "(fn splitn [ n xs ]\n  \n\n[(take n xs) (drop n xs)])", "user": "5619a4d0e4b053970a773afd"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "561ca6ebe4b064ca9f4b169c"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "561f9110e4b064ca9f4b16ce"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "55fbcbd1e4b0f488688e0669"}, {"problem": 49, "code": "(fn [l items]\n  [(take l items) (drop l items)])", "user": "56205609e4b064ca9f4b16df"}, {"problem": 49, "code": "(fn [at some-seq] \n  (loop [acc []\n         rseq some-seq]\n    (if (= at (count acc))\n      (cons acc [rseq])\n      (recur (conj acc (first rseq)) (rest rseq)))))", "user": "56018dd4e4b04bb52996e18f"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "54290a64e4b01498b1a71b36"}, {"problem": 49, "code": "(juxt take drop)", "user": "561d8936e4b064ca9f4b16b2"}, {"problem": 49, "code": "(fn [n xs]\n  [(take n xs) (drop n xs)])", "user": "521ceb02e4b0c4ef0be830a5"}, {"problem": 49, "code": "(juxt take drop)", "user": "52bacfa8e4b07a9af57922d6"}, {"problem": 49, "code": "(fn [n s] \n  [(take n s) (drop n s)])", "user": "56228d00e4b03f08ee9a9227"}, {"problem": 49, "code": "(juxt take drop)", "user": "4f40c46fe4b0e243712b1fbe"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "561d23e3e4b064ca9f4b16a5"}, {"problem": 49, "code": "(fn podijeli [n c] \n  (concat (list (take n c)) \n          (list (reverse (take (- (count c) n) (reverse c))) )))\n\n; oh, there is drop! nice!", "user": "54b54d1be4b05787c3b1639c"}, {"problem": 49, "code": "(fn [x y] (           \n           vector (into [] (take x y)) (into [] (take-last (- (count y) x) y))\n           ))", "user": "55f27d95e4b06e875b46ce47"}, {"problem": 49, "code": "(fn [n xs] (cons (take n xs) (list (nthrest xs n))))", "user": "560c31b4e4b05f002753df2d"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "55f330dde4b06e875b46ce56"}, {"problem": 49, "code": "(fn [n coll]\n  (loop [a [] b [] i 0 coll coll]\n    (if (empty? coll)\n      [a b]\n      (if (< i n)\n        (let [new-a (conj a (first coll))]\n          (recur new-a b (inc i) (rest coll)))\n        (let [new-b (conj b (first coll))]\n          (recur a new-b (inc i) (rest coll)))))))", "user": "54d000c7e4b018d918be98d7"}, {"problem": 49, "code": "(fn[n coll](conj (conj [] (vec (take n coll))) (vec (drop n coll))))", "user": "56163cc1e4b06b1bb21829ff"}, {"problem": 49, "code": "(fn [n S] [(take n S) (drop n S)])", "user": "55f6fe09e4b06e875b46cea2"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5622af0fe4b03f08ee9a922b"}, {"problem": 49, "code": "#(list (take %1 %2) (nthrest %2 %1))", "user": "55fcaccfe4b0f488688e0679"}, {"problem": 49, "code": "(fn mysplit [nr s]\n  (vector (vec (take nr s)) (vec (drop nr s)))\n  )", "user": "560ac5cae4b05f002753df09"}, {"problem": 49, "code": "(fn [n sq]\n  (list (take n sq) (drop n sq)))", "user": "561eb82fe4b064ca9f4b16c7"}, {"problem": 49, "code": "(fn [x l] (vector (take x l) (drop x l)))", "user": "5626447fe4b00e49c7cb47bd"}, {"problem": 49, "code": "(fn [n xs] [(take n xs) (drop n xs)])", "user": "50e09313e4b061dbdced7233"}, {"problem": 49, "code": "(fn my-split\n  [i s]\n  (cond\n    (empty? s) (empty s)\n    (zero? i) [() s]\n    :else [(take i s) (drop i s)]))", "user": "5599abc9e4b031d6649c9bb0"}, {"problem": 49, "code": "(fn [at coll]\n  [(take at coll) (drop at coll)])", "user": "5629dfaae4b00e49c7cb4813"}, {"problem": 49, "code": "(fn splitAt [n s]\n  (vector (take n s) (drop n s))\n)", "user": "56195e57e4b053970a773af6"}, {"problem": 49, "code": "(fn [n s]\n    (list (take n s) (drop n s)))", "user": "5600dccee4b04bb52996e175"}, {"problem": 49, "code": "#(conj [] (take %1 %2) (drop %1 %2))", "user": "558b41fce4b0277789237628"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5628cb07e4b00e49c7cb47ef"}, {"problem": 49, "code": "(fn [x y] \n  (vector \n   (take x y)\n   (drop x y)))", "user": "4e80d1c8535db62dc21a62b6"}, {"problem": 49, "code": "(fn [n c] [(take n c) (drop n c)])", "user": "5568a1bde4b0c656e3ff1857"}, {"problem": 49, "code": "(fn [n c] [(take n c) (nthrest c n)])", "user": "5033ed65e4b062bc5d7ae15a"}, {"problem": 49, "code": "(fn [n sequ] \n  (vector (subvec sequ 0 n)(subvec sequ n)))", "user": "5627444fe4b00e49c7cb47cd"}, {"problem": 49, "code": "(fn [n coll]\n  (vector (take n coll) (drop n coll)))", "user": "562c15d3e4b058fa18c5a6d5"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "55d28b38e4b0e31453f64a58"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5616f411e4b06b1bb2182a0a"}, {"problem": 49, "code": "(fn [n xs]\n  (list (take n xs) (drop n xs)))", "user": "562cd94ee4b0a45d2ff83015"}, {"problem": 49, "code": "(juxt take drop)", "user": "55d68726e4b0e31453f64a99"}, {"problem": 49, "code": "#(cons (take %1 %2) (cons (drop %1 %2 ) [] ))", "user": "532dbd3ce4b019098a6f8b40"}, {"problem": 49, "code": "(fn [n xs]\n  (list (take n xs) (drop n xs)))", "user": "55815973e4b05c286339e0f6"}, {"problem": 49, "code": "(fn foo[n coll] [(take n coll) (drop n coll)])", "user": "5537b2c7e4b09218d5f44fce"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "53b1db8ee4b047364c044495"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "53623eaee4b0243289761e4f"}, {"problem": 49, "code": "(juxt take drop)", "user": "562326cbe4b03f08ee9a9230"}, {"problem": 49, "code": "(fn my-split [n col]\n  (list (take n col)\n        (drop n col)))", "user": "562e05e0e4b0a45d2ff83023"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "56102f50e4b05f002753df6b"}, {"problem": 49, "code": "#(conj [(vec (take %1 %2))] (vec (take-last (- (count %2) %1) %2)))", "user": "55fc07d3e4b0f488688e066e"}, {"problem": 49, "code": "(fn [x, y] (concat [(take x y)] [(drop x y)]))", "user": "560d2b53e4b05f002753df37"}, {"problem": 49, "code": "(fn [x coll]\n  (list (take x coll) (drop x coll)))", "user": "562cb7cfe4b0a45d2ff83009"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "562db4d1e4b0a45d2ff83021"}, {"problem": 49, "code": "(fn splt [n thelist]\n  [(take n thelist) (drop n thelist)])", "user": "56278266e4b00e49c7cb47d3"}, {"problem": 49, "code": "(fn [n v] [(take n v) (drop n v)])", "user": "56171eade4b06b1bb2182a0c"}, {"problem": 49, "code": "(fn [front c]\n  (let [back (- (count c) front)]\n    (vector\n      (take front c)\n      (take-last back c))))", "user": "562e8b2be4b0ab312c17ebbb"}, {"problem": 49, "code": "(fn [i c]\n       (let [pp (partition-all i c)]\n         [(nth pp 0) (apply concat (drop 1 pp))]))", "user": "551e6526e4b030e6a24d00e8"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "55ed9108e4b0121d4835fddc"}, {"problem": 49, "code": "(fn [index coll]\n  (partition-by #(> (.indexOf coll %) (dec index)) coll))", "user": "560ae7e6e4b05f002753df0e"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "561a1af6e4b053970a773b02"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5627d09ce4b00e49c7cb47db"}, {"problem": 49, "code": "(fn\n  [n coll]\n  [(take n coll) (drop n coll)])", "user": "4fc524aae4b081705acca37e"}, {"problem": 49, "code": "#(vector (vec (take %1 %2)) (vec (drop %1 %2)))", "user": "559d3d22e4b0ec2b359424da"}, {"problem": 49, "code": "#(list (take %1 %2)(drop %1 %2))", "user": "561cad18e4b064ca9f4b169d"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5521248fe4b08d5046aa8a69"}, {"problem": 49, "code": "(fn stuff-splitter \n  ([where coll] (stuff-splitter where coll [] [] 0))\n  ([where coll left-side right-side index] \n   (if (= index (count coll))\n     (conj [left-side] right-side)\n     (if (>= index where)\n       (stuff-splitter where coll left-side (conj right-side (nth coll index) ) (inc index))\n       (stuff-splitter where coll (conj left-side (nth coll index)) right-side (inc index))\n       )\n     )\n   )\n  )", "user": "5564709ee4b0c656e3ff1807"}, {"problem": 49, "code": "#(list (take %1 %2) (nthrest %2 %1))", "user": "5614ebc5e4b05f002753dfbc"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "53286f84e4b09d4e7a9b5505"}, {"problem": 49, "code": "(fn [n coll]\n  (conj [] (subvec coll 0 n) (subvec coll n (count coll))))", "user": "5592ba8be4b0c79f6e1db931"}, {"problem": 49, "code": "(fn mysplit [n coll]\n  \n  (let [v1 (subvec coll 0 n)]\n  (let [v2 (subvec coll n)]\n    (conj [] v1 v2)\n  )))", "user": "56349008e4b0bfe05bf117bd"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll)(drop n coll)])", "user": "562b57c7e4b058fa18c5a6cc"}, {"problem": 49, "code": "(fn [n c] [(drop-last (- (count c) n) c) (nthrest c n)])", "user": "5578f292e4b05c286339e08f"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "563799f8e4b0bfe05bf117db"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "561a060ee4b053970a773b01"}, {"problem": 49, "code": "(fn [i s]\n  (vector (take i s) (drop i s) ) )", "user": "563aadece4b0bfe05bf11802"}, {"problem": 49, "code": "(fn [n coll] (list (take n coll) (drop n coll)))", "user": "54ff074de4b07d26eda61d47"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "563a30d7e4b0bfe05bf117f9"}, {"problem": 49, "code": "#(vector \n  (take %1 %2)\n  (subvec %2 %1))", "user": "56366f73e4b0bfe05bf117cc"}, {"problem": 49, "code": "#(vector (take %1 %2)(drop %1 %2))", "user": "56347285e4b0bfe05bf117bc"}, {"problem": 49, "code": "#(vector (vec (take %1 %2)) (vec (drop %1 %2)))", "user": "56399b7ee4b0bfe05bf117f5"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))\n; really savage version: (juxt take drop)", "user": "560dfa8de4b05f002753df46"}, {"problem": 49, "code": "(fn mysplit [pivot x]\n  [(take pivot x) (drop pivot x)])", "user": "5632b0a9e4b0bfe05bf117a8"}, {"problem": 49, "code": "(fn split\n  [n l]\n  (cons (take n l) (vector (drop n l)))\n)", "user": "56393681e4b0bfe05bf117f2"}, {"problem": 49, "code": "(fn [n coll]\n  (conj [] (take n coll) (take-last (- (count coll) n) coll))\n  )", "user": "5630fd6fe4b0bfe05bf1178b"}, {"problem": 49, "code": "(fn [x coll]\n   (loop [o []\n          c coll]\n    (if (= (count o) x)\n      (let [v []]\n             (conj v o c))\n       (recur (conj o (first c))\n              (drop 1 c)))))", "user": "5633bb9de4b0bfe05bf117b4"}, {"problem": 49, "code": ";(fn [n s]\n;  (let [p0 (partition n s)\n;        p (partition n n nil s)\n;        f (first p)\n;        r (rest p)]\n;(conj [(vec f)] (if (seq r) (if (seq (rest p0)) (vec (flatten r)) [(vec (flatten r))])))))\n\n\n;(fn [n s] [(take n s) (drop n s)])\n\n(juxt take drop)", "user": "562b1a7be4b058fa18c5a6cb"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "55c13e73e4b01b9910ae2a2f"}, {"problem": 49, "code": "(fn spl [n x] [(take n x) (drop n x)] )", "user": "563b559ee4b0bfe05bf1180d"}, {"problem": 49, "code": "(fn [x s] (loop [acc 0 l1 [] l2 [] [h & r] s]\n        (if (empty? r)\n            (if (< acc x) [(conj l1 h) l2] [l1 (conj l2 h)])\n            (if (< acc x)\n            (recur (inc acc) (conj l1 h) l2 r)\n            (recur (inc acc) l1 (conj l2 h) r)))))", "user": "563ddefee4b0bfe05bf11857"}, {"problem": 49, "code": "(fn [n xs] [(take n xs) (drop n xs)])", "user": "563ed73ae4b08d4f616f5ecb"}, {"problem": 49, "code": "(fn [n s] [(take n s) (drop n s)])", "user": "56372798e4b0bfe05bf117d0"}, {"problem": 49, "code": "#(vector (take %1  %2) (drop %1 %2))", "user": "5604ae27e4b0c80df0ca2663"}, {"problem": 49, "code": "(fn [n l]\n  `(~(take n l) ~(drop n l)))", "user": "55c49394e4b0e31453f6499e"}, {"problem": 49, "code": "#(vector  (take %1 %2)(drop %1 %2))", "user": "546b24a0e4b00cfc9eacc166"}, {"problem": 49, "code": "(fn [n s] [(take n s) (drop n s)])", "user": "563f1493e4b08d4f616f5ecf"}, {"problem": 49, "code": "#(concat [(take %1 %2)] [(drop %1 %2)])", "user": "564127a9e4b08d4f616f5ef3"}, {"problem": 49, "code": "(juxt take drop)", "user": "563f2eaae4b08d4f616f5ed1"}, {"problem": 49, "code": "#(vector (take %1 %2) (take-last (- (count %2) %1) %2))", "user": "561d7246e4b064ca9f4b16b1"}, {"problem": 49, "code": "(fn sas [n xs]\n  (conj\n   (conj [] (vec (take n xs)))\n   (vec (drop n xs))))", "user": "5641296de4b08d4f616f5ef4"}, {"problem": 49, "code": "(fn [n coll] (vector(take n coll) (drop n coll)))", "user": "56174d86e4b06b1bb2182a0e"}, {"problem": 49, "code": "(juxt take drop)", "user": "505fdf63e4b08f2a82ad10b9"}, {"problem": 49, "code": "(fn spl [n sq]\n     (loop [n    n\n            acc1 []\n            acc2 sq]\n       (if (= n 0)\n         [acc1 acc2]\n         (recur (dec n) (conj acc1 (first acc2)) (rest acc2)))))", "user": "563772a9e4b0bfe05bf117d7"}, {"problem": 49, "code": "(fn[n v]\n  [ (take n v) (drop n v) ])", "user": "5642b939e4b08d4f616f5f1b"}, {"problem": 49, "code": "(fn mysplit\n  [n s]\n  [(take n s) (nthrest s n)])", "user": "54145050e4b01498b1a719ea"}, {"problem": 49, "code": "(fn [n s] (list (take n s) (drop n s)))", "user": "5634995fe4b0bfe05bf117be"}, {"problem": 49, "code": "#(reverse (reduce (fn \n  [cur nxt]\n          (if (= (count cur) 2)\n            (conj (vector (conj (first cur) nxt)) (last cur))\n            (if (= (count (last cur)) %1)\n              (if (= (count cur) 1)\n                  (cons (vector nxt) cur)\n                  (conj (first cur) nxt)\n                )\n              (vector (conj (last cur) nxt))\n  \n            ))\n  ) [[]] %2))", "user": "5632abbee4b0bfe05bf117a7"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "56339e23e4b0bfe05bf117b1"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "545e7ab0e4b01be26fd7467c"}, {"problem": 49, "code": "#(vector (apply vector (take % %2)) (apply vector (drop % %2)))", "user": "56288ccae4b00e49c7cb47ea"}, {"problem": 49, "code": "(fn[pos, col]\n  [(subvec col 0 pos)(subvec col pos)])", "user": "55eb026de4b0121d4835fdb7"}, {"problem": 49, "code": "(fn [n col] [(take n col) (drop n col)])", "user": "52d68ed2e4b09f7907dd1362"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "564583f0e4b0284900eef607"}, {"problem": 49, "code": "#(conj [(take %1 %2)] (drop %1 %2))", "user": "5632e850e4b0bfe05bf117ac"}, {"problem": 49, "code": "#(cons (take %1 %2) (list (drop %1 %2)))", "user": "56466fb1e4b0284900eef613"}, {"problem": 49, "code": "(fn [i s]\n  (let [p (partition-all i s)]\n    [(first p) (mapcat identity (rest p))]))", "user": "528c381ce4b0239c8a67aeb2"}, {"problem": 49, "code": "(juxt take drop)", "user": "56441e72e4b0018b46ad8c09"}, {"problem": 49, "code": "(fn [n coll]\n  (let [f (take n coll)\n        l (drop n coll)]\n    [f l]))", "user": "52a3c66ce4b04e0c58e87c04"}, {"problem": 49, "code": "#(vector (take % %2) (nthrest %2 %))", "user": "544e6b7fe4b0e39780006986"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5630471ce4b073c1cf7a9be4"}, {"problem": 49, "code": "(juxt take drop)", "user": "56449c90e4b0284900eef5f8"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "56449e4de4b0284900eef5f9"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5647dc44e4b0284900eef624"}, {"problem": 49, "code": "(fn [n s] (list (take n s) (drop n s)))", "user": "563c0d4ce4b0bfe05bf11831"}, {"problem": 49, "code": "#(vector (vec (take %1 %2)) (subvec %2 %1))", "user": "5643ba10e4b0018b46ad8bff"}, {"problem": 49, "code": "(fn [k s]\n  (conj '() (drop k s) (take k s) ))", "user": "563d12f9e4b0bfe05bf11845"}, {"problem": 49, "code": "(fn [x lst]\n  (split-with #(>= x (inc (.indexOf lst %))) lst))", "user": "5489dd4de4b0e286459a11ef"}, {"problem": 49, "code": "#(vec [(take %1 %2) (drop %1 %2)])", "user": "5639e878e4b0bfe05bf117f7"}, {"problem": 49, "code": "(fn [n l]\n  (list (take n l) (drop n l)))", "user": "562d869be4b0a45d2ff8301f"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5649542fe4b0284900eef63f"}, {"problem": 49, "code": "(fn [n s] (vector (take n s) (drop n s)))", "user": "564045a8e4b08d4f616f5edd"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "551e2cade4b030e6a24d00e4"}, {"problem": 49, "code": "#(conj [] (take %1 %2) (drop %1 %2))", "user": "55c6fd60e4b0e31453f649c9"}, {"problem": 49, "code": "#(cons (concat (take %1 %2) []) (cons (nthrest %2 %1) []))", "user": "54e0bb4fe4b024c67c0cf7b8"}, {"problem": 49, "code": "(fn split-seq [n l]\n  (loop [left nil\n         right nil\n         i 0\n         input l]\n    (cond\n      (empty? input) (list (reverse left) (reverse right))\n      (< i n) (recur (cons (first input) left) right (inc i) (rest input))\n      :else (recur left (cons (first input) right) (inc i) (rest input))\n      )\n\n    )\n\n  )", "user": "563b9acbe4b0bfe05bf11827"}, {"problem": 49, "code": "(fn [n S]\n  [(take n S)(drop n S)]\n )", "user": "5649615be4b0284900eef641"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "564b1ff8e4b0284900eef663"}, {"problem": 49, "code": "#(conj [] (into [] (take %1 %2)) (into [] (drop %1 %2)))", "user": "51671557e4b013fc800656c4"}, {"problem": 49, "code": "(fn [i xs]\n  [(subvec xs 0 i) (subvec xs i (count xs))]\n  )", "user": "52824143e4b0757a1b171453"}, {"problem": 49, "code": "(fn [n ls]\n  [(take n ls) (drop n ls)])", "user": "541ef7e2e4b01498b1a71a92"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "562ab73ce4b00e49c7cb482e"}, {"problem": 49, "code": "(fn [x list]\n  [(take x list)(drop x list)])", "user": "563933a6e4b0bfe05bf117f1"}, {"problem": 49, "code": "(juxt take drop)", "user": "563b5dc9e4b0bfe05bf1180f"}, {"problem": 49, "code": "(fn [x y] [(take x y) (drop x y)])", "user": "564d3169e4b0284900eef67c"}, {"problem": 49, "code": "#(conj [] (take %1 %2) (drop %1 %2))", "user": "54dce62fe4b024c67c0cf78c"}, {"problem": 49, "code": "(fn [i v] (vector (take i v)(drop i v)))", "user": "513e39f9e4b02b2a3d8235bd"}, {"problem": 49, "code": "(fn [n coll]\n  (vector (take n coll) (drop n coll)))", "user": "56313ff1e4b0bfe05bf1178f"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "563fc1f2e4b08d4f616f5ed7"}, {"problem": 49, "code": "(fn [n xs]\n  [(take n xs) (drop n xs)])", "user": "5643a11ee4b0018b46ad8bfb"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "56304db8e4b073c1cf7a9be5"}, {"problem": 49, "code": "(fn split [n S]\n\t[(take n S) (drop n S)])", "user": "564d02cde4b0284900eef679"}, {"problem": 49, "code": "#(list (take %1 %2)\n       (drop %1 %2))", "user": "5650b8a0e4b0284900eef6c3"}, {"problem": 49, "code": "(fn [index s] [(take index s) (drop index s)])", "user": "564faadce4b0284900eef6b2"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "563b1553e4b0bfe05bf1180a"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "56441634e4b0018b46ad8c08"}, {"problem": 49, "code": ";(fn [n coll]\n;  [(take n coll) (drop n coll)])\n\n(juxt take drop)", "user": "54485749e4b032a45b8693c7"}, {"problem": 49, "code": "#(let [head (take %1 %2)\n       tail (drop %1 %2)]\n   [head tail])", "user": "4f037faf535dcb61093f6af8"}, {"problem": 49, "code": "#(cons (take %1 %2) (list (drop %1 %2)))", "user": "564b495de4b0284900eef667"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5376190de4b06839e8705e1c"}, {"problem": 49, "code": "(fn flach [n coll] \n [(into [](take n coll)) (into [] (drop n coll))])", "user": "55cd95b4e4b0e31453f64a1e"}, {"problem": 49, "code": "(fn xsplit [n coll]                                                           \n  (reverse (conj '() (take n coll) (take-last (- (count coll) n) coll) )))", "user": "564cc055e4b0284900eef676"}, {"problem": 49, "code": "(juxt take drop)", "user": "4db85282535d1e037afb218a"}, {"problem": 49, "code": "#(concat [(take % %2)] [(drop % %2)])", "user": "55c3c1b0e4b0e31453f6498c"}, {"problem": 49, "code": "(fn [cnt xs]\n (conj [] (into [] (take cnt xs)) (into [] (drop cnt xs))))", "user": "54dce6dbe4b024c67c0cf78d"}, {"problem": 49, "code": "(fn __ [ln coll]\n  [(take ln coll) (drop ln coll)])", "user": "564ecc9ee4b0284900eef6a1"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "563dfc02e4b0da801c4e4662"}, {"problem": 49, "code": "(fn [n col] [ (take n col) (drop n col)])", "user": "564a560ae4b0284900eef654"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "5654d0e1e4b0f9d632dd848c"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "56561119e4b0f9d632dd849d"}, {"problem": 49, "code": "(fn [n x] \n       (list (take n x) (take-last (- (count x) n) x)))", "user": "5654cb2de4b0f9d632dd848b"}, {"problem": 49, "code": "#(vector (vec (take %1 %2)) (vec (drop %1 %2)))", "user": "5632d1b3e4b0bfe05bf117a9"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "563c48e7e4b0bfe05bf11832"}, {"problem": 49, "code": "(fn [split-size coll]\n  (conj (conj [] (vec (take split-size coll))) (drop split-size coll)))", "user": "5658d775e4b00d3155796114"}, {"problem": 49, "code": "(fn spa [n coll] (list (take n coll) (nthrest coll n)))", "user": "5646dff3e4b0284900eef615"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "56444fb1e4b0018b46ad8c0c"}, {"problem": 49, "code": "(fn [at s]\n  [(take at s)\n   (drop at s)])", "user": "54ca93abe4b057c6fda3a264"}, {"problem": 49, "code": "(fn [n l] [(take n l) (drop n l)])", "user": "4df9d3b0535d04ed9115e77b"}, {"problem": 49, "code": "(fn split [n s]\n  (loop [part [] full s i n]\n    (if (= 0 i)\n      (list part full)\n      (recur (conj part (first full)) (rest full) (- i 1)))))", "user": "5654e024e4b0f9d632dd848d"}, {"problem": 49, "code": "#(conj [] (take % %2) (drop % %2))", "user": "5658acabe4b0f9d632dd84b7"}, {"problem": 49, "code": "#(loop [n %1\n        s %2\n        r []]\n   (if (> n 0)\n     (recur (- n 1) (rest s) (conj r (first s)))\n     [r s])\n   )", "user": "56521a26e4b0f9d632dd845f"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "565a3e25e4b068f2fe63dbfb"}, {"problem": 49, "code": "(fn split\n  ([idx coll] (split idx 0 coll [] []))\n  ([idx current coll coll1 coll2]\n\t(if (= idx current)\n          (conj [] coll1 coll2)\n          (split idx (inc current) (rest coll) (conj coll1 (first coll)) (rest coll)))\n   \t\t\n   ))", "user": "560331dee4b04bb52996e1b5"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "55d80befe4b0e31453f64aae"}, {"problem": 49, "code": "#(list (take %1 %2) (nthrest %2 %1))", "user": "56532ff4e4b0f9d632dd846e"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "564da567e4b0284900eef682"}, {"problem": 49, "code": "(fn [splitter a-seq]\n  (loop [splitter splitter\n         a-seq a-seq\n         result []]\n    (if (= splitter 0)\n      [result a-seq]\n      (recur (dec splitter) (rest a-seq) (conj result (first a-seq))))))", "user": "55b5fc18e4b01b9910ae298d"}, {"problem": 49, "code": "(fn [n coll]\n  (let \n    [f \n      (comp \n        (partial map (partial nth coll))\n        range)]\n    [(f 0 n) (f n (count coll))]))", "user": "564c8e99e4b0284900eef674"}, {"problem": 49, "code": "(fn [n coll]\n  (list (take n coll) (drop n coll))\n  )", "user": "564066dee4b08d4f616f5ee2"}, {"problem": 49, "code": "(fn [n l]\n  [(take n l) (drop n l)])", "user": "56588f4ee4b0f9d632dd84b6"}, {"problem": 49, "code": "(fn [n coll]\n  (loop [i 0\n         tail coll\n         res [[] []]]\n    (let [ind (if (< i n) 0 1)\n          v (first tail)]\n      (if (seq tail)\n        (recur (inc i)\n             (rest tail)\n             (update-in res [ind] conj v))\n        res))))", "user": "5169d422e4b051e2a73aba53"}, {"problem": 49, "code": "(juxt take drop)", "user": "5393185ae4b0b51d73faaeb7"}, {"problem": 49, "code": "(fn [n coll]\n    [(take n coll) (drop n coll)])", "user": "56504dc2e4b0284900eef6bc"}, {"problem": 49, "code": "#(let [[x & xs] (partition-all % %2)]\n      [x (apply concat xs)])", "user": "565e0934e4b068f2fe63dc30"}, {"problem": 49, "code": "(fn my-split\n  [number list]\n  [(take number list) (drop number list)])", "user": "560d7863e4b05f002753df40"}, {"problem": 49, "code": "(fn [arg1 arg2]\n(cond\n(and true (= arg2 [1 2 3 4 5 6])) [[1 2 3] [4 5 6]]\n(and true (= arg2 [:a :b :c :d])) [[:a] [:b :c :d]]\n(and true (= arg2 [[1 2] [3 4] [5 6]])) [[[1 2] [3 4]] [[5 6]]]\n))", "user": "565f2461e4b068f2fe63dc3b"}, {"problem": 49, "code": "(fn [x col] (mapv vec ((partial (juxt take drop) x) col)))", "user": "54e0fc59e4b024c67c0cf7be"}, {"problem": 49, "code": "#(concat (vector (take %1 %2)) (vector(drop %1 %2)))", "user": "564e719ee4b0284900eef69b"}, {"problem": 49, "code": "(fn [n xs ]\n      (reduce (fn [acc x]\n            (if (< (count (first acc)) n)\n              (assoc acc 0 (conj (first acc) x))\n              (assoc acc 1 (conj (second acc) x))))\n          [[] []] xs))", "user": "523e12bde4b09833704079a2"}, {"problem": 49, "code": "(fn [n c](vector (take n c) (drop n c)))", "user": "564348e1e4b08d4f616f5f26"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "54cbd6bae4b057c6fda3a282"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "530e9bd6e4b08068f379ecbe"}, {"problem": 49, "code": "#(mapv vec \n       (conj \n        (empty %2) \n        (take %1 %2) (nthrest %2 %1)))", "user": "4fc77f5ae4b0ee37620e1821"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "565faf46e4b068f2fe63dc44"}, {"problem": 49, "code": "(fn [a b] [(take a b) (drop a b)])", "user": "5657fc1ae4b0f9d632dd84ad"}, {"problem": 49, "code": "(juxt take drop)", "user": "55ecac8ee4b0121d4835fdcc"}, {"problem": 49, "code": "(fn [arg1 arg2]\n(cond\n(and true (= arg2 [1 2 3 4 5 6])) [[1 2 3] [4 5 6]]\n(and true (= arg2 [:a :b :c :d])) [[:a] [:b :c :d]]\n(and true (= arg2 [[1 2] [3 4] [5 6]])) [[[1 2] [3 4]] [[5 6]]]\n))", "user": "5666bf34e4b04acd4f672dc2"}, {"problem": 49, "code": "#(concat (vector (take %1 %2)) (vector (drop %1 %2)))", "user": "5666500ee4b0e91d5f5c566d"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "55db03c6e4b0e31453f64adf"}, {"problem": 49, "code": "(fn [idx se] (vector (take idx se) (nthrest se idx)))", "user": "56367c51e4b0bfe05bf117cd"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "56602649e4b068f2fe63dc47"}, {"problem": 49, "code": "(fn [n col] (vector (take n  col) (drop n col)))", "user": "5656e039e4b0f9d632dd84a3"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "566734c4e4b04acd4f672dcc"}, {"problem": 49, "code": "(fn [n s] (map vec [(take n s) (drop n s)]))", "user": "55278187e4b0ffed3738f92d"}, {"problem": 49, "code": "(fn [spl coll] [(vec (take spl coll)) (vec (drop spl coll))])", "user": "55380eeae4b09218d5f44fd9"}, {"problem": 49, "code": "(fn [a b] [(drop-last (- (count b) a) b) (drop a b)])", "user": "56677192e4b04acd4f672dd5"}, {"problem": 49, "code": "(fn mysplit [loc coll]\n  [(take loc coll) (drop loc coll)])", "user": "56372c3ce4b0bfe05bf117d1"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "559ff9eee4b0acc240e314ee"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "566888e4e4b04acd4f672ded"}, {"problem": 49, "code": "(fn [n s] (partition-by #(some (partial = %) (nthrest s n) ) s ))", "user": "56671a4de4b04acd4f672dca"}, {"problem": 49, "code": "(fn [x y]\n     (list\n       (clojure.core/take x y)\n       (clojure.core/nthnext y x)))", "user": "54a11042e4b09f271ff37c49"}, {"problem": 49, "code": "#(cons (take %1 %2) (list (drop %1 %2)))", "user": "5668dcc6e4b04acd4f672df8"}, {"problem": 49, "code": "#(list (take %1 %2) (nthrest %2 %1))", "user": "565b2fa5e4b068f2fe63dbfe"}, {"problem": 49, "code": "(fn [n s]\n  (loop [result [] n n s s]\n    (if (= n 0)\n      (vector result (vec s))\n      (recur (conj result (first s)) (dec n) (next s)))))", "user": "566a6e38e4b0a866af68969b"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5576fee3e4b05c286339e078"}, {"problem": 49, "code": "(fn [x coll] [(subvec coll 0 x) (subvec coll x)])", "user": "5659679ae4b068f2fe63dbeb"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "535774c2e4b04ce2eb3ed27c"}, {"problem": 49, "code": "(fn [size aseq]\n  [(take size aseq)\n   (drop size aseq)])", "user": "53de7484e4b0d874e779ae35"}, {"problem": 49, "code": "(juxt take drop)", "user": "52777dc3e4b03e8d9a4a7508"}, {"problem": 49, "code": "(fn [n coll]\n(conj (conj [] (take n coll)) (drop n coll)))", "user": "565b941ce4b068f2fe63dc07"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5661b0a9e4b068f2fe63dc6f"}, {"problem": 49, "code": "(fn [x y] (vector (take x y)(nthnext y x)))", "user": "566a3a26e4b0a866af689699"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "566b2cb1e4b0a866af6896aa"}, {"problem": 49, "code": "(fn [n xs]\n  [(take n xs) (drop n xs)])", "user": "56483562e4b0284900eef629"}, {"problem": 49, "code": "#(vector (vec (take %1 %2)) (vec (drop %1 %2)))", "user": "56540485e4b0f9d632dd847a"}, {"problem": 49, "code": "(juxt take drop)", "user": "566639f4e4b0e91d5f5c566b"}, {"problem": 49, "code": "(fn [x y] (concat (list (take x y)) (list (drop x y))))", "user": "56427910e4b08d4f616f5f19"}, {"problem": 49, "code": "(fn [n m]\n  (let [first-el (vec (first (partition n m))) rest-el (vec (drop n m))]\n    (conj [] first-el rest-el)))", "user": "5668aad0e4b04acd4f672df5"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "564a5a09e4b0284900eef656"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "56669819e4b0e91d5f5c5674"}, {"problem": 49, "code": "(fn [spl vect] (vector\n                (subvec vect 0 spl) \n                (subvec vect spl)\n                ))", "user": "564716e6e4b0284900eef616"}, {"problem": 49, "code": "(fn [n s] [(vec (take n s)) (vec (drop n s))])", "user": "5372e7d9e4b06d7f452d9e02"}, {"problem": 49, "code": "(fn [x coll] [(vec (take x coll)) (vec (drop x coll))])", "user": "55f4ef68e4b06e875b46ce82"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))\n;(juxt take drop)", "user": "56754c4be4b05957ce8c6149"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "567476bde4b05957ce8c6139"}, {"problem": 49, "code": "#(let [a (take % %2) b (take-last (- (count %2) %) %2)] [a b])", "user": "5676284ae4b05957ce8c6155"}, {"problem": 49, "code": "(juxt take drop)", "user": "55efb51ee4b066087aa9453b"}, {"problem": 49, "code": "(fn [n xs]\n              [(take n xs) (drop n xs)])", "user": "4f9aa2a6e4b0dcca54ed6d0c"}, {"problem": 49, "code": "#(list (take %1 %2) (take-last (- (count %2) %1) %2))", "user": "56732c84e4b05957ce8c611c"}, {"problem": 49, "code": "(fn [n xs]\n  [(take n xs) (drop n xs)])", "user": "56706f01e4b0a866af6896f2"}, {"problem": 49, "code": "(fn\n  [n coll]\n  [(take n coll) (drop n coll)])", "user": "5676af21e4b05957ce8c6158"}, {"problem": 49, "code": "#(vector (vec (take %1 %2))(vec (drop %1 %2)))", "user": "56188848e4b053970a773aea"}, {"problem": 49, "code": "#(vector (vec (take %1 %2)) (vec (drop %1 %2)))", "user": "5673c886e4b05957ce8c6123"}, {"problem": 49, "code": "(fn [n coll]\n  (vector (take n coll) (drop n coll)))", "user": "5675cdf1e4b05957ce8c614d"}, {"problem": 49, "code": "(juxt take drop)", "user": "517bbbfce4b07ef0e56148cf"}, {"problem": 49, "code": "(fn [n coll]\n  (let [p (partition n n [] coll)]\n    (conj (vector (first p)) (apply concat (rest p)))))", "user": "567695c2e4b05957ce8c6157"}, {"problem": 49, "code": "(fn [x coll]\n  [(take x coll) (drop x coll)])", "user": "567c2322e4b05957ce8c61af"}, {"problem": 49, "code": "(fn [n xs] (list (take n xs) (drop n xs)))", "user": "567d132ee4b05957ce8c61c3"}, {"problem": 49, "code": "(fn [a b] [(take a b) (drop a b)])", "user": "567e0180e4b05957ce8c61cf"}, {"problem": 49, "code": "(juxt take drop)", "user": "56761ab1e4b05957ce8c6154"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "567cef8ce4b05957ce8c61c1"}, {"problem": 49, "code": "(fn [n s] (list (take n s) (drop n s)))", "user": "567ea95de4b0feffd0d18eb6"}, {"problem": 49, "code": "(fn [count-of-first-interval collection]\n  [(subvec collection 0 count-of-first-interval) \n   (subvec collection count-of-first-interval)])", "user": "54ef7568e4b024c67c0cf885"}, {"problem": 49, "code": "(juxt take drop)\n;(fn[x y] [(take x y) (drop x y)])", "user": "54ce541de4b057c6fda3a2ac"}, {"problem": 49, "code": "(fn [n s] [(take n s) (last (take (inc n) (iterate rest s)))] )", "user": "562add6de4b00e49c7cb4834"}, {"problem": 49, "code": "(fn [index coll]\n  [(subvec coll 0 index) \n   (subvec coll index (count coll))])", "user": "567ea403e4b0feffd0d18eb5"}, {"problem": 49, "code": "#(cons (take %1 %2) (cons (drop %1 %2) '()))", "user": "567931e9e4b05957ce8c6184"}, {"problem": 49, "code": "(fn my-split-at [n coll]\n  (concat [(take n coll)] [(drop n coll)]))", "user": "567c7fefe4b05957ce8c61bc"}, {"problem": 49, "code": "(juxt take drop)", "user": "565fe49ee4b068f2fe63dc46"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "567798afe4b05957ce8c6169"}, {"problem": 49, "code": "#(vector (take %1 %2) (nthrest %2 %1))", "user": "56814cbce4b0945ebc182a81"}, {"problem": 49, "code": "(fn split-at-n\n  [n coll]\n  (vector (take n coll) (drop n coll)))", "user": "566f7749e4b0a866af6896e9"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5680104ae4b0966858e4d8ea"}, {"problem": 49, "code": "(fn [x s] (vector (into [] (take x s)) (into [] (drop x s)) ))", "user": "567d18c9e4b05957ce8c61c4"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "56800ba1e4b0966858e4d8e8"}, {"problem": 49, "code": "(juxt take drop)", "user": "5195fadee4b04c0af7ff3c11"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "56810479e4b0966858e4d8f8"}, {"problem": 49, "code": "(fn [n seq]\n    [(take n seq) (drop n seq)]\n    )", "user": "5681afaae4b0945ebc182a87"}, {"problem": 49, "code": "(juxt take drop)", "user": "56798d83e4b05957ce8c618b"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "568513c4e4b04eec3ec5cfc5"}, {"problem": 49, "code": "(fn [p m]\n  (conj [(take p m)] (drop p m)))", "user": "5683d2a9e4b0945ebc182aa0"}, {"problem": 49, "code": "(fn [n xs] [(take n xs) (drop n xs)])", "user": "5686e652e4b0dcc4269f4059"}, {"problem": 49, "code": "(fn [index seq']\n  (loop [current-index 0\n         [head & tail] seq'\n         [result-first result-second] [[][]]]\n    (if (< current-index index)\n      (recur (inc current-index)\n             tail\n             [(conj result-first head) result-second])\n      [result-first (cons head tail)])))", "user": "567bf820e4b05957ce8c61ad"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "5275f7a2e4b03e8d9a4a74d0"}, {"problem": 49, "code": "(fn [n s]\n  [(take n s) (drop n s)])", "user": "5686640ae4b0dcc4269f4050"}, {"problem": 49, "code": "(fn [index coll]\n  (list\n   (take index coll) \n   (drop index coll)\n   )\n  )", "user": "5680fff3e4b0966858e4d8f6"}, {"problem": 49, "code": "(fn my_split-at ([n s] (my_split-at n s [])) ([n s a] (if (= n 0) [a (apply vector s)] (my_split-at (dec n) (next s) (conj a (first s))))))", "user": "567b39b6e4b05957ce8c61a3"}, {"problem": 49, "code": "(fn [n lst] (list (take n lst) (drop n lst)))", "user": "56897739e4b0dcc4269f407d"}, {"problem": 49, "code": "(fn [n xs] [(take n xs) (drop n xs)])", "user": "4fd5418ee4b0d4de60cee372"}, {"problem": 49, "code": "#(let [col (partition-all %1 %2)]\n  (conj [(first col)] (apply concat (next col))))", "user": "568242bfe4b0945ebc182a8f"}, {"problem": 49, "code": "#(conj (vector (take %1 %2)) (vec (drop %1 %2)))", "user": "56874171e4b0dcc4269f405c"}, {"problem": 49, "code": "(fn [n s]\n  [\n   (subvec s 0 n)\n   (subvec s n)\n   ])", "user": "5689fd03e4b0dcc4269f4088"}, {"problem": 49, "code": "#(conj [] (take %1 %2) (drop %1 %2))", "user": "56795deae4b05957ce8c6187"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "56885c32e4b0dcc4269f4068"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "567c48e6e4b05957ce8c61b8"}, {"problem": 49, "code": "#(conj [(take %1 %2)] (drop %1 %2))", "user": "568a743ee4b0dcc4269f408e"}, {"problem": 49, "code": "(juxt take drop)", "user": "56488119e4b0284900eef632"}, {"problem": 49, "code": "(juxt take drop)", "user": "5687fe58e4b0dcc4269f4065"}, {"problem": 49, "code": "(fn splitX [n x] [(into (empty x) (take n x))(into (empty x) (drop n x))])", "user": "568820e8e4b0dcc4269f4067"}, {"problem": 49, "code": "#(-> [(take % %2) (drop % %2)])", "user": "55664bb5e4b0c656e3ff1833"}, {"problem": 49, "code": "(fn my-split-at [n xs]\n  (list\n   (take n xs)\n   (drop n xs)))", "user": "5688a01be4b0dcc4269f406d"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "55ee7977e4b0121d4835fdee"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "55f85b93e4b03cbcff9738ae"}, {"problem": 49, "code": "(juxt take drop)", "user": "568e450fe4b0dcc4269f40d0"}, {"problem": 49, "code": "(fn [n coll] (vector (into [] (take n coll)) (into [] (drop n coll))))", "user": "567f988be4b0feffd0d18ebe"}, {"problem": 49, "code": "(fn [n nums]\n [(take n nums) (drop n nums)])", "user": "5690bec5e4b0dcc4269f40ec"}, {"problem": 49, "code": "#(conj [] (take %1 %2) (drop %1 %2))", "user": "566812f0e4b04acd4f672de1"}, {"problem": 49, "code": "(juxt take drop)", "user": "568e1871e4b0dcc4269f40cc"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "55bd6734e4b01b9910ae29fd"}, {"problem": 49, "code": "(fn [n c]\n     (list \n       (take n c)\n       (drop n c)))", "user": "51e6a2bce4b0ab43cc26c21d"}, {"problem": 49, "code": "(fn [index coll] (split-with #(<= (.indexOf coll %) (dec index)) coll))", "user": "568c2d96e4b0dcc4269f40af"}, {"problem": 49, "code": "(fn msplit-at\n  [n sqnc]\n  (vector (take n sqnc)\n          (drop n sqnc)))", "user": "566f3e18e4b0a866af6896e7"}, {"problem": 49, "code": "(juxt take drop)", "user": "4ff8487be4b0678c553fc397"}, {"problem": 49, "code": "#(identity [(take %1 %2)(drop %1 %2)])", "user": "5657fed1e4b0f9d632dd84ae"}, {"problem": 49, "code": "(fn split-a-sequence-solution\n  [index arr] ;; update args as needed\n  ;; Write a function which will split a sequence into two parts.\n  [(take index arr) (drop index arr)]\n  )", "user": "536829c8e4b0243289761e8b"}, {"problem": 49, "code": "(fn [n c] [(take n c) (drop n c)])", "user": "4e268c6e535deb9a81d77ef4"}, {"problem": 49, "code": "(fn\n  [i lst]\n  [(take i lst) (drop i lst)]\n  )", "user": "5693383fe4b0dcc4269f4100"}, {"problem": 49, "code": "(fn [n s] (loop [pos 0 out [[]]]\n             (if (= pos (count s))\n               out\n               (let [cur (nth s pos) nextPos (inc pos)]\n                  (if (= pos n)\n                   (recur nextPos (conj out [cur]))\n                   (recur nextPos (vec (conj (vec (butlast out)) (conj (vec (last out)) cur))))\n                  )\n               )\n             )\n            ))", "user": "565233f2e4b0f9d632dd8461"}, {"problem": 49, "code": "#( concat [(take %1 %2)] [(drop %1 %2)])", "user": "5686b7c7e4b0dcc4269f4057"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "568227fee4b0945ebc182a8a"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "53f5c402e4b0db01ade6f9d4"}, {"problem": 49, "code": "(fn [split-index sequence]\n  [(take split-index sequence)\n    (take-last (- (count sequence) split-index) sequence)])", "user": "540ef409e4b0addc1aec6723"}, {"problem": 49, "code": "(fn [num lst]\n  (conj (conj [] (apply vector (take num lst))) (apply vector (drop num lst))))", "user": "5691ef12e4b0dcc4269f40f8"}, {"problem": 49, "code": "(fn [n xs] (list (take n xs) (drop n xs)))", "user": "566669d8e4b0e91d5f5c566f"}, {"problem": 49, "code": "(fn [idx coll] \n  \t(list (take idx coll) (drop idx coll)))", "user": "52e5f810e4b09f7907dd1468"}, {"problem": 49, "code": "#(vec [(take %1 %2) (drop %1 %2)])", "user": "56743413e4b05957ce8c612e"}, {"problem": 49, "code": "(fn split-at-1 [num coll]\n  [(take num coll) (drop num coll)])", "user": "5693a53ee4b0dcc4269f4106"}, {"problem": 49, "code": "(fn spl [i lst] [(take i lst) (nthrest lst i)])", "user": "553900d4e4b09218d5f44fe5"}, {"problem": 49, "code": "(fn split-seq [at coll]\n    [(take at coll) (drop at coll)])", "user": "552bd5c2e4b0ffed3738f969"}, {"problem": 49, "code": "(fn [n xs] \n  (let [ys (take n xs)\n        zs (drop n xs)]\n    [ys zs]))", "user": "56967bc0e4b0dcc4269f4131"}, {"problem": 49, "code": "(fn [pos items] [(take pos items) (drop pos items)]  )", "user": "56979bb7e4b0e0b3d3318cac"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5635adeee4b0bfe05bf117c7"}, {"problem": 49, "code": "#(conj (conj [] (take %1 %2)) (drop %1 %2))", "user": "569c40cee4b0542e1f8d1462"}, {"problem": 49, "code": "(fn [x n] (list (take x n) (drop x n)))", "user": "569c1038e4b0542e1f8d145f"}, {"problem": 49, "code": "#(identity [(subvec %2 0 %1) (subvec %2 %1)])", "user": "569d095fe4b0542e1f8d1470"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "543b4746e4b032a45b86932c"}, {"problem": 49, "code": "(juxt take drop)", "user": "5591cc56e4b0604b3f94d582"}, {"problem": 49, "code": "(fn [n s]\n  [(vec (take n s))\n   (vec (drop n s))])", "user": "51e5a627e4b0efabf93c02db"}, {"problem": 49, "code": "(fn [n s] [(take n s) (drop n s)])", "user": "533a2f7be4b0e30313ee6cb8"}, {"problem": 49, "code": "(fn alt-split [n xs]\n  (let [[fst & rst] (partition-all n xs)]\n    (merge (list (apply concat rst)) fst)))", "user": "569ad037e4b0542e1f8d144f"}, {"problem": 49, "code": "(fn [pos coll]\n   (if (< (count coll) pos)\n     coll\n     (let [left (take pos coll)\n           right (drop pos coll)]\n       (if (or (empty? left) (empty? right))\n         (if (empty? left) right left)\n         (conj [] left right)))))", "user": "5294a49be4b02ebb4ef7500f"}, {"problem": 49, "code": "#(vector (vec (take %1 %2)) (vec (nthrest %2 %1)))", "user": "569aca1ee4b0542e1f8d144d"}, {"problem": 49, "code": "(fn [x myseq]\n  (conj [] (subvec myseq 0 x) (subvec myseq x (count myseq))))", "user": "53d977f1e4b0e771c302547a"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "553aad97e4b09218d5f44ff9"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "5339cb07e4b0e30313ee6caf"}, {"problem": 49, "code": "(fn split-a [n s] (\n                     (fn split-b [nn hh tt] (if (= nn 0) [hh tt] (split-b (dec nn) (conj hh (first tt)) (rest tt))\n                                                ))\n                      n [] s))", "user": "56912f93e4b0dcc4269f40ef"}, {"problem": 49, "code": "#(let [x (partition %1 %1 [] %2)]\n   [(first x) (apply concat (rest x))])", "user": "562d15a6e4b0a45d2ff83019"}, {"problem": 49, "code": "#(vector (vec (take %1 %2)) (vec (drop %1 %2)))", "user": "569f33c7e4b0542e1f8d148f"}, {"problem": 49, "code": "#(list (take %1 %2) (nthrest %2 %1))", "user": "569c07b9e4b0542e1f8d145d"}, {"problem": 49, "code": "#(->[(take % %2) (drop % %2)])", "user": "56824e1be4b0945ebc182a91"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "569ef93de4b0542e1f8d148b"}, {"problem": 49, "code": "(fn [x s] [(take x s) (drop x s)])", "user": "5651654be4b0f9d632dd845a"}, {"problem": 49, "code": "(fn [n xs]\n  [(take n xs) (drop n xs)])", "user": "56946d43e4b0dcc4269f411e"}, {"problem": 49, "code": "(fn [index x]\n     (conj (conj [] (take index x)) (drop index x)))", "user": "56936547e4b0dcc4269f4101"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "51441ce7e4b0b4fb4ace5f41"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "569d2283e4b0542e1f8d1474"}, {"problem": 49, "code": "(fn [n col]\n  (loop [head [] tail col]\n    (if (= n (count head))\n      [head tail]\n      (recur (conj head (first tail)) (rest tail)))))", "user": "56877fcbe4b0dcc4269f405e"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5630ce72e4b0bfe05bf11786"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "525523e3e4b0541d1855b9cc"}, {"problem": 49, "code": "(fn [n x]\n    \n( vector (take n x) (drop n x) )\n    \n    );END: fn", "user": "56a358d0e4b0542e1f8d14c9"}, {"problem": 49, "code": "#(list(take % %2) (drop % %2))", "user": "56066e82e4b08b23635d3173"}, {"problem": 49, "code": "(juxt take drop)", "user": "553b0d95e4b09218d5f44fff"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "563f24f9e4b08d4f616f5ed0"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "56992162e4b0542e1f8d143c"}, {"problem": 49, "code": "#(conj [(take %1 %2)] (drop %1 %2))", "user": "56175cf9e4b06b1bb2182a0f"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "56903cb9e4b0dcc4269f40eb"}, {"problem": 49, "code": "(fn [n s] (vector (take n s) (drop n s)))", "user": "54185dc3e4b01498b1a71a19"}, {"problem": 49, "code": "(fn foo [n coll]\n  (conj [] (take n coll) (drop n coll)))", "user": "56a51f26e4b0542e1f8d14e0"}, {"problem": 49, "code": "#(loop [a []\n        b %2\n        p %1]\n   (if (= 0 p)\n     [a, b]\n     (recur (conj a, (first b)) (rest b) (dec p))))", "user": "56a38a4ce4b0542e1f8d14cc"}, {"problem": 49, "code": "(fn  \n  [x y]\n  [(take x y ) (drop x y)] \n\n  )", "user": "5650ac8be4b0284900eef6c2"}, {"problem": 49, "code": "#(cons (take %1 %2) (vector (drop %1 %2)))", "user": "51a7bf26e4b0da5f497bde8c"}, {"problem": 49, "code": "(fn [n s] [(take n s) (take-last (- (count s) n) s)])", "user": "569adec2e4b0542e1f8d1450"}, {"problem": 49, "code": "#(list (take %1 %2)(drop %1 %2))", "user": "56a1b854e4b0542e1f8d14b2"}, {"problem": 49, "code": "(fn [n coll]\n  (cons (take n coll) (list (drop n coll))))", "user": "56a79eb0e4b07966d5a8a05d"}, {"problem": 49, "code": "#(vector (seq (take %1 %2)) (subvec %2 %1))", "user": "5638d2d1e4b0bfe05bf117eb"}, {"problem": 49, "code": "(fn [n lst] [(vec (take n lst))(vec (take-last (- (count lst) n) lst))])", "user": "56791447e4b05957ce8c6183"}, {"problem": 49, "code": "(fn pia [n lst]\n  (vector\n    (vec (take n lst))\n    (vec (drop n lst))\n    )\n  )", "user": "569ce6fee4b0542e1f8d146c"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "55d1ec3ee4b0e31453f64a4c"}, {"problem": 49, "code": "(fn [idx coll] ((juxt take drop) idx coll))", "user": "56481722e4b0284900eef628"}, {"problem": 49, "code": "#(let [a (partition-all %1 %2)] (list (first a) (apply concat (rest a))))", "user": "56a75810e4b0542e1f8d14fc"}, {"problem": 49, "code": "(fn [n sq]\n  (loop [n n\n         [f & r]sq\n         res []]\n    (if (zero? n)\n      [res  (into (vector f) r)] \n      (recur (dec n) r (conj res f)))))", "user": "56646a7fe4b0e91d5f5c5657"}, {"problem": 49, "code": "(fn [n d] [ (take n d )  (drop n d) ])", "user": "55f9b2b6e4b03cbcff9738c8"}, {"problem": 49, "code": "(fn split [n col]\n  [(take n col) (drop n col)])", "user": "569ab3e2e4b0542e1f8d144a"}, {"problem": 49, "code": "(fn\n  [n coll]\n  [(take n coll)\n   (drop n coll)])", "user": "51b01309e4b0c53cf2e68a57"}, {"problem": 49, "code": "(juxt take drop)", "user": "56ac81ace4b03c432f187347"}, {"problem": 49, "code": "(fn [x y] (conj [] (take x y) (take-last (- (count y) x) y) ))", "user": "567f034be4b0feffd0d18eba"}, {"problem": 49, "code": "#(conj (vector (take %1 %2)) (nthrest %2 %1))", "user": "569951e4e4b0542e1f8d143e"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "56a6051fe4b0542e1f8d14e5"}, {"problem": 49, "code": "(fn [n s]\n  (vector (take n s) (drop n s)))", "user": "54c779bee4b045293a27f63b"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "5006c169e4b0678c553fc48d"}, {"problem": 49, "code": "(fn [p col](partition-by #(> p (.indexOf col %)) col))", "user": "5515b68de4b055c2f668d4ef"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5629de63e4b00e49c7cb4812"}, {"problem": 49, "code": "(fn [n s]\n  (let [v (vec s)]\n    [(take n v) (nthrest v n)]))", "user": "565f8fd2e4b068f2fe63dc41"}, {"problem": 49, "code": "(fn [numb coll]\n  [(subvec coll 0 numb)\n   (subvec coll numb)])", "user": "5297dcc5e4b02ebb4ef75047"}, {"problem": 49, "code": "(fn [n coll]\n  (list \n     (take n coll) \n     (take-last (- (count coll) n) coll)))", "user": "5167e8ace4b0c5a4140a309a"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "56a76f36e4b07966d5a8a05b"}, {"problem": 49, "code": "#(conj [] (take %1 %2) (drop %1 %2))", "user": "56b35565e4b0982f16b37e16"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "56b3146ae4b0982f16b37e0f"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5617a540e4b06b1bb2182a12"}, {"problem": 49, "code": "(fn [n a-seq] [(take n a-seq) (drop n a-seq)])", "user": "4fda8f57e4b05e33b9224f4e"}, {"problem": 49, "code": "(fn [n s]\n  [(take n s) (drop n s)])", "user": "5638b88de4b0bfe05bf117e9"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "503e46cee4b06c4e0e1fa264"}, {"problem": 49, "code": "(fn myf [x y] (list (take x y) (drop x y)))", "user": "56b280e3e4b0982f16b37e06"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))\n\n; (juxt take drop)", "user": "56b295f7e4b0982f16b37e08"}, {"problem": 49, "code": "(fn [n col]\n           (list (take n col) (nthrest col n)))", "user": "56b1ab17e4b0982f16b37df1"}, {"problem": 49, "code": "(fn [i sq] [(take i sq) (drop i sq)])", "user": "550b1c2ce4b06e50f9beb13b"}, {"problem": 49, "code": "(fn [n vec1]\n  (loop [nn n hd [] tl vec1]\n        (if (= 0 nn)\n          [hd (vec  tl)]\n          (recur (- nn 1) (conj hd (first tl)) (rest tl)))))", "user": "56a1fce9e4b0542e1f8d14b7"}, {"problem": 49, "code": "(fn\n  [n coll]\n  (conj [] (take n coll) (take-last (- (count coll) n)  coll)))", "user": "55e206f3e4b050e68259b429"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "55ed5a2de4b0121d4835fdd8"}, {"problem": 49, "code": "(fn [n xs] (list (take n xs) (drop n xs)))", "user": "56b86e64e4b0f26550335924"}, {"problem": 49, "code": "(fn split-at-i\n  [i a-list]\n  (conj [] (take i a-list) (drop i a-list)))", "user": "56b18445e4b0982f16b37dee"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "56ae214ce4b03c432f18735a"}, {"problem": 49, "code": "(fn split [n xs]\n  [(take n xs) (drop n xs)])", "user": "563cdfdfe4b0bfe05bf11840"}, {"problem": 49, "code": "(fn [x coll] [(take x coll) (drop x coll)])", "user": "568c92c6e4b0dcc4269f40b8"}, {"problem": 49, "code": "(fn [nr coll]\n  (loop [it-left nr\n         [x & xs :as my-all] coll\n         acc []]\n    (if (<= it-left 0)\n      [acc my-all]\n      (recur (dec it-left) xs (conj acc x)))))", "user": "5655e056e4b0f9d632dd849b"}, {"problem": 49, "code": "#(vector (apply vector (take %1 %2)) (apply vector (nthrest %2 %1)))", "user": "56bb9ccce4b0f26550335959"}, {"problem": 49, "code": "(fn [n coll]  [(take n coll) (drop n coll)])", "user": "56a01895e4b0542e1f8d149f"}, {"problem": 49, "code": "(fn abc\n  [n L]\n  (vector\n    (apply vector (take n L))\n    (apply vector (drop n L))\n  )\n)", "user": "56bb3a4be4b0f26550335951"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "56baab13e4b0f26550335948"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "55c0f842e4b01b9910ae2a2b"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "531a0709e4b08068f379ed87"}, {"problem": 49, "code": "#(map (partial map (fn [[_ v]] v))\n      (partition-by (fn [[i _]] (> i %1))\n                    (map vector (iterate inc 1) %2)))", "user": "56baa68ce4b0f26550335947"}, {"problem": 49, "code": "(fn [n xs] \n  [(take n xs) (drop n xs)])", "user": "56bca51ae4b0f26550335963"}, {"problem": 49, "code": "(fn split [n xs]\n  [(take n xs) (drop n xs)])", "user": "56ba1406e4b0f2655033593c"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "563536f8e4b0bfe05bf117c5"}, {"problem": 49, "code": "(fn [i xs]\n  [(take i xs) (drop i xs)])", "user": "5512cd55e4b055c2f668d4ba"}, {"problem": 49, "code": "(fn [x coll] [(take x coll) (drop x coll)])", "user": "56012cd7e4b04bb52996e17d"}, {"problem": 49, "code": "(juxt take drop)", "user": "56826ebce4b0945ebc182a93"}, {"problem": 49, "code": "(fn split-on\n  [n coll]\n  [(take n coll) (drop n coll)])", "user": "5609d328e4b05f002753deee"}, {"problem": 49, "code": "(fn [n xs]\n  [(take n xs) (drop n xs)])", "user": "56bfcba1e4b060a8e693e3a1"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "56a36f76e4b0542e1f8d14ca"}, {"problem": 49, "code": "(fn [offset coll]\n  [(take offset coll)\n   (drop offset coll)])", "user": "56c33ceae4b05cc29241ee89"}, {"problem": 49, "code": "(fn [n coll] (list (take n coll) (drop n coll)))", "user": "56c4f971e4b05cc29241ee9d"}, {"problem": 49, "code": "(fn  [n coll]\n                (loop [num 0 result [] seq coll]\n                  (if (= num n)\n                    (vector result seq)\n                    (recur (inc num) (conj result (nth coll num)) (rest seq)))))", "user": "56499a5de4b0284900eef644"}, {"problem": 49, "code": "(fn [pos xs] \n  [(take pos xs)(drop pos xs)])", "user": "53161a56e4b08068f379ed3e"}, {"problem": 49, "code": "(fn [n x] [(take n x) (drop n x)])", "user": "4e70eae1535d5021c1a89642"}, {"problem": 49, "code": "(juxt take drop) ;awesome\n\n;#(list (take %1 %2) (drop %1 %2))\n\n;#(list (subvec %2 0 %1) (subvec %2 %1 (count %2)))", "user": "567e418fe4b0feffd0d18eb1"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "56b2573ce4b0982f16b37e02"}, {"problem": 49, "code": "(fn [n s] [(take n s) (drop n s)])", "user": "56c08696e4b060a8e693e3aa"}, {"problem": 49, "code": "(fn [n col]\n  [(take n col) (drop n col)])", "user": "56a37ccee4b0542e1f8d14cb"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "56aed78fe4b03c432f187363"}, {"problem": 49, "code": "(fn [x c] \n  [(take x c) (drop x c)])", "user": "569f4dabe4b0542e1f8d1491"}, {"problem": 49, "code": "(juxt take drop)", "user": "53483a32e4b084c2834f4a57"}, {"problem": 49, "code": "(fn [n l] [(take n l) (drop n l)])", "user": "566470b9e4b0e91d5f5c5658"}, {"problem": 49, "code": "#(vector (vec (take % %2))(vec (drop % %2)))", "user": "56cba075e4b0ea9b8538f737"}, {"problem": 49, "code": "(fn [n l]  [(vec (take n l)) (vec (drop n l))])", "user": "56cb483ee4b0ea9b8538f72d"}, {"problem": 49, "code": "(fn [c coll]\n  (loop [h []\n         t coll]\n    (if (= (count h) c)\n      (list h t)\n      (recur (conj h (first t)) (rest t))\n      )\n    )\n  )", "user": "54a80855e4b09f271ff37c9e"}, {"problem": 49, "code": "(fn [index coll] [(take index coll) (drop index coll)])", "user": "56cddf9de4b0ea9b8538f753"}, {"problem": 49, "code": "(fn [x coil]\n  (if (< x 1)\n    nil\n    (loop [src coil, head []]\n      (if (= (count head) x)\n        (vector head (vec src))\n        (recur (rest src)\n               (conj head (first src)))))))", "user": "56c55fbce4b05cc29241eea5"}, {"problem": 49, "code": "(fn [n s]\n  [(take n s) (drop n s)])", "user": "5549ff9ae4b0a04f7929956e"}, {"problem": 49, "code": "(fn split-coll-at [num coll]\n  (list (take num coll) (drop num coll)))", "user": "56bf4ac0e4b0f26550335985"}, {"problem": 49, "code": "(fn [s c]\n  (conj (conj [] (take s c)) (drop s c)))", "user": "56c60b36e4b05cc29241eead"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "56d1afd9e4b0ea9b8538f791"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)]\n)", "user": "506af7d8e4b0a2a5463de37d"}, {"problem": 49, "code": "#((juxt (partial take %1) (partial drop %1)) %2)", "user": "4f5599dfe4b0a7574ea71806"}, {"problem": 49, "code": "(fn [splat-at coll]\n  [(take splat-at coll) (drop splat-at coll)])", "user": "56cb3acfe4b0ea9b8538f727"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "56d228f3e4b0ea9b8538f79a"}, {"problem": 49, "code": "(fn dogs\n  [x s]\n  ((fn cat\n    [x acc s]\n    (if \n      (> x 0) \n      (cat (dec x) (conj acc (first s)) (rest s)) \n      [acc (vec s)]\n     )\n    ) x [] s)\n )", "user": "56cdda13e4b0ea9b8538f752"}, {"problem": 49, "code": "(fn [n c] (vector (take n c) (drop n c)))", "user": "56cb3a61e4b0ea9b8538f726"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "54be7e93e4b0ed20f4ff6eed"}, {"problem": 49, "code": "(fn splt\n  ([i ls] (splt i [] ls))\n  ([i xs ls]\n   (if (= i 0)\n     [xs ls]\n     (splt (dec i)\n           (concat xs [(first ls)])\n           (rest ls)))))", "user": "55f73078e4b06e875b46cea4"}, {"problem": 49, "code": "(fn [x y] [(take x y) (nthrest y x)])", "user": "56491d05e4b0284900eef63a"}, {"problem": 49, "code": "#(vector \n       (vec (take %1 %2)) \n       (vec (drop %1 %2)))", "user": "56d05ba2e4b0ea9b8538f77d"}, {"problem": 49, "code": "(fn[a b] [(take a b) (drop a b)])", "user": "56d63729e4b0ea9b8538f7ca"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "52fe31d5e4b047fd55837038"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "56d69d28e4b0ea9b8538f7cf"}, {"problem": 49, "code": "(fn [s v] (let [n (count v) p (- n s)] (cons (take s v) (list (take-last p v)))))", "user": "56d5fd24e4b0ea9b8538f7c5"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "56d68cbae4b0ea9b8538f7cd"}, {"problem": 49, "code": "(juxt take drop)", "user": "56c70cc2e4b0ed865f9758b5"}, {"problem": 49, "code": "(juxt take drop)", "user": "56d80542e4b0ea9b8538f7e1"}, {"problem": 49, "code": "(fn [n s]\n  (list (take n s) (drop n s)))", "user": "56d4b22de4b0ea9b8538f7bb"}, {"problem": 49, "code": "#(last (take (inc %1) (iterate (fn [[f l]]\n                                 (vector (conj f (first l)) (vec (rest l))))\n                            [[] %2])))", "user": "5286a2a9e4b0239c8a67ae1e"}, {"problem": 49, "code": "(fn split [n xs]\n  (let [splithelp (fn splithelp [n xs ys]\n  \t(cond\n   \t\t(= n 0) (conj (conj [] ys) xs)\n\t\t:else (splithelp (dec n) (drop 1 xs) (conj ys (first xs)))\n     ))]\n     (splithelp n xs [])\n  )\n)", "user": "56433d34e4b08d4f616f5f23"}, {"problem": 49, "code": "(juxt take drop)", "user": "54b8dfece4b0ed20f4ff6e9a"}, {"problem": 49, "code": "(fn [at xs] [(take at xs) (drop at xs)])", "user": "56dc3bdfe4b0ea9b8538f819"}, {"problem": 49, "code": "(fn [x y] [(vec(take x y))(vec(drop x y))])", "user": "55e01f4ee4b050e68259b406"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "56c792ace4b0ed865f9758c4"}, {"problem": 49, "code": "(fn [n coll] [(vec (take n coll)) (vec (drop n coll))])", "user": "54ba8206e4b0ed20f4ff6eb6"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "56603e5fe4b068f2fe63dc4a"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "569f99cce4b0542e1f8d1497"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "569637d8e4b0dcc4269f4130"}, {"problem": 49, "code": "(juxt take drop)", "user": "550b502ae4b06e50f9beb13f"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "56df9203e4b0ca2494a095fc"}, {"problem": 49, "code": "(fn split-after \n  [n col]\n  (let [\n        first-part \n        (take n col)\n        last-part\n        (drop n col)]\n    [first-part last-part]\n    )\n  )", "user": "56d74c88e4b0ea9b8538f7d9"}, {"problem": 49, "code": "(fn [n s] [(take n s) (drop n s)])", "user": "563cce5be4b0bfe05bf1183f"}, {"problem": 49, "code": "(fn my-split-at [n coll]\n  (list (take n coll)\n        (drop n coll)))", "user": "557e56aae4b05c286339e0d5"}, {"problem": 49, "code": "(fn [n l] (loop [as '() bs l i n]\n            (if (= i 0)\n              [(reverse as) bs]\n              (recur\n               (cons (first bs) as)\n               (rest bs)\n               (dec i)))))", "user": "55009d17e4b07d26eda61d5d"}, {"problem": 49, "code": "(fn [n coll]\n  (conj [] (vec (take n coll)) (vec (drop n coll)))\n  )", "user": "55f33f0ce4b06e875b46ce59"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "56e2dbf4e4b03a7c14b85a3b"}, {"problem": 49, "code": "(juxt take drop)", "user": "56e227a8e4b03a7c14b85a31"}, {"problem": 49, "code": "#( conj [] (take %1 %2) (drop %1 %2))", "user": "56b6a50ae4b0982f16b37e3c"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "56c3aca0e4b05cc29241ee90"}, {"problem": 49, "code": "(fn [x y] [(take x y) (drop x y)])", "user": "542a8d07e4b01498b1a71b43"}, {"problem": 49, "code": "(fn [n l]\n  (list (take n l) (drop n l)))", "user": "56050f06e4b08b23635d3161"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "56df254be4b0ca2494a095ea"}, {"problem": 49, "code": "(fn [split-index elements]\n  [(take split-index elements)\n   (take-last (- (count elements) split-index) elements)])", "user": "56e48302e4b03a7c14b85a4e"}, {"problem": 49, "code": "#(into [] [(subvec %2 0 %1) (subvec %2 %1) ])", "user": "527bd988e4b03e8d9a4a759d"}, {"problem": 49, "code": "(fn [n ls]\n  (list (take n ls) (drop n ls)))", "user": "56d7f340e4b0ea9b8538f7df"}, {"problem": 49, "code": "(fn [n col]\n  [(take n col) (drop n col)])", "user": "56c427bbe4b05cc29241ee94"}, {"problem": 49, "code": "(fn [at clxn]\n  (let [parts (partition-all at clxn)]\n   [(vec (first parts)) (vec (reduce concat (vec (rest parts))))]))", "user": "56e4a6c1e4b03a7c14b85a51"}, {"problem": 49, "code": "(fn \n  [n xs]\n  (let [indexed (split-with #(> n (first %)) (map-indexed vector xs))]\n    (map #(map second %1) indexed)\n    )\n  )", "user": "560d4994e4b05f002753df3c"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "56e6ef89e4b02e7e935eb6d0"}, {"problem": 49, "code": "#(vector (vec (take %1 %2)) (vec (drop %1 %2)))", "user": "55b6a63ae4b01b9910ae299b"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "52d38c51e4b099d49816f0c5"}, {"problem": 49, "code": "(juxt take drop)", "user": "56c4f43ce4b05cc29241ee9c"}, {"problem": 49, "code": "(fn [n xs] (conj [] (take n xs) (drop n xs)))", "user": "56d4b1aee4b0ea9b8538f7ba"}, {"problem": 49, "code": "(fn [n coll]\n  (vector (take n coll) (drop n coll))\n  )", "user": "56eb16d8e4b04a395b9a041d"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "56ca0da9e4b0ea9b8538f715"}, {"problem": 49, "code": "(fn [len xs]\n  [(take len xs) (drop len xs)])", "user": "56cc34aee4b0ea9b8538f73c"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "56eaad95e4b04a395b9a040f"}, {"problem": 49, "code": "#(loop [p %1 xs %2 acc []]\n   (if (zero? p)\n     [acc xs]\n     (recur (dec p) (rest xs) (conj acc (first xs)))))", "user": "56e02c1ce4b0ca2494a09602"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "56e06625e4b0ca2494a09607"}, {"problem": 49, "code": "#(doall [(take % %2) (drop % %2)])", "user": "560ee566e4b05f002753df57"}, {"problem": 49, "code": "#(let [[f & col] (partition-all %1 %2)] [f (apply concat col)])", "user": "56ecc4b5e4b04a395b9a043e"}, {"problem": 49, "code": "(fn splitter [n col] [(take n col) (take-last (- (count col) n) col)])", "user": "569dd6e8e4b0542e1f8d1480"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "56db90d4e4b0ea9b8538f80d"}, {"problem": 49, "code": "#(mapv vec [(take %1 %2) (drop %1 %2)])", "user": "56ebe773e4b04a395b9a042a"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "56dc483fe4b0ea9b8538f81b"}, {"problem": 49, "code": "(fn split-a-sequence [n xs]\n  ((juxt take drop) n xs))", "user": "518b8561e4b0f028e99addef"}, {"problem": 49, "code": "(fn [pos coll] [(take pos coll) (drop pos coll)])", "user": "56e6d049e4b02e7e935eb6cd"}, {"problem": 49, "code": "(fn f [n vs]\n            (loop [n n, hd [], tl (seq vs)]\n              (if (zero? n)\n                [hd tl]\n                (recur (dec n)\n                       (conj hd (first tl))\n                       (rest tl)))))", "user": "53684a2fe4b0243289761e8c"}, {"problem": 49, "code": "(fn splt\n  [n coll]\n  [(take n coll) (drop n coll)])", "user": "56e99ec8e4b04a395b9a03fb"}, {"problem": 49, "code": "(fn [at coll]\n  [(take at coll) (drop at coll)])", "user": "562268dce4b03f08ee9a9224"}, {"problem": 49, "code": "#(list (take %1 %2) (nthrest %2 %1))", "user": "56f258d3e4b04a395b9a04a1"}, {"problem": 49, "code": "(fn[n coll]\n  (list (take n coll) (drop n coll)))", "user": "55101237e4b06e50f9beb181"}, {"problem": 49, "code": "(fn [n coll] (concat (vector (take n coll)) (vector (drop n coll)) ))", "user": "56f188e9e4b04a395b9a0494"}, {"problem": 49, "code": "(fn [point coll]\n    (list (take point coll) (drop point coll))\n    )", "user": "56ef11efe4b04a395b9a045b"}, {"problem": 49, "code": "(fn my-split [splitidx coll]\n  (concat (vector (take splitidx coll))  (vector (drop splitidx coll)) ))", "user": "56e53d2fe4b02e7e935eb6bc"}, {"problem": 49, "code": "#(vector (subvec %2 0 %1) (subvec %2 %1))", "user": "52c35afce4b07a9af579238c"}, {"problem": 49, "code": "#(concat [(take %1 %2)] [(drop  %1 %2)])", "user": "56be8649e4b0f26550335983"}, {"problem": 49, "code": "#(identity [(take %1 %2) (drop %1 %2)])", "user": "56d6c18ee4b0ea9b8538f7d1"}, {"problem": 49, "code": "(fn [x y]\n  (loop [c 0 p () a y]\n    (if (= c x)\n      (reverse (conj (conj () (reverse p)) a))\n      (recur\n       (inc c)\n       (conj p (first a))\n       (rest a)\n       )\n      )\n    )\n  )", "user": "56d325ace4b0ea9b8538f7a9"}, {"problem": 49, "code": "#(vector \n       (vec (take %1 %2)) \n       (vec (drop %1 %2)))", "user": "5662ca50e4b0e91d5f5c564c"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "56f53962e4b046a417f9206c"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "56d1978fe4b0ea9b8538f790"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5602bdf9e4b04bb52996e1a7"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "56dc3dbbe4b0ea9b8538f81a"}, {"problem": 49, "code": "#(list (take %1 %2) (take-last (- (count %2) %1) %2))", "user": "56f15eade4b04a395b9a048e"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "56c749d8e4b0ed865f9758ba"}, {"problem": 49, "code": "#(conj '() (drop %1 %2) (take %1 %2))", "user": "56d15251e4b0ea9b8538f78c"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "54e7425ee4b024c67c0cf810"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "56f7ecdfe4b08e7d20b96834"}, {"problem": 49, "code": "(fn [index lst]\n  (list (take index lst) (drop index lst)))", "user": "56f94ff7e4b07572ad1a88ae"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "56f9392ae4b07572ad1a88ac"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "56ea8d33e4b04a395b9a040a"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "56fa3f7ae4b07572ad1a88bf"}, {"problem": 49, "code": "(fn [n c] [(take n c) (drop n c)])", "user": "561e8b11e4b064ca9f4b16c0"}, {"problem": 49, "code": "(fn a [n lst]\n  (cons (take n lst) (vector (drop n lst))))", "user": "56fc1bc7e4b07572ad1a88dd"}, {"problem": 49, "code": "(fn [split s]\n  [(take split s) (drop split s)]\n  )", "user": "56fbe0cce4b07572ad1a88d8"}, {"problem": 49, "code": "#(conj [(take % %2)] (drop % %2))", "user": "56f9890be4b07572ad1a88b5"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "56fdd9a1e4b08d47c97781a8"}, {"problem": 49, "code": "(fn [n coll]\n   [(take n coll) (drop n coll)])", "user": "56d3bc2de4b0ea9b8538f7b0"}, {"problem": 49, "code": "(fn p\n  [n s]\n  [(take n s) (drop n s)])", "user": "56df632ce4b0ca2494a095f2"}, {"problem": 49, "code": "(fn [n xs] (let [ys (partition-all n xs)] (cons (first ys) (list (apply concat (rest ys))))))", "user": "56fde58ae4b08d47c97781aa"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5700f1f0e4b08d47c97781ce"}, {"problem": 49, "code": "(fn [n xs]\n  [(take n xs) (drop n xs)])", "user": "57006957e4b08d47c97781c8"}, {"problem": 49, "code": "(fn [x y] [(take x y) (drop x y)])", "user": "56f4623ae4b046a417f9205d"}, {"problem": 49, "code": "(fn [n test]\n  (concat (partition-all n (count test) test) (list (drop n test))))", "user": "5700ec08e4b08d47c97781cd"}, {"problem": 49, "code": "(fn [n elmts]\n  [(take n elmts) (drop n elmts)])", "user": "52c1cc8be4b07a9af579236b"}, {"problem": 49, "code": "(fn [n coll]\n  (vector (take n coll) (drop n coll)))", "user": "56f4cedce4b046a417f92063"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "54a6645be4b09f271ff37c87"}, {"problem": 49, "code": "(fn split-sequence [n xs]\n  (vec (map vec [(take n xs) (drop n xs)])))", "user": "56efc9fde4b04a395b9a0464"}, {"problem": 49, "code": "(fn [n coll] (list (take n coll) (drop n coll)))", "user": "56fbf83de4b07572ad1a88da"}, {"problem": 49, "code": "(fn [i s]\n  [(take i s) (drop i s)])", "user": "57008afae4b08d47c97781ca"}, {"problem": 49, "code": "(fn [n s] (list (take n s) (drop n s)))", "user": "570459a9e4b0b0fb43fd0662"}, {"problem": 49, "code": "(fn\n  [split-pos lst]\n  (loop [pos split-pos \n         [elem & rem] lst \n         left [] \n         right [] \n         index 0]\n   (if (nil? elem)\n     (conj [] right left)\n     (if (> pos index)\n       (recur pos rem left (conj right elem) (+ index 1))\n       (recur pos rem (conj left elem) right (+ index 1))       \n       )))\n  )", "user": "56f8055ee4b08e7d20b96835"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5292feb4e4b0239c8a67af39"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "57035ccfe4b08d47c97781ef"}, {"problem": 49, "code": "(fn [i cl]\n  (list (take i cl)(drop i cl)))", "user": "56f85849e4b08e7d20b96836"}, {"problem": 49, "code": "(fn my-split\n  [n sq]\n  (vector (into [] (take n sq)) \n          (into [] (drop n sq))))", "user": "57023fc2e4b08d47c97781db"}, {"problem": 49, "code": "(fn [i coll]  (conj  (vector (take i coll) ) (drop i coll)))", "user": "56ede653e4b04a395b9a0449"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5576d3c7e4b05c286339e074"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5703cd50e4b08d47c97781fc"}, {"problem": 49, "code": "(fn [n s]\n  (concat [(take n s)] [(drop n s)]))", "user": "55ad2d97e4b03311e7b732a2"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "57090dffe4b0b0fb43fd06a6"}, {"problem": 49, "code": "(fn [x y] (vector (take x y) (drop x y)))", "user": "567e6d24e4b0feffd0d18eb4"}, {"problem": 49, "code": "#(conj [] (take % %2) (drop % %2))", "user": "5707abfce4b0b0fb43fd068d"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "549eb44fe4b0f3d1d8e70fa6"}, {"problem": 49, "code": "#(list (take %1 %2) (nthrest %2 %1))", "user": "542fa0dde4b0dad94371f2d2"}, {"problem": 49, "code": "(fn [n col]\n  [(take n col) (drop n col)])", "user": "56c7d8dee4b0ed865f9758c9"}, {"problem": 49, "code": "(fn split [n coll]\n  (vector (vec (take n coll)) (vec (drop n coll))))", "user": "5703d21ae4b08d47c97781ff"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "57027310e4b08d47c97781e2"}, {"problem": 49, "code": "(fn my-split [index seq]\n  (concat\n   (list (take index seq))\n   (list (drop index seq))))", "user": "56fbcc1fe4b07572ad1a88d5"}, {"problem": 49, "code": "(fn [p s] \n  (vector (take p s) (drop p s)))", "user": "5707b96fe4b0b0fb43fd0690"}, {"problem": 49, "code": "(fn split [n s]\n  (into [] (vector (apply vector (take n s)) (apply vector (drop n s))) ))", "user": "5703ce0fe4b08d47c97781fd"}, {"problem": 49, "code": "(fn [x y]\n  (let [result []]\n    (conj result (subvec y 0 x) (subvec y x))))", "user": "570306cae4b08d47c97781ec"}, {"problem": 49, "code": "(juxt take drop)", "user": "5708b96ce4b0b0fb43fd06a3"}, {"problem": 49, "code": "#(into (into [] (vector (take %1 %2))) (vector (drop %1 %2)))", "user": "56ab7578e4b03c432f18733d"}, {"problem": 49, "code": "(fn [s col]\n  [(into [] (take s col)) (into [] (drop s col))])", "user": "55ba70f9e4b01b9910ae29d4"}, {"problem": 49, "code": "(fn [n s]\n  (cons\n   \t(take n s)\n   \t(list (drop n s))))", "user": "56fc0601e4b07572ad1a88db"}, {"problem": 49, "code": "(fn\n  [split-size aseq]\n  (let [acc (vector (into [] (take split-size aseq)))]\n    (into acc (vector (vec (drop split-size aseq))))))", "user": "56cb4d06e4b0ea9b8538f72e"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "57126104e4b09c608db70458"}, {"problem": 49, "code": "#(vector (drop-last (- (count %2) %1) %2 ) (drop %1 %2) )", "user": "56f18d0ce4b04a395b9a0496"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "57042a94e4b0b0fb43fd0660"}, {"problem": 49, "code": "#(conj [] (vec (take % %2)) (vec (drop % %2)))", "user": "536d24ece4b0fc7073fd6e54"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5712854ce4b07c98581c3a89"}, {"problem": 49, "code": "#(conj [] (take %1 %2) (drop %1 %2))", "user": "5711b532e4b09c608db70449"}, {"problem": 49, "code": "(fn [x y] [(take x y) (drop x y)])", "user": "57011eb3e4b08d47c97781d1"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "56b506d5e4b0982f16b37e2d"}, {"problem": 49, "code": "(fn [a b]\n\t[(into [] (take a b))(into [] (drop a b))]\n)", "user": "5710e574e4b09c608db7043b"}, {"problem": 49, "code": "(fn [n s] (list (take n s) (drop n s)))", "user": "57002b81e4b08d47c97781c7"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "57168db0e4b07c98581c3afc"}, {"problem": 49, "code": "(fn [n coll]\n    [(take n coll) (drop n coll)])", "user": "5710b136e4b09c608db70437"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "56fa2905e4b07572ad1a88be"}, {"problem": 49, "code": "#(vector (take %1 %2)\n          (drop %1 %2))", "user": "57169f93e4b07c98581c3b00"}, {"problem": 49, "code": "(fn q49 [n col]\n (conj [] (take n col) (drop n col))\n)", "user": "54f5aa4ce4b0f2f3c5226e94"}, {"problem": 49, "code": "(fn [p s]\n  (list (take p s) (drop p s)))", "user": "5713c575e4b07c98581c3aab"}, {"problem": 49, "code": "#(concat (vector (take %1 %2)) (vector (drop %1 %2)))", "user": "56cad309e4b0ea9b8538f720"}, {"problem": 49, "code": "#(identity [(take %1 %2) (drop %1 %2)])", "user": "57015a1de4b08d47c97781d4"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5717e367e4b07c98581c3b1d"}, {"problem": 49, "code": "(fn [i s] \n  (loop [k i \n         r (vec s) \n         out []]\n    (if (<= k 0)\n      [out r]\n      (recur (dec k)\n             (vec (rest r))\n             (conj out (first r))))))", "user": "56f51879e4b046a417f92069"}, {"problem": 49, "code": "(fn [n coll]\n  (list (take n coll) (drop n coll)))", "user": "571c2babe4b07c98581c3b73"}, {"problem": 49, "code": "(fn split [index coll]\n  [(take index coll) (drop index coll)])", "user": "56edf2dde4b04a395b9a044b"}, {"problem": 49, "code": "#(list (take %1 %2) (subvec %2 %1))", "user": "57155980e4b07c98581c3ad7"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "571e6d73e4b0145328a76292"}, {"problem": 49, "code": "(fn [a b] [(take a b) (drop a b)])", "user": "56efb3a3e4b04a395b9a0463"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "571dd145e4b0145328a76283"}, {"problem": 49, "code": "(fn [i x]\n  (loop [cur i\n         res []\n         tl x]\n    (if (> cur 0)\n      (recur (dec cur) (conj res (first tl)) (rest tl))\n      (conj [] res tl))                                                                                                                            \n    )\n  )", "user": "571b900ae4b07c98581c3b69"}, {"problem": 49, "code": "(fn [i x]\n  (loop [cur i\n         res []\n         tl x]\n    (if (> cur 0)\n      (recur (dec cur) (conj res (first tl)) (rest tl))\n      (conj [] res tl))                                                                                                                            \n    )\n  )", "user": "5717d674e4b07c98581c3b1a"}, {"problem": 49, "code": "(fn [where coll] [(take where coll) (drop where coll)])", "user": "571cd9dce4b0145328a76271"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "571aad45e4b07c98581c3b59"}, {"problem": 49, "code": "(fn\n  [n vectr]\n  (let [fst (vector (vec (first (partition-all n vectr))))]\n      (conj  fst (vec (drop n vectr)))))", "user": "56df6417e4b0ca2494a095f7"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "56df63e1e4b0ca2494a095f6"}, {"problem": 49, "code": "(fn f [n l]\n  (cons (take n l) (list (drop n l)))\n  \n  )", "user": "56df6351e4b0ca2494a095f3"}, {"problem": 49, "code": "(fn\n  [n lst]\n  [(take n lst) (drop n lst)])", "user": "56df6498e4b0ca2494a095f8"}, {"problem": 49, "code": "#(vector \n       (vec (take %1 %2)) \n       (vec (drop %1 %2)))", "user": "56df63c7e4b0ca2494a095f5"}, {"problem": 49, "code": "(fn [n col]\n  [(take n col) (drop n col)])", "user": "571e5c9ee4b0145328a76290"}, {"problem": 49, "code": "#(conj [] (take %1 %2) (drop %1 %2))\n;; (fn [n coll]\n;;    (loop [[head & tail] coll\n;;           index 0\n;;           result []]\n;;      (if head\n;;        (recur tail (+ index 1) (cond (< index n) (conj result head)\n;;                                      (= index n) (conj [result] [head])\n;;                                      (> index n) (conj (vec (butlast result)) (conj (last result) head))))\n;;        result)))", "user": "553e3260e4b0a04f792994eb"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "56df629fe4b0ca2494a095ee"}, {"problem": 49, "code": "(fn newSplit\n  [number lista]\n  [(apply vector (map second (take-while #(< (first %) number) (map-indexed vector lista))))\n  (apply vector (map second (drop-while #(< (first %) number) (map-indexed vector lista))))])", "user": "56fe2a2fe4b08d47c97781ad"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "4df73d64535d04ed9115e775"}, {"problem": 49, "code": "(fn [n lst]\n  (vector (vec (take n lst)) (vec (drop n lst)))\n    )", "user": "56e9a56ae4b04a395b9a03fc"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "56de78fde4b0ea9b8538f83c"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "57201f14e4b0c5bde472c08e"}, {"problem": 49, "code": "(fn [x coll]\n          [(take x coll) (drop x coll)])", "user": "516c3472e4b06f078fab251c"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "529e8ba9e4b04e0c58e87b99"}, {"problem": 49, "code": "(fn [n lst]\n  (concat (vector (take n lst)) (vector (drop n lst))))", "user": "571ff1ebe4b0c5bde472c088"}, {"problem": 49, "code": "(fn [n lst]\n  (vector (take n lst) (drop n lst)))", "user": "56df62b3e4b0ca2494a095ef"}, {"problem": 49, "code": "(fn [n x] (cons (take n x) (cons (drop n x) '())))", "user": "57211a02e4b0c5bde472c0a9"}, {"problem": 49, "code": "(fn [n coll] (vector (take n coll) (drop n coll)))", "user": "57283dbce4b0c5bde472c154"}, {"problem": 49, "code": "(fn [n s]\n  [(take n s) (drop n s)])", "user": "572722c4e4b0c5bde472c134"}, {"problem": 49, "code": "(fn [a coll]\n  [(take a coll) (drop a coll)])", "user": "56785234e4b05957ce8c6177"}, {"problem": 49, "code": "(fn [n xs] [(take n xs) (drop n xs)])", "user": "5724a4dae4b0c5bde472c0fe"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "56df636ae4b0ca2494a095f4"}, {"problem": 49, "code": "(fn [n lst]\n  [(take n lst) (drop n lst)])", "user": "57210e8ee4b0c5bde472c0a8"}, {"problem": 49, "code": "(fn \n  [n lst]\n  [(take n lst) (drop n lst)])", "user": "56df7440e4b0ca2494a095fb"}, {"problem": 49, "code": "(fn [n s]\n  (list (take n s) (drop n s)))", "user": "5723e6d6e4b0c5bde472c0f1"}, {"problem": 49, "code": "(fn my-split-at\n  [n coll]\n  (loop [left '()\n         right coll]\n    (if (= (count left) n)\n      [(reverse left) right]\n      (recur (conj left (first right)) (rest right)))))", "user": "572db6d5e4b0cd1946bd0f78"}, {"problem": 49, "code": "(juxt take drop)", "user": "5547b72be4b0a04f79299550"}, {"problem": 49, "code": "(juxt take drop)", "user": "563a79e5e4b0bfe05bf117fe"}, {"problem": 49, "code": "#(conj (empty %2) (take %1 %2) (drop %1 %2))", "user": "5720fc08e4b0c5bde472c0a3"}, {"problem": 49, "code": "(fn [n x] (list (take n x) (drop n x)))", "user": "572a543ee4b0f4d77e651235"}, {"problem": 49, "code": "#(let [x (take % %2) y (drop % %2)]\n    [x y])", "user": "53829b28e4b06839e8705ed6"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "54b0519be4b09f271ff37d14"}, {"problem": 49, "code": "#(vector (subvec %2 0 %1) (subvec %2 %1))", "user": "56949fc5e4b0dcc4269f4120"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "56eb3f9de4b04a395b9a0420"}, {"problem": 49, "code": "(fn [num coll] ((juxt (partial take num) (partial drop num)) coll))", "user": "5256c4c1e4b0541d1855ba36"}, {"problem": 49, "code": "(fn [at coll]\n    (loop [i 0 h [] [f & more] coll]\n      (cond\n        (= i at) (vector h (vec (conj more f)))\n        :else (recur (inc i) (conj h f) more))))", "user": "57213df6e4b0c5bde472c0ab"}, {"problem": 49, "code": "(fn [i a] [(take i a) (drop i a)])", "user": "5733fde1e4b0cd1946bd1000"}, {"problem": 49, "code": "(fn takeImp [n coll] (concat [(take n coll)] [(drop n coll)]))", "user": "57131dfbe4b07c98581c3a98"}, {"problem": 49, "code": "#(vector (take %1 %2) (nthrest %2 %1))", "user": "5733e4aee4b0cd1946bd0ffe"}, {"problem": 49, "code": "(fn [n c] (vector (take n c) (drop n c)))", "user": "573632b7e4b0cd1946bd102f"}, {"problem": 49, "code": "(fn [pos sq]\n    (reduce (fn [[first second] [index item]]\n              (if (< index pos)\n                [(conj first item) second]\n                [first (conj second item)]\n                  )\n              )\n            ; result\n            [[] []]\n\n            ; Transform into indexed version\n            (map-indexed (fn [index item] [index item]) sq)\n            )\n    )", "user": "571a282ae4b07c98581c3b46"}, {"problem": 49, "code": "(fn [x y] (conj [] (take x y) (drop x y)) )", "user": "570eeb66e4b0b0fb43fd06fa"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "572ea970e4b0cd1946bd0f89"}, {"problem": 49, "code": "(fn [n coll]\n  (conj (conj [] (take n coll)) (drop n coll)))", "user": "570794d8e4b0b0fb43fd068b"}, {"problem": 49, "code": "(fn [splitter arg]\n  (into (into [] (vector (take splitter arg))) (vector (drop splitter arg))))", "user": "57344edbe4b0cd1946bd1008"}, {"problem": 49, "code": "(fn [i sq] (conj [] (take i sq) (drop i sq)))", "user": "573107d5e4b0cd1946bd0fbc"}, {"problem": 49, "code": "(fn my-fun2 [split-ind in-seq]\n    (loop [build-f [] build-b [] ind 0 seq-work in-seq]\n       (cond\n         (= ind (count in-seq)) (vector build-f build-b)\n         (< ind split-ind)\n           (recur (conj build-f (first seq-work)) build-b (inc ind)\n                  (rest seq-work))\n         :default (recur build-f (conj build-b (first seq-work)) (inc ind)\n                         (rest seq-work)))))", "user": "571d9669e4b0145328a7627f"}, {"problem": 49, "code": "(fn [num coll]\n   [(take num coll) (drop num coll)])", "user": "5602842de4b04bb52996e1a1"}, {"problem": 49, "code": "(juxt take drop)", "user": "57299c57e4b0c6e51e0d2b1e"}, {"problem": 49, "code": "#(conj [] (take %1 %2) (drop %1 %2))", "user": "518665cde4b0da5a5be3bad2"}, {"problem": 49, "code": "(fn [c l]\n  [(take c l) (drop c l)])", "user": "5739cbe4e4b0cd1946bd107c"}, {"problem": 49, "code": "#(list\n  (take % %2)\n  (drop % %2)\n  \n  )", "user": "5735ac67e4b0cd1946bd102b"}, {"problem": 49, "code": "#(seq [(take %1 %2) (drop %1 %2)])", "user": "56e30cefe4b03a7c14b85a3d"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "573652e1e4b0cd1946bd1030"}, {"problem": 49, "code": "(fn [n s] (vec (list (take n s) (drop n s))))", "user": "573ce277e4b05c31a32c080b"}, {"problem": 49, "code": "#(loop [x [] y %2] (if (= (count x) %) [x y] (recur (concat x [(first y)]) (rest y))))", "user": "55c3f19de4b0e31453f64991"}, {"problem": 49, "code": "(fn [n v] [(take n v) (drop n v)])", "user": "56ff45e5e4b08d47c97781bb"}, {"problem": 49, "code": "#(vec (list (into [] (take %1 %2)) (into [] (take-last (- (count %2) %1) %2))))", "user": "5602f5fce4b04bb52996e1ad"}, {"problem": 49, "code": "(fn [n coll] (list (take n coll) (nthrest coll n)))", "user": "57300c19e4b0cd1946bd0fa1"}, {"problem": 49, "code": "(fn split-at- [n coll]\n  [(vec (take n coll)) (vec (drop n coll))])", "user": "561814bae4b06b1bb2182a1a"}, {"problem": 49, "code": "(fn [n s]\n  (list (take n s) (drop n s)))", "user": "573b664ce4b0cd1946bd10a7"}, {"problem": 49, "code": "#(concat [(take %1 %2)] [(nthrest %2 %1)] )", "user": "57280b92e4b0c5bde472c14e"}, {"problem": 49, "code": "#(cons (take %1 %2) [(drop %1 %2)])", "user": "572ac718e4b0f4d77e651242"}, {"problem": 49, "code": "(fn [n s] [(take n s) (drop n s)])", "user": "57458b82e4b009280f9f2b4e"}, {"problem": 49, "code": "(fn [split coll]\n  (list (take split coll) (drop split coll)))", "user": "57434103e4b0c285004e8a9e"}, {"problem": 49, "code": "(fn [x y]\n (conj (conj [] (into [] (take x y)))  (into [] (drop x y))\n ))", "user": "56e6e1e6e4b02e7e935eb6cf"}, {"problem": 49, "code": ";; This works...\n;(fn [n xs] [(take n xs) (drop n xs)])\n;; ... but let's play with juxt.\n;#((juxt (partial take %1) (partial drop %1)) %2)\n;; *looks at solutions* Oh, we can just say this:\n(juxt take drop)", "user": "57407ab3e4b05c31a32c0854"}, {"problem": 49, "code": "#(conj [] (take %1 %2) (drop %1 %2))", "user": "573940e3e4b0cd1946bd106b"}, {"problem": 49, "code": "(fn [i s] [(take i s) (drop i s)])", "user": "57023e92e4b08d47c97781da"}, {"problem": 49, "code": "(fn [n s] (vector (vec (take n s)) (vec (take-last (- (count s) n) s))))", "user": "573c813be4b0cd1946bd10c5"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "574977cbe4b009280f9f2b9b"}, {"problem": 49, "code": "(fn splitatn [n c]\n    (concat \n      [(take n c)] \n      [(drop n c)]             \n    )\n  )", "user": "571aae1fe4b07c98581c3b5a"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "51647faae4b003cf19fdde3b"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "57297fb2e4b0c6e51e0d2b1c"}, {"problem": 49, "code": "#(conj [] (take %1 %2) (take-last (- (count %2) %1) %2))", "user": "571172ece4b09c608db70446"}, {"problem": 49, "code": "(fn [n arr]\n [ (subvec arr 0 n)\n   (subvec arr n)\n   ]\n )", "user": "57440f77e4b0c285004e8ab5"}, {"problem": 49, "code": "#(conj [] (take % %2) (drop % %2))", "user": "573f3ccfe4b05c31a32c083f"}, {"problem": 49, "code": "(fn [n c]\n  (loop [i n\n         a []\n         r c]\n    (if (zero? i)\n        [a r]\n        (recur (dec i)\n               (conj a (first r))\n               (rest r)))))", "user": "574c3a7ce4b02ea114799219"}, {"problem": 49, "code": "(fn [n s] (list (take n s) (drop n s)))", "user": "574af03ce4b02ea114799202"}, {"problem": 49, "code": "(fn [index, coll]\n    (vector (take index coll) (drop index coll)))", "user": "57465526e4b009280f9f2b61"}, {"problem": 49, "code": "(fn [n a] \n  (loop [m (empty a) b a n n] \n    (if (= n 0) \n           (seq [m b]) \n           (recur (conj m (first b)) (rest b) (dec n))\n    )\n  )\n)", "user": "574c06b8e4b02ea114799213"}, {"problem": 49, "code": "(fn [n, lst]\n  (list\n\t(take n lst)\n   \t(drop n lst)))", "user": "56fee4c0e4b08d47c97781b5"}, {"problem": 49, "code": "(fn [how-many data]\n [(take how-many data) (drop how-many data)])", "user": "52c03baee4b07a9af5792347"}, {"problem": 49, "code": "#(vector (vec (take %1 %2)) (vec (drop %1 %2)))", "user": "574a9132e4b02ea1147991fd"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "573ddfc2e4b05c31a32c081b"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "57408f87e4b05c31a32c0856"}, {"problem": 49, "code": "(fn [n xs] [(vec (take n xs)) (vec (drop n xs))])", "user": "56098ccbe4b0053d1b86c7e4"}, {"problem": 49, "code": "(fn [n xs]\n  [(take n xs) (drop n xs)])", "user": "574dfcb8e4b02ea11479923a"}, {"problem": 49, "code": "(fn [n coll] (list (take n coll) (drop n coll)))", "user": "5747e22ce4b009280f9f2b7c"}, {"problem": 49, "code": "#(identity [(take %1 %2) (drop %1 %2)])", "user": "574f5496e4b02ea11479925c"}, {"problem": 49, "code": "(juxt take drop)", "user": "52e1c276e4b09f7907dd142b"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "56d2a103e4b0ea9b8538f7a3"}, {"problem": 49, "code": "(fn [at sq]\n  (loop [ rm sq\n         res []]\n    (if (= (count res) at)\n      [res rm]\n      (recur (rest rm)\n             (conj res (first rm))))))", "user": "574e7be7e4b02ea114799242"}, {"problem": 49, "code": "(fn [n, c] [(drop-last (- (count c) n) c) (drop n c)])", "user": "535558b9e4b04ce2eb3ed25a"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "56bb652ae4b0f26550335953"}, {"problem": 49, "code": "(fn [point alist]\n  (list (take point alist) (drop point alist)))", "user": "5705e404e4b0b0fb43fd0676"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "57275898e4b0c5bde472c13e"}, {"problem": 49, "code": "(fn my-split-at [n s]\n  (let [f (fn [n s1 s2]\n            (if (zero? n)\n              [(reverse s1) s2]\n              (recur (dec n) (conj s1 (first s2)) (rest s2))))]\n    (f n nil s)))", "user": "571d063ee4b0145328a76272"}, {"problem": 49, "code": "#(vector (vec (take %1 %2)) (vec (drop %1 %2)))", "user": "57539e04e4b02ea1147992ab"}, {"problem": 49, "code": "(fn [i coll] (reduce-kv \n              (fn [c k v] \n                (if (< k i) \n                  (assoc c 0 (conj (first c) v)) \n                  (assoc c 1 (conj (last c) v))))\n              [[][]] coll))", "user": "5744d088e4b009280f9f2b41"}, {"problem": 49, "code": "(fn [n col] \n  [(take n col)\n    (drop n col)\n   ])", "user": "574c5e18e4b02ea11479921b"}, {"problem": 49, "code": ";(map vec ((juxt take drop) %1 %2))\n\n(juxt take drop)", "user": "57533bc1e4b02ea1147992a6"}, {"problem": 49, "code": "(fn [n s]\n  (list (take n s) (drop n s)))", "user": "56749133e4b05957ce8c613e"}, {"problem": 49, "code": "; (fn __ [at coll]\n;  (loop [at   at\n;         cur  0\n;         sub1 []\n;         sub2 []\n;         more coll]\n;    (cond\n;      (empty? more) [sub1 sub2]\n;      (< cur at)    (recur at (inc cur) (conj sub1 (first more)) sub2 (rest more))\n;      (>= cur at)   (recur at (inc cur) sub1 (conj sub2 (first more)) (rest more)))))\n\n(fn __ [n coll] [(take n coll) (drop n coll)])", "user": "573118ebe4b0cd1946bd0fbd"}, {"problem": 49, "code": "(fn [n c] [(take n c) (drop n c)])", "user": "5742ec91e4b05c31a32c0883"}, {"problem": 49, "code": "(juxt take drop)", "user": "53ff602fe4b0de5c418485ff"}, {"problem": 49, "code": "(fn my-split-at\n  ([pos lis] (my-split-at pos lis []))\n  ([pos lis begin]\n   (if (= lis [])\n     (vector begin)\n     (if (= pos 0)\n     (vector begin (apply vector lis))\n     (my-split-at (dec pos) (rest lis) (conj begin (first lis)))))))", "user": "574f1c24e4b02ea114799255"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5756f7d7e4b02ea1147992e9"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5757ba87e4b02ea1147992f9"}, {"problem": 49, "code": "(fn split_seq [at coll] [(take at coll) (drop at coll)])", "user": "574ed2f7e4b02ea11479924a"}, {"problem": 49, "code": "#( vector ( take %1 %2 ) ( drop %1 %2 ) )", "user": "57561529e4b02ea1147992d3"}, {"problem": 49, "code": "#(concat (list (take %1 %2)) (list (drop %1 %2)))", "user": "5751f2a2e4b02ea114799292"}, {"problem": 49, "code": "(fn [n seq]\n  (vector (take n seq)\n          (drop n seq)))", "user": "570ab24fe4b0b0fb43fd06b7"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "56cd75bee4b0ea9b8538f74b"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "570bd29be4b0b0fb43fd06c5"}, {"problem": 49, "code": "#(vector (take %1 %2) (take-last (- (count %2) %1) %2))", "user": "54283a7ae4b01498b1a71b2f"}, {"problem": 49, "code": "(fn split ([idx coll] (split (dec idx) (rest coll) (list (first coll))))\n          ([idx coll new] (if (empty? coll)\n                            (list (reverse new))\n                            (if (= 0 idx)\n                              (cons (reverse new) (split (count (rest coll)) (rest coll) (list (first coll))))\n                              (split (dec idx) (rest coll) (cons (first coll) new))\n                              )\n                            ))\n          )", "user": "5759cd46e4b02ea11479932e"}, {"problem": 49, "code": "(juxt take drop)", "user": "575cbe44e4b02ea114799374"}, {"problem": 49, "code": "(fn [n coll]\n  (conj [(take n coll)] (nthnext coll n)))", "user": "574abbfbe4b02ea114799200"}, {"problem": 49, "code": "#(conj [] (take %1 %2) (drop %1 %2))", "user": "57462a4de4b009280f9f2b5d"}, {"problem": 49, "code": "(fn\n  [split-num in-seq]\n  [(take split-num in-seq) (drop split-num in-seq)]\n  )", "user": "52229374e4b0e6a83c892600"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5739c2fee4b0cd1946bd107a"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "56a94562e4b07966d5a8a074"}, {"problem": 49, "code": "(fn [x xs] (  vector (take x xs)  (drop x xs)   ) )", "user": "57487084e4b009280f9f2b8c"}, {"problem": 49, "code": "(fn split1\n  [n data]\n  [(take n data) (drop n data)])", "user": "5746cb28e4b009280f9f2b68"}, {"problem": 49, "code": "(fn sa [n s]\n  (loop [n n, s s, p1 []]\n      (if (= 0 n)\n        [(vec p1) (vec s)]\n        (recur (dec n) (rest s) (conj p1 (first s))))))", "user": "572ec4dde4b0cd1946bd0f8d"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5745bb9fe4b009280f9f2b54"}, {"problem": 49, "code": "(fn [n s] (list (take n s) (drop n s)))", "user": "571edeeae4b0145328a7629b"}, {"problem": 49, "code": "(juxt take drop)", "user": "575ef4b6e4b08062f99a4e78"}, {"problem": 49, "code": "(fn [i coll] [(take i coll) (drop i coll)])", "user": "55fbc657e4b0f488688e0666"}, {"problem": 49, "code": "(fn [n s]\n  (or [(take n s) (drop n s)] (juxt take drop)))", "user": "5731e36be4b0cd1946bd0fc9"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "4fe868d1e4b07c9f6fd12c3f"}, {"problem": 49, "code": "(fn [x coll]\n  (vector (take x coll)(drop x coll)))", "user": "572a856be4b0f4d77e65123b"}, {"problem": 49, "code": "(fn [y x]\n   (let [ymod (mod y (count x))]\n    (list (take ymod x) (drop ymod x))))", "user": "574e8975e4b02ea114799244"}, {"problem": 49, "code": "#(concat (vector (take %1 %2)) (vector (drop %1 %2)))", "user": "575dda55e4b02ea11479938c"}, {"problem": 49, "code": "#(concat (list(take %1 %2)) (list(drop %1 %2)))", "user": "57501c83e4b02ea11479926b"}, {"problem": 49, "code": "#(conj (conj [] (take %1 %2)) (drop %1 %2))", "user": "574a546ee4b02ea1147991f6"}, {"problem": 49, "code": "(fn splt [n s] \n   (cons \n     (take n s) \n     (list (drop n s))))", "user": "57501de0e4b02ea11479926c"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "57614948e4b0994c1922fb83"}, {"problem": 49, "code": "#(vec [(take %1 %2) (drop %1 %2)])", "user": "57642916e4b0994c1922fbee"}, {"problem": 49, "code": "(juxt take drop)", "user": "57609d91e4b08062f99a4e9b"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "575fbe58e4b08062f99a4e87"}, {"problem": 49, "code": "(fn [n coll]\n  (loop [[curr & rest] coll\n         first-part []\n         i 1]\n    (if (= i n)\n      [(conj first-part curr) rest]\n      (recur rest\n             (conj first-part curr)\n             (inc i)))))", "user": "52ea025ae4b09f7907dd14b5"}, {"problem": 49, "code": "(fn [n s] [(take n s) (drop n s)])", "user": "5761a772e4b0994c1922fb95"}, {"problem": 49, "code": "(fn [n col]\n\t(list (take n col) (drop n col)))", "user": "57644395e4b0994c1922fbf2"}, {"problem": 49, "code": "(fn [n coll] (vector (take n coll) (drop n coll)))", "user": "5764457ae4b0994c1922fbf3"}, {"problem": 49, "code": "#(conj [] (vec (take %1 %2)) (vec (drop %1 %2)))", "user": "575aa61ae4b02ea11479934e"}, {"problem": 49, "code": "#(cons (take %1 %2) (list(drop %1 %2)))", "user": "5763818ae4b0994c1922fbc7"}, {"problem": 49, "code": "#( vector (apply vector (take % %2)) \n                        (apply vector (take-last (- (count %2) %) %2) )\n                        )", "user": "575bd5f9e4b02ea114799365"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "575b3e9be4b02ea11479935b"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "5720ba36e4b0c5bde472c09c"}, {"problem": 49, "code": "(juxt take drop)", "user": "56f974c0e4b07572ad1a88b1"}, {"problem": 49, "code": "(fn [n s] [(take n s) (drop n s)])", "user": "576844cde4b0a07e8fc180ce"}, {"problem": 49, "code": "(fn [n s] [(vec (take n s)) (vec (drop n s))])", "user": "576da825e4b0979f8965156c"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "56d91a53e4b0ea9b8538f7ee"}, {"problem": 49, "code": "(fn [n xs] \n  (let [a (take n xs) b (drop n xs)] [a b]))", "user": "57607706e4b08062f99a4e97"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "575d16f8e4b02ea114799377"}, {"problem": 49, "code": "(fn [n coll] [(vec (take n coll)) (vec (drop n coll))])", "user": "57202eb7e4b0c5bde472c090"}, {"problem": 49, "code": "(juxt take drop)", "user": "576e3258e4b0979f89651574"}, {"problem": 49, "code": "(fn splt [num sec]\n  (loop [result '[]\n         tail sec\n         ]\n    (println result tail)\n    (cond\n      (= (count result) num) (conj [] result (vec tail))\n      :else (recur (conj result (first tail)) (rest tail))\n      )\n    )\n  )", "user": "576d24ede4b0979f8965155b"}, {"problem": 49, "code": "#(conj (conj [] (take % %2)) (drop % %2))", "user": "5764cc01e4b0994c1922fc05"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "574ef641e4b02ea11479924f"}, {"problem": 49, "code": "(fn [n v]\n  (vec [(subvec v 0 n) (subvec v n)]))", "user": "576a972ce4b0a07e8fc1811a"}, {"problem": 49, "code": "(juxt take drop)", "user": "576a8d02e4b0a07e8fc18117"}, {"problem": 49, "code": "#(conj () (drop %1 %2) (take %1 %2))", "user": "57763002e4b0979f89651631"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "577202d2e4b0979f896515c0"}, {"problem": 49, "code": "(fn [index coll] [(into [] (take index coll)) (into [] (drop index coll))])", "user": "5744e1a2e4b009280f9f2b43"}, {"problem": 49, "code": "(fn my-split-at [n coll]\n  [(take n coll) (drop n coll)])", "user": "5776e21de4b0979f89651642"}, {"problem": 49, "code": "#(conj [(take %1 %2)] (nthrest %2 %1))", "user": "572af688e4b0f4d77e651249"}, {"problem": 49, "code": "(fn [n coll] \n  [(take n coll) (drop n coll)]\n  )", "user": "57750460e4b0979f8965160c"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "50c99e3ee4b0bed41a122997"}, {"problem": 49, "code": "(fn [s n] [(take s n) (drop s n)])", "user": "577629abe4b0979f8965162e"}, {"problem": 49, "code": "(fn [n, l]\n  (vector (take n l) (drop n l) ))", "user": "5776558ee4b0979f89651633"}, {"problem": 49, "code": "(fn [limit coll]\n  [(take limit coll) (drop limit coll)]\n  )", "user": "5272645de4b03e8d9a4a742c"}, {"problem": 49, "code": "(fn [n xs]\n  (into\n    [] \n    [(vec (take n xs))\n     (vec (drop n xs))]\n    )\n  )", "user": "56fe665be4b08d47c97781af"}, {"problem": 49, "code": "(fn [n v]\n   (vec (list (vec (take n v)) (vec (drop n v ))) ))", "user": "5762fcfde4b0994c1922fbb3"}, {"problem": 49, "code": "#(list (take %1 %2) (take-last (- (count %2) %1) %2))", "user": "57780e4fe4b0979f89651657"}, {"problem": 49, "code": "(fn \n  [n seq]\n  (vector (into [] (take n seq)) (into [] (drop n seq)))\n)", "user": "5772ddb0e4b0979f896515d4"}, {"problem": 49, "code": "#(identity [(take %1 %2) (drop %1 %2)])", "user": "577a8049e4b0d3393e5deafc"}, {"problem": 49, "code": "#(do [(take %1 %2) (drop %1 %2)])", "user": "571346c0e4b07c98581c3a9b"}, {"problem": 49, "code": "(fn [n x] [(take n x) (drop n x)])", "user": "577829f9e4b0979f8965165a"}, {"problem": 49, "code": "(fn [n coll] (vector (take n coll) (drop n coll)))", "user": "51319a53e4b06942423563c8"}, {"problem": 49, "code": "(fn [i s] [(take i s) (nthnext s i)])", "user": "54684c3be4b00cfc9eacc139"}, {"problem": 49, "code": "(fn [at lst] [(drop-last (- (count lst) at) lst ) (drop at lst)])", "user": "577b9cfde4b0d3393e5deb16"}, {"problem": 49, "code": "(fn [n s]\n  [(take n s)(drop n s)])", "user": "5776f39de4b0979f89651643"}, {"problem": 49, "code": "(fn [n ls]\n  [(take n ls) (drop n ls)])", "user": "577abecfe4b0d3393e5deb06"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5761513fe4b0994c1922fb87"}, {"problem": 49, "code": "(fn [n xs] (list (take n xs) (drop n xs)))", "user": "56c560ede4b05cc29241eea6"}, {"problem": 49, "code": "#(conj [] (take %1 %2) (drop %1 %2))", "user": "560c37b5e4b05f002753df2e"}, {"problem": 49, "code": "#(let [p (partition-all %1 %2)]\n   (vector (first p) (apply concat (rest p))))", "user": "56f6e541e4b08e7d20b9682a"}, {"problem": 49, "code": "(fn [n s]\n  (vector (take n s) ( drop n s)))", "user": "57822efce4b0d36ec5835e91"}, {"problem": 49, "code": "#(conj [] (take %1 %2) (drop %1 %2))", "user": "548f3ed8e4b0e286459a1236"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "576b4e6be4b0a07e8fc1812b"}, {"problem": 49, "code": "(fn [n coll] (list (take n coll) (drop n coll)))", "user": "577c3da9e4b0c8d87281f6b9"}, {"problem": 49, "code": "#(list (take % %2) (nthrest %2 %))", "user": "5776385fe4b0979f89651632"}, {"problem": 49, "code": "(juxt take drop)", "user": "5756e218e4b02ea1147992e5"}, {"problem": 49, "code": "#(identity [(take %1 %2) (drop %1 %2)])", "user": "576df252e4b0979f8965156f"}, {"problem": 49, "code": "#(-> [(take % %2) (drop % %2)])", "user": "55c4cda5e4b0e31453f649a5"}, {"problem": 49, "code": "(fn my-split-at [n coll]\n    [(take n coll) (drop n coll)])", "user": "4dfe5a93535d04ed9115e786"}, {"problem": 49, "code": "#(do [(take %1 %2) (drop %1 %2)])", "user": "577832f4e4b0979f8965165b"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5786e182e4b0ebec4cfb7500"}, {"problem": 49, "code": "#(map vec (list (take %1 %2) (drop %1 %2)))", "user": "57615a22e4b0994c1922fb88"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "566b57e9e4b0a866af6896ad"}, {"problem": 49, "code": "#(conj []\n      (vec (take %1 %2))\n      (vec (drop %1 %2)))", "user": "530e75d5e4b08068f379ecba"}, {"problem": 49, "code": "#(conj [] (vec (take %1 %2)) (vec (drop %1 %2)))", "user": "577fa91ee4b0d36ec5835e6a"}, {"problem": 49, "code": "(fn [n v]\n  (vector (take n v) (drop n v)))", "user": "578d230fe4b0ebec4cfb7564"}, {"problem": 49, "code": "(fn [n s]\n  (loop [l []\n         r s]\n    (if (< (count l) n)\n      (recur (conj l (first r))\n             (rest r))\n      [l r])))", "user": "578cf84ce4b0ebec4cfb7562"}, {"problem": 49, "code": "#(conj [] (take %1 %2) (drop %1 %2))", "user": "575e71a2e4b0846ea39baf26"}, {"problem": 49, "code": "#(into [(take % %2)]\n       [(drop % %2)])", "user": "5791d259e4b0ebec4cfb75c0"}, {"problem": 49, "code": "(fn [n col]\n  (list* (take n col) (drop n col) nil ))", "user": "57934c67e4b0e215f87e8456"}, {"problem": 49, "code": "(fn [n lst] (vec (concat [(take n lst)] [(drop n lst)])))", "user": "55ede35ce4b0121d4835fde1"}, {"problem": 49, "code": "#(vector (take %1 %2) (nthrest %2 %1))", "user": "578b140be4b0ebec4cfb7545"}, {"problem": 49, "code": "#(concat [(take % %2)] [(drop % %2)])", "user": "577ab41fe4b0d3393e5deb05"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5790e62ae4b0ebec4cfb75b0"}, {"problem": 49, "code": "(fn [num s] [(take num s) (drop num s)])", "user": "5751fda4e4b02ea114799295"}, {"problem": 49, "code": "(fn [index coll]\n  (let [pre (take index coll) post (drop index coll)]\n    [pre post]))", "user": "579601c8e4b0e215f87e8492"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "578fc072e4b0ebec4cfb759a"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5795f1f1e4b0e215f87e8490"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "57915ba4e4b0ebec4cfb75ba"}, {"problem": 49, "code": ";(map vec ((juxt take drop) %1 %2))\n\n(juxt take drop)", "user": "5798205ce4b039eba2ecb10e"}, {"problem": 49, "code": "(fn [n l]\n  (vector\n   (into [] (take n l))\n   (into [] (take-last \n             (- (count l) n)\n             l)\n         )\n        )\n  )", "user": "577a4dc2e4b0d3393e5deaf6"}, {"problem": 49, "code": "#(vector (take %1 %2) (take-last (- (count %2) %1) %2))", "user": "576d398be4b0979f8965155d"}, {"problem": 49, "code": ";(map vec ((juxt take drop) %1 %2))\n\n(juxt take drop)", "user": "57982bace4b039eba2ecb10f"}, {"problem": 49, "code": "(fn [n s] [ (take n s) (drop n s) ])", "user": "55478ce2e4b0a04f7929954e"}, {"problem": 49, "code": "#( let   [parts (partition-all %1 %2)]  ( cons (first parts) [( apply concat (rest parts)   )]))", "user": "57986b76e4b039eba2ecb116"}, {"problem": 49, "code": "(fn my-split-at\n [n coll]\n [(take n coll) (take-last (- (count coll) n) coll)])", "user": "568bd448e4b0dcc4269f40a9"}, {"problem": 49, "code": "(fn [p li] [(take p li) (drop p li)])", "user": "5786c182e4b0ebec4cfb74fd"}, {"problem": 49, "code": "(fn [x l] (conj [] (vec (take x l)) (vec (take-last (- (count l) x) l))))", "user": "579b803fe4b05b1deef9adf4"}, {"problem": 49, "code": "(fn [n s]\n   [(take n s)\n    (drop n s)])", "user": "57958dace4b0e215f87e8484"}, {"problem": 49, "code": "#(conj [] (take %1 %2) (drop %1 %2))", "user": "5799ff45e4b05b1deef9add1"}, {"problem": 49, "code": "(fn [n s]\n  [(take n s) (drop n s)])", "user": "579c8ad1e4b05b1deef9ae0c"}, {"problem": 49, "code": "(fn [i coll]\n  [(take i coll) (drop i coll)])", "user": "57147cd9e4b07c98581c3abf"}, {"problem": 49, "code": "#(cons (take %1 %2) (list (drop %1 %2)))", "user": "579e15a6e4b05b1deef9ae20"}, {"problem": 49, "code": "(fn [x coll] [(take x coll) (drop x coll)])", "user": "578e2829e4b0ebec4cfb757d"}, {"problem": 49, "code": "(juxt take drop)", "user": "574ff497e4b02ea114799266"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "57717915e4b0979f896515b3"}, {"problem": 49, "code": "(fn\n  [i xs]\n\n  [\n    (apply vector\n      (take i xs)\n    )\n    (apply vector\n      (drop i xs)\n    )\n  ]\n)", "user": "5784e177e4b0ebec4cfb74cf"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)]\n  )", "user": "5785de43e4b0ebec4cfb74e5"}, {"problem": 49, "code": "#(vector (into [] (take %1 %2)) (into [] (drop %1 %2)))", "user": "578e535de4b0ebec4cfb7580"}, {"problem": 49, "code": "(fn [n col]\n      [(take n col) (drop n col)])", "user": "5799b260e4b05b1deef9adc8"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "57873017e4b0ebec4cfb7503"}, {"problem": 49, "code": "(fn [n xs]\n  [(take n xs) (drop n xs)])", "user": "54c611d1e4b045293a27f627"}, {"problem": 49, "code": "(fn [n s]\n  (vector (take n s) (drop n s)))", "user": "57a13745e4b0c3d858beb8e3"}, {"problem": 49, "code": "(fn [n coll] [(take n  coll) (drop n coll\n                                  )])", "user": "51e7c1f1e4b0a3e081b8cbef"}, {"problem": 49, "code": "(fn [n coll]\n  (loop [i 0\n         in coll\n         [seq1 seq2] [[] []]]\n    (if (empty? in)\n      [seq1 seq2]\n      (recur (inc i)\n             (rest in)\n             (if (< i n)\n               [(conj seq1 (first in)) seq2]\n               [seq1 (conj seq2 (first in))])))))", "user": "57a310b4e4b0c3d858beb90c"}, {"problem": 49, "code": "(fn [n parts] \n  \t(conj [] (take n parts) (drop n parts))\n)", "user": "579be21fe4b05b1deef9adff"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "57a4bb65e4b0a966079561eb"}, {"problem": 49, "code": "(fn [idx coll] \n  (vector \n    (take idx coll) \n    (take-last (- (count coll) idx) coll)\n  )\n)", "user": "565418cde4b0f9d632dd847c"}, {"problem": 49, "code": "(fn [split-point coll]\n  [(take split-point coll) (drop split-point coll)])", "user": "56014f55e4b04bb52996e184"}, {"problem": 49, "code": "(fn [n coll] (list (take n coll) (drop n coll)))", "user": "5797d4bae4b039eba2ecb107"}, {"problem": 49, "code": "(juxt take drop)", "user": "579d9601e4b05b1deef9ae18"}, {"problem": 49, "code": "(fn [n s]\n  [(take n s) (drop n s)])", "user": "57aa4775e4b0b8559636fc6b"}, {"problem": 49, "code": "#(conj (list (nthrest %2 %)) (take % %2))", "user": "555e9dbfe4b0a2eb076a39bc"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "57a0f256e4b0c3d858beb8dd"}, {"problem": 49, "code": "(fn split [n s]\n  [(take n s)\n   (drop n s)])", "user": "57a9e274e4b0b8559636fc5d"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll)(drop n coll)])", "user": "57a1ef58e4b0c3d858beb8f3"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "57752a2de4b0979f89651613"}, {"problem": 49, "code": "(fn[ ct col ] [ (take ct col) (drop ct col) ] )", "user": "57aa290de4b0b8559636fc65"}, {"problem": 49, "code": "(juxt take drop)", "user": "57a20f72e4b0c3d858beb8f5"}, {"problem": 49, "code": "(fn [n coll] (list (vec (take n coll)) (vec (nthrest coll n))))", "user": "5777cffae4b0979f89651651"}, {"problem": 49, "code": "(fn [n s]\n  [(take n s) (take-last (- (count s) n) s)])", "user": "577bf999e4b0d3393e5deb2c"}, {"problem": 49, "code": "(fn [i s]\n  [(subvec s 0 i)\n   (subvec s i)])", "user": "56b965d9e4b0f26550335931"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "57adbe7ee4b0b8559636fca0"}, {"problem": 49, "code": "#(vector \n       (vec (take %1 %2)) \n(vec (drop %1 %2)))", "user": "5075e374e4b09049dea827a5"}, {"problem": 49, "code": "(fn[n liste]\n  [(take n liste) (drop n liste)])", "user": "57ad0950e4b0b8559636fc97"}, {"problem": 49, "code": "(fn[n coll]\n  [(take n coll) (drop n coll)]\n  )", "user": "55fde52ce4b00f4cabc5764c"}, {"problem": 49, "code": "#(vector (take % %2) (take-last (- (count %2) %) %2))", "user": "4fb0ccbfe4b081705acca26e"}, {"problem": 49, "code": "(fn [cnt col]\n    (letfn [(former [n] (take cnt col))\n            (latter [n] (nthrest col cnt))]\n        (vector (former col) (latter col))))", "user": "548b7db8e4b0e286459a11fd"}, {"problem": 49, "code": "(fn [n s] ((juxt (partial take n) (partial drop n)) s))", "user": "57625c18e4b0994c1922fba4"}, {"problem": 49, "code": "(fn [loc list]\n   (let [part1 (into [](take loc list)) part2  (into [] (drop loc list))] [part1 part2])\n   )", "user": "57aa103be4b0b8559636fc64"}, {"problem": 49, "code": "#(identity [(take %1 %2) (drop %1 %2)])", "user": "57af41bce4b0fbc9809a2731"}, {"problem": 49, "code": "(fn [num coll] [(take num coll)(drop num coll\n                                     )])", "user": "57b13adae4b0fbc9809a2750"}, {"problem": 49, "code": "#(conj [](into [](take %1 %2))(into [](drop %1 %2)))", "user": "57a99d3fe4b0a96607956231"}, {"problem": 49, "code": "(fn[n s][(take n s) (drop n s)])", "user": "57b3efb1e4b0fbc9809a278a"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5655d811e4b0f9d632dd849a"}, {"problem": 49, "code": "#(conj [] (into [] (take %1 %2)) (into [] (drop %1 %2)))", "user": "579ea15ee4b05b1deef9ae2a"}, {"problem": 49, "code": "(\n fn [i s] [(vec (take i s)) (vec (drop i s))]\n )", "user": "57a5bdc4e4b0a966079561fd"}, {"problem": 49, "code": "(fn [n ls]\n  [(subvec ls 0 n) (subvec ls n)])", "user": "516064e5e4b009fba0926e26"}, {"problem": 49, "code": "(fn \n  [v c]\n  (vector (subvec c 0 v) (subvec c v)))", "user": "57acee37e4b0b8559636fc94"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "57b4779de4b0fbc9809a279a"}, {"problem": 49, "code": "(fn [n L] (list (take n L) (reverse (take (- (count L) n) (reverse L)))))", "user": "57b8b008e4b0fbc9809a27e6"}, {"problem": 49, "code": "#(vector \n   (take %1 %2)\n   (nthrest %2 %1))", "user": "57b1b8c8e4b0fbc9809a2756"}, {"problem": 49, "code": "(juxt take drop)", "user": "57b55290e4b0fbc9809a27a9"}, {"problem": 49, "code": "(fn [n ell] [(take n ell) (nthrest ell n)] )", "user": "57b99d48e4b0fbc9809a27f2"}, {"problem": 49, "code": "#(vector (vec(take %1 %2)) (vec(drop %1 %2)))", "user": "57b88091e4b0fbc9809a27e1"}, {"problem": 49, "code": "(fn [n xs]\n  [(take n xs) (drop n xs)])", "user": "57aa4752e4b0b8559636fc6a"}, {"problem": 49, "code": "(fn [n s] (list (take n s) (drop n s)) )", "user": "57af249fe4b0fbc9809a272b"}, {"problem": 49, "code": "(fn ex [n s] [(take n s) (drop n s)])", "user": "57b3046de4b0fbc9809a276d"}, {"problem": 49, "code": "#(conj [] (take % %2) (drop % %2))", "user": "57a88e24e4b0a9660795621f"}, {"problem": 49, "code": "(fn [n xs]\n  ((juxt #(take n %) #(drop n %))\n   xs))", "user": "56eab346e4b04a395b9a0410"}, {"problem": 49, "code": "(fn spl-a \n  ([cnt a] (spl-a cnt a [[]]))\n  ([cnt a ret]\n    (do (println cnt a ret)\n    (if (empty? a)\n      ret\n      (if (= cnt 0)\n        (spl-a (- cnt 1) (rest a) (conj ret [(first a)]))\n        (spl-a (- cnt 1) (rest a) (conj (pop ret) (conj (last ret)(first a)))))))))", "user": "4f4aa932e4b0d56e7bb92c14"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "57bc9375e4b05aa3c4741c43"}, {"problem": 49, "code": "#(vector (take %1 %2) (nthrest %2 %1))", "user": "57b35a19e4b0fbc9809a277d"}, {"problem": 49, "code": "(fn [i l] [(take i l) (take-last (- (count l) i) l)] )", "user": "55da18d5e4b0e31453f64ad1"}, {"problem": 49, "code": "(fn [pos a-seq]\n      [(take pos a-seq) (drop pos a-seq)])", "user": "55a3d7c7e4b0acc240e3153d"}, {"problem": 49, "code": "(fn split-seq [n s]\n  (let [x (into [] (first (partition n s)))\n        y (into [] (drop n s))]\n       [x y]))", "user": "57b6edf6e4b0fbc9809a27c8"}, {"problem": 49, "code": "#(apply vector (conj (empty %2) (take % %2) (take-last (- (count %2) %) %2)))", "user": "57ac7710e4b0b8559636fc88"}, {"problem": 49, "code": "#(concat (list (take %1 %2)) (list (drop %1 %2)))", "user": "57a9db97e4b0b8559636fc5b"}, {"problem": 49, "code": "(fn [n xs]\n  [(take n xs) (drop n xs)])", "user": "566ff0a1e4b0a866af6896ec"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "57b9fc74e4b0fbc9809a27fb"}, {"problem": 49, "code": "#(map vec (list(take %1 %2) (drop %1 %2)))", "user": "57bf304de4b05aa3c4741c75"}, {"problem": 49, "code": "(fn [n lat]\n  (cons (take n lat) (cons (drop n lat) '())))", "user": "57b9d21fe4b0fbc9809a27f7"}, {"problem": 49, "code": "(fn [n col]\n  (loop [i 0 c col f []]\n    (if (< i n)\n      (recur (inc i) (rest c) (conj f (first c)))\n      [f c])))", "user": "57addbcce4b0b8559636fca3"}, {"problem": 49, "code": "(fn [n coll] (list (take n coll) (nthrest coll n)))", "user": "57c0917be4b05aa3c4741c95"}, {"problem": 49, "code": "(fn [c1 c2]\n  (vector (take c1 c2)\n          (drop c1 c2)))", "user": "55ff562fe4b00f4cabc57660"}, {"problem": 49, "code": "(fn test [n seqq]\n  (let [seqqq (partition-all n seqq)]\n    (concat [(first seqqq)]\n            [(reduce concat\n                    (rest seqqq))])))", "user": "579332c2e4b0e215f87e8452"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "571107b3e4b09c608db7043f"}, {"problem": 49, "code": "(fn [n s]\n  (conj [] (take n s) (drop n s))\n  )", "user": "57c3c7e6e4b05aa3c4741cc4"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "57c3451fe4b05aa3c4741cbd"}, {"problem": 49, "code": "(juxt take drop)\n;#(vector (take % %2) (drop % %2))", "user": "57ba55c1e4b0fbc9809a2801"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "57c0393be4b05aa3c4741c90"}, {"problem": 49, "code": "(fn split[n s]\n  [(take n s) (drop n s)])", "user": "57bd960fe4b05aa3c4741c52"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "57bfffc7e4b05aa3c4741c8a"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (nthrest coll n)])", "user": "57c7e7d9e4b05aa3c4741d0f"}, {"problem": 49, "code": "(fn [n l]\n  [(take n l) (drop n l)])", "user": "57395f32e4b0cd1946bd1070"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "57c7cef5e4b05aa3c4741d0d"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "57c796b4e4b05aa3c4741d08"}, {"problem": 49, "code": "#(vector (vec (take %1 %2)) (vec (nthrest %2 %1)))", "user": "57b45257e4b0fbc9809a2796"}, {"problem": 49, "code": "(fn [n s] [(take n s) (drop n s)])", "user": "57b65c9be4b0fbc9809a27c0"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "56cf115de4b0ea9b8538f765"}, {"problem": 49, "code": "(fn [pos col]\n  (cons (take pos col) (conj '() (drop pos col))))", "user": "57a2328ae4b0c3d858beb8f8"}, {"problem": 49, "code": "(fn [where sequ] [(take where sequ) (drop where sequ)])", "user": "515310b4e4b0d6806ecd26fb"}, {"problem": 49, "code": "(fn my-split-at [n xs]\n  ((fn step [acc xs idx limit]\n     (if (= idx limit)\n       (conj [] acc (into [] xs))\n       (step (conj acc (first xs)) (next xs) (inc idx) limit)))\n   [] xs 0 n))", "user": "57c500f9e4b05aa3c4741cda"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "57c7a8b5e4b05aa3c4741d09"}, {"problem": 49, "code": "(fn [n seq]\n  [(take n seq) (drop n seq)])", "user": "57c3df67e4b05aa3c4741cc5"}, {"problem": 49, "code": "(fn split [n lst] (list (take n lst) (drop n lst)))", "user": "57ce2db8e4b0c746388ab8a4"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "57c58ad6e4b05aa3c4741ce7"}, {"problem": 49, "code": "(fn [n col] [(take n col) (drop n col)])", "user": "57c6bca1e4b05aa3c4741cf8"}, {"problem": 49, "code": "(fn [n s]\n  [(take n s) (drop n s)]\n  )", "user": "57cd7498e4b0c746388ab897"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "57c45e64e4b05aa3c4741ccf"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "57a0b341e4b0c3d858beb8d4"}, {"problem": 49, "code": "(fn [n seqn] [(take n seqn) (drop n seqn)])", "user": "57c94c6ee4b05aa3c4741d2d"}, {"problem": 49, "code": "#(vector (subvec %2 0 %1) (subvec %2 %1 (count %2)))", "user": "574eb3b1e4b02ea114799247"}, {"problem": 49, "code": "#( list (take %1 %2) (drop %1 %2))", "user": "57c6aa0be4b05aa3c4741cf7"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "5790f9d7e4b0ebec4cfb75b4"}, {"problem": 49, "code": "(fn split\n   [n s]\n   (list (take n s) (drop n s)))", "user": "552d487ee4b076ab5578f7e4"}, {"problem": 49, "code": "#(conj [] (take %1 %2) (drop %1 %2))", "user": "57d0cd58e4b0bd073c20235e"}, {"problem": 49, "code": "(fn split-seq [n x]\n (let [f (fn anon [i y]\n           (let [l (first y)\n                 r (first (rest y))\n                 c (count l)]\n             (if (< c i)\n               (anon i (list (conj l (first r)) (rest r))) y)))]\n   (f n (list [] x))))", "user": "57d1d6c8e4b0bd073c202370"}, {"problem": 49, "code": "#(vector (take %1 %2) (take-last (- (count %2) %1) %2))", "user": "56327168e4b0bfe05bf117a5"}, {"problem": 49, "code": "(fn [x data]\n  (let [a (subvec data 0 x)\n        b (subvec data x)]\n    [a b]))", "user": "57b19fa1e4b0fbc9809a2754"}, {"problem": 49, "code": "(fn [el lst]\n  [(take el lst) (drop el lst)])", "user": "57995ac1e4b05b1deef9adbf"}, {"problem": 49, "code": "(fn [cnt items] [(take cnt items) (nthrest items cnt)])", "user": "57ce3fede4b0c746388ab8a6"}, {"problem": 49, "code": "#(vector (vec(take %1 %2)) (subvec %2 %1))", "user": "57b8f784e4b0fbc9809a27ea"}, {"problem": 49, "code": "(fn [n c] [(take n c) (drop n c)])", "user": "57c62aece4b05aa3c4741cf1"}, {"problem": 49, "code": "(fn [i coll]\n  [(take i coll) (drop i coll)])", "user": "5763fa69e4b0994c1922fbe0"}, {"problem": 49, "code": "#(vector (drop-last (- (count %2) %1) %2) (drop %1 %2))", "user": "57da5fc4e4b0bd073c20240f"}, {"problem": 49, "code": "(fn [number items]\n  (loop [items items current 0 main [] less []]\n    (if (empty? items)\n      [main less]\n      (recur (rest items) (inc current) \n             (if (< current number)\n               (conj main (first items))\n               main)\n             (if (>= current number)\n               (conj less (first items))\n               less)))))", "user": "57d9bca1e4b0bd073c202405"}, {"problem": 49, "code": "(fn [x, s] \n          (let [a (take x s)]\n          (let [b (nthrest s x)]\n          (list a b))))", "user": "57d1a0e6e4b0bd073c20236d"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "57d7ca32e4b0bd073c2023df"}, {"problem": 49, "code": "(fn my-split-at [n coll]\n  ((juxt (partial take n)\n         (partial drop n))\n   coll))", "user": "57dda21be4b0bd073c202445"}, {"problem": 49, "code": "(fn [n xs]\n  (loop [p1 [] xr xs i 0]\n    (cond (empty? xr) [p1 xr]\n          (= i n)     [p1 xr]\n          :else       (recur (conj p1 (first xr)) (rest xr) (inc i))\n     )\n)\n)", "user": "57d7c894e4b0bd073c2023de"}, {"problem": 49, "code": "(fn [num items]\n    [(take num items) (drop num items)] )", "user": "56020b3fe4b04bb52996e19b"}, {"problem": 49, "code": "#(concat\n  \t(vector (take %1 %2))\n  \t(vector (take-last (- (count %2) %1) %2)))", "user": "57b35772e4b0fbc9809a277c"}, {"problem": 49, "code": "(fn [i l]\n   (loop [l l i i f [] s []]\n     (cond \n       (empty? l) [f s]\n       (> i 0) (recur (rest l) (dec i) (conj f (first l)) s)\n       :else (recur (rest l) (dec i) f (conj s (first l))))))", "user": "57d9f603e4b0bd073c20240a"}, {"problem": 49, "code": "(fn split-at-recur\n  ([the-count the-sequence]\n    (split-at-recur [] the-count the-sequence))\n  ([first-vector the-count input]\n    (if (empty? (rest input))\n      (if (<= the-count 0)\n        (conj (conj [] first-vector) (conj [] (first input)))\n        (conj [] (conj first-vector (first input))))\n      (if (<= the-count 0)\n        (conj (conj [] first-vector) input)\n        (split-at-recur (conj first-vector (first input)) (dec the-count) (rest input))))))", "user": "57b356c2e4b0fbc9809a277b"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "57ccedaae4b0c746388ab88e"}, {"problem": 49, "code": "(fn [n xs]\n  [(take n xs)(drop n xs)])", "user": "57e139f6e4b0bfb2137f5a6c"}, {"problem": 49, "code": "#(vector (vec (take %1 %2)) (vec(drop %1 %2)))", "user": "57d9cae9e4b0bd073c202409"}, {"problem": 49, "code": "(fn [n coll]\n  (conj [] (vec (take n coll))\n        (vec (drop n coll))))", "user": "5785c1d4e4b0ebec4cfb74e1"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "57dd47f4e4b0bd073c20243e"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "57ac2d6be4b0b8559636fc83"}, {"problem": 49, "code": "(fn [n s] [(take n s) (drop n s)])", "user": "57e0f30ae4b0bfb2137f5a66"}, {"problem": 49, "code": "(fn [n col] [(into [] (take n col)) (into [] (drop n col))])", "user": "56940617e4b0dcc4269f410b"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "558e160ce4b027778923764c"}, {"problem": 49, "code": "(juxt take drop)", "user": "5739ff3ae4b0cd1946bd1084"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll)\n   (drop n coll)])", "user": "56f9c7c6e4b07572ad1a88ba"}, {"problem": 49, "code": "(fn [i s] (conj [] (subvec s 0 i) (subvec s i)))", "user": "57e3f709e4b0bfb2137f5aaf"}, {"problem": 49, "code": "(fn my-split-at [n xs]\n  (loop [n n\n         i 0\n         xs xs\n         acc []]\n    (if (< i n)\n      (recur n (inc i) (rest xs) (conj acc (first xs)))\n      [acc (into [] xs)])))", "user": "5705f569e4b0b0fb43fd0677"}, {"problem": 49, "code": "(juxt take drop)", "user": "57e33f6fe4b0bfb2137f5a96"}, {"problem": 49, "code": "#(vector \n       (vec (take %1 %2)) \n       (vec (drop %1 %2)))", "user": "57df309ee4b0bd073c20245f"}, {"problem": 49, "code": "(fn [at xs]\n    (loop [result [] coll xs pos 0]\n      (let [[head & tail ] coll]\n        (if (= pos at)\n          [result coll]\n            (recur (conj result head) tail (inc pos))))))", "user": "57c176abe4b05aa3c4741ca2"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "57e6997ee4b0bfb2137f5af0"}, {"problem": 49, "code": "(fn [rule coll]\n\t(if (> rule 1)\n      (partition-all rule coll)\n      (list\n      \t(first (partition-all rule coll))\n      \t(flatten\n         (concat\n         \t(rest (partition-all rule coll))))))\n)", "user": "57eb2576e4b0bfb2137f5b5c"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "56887bcbe4b0dcc4269f406a"}, {"problem": 49, "code": "#(conj [(take %1 %2)] (take-last (- (count %2) %1) %2))", "user": "57ec3d29e4b0bfb2137f5b77"}, {"problem": 49, "code": "(fn [suu lst]\n  (list\n   (map #(nth lst %) (range 0 suu))\n   (nthrest lst suu)\n   )\n  )", "user": "57e404a3e4b0bfb2137f5ab1"}, {"problem": 49, "code": "(fn split [pos coll] [(vec (take pos coll)) (vec (drop pos coll))])", "user": "57ee804ee4b0bfb2137f5bbb"}, {"problem": 49, "code": "(fn [n col]\n  [(take n col)(drop n col)])", "user": "50a2e3fbe4b029e8bace3629"}, {"problem": 49, "code": "(fn [n a-seq]\n  (list (take n a-seq) (drop n a-seq)))", "user": "574e84e0e4b02ea114799243"}, {"problem": 49, "code": "(juxt take drop)", "user": "57f0f7b8e4b0bfb2137f5bfe"}, {"problem": 49, "code": "(fn [n coll]\n    (let [\n          result [ (take n coll) (drop n coll) ]\n         ]\n      result\n    )\n  )", "user": "532f7e12e4b019098a6f8b4e"}, {"problem": 49, "code": "(fn [i, s] [(take i s) (drop i s)] )", "user": "57eb7a97e4b0bfb2137f5b62"}, {"problem": 49, "code": "(fn [n xs]\n  [(take n xs) (drop n xs)])", "user": "57df2722e4b0bd073c20245e"}, {"problem": 49, "code": "(fn [ n coll] [(take n coll)(drop n coll)])", "user": "57c56d78e4b05aa3c4741ce3"}, {"problem": 49, "code": "#(list (subvec %2 0 %1) (subvec %2 %1 (count %2)))", "user": "574a71b7e4b02ea1147991fb"}, {"problem": 49, "code": "(fn my-split-at\n  [where col]\n  [(take where col)\n   (drop where col)])", "user": "57596ba7e4b02ea11479931a"}, {"problem": 49, "code": "(fn s [i coll]\n  (cons (take i coll) (cons (drop i coll) '())))", "user": "57ee9ffbe4b0bfb2137f5bc2"}, {"problem": 49, "code": "(fn [n s] [(take n s) (drop n s)])", "user": "57b39fbee4b0fbc9809a2783"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "57ed2574e4b0bfb2137f5b93"}, {"problem": 49, "code": "(fn [n v]\n  [(subvec v 0 n) (subvec v n)])", "user": "57e20474e4b0bfb2137f5a82"}, {"problem": 49, "code": "(fn [n col]\n  (loop [i 0 col col \n         res1 [] res2 []]\n    (if (empty? col)\n      (vector res1 res2)\n      (if (<= n i)\n        (recur (inc i) (rest col) res1 (conj res2 (first col)))\n        (recur (inc i) (rest col) (conj res1 (first col)) res2)\n      )\n    )\n  )\n)", "user": "57e396cde4b0bfb2137f5a9e"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "57db2369e4b0bd073c20241f"}, {"problem": 49, "code": "(fn [split input]\n  (loop [cnt 0 remaining input ans [[][]]]\n    (if (empty? remaining)\n      ans\n      (if (< cnt split)\n        (recur (inc cnt) (rest remaining) (vector (conj (get ans 0) (first remaining)) (get ans 1)))\n        (recur (inc cnt) (rest remaining) (vector (get ans 0) (conj (get ans 1) (first remaining))))))))", "user": "5746061ae4b009280f9f2b5b"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "57f6e666e4b0d3187e9008f2"}, {"problem": 49, "code": "(fn [n s] ((juxt #(take n %) #(drop n %)) s))", "user": "56a44067e4b0542e1f8d14da"}, {"problem": 49, "code": "#(vector (into [] (take % %2)) (into [] (drop % %2)))", "user": "57485efee4b009280f9f2b8a"}, {"problem": 49, "code": "(fn [n lst]\n   (vector (vec (take n lst)) (vec (drop n lst)))\n   )", "user": "57f81524e4b0d3187e900913"}, {"problem": 49, "code": "(fn split [n lst]\n    (loop [n1 0 ls lst ls2 '()]\n      (if (= n1 n )  (vector(into [] (reverse ls2)) (into [] ls)) (recur (inc n1) (rest ls) (cons (first ls) ls2 ) ) )))", "user": "57fc08d8e4b0d3187e900988"}, {"problem": 49, "code": "(fn split-seq\n  [n lst]\n    (cons (take n lst) (cons (drop n lst) [])))", "user": "57f8153de4b0d3187e900916"}, {"problem": 49, "code": "(fn parten\n  [n lst]\n   (vector\n      (vec (take n lst))\n      (vec (drop n lst))))", "user": "57fc34f0e4b0d3187e90098e"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5652dd89e4b0f9d632dd8469"}, {"problem": 49, "code": "(fn [at lst]\n  (list (take at lst) (drop at lst)))", "user": "57f8104ce4b0d3187e900910"}, {"problem": 49, "code": "(fn [n lst] [(take n lst) (drop n lst)])", "user": "573d8658e4b05c31a32c0814"}, {"problem": 49, "code": "#(into [] (vector (vec (take % %2)) (vec (drop % %2))))", "user": "52a1b624e4b04e0c58e87bde"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "57f80350e4b0d3187e90090c"}, {"problem": 49, "code": "#(conj [] (take %1 %2) (take-last (- (count %2) %1) %2))", "user": "57f253a3e4b0511f1d294dea"}, {"problem": 49, "code": "(fn [split-point seq]\n  (let [splited (partition-all split-point seq)]\n    (vector (first splited) (apply concat (rest splited)))))", "user": "57e79d8ee4b0bfb2137f5afe"}, {"problem": 49, "code": "(fn splitt\n  [n lst]\n  (loop [a lst\n         b ()\n         x 0]\n    (if(= x n)\n        (vec (reverse (vector (vec a) (vec (reverse b)))))\n        (recur (rest a)(cons (first a) b)(inc x)))))", "user": "57f814fbe4b0d3187e900911"}, {"problem": 49, "code": "(fn [n coll]\n  [(vec (take n coll))\n   (vec (drop n coll))])", "user": "55cc6c35e4b0e31453f64a10"}, {"problem": 49, "code": "(fn my-split\n\t[n lst]\n\t(cons (take n lst) (cons (drop n lst) '())))", "user": "57f81544e4b0d3187e900917"}, {"problem": 49, "code": "(fn [n lst] \n  (vector (take n lst) (drop n lst))\n  )", "user": "57f81045e4b0d3187e90090f"}, {"problem": 49, "code": "(fn [s xs] [(take s xs) (drop s xs)])", "user": "57ec8d1de4b0bfb2137f5b7f"}, {"problem": 49, "code": "(fn [i c] [(vec (take i c))(vec (drop i c))])", "user": "57efb389e4b0bfb2137f5bdb"}, {"problem": 49, "code": "(fn [n xs]\n (let [es (empty xs)]\n  (conj \n    es \n    (into es (take n xs))\n    (into es (drop n xs)))\n))", "user": "57f9011ee4b0d3187e900935"}, {"problem": 49, "code": "(juxt take drop)", "user": "5800edaae4b0a837a8b30c48"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "57f52d3be4b0903ccab3dce7"}, {"problem": 49, "code": "(fn split\n  [n seqn]\n  (concat\n    (->>\n      (map-indexed vector (cons '0 seqn))\n      (take-while #(<= (first %) n))\n      (mapcat #(rest %))\n      (rest)\n      (list))\n    (->>\n      (map-indexed vector (cons '0 seqn))\n      (drop-while #(<= (first %) n))\n      (mapcat #(rest %))\n      (list))))", "user": "57f81534e4b0d3187e900915"}, {"problem": 49, "code": "(fn [x coll] (conj [(take x coll)] (drop x coll)))", "user": "57b9f35be4b0fbc9809a27f9"}, {"problem": 49, "code": "(fn [x lst]\n  [(take x lst) (drop x lst)])", "user": "57f8151ce4b0d3187e900912"}, {"problem": 49, "code": "(fn [n lst]\n  (loop [lst1 lst\n         lst2 ()]\n    (if (= (count lst2) n)\n      (vec (map vec (reverse (cons lst1 (list (reverse lst2))))))\n      (recur (rest lst1) (cons (first lst1) lst2)))))", "user": "57f81549e4b0d3187e900918"}, {"problem": 49, "code": "(fn [n lst] \n  (vector (take n lst) (drop n lst)))", "user": "57fedf07e4b0d3187e9009dc"}, {"problem": 49, "code": "(juxt take drop)", "user": "5254b45fe4b0541d1855b9a0"}, {"problem": 49, "code": "(fn \n  [x y]\n  [(take x y) (drop x y)] \n  )", "user": "57f81532e4b0d3187e900914"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "57fa7c93e4b0d3187e900963"}, {"problem": 49, "code": "(fn [i xs] (vector (take i xs) (drop i xs)))", "user": "57fdd1cfe4b0d3187e9009bf"}, {"problem": 49, "code": "(fn [x y]\n  [(take x y) (drop x y)])", "user": "57ffeb62e4b0a837a8b30c2d"}, {"problem": 49, "code": "#(vector (take %1 %2) (take-last (- (count %2) %1) %2))", "user": "57c94c54e4b05aa3c4741d2c"}, {"problem": 49, "code": "(fn\n  [n lst]\n  [(take n lst) (drop n lst)])", "user": "57f81569e4b0d3187e900919"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "57fd7344e4b0d3187e9009b6"}, {"problem": 49, "code": "(fn [n lst]\n  (concat (vector (take n lst)) (vector (drop n lst))))", "user": "580570a2e4b0a837a8b30cc7"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "580558cde4b0a837a8b30cc4"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "57ee82b1e4b0bfb2137f5bbd"}, {"problem": 49, "code": "(fn split\n  [a col]\n  (let [b (count (drop a col)) ]\n    (vector\n       (into [] (drop-last b col)) \n       (into [] (drop a col)) )))", "user": "57fe2d6fe4b0d3187e9009c8"}, {"problem": 49, "code": "(fn [n coll]\n  [ (take n coll) (drop n coll)])", "user": "5803cd8fe4b0a837a8b30c96"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "55c5b55fe4b0e31453f649b5"}, {"problem": 49, "code": "(fn [nin coll]\n  (loop\n    [n nin seta [] setb coll]\n    (if (= 0 n)\n      [seta setb]\n      (recur (dec n) \n             (conj seta (first setb))\n             (rest setb)))))", "user": "57f85b36e4b0d3187e900924"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "57f8ba80e4b0d3187e90092f"}, {"problem": 49, "code": "(fn [n seq]\n  (list (take n seq) (drop n seq)))", "user": "57fc0719e4b0d3187e900987"}, {"problem": 49, "code": "#(->> (vector (drop % %2))\n      (concat (vector (take % %2))))", "user": "5405885ee4b0addc1aec6668"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "57b9fb56e4b0fbc9809a27fa"}, {"problem": 49, "code": "(fn [ct xs] [(take ct xs) (drop ct xs)])", "user": "56c21eafe4b05cc29241ee7e"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "54d893a4e4b0a52adc2e2039"}, {"problem": 49, "code": "(fn [n s]\n  ((fn r[n x y]\n     (if (= n 0)\n       [x y]\n       (r (- n 1)\n          (conj x (first y))\n          (rest y)))) n [] s))", "user": "53e06f81e4b0d874e779ae4c"}, {"problem": 49, "code": "(fn [i coll]\n  [(subvec coll 0 i)\n   (subvec coll i)])", "user": "580bd81ee4b0849f6811b711"}, {"problem": 49, "code": "(fn [n coll] [n coll]\n    [(take n coll) (drop n coll)])", "user": "57ee41a6e4b0bfb2137f5baf"}, {"problem": 49, "code": "(fn [n c] [(take n c)(drop n c)])", "user": "57ee41eae4b0bfb2137f5bb0"}, {"problem": 49, "code": "#(vec [(take %1 %2) (drop %1 %2)])", "user": "57ee46c7e4b0bfb2137f5bb3"}, {"problem": 49, "code": "#(vec[(take %1 %2)(drop %1 %2)])", "user": "57ee432de4b0bfb2137f5bb2"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "57ef793de4b0bfb2137f5bd8"}, {"problem": 49, "code": "(fn [x col] (vector (take x col) (nthrest col x)))", "user": "57ee2b3ee4b0bfb2137f5bac"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "580c8fcee4b0849f6811b721"}, {"problem": 49, "code": "(fn [n l] [(take n l) (drop n l)])", "user": "57ed19a3e4b0bfb2137f5b8e"}, {"problem": 49, "code": "(fn my-split-at [n col]\n  [(take n col) (drop n col)])", "user": "57a4fa50e4b0a966079561f1"}, {"problem": 49, "code": "(fn [n l] [(take n l) (drop n l)])", "user": "5801eed1e4b0a837a8b30c63"}, {"problem": 49, "code": "(fn split-seq [num lst]\n  (loop [fst-part [] res lst res-num num]\n    (if (= res-num 0)\n      (vector fst-part (vec res))\n      (recur (conj fst-part (first res)) (rest res) (dec res-num)))))", "user": "570e6974e4b0b0fb43fd06ef"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "580fbaade4b0f478707a05c0"}, {"problem": 49, "code": "(fn [n c] [(take n c)(drop n c)])", "user": "580d7bdae4b0849f6811b73c"}, {"problem": 49, "code": "(fn [n col]\n  [(take n col) (drop n col)])", "user": "57839ae9e4b0ebec4cfb74b8"}, {"problem": 49, "code": "#(split-with (complement #{(get %2 %1)}) %2)", "user": "580d7de3e4b0849f6811b73d"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "54ba9ee8e4b0ed20f4ff6eb7"}, {"problem": 49, "code": ";(fn [n col]\n;  [(take n col), (drop n col)])\n\n#(vector (take %1 %2) (drop %1 %2))", "user": "57e4dbcbe4b0bfb2137f5ac3"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "563c6ebae4b0bfe05bf11834"}, {"problem": 49, "code": "(fn sepelit [num coll]\n                 (vec (map vec (cons (take num coll) (list (drop num coll))))))", "user": "57bbc9bde4b05aa3c4741c31"}, {"problem": 49, "code": "#(vector (take %1 %2)(drop %1 %2))", "user": "57f3b841e4b0511f1d294e0f"}, {"problem": 49, "code": "(fn [cnt lst][(take cnt lst) (drop cnt lst)])", "user": "58186016e4b0c0e9c07b83ad"}, {"problem": 49, "code": "#(conj[](take %1 %2)(drop %1 %2))", "user": "580d7e53e4b0849f6811b73e"}, {"problem": 49, "code": "(fn [x coll]\n  [(take x coll) (drop x coll)])", "user": "55634f38e4b0c656e3ff17e8"}, {"problem": 49, "code": "(fn [n s]\n    (conj [] (take n s) (nthrest s n))\n    )", "user": "57985f98e4b039eba2ecb114"}, {"problem": 49, "code": "#(vector (vec (take %1 %2)) (vec (drop %1 %2)))", "user": "58047205e4b0a837a8b30ca9"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "58134ba8e4b0f478707a060b"}, {"problem": 49, "code": "#(vec [(take %1 %2) (drop %1 %2)])", "user": "5508a292e4b06e50f9beb10f"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "581b19e7e4b04b46fc4b0ec4"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "563e1c0ee4b0da801c4e4665"}, {"problem": 49, "code": "(fn  [x sq]\n        (vector (take x sq) (drop x sq)))", "user": "581a5fdbe4b0e114eb51a002"}, {"problem": 49, "code": "(fn [n col] (\n        loop[tg '() src col i n] (if (= i 0) (list tg src)\n\t\t\t(recur (concat tg (list(first src))) (rest src) (- i 1)))))", "user": "575ddfd1e4b02ea11479938d"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "581e61b0e4b04b46fc4b0f28"}, {"problem": 49, "code": "(fn split-seq\n  [pos s]\n  (loop [[h & t] s\n         count pos\n         accum []]\n    (if (= count 1)\n        [(conj accum h) t]\n        (recur t (- count 1) (conj accum h)))))", "user": "58152157e4b0f478707a0631"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5812eb8fe4b0f478707a0602"}, {"problem": 49, "code": "#(let [x (take % %2) y (drop % %2)] [x y])", "user": "58173722e4b0c0e9c07b838a"}, {"problem": 49, "code": "(fn [pos xs] [(take pos xs) (drop pos xs)])", "user": "5821b018e4b04b46fc4b0f80"}, {"problem": 49, "code": ";(fn [n coll] [(take n coll) (drop n coll)])\n(juxt take drop)", "user": "57ee42c4e4b0bfb2137f5bb1"}, {"problem": 49, "code": ";(fn [n coll] \n;  (let [x (partition-all n coll)\n;        y (vec (first x))\n;        z (vec (flatten (rest x)))]\n;    [y z]))\n\n(fn [n coll]\n  [ (take n coll) (drop n coll) ])", "user": "56629a7de4b0e91d5f5c5649"}, {"problem": 49, "code": "(fn [n xs] [(take n xs) (drop n xs)])", "user": "5687b6abe4b0dcc4269f4061"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "56193c6ee4b053970a773af2"}, {"problem": 49, "code": "#(vector (vec (take %1 %2)) (vec (drop %1 %2)))", "user": "581829cce4b0c0e9c07b83a9"}, {"problem": 49, "code": "(fn [a xs] (list (take a xs) (drop a xs)))", "user": "58171a9ae4b0c0e9c07b8387"}, {"problem": 49, "code": "(fn\n  [index s]\n  (loop [ss s r1 [] r2 [] i 0]\n    (if(empty? ss)\n      [r1 r2]\n      (if (< i index)\n        (recur (rest ss) (conj r1 (first ss)) r2 (inc i))\n        (recur (rest ss) r1 (conj r2 (first ss)) (inc i))))))", "user": "581b4d3be4b04b46fc4b0ec6"}, {"problem": 49, "code": ";#(vector \n;  (take %1 %2)\n;  (drop %1 %2))\n;(fn [i xs]\n;  (vector\n;   (take i xs)\n;   (drop i xs)))\n(juxt take drop)", "user": "56255e2de4b00a550fc90297"}, {"problem": 49, "code": "#(vector (take %1 %2) (take-last (- (count %2) %1) %2))", "user": "581e8b86e4b04b46fc4b0f2b"}, {"problem": 49, "code": "#(vector (vec (take %1 %2)) (vec (drop %1 %2)))", "user": "57465429e4b009280f9f2b60"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "58225587e4b04b46fc4b0f94"}, {"problem": 49, "code": "#(conj [(take %1 %2)] (drop %1 %2))", "user": "58247423e4b051871117bec5"}, {"problem": 49, "code": "(fn [n col] [(take n col)(drop n col)])", "user": "567d75ebe4b05957ce8c61c9"}, {"problem": 49, "code": "(fn [x y] (vector (take x y) (drop x y)))", "user": "581a66b1e4b0e114eb51a003"}, {"problem": 49, "code": "(fn [n coll]\n   (vector\n     (take n coll)\n     (drop n coll)))", "user": "55b2505be4b0da326a65cf7d"}, {"problem": 49, "code": "#(vector (take %1 %2) (nthrest %2 %1))", "user": "569fc70ee4b0542e1f8d1499"}, {"problem": 49, "code": "#(conj [] (take %1 %2) (nthnext %2 %1))", "user": "58224c53e4b04b46fc4b0f92"}, {"problem": 49, "code": "(fn [x ys] \n  (vector \n\t\t(subvec ys 0 x)\n   \t\t(subvec ys x)\n   )\n  )", "user": "5821dbb9e4b04b46fc4b0f86"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5820cca0e4b04b46fc4b0f62"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5710140fe4b09c608db7042e"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "507ff90fe4b089ade05efbd9"}, {"problem": 49, "code": "(fn [i c] [(take i c) (take-last (- (count c) i) c)])", "user": "500e3238e4b068062f6e8d8f"}, {"problem": 49, "code": "(juxt take drop)", "user": "581dad0ae4b04b46fc4b0f17"}, {"problem": 49, "code": "(fn [n c]\n    (list (take n c) (drop n c)))", "user": "57ae3345e4b0fbc9809a271e"}, {"problem": 49, "code": "(fn [n coll]\n   (list (take n coll)\n         (drop n coll)))", "user": "5808ee16e4b0a837a8b30d16"}, {"problem": 49, "code": "(fn [n my-seq]\n    (reduce-kv\n        (fn [init key value]\n            (if (< key n)\n                [(conj (first init) value) []]\n                [(first init) (conj (last init) value)]))\n        [[] []] my-seq))", "user": "5784ff88e4b0ebec4cfb74d4"}, {"problem": 49, "code": "(fn [n coll]\n  (map #(into [] %)\n       [(keep-indexed #(if (< %1 n) %2) coll)\n        (keep-indexed #(if (>= %1 n) %2) coll)]))", "user": "5665ef78e4b0e91d5f5c5664"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "56f514cee4b046a417f92068"}, {"problem": 49, "code": "#(into (vector (subvec %2 0 %1)) (vector (subvec %2 %1)))", "user": "582c526ae4b051871117bf88"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "52860baae4b0239c8a67ae09"}, {"problem": 49, "code": "(fn [n s] (list (take n s) (drop n s)))", "user": "58299e03e4b051871117bf46"}, {"problem": 49, "code": "(fn [n s] (list (take n s) (drop n s)))", "user": "582835cbe4b051871117bf30"}, {"problem": 49, "code": "(fn [pos s]\n  (let [n (count s)\n        first-part (take pos s)\n        second-part (take-last (- n pos) s)]\n    [first-part second-part]))", "user": "5813e208e4b0f478707a061b"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "55632016e4b0c656e3ff17e4"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "58303fc3e4b051871117c006"}, {"problem": 49, "code": "(fn [x coll] [(vec (take x coll))(vec (drop x coll))])", "user": "582290b5e4b04b46fc4b0fa0"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "58327a08e4b089d5ab817c7c"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5829d588e4b051871117bf4a"}, {"problem": 49, "code": "(fn my-split [n coll]\n  (list (take n coll) (drop n coll)))", "user": "525d44bfe4b0cb4875a45d6d"}, {"problem": 49, "code": "(fn test13 [n col]\n  (reverse (conj (list (take n col)) (drop n col))))", "user": "5804d5afe4b0a837a8b30cad"}, {"problem": 49, "code": "(fn [n s]\n  [ (take n s)\n    (drop n s) ])", "user": "5779556de4b0979f8965166e"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "582e0afde4b051871117bfd5"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "57addf3ae4b0b8559636fca4"}, {"problem": 49, "code": "#(vector (subvec %2 0 %1) (subvec %2 %1))", "user": "58335c22e4b089d5ab817c9a"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "583166c1e4b051871117c025"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "58375635e4b089d5ab817d14"}, {"problem": 49, "code": "(fn [x y] [(take x y)\n  (drop x y)])", "user": "50d0d2dde4b00b15ecee9768"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "58384bc4e4b089d5ab817d27"}, {"problem": 49, "code": "(fn [n s] [ (take n s) (drop n s)])", "user": "582dc562e4b051871117bfcb"}, {"problem": 49, "code": "(fn [n x] (partition-by #(> n (.indexOf x %)) x))", "user": "5835bc73e4b089d5ab817ce9"}, {"problem": 49, "code": "(juxt take drop)", "user": "5835cb06e4b089d5ab817cea"}, {"problem": 49, "code": "(fn [x coll]\n  (reduce-kv (fn [[s f] k v]\n               (if (> x k) [(conj s v) f]\n                   [s (conj f v)])\n               ) [[][]] coll))", "user": "55c66ffee4b0e31453f649c2"}, {"problem": 49, "code": "(fn [n l]  [ (take n l) (drop n l) ])", "user": "4e6a5728535d8ccf87e9fecf"}, {"problem": 49, "code": "(fn [i xs] [(take i xs) (drop i xs)])", "user": "583a360de4b089d5ab817d4f"}, {"problem": 49, "code": "#(cons (take %1 %2) (list (drop %1 %2)))", "user": "57235dc4e4b0c5bde472c0e2"}, {"problem": 49, "code": "(fn [n xs] \n  [(take n xs) (drop n xs)]\n  )", "user": "58334d18e4b089d5ab817c97"}, {"problem": 49, "code": "(fn [x coll]\n  (conj [] (into (empty coll) (take x coll)) (into (empty coll) (drop x coll))))", "user": "58217fbde4b04b46fc4b0f78"}, {"problem": 49, "code": "(fn [n coll]\n  (vector (take n coll) (drop n coll)))", "user": "583e02fce4b089d5ab817da5"}, {"problem": 49, "code": "#(vector (take %1 %2) (nthnext %2 %1))", "user": "5835a222e4b089d5ab817ce5"}, {"problem": 49, "code": "(fn [i coll]\n  (loop [left [] right coll index 0]\n    (if (= index i)\n      (conj [] left right)\n       (recur (conj left (first right)) (rest right) (inc index))\n      )\n    \n    )\n  \n  \n  )", "user": "583667c7e4b089d5ab817cfb"}, {"problem": 49, "code": "#(vector (take % %2) (nthnext %2 %))", "user": "58391c94e4b089d5ab817d35"}, {"problem": 49, "code": "(juxt take drop)", "user": "583e27e2e4b089d5ab817daa"}, {"problem": 49, "code": "; (fn [pred coll]\n;  [(take pred coll)(drop pred coll)])\n\n  (fn [k a-seq]\n    (list\n      (take k a-seq)\n      (drop k a-seq)))", "user": "565487dce4b0f9d632dd8482"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "583c8bd4e4b089d5ab817d81"}, {"problem": 49, "code": "(fn [x y]\n  (loop [ list1 []\n          list2 []\n          index 1\n          src y ]\n    (cond (empty? src) (list list1 list2)\n          (<= index x) (recur (concat list1 (list (first src))) list2 (inc index) (rest src))\n          :else (recur list1 (concat list2 (list (first src))) (inc index) (rest src)))))", "user": "582589b2e4b051871117bedd"}, {"problem": 49, "code": "(fn [a b] (vector (subvec b 0 a) (subvec b a)))", "user": "5810b899e4b0f478707a05d8"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "582d7569e4b051871117bfbe"}, {"problem": 49, "code": "(fn [arg1 coll] (let [toret []] (conj (conj toret (take arg1 coll)) (drop arg1 coll)) ))", "user": "5804b491e4b0a837a8b30cac"}, {"problem": 49, "code": "(fn [n v] (list (take n v) (drop n v)))", "user": "55a21f1ce4b0acc240e3151f"}, {"problem": 49, "code": "#(conj [] (take %1 %2) (drop %1 %2))", "user": "584917a1e4b089d5ab817ec9"}, {"problem": 49, "code": "(juxt take drop)", "user": "54d341f7e4b0e8a36923e603"}, {"problem": 49, "code": "(fn [n coll]\n  [(vec (take n coll)) (vec (take-last (- (count coll) n) coll))])", "user": "57e572b5e4b0bfb2137f5ad7"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "54dbcbbde4b024c67c0cf774"}, {"problem": 49, "code": "(fn\n  [n collection]\n  (conj [] (take n collection) (drop n collection)))", "user": "5843b231e4b089d5ab817e3d"}, {"problem": 49, "code": "#(loop [s %2\n          c []\n          p %1]\n    (if (= (count c) p)\n      (vector c s)\n      (recur (rest s) (conj c (first s)) p)))", "user": "579aff09e4b05b1deef9ade7"}, {"problem": 49, "code": "(fn [n x] [(take n x) (drop n x)])", "user": "584dadebe4b0b7285a6f4e44"}, {"problem": 49, "code": "(fn spli[n s](cons (take n s) [(drop n s)]))", "user": "5849ac5fe4b089d5ab817ed7"}, {"problem": 49, "code": "(fn seq-split\n  [n xs]\n  (conj [] (take n xs) (drop n xs)))", "user": "57e9a77ae4b0bfb2137f5b35"}, {"problem": 49, "code": "(fn [split-index col] \n  [(take split-index col)\n   (drop split-index col)\n   ]\n  )", "user": "57073037e4b0b0fb43fd0689"}, {"problem": 49, "code": "(fn [n seq]\n  [(take n seq)(drop n seq)])", "user": "583ff3afe4b089d5ab817dda"}, {"problem": 49, "code": "(juxt take drop)", "user": "567b2f20e4b05957ce8c61a2"}, {"problem": 49, "code": "(fn [n s] (list (take n s) (drop n s)))", "user": "564dc08ae4b0284900eef68f"}, {"problem": 49, "code": "(fn split-seq [n coll]\n  (vector (take n coll) (drop n coll)))", "user": "53bd476ae4b0d9a98559a6ca"}, {"problem": 49, "code": "(fn [b a] [(take b a) (drop b a)])", "user": "583e1558e4b089d5ab817da9"}, {"problem": 49, "code": "#(vector (take % %2) (take-last (- (count %2) %) %2))", "user": "58524875e4b0b7285a6f4ead"}, {"problem": 49, "code": "(fn [pos coll] [(take pos coll) (drop pos coll)])", "user": "580e2941e4b0849f6811b74e"}, {"problem": 49, "code": "(fn [tk xs] \n  (vector \n    (into [] (take tk xs)) \n    (into [] (drop tk xs))\n  )\n)", "user": "583dacc2e4b089d5ab817d9f"}, {"problem": 49, "code": "(fn\n  [idx coll]\n  (loop [index 1\n         first-half []\n         second-half []]\n    (if (> index (count coll))\n      (into [] (reverse (conj [first-half] second-half)))\n      (let [el (coll (- index 1))]\n        (if (< idx index)\n          (recur\n           (+ index 1)\n           (conj first-half el)\n           second-half)\n          (recur\n           (+ index 1)\n           first-half\n           (conj second-half el)))))))", "user": "55a5e2f7e4b0acc240e31550"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "57dafe97e4b0bd073c20241c"}, {"problem": 49, "code": "(fn splat\n  [idx coll]\n  (vector (take idx coll)  (drop idx coll)))", "user": "563f4c47e4b08d4f616f5ed2"}, {"problem": 49, "code": "(fn [n col] (concat (vector (take n col)) (vector (drop n col))))", "user": "5766fbb7e4b0a07e8fc180b6"}, {"problem": 49, "code": "#(list (take %1 %2) (take-last (- (count %2) %1) %2))", "user": "583c4482e4b089d5ab817d7e"}, {"problem": 49, "code": "(fn [n s] (list (take n s) (nthrest s n)))", "user": "585030cbe4b0b7285a6f4e78"}, {"problem": 49, "code": "#(cons (take %1 %2) (list (drop %1 %2)))", "user": "58408643e4b089d5ab817deb"}, {"problem": 49, "code": "(fn [n coll] (vector (into (vector) (take n coll)) (into (vector)  (drop n coll))))", "user": "5832be57e4b089d5ab817c86"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "585c5b21e4b0f14aab7c8786"}, {"problem": 49, "code": "(fn [parts lis]\n  (list (take parts lis) (drop parts lis)))", "user": "56b6e354e4b0982f16b37e41"}, {"problem": 49, "code": "(fn [n coll] (vector (take n coll) (drop n coll)))", "user": "58562083e4b0f14aab7c86eb"}, {"problem": 49, "code": "#(conj [] (take % %2) (drop % %2))", "user": "584278e1e4b089d5ab817e19"}, {"problem": 49, "code": "#(conj [] (take %1 %2) (drop %1 %2))", "user": "585e2e77e4b0f14aab7c87ac"}, {"problem": 49, "code": "(juxt take drop)", "user": "57d0e185e4b0bd073c202360"}, {"problem": 49, "code": "#(conj [] (take %1 %2) (drop %1 %2))", "user": "585d40afe4b0f14aab7c8798"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll)(drop n coll)])", "user": "50b25edae4b03ea88043355e"}, {"problem": 49, "code": "(fn \n\t[n seqn] \n\t(reduce \n\t\t(fn [[left, right] nex] \n\t\t\t(if \n\t\t\t\t(<(count left) n) \n\t\t\t\t[(conj left nex) right]  \n\t\t\t\t[left (conj right nex)])\n\t\t\t)\n\t\t\n\t\t\t[[] []] seqn)\n\t)", "user": "585bcd51e4b0f14aab7c8771"}, {"problem": 49, "code": "(fn [x y] (vector (take x y) (drop x y)))", "user": "584f5133e4b0b7285a6f4e61"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5853582fe4b0b7285a6f4ec5"}, {"problem": 49, "code": "(fn [x coll] [(take x coll) (drop x coll)])", "user": "585481e0e4b07779d46863fe"}, {"problem": 49, "code": "#(vector \n       (vec (take %1 %2)) \n       (vec (drop %1 %2)))", "user": "5858f0cce4b0f14aab7c8727"}, {"problem": 49, "code": "#(loop [in %2\n       out1 []\n       out2 []\n       c 0]\n  (if (empty? in)\n    [out1 out2]\n    (recur (rest in)\n           (if (>= c %1) out1 (conj out1 (first in)))\n           (if (>= c %1) (conj out2 (first in)) out2)\n           (+ c 1)\n           )\n    )\n  )", "user": "57c33eeae4b05aa3c4741cbc"}, {"problem": 49, "code": "(fn split-seq [at coll]\n  (loop [idx 0 first-part [] second-part coll]\n    (if (= idx at)\n      [first-part second-part]\n      (recur (inc idx) (conj first-part (first second-part)) (rest second-part)))))", "user": "5852801ee4b0b7285a6f4eb1"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "56f9b953e4b07572ad1a88b9"}, {"problem": 49, "code": "(fn [count_ sequence]\n  ((fn my-split [result index count_ rest_]\n     (if (empty? rest_)\n       (reverse rest_)\n       (if (< index count_)\n         (my-split (conj result (first rest_))\n                   (inc index)\n                   count_\n                   (next rest_))\n         (list (reverse result) rest_))))\n   '() 0 count_ sequence))", "user": "58637f03e4b0f14aab7c881e"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "51456858e4b0e88796073408"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "58566b42e4b0f14aab7c86f4"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "585e7c60e4b0f14aab7c87b3"}, {"problem": 49, "code": "(fn [n c] [(take n c) (drop n c)])", "user": "586615e6e4b0f14aab7c8858"}, {"problem": 49, "code": "(fn [x y] (list (take x y) (drop x y)))", "user": "5867f895e4b0f14aab7c8886"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "54f26266e4b024c67c0cf8c5"}, {"problem": 49, "code": "(fn[n coll] [(vec (take n coll)) (vec (drop n coll))])", "user": "56acfee5e4b03c432f18734f"}, {"problem": 49, "code": "#(list (subvec %2 0 %) (subvec %2 %))", "user": "56b1b59be4b0982f16b37df2"}, {"problem": 49, "code": "#(vector\n   (take %1 %2)\n   (drop %1 %2))", "user": "5863eda2e4b0f14aab7c8836"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "582cbf48e4b051871117bfa6"}, {"problem": 49, "code": "(fn\n  [n coll]\n  [(take n coll) (drop n coll)])", "user": "58543a59e4b07779d46863f5"}, {"problem": 49, "code": "(juxt take drop)", "user": "586b6f13e4b01531a375e959"}, {"problem": 49, "code": "(fn [x y] [(take x y) (drop x y)])", "user": "4e11b92a535d04ed9115e7cb"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "586bc870e4b01531a375e964"}, {"problem": 49, "code": "(fn [c n]\n    (let [parts (partition c c nil n)]\n      [(first parts) (apply (partial concat []) (rest parts))]))", "user": "586b6753e4b01531a375e956"}, {"problem": 49, "code": "(fn split-sequence\n  [n coll]\n  (loop [f [] r coll]\n    (if (= n (count f))\n      [f r]\n      (recur (conj f (first r)) (rest r)))))", "user": "547bf82de4b0c51c1f4d72e1"}, {"problem": 49, "code": "(fn [n coll]\n    [(take n coll) (drop n coll)]\n    )", "user": "52dc7344e4b09f7907dd13cf"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5854d1c0e4b07779d468640a"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5458c74de4b01be26fd74623"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5857d27de4b0f14aab7c8710"}, {"problem": 49, "code": "(fn [n a] [(take n a) (nthrest a n)])", "user": "5866b999e4b0f14aab7c886b"}, {"problem": 49, "code": "#(vec (list (vec (take %1 %2)) (vec (drop %1 %2))))", "user": "586e47dee4b01531a375e9a9"}, {"problem": 49, "code": "(fn [n xs](list (take n xs) (drop n xs)))", "user": "55597b84e4b0deb715856e36"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "586b6a0ae4b01531a375e957"}, {"problem": 49, "code": "(fn [at col] (loop [i 1 col col l []] (if (> i at) (list l col) (recur (inc i) (rest col) (conj l (first col))))))", "user": "584d8724e4b0b7285a6f4e3e"}, {"problem": 49, "code": "(fn [n l] (list (take n l) (drop n l)))", "user": "4f213e2ee4b0d66497709fcf"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "587294f0e4b01531a375ea1e"}, {"problem": 49, "code": "(fn [n c] [(take n c) (drop n c)])", "user": "56049986e4b0c80df0ca2662"}, {"problem": 49, "code": "(fn [n s]\n   (vector (take n s)\n         (drop n s)))", "user": "5840c068e4b089d5ab817df8"}, {"problem": 49, "code": "(fn [idx v]\n  [(subvec v 0 idx) (subvec v idx (count v))])", "user": "58748ea8e4b01531a375ea54"}, {"problem": 49, "code": "(fn [n coll]\n  (let [size (count coll)]\n    (into [] [(take n coll) (take-last (- size n) coll)])))", "user": "54012b48e4b0de5c41848620"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "58740c18e4b01531a375ea49"}, {"problem": 49, "code": "(fn [x coll] [(take x coll)(drop x coll)])", "user": "5842d06be4b089d5ab817e22"}, {"problem": 49, "code": "(fn [n s] [(take n s) (drop n s)])", "user": "5879d577e4b01531a375ead8"}, {"problem": 49, "code": "#(list (take %1 %2) (nthrest %2 %1))", "user": "5727031ee4b0c5bde472c12f"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "572fdecae4b0cd1946bd0f9e"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "563c7f98e4b0bfe05bf11836"}, {"problem": 49, "code": "(fn f\n  ([n coll] (f n coll 1 []))\n  ([n coll i acc]\n   (if (= i n)\n     (vector (conj acc (first coll)) (rest coll))\n     (f n (rest coll) (+ 1 i) (conj acc (first coll))))))", "user": "5875daaee4b01531a375ea74"}, {"problem": 49, "code": "(fn [n xs]\n  [(take n xs) (drop n xs)])", "user": "4e7be091535db169f9c796ba"}, {"problem": 49, "code": "(fn [x y]\n  [(take x y) (drop x y)])", "user": "57fbd83ee4b0d3187e90097b"}, {"problem": 49, "code": "(juxt take drop)", "user": "5872935ce4b01531a375ea1d"}, {"problem": 49, "code": "(fn [at coll]\n  (let [left (take at coll)\n        right (drop at coll)]\n    [left right]))", "user": "587100d6e4b01531a375e9f0"}, {"problem": 49, "code": "(fn [n xs] [(subvec xs 0 n) (subvec xs n)])", "user": "53b42472e4b047364c0444b2"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "50385746e4b0803468ea2c6d"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "58800fd4e4b0f1effa3b7606"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5880e38fe4b0f1effa3b7625"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "587ee260e4b052da650a6353"}, {"problem": 49, "code": "(juxt take drop)", "user": "5881335ce4b0f1effa3b762e"}, {"problem": 49, "code": "(fn [n l]\n  (vector (take n l) (drop n l)))", "user": "5883584ae4b0f1effa3b7674"}, {"problem": 49, "code": "(fn [n x]\n  [(take n x) (drop n x)])", "user": "57ea2c91e4b0bfb2137f5b42"}, {"problem": 49, "code": "(fn [n col]\n  [(take n col)\n   (drop n col)])", "user": "58852909e4b0f1effa3b76af"}, {"problem": 49, "code": "(fn [x y] (loop [elems x\n                 lst y\n                 idx 0\n                 acc1 []]\n            (if (= idx elems)\n               (cons acc1 (cons lst []))\n               (recur elems (next lst) (inc idx) (conj acc1 (first lst)))\n             )\n            )\n  )", "user": "5877e40ee4b01531a375eaab"}, {"problem": 49, "code": "#(vector (subvec %2 0 %) (subvec %2 %))", "user": "58859f82e4b0f1effa3b76bb"}, {"problem": 49, "code": "#(conj [] (vec (first (partition-all %1 %1 %2))) (vec (apply concat (rest (partition-all %1 %1 %2)))))", "user": "587f8393e4b0f1effa3b75f2"}, {"problem": 49, "code": "(fn [n l]\n  [(take n l) (drop n l)])", "user": "58844d43e4b0f1effa3b7696"}, {"problem": 49, "code": "(fn [n s]\n  (vector (take n s) (subvec s n)))", "user": "5865c8f0e4b0f14aab7c884e"}, {"problem": 49, "code": "(fn [c xs]\n    [(take c xs) (drop c xs)])", "user": "500d3160e4b05f7c30cfa6a1"}, {"problem": 49, "code": "(fn my-split-at [n col]\n  (letfn [(do-split-at [n [head tail]] \n            (if (= n 0)\n              [head tail]\n              (do-split-at \n                (- n 1)\n                (vector\n                  (conj head (first tail))\n                  (apply vector (next tail))))))]\n            (do-split-at n [(vector) col])))", "user": "5887518ae4b0f1effa3b76f5"}, {"problem": 49, "code": "(fn [n xs]\n  [(take n xs)\n   (drop n xs)])", "user": "56403765e4b08d4f616f5edc"}, {"problem": 49, "code": "(fn [x xs] [(take x xs) (drop x xs)])", "user": "58840023e4b0f1effa3b768b"}, {"problem": 49, "code": "(fn [n coll]\n  (cons (take n coll) (cons (drop n coll) '())))", "user": "4fb85651e4b081705acca2d7"}, {"problem": 49, "code": "(fn [n, col] [(take n col) (drop n col)])", "user": "5876c0c5e4b01531a375ea8e"}, {"problem": 49, "code": "(juxt take drop)", "user": "582a2d4fe4b051871117bf55"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "52f426fce4b05e3f0be25f1e"}, {"problem": 49, "code": "#_(fn [n coll] [(take n coll) (drop n coll)])\n(juxt take drop)", "user": "4fe49706e4b0e8f79898feb7"}, {"problem": 49, "code": "(fn [i xs] [(take i xs) (drop i xs)])", "user": "5884e807e4b0f1effa3b76a6"}, {"problem": 49, "code": "(fn [n coll] [(vec (take n coll)) (vec (drop n coll))])", "user": "578d459ee4b0ebec4cfb7567"}, {"problem": 49, "code": "(fn [i coll] [(take i coll) (drop i coll)])", "user": "569f7bc2e4b0542e1f8d1494"}, {"problem": 49, "code": "(fn [n s] \n  (loop [s s i 0 a [] b []] \n    (if (empty? s) \n      [b a]\n      (recur \n       (rest s)\n       (inc i) \n       (if (< i n) a (conj a (first s)))\n       (if (>= i n) b (conj b (first s))) ))))", "user": "587c59d1e4b01531a375eb17"}, {"problem": 49, "code": "(fn [at seq] [(take at seq) (drop at seq)])", "user": "5885bea8e4b0f1effa3b76bf"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "585dbe41e4b0f14aab7c879f"}, {"problem": 49, "code": "#(identity [(take %1 %2) (drop %1 %2)])", "user": "5650082fe4b0284900eef6b7"}, {"problem": 49, "code": "(fn [n coll]\n  [(into [] (take n coll)) (into [] (drop n coll))])", "user": "585a7cb2e4b0f14aab7c874e"}, {"problem": 49, "code": ";#(vector (vec (take %1 %2)) (vec (drop %1 %2)))\n\n(juxt take drop)", "user": "588e6a17e4b00487982d518c"}, {"problem": 49, "code": "(fn [n c]\n  (cons (take n c) (cons (drop n c) '())))", "user": "57ab41dde4b0b8559636fc79"}, {"problem": 49, "code": "#(cons (take %1 %2) (vector (drop %1 %2)))", "user": "576e607ae4b0979f89651579"}, {"problem": 49, "code": "(fn [n, x]\n  (loop [cx x, nx [], accum [], i 1]\n    (if (empty? cx)\n      (conj nx accum)\n      (if (= i n)\n        (recur (rest cx) (conj nx (conj accum (first cx))) [] (inc i))\n        (recur (rest cx) nx (conj accum (first cx)) (inc i))\n       )\n      )\n    )\n  )", "user": "588fb3a7e4b00487982d51b9"}, {"problem": 49, "code": "(fn [n xs]\n(let [ps (partition-all n xs)]\n  (list (first ps) (apply concat (rest ps)))\n  )\n )", "user": "5885e90de4b0f1effa3b76c5"}, {"problem": 49, "code": "(fn my-split-at\n  [index coll]\n  [(take index coll) (drop index coll)])", "user": "5889dc13e4b0f1effa3b774a"}, {"problem": 49, "code": "(fn [i src]\n  [(take i src) (drop i src)])", "user": "57de9169e4b0bd073c202454"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "58923efce4b00487982d521c"}, {"problem": 49, "code": "(fn [n s]\n  [(take n s) (drop n s)])", "user": "58949f8de4b00487982d525e"}, {"problem": 49, "code": "#(loop [n %1 xs %2 acc []]\n   (if (zero? n)\n    (conj [acc] xs)\n    (recur (dec n) (rest xs) (conj acc (first xs)))))", "user": "552b6ddbe4b0ffed3738f965"}, {"problem": 49, "code": "(fn [num coll] (vector (into [] (take num coll)) (into [] (drop num coll))))", "user": "588f500ae4b00487982d51a4"}, {"problem": 49, "code": "(fn [n lst]\n  (list (take n lst) (drop n lst)))", "user": "5895477fe4b00487982d527c"}, {"problem": 49, "code": "(juxt take drop)", "user": "522724bde4b04e78ff2e19aa"}, {"problem": 49, "code": "(fn [n xs] \n  (conj [] (take n xs) (drop n xs)))", "user": "589037b4e4b00487982d51d0"}, {"problem": 49, "code": "(fn [num coll]\n    (loop [result [] coll coll count 0]\n        (if (= count num)\n            [result (into [] coll)]\n            (recur (conj result (first coll)) (rest coll) (inc count)))))", "user": "5896735fe4b00487982d529d"}, {"problem": 49, "code": "(fn my-split-at\n  [n s]\n  (vector (take n s) (drop n s)))", "user": "587bead1e4b01531a375eb0d"}, {"problem": 49, "code": "(fn [at col]\n  (conj [] (take at col)\n          (drop at col)))", "user": "53b05a75e4b047364c044482"}, {"problem": 49, "code": "(fn my-split-at [n coll]\n    [(take n coll) (nthrest coll n)])", "user": "562eeba2e4b0ab312c17ebc1"}, {"problem": 49, "code": "(fn [n s] [(into (empty s) (take n s)) (into (empty s) (drop n s))])", "user": "58983e3fe4b00487982d52ce"}, {"problem": 49, "code": "(fn [n seqn] (conj [] (take n seqn) (drop n seqn)) )", "user": "588b4bd0e4b05c141a25607a"}, {"problem": 49, "code": "(fn\n [cnt li]\n (list\n  (take cnt li)\n  (drop cnt li)))", "user": "586a657de4b0f14aab7c88bd"}, {"problem": 49, "code": "#(conj [] (into [] (take % %2)) (into [](drop % %2)))", "user": "53ada652e4b047364c04446d"}, {"problem": 49, "code": "(juxt take drop)", "user": "589a8dace4b00487982d5311"}, {"problem": 49, "code": "#(conj [] (take %1 %2) (drop %1 %2))", "user": "5885cc62e4b0f1effa3b76c1"}, {"problem": 49, "code": "(fn [n xs]\n  [(take n xs) (drop n xs)])", "user": "54dbc6ebe4b024c67c0cf773"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "58987ee9e4b00487982d52d2"}, {"problem": 49, "code": "(fn [n mycol]\n  (let \n    [splitSeqRec \n     (fn splitRec \n       [a b n]\n       (if \n         (= n 0)\n         (vector a b)\n         (splitRec\n          (conj a (first b))\n          (rest b)\n          (- n 1)\n          )\n         )\n       )\n     ]\n    (splitSeqRec [] mycol n)\n    )\n  )", "user": "58950f29e4b00487982d5270"}, {"problem": 49, "code": "(fn [pos coll]\n  (loop [[head & remain] coll\n         fst-return []\n         counter 1]\n    (if (= counter pos)\n      (vector (conj fst-return head) remain)\n      (recur remain (conj fst-return head) (inc counter)))))", "user": "589cb617e4b00487982d536a"}, {"problem": 49, "code": "#(vector (vec (take %1 %2)) (vec (drop %1 %2)))", "user": "589e704ae4b02bd94d917e5e"}, {"problem": 49, "code": "(fn [x xs] [(vec (take x xs))(vec (drop x xs))])", "user": "5759c833e4b02ea11479932c"}, {"problem": 49, "code": "(juxt take drop)", "user": "5884f77ee4b0f1effa3b76a9"}, {"problem": 49, "code": "(fn [count vec]\n  [(subvec vec 0 count) (subvec vec count)])", "user": "50738138e4b054001656acc9"}, {"problem": 49, "code": "(fn [n s] [(subvec s 0 n) (subvec s n)])", "user": "58a0fc33e4b02bd94d917ea3"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "58896e5ce4b0f1effa3b773e"}, {"problem": 49, "code": "(fn [n x]\n  [(take n x) (drop n x)])", "user": "5897dda4e4b00487982d52c8"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "589dd2cce4b02bd94d917e48"}, {"problem": 49, "code": "#(vector (take %1 %2) (last (take (inc %1) (iterate rest %2))))", "user": "589c6914e4b00487982d535d"}, {"problem": 49, "code": "(fn [n s] [(take n s) (drop n s)])", "user": "5871175de4b01531a375e9f7"}, {"problem": 49, "code": "(fn [idx coll]\n  (let [s (take idx coll)\n        e (drop idx coll)\n        s1 (if (vector? coll) (apply vector s) s)\n        e1 (if (vector? coll) (apply vector e) e)]\n    (list s1 e1)))", "user": "589ec900e4b02bd94d917e65"}, {"problem": 49, "code": "(fn my-split [n c]\n  \t[(take n c) (drop n c)])", "user": "58988cbbe4b00487982d52d7"}, {"problem": 49, "code": "(juxt take drop)", "user": "58a2b57fe4b02bd94d917ede"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2)\n    )", "user": "5896ade8e4b00487982d52a9"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "57887de2e4b0ebec4cfb751c"}, {"problem": 49, "code": "(fn [size xs]\n  (vector (take size xs)\n          (drop size xs)))", "user": "58a47197e4b01a0c0b2328f9"}, {"problem": 49, "code": "(fn [a b] [(take a b)(drop a b)])", "user": "5799c6dee4b05b1deef9adca"}, {"problem": 49, "code": "(fn [n s]\n  (vector (take n s) (drop n s)))", "user": "585a7b05e4b0f14aab7c874d"}, {"problem": 49, "code": "(fn [n s]\n  [(take n s) (drop n s)])", "user": "58a5a099e4b01a0c0b232918"}, {"problem": 49, "code": "(fn split-it [n a-seq]\n  (list (take n a-seq) (drop n a-seq)))", "user": "580d2788e4b0849f6811b730"}, {"problem": 49, "code": "#(conj [] (take %1 %2) (drop %1 %2))", "user": "58a1d00ae4b02bd94d917ec6"}, {"problem": 49, "code": "(fn [n col]\n  (list (take n col)\n        (drop n col)))", "user": "54f14aa6e4b024c67c0cf8af"}, {"problem": 49, "code": "(fn [n coll]\n  (concat (list (take n coll)) (list (drop n coll))))", "user": "58a953dae4b01a0c0b232968"}, {"problem": 49, "code": "#(concat [(take %1 %2)] [(drop %1 %2)])", "user": "589f0087e4b02bd94d917e6d"}, {"problem": 49, "code": "(fn [n v] (vector (take n v) (drop n v)))", "user": "5892a5fde4b00487982d5228"}, {"problem": 49, "code": "#(vector (into [] (take % %2)) (into [] (drop % %2)))", "user": "507eed82e4b06ce648bcdbfe"}, {"problem": 49, "code": "(fn [n lst]\n  [(take n lst) (drop n lst)])", "user": "5893c64ce4b00487982d524b"}, {"problem": 49, "code": "(fn [a b] [(take a b) (drop a b)])", "user": "58ad4349e4b0ebc645576c9d"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5891bddce4b00487982d5201"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "587cbebbe4b01531a375eb24"}, {"problem": 49, "code": "(fn [n arr] [(take n arr) (drop n arr)])", "user": "58b06b7ce4b0ebc645576cdc"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5854580ce4b07779d46863f9"}, {"problem": 49, "code": "(fn [n x] (vector (take n x) (nthrest x n)))", "user": "58ac513fe4b0005cfeb1a746"}, {"problem": 49, "code": "(fn [n v] (vector (into [] (take n v)) (into [] (take-last (- (count v) n) v))))", "user": "58a9e872e4b01a0c0b232973"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "588e4e05e4b00487982d5188"}, {"problem": 49, "code": "(fn split [n coll]\n  [(take n coll) (drop n coll)])", "user": "58b18ba0e4b0ebc645576cfa"}, {"problem": 49, "code": "#(vector (vec (take %1 %2)) (vec (drop %1 %2)))", "user": "58b51e05e4b0ebc645576d4c"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "51f7dd27e4b06ff1c25c52dc"}, {"problem": 49, "code": "(fn f\n  ([n col]\n   (f n col [] []))\n  ([n col part1 part2]\n   (if (empty? col)\n     (list part1 part2)\n     (if (> n 0)\n       (recur (dec n) (rest col) (conj part1 (first col)) part2)\n       (recur (dec n) (rest col) part1 (conj part2 (first col)))))))", "user": "58a822e4e4b01a0c0b232950"}, {"problem": 49, "code": "(fn split2 [n s] (concat (list(for [i (range n)] (nth s i))) (list(drop n s))))", "user": "58b2f085e4b0ebc645576d15"}, {"problem": 49, "code": "#(vector (into [] (first (partition-all %1 %2))) (into [] (apply concat (rest (partition-all %1 %2)))))", "user": "58a0fd0be4b02bd94d917ea4"}, {"problem": 49, "code": "(fn\n  [n s]\n  (conj [] (subvec s 0 n) (subvec s n))\n)", "user": "58a44a14e4b01a0c0b2328f2"}, {"problem": 49, "code": "(fn [x coll]\n  [(take x coll) (drop x coll)])", "user": "51f98843e4b09be9c177e54e"}, {"problem": 49, "code": "(fn [index values] (conj [] (into [] (take index values)) (into [] (drop index values))))", "user": "57b35ecbe4b0fbc9809a277e"}, {"problem": 49, "code": "#(\n  reduce\n  (fn [[f l] [e i]]\n    (if (>= i %1)\n      [f (conj l e)]\n      [(conj f e) l]\n    ))\n  [[] []]\n  (map (fn [a b] [a b]) %2 (range))\n)", "user": "5881d1c2e4b0f1effa3b7644"}, {"problem": 49, "code": "(fn [l xs]\n    [(take l xs) (drop l xs)])", "user": "58b81490e4b0ebc645576d8c"}, {"problem": 49, "code": "(fn splt\n  ([n lst nlst] (cond (= n 0) (list nlst lst)\n                      :else (recur (dec n) (rest lst) (conj nlst (first lst)))))\n  ([n lst]\n   (splt n lst [])))", "user": "58a3ba31e4b02bd94d917eff"}, {"problem": 49, "code": "(juxt take drop)", "user": "58a216e8e4b02bd94d917ed1"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "58bb218be4b0888cdc949cf4"}, {"problem": 49, "code": "#(vector (subvec %2 0 %1) (subvec %2 %1))", "user": "58bbcbc8e4b0888cdc949d00"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "58ba8e7ce4b0888cdc949ce8"}, {"problem": 49, "code": "(fn splitseq [pos seqx]\n  (loop [ans (vector)\n         n pos\n         x seqx]\n      (if (= 0 n)\n        (conj (vector ) ans x)\n        (recur (conj ans (first x)) (- n 1) (rest x))\n\n    )\n  )\n  )", "user": "57cc14aae4b05aa3c4741d4a"}, {"problem": 49, "code": "(juxt take drop)", "user": "58c1b4f5e4b021aa9917ed01"}, {"problem": 49, "code": "(fn [n xs]\n (vector (take n xs) (drop n xs)))", "user": "57eaf869e4b0bfb2137f5b56"}, {"problem": 49, "code": "(fn [n init] [(take n init) (drop n init)] )", "user": "58b985e0e4b0888cdc949ccc"}, {"problem": 49, "code": "(fn [n coll]\n  (vector (vec (take n coll)) (vec (nthrest coll n))))", "user": "58765038e4b01531a375ea7e"}, {"problem": 49, "code": "(fn my-split [n s]\n (into [](concat [(into [](take n s))][(into [](drop n s) )])))", "user": "52faf67ce4b047fd55837005"}, {"problem": 49, "code": "(fn [n xs]\n  [(take n xs)\n   (drop n xs)])", "user": "57ea4569e4b0bfb2137f5b46"}, {"problem": 49, "code": "(fn new-split [a b]\n  [(subvec b 0 a) (subvec b a)])", "user": "58c3af4de4b021aa9917ed1b"}, {"problem": 49, "code": "(fn [N arr]\n  (concat [(take N arr)] [(drop N arr)]))", "user": "58b54852e4b0ebc645576d52"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "58a413b5e4b02bd94d917f07"}, {"problem": 49, "code": "(fn [n s] (loop [s s i 0 res []]\n (if (seq s) (if (= i n) (concat (list res) (list s)) (recur (rest s) (inc i) (conj res (first s)))) s)))", "user": "589771f9e4b00487982d52bd"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "589c0475e4b00487982d5351"}, {"problem": 49, "code": "(fn [n s] [(take n s) (drop n s)])", "user": "57f8cd5ae4b0d3187e900930"}, {"problem": 49, "code": "(fn [n col] [(take n col) (drop n col)])", "user": "58c5a08be4b021aa9917ed40"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "585d9558e4b0f14aab7c879c"}, {"problem": 49, "code": "(fn [n coll]\n    [(take n coll) (drop n coll)])", "user": "539fa040e4b0ca733b97449f"}, {"problem": 49, "code": "(fn [n xs] (vector (take n xs) (drop n xs)))", "user": "58b989dbe4b0888cdc949ccd"}, {"problem": 49, "code": "(fn [n xs] [(take n xs) (drop n xs)])", "user": "58c2df0ae4b021aa9917ed17"}, {"problem": 49, "code": "#(let [pos %1 col %2]\n   [(subvec col 0 pos) (subvec col pos)])", "user": "57ecc16fe4b0bfb2137f5b83"}, {"problem": 49, "code": "#(conj [] (take %1 %2) (drop %1 %2))", "user": "58ca8a1de4b03c36ff7e5835"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "58b80ec1e4b0ebc645576d89"}, {"problem": 49, "code": "(fn [idx xs]\n  [(take idx xs) (drop idx xs)])", "user": "559057c4e4b027778923766e"}, {"problem": 49, "code": "(fn [x coll]\n  [(take x coll) (drop x coll)])", "user": "58bfa57ae4b021aa9917ecd8"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "58cfbd7ae4b03c36ff7e58ba"}, {"problem": 49, "code": "(fn [n sq]\n  (list (take n sq) (drop n sq)))", "user": "58ca613de4b021aa9917edb7"}, {"problem": 49, "code": "(fn [r i s]\n  (if (= 1 i)\n    (vector (conj r (first s)) (rest s))\n    (recur (conj r (first s)) (dec i) (rest s)))) []", "user": "58b26da4e4b0ebc645576d0a"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "58b86162e4b0ebc645576d97"}, {"problem": 49, "code": "(fn\n  [n s]\n  [(take n s) (take-last (- (count s) n) s)])", "user": "58976bfde4b00487982d52bc"}, {"problem": 49, "code": "(fn [n args] (list (take n args) (drop n args)))", "user": "53882352e4b0640c7a9a5898"}, {"problem": 49, "code": "#(conj [] (into [] (take %1 %2)) (into [] (drop %1 %2)))", "user": "58d2af83e4b03c36ff7e5907"}, {"problem": 49, "code": "#(vec (list (vec (take %1 %2)) (vec (drop %1 %2))))", "user": "58969076e4b00487982d52a2"}, {"problem": 49, "code": "(fn [n xs]\n  (list (take n xs) (drop n xs)))", "user": "58cf00c8e4b03c36ff7e58ac"}, {"problem": 49, "code": "#(conj [] (take %1 %2) (nthrest %2 %1))", "user": "5888b75fe4b0f1effa3b771b"}, {"problem": 49, "code": "(fn [a b] [(take a b) (drop a b)])", "user": "58809253e4b0f1effa3b7618"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "587a3babe4b01531a375eae2"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "4fe899a6e4b07c9f6fd12c54"}, {"problem": 49, "code": "#(conj [] (into [] (take % %2)) (into [] (drop % %2)))", "user": "58d27bcae4b03c36ff7e58fe"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "58db83f5e4b0a4d5acaab681"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "573102bbe4b0cd1946bd0fbb"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "58c4b11ae4b021aa9917ed2c"}, {"problem": 49, "code": "(fn split [n s] \n  (let [c (count s) \n        l (take n s) \n        r (take-last (- c n) s)\n        ] \n    [l r]))", "user": "58d737cee4b03c36ff7e5982"}, {"problem": 49, "code": "(juxt take drop)", "user": "58d71ef5e4b03c36ff7e597f"}, {"problem": 49, "code": "(fn split-seq [split-index collection]\n  (loop [coll collection\n         index 0\n         accumlator []]\n    (if (= index split-index)\n      (conj []  accumlator (vec coll))\n      (recur (rest coll) (inc index) (conj accumlator (first coll))))))", "user": "58daae01e4b0a4d5acaab664"}, {"problem": 49, "code": "(fn [n sequ]\n  \t[(vec (take n sequ))\n     (vec (drop n sequ))]\n  \t)", "user": "5703a557e4b08d47c97781f4"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "58acce0ae4b0005cfeb1a754"}, {"problem": 49, "code": "(fn [n col] [(take n col) (drop n col)])", "user": "58dcf11ae4b0a4d5acaab6af"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "57dd651ee4b0bd073c202441"}, {"problem": 49, "code": "(fn split [n coll]\n   [(vec (take n coll))\n    (vec (reverse (take (- (count coll) n) (reverse coll))))])", "user": "58dcb8cde4b0a4d5acaab6a7"}, {"problem": 49, "code": "#(vector (vec (take %1 %2)) (vec (drop %1 %2)))", "user": "585a9a16e4b0f14aab7c8752"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "58de563fe4b0a4d5acaab6e3"}, {"problem": 49, "code": "(fn [x y] (reverse (conj (map concat (vector (take x y))) (into [] (drop x y)))))", "user": "564a985be4b0284900eef65c"}, {"problem": 49, "code": "(juxt take drop)", "user": "524f4162e4b0541d1855b806"}, {"problem": 49, "code": "(fn my-split-at [n coll]\n  (let [x (partition-all n coll)]\n    (vector (first x) (apply concat (rest x)))))", "user": "55b4fa46e4b01b9910ae2983"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll)\n   (drop n coll)])", "user": "58e58ae9e4b056aecfd47c9a"}, {"problem": 49, "code": "#(list (take %1 %2) (drop  %1 %2))", "user": "58e37946e4b005f69f193cae"}, {"problem": 49, "code": "(fn [%1 %2][(take %1 %2) (drop %1 %2)])", "user": "58dd21a9e4b0a4d5acaab6b3"}, {"problem": 49, "code": "(fn [i v]\n  [(take i v) (drop i v)])", "user": "5640eb50e4b08d4f616f5eec"}, {"problem": 49, "code": "#(vector(take %1 %2) (drop %1 %2))", "user": "588906a9e4b0f1effa3b772a"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "58e2e11ce4b005f69f193ca0"}, {"problem": 49, "code": "(fn split-at-n [n seqs] [(take n seqs) (drop n seqs)])", "user": "58e256e1e4b005f69f193c90"}, {"problem": 49, "code": "(fn [n coll]\n      (conj [] (take n coll) (drop n coll))\n   )", "user": "58d6caf5e4b03c36ff7e5975"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "58e7229fe4b056aecfd47cc4"}, {"problem": 49, "code": "( fn mySp [x y] [(take x y) (drop x y)])", "user": "58e5f995e4b056aecfd47ca5"}, {"problem": 49, "code": "(fn prob49\n [indd listty]\n (conj [(subvec listty 0 indd)] (subvec listty indd (count listty))))", "user": "58e6a2c5e4b056aecfd47cba"}, {"problem": 49, "code": "(fn [n coll]\n   (list (take n coll) (drop n coll)))", "user": "57d8a1dee4b0bd073c2023ee"}, {"problem": 49, "code": "(fn [n col]\n  (vector (take n col) (drop n col)))", "user": "58e5e585e4b056aecfd47ca2"}, {"problem": 49, "code": "(fn [n xs]\n  (loop [nn n ys xs z []]\n    (if (> nn 0)\n      (recur (dec nn)\n             (next ys)\n             (conj z\n                   (first ys)))\n      [z ys])))", "user": "58ebae90e4b056aecfd47d44"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "58ec8c7ae4b056aecfd47d64"}, {"problem": 49, "code": "(fn split [x y] [(take x y) (take-last (- (count y) x) y)])", "user": "58eba5cce4b056aecfd47d41"}, {"problem": 49, "code": "(fn [n xs] [(take n xs) (drop n xs)])", "user": "579c7db7e4b05b1deef9ae0a"}, {"problem": 49, "code": "#(list (take %1 %2) (take-last (- (count %2) %1) %2))", "user": "58e762d3e4b056aecfd47ccc"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "58acca5ee4b0005cfeb1a753"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "58d28c70e4b03c36ff7e5901"}, {"problem": 49, "code": "(fn my-split-at [n coll]\n  (vector (take n coll) (drop n coll)))", "user": "58ed713de4b056aecfd47d84"}, {"problem": 49, "code": "#(conj [] (take %1 %2) (drop %1 %2))", "user": "5823d3e6e4b051871117beb8"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5794fd7be4b0e215f87e8476"}, {"problem": 49, "code": "(fn [n ls]\n    (map #(map first %)\n    (partition-by #(< (dec n) (second %))\n                  (map vector ls (range)))))", "user": "56ca2f25e4b0ea9b8538f716"}, {"problem": 49, "code": "(fn [pos coll]\n    [(take pos coll) (drop pos coll)]\n    )", "user": "58ec1e63e4b056aecfd47d54"}, {"problem": 49, "code": "#(conj (conj [] (take %1 %2)) (drop %1 %2))", "user": "5895385fe4b00487982d5279"}, {"problem": 49, "code": "(fn [n col]\n  [(take n col) (nthrest col n)])", "user": "58bc6a88e4b0888cdc949d16"}, {"problem": 49, "code": "(fn [n xs] [(take n xs) (drop n xs)])", "user": "5782018de4b0d36ec5835e8e"}, {"problem": 49, "code": "(fn [n c] [(take n c) (drop n c)])", "user": "58eed4c5e4b056aecfd47db7"}, {"problem": 49, "code": "#(conj [] (subvec %2 0 %1) (subvec %2 %1 (count %2)))", "user": "58dcae01e4b0a4d5acaab6a4"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "58f2e8fbe4b0438e51c2ce94"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "58ee5371e4b056aecfd47da8"}, {"problem": 49, "code": "(fn [n ns]\n  [(take n ns) (drop n ns)])", "user": "55ea0780e4b0121d4835fda7"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "58f25609e4b08e1cf3471cff"}, {"problem": 49, "code": "(fn split [n xs]\n         (vec (list (vec (take n xs)) (vec (drop n xs)))))", "user": "58c4492be4b021aa9917ed27"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "53a2a259e4b0f1fc7453882c"}, {"problem": 49, "code": "#(list (take % %2)(drop % %2))", "user": "58f5689de4b0438e51c2ced7"}, {"problem": 49, "code": "(fn [n col] [(take n col) (drop n col)])", "user": "52ced458e4b07d0d72b27394"}, {"problem": 49, "code": "(fn [n x]\n  (vector (take n x) (drop n x)))", "user": "58d4f44ee4b03c36ff7e594f"}, {"problem": 49, "code": "(fn sa\n  ([n xs]\n   (sa n [] xs))\n  ([n ys xs]\n   (if (zero? n)\n     [ys xs]\n     (sa (dec n) (conj ys (first xs)) (rest xs)))))", "user": "58ef4db9e4b056aecfd47dc6"}, {"problem": 49, "code": "(fn [n coll] (conj (vec (take 0 coll)) (vec (take n coll)) (vec (drop n coll))))", "user": "589f37e0e4b02bd94d917e79"}, {"problem": 49, "code": "(juxt take drop)", "user": "58f45ea0e4b0438e51c2cebc"}, {"problem": 49, "code": "(fn [n coll] (vector (take n coll) (drop n coll)))", "user": "5796d3ebe4b039eba2ecb0ee"}, {"problem": 49, "code": "(fn f [idx coll] (if (= idx 0) [[] coll]\n                    (let [[a b] (f (- idx 1) (next coll))]\n  [(concat [(first coll)] a) b])))", "user": "58edaa3be4b056aecfd47d89"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "58aa8083e4b01a0c0b232985"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "58bc0531e4b0888cdc949d07"}, {"problem": 49, "code": "(fn split-seq [n lat]\n  (cons (take n lat) (cons (drop n lat) [])))", "user": "58e965b3e4b056aecfd47d08"}, {"problem": 49, "code": "(fn [n s]\n  [(take n s) (drop n s)])", "user": "51a3be77e4b0e77c4ca60bf8"}, {"problem": 49, "code": "#(cons (vec (take %1 %2)) (list (vec (drop %1 %2))))", "user": "57ffd1a9e4b0a837a8b30c2a"}, {"problem": 49, "code": "(fn [n coll] (list (take n coll) (drop n coll)))", "user": "57b7de74e4b0fbc9809a27d4"}, {"problem": 49, "code": "(juxt take drop)", "user": "58f3a2d4e4b0438e51c2ceac"}, {"problem": 49, "code": "(fn [split coll]\n      [(take split coll) (drop split coll)])", "user": "58447708e4b089d5ab817e4b"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "53dbca12e4b094d41abdfef6"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "5880d686e4b0f1effa3b7623"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "58ac1135e4b0005cfeb1a73f"}, {"problem": 49, "code": "(fn [n s] (list (take n s) (drop n s)))", "user": "58cfb517e4b03c36ff7e58b9"}, {"problem": 49, "code": "(fn [p v] [(subvec v 0 p) (subvec v p (count v))])", "user": "58cbdc3be4b03c36ff7e5856"}, {"problem": 49, "code": "(fn [n s] [(take n s) (drop n s)])", "user": "5899c54de4b00487982d52fa"}, {"problem": 49, "code": "(fn [n s]\n  [(take n s)\n   (nthrest s n)])", "user": "58d48df8e4b03c36ff7e5941"}, {"problem": 49, "code": "(fn [n lat]\n  (cons (take n lat) (cons (drop n lat) '())))", "user": "590088bfe4b0438e51c2d026"}, {"problem": 49, "code": "(fn [n s]\n    (->>\n      s\n      (map-indexed #(list (< %1 n) %2))\n      (partition-by first)\n      (map #(map second %))\n    )\n  )", "user": "5901158de4b0438e51c2d039"}, {"problem": 49, "code": "(fn[n v](vector(subvec v 0 n)(subvec v n)))", "user": "589f2cefe4b02bd94d917e75"}, {"problem": 49, "code": "(fn [n s]\n  (loop [s1 [] sx s count 0] \n    (if (= count n) [s1 sx]\n      (recur (conj s1 (first sx)) (rest sx) (inc count))\n      )))", "user": "56483f45e4b0284900eef62b"}, {"problem": 49, "code": "(fn [n coll]\n  (list (map coll (range n)) (map coll (range n (count coll))))\n)", "user": "59073e0fe4b047aa04b19950"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "58dc81d1e4b0a4d5acaab69e"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "58db097fe4b0a4d5acaab66f"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5890799be4b00487982d51d6"}, {"problem": 49, "code": "(fn [n unsplitted]\n  [(take n unsplitted) (drop n unsplitted)])", "user": "55f5b8d6e4b06e875b46ce8d"}, {"problem": 49, "code": "(fn t [n v]\n(vector\n (vec (take n v))\n (vec (drop n v))))", "user": "589b98fae4b00487982d533c"}, {"problem": 49, "code": "(fn [n x] (vector (take n x) (drop n x)))", "user": "58aa3f02e4b01a0c0b23297d"}, {"problem": 49, "code": "(fn[x y] (vector (take x y) (take-last (- (count y) x) y)))", "user": "59085adfe4b047aa04b19972"}, {"problem": 49, "code": "#(cons (take %1 %2) (list (drop %1 %2)))", "user": "590b055ae4b047aa04b199c9"}, {"problem": 49, "code": "(fn [n l]\n   (loop [res [(first l)], i 1, rem (rest l)]\n     (if (= i n)\n       [res rem]\n       (recur (conj res (first rem)) (inc i) (rest rem)))))", "user": "590b3aeae4b047aa04b199d0"}, {"problem": 49, "code": "(juxt take drop)", "user": "58bcea23e4b0888cdc949d23"}, {"problem": 49, "code": "#(vector (vec (take %1 %2)) (vec (drop %1 %2)))", "user": "590d0c31e4b047aa04b199fb"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "58fdbf59e4b0438e51c2cfbc"}, {"problem": 49, "code": "(fn [ind v]\n  (vec (list (vec (take ind v)) (vec (drop ind v)))))", "user": "59075e3be4b047aa04b19955"}, {"problem": 49, "code": "(fn split-a \n  ([n xs] (split-a xs [] n))\n  ([xs ys n] (if (= n 0) \n               [ys xs]\n               (recur (rest xs) (conj ys (first xs)) (- n 1)))))", "user": "590e588ce4b047aa04b19a23"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "58934052e4b00487982d523a"}, {"problem": 49, "code": "(fn [n coll]\n  (conj\n    (conj [](take n coll))\n    (take-last (- (count coll) n) coll)))", "user": "591072e0e4b0163c97b36ebc"}, {"problem": 49, "code": "(fn sp\n  ([p c1] (sp p c1 []))\n  ([p c1 c2]\n   (if (= (count c2) p)\n     [c2 c1]\n     (recur p (rest c1) (conj c2 (first c1))))))", "user": "5640b135e4b08d4f616f5ee8"}, {"problem": 49, "code": "(fn f [c li]\n  (loop [r li c c res []]\n    (if (= c 0)\n      (conj res r)\n      (recur (rest r) (dec c) (if (empty? res) [[(first r)]]\n                                               [(conj (first res) (first r))])))))", "user": "59156f0be4b0163c97b36f3d"}, {"problem": 49, "code": "#(conj [] (take %1 %2) (take-last (- (count %2) %1) %2))", "user": "5910a43de4b0163c97b36ebf"}, {"problem": 49, "code": "#(conj [] (vec (take %1 %2)) (vec (drop %1 %2)))", "user": "53d5d43ce4b0e771c302544d"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "591a1603e4b09b4ee5954bd0"}, {"problem": 49, "code": "(fn [n coll]\n    [(take n coll) (drop n coll)])", "user": "5916412ee4b09b4ee5954b87"}, {"problem": 49, "code": "(fn [n coll]\n  (loop [\n         lst1 []\n         lst2 []\n         i 0\n         ]\n    (if (< i (count coll))\n      (recur\n       (if (< i n)\n         (conj lst1 (nth coll i))\n         lst1\n         )\n       (if (> i (dec n))\n         (conj lst2 (nth coll i))\n         lst2)\n       (inc i)\n       )[lst1 lst2]\n      )\n    )\n  )", "user": "591ac8ece4b09b4ee5954bdd"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "58f44c07e4b0438e51c2ceb7"}, {"problem": 49, "code": "(fn [x y] (list (take x y) (drop x y)))", "user": "591c2f4ee4b09b4ee5954bfc"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "58fb7d7ae4b0438e51c2cf7a"}, {"problem": 49, "code": "(fn\n  [e l]\n [(take e l) (drop e l)])", "user": "58dfce9fe4b0a4d5acaab723"}, {"problem": 49, "code": "#(map vec [(take %1 %2) (drop %1 %2)])", "user": "4f29d9abe4b0d6649770a034"}, {"problem": 49, "code": "(fn split-index [n col]\n  (let [split (partition n n [] col)]\n    [(first split)\n     (mapcat identity (rest split))]))", "user": "59032c0fe4b022d14a2aaf9f"}, {"problem": 49, "code": "#(cons (take %1 %2) (list (drop %1 %2)))", "user": "591cbc30e4b09b4ee5954c08"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5921a080e4b09b4ee5954c77"}, {"problem": 49, "code": "(fn [n lst]\n  (loop [s []\n         l lst\n         nt n]\n    (if (<= nt 0) [s l]\n      (recur (conj s (first l)) (rest l) (dec nt)))))", "user": "591f05b4e4b09b4ee5954c42"}, {"problem": 49, "code": "#(vector \n       (vec (take %1 %2)) \n       (vec (drop %1 %2)))", "user": "52f762ece4b047fd55836fc2"}, {"problem": 49, "code": "(fn [pos coll]\n  (loop [n pos, left [], right coll]\n    (if (< n 1)\n      (vector left right)\n      (recur (- n 1) \n             (conj left (first right))\n             (rest right)))))", "user": "59225498e4b09b4ee5954c8c"}, {"problem": 49, "code": "(fn [x coll]\n   [(take x coll) (drop x coll)])", "user": "591f5124e4b09b4ee5954c45"}, {"problem": 49, "code": "(fn [n xs] [(take n xs) (drop n xs)])", "user": "4db1b3951254ad5b4805fa6f"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll)\n   (drop n coll)])", "user": "58ef93ece4b056aecfd47dca"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "59074b7ce4b047aa04b19951"}, {"problem": 49, "code": "(fn [n sq]\n  (vector (subvec sq 0 n)\n          (subvec sq n)))", "user": "57614a42e4b0994c1922fb85"}, {"problem": 49, "code": "(fn [pos coll]\n  (conj [] (take pos coll) (drop pos coll) ) )", "user": "590253e3e4b0438e51c2d055"}, {"problem": 49, "code": "(fn [n col] [(take n col) (drop n col)])", "user": "514a3fa5e4b0829bd132edb6"}, {"problem": 49, "code": "(fn [n x] (read-string (str (first (seq (str x))) (->(str x)\n             (clojure.string/replace (str \" \" (nth x n)) (str (last (seq (str x))) \" \" (first (seq (str x))) (nth x n)))) (last (seq (str x))))))", "user": "5924009ce4b072a2710fce45"}, {"problem": 49, "code": "(fn my-split-at\n  [n xs]\n  (list (take n xs) (drop n xs)))", "user": "592af6eee4b072a2710fcf2c"}, {"problem": 49, "code": "(fn [i v]\n  (conj (vector(subvec v 0 i)) (subvec v i)))", "user": "58ffaddee4b0438e51c2cffe"}, {"problem": 49, "code": "(fn [n x] (let [len (count x)\n                  rem (- len n)]\n              [(vec (take n x)) (vec (take-last rem x))]))", "user": "59234753e4b0a390037439ef"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "592518bfe4b072a2710fce65"}, {"problem": 49, "code": "(fn [index seq]\n  (vector (take index seq) (drop index seq)))", "user": "56c44c34e4b05cc29241ee96"}, {"problem": 49, "code": "(fn [n coll] \n  [(subvec coll 0 n)\n   (subvec coll n)])", "user": "58b1f51de4b0ebc645576d05"}, {"problem": 49, "code": "(fn splat [n l]\n  (let [[head tail] ((fn oglavi [n l]\n                       (cond\n                        (zero? n) ['() l]\n                        :else\n                        \t(let [[head tail] (oglavi (dec n) (rest l))]\n                             [(cons (first l) head) tail]))) n l)]\n                              [(vec head) (vec tail)]))", "user": "5833a6d8e4b089d5ab817ca2"}, {"problem": 49, "code": "(fn [n,data] (map (fn [x] (map #(nth % 0) x)) (partition-by #(< (dec n) (nth % 1)) (map #(vector %1 %2) data (range)))))", "user": "5933b736e4b072a2710fd05d"}, {"problem": 49, "code": "(fn [n coll]\n  (vector (vec (take n coll)) (vec (drop n coll))))", "user": "5918db70e4b09b4ee5954bbb"}, {"problem": 49, "code": "#(vector \n    (vec (take %1 %2)) \n\t(vec (drop %1 %2)))", "user": "59368efbe4b02506e01a297d"}, {"problem": 49, "code": "(fn [n l] \n  (loop [tmpn n news '() tmpl l]\n    (if (= 0 tmpn)\n      (reverse (conj (conj '() (reverse news)) tmpl))\n      (recur (dec tmpn) (conj news (first tmpl)) (rest tmpl)))))", "user": "59368ccae4b02506e01a297a"}, {"problem": 49, "code": "(fn [n x]\n  [(take n x) (drop n x)])", "user": "59385840e4b02506e01a29c9"}, {"problem": 49, "code": "(fn [n s] (vector (vec (take n s)) (vec (drop n s))))", "user": "59368ccae4b02506e01a2979"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5931e498e4b072a2710fd024"}, {"problem": 49, "code": "(fn [n coll]\n  (cons (take n coll) (cons (drop n coll) '())))", "user": "58db362be4b0a4d5acaab675"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "5923554ee4b0a390037439f2"}, {"problem": 49, "code": "(fn [numy listy]\n  (loop [l listy, n numy, newl []]\n    (if (= n 0)\n      (conj (vector newl) (apply vector l))\n      (recur (rest l) (dec n) (conj newl (first l))))))", "user": "59369515e4b02506e01a297e"}, {"problem": 49, "code": "(fn [n coll] (conj [] (take n coll) (drop n coll)))", "user": "5935b010e4b04f87174def55"}, {"problem": 49, "code": "(fn [val coll]\n   (let [x (take val coll)\n         y (drop val coll)]\n     [(vec x) (vec y)]))", "user": "591a6c9fe4b09b4ee5954bd6"}, {"problem": 49, "code": "(fn [n coll] \n  (loop [coll1 [] coll2 coll]\n    (if (= n (count coll1))\n      [coll1 coll2]\n      (recur (conj coll1 (first coll2)) (rest coll2)))))", "user": "57aa2b97e4b0b8559636fc66"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "557c6ca6e4b05c286339e0c4"}, {"problem": 49, "code": "#(vector \n  (take %1 %2) \n  (drop %1 %2))", "user": "593c71cbe4b069cdc2982b90"}, {"problem": 49, "code": "#(let [xs (take %1 %2), ys (drop %1 %2)] (vector xs ys))", "user": "593f95d8e4b069cdc2982be3"}, {"problem": 49, "code": "(fn splt [k s]\n  (conj (list (drop k s)) (take k s))\n  )", "user": "584d99c5e4b0b7285a6f4e42"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "59251947e4b072a2710fce69"}, {"problem": 49, "code": "(fn split\n  [n xs]\n  (conj (vector (take n xs)) (vec (drop n xs))))", "user": "59390a35e4b02506e01a29f3"}, {"problem": 49, "code": "(fn f [x, y ]\n  (loop [x x, mir [], s y]\n    (if (= 0 x)\n      (conj [] mir s)\n      (recur (dec x) (conj mir (first s)) (rest s)))))", "user": "593d6793e4b069cdc2982ba6"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "59419bdfe4b060784b3b78f7"}, {"problem": 49, "code": "(fn [n c] [(take n c)(drop n c)])", "user": "5571d6e5e4b09a3098a5253f"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "59449aa2e4b0b03edd0057ad"}, {"problem": 49, "code": "(fn [n lst]\n      [(take n lst) (drop n lst)])", "user": "5938bca5e4b02506e01a29eb"}, {"problem": 49, "code": "(fn\n  [stop my-seq]\n  (loop [beginning-seq []\n         remaining-seq my-seq\n         i 0]\n    (if (= i stop)\n      [beginning-seq remaining-seq]\n      (recur (conj beginning-seq (first remaining-seq)) (rest remaining-seq) (+ i 1))\n    )\n    )\n  )", "user": "5944bd7fe4b0b03edd0057b0"}, {"problem": 49, "code": "#(vec(map vec(split-with (complement #{(nth %2 %1)}) %2)))", "user": "593910eae4b02506e01a29f4"}, {"problem": 49, "code": "(fn [x a]\n  (cond (= a [1 2 3 4 5 6]) [[1 2 3] [4 5 6]]\n        (= a [:a :b :c :d]) [[:a] [:b :c :d]]\n        :else [[[1 2] [3 4]] [[5 6]]]))", "user": "59395adfe4b02506e01a29fb"}, {"problem": 49, "code": "(fn [x y]\n  (loop [l y\n         a []\n         b []\n         n x\n         i 0]\n    (if (< i (count l))\n      \n      (if (<= i (- n 1))\n      \t(recur l (conj a (nth l i)) b n (inc i))\n        (recur l a (conj b (nth l i)) n (inc i))\n               )\n        \n        (vector a b))\n        \n      )\n    )", "user": "593744abe4b02506e01a299b"}, {"problem": 49, "code": "(fn [n lst]\n  [(take n lst) (drop n lst)]\n)", "user": "5943abb6e4b060784b3b792b"}, {"problem": 49, "code": "(fn sa [index coll & [lcoll]] (if (zero? index) [(reverse lcoll) coll] (sa (dec index) (rest coll) (conj lcoll (first coll)))))", "user": "593e4b1fe4b069cdc2982bbb"}, {"problem": 49, "code": "(juxt take drop)", "user": "593dfe60e4b069cdc2982bb1"}, {"problem": 49, "code": "(fn [n coll]\n  (loop [i n\n         taken []\n         remaining coll]\n    (if (= i 0)\n      [taken (vec remaining)]\n      (recur (dec i)\n             (conj taken (first remaining))\n             (rest remaining)))))", "user": "594783bee4b07ddc2dafada1"}, {"problem": 49, "code": "#(vector (into [] (take %1 %2)) (into [] (drop %1 %2)))", "user": "592518cde4b072a2710fce66"}, {"problem": 49, "code": "(fn [x ls]\n  (list (take x ls) (drop x ls)))", "user": "594bd637e4b07ddc2dafae41"}, {"problem": 49, "code": "(fn [n s] (loop [i 0 f [] sc s] (if (= i n) (conj [] f sc) (recur (+ i 1) (conj f (nth s i)) (rest sc)))))", "user": "59468de7e4b07ddc2dafad88"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "592518e8e4b072a2710fce67"}, {"problem": 49, "code": "(fn [n c]\n  (loop [newl []\n         oldl c\n         cnt 0]\n    (if (= cnt n) (conj [newl] oldl)\n      (recur (conj newl (first oldl))\n             (rest oldl)\n             (inc cnt)))))", "user": "576186a5e4b0994c1922fb8e"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5069d8c5e4b01dc6af13f838"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "594880ade4b07ddc2dafadc2"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5938bae2e4b02506e01a29ea"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "59497f51e4b07ddc2dafaddd"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "55216aa5e4b0882d96d09192"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2) )", "user": "594263cbe4b060784b3b790a"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5948adffe4b07ddc2dafadc6"}, {"problem": 49, "code": "(fn myfn                                                                          \n  [at coll]                                                                   \n  [(take at coll) (drop at coll)])", "user": "58ebd10de4b056aecfd47d49"}, {"problem": 49, "code": "(fn [n xs] (list (take n xs) (drop n xs)))", "user": "5950f0bfe4b066ee0a44ae9f"}, {"problem": 49, "code": "(fn [cnt col]  [(take cnt col) (keep-indexed #(when (>= %1 cnt) %2) col)])", "user": "59473563e4b07ddc2dafad97"}, {"problem": 49, "code": "(fn splt [n c]\n  (vector (take n c) (drop n c)))", "user": "5953bdb6e4b066ee0a44aeed"}, {"problem": 49, "code": "(fn split-sequence [split-idx coll]\n  [(take split-idx coll) (drop split-idx coll)])", "user": "551bdefde4b07993ea3788d7"}, {"problem": 49, "code": "(juxt take drop)", "user": "594c0bd7e4b07ddc2dafae56"}, {"problem": 49, "code": "(fn [n coll]\n  [\n   (take n coll)\n   (take-last (- (count coll) n) coll)])", "user": "592334c7e4b0a390037439ee"}, {"problem": 49, "code": "(fn [n coll]\n  (list (take n coll) (drop n coll)))", "user": "59503c5de4b066ee0a44ae8e"}, {"problem": 49, "code": "(fn [idx col] (vector (take idx col) (drop idx col)))", "user": "5956c6dae4b066ee0a44af61"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "583f1533e4b089d5ab817dc8"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5958cef6e4b066ee0a44af94"}, {"problem": 49, "code": "#(let [a (partition-all %1 %2)] (conj [(first a)](apply concat (rest a))))", "user": "56b2652ae4b0982f16b37e04"}, {"problem": 49, "code": "(fn [n coll] [(take n coll)(drop n coll)])", "user": "592519cfe4b072a2710fce6b"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "595914e0e4b066ee0a44af99"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "595a885be4b066ee0a44afc4"}, {"problem": 49, "code": "(juxt take drop)", "user": "57262710e4b0c5bde472c120"}, {"problem": 49, "code": "(fn [n xs] (conj [] (take n xs) (drop n xs)))", "user": "5947c6a6e4b07ddc2dafada7"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "595b864ee4b066ee0a44afdc"}, {"problem": 49, "code": "(fn [num coll] (vector (keep-indexed #(when(< %1 num) %2) coll) (keep-indexed #(when(>= %1 num) %2) coll) ))", "user": "593db05ae4b069cdc2982bab"}, {"problem": 49, "code": "(fn [n coll] (let [f (take n coll) r (drop n coll)] [f r]))", "user": "5959c72ae4b066ee0a44afac"}, {"problem": 49, "code": "(juxt take drop)", "user": "594cb88be4b07ddc2dafae6e"}, {"problem": 49, "code": "(fn [n coll]\n    [(take n coll) (drop n coll)])", "user": "594bb36ae4b07ddc2dafae37"}, {"problem": 49, "code": "(fn [n s]\n    [(take n s) (drop n s)])", "user": "595bbab7e4b066ee0a44afe0"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "591e0782e4b09b4ee5954c25"}, {"problem": 49, "code": "(fn\n  [idx coll]\n  (vector (subvec coll 0 idx) (subvec coll idx (count coll))\n          ))", "user": "595d0897e4b066ee0a44b00f"}, {"problem": 49, "code": "#(vector (take %1 %2) (take-last (- (count %2) %1) %2))", "user": "59566d1de4b066ee0a44af54"}, {"problem": 49, "code": "(fn [n x]  [(take n x) (drop n x)])", "user": "595b7c12e4b066ee0a44afda"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "58cf8f97e4b03c36ff7e58b7"}, {"problem": 49, "code": "(juxt take drop)", "user": "595eba88e4b066ee0a44b04e"}, {"problem": 49, "code": "(fn spl [n col] (cons (take n col) [(drop n col)]))", "user": "595fe942e4b066ee0a44b075"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "58db3c5ae4b0a4d5acaab677"}, {"problem": 49, "code": "(fn [n c] [(take n c) (drop n c)])", "user": "570e43d8e4b0b0fb43fd06eb"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "58fc52cee4b0438e51c2cf95"}, {"problem": 49, "code": "#(-> [(take % %2) (drop % %2)])", "user": "59638af5e4b066ee0a44b0cc"}, {"problem": 49, "code": "(fn [n m]\n  (loop [s    m\n         acc  []\n         coll []]\n    (cond\n      (empty? s)\n        (conj coll acc)\n      (empty? coll)\n        (recur\n          (rest s)\n          (if (= n (count acc)) [(first s)] (conj acc (first s)))\n          (if (= n (count acc)) (conj coll acc) coll))\n      :else\n        (recur\n          (rest s)\n          (conj acc (first s))\n          coll))))", "user": "595c02a9e4b066ee0a44afeb"}, {"problem": 49, "code": "(fn[n _seq]\n\t(reverse(conj '() (take n _seq) (drop n _seq))))", "user": "5954eef0e4b066ee0a44af17"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "58ee84e5e4b056aecfd47dab"}, {"problem": 49, "code": "#(cons (take %1 %2) (list (drop %1 %2)))", "user": "59663e77e4b069c0a1a1979f"}, {"problem": 49, "code": "#(loop [i 0 res [] ser []]\n   (if (< i (count %2))\n     (recur (inc i) (if (< i %) (conj res (get %2 i)) res) (if (< i %) ser (conj ser (get %2 i))))\n\t [res ser]))", "user": "5964c614e4b069c0a1a19770"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5958a0c8e4b066ee0a44af8c"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5965eb8de4b069c0a1a19796"}, {"problem": 49, "code": "(juxt take drop)", "user": "55c4e30be4b0e31453f649a6"}, {"problem": 49, "code": "(fn [n coll] (list (take n coll) (drop n coll)))", "user": "556ff203e4b09a3098a52526"}, {"problem": 49, "code": "#(vector\n                (vec (take %1 %2))\n                    (vec (drop %1 %2)))", "user": "55842bd7e4b05c286339e11c"}, {"problem": 49, "code": "#(conj [] (take %1 %2) (drop %1 %2))", "user": "59692530e4b069c0a1a197e4"}, {"problem": 49, "code": "#(vector\n  (take %1 %2)\n  (drop %1 %2))", "user": "590b8607e4b047aa04b199db"}, {"problem": 49, "code": "(fn [x xs]\n  [(take x xs) (drop x xs)])", "user": "59644d2ae4b069c0a1a19764"}, {"problem": 49, "code": "(fn [n xs] [(take n xs) (drop n xs)])", "user": "595fd721e4b066ee0a44b06e"}, {"problem": 49, "code": "(fn [a b]\n  [(take a b)(drop a b)])", "user": "59636ec9e4b066ee0a44b0c8"}, {"problem": 49, "code": "(fn my-split-at\n  [x lst]\n  (if (> x (count lst))\n    nil\n    (vector (take x lst) (drop x lst))))", "user": "59636cc2e4b066ee0a44b0c7"}, {"problem": 49, "code": "#(conj [] (take %1 %2) (drop %1 %2))", "user": "59636b6de4b066ee0a44b0c6"}, {"problem": 49, "code": "#(conj [] (take %1 %2) (drop %1 %2))", "user": "5398d042e4b0b51d73faaf00"}, {"problem": 49, "code": "(fn spl-at [n coll ] [(subvec coll 0 n ) (subvec coll n (count coll) )])", "user": "5972fcf6e4b01722bebd4c92"}, {"problem": 49, "code": "#(concat [(take %1 %2)] [(drop %1 %2)])", "user": "596f6683e4b069c0a1a19877"}, {"problem": 49, "code": "(fn solution49\n  [n llist]\n  [(vec (take n llist)) (vec (drop n llist))])", "user": "595bc925e4b066ee0a44afe2"}, {"problem": 49, "code": "(fn [n s]\n  [(take n s) (drop n s)])", "user": "59733c91e4b01722bebd4c9b"}, {"problem": 49, "code": "(fn [a b] (list (take a b)(drop a b)))", "user": "59648ce1e4b069c0a1a19769"}, {"problem": 49, "code": "(fn [k xs] [(take k xs) (drop k xs)])", "user": "59708e38e4b01722bebd4c65"}, {"problem": 49, "code": "(fn [n coll]\n  (conj [] (take n coll)  (drop n coll)))", "user": "5978305be4b01722bebd4d03"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "4fb1d7ace4b081705acca281"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5964f9b0e4b069c0a1a19778"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "595fd77ce4b066ee0a44b06f"}, {"problem": 49, "code": "(fn splitting [index coll] (list (take index coll) (drop index coll)))", "user": "58866b4fe4b0f1effa3b76d4"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5978b4c9e4b01722bebd4d13"}, {"problem": 49, "code": "(fn [len coll] [(take len coll) (drop len coll)])", "user": "53ef3adfe4b0742d9025b0c9"}, {"problem": 49, "code": "(fn [n coll]\n  (let [a (apply vector (take n coll))\n        b (apply vector (take-last (- (count coll) n) coll))]\n  (conj [] a b)))", "user": "5935151ee4b072a2710fd084"}, {"problem": 49, "code": "(fn [splitIndex coll] \n  [(take splitIndex coll) (drop splitIndex coll)])", "user": "59738d98e4b01722bebd4ca1"}, {"problem": 49, "code": "(fn [num l]\n  (let [reverseNum (- (count l) num)]\n  (list (take num l)\n        (reverse (take reverseNum (reverse l))))\n))", "user": "5954cea2e4b066ee0a44af0a"}, {"problem": 49, "code": "(fn [n s] (into [] [(take n s) (drop n s)]))", "user": "59804b60e4b021a7a535fdcf"}, {"problem": 49, "code": "(juxt take drop)", "user": "597dcb0ce4b0dbe32238d0a2"}, {"problem": 49, "code": "(fn [n xs]\n  (list\n   (take n xs)\n   (drop n xs)))", "user": "5980f91ae4b021a7a535fddd"}, {"problem": 49, "code": "(fn \n  [n xs]\n  (loop [cnt n\n         l []\n         [s & ss :as r] xs]\n    (cond\n     (= 0 cnt) (list l r)\n     ss (recur (dec cnt) (conj l s) ss)\n     :else (list l r))))", "user": "597d0e43e4b0dbe32238d095"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "58821372e4b0f1effa3b764d"}, {"problem": 49, "code": "#(identity [(take %1 %2) (drop %1 %2)])", "user": "591addcee4b09b4ee5954be1"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "59837909e4b021a7a535fe16"}, {"problem": 49, "code": "(juxt take drop)", "user": "597f8984e4b0dbe32238d0bf"}, {"problem": 49, "code": "(fn [n cl]\n  (conj [] (take n cl) (drop n cl)))", "user": "5926c254e4b072a2710fceb8"}, {"problem": 49, "code": "(fn [n xs] ( vector (vec(take n xs)) (vec(drop n xs))))", "user": "598588f2e4b021a7a535fe65"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "597768d0e4b01722bebd4cee"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "58fc92c5e4b0438e51c2cf9a"}, {"problem": 49, "code": "(fn [split coll] (cons (take split coll) (list (nthrest coll split))))", "user": "598ad666e4b02b9968b84ce1"}, {"problem": 49, "code": "#(loop [[head & tail :as act-coll] %2\n           i 0\n           fp []]\n  \n    (if  (= %1 i)\n      [fp act-coll]\n      (recur tail (inc i) (conj fp head))) )", "user": "598085e6e4b021a7a535fdd3"}, {"problem": 49, "code": "(juxt take drop)", "user": "5884f377e4b0f1effa3b76a8"}, {"problem": 49, "code": "(fn [n s]\n  [(take n s) (drop n s)])", "user": "597a4277e4b02382a38ad1e2"}, {"problem": 49, "code": "(fn [x y] (cons (into [] (take x y)) (conj [] (drop x y))))", "user": "593ab583e4b069cdc2982b57"}, {"problem": 49, "code": "#(conj [] (take %1 %2) (drop %1 %2))", "user": "5989ee61e4b021a7a535fed7"}, {"problem": 49, "code": "(fn [n l]\n  (concat\n   (list (take n l))\n   (list (drop n l))))", "user": "598ab445e4b02b9968b84ce0"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "59902fede4b0fcebec4de86d"}, {"problem": 49, "code": "#(conj (list (drop %1 %2)) (take %1 %2))", "user": "59346d29e4b072a2710fd077"}, {"problem": 49, "code": ";\n; hahaha `juxt take drop` of course, of course\n;\n\n#(vector (take %1 %2) (drop %1 %2))", "user": "594266cfe4b060784b3b790b"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "598af379e4b02b9968b84ce6"}, {"problem": 49, "code": "(fn [n xs] [(subvec xs 0 n) (subvec xs n)])", "user": "53dfd77fe4b0d874e779ae45"}, {"problem": 49, "code": "(fn foo [n coll]\n  (cons\n    ;\u524d\u9762\u7684\u96c6\u5408\n    (for [x coll y (range (+ 1 (count coll))) :when (= (get coll (- y 1)) x) :when (<= y n)] x)\n    ;\u540e\u9762\u7684\u96c6\u5408\n    (cons (for [x coll y (range (+ 1 (count coll))) :when (= (get coll (- y 1)) x) :when (> y n)] x) [])))", "user": "598d0dc3e4b02b9968b84d18"}, {"problem": 49, "code": "(fn spiter [x y] (conj (conj [] (vec (take x y))) (vec (drop x y))))", "user": "598d22b1e4b02b9968b84d1a"}, {"problem": 49, "code": "(fn [n coll]\n  (vector (take n coll) (drop n coll)))", "user": "5990a9fde4b0866487ed0d54"}, {"problem": 49, "code": ";(fn [i coll] [(take i coll) (drop i coll)])\n\n(juxt take drop)", "user": "594bc16be4b07ddc2dafae39"}, {"problem": 49, "code": "(fn [part xs]\n  (cons (take part xs)\n        (cons (drop part xs) ())))", "user": "5907a736e4b047aa04b1995e"}, {"problem": 49, "code": "#(conj (conj [] (take % %2)) (drop % %2))", "user": "5971763fe4b01722bebd4c72"}, {"problem": 49, "code": "(fn [n seq]\n  (vector (take n seq) (take-last (- (count seq) n) seq)))", "user": "56478a82e4b0284900eef61e"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "596d630ae4b069c0a1a19846"}, {"problem": 49, "code": "(fn [n col]\n    (vector (take n col) (drop n col)))", "user": "59932f49e4b0b211ea3aaaae"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5990fcb9e4b0866487ed0d5b"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "596c1f25e4b069c0a1a19825"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "560b6895e4b05f002753df1a"}, {"problem": 49, "code": "(fn([x y] [(into [] (take x y)) (into [] (drop x y))] ))", "user": "55e46caae4b050e68259b451"}, {"problem": 49, "code": "(fn split [n, seqq]\n  [(take n seqq) (drop n seqq)])", "user": "59971e2de4b07157cc8daacc"}, {"problem": 49, "code": "(fn [index xs]\n  (let [first-part (vec (take index xs))\n        rest-part (vec (drop index xs))]\n    [first-part rest-part]))", "user": "58fed70de4b0438e51c2cfdd"}, {"problem": 49, "code": "(fn [n coll] \n  [(subvec coll 0 n) (subvec coll n)])", "user": "55916764e4b0604b3f94d57b"}, {"problem": 49, "code": "(juxt #(take %1 %2) #(drop %1 %2))", "user": "598858d0e4b021a7a535feb5"}, {"problem": 49, "code": "#(vector (take % %2) (nthnext %2 %))", "user": "596539dce4b069c0a1a19783"}, {"problem": 49, "code": "(juxt take drop)", "user": "5960a1a6e4b066ee0a44b08e"}, {"problem": 49, "code": "(fn [n coll]\n  \n  [ (take n coll)\n    (drop n coll) ])", "user": "59971dcbe4b07157cc8daacb"}, {"problem": 49, "code": "(fn [n coll]\n\t[(take n coll) (drop n coll)]  \n)", "user": "5991d2fae4b0866487ed0d68"}, {"problem": 49, "code": "(fn [n, ls] [(vec (take n ls)) (vec (drop n ls))])", "user": "59a180b3e4b0871e7608b852"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "59a24c92e4b066c664927d20"}, {"problem": 49, "code": "(fn split-in-half [c x]\n     [(take c x) (drop c x)])", "user": "594ea2a4e4b07ddc2dafaeb6"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "55b28b57e4b01b9910ae296c"}, {"problem": 49, "code": "(fn [i lst] \n\t[(take i lst) (drop i lst)]\n)", "user": "59a2ba97e4b066c664927d2c"}, {"problem": 49, "code": "(fn [sep col] (vector (vec (take sep col)) (vec (drop sep col))))", "user": "59874ff6e4b021a7a535fea1"}, {"problem": 49, "code": "(fn [n s]\n  [(take n s) (drop n s)])", "user": "59946856e4b0b211ea3aaac7"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "58637221e4b0f14aab7c881d"}, {"problem": 49, "code": "(fn [i v] (vector (subvec v 0 i) (subvec v i)))", "user": "5989e080e4b021a7a535fed6"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "59944e73e4b0b211ea3aaac2"}, {"problem": 49, "code": "(fn my-split\n  [n coll]\n  (list (take n coll) (drop n coll)))", "user": "59a512b7e4b066c664927d5e"}, {"problem": 49, "code": "(fn [x coll] [(take x coll) (nthrest coll x)])", "user": "58e5180ae4b056aecfd47c82"}, {"problem": 49, "code": "(fn split [n s]\n  (list \n    (take n s)\n    (reverse (take (- (count s) n) (reverse s)))))", "user": "57fe840ae4b0d3187e9009d3"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "576c2ecae4b07c67f59d1fbb"}, {"problem": 49, "code": "(fn [n the-seq]\n  (list (take n the-seq) (drop n the-seq)))", "user": "59a96a85e4b0bcf4e9a43b13"}, {"problem": 49, "code": "(fn [idx coll] [ (take idx coll) (drop idx coll) ])", "user": "59a72effe4b066c664927d94"}, {"problem": 49, "code": "(fn [n xs] (vector (take n xs) (drop n xs)))", "user": "598debf0e4b02b9968b84d2e"}, {"problem": 49, "code": "(fn [i xs] [(take i xs)(reverse (take (- (count xs) i) (reverse xs)))])", "user": "597fa3fbe4b021a7a535fdbf"}, {"problem": 49, "code": "#(merge []\n    (take %1 %2) \n    (drop %1 %2)\n   )", "user": "57bffed6e4b05aa3c4741c89"}, {"problem": 49, "code": "(fn[n sq]\n            [(take n sq) (drop n sq)])", "user": "57e6f90de4b0bfb2137f5af6"}, {"problem": 49, "code": "(fn [num col]\n  (list (take num col) (drop num col)))", "user": "59a8405ce4b0bcf4e9a43af1"}, {"problem": 49, "code": "(juxt take drop)", "user": "59a57e91e4b066c664927d63"}, {"problem": 49, "code": "(fn [at s] [(take at s) (drop at s)])", "user": "59aeed59e4b0e1f4e384c8ab"}, {"problem": 49, "code": "(juxt take drop)", "user": "59b1c2eae4b0e1f4e384c8ec"}, {"problem": 49, "code": "#(list (take %1 %2) (nthrest %2 %1))", "user": "59a0262ee4b0871e7608b82d"}, {"problem": 49, "code": "(fn [n coll]\n   (list (take n coll) (drop n coll)))", "user": "59ac0965e4b08cbb53654da6"}, {"problem": 49, "code": "#(vector (subvec %2 0 %1) (subvec %2 %1))", "user": "59089229e4b047aa04b1997c"}, {"problem": 49, "code": "(fn [n s]\n  (seq [(take n s) (drop n s)]))", "user": "598229d6e4b021a7a535fdfb"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "59ac559ee4b00adcf69795d2"}, {"problem": 49, "code": "(fn [n l]\n  [(take n l) (drop n l)])", "user": "571543bbe4b07c98581c3ad4"}, {"problem": 49, "code": "(fn [c col]\n  (list (vec (take c col)) (vec (drop c col))))", "user": "57481f1fe4b009280f9f2b82"}, {"problem": 49, "code": "#(list (take %1 %2) (reverse (take (- (count %2) %1) (reverse %2))))", "user": "59b554cee4b05c620303ca0f"}, {"problem": 49, "code": "#(do [(take % %2) (drop % %2)])", "user": "59adec09e4b0e1f4e384c897"}, {"problem": 49, "code": "(fn do-split\n  [n coll]\n  [(take n coll) (drop n coll)])", "user": "59b62f8de4b05c620303ca1f"}, {"problem": 49, "code": "#(conj (conj [] (vec(first(partition-all %1 %2)))) (vec(apply concat(rest(partition-all %1 %2)))))", "user": "59bac5c9e4b0a024fb6ae3ed"}, {"problem": 49, "code": "(fn two-parts\n  [n xs] (concat (list (take n xs))\n                 (list (drop n xs))))", "user": "59afe4bae4b0e1f4e384c8c0"}, {"problem": 49, "code": "(fn\n  [num xs]\n  (loop [n 0\n         coll xs\n         first-half []]\n    (if (< n num)\n      (recur (inc n) (rest coll) (conj first-half (first coll)))\n      (vector first-half coll))))", "user": "59a6185ee4b066c664927d76"}, {"problem": 49, "code": "(juxt take drop)", "user": "59be62d5e4b0a024fb6ae435"}, {"problem": 49, "code": "(fn [n coll]\n  (vector (take n coll) (drop n coll)))", "user": "55ce2b6de4b0e31453f64a26"}, {"problem": 49, "code": "#(list (take %1 %2)(nthnext %2 %1))", "user": "59a9c22ae4b08cbb53654d75"}, {"problem": 49, "code": "(fn [a b] [(take a b) (drop a b)])", "user": "5797d3d2e4b039eba2ecb106"}, {"problem": 49, "code": "(fn [n col]\n  (vector (take n col) (drop n col)))", "user": "59abd1d8e4b08cbb53654da4"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "54058af3e4b0addc1aec6669"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "59358f74e4b04f87174def52"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "59a3f3dce4b066c664927d48"}, {"problem": 49, "code": "(fn [n coll] (vector (take n coll) (drop n coll) ))", "user": "59c94a69e4b0a024fb6ae576"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "59c22fbae4b0a024fb6ae4a3"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "58a32c21e4b02bd94d917eeb"}, {"problem": 49, "code": "(fn [a b]\n   (loop [a (- (count b) a)\n          b b\n          tmp []\n          return []]\n     (if (empty? b)\n       (conj return tmp)\n       (if (= (count b) a)\n         (recur a (rest b) (conj (empty tmp) (first b)) (conj return tmp))\n         (recur a (rest b) (conj tmp (first b)) return)))))", "user": "57c44053e4b05aa3c4741ccb"}, {"problem": 49, "code": "(fn [v coll]\n   [(take v coll) (drop v coll)])", "user": "59cb706ee4b0a024fb6ae5ba"}, {"problem": 49, "code": "#(vec [\n  (take %1 %2)\n  (drop %1 %2)\n ]\n)", "user": "59cf0d75e4b0ef0a1e9b5b5f"}, {"problem": 49, "code": "#(vector (vec (take %1 %2)) (vec (drop %1 %2)))", "user": "59c7c2cde4b0a024fb6ae54b"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "59bdf0eae4b0a024fb6ae42e"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "594a7ed1e4b07ddc2dafae02"}, {"problem": 49, "code": "#(concat (vector (take % %2)) (vector (take-last (- (count %2) %) %2)))", "user": "59c734e3e4b0a024fb6ae53f"}, {"problem": 49, "code": "(fn [a b]\n  [(take a b) (drop a b)])", "user": "595a3b41e4b066ee0a44afb7"}, {"problem": 49, "code": "(fn [n coll]\n  (let [s (partition-all n coll)]\n    [(first s) (apply concat (next s))]\n    )\n  )", "user": "55fd0d19e4b0f488688e067a"}, {"problem": 49, "code": "(fn [sidx coll] (reduce-kv #(update-in %1 [(or (and (< %2 sidx) 0) 1)] conj %3)  [[] []] coll))", "user": "51f38193e4b0fca5e8b48226"}, {"problem": 49, "code": "(fn [n x] [(vec (take n x)) (vec (drop n x))])", "user": "57c4e8dce4b05aa3c4741cd7"}, {"problem": 49, "code": "#(loop[pivot 0 result nil coll %2]\n  (if (= pivot %1) [(reverse result) coll]\n           (recur (inc pivot) (cons (first coll) result) (rest coll))))\n\n\n;#(loop[pivot 0 result nil coll %2]\n;  (if (= pivot %1) (cons (reverse result) (cons coll []))\n;           (recur (inc pivot) (cons (first coll) result) (rest coll))))\n\n\n;(fn [n coll]\n;  [(take n coll)(drop n coll)])", "user": "59c77511e4b0a024fb6ae545"}, {"problem": 49, "code": "#_(fn [cnt coll] [(take cnt coll) (drop cnt coll)])\n\n(juxt take drop)", "user": "58c7131be4b021aa9917ed6d"}, {"problem": 49, "code": "#(list (subvec %2 0 %1) (subvec %2 %1))", "user": "59cf4013e4b0ef0a1e9b5b68"}, {"problem": 49, "code": "(fn [n a]\n  (loop [c 0 a a o [[] []]]\n    (if (empty? a) o\n      (recur (inc c) \n             (rest a) \n             (assoc o (if (< c n) 0 1) \n                      (conj (get o (if (< c n) 0 1)) (first a)))))))", "user": "59ddae03e4b01968742fed65"}, {"problem": 49, "code": "(fn [n xs] [(take n xs) (drop n xs)])", "user": "59da6480e4b0ef0a1e9b5c68"}, {"problem": 49, "code": "(fn [n x] \n  (vector (take n x) (drop n x)))", "user": "59d75e36e4b0ef0a1e9b5c32"}, {"problem": 49, "code": "(fn [s sq] [(vec (take s sq)) (vec (drop s sq)) ])", "user": "59d4a160e4b0ef0a1e9b5be7"}, {"problem": 49, "code": "(fn splt [n lst]\n\t[(take n lst) (drop n lst)]\n)", "user": "59e0111ae4b08badc2a0c4e4"}, {"problem": 49, "code": "(fn [n c] [(take n c)(drop n c)])", "user": "593fcb0ce4b069cdc2982bea"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "57ca95f2e4b05aa3c4741d3b"}, {"problem": 49, "code": "(fn [n lst] (list (take n lst) (drop n lst)))", "user": "59e18b9be4b08badc2a0c50f"}, {"problem": 49, "code": "(fn [x y] (loop [cc x rem y ret []] (if (< cc 1) (conj [] ret (apply vector rem)) (recur (dec cc) (rest rem) (conj ret (first rem))))))", "user": "5839f079e4b089d5ab817d48"}, {"problem": 49, "code": "(fn [n lst] (concat (list (take n lst)) (list (drop n lst))))", "user": "59dfd369e4b08badc2a0c4dd"}, {"problem": 49, "code": "(fn [n lst] [(take n lst) (drop n lst)])", "user": "59e12c94e4b08badc2a0c509"}, {"problem": 49, "code": "(fn split [step coll]\n  (vector (apply vector (take step coll)) (apply vector (drop step coll))))", "user": "579f89d5e4b05302be0b72ff"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "59e0f38ae4b08badc2a0c500"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "59dd38a8e4b0a0ac046f2503"}, {"problem": 49, "code": "(fn algo \n  [n lst]\n  [(take n lst)(drop n lst)]\n  )", "user": "59e56c75e4b08badc2a0c556"}, {"problem": 49, "code": "(fn [indiceDeSeparacion lista]\n  (list (vec (reverse (nthrest (reverse lista) (- (count lista) indiceDeSeparacion)))) (vec(nthrest lista indiceDeSeparacion))))", "user": "59e63a2ce4b08badc2a0c569"}, {"problem": 49, "code": "(fn [n lst]\n  (concat (vector (take n lst)) (vector (rest (drop (dec n) lst)))))", "user": "59deba46e4b01968742fed7f"}, {"problem": 49, "code": "(fn [n s] \n  (list (take n s) (drop n s)))", "user": "59e55cc8e4b08badc2a0c555"}, {"problem": 49, "code": "(fn f \n  [n lst]\n  (concat\n    (list (map #(second %) (take-while #(< (first %) n) (map-indexed vector lst))))\n    (list (map #(second %) (drop-while #(< (first %) n) (map-indexed vector lst))))))", "user": "59e778aae4b0249b72820716"}, {"problem": 49, "code": "(fn my-split [numb lst]\n  (concat (list(take numb lst) )  (list(drop numb lst))))", "user": "59dd387be4b0a0ac046f2502"}, {"problem": 49, "code": "(fn split\n  [n lst]\n  (cons (take n lst) (list(reverse (take (- (count lst) n) (reverse lst))))))", "user": "59e4e3cbe4b08badc2a0c54a"}, {"problem": 49, "code": "(fn splitSeq\n  [n list]\n  [(take n list) (drop n list)])", "user": "59dd3930e4b0a0ac046f2504"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "5957cc41e4b066ee0a44af76"}, {"problem": 49, "code": "#((juxt take drop) %1 %2)", "user": "572de985e4b0cd1946bd0f7c"}, {"problem": 49, "code": "(fn Split-a-sequence\n  [n coll]\n  [(take n coll) (drop n coll)])", "user": "59e14ee3e4b08badc2a0c50c"}, {"problem": 49, "code": "(fn split\n  [n lst]\n  (let [second-part (drop n lst)\n        first-part (take n lst)]\n    (vector first-part second-part)))", "user": "59e8fef3e4b0249b72820743"}, {"problem": 49, "code": "(fn [n xs]\n  [(take n xs) (drop n xs)])", "user": "501948b3e4b0b6630b101db5"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "59e9f03be4b0249b72820752"}, {"problem": 49, "code": "(fn [n coll]\n   (let [coll1 (vec (take n coll))\n         coll2 (vec (drop n coll))]\n     (conj [] coll1 coll2)))", "user": "58a34442e4b02bd94d917ef2"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "59ea287ee4b0249b72820760"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "59e95cafe4b0249b7282074b"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "59e62655e4b08badc2a0c568"}, {"problem": 49, "code": "(fn split\n  [n lst]\n  [(take n lst) (drop n lst)])", "user": "59e68254e4b0249b728206fc"}, {"problem": 49, "code": "(fn [pos col] \n       [(take pos col)\n        (drop pos col)])", "user": "59ea85e4e4b0249b72820767"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "59eb63e3e4b0249b7282077c"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "59dd387ae4b0a0ac046f2501"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "580e7761e4b0849f6811b753"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "59ed01ede4b0249b7282079a"}, {"problem": 49, "code": "(fn [n seq]\n  (vector\n    (take n seq)\n    (take-last (- (count seq) n) seq)))", "user": "5984e7dee4b021a7a535fe43"}, {"problem": 49, "code": "(fn [x y]\n  (conj (conj [] (vec (take x y))) (vec (take-last (- (count y) x) y))))", "user": "593c1e3be4b069cdc2982b86"}, {"problem": 49, "code": "(fn [n a](list (take n a)(drop n a)))", "user": "59e8bb43e4b0249b72820735"}, {"problem": 49, "code": "(fn [n xs]\n  [(take n xs) (drop n xs)])", "user": "59ee6801e4b0966464fe6a1f"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "59c8ffe6e4b0a024fb6ae56c"}, {"problem": 49, "code": "(fn fakesol [x y]\n  (if (= x 3)\n    [[1 2 3] [4 5 6]]\n    (if (= x 1)\n      [[:a] [:b :c :d]]\n      [[[1 2] [3 4]] [[5 6]]])))", "user": "59e0f839e4b08badc2a0c502"}, {"problem": 49, "code": "(fn [n X] (list (take n X)(drop n X)))", "user": "553bc237e4b09218d5f4500a"}, {"problem": 49, "code": "(fn [a b] [(take a b) (drop a b)])", "user": "59ea0944e4b0249b72820758"}, {"problem": 49, "code": "#(vector(take %1 %2) (drop %1 %2))", "user": "59c76402e4b0a024fb6ae542"}, {"problem": 49, "code": "(fn my-split-at [n xs]\n  ((fn step [acc xs idx limit]\n     (if (= idx limit)\n       (conj [] acc (into [] xs))\n       (step (conj acc (first xs)) (next xs) (inc idx) limit)))\n   [] xs 0 n))", "user": "59e8cd8be4b0249b72820739"}, {"problem": 49, "code": "(fn [x y]\n  (vector (take x y) (drop x y))\n  )", "user": "59f1d218e4b0966464fe6a68"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "566e87cfe4b0a866af6896dc"}, {"problem": 49, "code": "#(->> %2\n      (partition-all %1)\n      (apply (fn [x & xs] (vector x (apply concat xs)))))", "user": "59ef6cfae4b0966464fe6a32"}, {"problem": 49, "code": "(fn [n coll] (let [l (count coll)] [(take n coll) (take-last (- l n) coll)]))", "user": "59ba2ea0e4b0a024fb6ae3e1"}, {"problem": 49, "code": "(fn split [n s]\n  (list (take n s) (drop n s)))", "user": "59f78b49e4b0ca45a743a30e"}, {"problem": 49, "code": "(juxt take drop)", "user": "5628f33ce4b00e49c7cb47f3"}, {"problem": 49, "code": "#(vec [ (take %1 %2) (drop %1 %2) ])", "user": "59f90e6ae4b0ca45a743a337"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "59f8b925e4b0ca45a743a327"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "59f192e0e4b0966464fe6a5e"}, {"problem": 49, "code": "(fn [n coll]\n    [(take n coll) (drop n coll)]\n    )", "user": "5683fcafe4b0945ebc182aa8"}, {"problem": 49, "code": "(fn [n s]\n  \n  (vector (take n s) (drop n s))\n  )", "user": "56f2611fe4b04a395b9a04a2"}, {"problem": 49, "code": "#(-> [(take %1 %2) (drop %1 %2)])", "user": "58d96bdce4b0a4d5acaab638"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))\n\n;; a very elegant solution by user anjensan:\n;; => (juxt take drop)", "user": "59a080e3e4b0871e7608b837"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "59fea630e4b01bb0ae8afd10"}, {"problem": 49, "code": "(fn [n sequence]\n   (list (take n sequence) (drop n sequence)))", "user": "59fa7fb0e4b0ca45a743a366"}, {"problem": 49, "code": "(fn [n xs] [(take n xs) (drop n xs)])", "user": "59fa241ee4b0ca45a743a358"}, {"problem": 49, "code": "#(concat (vector (take %1 %2)) (vector (drop  %1 %2)))", "user": "58182480e4b0c0e9c07b83a7"}, {"problem": 49, "code": "(fn [at xs] \n  (vector (take at xs) (drop at xs)))", "user": "5a01d8f6e4b01bb0ae8afd53"}, {"problem": 49, "code": "(fn [splitAt sq] \n  [(take splitAt sq) (drop splitAt sq)])", "user": "588fd085e4b00487982d51c0"}, {"problem": 49, "code": "(fn [n xs] \n      [(subvec xs 0 n) (subvec xs n)])", "user": "53de4bdae4b0d874e779ae32"}, {"problem": 49, "code": "(fn [n s] [(take n s) (drop n s)])", "user": "5a04e923e4b01bb0ae8afda9"}, {"problem": 49, "code": "(fn [idx coll]\n  [(take idx coll)\n   (drop idx coll)])", "user": "5a065388e4b01bb0ae8afdcb"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "59f15e20e4b0966464fe6a5a"}, {"problem": 49, "code": "(fn [pos coll] [(vec (take pos coll)) (vec (drop pos coll))])", "user": "5a082ce4e4b01bb0ae8afdec"}, {"problem": 49, "code": "(fn split-seq [n s]\n\t(let [f (seq (take n s))\n\t\t r (list (drop n s))]\n\n\t\t (conj r f)\n\t\t)\n\n\t\n\t)", "user": "5a025edde4b01bb0ae8afd64"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "59fa5773e4b0ca45a743a35e"}, {"problem": 49, "code": "(fn my-split-at\n  [at coll]\n  (let [start #(< (.indexOf coll %) at)]\n    [(filter #(start %) coll)\n     (filter #((complement start) %) coll)]\n    ))", "user": "59f44189e4b0966464fe6aab"}, {"problem": 49, "code": "(fn [n s]\n  [(take n s) (drop n s)])", "user": "5a0b9fc0e4b04bbd27e6d992"}, {"problem": 49, "code": "#((juxt take drop) % %2)", "user": "5a00cb31e4b01bb0ae8afd36"}, {"problem": 49, "code": "(fn [n s] (list (take n s) (drop n s)))", "user": "5a080bdde4b01bb0ae8afde9"}, {"problem": 49, "code": "#(conj (list (nthrest %2 %)) (take % %2))", "user": "5a0a3473e4b0eab8c0448941"}, {"problem": 49, "code": "#(vector \n       (vec (take %1 %2)) \n       (vec (drop %1 %2)))", "user": "59f820d9e4b0ca45a743a316"}, {"problem": 49, "code": "(fn split-em [n xs]\n  (let\n      [k (count xs)]\n    (vector (subvec xs 0 n) (subvec xs n k))))", "user": "59f7f55de4b0ca45a743a313"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5a07fefee4b01bb0ae8afde5"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5a0a25fce4b0eab8c044893d"}, {"problem": 49, "code": "(fn s-at [n xs]\n   [(vec (take n xs)) (vec (drop n xs))])", "user": "58d1c1b1e4b03c36ff7e58ef"}, {"problem": 49, "code": "(fn [index list]\n  [(take index list) (drop index list)])", "user": "5a12dea3e4b04bbd27e6da44"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "54497569e4b032a45b8693d2"}, {"problem": 49, "code": "(fn [a xs] (vector (take a xs) (nthrest xs a)))", "user": "5830377ee4b051871117c004"}, {"problem": 49, "code": "(fn split-seq [n coll]\n  (conj '() (nthrest coll n) (take n coll)))", "user": "598876fee4b021a7a535feb7"}, {"problem": 49, "code": "(fn [n l]\n  (vector (take n l) (drop n l)))", "user": "574b4f3ee4b02ea114799207"}, {"problem": 49, "code": "(fn [n col]\n  (loop [col col\n         f []\n         n n]\n    (if (or (zero? n) (empty? col))\n      [f col]\n      (recur (rest col) (conj f (first col)) (dec n)))))", "user": "5a188be3e4b0ff51aa4b31ec"}, {"problem": 49, "code": "#(conj [] (take %1 %2) (drop %1 %2))", "user": "59fd069ae4b01bb0ae8afcf4"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5a0ce1a5e4b04bbd27e6d9b7"}, {"problem": 49, "code": "(fn [idx coll] [(subvec coll 0 idx) (subvec coll idx)])", "user": "5862a8a9e4b0f14aab7c880f"}, {"problem": 49, "code": "(fn [n s]\n  [(take n s) (drop n s)])", "user": "580a0783e4b0a837a8b30d2c"}, {"problem": 49, "code": "(fn [n col] \n  (reduce-kv\n    (fn [xs k v] \n      (if\n        (< k n) (vector (conj (first xs) v) (nth xs 1))\n        (vector (nth xs 0) (conj (nth xs 1) v))))\n    (vector (vector) (vector))\n    col))", "user": "5a14228fe4b0ff51aa4b3193"}, {"problem": 49, "code": "(fn [n xs] (list (take n xs) (drop n xs)))", "user": "594bc7d6e4b07ddc2dafae3d"}, {"problem": 49, "code": "(fn[x y](partition-by #(> x (.indexOf y %)) y))", "user": "55129667e4b06e50f9beb1ac"}, {"problem": 49, "code": "#(conj [(take %1 %2)]\n         (loop [x 1 res %2]\n           (if (> x %1)\n             res\n             (recur (inc x) (rest res)))))", "user": "5a18488ee4b0ff51aa4b31e5"}, {"problem": 49, "code": "(fn [n col]\n  (concat [(take n col)] [(drop n col)]))", "user": "5a144fd8e4b0ff51aa4b319a"}, {"problem": 49, "code": "(fn [a b] [(take a b) (drop a b)])", "user": "59f2af64e4b0966464fe6a87"}, {"problem": 49, "code": "(fn [n xs] [(vec (take n xs)) (vec (drop n xs))])", "user": "59ff9424e4b01bb0ae8afd24"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5a0ef454e4b04bbd27e6d9fa"}, {"problem": 49, "code": "(fn [n xs] (list (take n xs) (drop n xs)))", "user": "59f043d0e4b0966464fe6a3d"}, {"problem": 49, "code": "(fn [n coll] [(take n coll)(drop n coll)])", "user": "5a1ef970e4b0ff51aa4b327d"}, {"problem": 49, "code": "#(let [rez []] (conj rez (vec (map %2 (range %1))) (vec (map %2 (range %1 (count %2))))))", "user": "59135c11e4b0163c97b36f02"}, {"problem": 49, "code": "(fn [pos s] [(take pos s) (drop pos s)])", "user": "5a1dd5b4e4b0ff51aa4b3260"}, {"problem": 49, "code": "(fn split-it [rank coll]\n  (vector (take rank coll) (drop rank coll))\n)", "user": "59fa0bb6e4b0ca45a743a352"}, {"problem": 49, "code": "(fn [len input]\n  (loop [x len current input output []]\n    (if (= 0 x)\n      (conj [output] (vec current))\n      (recur (- x 1) (rest current) (conj output (first current))))))", "user": "5a21d34ce4b0ff51aa4b32b9"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5a09f35fe4b0eab8c0448934"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "59b69bbee4b05c620303ca2a"}, {"problem": 49, "code": "(juxt take drop)", "user": "5a1149ace4b04bbd27e6da26"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5a250b86e4b07f18be40aa19"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5a19d181e4b0ff51aa4b3207"}, {"problem": 49, "code": "(fn [up-to a-coll]\n  (let [left  (take up-to a-coll)\n        right (drop up-to a-coll)]\n    (list left right)))", "user": "5054d243e4b0b1b9d1860eb5"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5a16da30e4b0ff51aa4b31cc"}, {"problem": 49, "code": "(fn [n c] [(take n c) (drop n c)])", "user": "5112500ee4b0350614f07a72"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "59f75327e4b0966464fe6aec"}, {"problem": 49, "code": "(juxt take drop)", "user": "5a135573e4b0ff51aa4b3180"}, {"problem": 49, "code": "(fn [n coll]\n    [(take n coll) (drop n coll)])", "user": "5a2834dfe4b07f18be40aa64"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "568d381ee4b0dcc4269f40c1"}, {"problem": 49, "code": "(fn split [at coll]\n  (list (map #(nth coll %) (take-while #(< % at) (range 0 (inc at))))\n        (map #(nth coll %) (drop-while #(< % at) (range 0 (count coll)))\n\n        )))", "user": "5a05a807e4b01bb0ae8afdb8"}, {"problem": 49, "code": "(fn [n l] [(subvec l 0 n) (subvec l n)])", "user": "5a2df4a0e4b09cafd31c7f74"}, {"problem": 49, "code": "(fn [i coll] (vector (take i coll) (drop i coll)))", "user": "5a2e39fce4b09cafd31c7f77"}, {"problem": 49, "code": "(fn [x list] \n  (vector (take x list) (drop x list)))", "user": "5a1bec89e4b0ff51aa4b322f"}, {"problem": 49, "code": "(fn [i l]\n    (loop [x l j 0 y nil]\n          (if (= j i)\n              [(reverse y) x]\n              (recur (rest x) (inc j) (cons (first x) y)))))", "user": "5a34f342e4b0ddc586f153d1"}, {"problem": 49, "code": "(fn [n xs]\n  (list (take n xs) (drop n xs)))", "user": "56ef077ae4b04a395b9a0459"}, {"problem": 49, "code": "(fn [at lst]\n  [(take at lst) (drop at lst)]\n  )", "user": "5a2e80fde4b09cafd31c7f7d"}, {"problem": 49, "code": "#(vector (take %1 %2) (nthrest %2 %1))", "user": "53307a23e4b019098a6f8b5d"}, {"problem": 49, "code": "(fn [n seq] (list (take n seq) (drop n seq)))", "user": "59fcc31fe4b01bb0ae8afcef"}, {"problem": 49, "code": "#(map (partial map second) (partition-by first (map-indexed (fn [a b] [(< % (+ a 1)) b]) %2)))", "user": "5a3d7afae4b0447ef91cc5a6"}, {"problem": 49, "code": "(fn [ n s] (vector (into [ ](take n s))(into [] (drop n s))) )", "user": "5a1c8c26e4b0ff51aa4b3247"}, {"problem": 49, "code": "(juxt take drop)", "user": "5a3c5c54e4b001c08efc0ce3"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5a3ece62e4b0447ef91cc5b9"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5a285a38e4b07f18be40aa67"}, {"problem": 49, "code": "(fn my-split-at [n coll]\n  (vector (take n coll) (drop n coll)))", "user": "5773f3a9e4b0979f896515f2"}, {"problem": 49, "code": "(fn [n xs] (list (take n xs) (drop n xs)))", "user": "55d7312ee4b0e31453f64a9f"}, {"problem": 49, "code": "(fn [n a] \n  (list (take n a) (drop n a)))", "user": "57de5f0ee4b0bd073c202450"}, {"problem": 49, "code": "(fn [n s]\n  (list (take n s) (drop n s)))", "user": "54bd9a60e4b0ed20f4ff6ee3"}, {"problem": 49, "code": "(fn [num coll]\n  [(take num coll) (drop num coll)])", "user": "58a6806ee4b01a0c0b23292f"}, {"problem": 49, "code": "(fn [i x] [(take i x) (drop i x)])", "user": "5900d5cde4b0438e51c2d02e"}, {"problem": 49, "code": "(fn [x y] [(take x y) (take-last (- (count y) x) y)])", "user": "5a40eb64e4b0447ef91cc5d8"}, {"problem": 49, "code": "(fn [n coll]\n   [(take n coll) (drop n coll)]\n   )", "user": "5a43347ee4b0447ef91cc603"}, {"problem": 49, "code": "(fn my-split-at\n  [n x]\n  (let [prt (partition-all n x)]\n        (conj [(vec (first prt))] (reduce #(apply conj %1 %2) [] (rest prt)))))", "user": "5a401a7de4b0447ef91cc5c5"}, {"problem": 49, "code": "(fn split-at'\n  [n ls]\n  [(take n ls) (drop n ls)])", "user": "5a067f26e4b01bb0ae8afdcc"}, {"problem": 49, "code": "#(vector \n       (vec (take %1 %2)) \n(vec (drop %1 %2)))", "user": "5a4208dde4b0447ef91cc5ee"}, {"problem": 49, "code": "(juxt take drop)", "user": "59dfb8dbe4b08badc2a0c4da"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "59970911e4b07157cc8daac7"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5a4993c0e4b05d388ecb6b71"}, {"problem": 49, "code": "#(vector\n   (vec (take %1 %2))\n   (vec (drop %1 %2)))", "user": "5a4443cae4b0447ef91cc60f"}, {"problem": 49, "code": "#(letfn [(r [x y]\n             (if (or (empty? x) (== (count y) %1))\n               [y (apply vector (first x) (rest x))]\n               (r (rest x) (conj y (first x)))))]\n    (r %2 []))", "user": "52281e1ee4b0186687e23a69"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5a4de614e4b05d388ecb6bb1"}, {"problem": 49, "code": "(fn my-split [p l]\n  [(vec (take p l)) (drop p l)])", "user": "54f773bfe4b01ecee9d8881f"}, {"problem": 49, "code": "(fn split\n\t[n some-seq]\n\t[(into [] (take n some-seq)) (into [] (nthnext some-seq n))])", "user": "5a35d515e4b0ddc586f153e1"}, {"problem": 49, "code": "(fn [n coll]\n  (let [partitions (partition-all n coll)]\n    (conj (vector (first partitions)) (apply concat (rest partitions)))))", "user": "5a4e1c81e4b05d388ecb6bb6"}, {"problem": 49, "code": "(fn sp [x y]\n  [(take x y) (drop x y)])", "user": "5a42dbbbe4b0447ef91cc5fd"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)] )", "user": "5a535572e4b05d388ecb6c0b"}, {"problem": 49, "code": "#_(fn m-split-at [location a-seq]\n  (loop [i 1\n         r []\n         s a-seq]\n    (if (> i location)\n      [r (vec s)]\n      (recur (inc i) (conj r (first s)) (rest s)))))\n\n(fn m-split-at [location a-seq]\n\t[(vec (take location a-seq)) (vec (drop location a-seq))])", "user": "57d174ede4b0bd073c20236c"}, {"problem": 49, "code": "(fn [n x] [(take n x) (drop n x)])", "user": "5a533cc0e4b05d388ecb6c09"}, {"problem": 49, "code": "#(vector\n  (vec (take %1 %2))\n  (vec (drop %1 %2)))", "user": "5a534241e4b05d388ecb6c0a"}, {"problem": 49, "code": "(fn [n coll]\n   (let [c (partition-all n coll)]\n     [(first c) (apply concat (rest c))]\n     )\n   )", "user": "58d4d864e4b03c36ff7e594c"}, {"problem": 49, "code": "(juxt take drop)", "user": "5a527beee4b05d388ecb6bfe"}, {"problem": 49, "code": "(fn [n s] [(take n s) (take-last (- (count s) n) s)])", "user": "5a3c2a08e4b001c08efc0cdf"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5a566e8fe4b05d388ecb6c51"}, {"problem": 49, "code": "(fn [sep in]\n  [(first (partition-all sep in)) (apply concat (rest (partition-all sep in)))]\n;  [(subvec (vec in) 0 sep) (subvec (vec in) sep)]\n)", "user": "5a244240e4b0ff51aa4b32e9"}, {"problem": 49, "code": "(fn [n coll]\n  (conj [] (take n coll) (drop n coll)))", "user": "565654dae4b0f9d632dd849f"}, {"problem": 49, "code": "(fn [at coll]\n  (cons (take at coll) (cons (drop at coll) '())))", "user": "5182de5ce4b0353c468deb74"}, {"problem": 49, "code": "(fn [n xs] [(take n xs) (drop n xs)])", "user": "552d9b31e4b076ab5578f7eb"}, {"problem": 49, "code": "(fn [n coll]\n [(take n coll) (drop n coll)])", "user": "5a1c3c11e4b0ff51aa4b323d"}, {"problem": 49, "code": "(fn [x coll]\n  [(take x coll)\n   (drop x coll)])", "user": "5a4caa20e4b05d388ecb6b94"}, {"problem": 49, "code": "(fn my-split-at [n items]\n  [(subvec items 0 n) (subvec items n)])\n  ;(conj [] (subvec items 0 n) (subvec items n)))", "user": "5a23503fe4b0ff51aa4b32d6"}, {"problem": 49, "code": "(fn [n s] [(take n s) (drop n s)])", "user": "53f053ebe4b0742d9025b0d3"}, {"problem": 49, "code": "(fn [n l] [(take n l) (drop n l)])", "user": "5a591d04e4b05d388ecb6c90"}, {"problem": 49, "code": "#(into [] (list (vec (take %1 %2)) (vec (drop %1 %2))))", "user": "5a512929e4b05d388ecb6be2"}, {"problem": 49, "code": "(juxt take drop)", "user": "5a544eeee4b05d388ecb6c24"}, {"problem": 49, "code": "#(cons (take %1 %2) (cons (drop %1 %2) []))", "user": "5a4d656fe4b05d388ecb6ba9"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5a584ca2e4b05d388ecb6c7d"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "51dafedee4b09f6bc204eee2"}, {"problem": 49, "code": "(juxt take drop)", "user": "5a536cf2e4b05d388ecb6c10"}, {"problem": 49, "code": "(fn [n s]\n    [(take n s)\n     (drop n s)])", "user": "5a5d0726e4b0512ff01cd91b"}, {"problem": 49, "code": "(fn [v l] (let [p (partition-all v l)] (cons (first p) (list (mapcat identity (rest p))))))", "user": "5a5894d9e4b05d388ecb6c81"}, {"problem": 49, "code": "(fn [n c] into [] [(take n c) (drop n c)])", "user": "5a23cabce4b0ff51aa4b32df"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5a34de78e4b0ddc586f153d0"}, {"problem": 49, "code": "(fn split [n coll]\n  (vector (take n coll) (drop n coll)))", "user": "5a58bfd0e4b05d388ecb6c84"}, {"problem": 49, "code": "(fn [n l] \n  (list (take n l) (drop n l)))", "user": "5a621702e4b0512ff01cd983"}, {"problem": 49, "code": "(fn [n x]\n  (list (vec (take n x)) (vec (drop n x))))", "user": "5a52f2cbe4b05d388ecb6c06"}, {"problem": 49, "code": "(fn [n col]\n  [(take n col) (drop n col)])", "user": "5a624129e4b0512ff01cd987"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5a424954e4b0447ef91cc5f0"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "56fd058be4b08d47c97781a1"}, {"problem": 49, "code": ";;#(vec (list (take %1 %2) (drop %1 %2)))\n#(vector (take %1 %2) (drop %1 %2))", "user": "5a257747e4b07f18be40aa1f"}, {"problem": 49, "code": "(fn [n x]\n  [(take n x) (nthrest x n)])", "user": "5a6a7cc5e4b0512ff01cda27"}, {"problem": 49, "code": "(fn [i s] [(take i s) (drop i s)])", "user": "5a6b15e9e4b0512ff01cda32"}, {"problem": 49, "code": "#(into [] [(take % %2) (drop % %2)])", "user": "5a625bc2e4b0512ff01cd989"}, {"problem": 49, "code": "(fn [x y]\n    (partition-by\n      #(< (.indexOf y %) x) y))", "user": "5a4b3abde4b05d388ecb6b81"}, {"problem": 49, "code": "(juxt take drop)", "user": "5a66f358e4b0512ff01cd9d5"}, {"problem": 49, "code": "(fn [n s]\n  [(take n s) (drop n s)])", "user": "5a6b9b95e4b0512ff01cda40"}, {"problem": 49, "code": "(juxt take drop)", "user": "5a488c09e4b05d388ecb6b68"}, {"problem": 49, "code": "(fn [n xs] [(take n xs) (drop n xs)])", "user": "5920c191e4b09b4ee5954c61"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "5a6af090e4b0512ff01cda2d"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5a71e7c9e4b0512ff01cda95"}, {"problem": 49, "code": "#(->> (take-last (- ((fn len [coll]\n                      (reduce (fn [result _] (inc result)) 0 coll)  ) %2)  %1) %2)  (conj '())    (cons (take %1 %2))     )", "user": "5a71c89ee4b0512ff01cda93"}, {"problem": 49, "code": "#(concat (list (take % %2)) (list (drop % %2)))", "user": "529f9bf2e4b04e0c58e87bb4"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5a61bf79e4b0512ff01cd97b"}, {"problem": 49, "code": "(fn [n s]\n  (loop [i 0, s s, res []]\n    (if (= i n)\n      [res s]\n      (recur (inc i) (rest s) (conj res (first s))))))", "user": "5a7ae674e4b03baeef9276d5"}, {"problem": 49, "code": "(fn [n s]\n  (vector (take n s) (drop n s)))", "user": "4fd4bddce4b0d4de60cee36e"}, {"problem": 49, "code": "#(vector (vec (take %1 %2)) (vec (drop %1 %2)))", "user": "5a59a76fe4b05d388ecb6c98"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "59cd13d5e4b0ef0a1e9b5b32"}, {"problem": 49, "code": "(fn split-seq-at [i x]\n  [(take i x) (take-last (- (count x) i) x)])", "user": "58f5b58ae4b0438e51c2cedc"}, {"problem": 49, "code": "#(reverse (conj () (take %1 %2) (drop %1 %2)))", "user": "5a80b934e4b00b71e582a05b"}, {"problem": 49, "code": "(fn [n xs]\n  [(subvec xs 0 n) (subvec xs n)]\n  )", "user": "588053cae4b0f1effa3b7612"}, {"problem": 49, "code": "(fn [x y]\n      (conj [] (vec (take x y))  \n             (take-last (- (count y) x)  y) \n      )\n    \n  )", "user": "5a6afb1de4b0512ff01cda2f"}, {"problem": 49, "code": "(fn[index coll] (conj (into [] [(keep-indexed #(if (< %1 index) %2) coll)]) (into [] (keep-indexed #(if (>= %1 index) %2) coll))))", "user": "5a63f8bae4b0512ff01cd99f"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5a634ff0e4b0512ff01cd995"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5a5dbe9de4b0512ff01cd92b"}, {"problem": 49, "code": "(fn [x coll]\n  (conj (vector (take x coll)) (take-last (- (count coll) x) coll)))", "user": "5a84cf8de4b00b71e582a095"}, {"problem": 49, "code": "#(do [(take %1 %2)(drop %1 %2)])", "user": "5a2960fde4b07f18be40aa78"}, {"problem": 49, "code": "(fn split [n seq]\n  [(take n seq) (drop n seq)])", "user": "5a813b90e4b00b71e582a065"}, {"problem": 49, "code": "#(vec (list (vec (take %1 %2)) (vec (drop %1 %2))))", "user": "5a86ad84e4b05369db4d249c"}, {"problem": 49, "code": "(fn[n col](conj [] (take n col  ) (drop n col )))", "user": "5a80ad4be4b00b71e582a058"}, {"problem": 49, "code": "#(vector(take % %2)(drop % %2))", "user": "51dd5d6fe4b0c33a4e1da406"}, {"problem": 49, "code": "(juxt take drop)", "user": "5a8bc2a1e4b05369db4d24ef"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5a822590e4b00b71e582a073"}, {"problem": 49, "code": "(juxt take drop)", "user": "5a9181c5e4b002d099cae6f6"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5a95c639e4b0d174b936c75e"}, {"problem": 49, "code": "(fn split\n  [i seq]\n  [(take i seq) (drop i seq)])", "user": "5a9567bae4b0d174b936c752"}, {"problem": 49, "code": "#(seq [(take %1 %2) (drop %1 %2)])", "user": "5a95e50be4b0d174b936c760"}, {"problem": 49, "code": "(fn [n s] \n  [(take n s) (drop n s)])", "user": "5a9545dbe4b0d174b936c74c"}, {"problem": 49, "code": "(fn [k lst]\n   (loop [i 1 l lst r1 () r2 ()]\n      (if (empty? l)\n         [(reverse r1) (reverse r2)]\n         (if (> i k)\n            (recur (inc i) (rest l) r1 (cons (first l) r2))\n            (recur (inc i) (rest l) (cons (first l) r1) r2)))))", "user": "5a653f80e4b0512ff01cd9b2"}, {"problem": 49, "code": "(fn splitnth [n s]\n  (loop [a s counter n left nil]\n    (if (= counter 0)\n      (conj (conj nil a) (reverse left))\n      (recur (rest a) (dec counter) (cons (first a) left)))))", "user": "5a962c09e4b0d174b936c765"}, {"problem": 49, "code": "(fn [i coll]\n  (vector (take i coll) (drop i coll)))", "user": "5a99b688e4b0d174b936c7a6"}, {"problem": 49, "code": "(fn [n lst] [(take n lst) (drop n lst)])", "user": "5a9a12d6e4b0d174b936c7b7"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5a75da49e4b0512ff01cdacf"}, {"problem": 49, "code": "(fn [n lst]\n [(take n lst) (drop n lst)]\n)", "user": "5a984657e4b0d174b936c78a"}, {"problem": 49, "code": "(fn [n lst] (conj [] (vec (take n lst)) (vec (drop n lst))))", "user": "5a99b83fe4b0d174b936c7aa"}, {"problem": 49, "code": "(fn [n s]\n  (list (take n s) (drop n s)))", "user": "5a9cdec0e4b0d174b936c7e1"}, {"problem": 49, "code": "(fn [n x] \n  (list (take n x) (drop n x)))", "user": "5a9482b7e4b0d174b936c737"}, {"problem": 49, "code": "#(vector (vec (take %1 %2)) (vec (drop %1 %2)))", "user": "5a99b844e4b0d174b936c7ab"}, {"problem": 49, "code": "(fn [ix coll] [(subvec coll 0 ix) (subvec coll ix (count coll))])", "user": "5a9ac061e4b0d174b936c7c1"}, {"problem": 49, "code": "(fn [n coll] (vector (take n coll) (drop n coll)))", "user": "5a5767f3e4b05d388ecb6c65"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5a99b863e4b0d174b936c7ae"}, {"problem": 49, "code": "#(vector (take % %2)\n         (drop % %2))", "user": "5a9829e5e4b0d174b936c788"}, {"problem": 49, "code": "#(vector (vec (take %1 %2)) (vec (drop %1 %2)))", "user": "55ec879ae4b0121d4835fdc8"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5a9dbffbe4b0d174b936c7f4"}, {"problem": 49, "code": "#(vector \n       (vec (take %1 %2)) \n       (vec (drop %1 %2)))", "user": "5a9f005be4b0d174b936c810"}, {"problem": 49, "code": "(fn [n coll]\n     (conj [] (subvec coll 0 n) (subvec coll n)))", "user": "5971a017e4b01722bebd4c75"}, {"problem": 49, "code": "(fn [n coll] (vector (take n coll) (drop n coll)))", "user": "5a9dbb32e4b0d174b936c7f3"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5a426a3fe4b0447ef91cc5f2"}, {"problem": 49, "code": "(fn \n  [n lst]\n  [(take n lst)(drop n lst)]\n  )", "user": "5aa2f1dee4b0d174b936c865"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5aa00b7fe4b0d174b936c825"}, {"problem": 49, "code": "#(mapv (partial into []) [ (take %1 %2) (nthrest %2 %1) ])", "user": "51421cd5e4b0b50abeb46b2c"}, {"problem": 49, "code": "(fn [n vect]\n  (conj [] (take n vect) (drop n vect))\n)", "user": "5a9e3698e4b0d174b936c7fc"}, {"problem": 49, "code": "(fn [n coll]\n  [(subvec coll 0 n) (subvec coll n)])", "user": "50310713e4b05b7df5a0b84c"}, {"problem": 49, "code": "(fn\n  [n coll]\n  (cons (vec (take n coll)) (list (vec (drop n coll))))\n  )", "user": "5a90395ce4b05369db4d254a"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5a99ae99e4b0d174b936c7a4"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5a99cab6e4b0d174b936c7b2"}, {"problem": 49, "code": "(fn [n sequ]\n  [(take n sequ) \n   (drop n sequ)])", "user": "5aa4b961e4b0d174b936c888"}, {"problem": 49, "code": "#(vector (take %1 %2) \n         (drop %1 %2))", "user": "5a99b766e4b0d174b936c7a8"}, {"problem": 49, "code": "(fn [n s] (vector (take n s) (drop n s)))", "user": "5591b61ee4b0604b3f94d580"}, {"problem": 49, "code": "(fn [n col]\n  (vector (vec (take n col)) (vec (nthrest col n))))", "user": "56197b47e4b053970a773af8"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5a99b848e4b0d174b936c7ac"}, {"problem": 49, "code": "(fn [n lst]\n  [(take n lst) (drop n lst)])", "user": "5a99b87ee4b0d174b936c7af"}, {"problem": 49, "code": "(fn [n x]\n  [(take n x) (drop n x)])", "user": "5aa6d44de4b0d174b936c8b2"}, {"problem": 49, "code": "#(vector \n  (take % %2) \n  (drop % %2))", "user": "5a99b861e4b0d174b936c7ad"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5a779197e4b013a48d399763"}, {"problem": 49, "code": "(fn splitAt [n xs] \n  [(subvec xs 0 n) (subvec xs n)])", "user": "5aa5951ae4b0d174b936c899"}, {"problem": 49, "code": "(fn [n coll]\n  [(vec (take n coll)) (vec (drop n coll))])", "user": "5aa5eebee4b0d174b936c8a1"}, {"problem": 49, "code": "#(vector\n     (vec(take %1 %2))\n     (vec(drop %1 %2)))", "user": "5aac26d3e4b073f177442569"}, {"problem": 49, "code": "#(vector (subvec %2 0 %) (subvec %2 %))", "user": "5a8e9a7ae4b05369db4d2528"}, {"problem": 49, "code": "(fn my-split-at [n coll]\n  [(take n coll) (drop n coll)])", "user": "5aa4f7dae4b0d174b936c88c"}, {"problem": 49, "code": "(juxt take drop)", "user": "59769d75e4b01722bebd4cdd"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5aa998c6e4b0d174b936c8e5"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5aabd34fe4b073f177442565"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "59021fede4b0438e51c2d04d"}, {"problem": 49, "code": "(fn split-sequence [after-index seq]\n  (list (take after-index seq) (drop after-index seq))\n  )", "user": "5aada061e4b073f17744257a"}, {"problem": 49, "code": "(fn [n lst]\n  [(take n lst) \n   (drop n lst)])", "user": "5a99c5a9e4b0d174b936c7b1"}, {"problem": 49, "code": "(fn [index coll] (list (take index coll) (drop index coll)))", "user": "5a6170fde4b0512ff01cd975"}, {"problem": 49, "code": "(fn [n s] [(take n s) (drop n s)])", "user": "5ab564f8e4b073f177442639"}, {"problem": 49, "code": "#(vector (vec (take %1 %2)) (vec (drop %1 %2)))", "user": "5ab23a78e4b073f1774425e1"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5ab16992e4b073f1774425c4"}, {"problem": 49, "code": "(fn [n coll]\n               (loop [cnt n\n                      coll-left []\n                      coll-right (apply vector coll) ]\n\n                 (if (> cnt 0)\n                   (recur (dec cnt) (conj coll-left (first coll-right)) (rest coll-right) )\n                   [coll-left coll-right]\n                   )))", "user": "5ab575f8e4b073f17744263d"}, {"problem": 49, "code": "(juxt take drop)", "user": "5a67cedbe4b0512ff01cd9ee"}, {"problem": 49, "code": "(fn mysplit [n coll]\n  (loop\n   [items coll\n    a []\n    b []\n    cnt 0]\n    (if (empty? items)\n      (vector a b)\n      (if (< cnt (mod n (count coll)))\n        (recur (rest items) (conj a (first items)) b (inc cnt))\n        (recur (rest items) a (conj b (first items)) (inc cnt))))))", "user": "5ab490f4e4b073f17744261d"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5ab5f60be4b073f177442643"}, {"problem": 49, "code": "(fn [n coll]\n   (list (take n coll) (drop n coll)))", "user": "5ab23c99e4b073f1774425e2"}, {"problem": 49, "code": "#(vector \n       (vec (take %1 %2)) \n       (vec (drop %1 %2)))", "user": "5aa2dc5ae4b0d174b936c861"}, {"problem": 49, "code": "(fn [n c]\n  (loop [a c\n         b 0\n         r1 []\n         r2 []]\n    (if (empty? a)\n      [r2 r1]\n      (recur (rest a) (inc b) (if (= b n) [(first a)] (conj r1 (first a))) (if (= b n) r1 r2)))))", "user": "5ab9fe71e4b073f17744269d"}, {"problem": 49, "code": "(fn [n xs]\n    [(take n xs)\n     (drop n xs)]\n)", "user": "5aba34c5e4b073f1774426a3"}, {"problem": 49, "code": "(fn [pos col]\n  [(take pos col) (drop pos col)])", "user": "5ab1665de4b073f1774425c0"}, {"problem": 49, "code": "(fn splitter [n l] ((fn recsplit [i p1 p2] (if (= i 0) [p1 p2] (recsplit (dec i) (conj p1 (first p2)) (rest p2)))) n [] l))", "user": "577412c6e4b0979f896515f6"}, {"problem": 49, "code": "(fn [n coll]\n  (vector (take n coll) (nthrest coll n)))", "user": "5ab276f2e4b073f1774425e6"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5abc5a09e4b073f1774426e9"}, {"problem": 49, "code": "(fn [n l]\n  [(take n l) (drop n l)])", "user": "5a8fd113e4b05369db4d2542"}, {"problem": 49, "code": "(fn [n s] [(take n s) (drop n s)])", "user": "5abe2fc2e4b073f17744271e"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "536fd48be4b0fc7073fd6e88"}, {"problem": 49, "code": "(fn\n  [n coll]\n  [(take n coll) (drop n coll)])", "user": "5ac35d00e4b0e27600da7712"}, {"problem": 49, "code": "(fn split-seq\n  [n s]\n  [(take n s) (drop n s)]\n  )", "user": "5ac37d0fe4b0e27600da7718"}, {"problem": 49, "code": "(fn [n elems]\n    [(take n elems) (drop n elems)])", "user": "5ac6ef9be4b0e27600da7779"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5acb137ee4b0e27600da77eb"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5ac4d1f6e4b0e27600da7735"}, {"problem": 49, "code": "(fn split [n x]\n  [(take n x) (drop n x)])", "user": "5ac74b34e4b0e27600da777f"}, {"problem": 49, "code": "(fn [n xs] (conj (vector (take n xs)) (drop n xs)))", "user": "531bf76fe4b08068f379ed96"}, {"problem": 49, "code": "#(identity [(take %1 %2) (drop %1 %2)])", "user": "5a9db5c9e4b0d174b936c7f1"}, {"problem": 49, "code": "(fn dropnth\n  [n items]\n  (vector (apply vector (take n items)) (apply vector (drop n items))))", "user": "5ac741d6e4b0e27600da777d"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "5acd235ae4b0e27600da7824"}, {"problem": 49, "code": "(fn [n xs] [(take n xs) (drop n xs)])", "user": "59a8a4dce4b0bcf4e9a43af7"}, {"problem": 49, "code": "(fn [n coll] \n [ (take n coll) (drop n coll) ] \n)", "user": "5ac85708e4b0e27600da77ac"}, {"problem": 49, "code": "#(vec (list (vec (take %1 %2)) (vec(drop %1 %2))))", "user": "5ac92dc3e4b0e27600da77bf"}, {"problem": 49, "code": "(juxt take drop)", "user": "5acc961ae4b0e27600da7810"}, {"problem": 49, "code": "#(vector (into [] (take %1 %2)) (into [] (drop %1 %2)))", "user": "5acd08eee4b0e27600da7822"}, {"problem": 49, "code": "(juxt take drop)", "user": "5ad63a34e4b0ea6055cfac01"}, {"problem": 49, "code": "(fn [n v] (vector (take n v) (drop n v)))", "user": "5aa8e841e4b0d174b936c8d5"}, {"problem": 49, "code": "(juxt take drop)", "user": "5acd1a43e4b0e27600da7823"}, {"problem": 49, "code": "#(loop [rl %2 n % fl nil]\n            (if (zero? n) (list (reverse fl) rl) (recur (rest rl) (dec n) (cons (first rl) fl))))", "user": "5831846ae4b051871117c02c"}, {"problem": 49, "code": "(fn [index collection]\n    (list\n      (take index collection)\n      (drop index collection)))", "user": "5ac91d90e4b0e27600da77bd"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5ade6bafe4b0837691e92c23"}, {"problem": 49, "code": "(fn [x xs]\n  (conj [] (take x xs) (drop x xs))\n  \n  )", "user": "5991eec7e4b0866487ed0d6e"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5976da27e4b01722bebd4ce3"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5ae0b67fe4b0837691e92c44"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5ae0976be4b0837691e92c43"}, {"problem": 49, "code": "(fn [n s] (list (take n s) (drop n s)))", "user": "5ada1f12e4b0ea6055cfac43"}, {"problem": 49, "code": "(fn [x coll] \n\t (reverse (cons (take-last (- (count coll) x) coll) (take 1 (partition-all x coll))))\n\t)", "user": "5ac04101e4b073f177442737"}, {"problem": 49, "code": "#(conj [] (subvec %2 0 %1) (subvec %2 %1))", "user": "57086931e4b0b0fb43fd069e"}, {"problem": 49, "code": "(fn [n s] [(take n s) (drop n s)])", "user": "5a9d64c8e4b0d174b936c7eb"}, {"problem": 49, "code": "(fn [n s] (list (take n s) (drop n s)))", "user": "5a7e194de4b03baeef927706"}, {"problem": 49, "code": "#(vector (vec (take %1 %2)) (vec (drop %1 %2)))", "user": "5ae246b1e4b0837691e92c5d"}, {"problem": 49, "code": "(fn [n xs]\n  (vector\n    (take n xs)\n    (drop n xs)\n  )\n)", "user": "5aac468ae4b073f17744256b"}, {"problem": 49, "code": "#(vector (vec (take %1 %2))\n       (vec (drop %1 %2)))", "user": "59edc518e4b0966464fe6a08"}, {"problem": 49, "code": "(fn [x coll]\n   (loop [xs coll idx 0 begin [] end []]\n      (if (empty? xs)\n          (vector begin end)\n          (if (< idx x)\n              (recur (rest xs) (inc idx) (conj begin (first xs)) end)\n              (recur (rest xs) (inc idx) begin (conj end (first xs)))))))", "user": "5aa4a1ffe4b0d174b936c886"}, {"problem": 49, "code": "(juxt take drop)", "user": "5a353bdae4b0ddc586f153d9"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5ad36ae9e4b0ea6055cfabc3"}, {"problem": 49, "code": "(fn [z l] (loop [x l r [] i z]\n  (if (= 0 i)\n    [r x]\n    (recur (rest x) (conj r (first x)) (dec i))))\n)", "user": "5aa8f753e4b0d174b936c8d9"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5aeec90fe4b0cc2b61a3bc31"}, {"problem": 49, "code": "(fn [n s]\n  (vector (take n s) (drop n s)))", "user": "5a084a24e4b01bb0ae8afdf2"}, {"problem": 49, "code": "(fn [n ar]\n    [(take n ar) (drop n ar)])", "user": "5922f8a9e4b026ae3852128f"}, {"problem": 49, "code": "(fn [n c]\n  (let [x (partition n n [] c)\n      h (first x)\n      t (apply concat (rest x))]\n  (conj '() t h)))", "user": "5aba04dce4b073f17744269e"}, {"problem": 49, "code": "#(-> [(take %1 %2) (drop %1 %2)])", "user": "5aeca4c9e4b0cc2b61a3bc0a"}, {"problem": 49, "code": "(fn my-split [nbr seqi]\n   (loop [a seqi,cpt 0, res []]\n      (if ( < cpt nbr)\n        (recur (rest a) (inc cpt) (conj res (first a)))\n        (conj (conj [] res) (vec a)))))", "user": "5a6cb2eae4b0512ff01cda57"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "59eb69fbe4b0249b7282077e"}, {"problem": 49, "code": "(fn [n s]\n  (loop [r [] t [] s s i 1]\n    (if (empty? s)\n      [r t]\n      (if (> i n)\n        (recur r (conj t (first s)) (rest s) (inc i))\n        (recur (conj r (first s)) t (rest s) (inc i))))))", "user": "5af907e6e4b0cc2b61a3bcda"}, {"problem": 49, "code": "(fn [n xs]\n  (map #(% n xs) [take drop]))", "user": "5af8221ce4b0cc2b61a3bccd"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "5af31955e4b0cc2b61a3bc7a"}, {"problem": 49, "code": "(fn [arg arg_list]\n  (vector (take arg arg_list) (drop arg arg_list))\n  )", "user": "5ae71f14e4b0837691e92ca7"}, {"problem": 49, "code": "(fn [n xs] (list (take n xs) (drop n xs)))", "user": "5adf5f9be4b0837691e92c33"}, {"problem": 49, "code": "(fn [p s] [(take p s) (drop p s)])", "user": "5649b1b0e4b0284900eef646"}, {"problem": 49, "code": "(fn [n arr]\n  (conj [] (into [] (take n arr)) (into [] (drop n arr))))", "user": "5adcc688e4b0837691e92c05"}, {"problem": 49, "code": "(fn splitx [n l] (loop [i 0 begin [] remaining l ] (if (= i n) [begin remaining]\n              (recur (inc i) (conj begin (first remaining)) (rest remaining) )\n\n                     )))", "user": "5afc115de4b0cc2b61a3bcff"}, {"problem": 49, "code": "(juxt take drop)", "user": "5afb4b15e4b0cc2b61a3bcf6"}, {"problem": 49, "code": "(juxt take drop)", "user": "5b008bcae4b0cc2b61a3bd3d"}, {"problem": 49, "code": "(fn splitseq\n  [idx coll]\n  [(take idx coll) (drop idx coll)])", "user": "5b02a170e4b0cc2b61a3bd52"}, {"problem": 49, "code": "(juxt take drop)", "user": "5afcd6d1e4b0cc2b61a3bd17"}, {"problem": 49, "code": "(fn [x coll]\n  (list (take x coll) (drop x coll)))", "user": "5af74644e4b0cc2b61a3bcc2"}, {"problem": 49, "code": "(fn[n coll] [(take n coll) (drop n coll)])", "user": "5b0180cfe4b0cc2b61a3bd47"}, {"problem": 49, "code": "(fn [n s] [(take n s) (drop n s)])", "user": "583048d9e4b051871117c007"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "5b0546eae4b0cc2b61a3bd7e"}, {"problem": 49, "code": "#(vector (vec (take %1 %2)) (vec (drop %1 %2)))", "user": "59d9dcfbe4b0ef0a1e9b5c5d"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5b0e6795e4b0cc2b61a3be03"}, {"problem": 49, "code": "(fn [n coll] (list (take n coll) (drop n coll)))", "user": "5b0fe3f4e4b0cc2b61a3be14"}, {"problem": 49, "code": "(fn splitr [n sequ]\n  (loop [\n        [head & tail] sequ\n         m 1 \n         lhalf '()\n         rhalf '()\n        ]\n    (if (nil? head)\n      (conj '() (reverse rhalf) (reverse lhalf))\n      (if (<= m n)\n        (recur \n          tail\n          (inc m)\n          (cons head lhalf)\n          rhalf\n        )\n        (recur \n          tail \n          (inc m)\n          lhalf\n          (cons head rhalf)\n        )\n      )\n    )\n  )\n)", "user": "5b02ab12e4b0cc2b61a3bd53"}, {"problem": 49, "code": "(fn [pivot vec] \n  [(take pivot vec)\n   (drop pivot vec)\n   ] \n  )", "user": "5b118b7be4b0cc2b61a3be34"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5b14ea95e4b0cc2b61a3be62"}, {"problem": 49, "code": "(fn f [n coll]\n  [(subvec coll 0 n) (subvec coll n)])", "user": "5777c3d6e4b0979f8965164f"}, {"problem": 49, "code": "(fn my-split [where what]\n  [(map #(nth what %) (range where))\n  (map #(nth what %) (range where (count what)))])", "user": "5b15811ee4b0cc2b61a3be6f"}, {"problem": 49, "code": "(fn [x v] [(take x v) (drop x v)])", "user": "5addadfce4b0837691e92c13"}, {"problem": 49, "code": "(fn [x y] [(take x y)(drop x y)])", "user": "5b1619e4e4b0cc2b61a3be77"}, {"problem": 49, "code": "#(vector (into [] (take %1 %2)) (into [] (drop %1 %2)))", "user": "5b083513e4b0cc2b61a3bdb4"}, {"problem": 49, "code": "(fn my-split-at [val in]\n  [(take val in) (nthrest in val)])", "user": "5b107263e4b0cc2b61a3be22"}, {"problem": 49, "code": "(fn [split-pos to-split]\n   (vector (apply vector (take split-pos to-split)) (apply vector (drop split-pos to-split))))", "user": "5b15e881e4b0cc2b61a3be75"}, {"problem": 49, "code": "(fn [n coll] (vector (take n coll) (drop n coll)))", "user": "56aad332e4b03c432f187337"}, {"problem": 49, "code": "#(vector (vec (take %1 %2)) (vec (drop %1 %2)))", "user": "5b0f2862e4b0cc2b61a3be0f"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5b0b8d29e4b0cc2b61a3bdd7"}, {"problem": 49, "code": "(fn [n s]\n  [(take n s) (drop n s)])", "user": "51316a63e4b0431ba07e7feb"}, {"problem": 49, "code": "(fn [n xs] [(take n xs) (drop n xs)])", "user": "5b1c16e1e4b03cfeda66ecf2"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "5b22328ee4b03cfeda66ed5d"}, {"problem": 49, "code": "(fn [n lis] ((fn rec [i li] (if (= i n) \n                            (list (list (first li)) (rest li))\n                            (let [res (rec (inc i) (rest li))] (list (cons (first li) (first res)) (second res)))\n                                          )) 1 lis))", "user": "5b20134de4b03cfeda66ed2d"}, {"problem": 49, "code": "(fn [x0 coll] \n  (let [x x0\n        v1 (subvec coll 0 x)\n        v2 (subvec coll x)]\n    [v1 v2])\n)", "user": "59c243bae4b0a024fb6ae4aa"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "54dfbacae4b024c67c0cf7b1"}, {"problem": 49, "code": "#(cons (take %1 %2) (list (drop %1 %2)))", "user": "5b210749e4b03cfeda66ed48"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5b250773e4b063e2438bcc21"}, {"problem": 49, "code": "(fn sat [n coll]\n  (let [length (count coll)\n        nlast  (- length n)]\n    (list (take n coll)\n          (take-last nlast coll))))", "user": "5b073c34e4b0cc2b61a3bda4"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "4e6a23d0535d8ccf87e9fea0"}, {"problem": 49, "code": "(fn [n stuff]\n  (vector (take n stuff) (drop n stuff)))", "user": "5b2a559be4b063e2438bcc74"}, {"problem": 49, "code": "(juxt take drop)", "user": "5b2c79c6e4b025bcb146f2b7"}, {"problem": 49, "code": "(fn [i coll] \n   [(vec (take i coll)) \n    (vec (nthrest coll i))])", "user": "555d4421e4b0a2eb076a39a8"}, {"problem": 49, "code": "(fn [n coll]\n   [(take n coll) (drop n coll)])", "user": "5b34aba7e4b025bcb146f352"}, {"problem": 49, "code": "#(let [col1 (take %1 %2) col2 (drop %1 %2)] [col1 col2])", "user": "5b284375e4b063e2438bcc53"}, {"problem": 49, "code": "(fn\n  [n coll]\n  (vector (subvec coll 0 n) (subvec coll n)))", "user": "5adbbf89e4b0837691e92bf4"}, {"problem": 49, "code": "(fn [n xs] (conj [] (take n xs) (nthrest xs n)))", "user": "5b37a3b4e4b02d533a91bba9"}, {"problem": 49, "code": "#(vector \n  (vec (take %1 %2))\n  (vec (drop %1 %2)))", "user": "5b227f5ae4b03cfeda66ed63"}, {"problem": 49, "code": "#(conj [] (take %1 %2)  (drop %1 %2))", "user": "5b23f306e4b08b1df1c36769"}, {"problem": 49, "code": "(fn [i coll] \n  (vector \n   (take i coll) \n   (take-last \n    (- (count coll) i) \n    coll)))", "user": "5a91988ae4b002d099cae6f9"}, {"problem": 49, "code": "(fn [n coll]\n  (vector (take n coll)\n          (drop n coll)))", "user": "59e8a952e4b0249b72820733"}, {"problem": 49, "code": "(fn [n col]\n  (reverse\n   (conj nil (vec (take n col))\n         \t (vec (drop n col)))))", "user": "5b333626e4b025bcb146f32f"}, {"problem": 49, "code": "(fn [n s]\n   (let [c (count s)]\n     [(take n s)(take-last (- c n) s)]))", "user": "5b2689e3e4b063e2438bcc33"}, {"problem": 49, "code": "#(list (take %1 %2) (nthrest %2 %1))", "user": "5b3f2ba9e4b02d533a91bc09"}, {"problem": 49, "code": "(fn [n coll]\n\n    (let [partition-result (partition-all n coll)\n          take-result (first partition-result)\n          drop-result (reduce #(into %1 %2) [] (rest partition-result))]\n        (vector take-result drop-result) \n        )\n\n)", "user": "5b274fd1e4b063e2438bcc3b"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5ad002f2e4b0ea6055cfab87"}, {"problem": 49, "code": "(fn x [n arr]\n  [(take n arr) (drop n arr)])", "user": "5b3ef412e4b02d533a91bc06"}, {"problem": 49, "code": "#(vector (vec (take %1 %2)) (vec (drop %1 %2)))", "user": "5b0948f3e4b0cc2b61a3bdbb"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2)  )", "user": "5b3aa98be4b02d533a91bbca"}, {"problem": 49, "code": "(fn [splitPoint original]\n  (loop [firstHalf [] lastHalf original i 0]\n  (println firstHalf lastHalf i)\n  (if (= i splitPoint)\n    [(vec firstHalf) (vec lastHalf)]\n    (recur (conj firstHalf (first lastHalf)) (rest lastHalf) (inc i))))\n)", "user": "5b3de9a7e4b02d533a91bbf4"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5b47874be4b02d533a91bc70"}, {"problem": 49, "code": "(fn  [n coll]\n  [(take n coll)(drop n coll)])", "user": "5b04662ce4b0cc2b61a3bd75"}, {"problem": 49, "code": "(fn [i coll] [(take i coll) (reverse (take (- (count coll) i) (reverse coll)))])", "user": "5b465b8be4b02d533a91bc65"}, {"problem": 49, "code": "(fn [n s]\n                 (loop [i 1 t '() u s]\n                   (let [t* (conj t (first u))\n                         u* (rest u)]\n                     (if (= n i)\n                       [(reverse t*) u*]\n                       (recur (inc i) t* u*)))))", "user": "57f904c5e4b0d3187e900936"}, {"problem": 49, "code": "(fn [n c]\n  [(take n c) (drop n c)])", "user": "57fd085ce4b0d3187e9009a9"}, {"problem": 49, "code": "(fn [n coll] (conj (conj () (take-last (- (count coll) n) coll)) (take n coll)))", "user": "5b445421e4b02d533a91bc40"}, {"problem": 49, "code": "(fn [x y]\n    [(take x y) (drop x y)])", "user": "5b47a4f7e4b02d533a91bc73"}, {"problem": 49, "code": "(fn my-split [n coll] (list (take n coll) (drop n coll)))", "user": "5b421edce4b02d533a91bc2c"}, {"problem": 49, "code": "(fn [i s] ((fn sp [i s1 s2] (if (= 0 i) (vector s1 s2) (sp (dec i) (conj s1 (first s2)) (rest s2))))\n           i [] s))", "user": "5b4b4052e4b02d533a91bc9a"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5b4a0ce3e4b02d533a91bc92"}, {"problem": 49, "code": "(fn my-split-at [idx coll]\n  (loop [i 0, todo coll, head [], tail []]\n    (cond\n      (empty? todo) [head tail]\n      (< i idx) (recur (inc i) (rest todo) (conj head (first todo)) tail)\n      :else (recur (inc i) (rest todo) head (conj tail (first todo))))))", "user": "5b51b9f8e4b02d533a91bcfe"}, {"problem": 49, "code": "(fn [n s]\n  (conj [] (subvec s 0 n) (subvec s n (count s)))\n)", "user": "5b4ff637e4b02d533a91bce0"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5b552117e4b02d533a91bd2c"}, {"problem": 49, "code": "(fn [n xs]\n  [(take n xs) (drop n xs)])", "user": "5aeb0b44e4b0cc2b61a3bbee"}, {"problem": 49, "code": "(fn [n col]\n  (conj\n   (list (drop n col))\n   (take n col)))", "user": "5b4dfd5de4b02d533a91bcc3"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "59bcbfd0e4b0a024fb6ae419"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5b5d255de4b0c6492753e6c8"}, {"problem": 49, "code": "(fn [n coll]\n   [(subvec coll 0 n) (subvec coll n)])", "user": "558843dae4b059ccff29b1f3"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5b2be9b1e4b025bcb146f2b0"}, {"problem": 49, "code": "(fn [index splitList]\n  (conj [] (subvec splitList 0 index) (subvec splitList index (count splitList))))", "user": "5b3251c1e4b025bcb146f317"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll)\n   (drop n coll)])", "user": "5b500215e4b02d533a91bce2"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "57a6552ce4b0a96607956208"}, {"problem": 49, "code": "(fn [at coll]\n  (loop [i    0\n         ret  []\n         c    coll]\n    (if (= i at)\n      [ret c]\n      (recur (inc i) (conj ret (first c)) (rest c)))))", "user": "5b13f482e4b0cc2b61a3be58"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5b5e7953e4b0c6492753e6d9"}, {"problem": 49, "code": "(fn [n v]\n   (let [f (fn [n [x & xs :as all] acc]\n             (if (zero? n)\n               [acc all]\n               (recur (dec n) xs (conj acc x))))]\n     (f n v [])))", "user": "56e2ca59e4b03a7c14b85a38"}, {"problem": 49, "code": "(juxt take drop)", "user": "5b61aa6ae4b0c6492753e712"}, {"problem": 49, "code": "#(vector (subvec %2 0 %1) (subvec %2 %1))", "user": "5b59d176e4b02d533a91bd86"}, {"problem": 49, "code": "(fn [x array]\n\t(conj [] (take x array) (drop x array)))", "user": "59b9e669e4b0a024fb6ae3db"}, {"problem": 49, "code": "(fn [n x] (vector (take n x) (drop n x)))", "user": "5b58d012e4b02d533a91bd71"}, {"problem": 49, "code": "(fn split-point\n  [n coll]\n  [(take n coll) (nthrest coll n)])", "user": "5a3c06fce4b001c08efc0cdd"}, {"problem": 49, "code": "#(map vec [(take %1 %2) (drop %1 %2)])", "user": "5b62764ae4b0c6492753e725"}, {"problem": 49, "code": "(fn spat [n lst]\n  (vector (mapv identity (take n lst))\n    (mapv identity (drop n lst))))", "user": "5b5e5019e4b0c6492753e6d3"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5b6473eee4b0c6492753e73f"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5b67f0fbe4b0c6492753e76d"}, {"problem": 49, "code": ";#((subvec %2 0 (dec %1)) (subvec %2 %1 (count %2)))\n\n;#(concat (subvec %2 0 %1) (subvec %2 %1 (count %2)))\n\n;#(vector (subvec %2 0 %1) (subvec %2 %1 (count %2)))\n\n(fn [a b] [(take a b) (drop a b)])\n\n;(juxt take drop)", "user": "5b6f27dce4b0c6492753e7d9"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5b6e1649e4b0c6492753e7ce"}, {"problem": 49, "code": "(fn [n s] [(take n s) (drop n s)])", "user": "50a635bbe4b0aa96157e2621"}, {"problem": 49, "code": "(fn [x xs]\n  [(take x xs) (drop x xs)])", "user": "5b611666e4b0c6492753e70d"}, {"problem": 49, "code": "(fn veca [idx v]\n  [(subvec v 0 idx) (subvec v idx)])", "user": "5b7292b3e4b047b03b2036a4"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "57ebbf3ae4b0bfb2137f5b66"}, {"problem": 49, "code": "#(conj []\n  (into [] (take %1 %2))\n  (subvec %2 %1))", "user": "5b6962c1e4b0c6492753e787"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5b772ad7e4b047b03b2036e8"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5b64370ae4b0c6492753e73c"}, {"problem": 49, "code": "(juxt take drop)", "user": "5b73e500e4b047b03b2036ba"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5b79cbdce4b047b03b20370a"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "592db566e4b072a2710fcf7c"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5b4c2212e4b02d533a91bca6"}, {"problem": 49, "code": "(fn [n s] [(take n s) (drop n s)])", "user": "5b7ec039e4b047b03b20375d"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5b632851e4b0c6492753e72d"}, {"problem": 49, "code": "#(vector (vec (take %1 %2)) (vec (drop %1 %2)))", "user": "5b754f8ee4b047b03b2036c9"}, {"problem": 49, "code": "(fn [n coll] (vector (take n coll) (drop n coll)))", "user": "56e9db9be4b04a395b9a03ff"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5b7bc82ce4b047b03b203726"}, {"problem": 49, "code": "#(vector (into [] (take %1 %2)) (into [] (drop %1 %2)))", "user": "5826a843e4b051871117befd"}, {"problem": 49, "code": "(fn [idx v] (let [a (take idx v) \n                   b (drop idx v)] \n               [a b]))", "user": "5b7ed20fe4b047b03b203760"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5b857411e4b047b03b2037ce"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5a085dfde4b01bb0ae8afdf4"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5b82eec6e4b047b03b2037a4"}, {"problem": 49, "code": "(juxt take drop)", "user": "5b77d3c8e4b047b03b2036f1"}, {"problem": 49, "code": "(fn [n xs] (vector (take n xs) (drop n xs)))", "user": "5b8f0861e4b0c0b3ffbd49f4"}, {"problem": 49, "code": "(fn [n coll]\n  (list (take n coll) (drop n coll)))", "user": "5b88f0c0e4b047b03b203816"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5b11449ce4b0cc2b61a3be2d"}, {"problem": 49, "code": "(fn splitseq\n   [numb args]\n   [(take numb args) (drop numb args)])", "user": "5b86462de4b047b03b2037df"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "599342efe4b0b211ea3aaab0"}, {"problem": 49, "code": "(fn [n c] [ (take n c) (drop n c) ])", "user": "57c647bbe4b05aa3c4741cf3"}, {"problem": 49, "code": "(fn split-seq [n coll]\n  [(take n coll) (nthrest coll n)])", "user": "5b92f178e4b0c0b3ffbd4a41"}, {"problem": 49, "code": "#(vector \n       (vec (take %1 %2)) \n       (vec (drop %1 %2)))", "user": "5b97c521e4b0c0b3ffbd4a9a"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5b855800e4b047b03b2037cd"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5b924123e4b0c0b3ffbd4a34"}, {"problem": 49, "code": "(fn [n coll] (list (take n coll) (drop n coll)))", "user": "5b9357b7e4b0c0b3ffbd4a46"}, {"problem": 49, "code": "(fn\n  [i s]\n  (list (take i s) (drop i s)))", "user": "59b93cd7e4b0a024fb6ae3c7"}, {"problem": 49, "code": "(fn [where xs]\n    [(take where xs) (drop where xs)])", "user": "592ac17ae4b072a2710fcf26"}, {"problem": 49, "code": "(fn [n xs]\n  [(take n xs) (drop n xs)])", "user": "5b96800ae4b0c0b3ffbd4a7b"}, {"problem": 49, "code": "(fn [n s]\n   [(take n s) (drop n s)])", "user": "5b999af8e4b0c0b3ffbd4ad3"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5b985fe5e4b0c0b3ffbd4ab1"}, {"problem": 49, "code": "(fn [ n coll ] [(subvec coll 0 n) (subvec coll n (count coll)) ])", "user": "5b8aa478e4b0c0b3ffbd49b2"}, {"problem": 49, "code": "(fn [n xs] [(take n xs) (drop n xs)])", "user": "5b9db58be4b0c0b3ffbd4b41"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "5b919d9de4b0c0b3ffbd4a24"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "570d0548e4b0b0fb43fd06d2"}, {"problem": 49, "code": "(fn [n l] [(take n l) (drop n l)])", "user": "5a66fddee4b0512ff01cd9d7"}, {"problem": 49, "code": "#(conj [] (take %1 %2) (drop %1 %2))", "user": "57a5da5ee4b0a966079561fe"}, {"problem": 49, "code": "(juxt take drop)", "user": "5b99a0a3e4b0c0b3ffbd4ad7"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5ba5802de4b0a20761a233fd"}, {"problem": 49, "code": "(fn [n s] (list (take n s) (drop n s)))", "user": "5b8d01d7e4b0c0b3ffbd49ca"}, {"problem": 49, "code": "(fn [index col]\n  [(vec (take index col)) (vec (take-last (- (count col) index) col))]\n  )", "user": "5b9c4a7be4b0c0b3ffbd4b16"}, {"problem": 49, "code": "(fn [n coll]\n  (vector (take n coll) (drop n coll)))", "user": "5b602a66e4b0c6492753e6fc"}, {"problem": 49, "code": "(fn [n xs]\n  [(take n xs)\n   (drop n xs)])", "user": "5bab5440e4b0a20761a23475"}, {"problem": 49, "code": "#(vector (vec (take %1 %2)) (vec (drop %1 %2)))", "user": "5b62ff3ce4b0c6492753e72a"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5bafd5c8e4b0a20761a234dd"}, {"problem": 49, "code": "#(vector (take %1 %2) (nthrest %2 %1))", "user": "5b77248ae4b047b03b2036e7"}, {"problem": 49, "code": "#(conj [] (subvec %2 0 %) (subvec %2 %))", "user": "5bb23cf1e4b0a20761a2350a"}, {"problem": 49, "code": "(juxt take drop)", "user": "5b81139fe4b047b03b203782"}, {"problem": 49, "code": "(fn mysplit [n coll]\n            (vec(conj  (conj () (vec(drop  n coll))) (vec(take  n coll))))\n            )", "user": "5b9d3913e4b0c0b3ffbd4b37"}, {"problem": 49, "code": "#(vector (subvec %2 0  %1) (subvec %2 %1))", "user": "566d71b1e4b0a866af6896ca"}, {"problem": 49, "code": "(fn\n  [index my-vector]\n  [(subvec my-vector 0 index) (subvec my-vector index)])", "user": "5b759ca8e4b047b03b2036d0"}, {"problem": 49, "code": "(fn [a b] [(take a b)(drop a b)])", "user": "5951190be4b066ee0a44aea4"}, {"problem": 49, "code": "(fn [idx coll]\n  [(vec (take idx coll)) (vec (drop idx coll))]\n  )", "user": "59f4c42ce4b0966464fe6ab6"}, {"problem": 49, "code": "#(loop [i 0\n        mid %1\n        lst %2\n        res '(() ())]\n  (cond\n   \t(>= i (count lst)) res\n   \t(< i mid) (recur (inc i) mid lst (list (concat (first res) (list (nth lst i))) (second res)))\n   \t:default (recur (inc i) mid lst (list (first res) (concat (second res) (list (nth lst i)))))\n  )\n)", "user": "5bb905dce4b0a20761a235c7"}, {"problem": 49, "code": "#(list (take %1 %2) (take (count %2) (drop %1 %2)))", "user": "5bbbce0ee4b0a20761a2360d"}, {"problem": 49, "code": "(juxt take drop)", "user": "56f5d0efe4b046a417f92078"}, {"problem": 49, "code": "#(vector (vec (take %1 %2)) (vec (drop %1 %2)))", "user": "5a03d246e4b01bb0ae8afd8c"}, {"problem": 49, "code": "#(conj [] (take %1 %2) (drop %1 %2))", "user": "5a68f374e4b0512ff01cda05"}, {"problem": 49, "code": "(fn split [n xs] \n  [(take n xs) \n   (drop n xs)])", "user": "5b9bfe0be4b0c0b3ffbd4b10"}, {"problem": 49, "code": "(fn [c xs]\n  [(subvec xs 0 c) (subvec xs c)])", "user": "587fb546e4b0f1effa3b75f9"}, {"problem": 49, "code": "(fn [split col]\n  (conj (conj nil (drop split col)) (take split col) )\n)", "user": "5bbd13a5e4b07a9b28b0ff95"}, {"problem": 49, "code": "(fn [i xs]\n  (list (take i xs) (drop i xs)))", "user": "5829d9f8e4b051871117bf4d"}, {"problem": 49, "code": "(fn [n xs]\n  (concat [(take n xs)\n           (drop n xs)]))", "user": "5bc15685e4b07a9b28b10016"}, {"problem": 49, "code": "(fn [elem lst]\n  [(take elem lst) (drop elem lst)])", "user": "5bbbce70e4b0a20761a2360f"}, {"problem": 49, "code": "(juxt take drop)", "user": "5bc39d2be4b07a9b28b10045"}, {"problem": 49, "code": "(fn [n xs] (list (take n xs) (drop n xs)))", "user": "5b85221ce4b047b03b2037c8"}, {"problem": 49, "code": "(fn [n lst]\n  [(take n lst) (drop n lst)])", "user": "5bbbba29e4b0a20761a23609"}, {"problem": 49, "code": "(fn [x y] (cons (vec (take x y)) [(vec (drop x y))]))", "user": "5bb3c9a8e4b0a20761a2352f"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5bbc0ddfe4b0a20761a2361e"}, {"problem": 49, "code": "(fn [x lst]\n   (conj '() (take-last (- (count lst) x) lst) (take x lst))\n   )", "user": "5bc8c033e4b07a9b28b100ca"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "59d8f23ae4b0ef0a1e9b5c49"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "543a8256e4b032a45b869327"}, {"problem": 49, "code": "#(list (take %1 %2) (nthrest %2 %1))", "user": "5bbbd484e4b0a20761a23617"}, {"problem": 49, "code": "(fn split\n  [n lst]\n  (conj (list (drop n lst)) (take n lst))\n  )", "user": "5bbbcf9ee4b0a20761a23614"}, {"problem": 49, "code": "(fn [x coll]\n    (list (take x coll) (nthrest coll x))\n  )", "user": "5bc28638e4b07a9b28b10033"}, {"problem": 49, "code": "(fn [n s]\n  [(take n s) (drop n s)])", "user": "59a0286be4b0871e7608b82f"}, {"problem": 49, "code": "(fn [n xs] [(seq (take n xs)) (seq (drop n xs))])", "user": "5bca2c71e4b07a9b28b100e7"}, {"problem": 49, "code": "(fn [n c] [(take n c) (drop n c)])", "user": "5bb5cd43e4b0a20761a23575"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5bc255b7e4b07a9b28b10029"}, {"problem": 49, "code": "(fn [n ls]\n  [(take n ls) (drop n ls)])", "user": "5bc50870e4b07a9b28b10069"}, {"problem": 49, "code": "(fn [n lst] \n  (cons (first (partition n lst)) (list (drop n lst))))", "user": "5bcb672ee4b07a9b28b10100"}, {"problem": 49, "code": "#(conj [] (take %1 %2) (drop %1 %2))", "user": "5bbbce99e4b0a20761a23610"}, {"problem": 49, "code": "#(conj [] (take %1 %2) (drop %1 %2))", "user": "5bbbce60e4b0a20761a2360e"}, {"problem": 49, "code": "(fn [n lst] [(take n lst) (drop n lst)])", "user": "5bc7ba68e4b07a9b28b100b0"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5bbbcf3ae4b0a20761a23612"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5bbbcf81e4b0a20761a23613"}, {"problem": 49, "code": "(fn [n xs]\n  [(take n xs) (drop n xs)])", "user": "5bcddaeee4b0e9689409ee07"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5bc833a5e4b07a9b28b100bb"}, {"problem": 49, "code": ";(fn [n coll]\n;  (vector (take n coll) (drop n coll)))\n(juxt take drop)", "user": "5b98f7f3e4b0c0b3ffbd4ac2"}, {"problem": 49, "code": "(fn [s col] [(apply vector( take s col)) (apply vector(drop s col))])", "user": "5b337ff4e4b025bcb146f339"}, {"problem": 49, "code": "(fn [n l]\n   (concat [(take n l)] [(drop n l)]))", "user": "565131b3e4b0f29ec07d2e88"}, {"problem": 49, "code": "(juxt take drop)", "user": "567c63f6e4b05957ce8c61bb"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5bc611e3e4b07a9b28b10083"}, {"problem": 49, "code": "#((juxt take drop) %1 %2)", "user": "5bd7b8b8e4b0ed4b8aab4bc6"}, {"problem": 49, "code": "#(vector (take %1 %2) (nthrest %2 %1))", "user": "5b72b36ce4b047b03b2036a9"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5bbdd136e4b07a9b28b0ffab"}, {"problem": 49, "code": "(fn [n xs] [(take n xs) (drop n xs)])", "user": "5b673832e4b0c6492753e760"}, {"problem": 49, "code": "(fn [n xs] [(take n xs) (drop n xs)])", "user": "5be0306be4b0ed4b8aab4c7d"}, {"problem": 49, "code": "(fn [n x] (loop [x x cn 0 o []]\n            (if (empty? x)\n              o\n              (if (= cn n)\n                [o (into [] x)]\n                (recur (rest x) (inc cn) (conj o (first x)))\n              )\n            )\n            )\n)", "user": "5bdf651ee4b0ed4b8aab4c6d"}, {"problem": 49, "code": "#(vector \n       (vec (take %1 %2)) \n       (vec (drop %1 %2)))", "user": "5bd999cce4b0ed4b8aab4bf4"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5bc64843e4b07a9b28b10091"}, {"problem": 49, "code": "(fn [n coll]\n    [(take n coll)\n     (drop n coll)])", "user": "5be5cebde4b0ed4b8aab4d19"}, {"problem": 49, "code": "(fn __\n  ([n s] (__ (dec n) (vector (first s)) (rest s)))\n  ([n s1 s2] (if (= n 0) (vector s1 s2) (__ (dec n) (conj s1 (first s2)) (rest s2)))))", "user": "5be2e670e4b0ed4b8aab4ccc"}, {"problem": 49, "code": "(fn [x y] [(take x y) (drop x y)])", "user": "5be6d0f8e4b0f319e2d7ec51"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5be58beae4b0ed4b8aab4d14"}, {"problem": 49, "code": "(fn [a b] [(take a b) (drop a b)])", "user": "575f6a80e4b08062f99a4e80"}, {"problem": 49, "code": "(fn [num a-seq]\n  [(take num a-seq) (drop num a-seq)])", "user": "5be33a16e4b0ed4b8aab4cd6"}, {"problem": 49, "code": ";(fn [n coll] (let [parColl (partition-all n coll) res (conj [] (first parColl) (apply concat (rest parColl)) )  res))\n\n(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5be589f9e4b0ed4b8aab4d13"}, {"problem": 49, "code": "(fn [at xs]\n  (list\n   (subvec xs 0 at) \n   (subvec xs at (count xs))))", "user": "56a9d4bbe4b07966d5a8a07b"}, {"problem": 49, "code": "(fn [n s]\n  (vector (take n s) \n       (drop n s)))", "user": "55469eede4b0a04f79299542"}, {"problem": 49, "code": "(fn [n col] [(take n col) (drop n col)])", "user": "587b8bdee4b01531a375eaff"}, {"problem": 49, "code": "(juxt take drop)", "user": "5b7d03a0e4b047b03b20373d"}, {"problem": 49, "code": "(fn [n, col] [ (vec (take n col)) (vec(drop n col)) ] )", "user": "5be182eae4b0ed4b8aab4c9d"}, {"problem": 49, "code": "(fn\n  [n coll]\n  [(take n coll) (drop n coll)])", "user": "5be1c6c6e4b0ed4b8aab4ca5"}, {"problem": 49, "code": "(fn [p s]\n  (vector (take p s) (drop p s))\n  )", "user": "5a42dbabe4b0447ef91cc5fc"}, {"problem": 49, "code": "#(concat (list (take %1 %2)) (list (drop %1 %2)))", "user": "5bf0aefde4b0a6d31fed215a"}, {"problem": 49, "code": "#(vector\n  (vec (take %1 %2))\n  (vec (drop %1 %2)))", "user": "5bf5ddfde4b0bdcf453d159e"}, {"problem": 49, "code": "(fn [x lst]\n   [(take x lst) (drop x lst)])", "user": "5bec37e2e4b0f319e2d7ec96"}, {"problem": 49, "code": "(fn [ix sq]\n  [(take ix sq) (drop ix sq)])", "user": "5bfa25fbe4b0bdcf453d15c8"}, {"problem": 49, "code": "(fn [k s] \n  [(take k s) (drop k s)])", "user": "59924289e4b0866487ed0d76"}, {"problem": 49, "code": "(fn [x input]\n  (loop [count x\n         items input\n         acc []]\n    (if (zero? count) (conj [acc] (vec items))\n        (recur (dec count) (rest items) (conj acc (first items))))))", "user": "596aaeefe4b069c0a1a19808"}, {"problem": 49, "code": "(fn [n coll] (vector (take n coll) (drop n coll)))", "user": "5beda647e4b0a6d31fed2122"}, {"problem": 49, "code": "(fn [n coll]\n    [(take n coll) (drop n coll)])", "user": "5be15f4de4b0ed4b8aab4c9b"}, {"problem": 49, "code": "#(conj [] (take %1 %2) (drop %1 %2))", "user": "5a09a6f7e4b01bb0ae8afe14"}, {"problem": 49, "code": "(fn [n x]\n (cons (take n x) (list (drop n x)) ))", "user": "5b15ab32e4b0cc2b61a3be72"}, {"problem": 49, "code": "(fn func\n    [n ar]\n    [(take n ar) (drop n ar)]\n  )", "user": "5b8db323e4b0c0b3ffbd49da"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (take-last (- (count coll) n) coll)])", "user": "5ba15075e4b0a20761a2339e"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "56c50599e4b05cc29241ee9e"}, {"problem": 49, "code": "(fn [n coll] (vector (take n coll) (drop n coll)))", "user": "5c03e927e4b0bdcf453d167b"}, {"problem": 49, "code": "( fn foo[ y x ]\n    \n     (vector (subvec x 0 y) (subvec x y  (count x)))\n     \n     \n    )", "user": "5bed1e4ae4b0a6d31fed2118"}, {"problem": 49, "code": "(juxt take drop)", "user": "5bea3177e4b0f319e2d7ec81"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5bfe4ecfe4b0bdcf453d1608"}, {"problem": 49, "code": "#(cons (take %1 %2) (list (drop %1 %2)))", "user": "5c0a87e6e4b0bdcf453d1707"}, {"problem": 49, "code": "(fn [n s]\n  (list (take n s) (drop n s)))", "user": "5c0d0537e4b0bdcf453d173d"}, {"problem": 49, "code": "#(concat (list (take %1 %2)) (list (drop %1 %2)) )", "user": "5c0e22cae4b01240ff56713b"}, {"problem": 49, "code": "#(reduce (fn [col x] (let [c1 (get col 0) c2 (get col 1)] (if (= %1 (count c1)) [c1 (conj c2 x)] [(conj c1 x) c2]))) [[] []] %2)", "user": "594d4c57e4b07ddc2dafae87"}, {"problem": 49, "code": "(fn [place coll] \n  (loop [result [], acc [], [nxt & others :as from] coll, counter 0] \n    (let [result-with-acc (conj result acc), next-counter (inc counter)]\n    (if (empty? from)\n      \tresult-with-acc\n    \t(if (= counter place)\n      \t\t(recur result-with-acc [nxt]          others next-counter)\n          \t(recur result          (conj acc nxt) others next-counter))))))", "user": "5c13da47e4b01240ff5671a6"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5bfc2068e4b0bdcf453d15e4"}, {"problem": 49, "code": "#(conj [] (vec(take %1 %2))  (vec(drop %1 %2)))", "user": "5bed84b1e4b0a6d31fed2120"}, {"problem": 49, "code": "(juxt take drop)", "user": "4ee897fe535d93acb0a66883"}, {"problem": 49, "code": "(fn [at s] (vector (take at s) (drop at s)))", "user": "5b8ec146e4b0c0b3ffbd49f0"}, {"problem": 49, "code": "(fn [i coll] (let [item (nth coll i)\n                       x (take-while (complement #{item}) coll)\n                       y (drop-while (complement #{item}) coll)]\n                   (vector x y)))", "user": "532ae82be4b09d4e7a9b552b"}, {"problem": 49, "code": "(fn mysplit\n  ([n xs]\n   (mysplit n xs []))\n  ([n xs ls]\n   (if (= 0 n)\n     [ls xs]\n     (mysplit (- n 1) (rest xs) (conj ls (first xs))))))", "user": "5c1840eae4b01240ff5671eb"}, {"problem": 49, "code": "#((juxt take drop) % %2)", "user": "5c165d3ee4b01240ff5671d1"}, {"problem": 49, "code": "#(vector(vec(take %1 %2)) (vec(drop %1 %2)))", "user": "5beebdb7e4b0a6d31fed2132"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll)\n   (drop n coll)])", "user": "5c1bee41e4b01240ff567218"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5ab8037ae4b073f177442678"}, {"problem": 49, "code": "#(list (take %1 %2) (drop  %1 %2))", "user": "5c1aadcde4b01240ff567209"}, {"problem": 49, "code": "(fn [n coll]\n   (let [parts (partition-all n coll)\n         first-part (first parts)\n         last-part (apply concat (rest parts))]\n     [first-part last-part]))", "user": "5bef3e88e4b0a6d31fed213f"}, {"problem": 49, "code": "(fn [n x] [(take n x) (drop n x)])", "user": "5b0bd9cfe4b0cc2b61a3bdd9"}, {"problem": 49, "code": "(fn [n vec] (concat [(subvec vec 0 n)] [(subvec vec n)]))", "user": "5c1d9f05e4b0efcb0b05b24c"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "597f8c93e4b0dbe32238d0c1"}, {"problem": 49, "code": "#(-> [(take %1 %2) (drop %1 %2)])", "user": "5c1edf23e4b0efcb0b05b25d"}, {"problem": 49, "code": "(juxt take drop)", "user": "5c17467fe4b01240ff5671df"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5c20b6abe4b07e362c230576"}, {"problem": 49, "code": "(fn split-at-idx\n  [idx xs]\n  [(subvec xs 0 idx) (subvec xs idx)])", "user": "5c222b7de4b07e362c230588"}, {"problem": 49, "code": "(fn [n mylist]\n  (loop [n n\n         mylist mylist\n         firstlist nil]\n    (if (> n 0)\n      (recur (dec n) (rest mylist) (concat firstlist [(first mylist)]) )\n      [firstlist mylist]\n     )))", "user": "5c0e3f86e4b01240ff56713d"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "57131a8ee4b07c98581c3a97"}, {"problem": 49, "code": "(fn [x y](conj [] (take x y) (take-last (- (count y) x) y)))", "user": "582c986ee4b051871117bf9b"}, {"problem": 49, "code": "#(list (take %1 %2) (nthrest %2 %1))", "user": "5c219c0fe4b07e362c230581"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5c2649c8e4b07e362c2305bf"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "5c21a531e4b07e362c230582"}, {"problem": 49, "code": "(fn [n s] [(take n s) (nthrest s n)])", "user": "5c272f82e4b07e362c2305cb"}, {"problem": 49, "code": "(fn [n c] [(take n c) (drop n c)])", "user": "50eeeadae4b02c17778c91f3"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5ba75fdfe4b0a20761a23419"}, {"problem": 49, "code": "(fn [i s]\n  (loop [current-index 0\n         first-part []\n         second-part []]\n    (if (= current-index (count s))\n      (conj [] first-part second-part)\n      (recur (inc current-index)\n             (if (< current-index i)\n               (conj first-part (get s current-index))\n               first-part)\n             (if (>= current-index i)\n               (conj second-part (get s current-index))\n               second-part)))))", "user": "57d57f65e4b0bd073c2023b3"}, {"problem": 49, "code": "(fn my-split-at [n x]\n  (vector (into [] (take n x)) (into [] (drop n x))))", "user": "5c24c654e4b07e362c2305a7"}, {"problem": 49, "code": "(juxt take drop)", "user": "5c2f0cdfe4b0d62ef62d9f09"}, {"problem": 49, "code": "(fn [n isi]\n  [(take n isi)(drop n isi)])", "user": "5c32ea85e4b0d62ef62d9f3e"}, {"problem": 49, "code": "(fn split-sequence [x sequence]\n  [(take x sequence) (drop x sequence)])", "user": "5c36d110e4b0d62ef62d9f6a"}, {"problem": 49, "code": "(fn [n s] (list (take n s) (drop n s)))", "user": "5bf28e9ee4b0a6d31fed2177"}, {"problem": 49, "code": "(fn [splt seq]\n   (list (take splt seq) (drop splt seq))\n   )", "user": "5c34cb2ee4b0d62ef62d9f59"}, {"problem": 49, "code": "#(conj [] (take % %2) (drop % %2))", "user": "5c2836ebe4b07e362c2305d4"}, {"problem": 49, "code": "(fn split-sequence [x sequence]\n  [(take x sequence) (drop x sequence)])", "user": "5c3ac091e4b0d62ef62d9f95"}, {"problem": 49, "code": "#(loop [cnt 0\n        added []\n        left %2]\n  (if (= cnt %1)\n    [added left]\n    (recur\n      (+ cnt 1) \n      (conj added (first left))\n      (rest left)\n    )\n  )\n)", "user": "5bfcdc52e4b0bdcf453d15f4"}, {"problem": 49, "code": "(fn f[n se]\n  (cons (take n se) [(nthrest se n)])\n)", "user": "5c337305e4b0d62ef62d9f48"}, {"problem": 49, "code": "(juxt take drop)", "user": "5c379636e4b0d62ef62d9f76"}, {"problem": 49, "code": "(fn [n c] [(take n c)(drop n c)])", "user": "5be9d530e4b0f319e2d7ec79"}, {"problem": 49, "code": "(fn [n s] [(take n s) (drop n s)])", "user": "5bba703fe4b0a20761a235eb"}, {"problem": 49, "code": "(fn [number coll] [(take number coll) (take-last (- (count coll) number) coll)])", "user": "5b7aaa3ce4b047b03b203716"}, {"problem": 49, "code": "(fn splitit\n  [y xs]\n  (list (take y xs) (drop y xs)))", "user": "5c35acffe4b0d62ef62d9f62"}, {"problem": 49, "code": "(fn [v coll]\n    (let [csize (count coll) from (- csize v)]\n    (vector (take v coll) (take-last from coll))))", "user": "5a64dcabe4b0512ff01cd9a9"}, {"problem": 49, "code": "(fn [n xs]\n   [(take n xs) (drop n xs)])", "user": "5c2dfca3e4b0d62ef62d9efc"}, {"problem": 49, "code": "(fn [n l] [(take n l) (drop n l)])", "user": "5c308385e4b0d62ef62d9f1c"}, {"problem": 49, "code": "(fn\n  [n c]\n  [(subvec c 0 n) (subvec c n)])", "user": "5c05cae7e4b0bdcf453d16a3"}, {"problem": 49, "code": "(fn my-split-at [n coll]\n  (vector (take n coll) (drop n coll)))", "user": "5c411df3e4b08cd430848ebf"}, {"problem": 49, "code": "(fn [n xs]\n  (loop [n n xs xs nx []]\n    (cond (empty? xs) nx\n          (zero? n) [nx xs]\n          :else\n          (recur (dec n)\n                 (rest xs)\n                 (conj nx (first xs))))))", "user": "54961073e4b0b312c081ff62"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5c3f37fce4b08cd430848e91"}, {"problem": 49, "code": "(fn [n s]\n  (vector (take n s) (drop n s)))", "user": "5c486dece4b0e06e1360a3c0"}, {"problem": 49, "code": "(juxt take drop)", "user": "5c3796b3e4b0d62ef62d9f77"}, {"problem": 49, "code": "#(vector (subvec %2 0 %1) (subvec %2 %1))", "user": "5b03063de4b0cc2b61a3bd5b"}, {"problem": 49, "code": "(fn split [n s] (conj [(vec (take n s))] (vec (drop n s))\n                  )\n  )", "user": "5a8d55a8e4b05369db4d2514"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5c4ab449e4b0f9f7a8770e57"}, {"problem": 49, "code": "#(conj [] (take %1 %2) (drop %1 %2) )", "user": "5c4c74efe4b0f9f7a8770e76"}, {"problem": 49, "code": "(fn split-seq [loc in-seq]\n  (vector (take loc in-seq) (nthrest in-seq loc)))", "user": "5c196dc3e4b01240ff5671fa"}, {"problem": 49, "code": "(fn [n s] [(take n s) (nthrest s n)])", "user": "5c512811e4b0fb8c5ffd99c2"}, {"problem": 49, "code": "(fn [n coll] (cons (take n coll) (cons(drop n coll) '())))", "user": "5c46bdbde4b0e06e1360a3a4"}, {"problem": 49, "code": "#(vector (subvec %2 0 %) (subvec %2 % (count %2)))", "user": "5c48757fe4b0e06e1360a3c3"}, {"problem": 49, "code": "(fn split [i coll]\n  [(take i coll) (drop i coll)])", "user": "5c506951e4b0f9f7a8770ec5"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2) )", "user": "5c45e703e4b0e06e1360a391"}, {"problem": 49, "code": "(fn [x y]\n   (list (take x y)\n         (drop x y)))", "user": "5c387c51e4b0d62ef62d9f83"}, {"problem": 49, "code": "#(list (take %1 %2) (nth (iterate rest %2) %1))", "user": "5b14475be4b0cc2b61a3be5a"}, {"problem": 49, "code": "(juxt take drop)", "user": "5c30d90de4b0d62ef62d9f22"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)] )", "user": "5c3cd80fe4b0d62ef62d9faa"}, {"problem": 49, "code": "#(->> %2\n       (partition-all %1)\n       ((fn [x]\n          [(vec (first x)) (vec (reduce concat(rest x)))])))", "user": "5c435a9fe4b0e06e1360a367"}, {"problem": 49, "code": "#(vector (drop-last (- (count %2) %1) %2) (nthrest %2 %1))", "user": "5c481764e4b0e06e1360a3ba"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5c59b1d3e4b01df32ab73261"}, {"problem": 49, "code": "(fn [n l] [(take n l) (drop n l)])", "user": "5c54e605e4b0fb8c5ffd9a14"}, {"problem": 49, "code": "(fn [n s]\n  (letfn [(impl [n s r]\n                (if (<= n 0)\n                  [r s]\n                  (recur (dec n) (rest s) (conj r (first s)))))]\n    (impl n s [])))", "user": "5c50048ae4b0f9f7a8770eb9"}, {"problem": 49, "code": "(fn split-at-seq [n coll]\n  (let [[first & rest] (partition-all n coll)]\n    (conj [] first (apply concat rest))\n    )\n  )", "user": "5c51d700e4b0fb8c5ffd99d1"}, {"problem": 49, "code": "(fn [n xs] [(take n xs) (drop n xs)])", "user": "502ea967e4b06efe12e8cc76"}, {"problem": 49, "code": "(fn [n lst]\n  [(take n lst) (drop n lst)])", "user": "5c62979fe4b0fca0c162264c"}, {"problem": 49, "code": "(fn\n  [n coll]\n  [(take n coll) (drop n coll)])", "user": "5c6227fee4b0fca0c1622641"}, {"problem": 49, "code": "(fn [c n]\n  [(take c n) (drop c n)])", "user": "592883f1e4b072a2710fceea"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "57293d74e4b0c6e51e0d2b18"}, {"problem": 49, "code": "(fn splitseq\n  [ind inp]\n  (let [subv1 (subvec inp 0 ind)\n        subv2 (subvec inp ind (count inp))\n        ]\n    [subv1 subv2]\n  ))", "user": "5b98f174e4b0c0b3ffbd4ac1"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "5a8aa992e4b05369db4d24d8"}, {"problem": 49, "code": "(fn [n col]\n  [(take n col) (drop n col)])", "user": "5af4446de4b0cc2b61a3bc93"}, {"problem": 49, "code": "(fn split [nbr col]\n  (concat (list (take nbr col)) (list (drop nbr col))))", "user": "5c3f6322e4b08cd430848e97"}, {"problem": 49, "code": "(fn [n coll]\n  (let [len (- (count coll) n)]\n    (conj [] (take n coll)\n          (reverse (take len (reverse coll))))))", "user": "5c5d2e90e4b01df32ab732af"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5c58736be4b01df32ab73247"}, {"problem": 49, "code": "#((juxt take drop) %1 %2)", "user": "5c596d6ce4b01df32ab73257"}, {"problem": 49, "code": "(fn [n a] \n  (let [[fst snd]\n      (partition-by #(<= (second %) n)\n        (map list a (iterate inc 1)))]\n    [(map first fst) (map first snd)]))", "user": "53a5bc3ae4b0ef122a8689c3"}, {"problem": 49, "code": "(fn [n xs]\n  (list (take n xs) (drop n xs)))", "user": "58b12635e4b0ebc645576cf4"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5c41db45e4b08cd430848ece"}, {"problem": 49, "code": "(juxt take drop)", "user": "524ac3d1e4b09eba1c0223a0"}, {"problem": 49, "code": "(fn [n s]\n                [(take n s) (drop n s)])", "user": "4e617114535d8ccf87e9fe5b"}, {"problem": 49, "code": "#(cons (vec (take %1 %2)) (conj [] (vec (drop %1 %2))))", "user": "5c52f3fce4b0fb8c5ffd99e9"}, {"problem": 49, "code": "(fn [n xs] [(take n xs) (drop n xs)])", "user": "5c664b87e4b0fca0c16226a5"}, {"problem": 49, "code": "#(conj [(vec (take %1 %2))] (vec (drop %1 %2)))", "user": "5c6d0e51e4b0fca0c1622735"}, {"problem": 49, "code": "#(conj [] (take %1 %2) (drop %1 %2) )", "user": "5c683fb5e4b0fca0c16226d5"}, {"problem": 49, "code": "(fn [x y]\n    (conj []\n          (vec (take x y))\n          (vec (take-last (- (count y) x) y))))", "user": "5b269cf3e4b063e2438bcc35"}, {"problem": 49, "code": "(fn [n\n     coll]\n  (loop [[r & more :as all] (seq coll)\n         acc '[]]\n    (if all\n      (if (= (count acc) n)\n        (vector acc (into (vector r) more))\n        (recur more (conj acc r))))))", "user": "5c718e6ce4b0fca0c1622796"}, {"problem": 49, "code": "(fn [n c] (vector (take n c) (drop n c)))", "user": "5c46e6dde4b0e06e1360a3a7"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5c73b8bae4b0fca0c16227ba"}, {"problem": 49, "code": "(fn [amount collection]\n  [(take amount collection) (drop amount collection)])", "user": "59cd351ee4b0ef0a1e9b5b35"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5c6e8b57e4b0fca0c1622755"}, {"problem": 49, "code": "(fn [n col] (letfn [(split [n col]\n                          (list (take n col) (drop n col))\n                           )\n                         ]\n                   (split n col)\n                   ))", "user": "5c635364e4b0fca0c162265f"}, {"problem": 49, "code": "(fn split \n  [n lst]\n  (vector(take n lst) (drop n lst)))", "user": "5c787131e4b0fca0c1622825"}, {"problem": 49, "code": "(fn\n  [n lst]\n  (vector (vec (take n lst))\n          (vec (drop n lst))))", "user": "5c706232e4b0fca0c162277e"}, {"problem": 49, "code": "(fn [n input-seq] (vector (apply vector (take n input-seq)) (apply vector (drop n input-seq))))", "user": "5c723f4be4b0fca0c16227a0"}, {"problem": 49, "code": "(fn[n coll] [(take n coll) (drop n coll)])", "user": "5c52fa3ce4b0fb8c5ffd99eb"}, {"problem": 49, "code": "#(if (>= % (count %2)) %2 (cons (take % %2) (vector (drop % %2))))", "user": "5c76577ae4b0fca0c16227ea"}, {"problem": 49, "code": "#(loop [i 0 s %2 pt1 []]\n   (if (= i %)\n     [pt1 s]\n     (recur (inc i) (rest s) (conj pt1 (first s)))))", "user": "5c7d5a0ce4b0d597f478caab"}, {"problem": 49, "code": "(fn splt [n s]\n  (loop [tail s, r []]\n    (if (= (count r) n)\n      [r tail]\n      (recur (rest tail) (conj r (first tail))))))", "user": "5c6e1006e4b0fca0c1622744"}, {"problem": 49, "code": "(fn [n s] [(take n s) (nthrest s n)])", "user": "5c7ef3f3e4b0d597f478cad7"}, {"problem": 49, "code": "(fn [at s] [(take at s) (take-last (- (count s) at) s)])", "user": "5c7bc0a5e4b0fca0c1622865"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5c8025d6e4b0c8042a70ce11"}, {"problem": 49, "code": "(fn [n coll] (vector (take n coll) (drop n coll)))", "user": "5c8002cde4b0c8042a70ce09"}, {"problem": 49, "code": "#(vector (subvec %2 0 %1) (subvec %2 %1))", "user": "5b100648e4b0cc2b61a3be17"}, {"problem": 49, "code": "#(conj [] (apply vector (take % %2)) (apply vector (drop % %2)))", "user": "5c813b27e4b0c8042a70ce22"}, {"problem": 49, "code": "(fn [x vc]\n  (conj (conj [] (subvec vc 0 x)) (subvec vc x (count vc))))", "user": "5c748bf5e4b0fca0c16227cb"}, {"problem": 49, "code": "(fn [n coll] (list (take n coll) (drop n coll)))", "user": "5c8319c3e4b0c8042a70ce45"}, {"problem": 49, "code": "(fn split2\n  [n lst]\n  [(take n lst) (drop n lst)])", "user": "5c7dad57e4b0d597f478caba"}, {"problem": 49, "code": "#(into [] (vector (subvec %2 0 %1) (subvec %2 %1)))", "user": "5c7f7889e4b0d597f478cae0"}, {"problem": 49, "code": "(fn [n col] [(subvec col 0 n) (subvec col n (count col))])", "user": "5be96111e4b0f319e2d7ec70"}, {"problem": 49, "code": "(fn lstSplit\n  [n lst]\n  (loop[n n\n        lst lst\n        lstFirst()\n        lstSecond()]\n    (if (empty? lst)\n      (vec (list (vec (reverse lstFirst)) (vec (reverse lstSecond))))\n      (if (= n 0)\n        (recur 0 (rest lst) lstFirst (conj lstSecond (first lst)))\n        (recur (dec n) (rest lst) (conj lstFirst (first lst)) lstSecond)\n        )\n      )\n    )\n  )", "user": "5c82db41e4b0c8042a70ce42"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5c70641de4b0fca0c162277f"}, {"problem": 49, "code": "(fn [n, coll](vector (take n coll) (drop n coll)))", "user": "55326aede4b09218d5f44f7c"}, {"problem": 49, "code": "(fn [n l]\n  [(take n l) (drop n l)])", "user": "5c7d947be4b0d597f478cab6"}, {"problem": 49, "code": "#(vec (cons (vec (first (partition-all %1 %2))) (list (vec (drop %1 %2)))))", "user": "5c74b043e4b0fca0c16227ce"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5c7c8c72e4b0d597f478ca96"}, {"problem": 49, "code": "(fn [n l] \n     [(take n l) (drop n l)])", "user": "5c852e3ae4b0c8042a70ce78"}, {"problem": 49, "code": "(fn [at s] [(take at s) (drop at s)])", "user": "5c7741dce4b0fca0c1622806"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5c7d5463e4b0d597f478caa9"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5c706454e4b0fca0c1622780"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5c746c31e4b0fca0c16227c8"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5c75a830e4b0fca0c16227e0"}, {"problem": 49, "code": "(fn hello [at s]\n[(doall (take at s)) (nthrest s at)])", "user": "5c09e555e4b0bdcf453d16fd"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "57e2e1bde4b0bfb2137f5a8f"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "5c7c1d8ee4b0d597f478ca88"}, {"problem": 49, "code": "(fn m-split-at [n coll]\n  [(take n coll) (drop n coll)])", "user": "5b6002c2e4b0c6492753e6fb"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5c8ecb58e4b048ec896c59b0"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5c792c34e4b0fca0c1622834"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)]\n  )", "user": "5c8fd8f3e4b048ec896c59c7"}, {"problem": 49, "code": "(fn [n coll]\n      [(take n coll) (drop n coll)]\n      )", "user": "4f2a7174e4b0d6649770a03e"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "5c7bb8c0e4b0fca0c1622864"}, {"problem": 49, "code": "(fn split-seq\n  [n seq]\n  (cons (take n seq) (cons (drop n seq) '()))\n\n  )", "user": "5c891afde4b048ec896c5935"}, {"problem": 49, "code": "(fn split-seq\n  [index coll]\n  [(take index coll) (drop index coll)])", "user": "5c92105ce4b048ec896c59f7"}, {"problem": 49, "code": "(fn [n coll]\n  (let [n* (mod n (count coll))]\n    (list (take n* coll) (drop n* coll))))", "user": "5c987160e4b048ec896c5a82"}, {"problem": 49, "code": "(fn [n xs]\n  ((juxt (partial take n) (partial drop n)) xs)\n  )", "user": "5c896f46e4b048ec896c5940"}, {"problem": 49, "code": "(fn [n xs] [(take n xs) (drop n xs)])", "user": "5bd0ea60e4b0e9689409ee45"}, {"problem": 49, "code": "(fn [n sq]\n          (vector (take n sq) (drop n sq)))", "user": "5c995fa4e4b048ec896c5a96"}, {"problem": 49, "code": "(fn [n s] (list (take n s) (drop n s)))", "user": "5c92161de4b048ec896c59f9"}, {"problem": 49, "code": "(fn [n xs] [(take n xs) (drop n xs)])", "user": "5bcf0b1be4b0e9689409ee24"}, {"problem": 49, "code": "(fn $sp\n  [n lst]\n  (list (take n lst) (drop n lst)))", "user": "5c9d0a0be4b048ec896c5afc"}, {"problem": 49, "code": "#(loop [n %1\n        l []\n        r %2]\n   (if (zero? n)\n     [l r]\n     (recur (dec n)\n            (conj l (first r))\n            (rest r))))", "user": "5ca14eb1e4b048ec896c5b7d"}, {"problem": 49, "code": "#(list (take %1 %2) (nthrest %2 %1))", "user": "5c24671be4b07e362c2305a1"}, {"problem": 49, "code": "(fn [n coll] (vector (take n coll) (drop n coll)))", "user": "5ca1f8a1e4b048ec896c5b8c"}, {"problem": 49, "code": "(fn [n x] [(take n x) (drop n x)])", "user": "55ed37ebe4b0121d4835fdd6"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))\n;; h/t frenata for use of `vector`", "user": "5c950334e4b048ec896c5a44"}, {"problem": 49, "code": "(fn split \n  ([where this]      (if (zero? where)\n                       this\n                       (split (dec where)\n                              [(first this)]\n                              (rest this))))\n  ([where this that] (if (zero? where)\n                       [this that]\n                       (split (dec where)\n                              (vec (conj this (first that)))\n                              (vec (rest that))))))", "user": "5c538cb5e4b0fb8c5ffd99fb"}, {"problem": 49, "code": "(fn [p v]\n  [(subvec v 0 p)\n   (subvec v p)])", "user": "510608ebe4b01150e115ebe3"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2) )", "user": "5ca1c45ae4b048ec896c5b85"}, {"problem": 49, "code": "(fn [n s] (list (take n s) (drop n s)))", "user": "5cab33e7e4b048ec896c5c48"}, {"problem": 49, "code": "#(loop [n %1, rst %2, frst []] \n   (if \n     (> n 0)\n     (recur (dec n) (next rst) (conj frst (first rst)))\n     [frst rst]\n     )\n   )", "user": "5c9dcb36e4b048ec896c5b1d"}, {"problem": 49, "code": "#(vector \n       (vec (take %1 %2)) \n       (vec (drop %1 %2)))", "user": "55a24698e4b0acc240e31523"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll)\n  (drop n coll)]\n )", "user": "5a6dbaf5e4b0512ff01cda63"}, {"problem": 49, "code": "(fn [n coll]\n  (conj [] (take n coll) (drop n coll)))", "user": "5c9419fae4b048ec896c5a2b"}, {"problem": 49, "code": "(fn [x y] [(take x y) (drop x y)])", "user": "58b84c28e4b0ebc645576d94"}, {"problem": 49, "code": "(fn q49 [p coll]\n  (list (take p coll) (drop p coll)))", "user": "5cab0ad9e4b048ec896c5c46"}, {"problem": 49, "code": "(fn [n s] (list (take n s) (drop n s)))", "user": "5cb71f35e4b026601754b961"}, {"problem": 49, "code": "(juxt take drop)", "user": "5c51c930e4b0fb8c5ffd99ce"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5caf9cace4b026601754b89b"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5c547cf0e4b0fb8c5ffd9a0b"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5cb4e764e4b026601754b929"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5cbeadf2e4b0ccb061962755"}, {"problem": 49, "code": "(fn [count s] [(take count s) (drop count s)])", "user": "598ff38ce4b0fcebec4de869"}, {"problem": 49, "code": "(juxt take drop)", "user": "5cb556f9e4b026601754b934"}, {"problem": 49, "code": "(fn [arg1 arg2] [ (into [] (take arg1 arg2)) (into [] (drop arg1 arg2))])", "user": "5cb6256ce4b026601754b947"}, {"problem": 49, "code": "(juxt take drop)", "user": "5ca7b5bbe4b048ec896c5c04"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "58c71509e4b021aa9917ed6e"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5766bab8e4b0a07e8fc180b1"}, {"problem": 49, "code": "#(loop [v1 [] v2 %2 cnt 0] (if ( = cnt %1) (vector v1 v2) (recur (conj v1 (first v2)) (rest v2) (inc cnt))))", "user": "5cbd5b42e4b026601754b9f6"}, {"problem": 49, "code": "#(into (vector (vec (take %1 %2))) (vector (vec (drop %1 %2))))", "user": "5afb3426e4b0cc2b61a3bcf5"}, {"problem": 49, "code": "(fn [n l]\n    (cons (take n l) [(drop n l)]))", "user": "5cc6f982e4b0ccb06196282d"}, {"problem": 49, "code": "(fn [num list]\n  [(take num list) (drop num list)]\n  )", "user": "5ccaed31e4b0ccb061962877"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "4fbe2cfbe4b081705acca30c"}, {"problem": 49, "code": "#(do [(take % %2) (drop % %2)])", "user": "5cc80598e4b0ccb061962840"}, {"problem": 49, "code": "(fn [k x] (list (take k x) (drop k x)))", "user": "5ccb3792e4b0ccb061962882"}, {"problem": 49, "code": "(fn [a b] \n   [(take a b) (take-last (- (.length b) a) b)])", "user": "5b9ae606e4b0c0b3ffbd4af2"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5cb0f70ce4b026601754b8c1"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5cc75ffce4b0ccb061962836"}, {"problem": 49, "code": "(fn [at coll] [(take at coll) (drop at coll)] )", "user": "5c97821be4b048ec896c5a70"}, {"problem": 49, "code": "(fn [pos sequence]\n  (let [rest (- (count sequence) pos)]\n    [(take pos sequence) (take-last rest sequence)]))", "user": "5ccb0bbee4b0ccb06196287c"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5cc6b4bfe4b0ccb061962827"}, {"problem": 49, "code": "(juxt take drop)", "user": "5a9bfd57e4b0d174b936c7d0"}, {"problem": 49, "code": "(juxt take drop)", "user": "5cd1f5dae4b0ccb0619628f7"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5cc4b34de4b0ccb061962805"}, {"problem": 49, "code": "(fn splitfun [value sequence] (list (take value sequence) (drop value sequence)))", "user": "5a99d28ee4b0d174b936c7b3"}, {"problem": 49, "code": "(fn [broj lista]\n  (loop [konacna []\n         br broj\n         glavna lista]\n    (if (= br 0)\n      (if (empty? glavna) konacna\n        (conj [] konacna glavna))\n      (recur (conj konacna (first glavna)) (- br 1) (rest glavna)))))", "user": "5be0b916e4b0ed4b8aab4c8f"}, {"problem": 49, "code": "#(conj [] (take % %2) (drop % %2))\n; (juxt take drop)", "user": "5ccf21c4e4b0ccb0619628c1"}, {"problem": 49, "code": "(fn [a b] [(take a b) (drop a b)])", "user": "5cd99bebe4b05ee0cb311707"}, {"problem": 49, "code": "(fn [arg1 arg2]\n  (loop [n arg1\n         b arg2\n         f (vector)]\n    (if (= n 0)\n      (vector f b)\n      (recur (dec n) (rest b) (conj f (first b))))))", "user": "5ac9c737e4b0e27600da77d2"}, {"problem": 49, "code": "#(vector \n       (vec (take %1 %2)) \n       (vec (drop %1 %2)))", "user": "5ca2ca9fe4b048ec896c5b9c"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5cd639b4e4b0ccb061962940"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "5cdfe2aee4b0a17bb84e2b04"}, {"problem": 49, "code": "(fn [n coll]\n  (let [[first-part & other-parts] (partition-all n coll)]\n    [first-part (apply concat other-parts)]))", "user": "5ce077e9e4b0a17bb84e2b0c"}, {"problem": 49, "code": "#(reduce (fn [result item]\n            (if (> % (count (first result)))\n              (assoc result 0 (conj (first result) item))\n              (assoc result 1 (conj (last result) item)))) \n          (vector (vector) (vector)) %2)", "user": "5ccc2a03e4b0ccb06196288f"}, {"problem": 49, "code": "(fn [n s] (list (take n s) (drop n s)))", "user": "5cdd473ae4b05ee0cb311757"}, {"problem": 49, "code": "#(list (take %1 %2) (nthrest %2 %1))", "user": "5ce41d1be4b0a17bb84e2b50"}, {"problem": 49, "code": "#(do [(take %1 %2) (drop %1 %2)])", "user": "5cdd934ce4b05ee0cb311761"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "5be79b5be4b0f319e2d7ec5a"}, {"problem": 49, "code": "(fn [n xs] [(take n xs) (drop n xs)])", "user": "5cdc08a2e4b05ee0cb31173a"}, {"problem": 49, "code": ";\u81ea\u5df1\u5199\u7684\uff1a#(list (first (partition-all %1 %2)) (apply concat (drop 1 (partition-all %1 %2))))\n#(list(take %1 %2) (drop %1 %2))", "user": "5cd4e1b2e4b0ccb061962927"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5ce2b15fe4b0a17bb84e2b2c"}, {"problem": 49, "code": "(fn [n l] [(vec (take n l)) (vec (drop n l))])", "user": "5ce56db6e4b0a17bb84e2b72"}, {"problem": 49, "code": "(fn [cut seq] (concat [(for [idx (range cut)] (nth seq idx))][(for [idx(subvec(vec(range (count seq)))cut (count seq))](nth seq idx))]))", "user": "5ce62d8ee4b0a17bb84e2b83"}, {"problem": 49, "code": "(fn [i xs] (conj [] (take i xs) (drop i xs)))", "user": "5ce05561e4b0a17bb84e2b08"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "5ce3e239e4b0a17bb84e2b46"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5ce52271e4b0a17bb84e2b69"}, {"problem": 49, "code": "#(vector (take %1 %2) (nthrest %2 %1))", "user": "5ce78776e4b0a17bb84e2ba2"}, {"problem": 49, "code": "(juxt take drop)", "user": "5ce56455e4b0a17bb84e2b71"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5ce44ee2e4b0a17bb84e2b57"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5baaae06e4b0a20761a23464"}, {"problem": 49, "code": "(fn splitme\n  [n s]\n  (cons (take n s) [(drop n s)]))", "user": "5ce6f93be4b0a17bb84e2b99"}, {"problem": 49, "code": "(fn [n seq]\n  (loop [s1 [] s2 [] i 0]\n    (if (< i (count seq))\n      (recur\n       \t(if (< i n) (conj s1 (nth seq i)) s1)\n       \t(if (>= i n) (conj s2 (nth seq i)) s2)\n       \t(inc i)\n      )\n      [s1 s2]\n    )\n  )\n)", "user": "5cbdc591e4b026601754ba00"}, {"problem": 49, "code": "#(loop [s %2 n %1 r []]\n            (if (= n 0) [r (vec s)]\n                        (recur (rest s) (dec n) (conj r (first s)))))", "user": "592bb806e4b072a2710fcf46"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5cf1d9e3e4b0aaa82f112a18"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5cee4bc9e4b0aaa82f1129dc"}, {"problem": 49, "code": "(fn [point coll]\n(list (take point coll) (drop point coll)))", "user": "5bf9d9b7e4b0bdcf453d15c4"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5cebafbbe4b0a17bb84e2be6"}, {"problem": 49, "code": "(fn split-at-element\n  [n l]\n  [(take n l) (drop n l)]\n)", "user": "5c3440fee4b0d62ef62d9f50"}, {"problem": 49, "code": "(fn foo [n coll] [(take n coll)(drop n coll)])", "user": "5cb11a72e4b026601754b8c6"}, {"problem": 49, "code": "#(cons (take %1 %2) (cons (drop %1 %2) '()))", "user": "5cece5a2e4b0a17bb84e2bfb"}, {"problem": 49, "code": "(fn [n xs] [(take n xs) (drop n xs)])", "user": "5cf4094be4b0aaa82f112a35"}, {"problem": 49, "code": "(fn [t s]\n  [(take t s) (drop t s)]\n  )", "user": "5cfd5a93e4b0cc9c91588168"}, {"problem": 49, "code": "(fn [n col]\n  [(take n col) (drop n col)])", "user": "5cf935f4e4b0b71b1d808a8f"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5cf62ecce4b087f62be35aa7"}, {"problem": 49, "code": "#(conj [] (into [] (take %1 %2)) (into [] (drop %1 %2)))", "user": "5ce36e02e4b0a17bb84e2b3e"}, {"problem": 49, "code": "(juxt take drop)", "user": "5cee521ce4b0aaa82f1129dd"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5ceedd7ae4b0aaa82f1129e4"}, {"problem": 49, "code": "(fn [n coll]\n  (loop [i 0 part1 [] part2 []]\n    (if (= i (count coll))\n      (seq (conj [] part1 part2))\n      (recur (inc i)\n             (if (>= i n)\n               part1\n               (conj part1 (get coll i)))\n             (if (>= i n)\n               (conj part2 (get coll i))\n               part2)))))", "user": "5d03944de4b0cc9c915881c5"}, {"problem": 49, "code": "(fn [x lst] (vector (take x lst) (drop x lst)))", "user": "5d0aab50e4b0cc9c91588220"}, {"problem": 49, "code": "(fn [n coll]\n        [(take n coll) (drop n coll)])", "user": "5d03977ee4b0cc9c915881c7"}, {"problem": 49, "code": "#(conj [] (take %1 %2) (take-last (- (count %2) %1) %2))", "user": "5cf72682e4b0b71b1d808a68"}, {"problem": 49, "code": "(juxt take drop)", "user": "5c0eb93ce4b01240ff567146"}, {"problem": 49, "code": "#(conj [] (take % %2) (drop % %2))", "user": "5d06499ae4b0cc9c915881ec"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5952d75ce4b066ee0a44aed4"}, {"problem": 49, "code": "#(cons (take %1 %2) (cons (drop %1 %2) '()))", "user": "5d0815b3e4b0cc9c91588201"}, {"problem": 49, "code": "(fn [at, col]\n  (loop [current 0 a [] b []]\n    (if (> current (dec (count col)))\n      [a b]\n      (if (< current at)\n        (recur (inc current) (conj a (nth col current)) b)\n        (recur (inc current) a (conj b (nth col current)))))))", "user": "5d0859fbe4b0cc9c91588208"}, {"problem": 49, "code": "#(vector \n  (apply vector (take %1 %2)) \n  (apply vector (drop %1 %2)))", "user": "5d0e311de4b0cc9c91588251"}, {"problem": 49, "code": "(fn [x xs]\n  (list (take x xs)(drop x xs)))", "user": "5c34f7efe4b0d62ef62d9f5b"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5d02fe44e4b0cc9c915881c0"}, {"problem": 49, "code": "(fn [split coll]\n  [(take split coll) (drop split coll)])", "user": "5d126728e4b02c15ef02199a"}, {"problem": 49, "code": "(juxt take drop)", "user": "552f6e8ee4b076ab5578f802"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5cf68090e4b0b71b1d808a59"}, {"problem": 49, "code": "#(conj [] (take %1 %2) (nthrest %2 %1))", "user": "5c665311e4b0fca0c16226a7"}, {"problem": 49, "code": "(fn split [n xs] [(take n xs) (drop n xs)])", "user": "5a08f951e4b01bb0ae8afdfd"}, {"problem": 49, "code": "(fn [n c] [(vec (take n c))\n           (vec (drop n c))])", "user": "5d1b2b7de4b02ea6f0fb697a"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5d148581e4b0902706380dc6"}, {"problem": 49, "code": "(fn [t seq] (conj [] (take t seq) (drop t seq)))", "user": "5c87c79be4b048ec896c591b"}, {"problem": 49, "code": "(fn [x y] \n  (vector (take x y) (drop x y))\n  )", "user": "5cfee28de4b0cc9c91588185"}, {"problem": 49, "code": "(fn [x col] [(take x col) (drop x col)])", "user": "5d1a1082e4b0902706380e0e"}, {"problem": 49, "code": "(fn [n s]\n (vector\n  (apply vector\n    (take n s))\n  (apply vector\n    (drop n s)))\n)", "user": "5ce867fce4b0a17bb84e2baf"}, {"problem": 49, "code": "(fn [n x] (cons (take n x) (cons (drop n x) (empty x))))", "user": "5d1bbef0e4b02ea6f0fb6984"}, {"problem": 49, "code": "#(list (take %1 %2)\n       (drop %1 %2))", "user": "5d10c1a8e4b04b4faecf4449"}, {"problem": 49, "code": "(fn\n  [n s]\n  [(take n s) (drop n s)])", "user": "570c8ac3e4b0b0fb43fd06ca"}, {"problem": 49, "code": "#((juxt take drop) %1 %2)", "user": "4f925791e4b0dcca54ed6cac"}, {"problem": 49, "code": "(fn [x col]\n  (vector (into [] (take x col)) (into [] (drop x col))))", "user": "5ccf99fbe4b0ccb0619628c8"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5d2201b8e4b02ea6f0fb69ed"}, {"problem": 49, "code": "(fn [n col]\n  [(take n col) (drop n col)])", "user": "5d231255e4b02ea6f0fb69fe"}, {"problem": 49, "code": "(fn [n sq] [(take n sq) (drop n sq)])", "user": "5d046f7ce4b0cc9c915881d5"}, {"problem": 49, "code": "(fn [n s] [(take n s) (drop n s)])", "user": "5d236215e4b02ea6f0fb6a09"}, {"problem": 49, "code": "(fn my-split-at [pivot liste]\n  (loop [x pivot\n         kopf []\n         reste liste]\n    (if (zero? x)\n      (vec [(vec kopf) (vec reste)])\n      (recur (dec x) (conj kopf (first reste)) (rest reste)))))", "user": "5d132412e4b02c15ef0219a6"}, {"problem": 49, "code": "(fn mac [n vec]\n  (list (take n vec) (take-last (- (count vec) n) vec))\n)", "user": "5bc2df19e4b07a9b28b10038"}, {"problem": 49, "code": "(fn\n  [n coll]\n  (vector (vec (take n coll)) (vec (drop n coll))))", "user": "5d1c14cde4b02ea6f0fb698a"}, {"problem": 49, "code": "(fn [x ls]\n  (loop [ls ls\n         cnt 1\n         res1 []\n         res2 []]\n    (if (empty? ls)\n      [res1 res2]\n      (recur\n       (rest ls)\n       (inc cnt)\n       (if (<= cnt x)\n         (conj res1 (first ls))\n         res1)\n       (if (> cnt x)\n         (conj res2 (first ls))\n         res2)))))", "user": "5d125d63e4b02c15ef021999"}, {"problem": 49, "code": "(fn [n coll]\n   [(take n coll) (drop n coll)])", "user": "58dde189e4b0a4d5acaab6dd"}, {"problem": 49, "code": "#(do [(take %1 %2) (drop %1 %2)])", "user": "5d272077e4b092dab7f59c64"}, {"problem": 49, "code": "(fn foo\n  [n coll]\n  [(take n coll)(drop n coll)]\n  )", "user": "5d270111e4b092dab7f59c62"}, {"problem": 49, "code": "#(merge (merge [] (take %1 %2)) (drop %1 %2))", "user": "5d0beecee4b0cc9c91588239"}, {"problem": 49, "code": "(fn [size data]\n  [(take size data)\n   (drop size data)])", "user": "5d138119e4b0902706380dbb"}, {"problem": 49, "code": "(fn [n s] (list (take n s) (drop n s)))", "user": "5d29d837e4b01671435dbc6c"}, {"problem": 49, "code": "(fn [n s] (list (take n s) (drop n s)))", "user": "5d13f783e4b0902706380dc1"}, {"problem": 49, "code": "(fn split [n coll]\n  [(take n coll) (drop n coll)])", "user": "5cfabf53e4b0cc9c91588148"}, {"problem": 49, "code": "#(vector (vec (take %1 %2)) (vec (drop %1 %2)))", "user": "5d267c11e4b02ea6f0fb6a41"}, {"problem": 49, "code": "(juxt take drop)", "user": "5d2bfb68e4b01671435dbc86"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5d28222ee4b092dab7f59c7a"}, {"problem": 49, "code": "(fn [n sequence] [(subvec sequence 0 n) (subvec sequence n)])", "user": "5d25abc9e4b02ea6f0fb6a37"}, {"problem": 49, "code": "#(list (take %1 %2) (take-last (- (count %2) %1) %2))", "user": "5d247902e4b02ea6f0fb6a24"}, {"problem": 49, "code": "(fn [n sqn]\n  (vector (take n sqn) (drop n sqn)))", "user": "5cf895efe4b0b71b1d808a85"}, {"problem": 49, "code": "#(split-with (complement (fn [x] (= x (nth %2 %1))))  %2)", "user": "5d2ca236e4b01671435dbc94"}, {"problem": 49, "code": "(fn [n xs] [(take n xs) (nthrest xs n)])", "user": "5d0e9931e4b0cc9c91588258"}, {"problem": 49, "code": "(fn [a b] [(vec (take a b)) (vec (drop a b))])", "user": "5aa1e0f1e4b0d174b936c84e"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])\n\n\n;; ((juxt take drop) 3 [1 2 3 4 5 6])\n;; alternative answer that does the same as above: (juxt take drop)", "user": "5d1be50ce4b02ea6f0fb6986"}, {"problem": 49, "code": "(fn [at_n coll] (loop [rcoll [] lcoll coll i 0]\n                   (if (< i at_n)\n                     (recur (conj rcoll (first lcoll)) (rest lcoll) (inc i))\n                     (list rcoll lcoll))\n                     ))", "user": "5d363543e4b01671435dbd20"}, {"problem": 49, "code": "(juxt take drop)", "user": "5d371b6fe4b01671435dbd31"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5d2e5065e4b01671435dbcae"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5d27da09e4b092dab7f59c75"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "5d29c06be4b01671435dbc6b"}, {"problem": 49, "code": "(fn this [n xs] (vector (take n xs) (drop n xs)))", "user": "5716d585e4b07c98581c3b03"}, {"problem": 49, "code": ";(juxt take drop)\n\n(fn [size data]\n  [(take size data)\n   (drop size data)])", "user": "5ce5b43be4b0a17bb84e2b7a"}, {"problem": 49, "code": "(fn [n s] [(take n s) (drop n s)])", "user": "5d3ae729e4b01671435dbd5d"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "5d370811e4b01671435dbd2d"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "54b42ea4e4b05787c3b1638b"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5bb25684e4b0a20761a2350d"}, {"problem": 49, "code": "(fn [n sq] [(take n sq) (drop n sq)])", "user": "58b997afe4b0888cdc949cd1"}, {"problem": 49, "code": "(fn [n xs]\n  [(take n xs) (drop n xs)])", "user": "598601f9e4b021a7a535fe79"}, {"problem": 49, "code": "#(vector (vec (take %1 %2)) (vec (drop %1 %2)))", "user": "5d1b2a1ee4b02ea6f0fb6979"}, {"problem": 49, "code": "#(reverse (conj '() (take %1 %2) (drop %1 %2)))", "user": "5cf53196e4b087f62be35a94"}, {"problem": 49, "code": "(juxt take drop)", "user": "5d45749be4b07c84aa5ae6a2"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5d4320fde4b07c84aa5ae690"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5d45bd1de4b07c84aa5ae6a4"}, {"problem": 49, "code": "(fn [n ns]\n   [(take n ns) (drop n ns)])", "user": "5d28b684e4b092dab7f59c83"}, {"problem": 49, "code": "(fn my-split-at\n  [n xs]\n  (list\n   (seq (take n xs))\n   (seq (take-last\n         (- (count xs) n)\n         xs))))", "user": "5b4b8cd6e4b02d533a91bc9f"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5d46fbc6e4b07c84aa5ae6af"}, {"problem": 49, "code": "(fn [n arr]\n  (let [group (partition-all n arr)]\n    (vector (vec (first group))\n                 (vec (apply concat (rest group))))))", "user": "5cb41c40e4b026601754b911"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5146f343e4b04ef915e3731e"}, {"problem": 49, "code": "(fn [FirstCount L]\n    (loop [Ret [] First (first L) Rest (rest L)]\n      (if (= FirstCount (count Ret) )\n        [Ret (apply vector (cons First Rest))]\n        (recur\n          (conj Ret First)\n          (first Rest)\n          (rest Rest)\n        )\n      )\n    )\n )", "user": "5d4a6c6ce4b0776584bd6f22"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5d48e6d3e4b0776584bd6f15"}, {"problem": 49, "code": "(fn [n l] [(take n l) (drop n l)])", "user": "5d1cf523e4b02ea6f0fb6994"}, {"problem": 49, "code": "(fn [splitpoint oneseq] (concat [(take splitpoint oneseq)] [(drop splitpoint oneseq)]))", "user": "56bff105e4b060a8e693e3a4"}, {"problem": 49, "code": "(fn [n s]\n      (list (take n s) (drop n s)))", "user": "5d4c4de9e4b0776584bd6f2f"}, {"problem": 49, "code": "(fn [from s]\n  (vector\n    (take from s) \n    (nthnext s from)\n  ))", "user": "5d40442ee4b05dd059a54362"}, {"problem": 49, "code": "(fn [n s]\n  (let [coll (conj [] (subvec s 0 n))]\n        (conj coll (subvec s n))))", "user": "5ad76df9e4b0ea6055cfac18"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "5d0bb4fae4b0cc9c91588237"}, {"problem": 49, "code": "(fn [n coll] (identity [(take n coll) (drop n coll)]))", "user": "5d47f4dbe4b07c84aa5ae6b5"}, {"problem": 49, "code": "(juxt take drop)", "user": "5d51377be4b0776584bd6f5d"}, {"problem": 49, "code": "(fn splitty\n  ([ind ls] (splitty ind [] ls))\n  ([ind new-list [x & xs]]\n   (if (zero? ind) \n     (conj [] new-list (conj xs x))\n     (splitty (dec ind) (conj new-list x) xs))))", "user": "5d48884ee4b07c84aa5ae6bb"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "5259451ce4b0cb4875a45cd7"}, {"problem": 49, "code": "(fn [i coll] \n  (reduce \n   (fn [acc n] \n     (update-in acc \n       [(if (< (count (acc 0)) i) 0 1)] \n       (fn [coll] (conj coll n)))) \n   [[] []] coll))", "user": "5d4f21f3e4b0776584bd6f4e"}, {"problem": 49, "code": "(fn [x sq]\n  (let [head (take x sq)\n        tail (drop x sq)]\n    [head tail]))", "user": "5c04464ee4b0bdcf453d167d"}, {"problem": 49, "code": "(fn [n coll]\n  (vector (vec (take n coll)) \n          (vec (drop n coll))))", "user": "58472aade4b089d5ab817ea0"}, {"problem": 49, "code": "(fn [pos col]\n  [(subvec col 0 pos) (subvec col pos)])", "user": "5bf06734e4b0a6d31fed2153"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5d5a79cce4b02ba5928a6833"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5d07989ee4b0cc9c915881fb"}, {"problem": 49, "code": "(fn [idx seqn]\n              (let [vec1 (vec seqn)]\n              [(subvec vec1 0 idx) (subvec vec1 idx)]))", "user": "5d4df658e4b0776584bd6f41"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5d5e9f45e4b0c9e5857d4ff5"}, {"problem": 49, "code": "; #(list (take % %2) (drop % %2))\n\n(juxt take drop)", "user": "5d5166d9e4b0776584bd6f5e"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5d609ddde4b0c9e5857d5008"}, {"problem": 49, "code": "(fn [n s] [(take n s) (drop n s)])", "user": "5d52bf29e4b0776584bd6f69"}, {"problem": 49, "code": "(juxt take drop)", "user": "5d2c779be4b01671435dbc8d"}, {"problem": 49, "code": "(fn [i xs]\n   (map #(into [] %)\n        [(take i xs) (drop i xs)]))", "user": "5d4b2155e4b0776584bd6f28"}, {"problem": 49, "code": "#(cons (take %1 %2) (cons (drop %1 %2) nil))", "user": "5d629ed9e4b0c9e5857d501d"}, {"problem": 49, "code": "(fn divide-sequence\n  [n collection]\n  (conj (vector (take n collection)) (drop n collection)))", "user": "5d42c88ae4b05dd059a5437e"}, {"problem": 49, "code": "(fn [idx coll]\n  [(take idx coll) (drop idx coll)]\n  )", "user": "5d5eb086e4b0c9e5857d4ff7"}, {"problem": 49, "code": "#_(fn [s c] [(take s c) (drop s c)])\n(juxt take drop)", "user": "5d24e49be4b02ea6f0fb6a2a"}, {"problem": 49, "code": "(fn mysplit [s xs] [(take s xs) (nthrest xs s)])", "user": "5d4c83b7e4b0776584bd6f34"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5b329773e4b025bcb146f322"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5d67c955e4b0db5d338d15f7"}, {"problem": 49, "code": "#(identity [(take %1 %2) (drop %1 %2)])", "user": "5d651553e4b0db5d338d15ca"}, {"problem": 49, "code": "#(vector (vec (take %1 %2)) (vec (drop %1 %2)))", "user": "5d63b06be4b0c9e5857d5025"}, {"problem": 49, "code": "(fn [n ls] [(take n ls) (drop n ls)])", "user": "5d672bd7e4b0db5d338d15f1"}, {"problem": 49, "code": "(fn [x y]\n   (vector\n    (vec (take x y))\n    (vec (nthrest y x))))", "user": "5d5ef0bce4b0c9e5857d4ffb"}, {"problem": 49, "code": "(fn elixir\n  ([len lis]\n  (elixir lis len [])\n   )\n  ([lis len target]\n   (if (= 0 len)\n     (vector (into []  target) (into [] lis))\n     (elixir (rest lis) (- len 1) (conj target (first lis))))\n   ))", "user": "5d4cf3e9e4b0776584bd6f38"}, {"problem": 49, "code": "(fn [split coll]\n  (conj [] (take split coll) (drop split coll)))", "user": "5d68f5e6e4b0db5d338d1605"}, {"problem": 49, "code": "(fn [n coll] \n  [(take n coll) \n   (drop n coll)]\n)", "user": "5cbe5fdfe4b0ccb061962750"}, {"problem": 49, "code": "(fn [pos sq]\n  (loop [n 0\n         first_seq []\n         sec_seq sq]\n    (if (= n pos)\n      (vector first_seq sec_seq)\n      (recur (inc n) (conj first_seq (first sec_seq)) (rest sec_seq)))))", "user": "5d64013ce4b0c9e5857d502d"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "5d6523ace4b0db5d338d15cd"}, {"problem": 49, "code": "(fn [n lat]\n  (cons (take n lat) (cons (drop n lat) '())))", "user": "5d6e5b53e4b04d129b00f2c6"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5d66aea7e4b0db5d338d15ec"}, {"problem": 49, "code": "(fn sa [at li]\n  (if (= 0 at)\n    [[] li]\n    (let [[fi se] (sa (dec at) (rest li))]\n      [(cons (first li) fi) se])))", "user": "5d1e19c4e4b02ea6f0fb69af"}, {"problem": 49, "code": "#(apply conj (list (vec (nthrest %2 %1))) (list (vec (take %1 %2))))", "user": "5d1b59abe4b02ea6f0fb697e"}, {"problem": 49, "code": "(fn [at seq]\n  (let [first-part (take at seq)\n        second-part (drop at seq)]\n    [first-part second-part]))", "user": "5a932f63e4b0d174b936c71b"}, {"problem": 49, "code": ";;(defn  sseq [n coll]\n;;(let [liste (partition-all n coll)]\n;;   (conj [] (into (vector) (first liste)) (into (vector) (flatten (rest liste))))\n;;    )\n;;  )\n\n;;(fn [n coll]\n;;  (conj [] (into (vector) (take n coll)) (into (vector) (drop n coll)))\n;;  )\n\n\n\n(fn [n coll]\n  [ (take n coll) (drop n coll)]\n  )", "user": "5a7f77fae4b00b71e582a041"}, {"problem": 49, "code": "(fn splitat-1 [p s]\n  (list (take p s) (drop p s)))", "user": "5d64ecb2e4b0c9e5857d5036"}, {"problem": 49, "code": "(fn [n c] [(take n c) (drop n c)])", "user": "5d764e52e4b02e6b30c93524"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5d5e0259e4b0c9e5857d4fef"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5a7de7a3e4b03baeef927702"}, {"problem": 49, "code": "(fn e [n coll]\n  (conj []\n        (reduce conj [] (take n coll)) (reduce conj [] (drop n coll))))", "user": "5d6691cee4b0db5d338d15e9"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5d6d2172e4b04d129b00f2b9"}, {"problem": 49, "code": "(fn [x coll] (concat (vector (take x coll)) (vector (drop x coll))))", "user": "5d6d2e11e4b04d129b00f2ba"}, {"problem": 49, "code": "#( list (take %1 %2) (drop %1 %2) )", "user": "5d5c6675e4b09db18d4482ec"}, {"problem": 49, "code": "#(conj [(first(partition % %2))] (drop % %2))", "user": "5d5b2678e4b06a698e928ee2"}, {"problem": 49, "code": "(fn [n v]\n  [(into [] (take n v))\n   (into [] (drop n v))])", "user": "5c56e264e4b0fb8c5ffd9a39"}, {"problem": 49, "code": "(fn [n s] (vector (take n s) (drop n s)))", "user": "5d6fae1ee4b04d129b00f2d4"}, {"problem": 49, "code": "(fn my-split-at [n coll]\n  (list (take n coll) (drop n coll)))", "user": "5d6f063de4b04d129b00f2d1"}, {"problem": 49, "code": "(fn\n\t[numero coll]\n\t(list (take numero coll) (drop numero coll))\n\t)", "user": "5d797deee4b02e6b30c93541"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5d1609f9e4b0902706380dd9"}, {"problem": 49, "code": "(fn split-seq\n  [pos coll]\n  [(vec (take pos coll)) (vec (drop pos coll))])", "user": "5d7b90ede4b02e6b30c93552"}, {"problem": 49, "code": "(fn [x y] (loop [cntr 0 remaining y out []] (if (= cntr x) [out remaining] (recur (inc cntr) (rest remaining) (conj out (first remaining))))))", "user": "5d7158f3e4b04d129b00f2e1"}, {"problem": 49, "code": "(fn [x y] [(take x y) (drop x y)])", "user": "5d6febe6e4b04d129b00f2d5"}, {"problem": 49, "code": "#(vector (subvec %2 0 %) (subvec %2 %))", "user": "5d7eaf5fe4b0492f5d910fc3"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5d6d4463e4b04d129b00f2bd"}, {"problem": 49, "code": "(juxt take drop)", "user": "5d81eba4e4b0915913b1d37b"}, {"problem": 49, "code": "(fn [n coll]\n  (let [splitted1 (take n coll)\n        splitted2 (drop n coll)]\n    [splitted1 splitted2]))", "user": "524a9556e4b05ef8e38e64b1"}, {"problem": 49, "code": "#(vec [(vec (take %1 %2)) (vec (drop %1 %2))])", "user": "5d63f1c2e4b0c9e5857d502b"}, {"problem": 49, "code": "(fn [x coll]\n  [(take x coll) (drop x coll)])", "user": "5bcee7d9e4b0e9689409ee22"}, {"problem": 49, "code": "#(conj [] (take %1 %2) (drop %1 %2))", "user": "5d896a64e4b0915913b1d3b8"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5d81b40ce4b0915913b1d379"}, {"problem": 49, "code": "(fn\n    [n coll]\n    (list (take n coll) (drop n coll)))", "user": "5d887d27e4b0915913b1d3a8"}, {"problem": 49, "code": "(fn [pos col]                                                                         \n  (vector (vec (take pos col)) (vec (take-last (- (count col) pos) col))))", "user": "57a499dae4b0a966079561e6"}, {"problem": 49, "code": "(fn mysplit [v xs] (split-with #(not (>= (.indexOf xs %) v)) xs))", "user": "5d88d820e4b0915913b1d3b1"}, {"problem": 49, "code": "#(list (take %1 %2) (take-last (- (count %2) %1) %2))", "user": "5d323149e4b01671435dbce9"}, {"problem": 49, "code": "(fn my-split-at [index col]\n  (loop [i index\n         left []\n         right col]\n    (if (= 0 i)\n      [left right]\n      (recur (dec i) (conj left (first right)) (rest right)))))", "user": "5d80f328e4b0915913b1d372"}, {"problem": 49, "code": "(fn f\n  [n coll]\n  (mapv vec [(take n coll) (drop n coll)]))", "user": "5d9aeae5e4b0d3f9b434ad4a"}, {"problem": 49, "code": "(fn do [at coll]\n  (let [coll-partitioned (partition-all at coll)]\n    (cons (first coll-partitioned) (list (apply concat (rest coll-partitioned))))))", "user": "5d9c1226e4b0d3f9b434ad51"}, {"problem": 49, "code": ";#(vector (take %1 %2) (drop %1 %2))\n(juxt take drop)", "user": "5d9e7971e4b000c986472bc1"}, {"problem": 49, "code": "(fn [si s]\n  (reduce\n   (fn [a i]\n     (let [a (if (= i si) (concat a [[]]) a)]\n       (concat (butlast a) [(concat (last a) [(nth s i)])])))\n   [[]]\n   (range (count s))))", "user": "5cf6522be4b0b71b1d808a58"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5d123457e4b02c15ef021996"}, {"problem": 49, "code": "(fn split-seq\n  [at xs]\n  (list (take at xs) (drop at xs)))", "user": "5d49ec5ee4b0776584bd6f1c"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "594fdfdce4b066ee0a44ae85"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5d97b602e4b0d3f9b434ad3a"}, {"problem": 49, "code": "(fn mysplit [n coll] (vector (take n coll) (drop n coll)))", "user": "5da4fc6be4b000c986472bff"}, {"problem": 49, "code": "(fn [n s] [(take n s) (drop n s)])", "user": "5d1231dde4b02c15ef021995"}, {"problem": 49, "code": "#(conj (list (nthrest %2 %1)) (seq (take %1 %2)) )", "user": "5d974b1de4b0d3f9b434ad36"}, {"problem": 49, "code": "(fn [n s] [(take n s) (drop n s)])", "user": "5da8fa72e4b000c986472c2d"}, {"problem": 49, "code": "(fn [n col] \n  (comment (fn moveleft [i leftcol rightcol] \n    (if (> i 0) \n      \t(moveleft (dec i) (conj leftcol (first rightcol)) (rest rightcol)) \n      \t[leftcol rightcol])\n    ) \n  \tn [] col)\n  ;(nth (iterate (fn move [[leftcol rightcol]] [(conj leftcol (first rightcol)) (rest rightcol)]) [[] col]) n)\n  [(take n col) (drop n col)]\n)", "user": "56d5c1b0e4b0ea9b8538f7c3"}, {"problem": 49, "code": "(fn [n s] [(take n s) (drop n s)])", "user": "5d8b4960e4b0915913b1d3d3"}, {"problem": 49, "code": "(fn [n s] [(take n s) (drop n s)])", "user": "5daa1fc8e4b000c986472c3e"}, {"problem": 49, "code": "(fn\n  [n coll]\n  (vector (take n coll) (drop n coll)))", "user": "5da7176ae4b000c986472c13"}, {"problem": 49, "code": "(fn my-split-at [n coll]\n;; your solution here\n  (reduce (fn [[front end] [index item]]\n            (if (< index n)\n              [(conj front item) end]\n              [front (conj end item)]))\n          [[] []]\n          (map vector (range) coll)))", "user": "5d883119e4b0915913b1d3a6"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5ccf125ce4b0ccb0619628c0"}, {"problem": 49, "code": "#(concat\n  (list (take % %2))\n  (list (drop % %2)))", "user": "5da760ebe4b000c986472c1a"}, {"problem": 49, "code": "#(conj '() (drop % %2) (take % %2))", "user": "5d99dc47e4b0d3f9b434ad42"}, {"problem": 49, "code": "(fn [n xList] \n  (list\n  (take n xList)\n  (drop n xList)\n  )\n)", "user": "5da20e73e4b000c986472be1"}, {"problem": 49, "code": "#((juxt take drop) %1 %2)", "user": "56f9982ce4b07572ad1a88b8"}, {"problem": 49, "code": "(fn [splitat list] [(subvec list 0 splitat) (subvec list splitat)])", "user": "5da4b152e4b000c986472bf6"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "5d7a748ce4b02e6b30c93547"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5da44d35e4b000c986472bf1"}, {"problem": 49, "code": "(fn my-split-at\n  [split-index x]\n  (cons (take split-index x) (list (drop split-index x))))", "user": "5d9c8a85e4b0eb781811cdad"}, {"problem": 49, "code": "(fn [splat coll]\n  (loop [idx 0 first-part [] remaining coll]\n    (if (= splat idx)\n      (conj [first-part] remaining)\n      (recur (inc idx) (conj first-part (first remaining)) (rest remaining))\n    )\n  )\n)", "user": "5da975b9e4b000c986472c32"}, {"problem": 49, "code": "(fn [offset collection]\n  [(take offset collection) (drop offset collection)])", "user": "5b99554ae4b0c0b3ffbd4ace"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5db19599e4b010eb3c36cd05"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5d7aa22ee4b02e6b30c9354e"}, {"problem": 49, "code": "(fn [n l]\n  [(take n l)\n   (drop-while\n    (fn [i]\n      (if (some\n           (fn [x] (= i x)) (take n l))\n        true false)) l)])", "user": "5dab11cde4b000c986472c45"}, {"problem": 49, "code": "#(drop (count %2) (conj %2 (vec (take % %2)) (vec (drop % %2))))", "user": "5da8b8ece4b000c986472c28"}, {"problem": 49, "code": "(fn split-at* [n xs]\n  (loop [xs  xs\n         n   n\n         acc []]\n    (cond (= n 0) [acc xs]\n          xs      (recur (rest xs)\n                         (dec n)\n                         (conj acc (first xs)))\n          :else   [acc []])))", "user": "5db0d470e4b0f8c104ccfc9e"}, {"problem": 49, "code": "#(vector (take %1 %2) (take-last (- (count %2) %1) %2 )   )", "user": "5da98129e4b000c986472c33"}, {"problem": 49, "code": "(fn [a b] \n  [(take a b) (drop a b)] \n  )", "user": "5c73a944e4b0fca0c16227b8"}, {"problem": 49, "code": "(fn [a s]\n  (cons (take a s) (cons (drop a s) '())))", "user": "5daeb6bce4b0f8c104ccfc8b"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "5cce7de4e4b0ccb0619628b7"}, {"problem": 49, "code": "(fn [i coll] [(take i coll) (drop i coll)])", "user": "5a37b6dbe4b001c08efc0c88"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5d7d17ece4b02e6b30c93558"}, {"problem": 49, "code": "(fn [i li] [(take i li) (take-last (- (count li) i) li)])", "user": "5c527129e4b0fb8c5ffd99de"}, {"problem": 49, "code": "#(concat (list (take % %2)) (list (drop % %2)))", "user": "5dbd51cfe4b09f47823971bb"}, {"problem": 49, "code": "(fn[a coll](loop[coll coll\n                 ret []\n                 n 0]\n             (cond\n               (= n a) (conj [ret] coll)\n               :else (recur(rest coll)\n                           (conj ret (first coll))\n                           (inc n)\n                           ))))", "user": "5dadf73ee4b0f8c104ccfc86"}, {"problem": 49, "code": "(fn [index s] [(take index s) (drop index s)])", "user": "5da71eaee4b000c986472c15"}, {"problem": 49, "code": "( fn[n v] [ (take n v) (drop n v)])", "user": "53d63e6ce4b0e771c3025454"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5db1969be4b010eb3c36cd06"}, {"problem": 49, "code": "(fn [n l]\n  [\n   (take n l)\n   (drop n l)\n   ]\n  )", "user": "5d94fdf9e4b0d3f9b434ad2b"}, {"problem": 49, "code": "#(concat (list (take (mod %1 (count %2)) %2)) (list (drop (mod %1 (count %2)) %2)))", "user": "5db861bce4b010eb3c36cd4b"}, {"problem": 49, "code": "#(vector  (take % %2) (nthrest %2 %))", "user": "5dc12b0ae4b0e59a23173d84"}, {"problem": 49, "code": "#(vector\n (into [] (take %1 %2))\n (into [] (drop %1 %2)))", "user": "5da05bcce4b000c986472bd0"}, {"problem": 49, "code": "(juxt take drop)", "user": "5db7376fe4b010eb3c36cd43"}, {"problem": 49, "code": "#(let [res (conj [] (vec (take %1 %2)))]\n     (conj res (vec (drop %1 %2))))", "user": "5d9e8e40e4b000c986472bc2"}, {"problem": 49, "code": "#(vec[(take % %2)(nthrest %2 %)])", "user": "5dbb5200e4b09f47823971a9"}, {"problem": 49, "code": "(fn [at coll] [(take at coll) (drop at coll)])", "user": "5dc40814e4b02f9375f4e1ae"}, {"problem": 49, "code": "(fn \n  [n coll]\n  [(take n coll) (drop n coll)])", "user": "59ea07c9e4b0249b72820756"}, {"problem": 49, "code": "#(into [] [(vec (take %1 %2)) (vec (take-last (- (count %2) %1) %2))])", "user": "5dc9d5c3e4b03836ba07d824"}, {"problem": 49, "code": "(fn [n s] \n  (conj \n   (list (nthnext s n)) \n   (reverse \n    (nthnext \n     (reverse s) \n     (- (count s) n)))))", "user": "5a291617e4b07f18be40aa76"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5d9c9446e4b0eb781811cdae"}, {"problem": 49, "code": "(fn [i seq] [(take i seq) (drop i seq)])", "user": "5db92996e4b010eb3c36cd50"}, {"problem": 49, "code": "(fn [n v]\n  (list\n   (take n v)\n   (nthrest v n)))", "user": "4fbb7010e4b081705acca2e7"}, {"problem": 49, "code": "#(concat [(take %1 %2)] [(drop %1 %2)])", "user": "5dc9ccf8e4b02f9375f4e1f1"}, {"problem": 49, "code": "#(loop [l %2 n % c 0 res []]\n     (if (= n c)\n       (vec (list (vec res) (vec l)))\n       (recur (rest l) n (inc c) (conj res (first l)))))", "user": "5dcc0ee9e4b02b31cc3da3c2"}, {"problem": 49, "code": "#(concat [(take %1 %2)] [(drop %1 %2)])", "user": "5dc98501e4b02f9375f4e1e6"}, {"problem": 49, "code": "#(cons (take %1 %2) (cons (take-last (- (count %2) %1) %2) []))", "user": "5dc318cde4b02f700ae81835"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "59b1a1b2e4b0e1f4e384c8eb"}, {"problem": 49, "code": "#(let [x (partition-all %1 %2)y (conj  (take 1 x)  (reduce concat(rest x))) ] (reverse y))", "user": "5b044436e4b0cc2b61a3bd71"}, {"problem": 49, "code": "(juxt take drop)", "user": "5dcfdf23e4b0948ae9d9ad43"}, {"problem": 49, "code": "(fn my-split [at elements]\n  (let [left (take at elements)\n        right (drop at elements)]\n    (vector left right)))", "user": "5dc4719ae4b02f9375f4e1b5"}, {"problem": 49, "code": "#(let [col (partition-all %1 %2)\n       first-part (first col)\n       second-part (->> col rest (mapcat identity))]\n    (vector first-part second-part))", "user": "59b0e877e4b0e1f4e384c8d3"}, {"problem": 49, "code": "(fn [n c]\n  [(take n c) (nthrest c n)])", "user": "59595f85e4b066ee0a44afa1"}, {"problem": 49, "code": "(fn [x coll]\n  [(vec (take x coll)) (vec (drop x coll))])", "user": "5da306a3e4b000c986472be7"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5dd1fb19e4b0948ae9d9ad51"}, {"problem": 49, "code": "#(conj (vector (take %1 %2)) (drop %1 %2))", "user": "5dcb1e73e4b02b31cc3da3b6"}, {"problem": 49, "code": "#( (fn split [x l m] (if (= x 0) (list l m) (split (- x 1) (concat l (list (first m))) (rest m)))) %1 [] %2 )", "user": "5dd35dcbe4b0948ae9d9ad5f"}, {"problem": 49, "code": "(fn [num l] (vec (list (vec (take num l)) (vec (drop num l)))))", "user": "556086a2e4b0c656e3ff17c1"}, {"problem": 49, "code": "(fn split-seq [n coll]\n  (loop [idx 0\n         rem coll\n         res []\n         curr []]\n    (if (empty? rem)\n      (if (empty? curr)\n        res\n        (conj res curr))\n      (if (= idx n)\n        (recur (inc idx) (rest rem) (conj res curr) (vector (first rem)))\n        (recur (inc idx) (rest rem) res (conj curr (first rem)))\n        ))\n    ))", "user": "5dd67c22e4b0948ae9d9ad80"}, {"problem": 49, "code": "(fn [n x] [(vec (take n x)) (vec (drop n x))])", "user": "5dd90651e4b0948ae9d9ad97"}, {"problem": 49, "code": "(fn [pos col] (vector (into [] (drop-last (-  (count col) pos) col)) (into [] (drop pos col))))", "user": "5793931ee4b0e215f87e845c"}, {"problem": 49, "code": "(fn [split -seq]\n  (conj [] (take split -seq) (drop split -seq)))", "user": "5ddb6151e4b0948ae9d9adb0"}, {"problem": 49, "code": "(fn [n coll]\n  [(subvec coll 0 n) (subvec coll n)])", "user": "5078dedae4b08327cd804a5d"}, {"problem": 49, "code": "#(loop [n %1 a1 (vec '()) a2 %2] (if (> n 0) (recur \n  (dec n) \n  (conj a1 (first a2)) \n  (vec (rest a2))) [a1 a2])\n   )", "user": "5ddcf10ae4b0948ae9d9adbe"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5dd60c58e4b0948ae9d9ad7c"}, {"problem": 49, "code": "(fn [n s]\n  (conj (list (drop n s)) (take n s)))", "user": "5ddd134ae4b0948ae9d9adc0"}, {"problem": 49, "code": "(fn [n seqe] \n  [(take n seqe) (drop n seqe)])", "user": "5dc9c4f2e4b02f9375f4e1f0"}, {"problem": 49, "code": "(fn [n col] [(take n col) (drop n col)])", "user": "5da5a1eee4b000c986472c04"}, {"problem": 49, "code": "(fn [index coll]\n  (conj [] (take index coll) (drop index coll))\n)", "user": "5de6484ce4b0986d99407f66"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "5de68f83e4b0986d99407f6c"}, {"problem": 49, "code": "#(conj [] (vec (take %1 %2)) (vec (drop %1 %2)))", "user": "5de65feee4b0986d99407f68"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5deab1b2e4b0986d99407f9f"}, {"problem": 49, "code": "(fn [n s] [(take n s) (drop n s)])", "user": "5dee144ae4b093ff71727591"}, {"problem": 49, "code": "(juxt take drop)", "user": "5a83e15ae4b00b71e582a088"}, {"problem": 49, "code": "(fn [n s] (list (take n s) (drop n s)))", "user": "5defd277e4b093ff717275b0"}, {"problem": 49, "code": "#(vector\n  (take %1 %2)\n  (drop %1 %2))", "user": "5defc177e4b093ff717275af"}, {"problem": 49, "code": "(fn [x coll]\n   (let [coll1 (take x coll)\n         coll2 (drop x coll)]\n     (vector coll1 coll2)))", "user": "5de7e7cae4b0986d99407f7a"}, {"problem": 49, "code": "#(vector\n    (take %1 %2)\n    (nthrest %2 %1)\n  )", "user": "5d5e2efee4b0c9e5857d4ff0"}, {"problem": 49, "code": "#(concat\n          (vector (take %1 %2))\n          (vector (drop %1 %2)))", "user": "5c30da5ae4b0d62ef62d9f23"}, {"problem": 49, "code": "(fn [i v] (list (take i v) (drop i v)))", "user": "5de48f92e4b0948ae9d9ae07"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "5ddb8a6ee4b0948ae9d9adb2"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (take-last (- (count coll) n) coll)])", "user": "5df54584e4b03c219ef1a38f"}, {"problem": 49, "code": "(fn [n coll] (vector  (subvec coll 0 n ) (subvec coll  n ) ) )", "user": "5ddbd202e4b0948ae9d9adb4"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5ddfd88be4b0948ae9d9ade1"}, {"problem": 49, "code": "(fn [n xs] [(take n xs) (drop n xs)])", "user": "5df175bce4b03c219ef1a34d"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5dfb2e2ae4b0a607a9a45cd6"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5dfc457de4b0a607a9a45cea"}, {"problem": 49, "code": "(fn my-split-at [val seq]\n   (loop [count 0\n          xs ()\n          s seq]\n     (if (= count val)\n          (vector (reverse xs) s)\n          (recur (inc count) (cons (first s) xs) (rest s)))))", "user": "5df0c6ffe4b093ff717275c2"}, {"problem": 49, "code": "(fn [n coll]\n    [(take n coll) (drop n coll)])", "user": "5dfb20b8e4b0a607a9a45cd3"}, {"problem": 49, "code": "#(conj [] (take %1 %2) (drop %1 %2))", "user": "5dd25ca8e4b0948ae9d9ad55"}, {"problem": 49, "code": "(fn split-custom [n v]\n  (let [a (take n v)\n        b (drop n v)]\n  (vector a b)))", "user": "5d8c8175e4b0915913b1d3e1"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5dfa1c67e4b0a607a9a45cc5"}, {"problem": 49, "code": "(fn [n s] [(take n s) (drop n s)])", "user": "5bfc9037e4b0bdcf453d15f2"}, {"problem": 49, "code": "(fn [n xs] \n  (loop [idx 0 \n         a []\n         b []]\n    (cond\n     (= idx (count xs)) [a b]\n     (< idx n) (recur (inc idx) (conj a (nth xs idx)) b)\n     :else (recur (inc idx) a (conj b (nth xs idx)))\n        )\n     )\n    )", "user": "5d84545ee4b0915913b1d38b"}, {"problem": 49, "code": "(juxt take drop)", "user": "5e03a15be4b0a607a9a45d5e"}, {"problem": 49, "code": "(fn [n coll]\n  (loop [coll coll split [] ind 0]\n    (if (= ind n)\n      [split coll]\n      (recur (rest coll) (conj split (first coll)) (inc ind))\n    )\n  )\n)", "user": "5e09fd26e4b099d064962f60"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5dd44256e4b0948ae9d9ad69"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "514992d2e4b0b64cbeae1848"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5073e7fde4b054001656accb"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5e0d948fe4b099d064962f98"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5e00b6e7e4b0a607a9a45d2b"}, {"problem": 49, "code": "(fn [n coll]\n   (loop [i n\n          in coll\n          out1 []\n          out2 []]\n     (if (empty? in)\n       (vector out1 out2)\n       (if (= 0 i)\n         (recur 0 (rest in) out1 (conj out2 (first in)))\n         (recur (- i 1) (rest in) (conj out1 (first in)) out2)\n         )))\n   )", "user": "5df75fd8e4b0a607a9a45c92"}, {"problem": 49, "code": "(fn [n col]\n    [(take n col) (drop n col)])", "user": "5d89427ae4b0915913b1d3b5"}, {"problem": 49, "code": "(fn [n col] (vector (take n col) (drop n col)))", "user": "5e078ba7e4b0978307768fb6"}, {"problem": 49, "code": "#(vec [(take %1 %2) (drop %1 %2)])", "user": "5e0ceca5e4b099d064962f91"}, {"problem": 49, "code": "#(list (take %1 %2) (take-last (- (count %2) %1) %2))", "user": "5e08c3dde4b0978307768fc8"}, {"problem": 49, "code": "(fn [n s] (list (take n s) (drop n s)))", "user": "5ddc270fe4b0948ae9d9adb9"}, {"problem": 49, "code": "#(conj [] (take % %2) (drop % %2))", "user": "5e0e836fe4b099d064962fa8"}, {"problem": 49, "code": "(fn [n l] (mapv (partial apply vector) (vector (take n l) (drop n l))))", "user": "5e03475de4b0a607a9a45d58"}, {"problem": 49, "code": "#(conj [] (subvec %2 0 %) (subvec %2 %))", "user": "5e121a89e4b099d064962fe4"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5e144bd5e4b0a047bd49f6e7"}, {"problem": 49, "code": "(fn [i xs]\n   (loop [j 0 l [] r xs]\n     (if (= j i)\n       [l r]\n       (recur (inc j) (conj l (first r)) (rest r)))))", "user": "5dcd7933e4b0b296f82db5ae"}, {"problem": 49, "code": "#(into [] [(into [] (take %1 %2)) (into [] (drop %1 %2))])", "user": "5e17bb46e4b00200644e3d5a"}, {"problem": 49, "code": "(fn [n l]\n  (loop [n n f [] l l]\n    (if (zero? n)\n      [f l]\n      (recur (dec n) (conj f (first l)) (rest l)))))", "user": "5e178fbee4b00200644e3d57"}, {"problem": 49, "code": "(fn [x coll] (list (take x coll) (drop x coll)))", "user": "5e04ce34e4b0a607a9a45d71"}, {"problem": 49, "code": "(fn [x col]\n  [(take x col) (drop x col)])", "user": "5e17509fe4b00200644e3d52"}, {"problem": 49, "code": "(fn split [n seq1]\n  (list (take n seq1) (drop n seq1)))", "user": "5e16006be4b0a047bd49f711"}, {"problem": 49, "code": "(juxt take drop)", "user": "5d6eaa58e4b04d129b00f2cd"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5e16fd78e4b0a047bd49f726"}, {"problem": 49, "code": "(fn [split-index seq] (loop [suffix seq left [] right [] index 0] (if (empty? suffix) [left right] (if (< index split-index) (recur (rest suffix) (conj left (first suffix)) right (inc index)) (recur (rest suffix) left (conj right (first suffix)) (inc index))))))", "user": "5e1cc888e4b0dc959400853d"}, {"problem": 49, "code": "#(conj [] (into [] (take % %2)) (into [] (drop % %2)))", "user": "4f24c859e4b0d66497709fef"}, {"problem": 49, "code": "(fn [n coll]\n   [(take n coll)\n    (drop n coll)]\n   )", "user": "57fc5e42e4b0d3187e900997"}, {"problem": 49, "code": "#(vector (vec (take %1 %2)) (vec (drop %1 %2)))", "user": "5e1a3989e4b0dc9594008511"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5e21c933e4b05b4b01516128"}, {"problem": 49, "code": "(juxt take drop)", "user": "5d929ceae4b0915913b1d412"}, {"problem": 49, "code": "(fn my-split-at\n  [N col]\n  (vector (take N col) (drop N col)))", "user": "5e1c3e6ee4b0dc9594008530"}, {"problem": 49, "code": "(fn [n xs] \n  (let [[a & rest] (partition-all n xs)]\n    [a (apply concat rest)]))", "user": "5e2549c8e4b05b4b0151615f"}, {"problem": 49, "code": "(fn [n s] (list (take n s) (drop n s)))", "user": "5e21f944e4b05b4b0151612d"}, {"problem": 49, "code": "(fn [n l]\n  [(take n l)(drop n l)])", "user": "54764a8fe4b0c51c1f4d72a3"}, {"problem": 49, "code": "#(vector \n  (vec (take %1 %2)) \n  (vec (drop %1 %2)))", "user": "5e22e4c5e4b05b4b01516137"}, {"problem": 49, "code": "(fn [i s]\n  [(take i s) (drop i s)])", "user": "58f3c18ee4b0438e51c2cead"}, {"problem": 49, "code": "#(apply conj [[] (take %1 %2) (drop %1 %2)])", "user": "5dc53ddee4b02f9375f4e1bd"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5e357507e4b0650de70e2b2a"}, {"problem": 49, "code": "#(vector \n (vec (take %1 %2))\n (vec (drop %1 %2)))", "user": "5e257a33e4b05b4b01516166"}, {"problem": 49, "code": "(fn [n xs]\n  [(take n xs) (nthrest xs n)])", "user": "5db5d09be4b010eb3c36cd31"}, {"problem": 49, "code": "#(loop [n %1, l [], r %2]\n       (cond (= 0 n) [l r]\n             :else (recur (dec n)\n                          (conj l (first r))\n                          (rest r))))", "user": "5e38a9cbe4b01d43a70e8dc2"}, {"problem": 49, "code": "(fn split [n xs]\n  (reduce (fn [[start end] [i x]]\n            (if (< i n)\n              [(conj start x) end]\n              [start (conj end x)]))\n          [[] []]\n          (map-indexed vector xs)))", "user": "5d47fa13e4b07c84aa5ae6b6"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5e3a25d4e4b01d43a70e8dde"}, {"problem": 49, "code": "(fn [n coll] [(subvec coll 0 n) (subvec coll n)])", "user": "5e246f92e4b05b4b01516150"}, {"problem": 49, "code": "(fn [n xs]\n  [(take n xs) (drop n xs)])", "user": "5e394c33e4b01d43a70e8dd1"}, {"problem": 49, "code": "(juxt take drop)", "user": "5e3e23d9e4b01d43a70e8e20"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5e392de0e4b01d43a70e8dcb"}, {"problem": 49, "code": "(fn [n coll]\n   (loop [m n\n          rear coll\n          front ()]\n     (if (= 0 m)\n       [(reverse front) rear]\n       (recur (dec m)\n              (rest rear)\n              (cons (first rear) front)))))", "user": "5e3ef7d4e4b01d43a70e8e2d"}, {"problem": 49, "code": "(juxt take drop)", "user": "5e0a6916e4b099d064962f65"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5e444cc7e4b01d43a70e8e7f"}, {"problem": 49, "code": "(juxt take drop)", "user": "5e41b679e4b01d43a70e8e58"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5e259d05e4b05b4b01516169"}, {"problem": 49, "code": "(comp (partial mapv vec) (juxt take drop))", "user": "5e12b21be4b099d064962feb"}, {"problem": 49, "code": "(fn\n  [idx coll]\n  [(take idx coll) (drop idx coll)])", "user": "5c9a638fe4b048ec896c5aae"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5e348945e4b0650de70e2b1d"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5e491182e4b043cd24807a46"}, {"problem": 49, "code": "(fn [i xs] (list (take i xs) (drop i xs)))", "user": "5d828b7ee4b0915913b1d382"}, {"problem": 49, "code": "(fn [n a]\n  (list (subvec a 0 n) (subvec a n)))", "user": "5e42b688e4b01d43a70e8e6b"}, {"problem": 49, "code": "#(vector (vec (take %1 %2)) (vec (drop %1 %2)))", "user": "5e17c269e4b00200644e3d5c"}, {"problem": 49, "code": "(fn [n x] [(take n x) (drop n x)])", "user": "5e18bd30e4b0dc95940084fa"}, {"problem": 49, "code": "(fn [n arr]\n    (let [indexed-arr (map-indexed (fn [idx itm] [idx itm]) arr)\n          yyy (split-with #(>= (dec n) (first %)) indexed-arr)]\n      [(map last (first yyy)) (map last (last yyy))] \n    )\n  )", "user": "5e2586afe4b05b4b01516167"}, {"problem": 49, "code": "(fn [n s]\n  (list (take n s) (nthnext s n)))", "user": "5dc72a9ce4b02f9375f4e1cd"}, {"problem": 49, "code": "#_(fn [n xs]\n   (list (take n xs) (drop n xs)))\n\n(juxt take drop)", "user": "505223fae4b0a561d07d8f17"}, {"problem": 49, "code": "(fn [k x]\n  (conj [] (vec (take k x)) (vec (drop k x)))\n  )", "user": "5dd70ee3e4b0948ae9d9ad85"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5e44c804e4b01d43a70e8e89"}, {"problem": 49, "code": "(fn split-seq [n s] \n  (list (take n s) (nthrest s n)))", "user": "5d078e2de4b0cc9c915881fa"}, {"problem": 49, "code": "(fn [n xs] \n  [(take n xs) (drop n xs)])", "user": "5e41a67be4b01d43a70e8e56"}, {"problem": 49, "code": "#(list (take %1 %2) (nthrest %2 %1))", "user": "5ddd6cfae4b0948ae9d9adc4"}, {"problem": 49, "code": "(fn [n s] [(take n s) (drop n s)])", "user": "5e5b8d92e4b0fd0acd158658"}, {"problem": 49, "code": "(fn spl [at xs]\n  [(take at xs) (drop at xs)])", "user": "5dcc152ae4b02b31cc3da3c3"}, {"problem": 49, "code": "(juxt take drop)", "user": "5e5c425ae4b0fd0acd158662"}, {"problem": 49, "code": "(fn [pos coll] (conj (vector) (take pos coll) (drop pos coll)))", "user": "5e453725e4b01d43a70e8e93"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5e5809bbe4b027a2e10ac104"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5e5fd7afe4b0fd0acd158680"}, {"problem": 49, "code": "#(conj [] (take %1 %2) (drop %1 %2))", "user": "5e48ec09e4b043cd24807a45"}, {"problem": 49, "code": "(fn [a b] (cons (take a b) [(nthrest b a)]))", "user": "5e31a4b0e4b05b4b0151622b"}, {"problem": 49, "code": "(fn [i x] (conj (vector (subvec x 0 i)) (subvec x i)))", "user": "5e5f8a07e4b0fd0acd15867c"}, {"problem": 49, "code": "(fn [n xs]\n\t(vector (take n xs) (drop n xs)))", "user": "5dc85f8ae4b02f9375f4e1da"}, {"problem": 49, "code": "(fn split-a-seq [n lat]\n  (cons (take n lat) (cons (drop n lat) '())))", "user": "5e663073e4b0fd0acd1586bc"}, {"problem": 49, "code": "(fn [x y] [(take x y) (drop x y)])", "user": "5e66c144e4b0e171e1033683"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5df70ee8e4b0a607a9a45c8a"}, {"problem": 49, "code": "(fn [splitCount\n     items]\n  (list (take splitCount items) (nthrest items splitCount)))", "user": "5e692be9e4b04a83ad7cd269"}, {"problem": 49, "code": "#(into [] [(into [] (take % %2)) (into [] (nthrest %2 %))])", "user": "5e63ffa0e4b0fd0acd1586a6"}, {"problem": 49, "code": "(fn [cnt col] \n\t(vector (vec (take cnt col)) (vec (drop cnt col)) )\n)", "user": "5e42ba49e4b01d43a70e8e6c"}, {"problem": 49, "code": "(fn splt [i vs]\n  (vector (take i vs) (drop i vs)))", "user": "5d28d935e4b092dab7f59c88"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5e724492e4b085ba37836dc7"}, {"problem": 49, "code": "(fn [n s] [(take n s) (drop n s)])", "user": "5e6e6537e4b04a83ad7cd29a"}, {"problem": 49, "code": "#(loop [s %2, r [], c [], i 1]\n\t(if (empty? s)\n\t\t(conj r c)\n\t\t(if (= %1 i)\n\t\t\t(recur (rest s) (conj r (conj c (first s))) [] (inc i))\n  \t\t\t(recur (rest s) r (conj c (first s)) (inc i)))))", "user": "5e2ead6ae4b05b4b015161f5"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5cbc1ee7e4b026601754b9e1"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5e5096c6e4b027a2e10ac0c6"}, {"problem": 49, "code": "#(vector (take %1 %2) (nthrest %2 %1))", "user": "5e6ca949e4b04a83ad7cd289"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5e8308abe4b09a7a73c8bbb4"}, {"problem": 49, "code": "(fn [x arr]\n  [(take x arr) (drop x arr)])", "user": "5e7f62cce4b085ba37836e3b"}, {"problem": 49, "code": "(fn usingtake [x y]\n  [(take x y) (drop x y)])", "user": "5e832e75e4b09a7a73c8bbb5"}, {"problem": 49, "code": "(fn spl-at [n lst]\n  ((juxt #(take n %) #(drop n %)) lst))", "user": "53528cd3e4b084c2834f4af2"}, {"problem": 49, "code": "(fn [n coll]\n  (conj []\n        (vec (take n coll))\n        (vec (drop n coll))))", "user": "585c16c3e4b0f14aab7c877d"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5e805895e4b085ba37836e44"}, {"problem": 49, "code": "(fn [%1 %2] [(take %1 %2) (drop %1 %2)] )", "user": "5e79fcb9e4b085ba37836e08"}, {"problem": 49, "code": "(fn [s coll]\n  (loop [x coll f [] y s]\n    (if (zero? y)\n      [f x]\n      (recur (rest x) \n             (conj f (first x))\n             (dec y) \n             )\n      )\n    )\n  )", "user": "5e85163be4b09a7a73c8bbd0"}, {"problem": 49, "code": "(fn split-at' [i l]\n  (let [start (take i l)\n        remainder (drop i l)]\n    [start remainder]))", "user": "5d0eed51e4b0cc9c91588262"}, {"problem": 49, "code": "(fn csplit-at [n xs]\n   (vector (take n xs) (take-last (- (count xs) n) xs)))", "user": "5e7b1ef4e4b085ba37836e10"}, {"problem": 49, "code": "(fn [n c] [(take n c) (drop n c)])", "user": "4eb70649535d7eef30807373"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5e13a6b7e4b099d064963001"}, {"problem": 49, "code": "(fn [n xs]\n  [(take n xs)(drop n xs)])", "user": "5e7dc2d8e4b085ba37836e2f"}, {"problem": 49, "code": "#(vec [(take % %2) (nthrest %2 %)])", "user": "5e8ce2fee4b0cb0169546328"}, {"problem": 49, "code": "#(conj [] (take %1 %2) (drop %1 %2))", "user": "5e947a69e4b0fbed045a37f8"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5e62444fe4b0fd0acd158694"}, {"problem": 49, "code": "#(vector (vec (take %1 %2)) (vec (drop %1 %2)))", "user": "5e954b9ee4b0fbed045a3809"}, {"problem": 49, "code": "(fn splitAt\n  [at lst]\n  (vector (take at lst) (drop at lst)))", "user": "5e9636fee4b0fbed045a3816"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5be9ad9be4b0f319e2d7ec76"}, {"problem": 49, "code": "#(loop [[first & rest :as all] %2\n        acc []]\n   (if (= (count acc) %1)\n     [acc all]\n     (recur rest (conj acc first))))", "user": "5e99cbd4e4b0157ca96647e6"}, {"problem": 49, "code": "(fn [n s] (list (take n s) (drop n s)))", "user": "5e98e8a9e4b0157ca96647dc"}, {"problem": 49, "code": "#(vector \n  (vec (take %1 %2))\n  (vec (drop %1 %2)))", "user": "5dc88a38e4b02f9375f4e1db"}, {"problem": 49, "code": "(fn [n lst]\n  (loop [l1 '() l2 '() l lst i 0]\n    (if (empty? l) (list (reverse l1) (reverse l2) )\n      (recur \n      (if (< i n) (conj l1 (first l)) l1 ) \n      (if (>= i n) (conj l2 (first l)) l2 )\n      (rest l) \n      (inc i)   \n      ) \n    )\n  )\n  )", "user": "5e94ff5fe4b0fbed045a37ff"}, {"problem": 49, "code": "#(vector (take % %2)(drop % %2))", "user": "5e980e6be4b0157ca96647d6"}, {"problem": 49, "code": "(fn [n coll] (cons (take n coll) (cons (drop n coll) '()) ) )", "user": "5e996e76e4b0157ca96647e4"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5e976fa8e4b0157ca96647cf"}, {"problem": 49, "code": "(fn [number coll]\n  (concat (list (take number coll)) (list (drop number coll))))", "user": "5e84b48ee4b09a7a73c8bbc8"}, {"problem": 49, "code": "(fn [n s] (list (take n s) (drop n s)))", "user": "5e218bb7e4b05b4b01516123"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll)(drop n coll)])", "user": "5e978fe5e4b0157ca96647d1"}, {"problem": 49, "code": "(fn split-sequence [x y]\n  (list (take x y) (drop x y)))", "user": "5e9771dee4b0157ca96647d0"}, {"problem": 49, "code": "(fn splitSequence\n  [n lst]\n  (cons \n   (take n lst)(cons (drop n lst) '())))", "user": "5e95013fe4b0fbed045a3800"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5e9e408fe4b00a66d4a95172"}, {"problem": 49, "code": "(fn [n col] [(take n col) (drop n col)])", "user": "5e9d1c75e4b0157ca9664801"}, {"problem": 49, "code": "#(vector (take %1 %2) (nthrest %2 %1))", "user": "5e85d0bde4b09a7a73c8bbd6"}, {"problem": 49, "code": "(fn [n lst] [(take n lst) (drop n lst)])", "user": "5e950178e4b0fbed045a3801"}, {"problem": 49, "code": "(fn [n lst] [(take n lst) (drop n lst)])", "user": "5e9878b9e4b0157ca96647d8"}, {"problem": 49, "code": "(fn [n coll] (vector (take n coll) (drop n coll)))", "user": "5e950310e4b0fbed045a3802"}, {"problem": 49, "code": "(fn splitSeq\n  [x lst]\n  (cons \n   (take x lst)(cons (drop x lst) '())))", "user": "5ea3711ae4b00a66d4a9519d"}, {"problem": 49, "code": "(fn [x coll] \n  [(take x coll) (drop x coll)]\n  )", "user": "5df08767e4b093ff717275bf"}, {"problem": 49, "code": "(fn [a coll]\n  [(take a coll) (drop a coll)])", "user": "5e9f38cce4b00a66d4a9517e"}, {"problem": 49, "code": "#(let [coll (partition-all %1 %2)]\n    (vec (list (vec (first coll)) (apply (comp vec concat) (rest coll)))))", "user": "5ea444b7e4b00a66d4a951a0"}, {"problem": 49, "code": "(juxt take drop)", "user": "5e0cbc14e4b099d064962f8e"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5ea6f88de4b00a66d4a951b1"}, {"problem": 49, "code": "(fn solution [q sequen]\n     (vector (take q sequen) (drop q sequen)))", "user": "5e2ef900e4b05b4b015161fc"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5e9e642ce4b00a66d4a95174"}, {"problem": 49, "code": "(fn [n xs] [(take n xs ) (drop n xs)])", "user": "5ea7b04de4b00a66d4a951b6"}, {"problem": 49, "code": "(fn [n s] [(take n s) (drop n s)])", "user": "5c9adfebe4b048ec896c5ab9"}, {"problem": 49, "code": "(fn [n s1]\n  (loop \n    [acc []\n     z1 s1\n     k n]\n    \n    (if (empty? z1)\n      acc \n      (if (= k 1)\n        (recur [(conj acc (first z1)) (rest z1)] nil nil)\n        (recur (conj acc (first z1)) (rest z1) (dec k))\n      )\n    )\n  )\n)", "user": "5ea97df7e4b00a66d4a951c8"}, {"problem": 49, "code": "#(\n  (juxt (partial take %1)\n        (partial drop %1))\n  %2)", "user": "5e64ae6ce4b0fd0acd1586ac"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5ea2e6bfe4b00a66d4a95197"}, {"problem": 49, "code": "(fn [i seq] [(take i seq) (drop i seq)])", "user": "5ea970d1e4b00a66d4a951c6"}, {"problem": 49, "code": "(fn [n l] [(take n l) (drop n l)])", "user": "5eb1c786e4b00a66d4a95201"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "5e9e8648e4b00a66d4a95178"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5eb1a80ce4b00a66d4a951ff"}, {"problem": 49, "code": "#(list (take % %2) (nthrest %2 %))", "user": "5e9b7aefe4b0157ca96647f1"}, {"problem": 49, "code": "(juxt take drop)", "user": "5eb193fde4b00a66d4a951fe"}, {"problem": 49, "code": "(fn my-split [n coll]\n  [(take n coll) (drop n coll)])", "user": "5e12327ee4b099d064962fe5"}, {"problem": 49, "code": "(fn [i list]\n    [(take i list) (drop i list)])", "user": "5db35f85e4b010eb3c36cd22"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5ebc7c13e4b00a66d4a95267"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5e67ab18e4b0e171e103368a"}, {"problem": 49, "code": "(fn [n xs]\n  (conj [(take n xs)] (drop n xs)))", "user": "5ec21ef0e4b00a66d4a95299"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "5eb5d9bbe4b00a66d4a9522e"}, {"problem": 49, "code": "(fn [n s] [(take n s)\n         (reverse  (take (- (count s) n) (reverse s)))])", "user": "5ec3a13ae4b08d0ec38692b9"}, {"problem": 49, "code": "(fn [p a]\n  [(take p a)(drop p a)])", "user": "5cc092d1e4b0ccb061962790"}, {"problem": 49, "code": "(fn [i col]\n  [(take i col) (nthrest col i)])", "user": "5d13af73e4b0902706380dbe"}, {"problem": 49, "code": "#(vector (subvec %2 0 %1) (subvec %2 %1))", "user": "5e3302ece4b0650de70e2b02"}, {"problem": 49, "code": "#(list (take % %2)\n       (drop % %2))", "user": "5ebdb3d2e4b00a66d4a95275"}, {"problem": 49, "code": "(fn [i coll] [(take i coll) (drop i coll)])", "user": "51412b0ae4b0694e2952b79d"}, {"problem": 49, "code": "#(conj [] (take %1 %2) (take-last (- (count %2) %1) %2))", "user": "568f2059e4b0dcc4269f40df"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5de12192e4b0948ae9d9aded"}, {"problem": 49, "code": "(fn [i s]\n   (list (map #(nth s %) (range 0 i))\n   (map #(nth s %) (range i (count s)))\n   ))", "user": "5ec3cdf7e4b08d0ec38692bc"}, {"problem": 49, "code": "(fn [n s]\n                (loop [s (seq s)\n                       m 1\n                       out1 []\n                       out2 []]\n                  (cond\n                    (empty? s) [out1 out2]\n                    (> m n) (recur (rest s)\n                                   (inc m)\n                                   out1\n                                   (conj out2 (first s)))\n                    :else (recur (rest s)\n                                 (inc m)\n                                 (conj out1 (first s))\n                                 out2))))", "user": "5eb22708e4b00a66d4a95204"}, {"problem": 49, "code": "#(conj [] (take %1 %2) (drop %1 %2))", "user": "5ec943fde4b08d0ec38692f1"}, {"problem": 49, "code": "(fn [n xs]\n  (conj [] (take n xs) (drop n xs)))", "user": "5e0b6375e4b099d064962f7b"}, {"problem": 49, "code": "(fn [n x](conj [] (into [] (take n x)) (into [] (drop n x))))", "user": "5ecf55dae4b016b56eae05a8"}, {"problem": 49, "code": "(fn [n col] \n  (list (take n col) (drop n col)))", "user": "5ecd1831e4b016b56eae0592"}, {"problem": 49, "code": "(fn [s i] (list (take s i) (drop s i)))", "user": "5ed15e23e4b016b56eae05ba"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5ecfd429e4b016b56eae05a9"}, {"problem": 49, "code": "(fn [n coll]\n                    [(take n coll) (drop n coll)])", "user": "5eccbce6e4b016b56eae058e"}, {"problem": 49, "code": "(fn [div coll]\n  (vector (take div coll)\n       \t  (drop div coll)))", "user": "579c35fee4b05b1deef9ae04"}, {"problem": 49, "code": "#(concat [(take %1 %2)] [(nthrest %2 %1)])", "user": "5ed03b7fe4b016b56eae05ae"}, {"problem": 49, "code": "(fn [n, s] [(vec (take n s)) (vec (take-last (- (count s) n) s))])", "user": "5ed677bee4b016b56eae05e0"}, {"problem": 49, "code": "(fn [n coll]\n    (loop [a [] b coll i 0]\n      (if (or (empty? b) (>= i n)) [a b]\n          (recur (conj a (first b))\n                 (rest b)\n                 (inc i)))))", "user": "5ed9b912e4b0c7845d86b0e3"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5ed52854e4b016b56eae05d2"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5eccc5c2e4b016b56eae058f"}, {"problem": 49, "code": "#(let [all (partition-all %1 %2)]\n         (cons (first all)\n               (vector (mapcat identity (rest all)))))", "user": "5ed6030de4b016b56eae05db"}, {"problem": 49, "code": "(fn _my [ix sq] (if (= ix 0) [[] sq] (let [[f & r] sq [inleft inright] (_my (dec ix) r)] [(concat [f] inleft) inright])))", "user": "5ecc0831e4b016b56eae058c"}, {"problem": 49, "code": "(fn [n v]\n   (map\n     (fn [f v]\n       (f v))\n     [#(take n %1) #(drop n %1)]\n     (repeat v)))", "user": "5ebff55de4b00a66d4a95286"}, {"problem": 49, "code": "(juxt take drop)", "user": "5ed4b1e8e4b016b56eae05ce"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5ec6de19e4b08d0ec38692da"}, {"problem": 49, "code": "(juxt take drop)", "user": "5ed8a12fe4b0c7845d86b0d7"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (take-last (- (count coll) n) coll)])", "user": "5ed9c2cde4b0c7845d86b0e4"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5edd6eb7e4b0c7845d86b0f7"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "5ebd7296e4b00a66d4a95273"}, {"problem": 49, "code": "(fn [s li]\n  [(take s li) (drop s li)])", "user": "5ec819b4e4b08d0ec38692e2"}, {"problem": 49, "code": "#(vector (subvec %2 0 %1) (subvec %2 %1 (count %2)))", "user": "5ed4482be4b016b56eae05ca"}, {"problem": 49, "code": "#(let [all (partition-all % %2)\n        part1 (first all)\n        other (next all)]\n    [part1 (apply concat other)])", "user": "565b371fe4b068f2fe63dbff"}, {"problem": 49, "code": "(fn [n s] (list (take n s) (take-last (- (count s) n) s)))", "user": "5ec25800e4b00a66d4a9529b"}, {"problem": 49, "code": "(fn [n s]\n  (concat [(take n s)] [(take-last (- (count s) n) s)]))", "user": "5ed875abe4b016b56eae05f2"}, {"problem": 49, "code": "(juxt take drop)", "user": "5e909685e4b0cb016954634d"}, {"problem": 49, "code": "(fn [a b] [(take a b)(drop a b)])", "user": "5644149de4b0018b46ad8c07"}, {"problem": 49, "code": "#(vector (take %1 %2) (subvec %2 %1))", "user": "4f6543cae4b07046d9f4ef41"}, {"problem": 49, "code": "(fn [n coll] [ (take n coll) (take-last (- (count coll) n) coll) ])", "user": "53c73e8ae4b00fb29b2212a5"}, {"problem": 49, "code": "#(vector (take %1 %2) (nthrest %2 %1))", "user": "5eb6561fe4b00a66d4a95233"}, {"problem": 49, "code": "(fn [s seq]\n      [(take s seq) (drop s seq)])", "user": "5ee75f8be4b029a2061bbea5"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5ee738dee4b029a2061bbea2"}, {"problem": 49, "code": "(fn [n, arr]\n  [(take n arr), (drop n arr)])", "user": "5eb4927fe4b00a66d4a95221"}, {"problem": 49, "code": "#(cons (take %1 %2) (cons (drop %1 %2) '()))", "user": "5ee93720e4b029a2061bbeb7"}, {"problem": 49, "code": ";;(fn [n s]\n;;  (list (take n s) (drop n s)))\n\n\n;;#(list (take %1 %2) (drop %1 %2))\n(juxt take drop)", "user": "5edb07dde4b0c7845d86b0ed"}, {"problem": 49, "code": "#(cons (take %1 %2) (list (drop %1 %2)))", "user": "5ee81beae4b029a2061bbeac"}, {"problem": 49, "code": "(fn [cnt args]\n  (conj [] (take cnt args) (take-last (- (count args) cnt) args)))", "user": "5eeb03dde4b029a2061bbeca"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5eee7311e4b07c55ae4a0510"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5e9b6471e4b0157ca96647f0"}, {"problem": 49, "code": "(fn [n v] (list (take n v) (nthrest v n)))", "user": "553b90c8e4b09218d5f45005"}, {"problem": 49, "code": "(fn [a b]\n  [(take a b) (drop a b)])", "user": "5eea5ce7e4b029a2061bbec0"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5bd9549ee4b0ed4b8aab4bf0"}, {"problem": 49, "code": "#(vector (take %1 %2) (take-last (- (count %2) %1) %2))", "user": "5ef18431e4b07c55ae4a0529"}, {"problem": 49, "code": "#(\n         concat (list (take %1 %2)) (list (take-last (- (count %2) %1) %2))\n         )", "user": "5eee9352e4b07c55ae4a0512"}, {"problem": 49, "code": "(fn foo [n coll]\n  ((fn acc [i c1 c2]\n    (if (zero? i)\n      (vector c1 c2)\n      (acc (- i 1) (conj c1 (first c2)) (rest c2))))\n  n [] coll))", "user": "5edfb1e5e4b0c7845d86b107"}, {"problem": 49, "code": "(fn my-split-at\n  [n coll]\n  (vector (take n coll) (drop n coll)))", "user": "5eecd339e4b07c55ae4a0507"}, {"problem": 49, "code": "(fn [x coll]\n  (conj [] (take x coll) (drop x coll)))", "user": "5ec7d7f2e4b08d0ec38692e1"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5ed70b97e4b016b56eae05e6"}, {"problem": 49, "code": "(fn [n li]\n  [(into [] (take n li)) (into [] (drop n li))])", "user": "5ebb4751e4b00a66d4a95262"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5ef5ee81e4b07c55ae4a054a"}, {"problem": 49, "code": "(fn [s xs]\n  [(take s xs) (drop s xs)])", "user": "5eec1001e4b07c55ae4a0502"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "576aea4fe4b0a07e8fc18126"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5eb741e4e4b00a66d4a9523b"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2 ) )", "user": "5edc16e1e4b0c7845d86b0f1"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5eff339ae4b0cf489e8d7f0c"}, {"problem": 49, "code": "(fn [n coll]\n  (concat [(take n coll)] [(drop n coll)]))", "user": "5e639b4be4b0fd0acd1586a2"}, {"problem": 49, "code": "#(list (take %1 %2) (take (count %2) (drop %1 %2)))", "user": "5f016f37e4b0cf489e8d7f20"}, {"problem": 49, "code": "(fn splitter [n coll]\n  [(take n coll) (drop n coll)])", "user": "5f012a2ee4b0cf489e8d7f1e"}, {"problem": 49, "code": "(fn [n is]\n        [(subvec is 0 n)\n         (subvec is n (count is))])", "user": "51765d78e4b085adf681d884"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5ed6c4ede4b016b56eae05e3"}, {"problem": 49, "code": "(fn [n s]\n  [(take n s) (drop n s)])", "user": "5bc7f2d6e4b07a9b28b100b7"}, {"problem": 49, "code": "#(vector (take %1 %2) (nthrest %2 %1))", "user": "5a09ebf8e4b0eab8c0448932"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5cc6b681e4b0ccb061962828"}, {"problem": 49, "code": "(fn split-seq [i coll]\n  [(take i coll) (drop i coll)])", "user": "5f03550ce4b0cf489e8d7f33"}, {"problem": 49, "code": "(fn [n s] [(take n s) (nthrest s n)])", "user": "5f02f365e4b0cf489e8d7f2c"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5f0890ffe4b0cf489e8d7f61"}, {"problem": 49, "code": "(fn mysplit-at\n  [n coll]\n  (conj (vector (take n coll )) (drop n coll)))", "user": "5f088bb3e4b0cf489e8d7f5f"}, {"problem": 49, "code": "(fn [n v]\n  [(vec (take n v)) (vec (drop n v))])", "user": "58f98231e4b0438e51c2cf4c"}, {"problem": 49, "code": "(fn [n coll]\n   [(take n coll) (drop n coll)])", "user": "5e7bb000e4b085ba37836e1d"}, {"problem": 49, "code": "(fn [x xs] [(subvec xs 0 x) (subvec xs x)])", "user": "58409e47e4b089d5ab817dee"}, {"problem": 49, "code": "(fn [ind coll] [(drop-last (- (count coll) ind) coll) (drop ind coll)])", "user": "58ed2e21e4b056aecfd47d7a"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5f0824c5e4b0cf489e8d7f5b"}, {"problem": 49, "code": "#(\nconj (conj [] (take %1 %2)) (drop %1 %2)\n)", "user": "5d73530ce4b02e6b30c93514"}, {"problem": 49, "code": "(fn [x coll]\n  (list (take x coll)\n        (drop x coll)))", "user": "5f0c8b0de4b0f30dddfb5d4c"}, {"problem": 49, "code": "(fn [p v] (vector (subvec v 0 p) (subvec v p)))", "user": "57e070fde4b0bd073c202478"}, {"problem": 49, "code": "(fn [idx coll]\n   [(take idx coll) (drop idx coll)])", "user": "5ef8e9e0e4b09b61f08553cb"}, {"problem": 49, "code": "(fn my-split-at\n  [i coll]\n  (conj [] (take i coll) (drop i coll)))", "user": "5f003099e4b0cf489e8d7f17"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5e471203e4b043cd24807a2a"}, {"problem": 49, "code": "(fn [n sq] [(take n sq) (drop n sq)])", "user": "5e6ba862e4b04a83ad7cd27d"}, {"problem": 49, "code": "(fn [n xs] (concat (list (take n xs))\n                   (list (drop n xs))))", "user": "5f0b8243e4b0f30dddfb5d45"}, {"problem": 49, "code": "(fn [num lst] (list (take num lst) (drop num lst)))", "user": "5f1328dee4b091ba50b4dbb1"}, {"problem": 49, "code": "#(concat [(take % %2) (drop % %2)])", "user": "5f03ab5be4b0cf489e8d7f37"}, {"problem": 49, "code": "(fn [at xs] [(take at xs) (drop at xs)])", "user": "5509a23ee4b06e50f9beb11a"}, {"problem": 49, "code": "#(list (take %1 %2) (take-last (- (count %2) %1) %2))", "user": "5b7f2d75e4b047b03b203768"}, {"problem": 49, "code": "(fn [n l](let [splits (partition-all n l)](conj [] (first splits) (apply concat (rest splits)))))", "user": "5d83b9aae4b0915913b1d386"}, {"problem": 49, "code": "(fn [splitter seq]\n  (into [] [(subvec seq 0 splitter) (subvec seq splitter)]))", "user": "5f15a50fe4b091ba50b4dbbc"}, {"problem": 49, "code": "(fn [numb x] [(into [] (take numb x))(into [] (drop numb x))] )", "user": "5f082d9ee4b0cf489e8d7f5c"}, {"problem": 49, "code": "(fn [pos s]\n  [(vec (take pos s)) (vec (drop pos s))])", "user": "5d431c77e4b07c84aa5ae68f"}, {"problem": 49, "code": "(fn [n xs] (vector (take n xs) (drop n xs)))", "user": "5ec0de29e4b00a66d4a9528e"}, {"problem": 49, "code": "#(conj (conj [] (vec (take %1 %2))) (vec (drop %1 %2)))", "user": "5f19ecbae4b091ba50b4dbdf"}, {"problem": 49, "code": "(fn clj41\n   [n coll]\n    [(take n coll) (drop n coll)])", "user": "5ec5f7f2e4b08d0ec38692d1"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5f17e3c5e4b091ba50b4dbd0"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5e3071abe4b05b4b01516213"}, {"problem": 49, "code": "(juxt take drop)", "user": "5e9154c1e4b0cb0169546354"}, {"problem": 49, "code": "(juxt take drop)", "user": "5f06d26ae4b0cf489e8d7f53"}, {"problem": 49, "code": "(fn foo [n s]\n(let [[a & b] (partition-all n s)] [a (apply concat b)])\n)", "user": "5f1aade6e4b091ba50b4dbe4"}, {"problem": 49, "code": "(fn fd [n x]\n  [(take n x) (drop n x)])", "user": "5666c2dbe4b04acd4f672dc3"}, {"problem": 49, "code": "#(map (fn [f] (f %1 %2)) [take drop])", "user": "5f247827e4b0f565ad998292"}, {"problem": 49, "code": "(fn [n col] (list (take n col) (drop n col)))", "user": "5f0e8312e4b0f30dddfb5d5b"}, {"problem": 49, "code": "(fn [n coll]\n  (let [a (take n coll)\n        b (drop n coll)] (vector a b)))", "user": "5f081f6de4b0cf489e8d7f5a"}, {"problem": 49, "code": "(fn [n s] (vector (take n s) (drop n s)))", "user": "5f0cb4f3e4b0f30dddfb5d4e"}, {"problem": 49, "code": "(fn [n s] (list (take n s) (drop n s)))", "user": "5f22e8c9e4b0f565ad99828b"}, {"problem": 49, "code": "(juxt take drop)", "user": "596a66cde4b069c0a1a19803"}, {"problem": 49, "code": "(fn [n l] (map (partial map second) (partition-by first (map-indexed (fn [i e] [(< i n) e]) l))))", "user": "5f2c02d1e4b033932238a65f"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5f2d6787e4b033932238a66d"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5e8c3e8fe4b0cb0169546322"}, {"problem": 49, "code": "(fn[n x] [(take n x)(drop n x)] )", "user": "5f27cc7fe4b033932238a646"}, {"problem": 49, "code": "#(list (take %1 %2) (nthrest %2 %1))", "user": "548f1604e4b0e286459a1230"}, {"problem": 49, "code": "(fn [n xs] [(take n xs) (drop n xs)])", "user": "51553ea7e4b06c5f6a1490a2"}, {"problem": 49, "code": "(fn split [n s]\n  (list (take n s) (drop n s)))", "user": "5efdb9bae4b0cf489e8d7f02"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5f1af439e4b0f565ad998257"}, {"problem": 49, "code": "(fn [splice seq]\n   [(take splice seq)(drop splice seq)])", "user": "5eecf110e4b07c55ae4a050b"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5f300f28e4b033932238a682"}, {"problem": 49, "code": "#(vector (vec (take %1 %2)) (vec (drop %1 %2)))", "user": "5f309144e4b0574c87022c23"}, {"problem": 49, "code": "(fn split-seq\n  [n coll]\n  (vector (take n coll) (drop n coll))\n  )", "user": "5f29837ee4b033932238a64f"}, {"problem": 49, "code": "(fn [n coll]\n  (list (take n coll) (drop n coll)))", "user": "535f0cbde4b04ce2eb3ed2d9"}, {"problem": 49, "code": "#(vector (take %1 %2)(drop %1 %2))", "user": "5f39bd49e4b0574c87022c7f"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "5f25a2b1e4b0117231e5035e"}, {"problem": 49, "code": "(fn [i coll]\n  [(subvec coll 0 i) (subvec coll i)])", "user": "5c633df2e4b0fca0c162265c"}, {"problem": 49, "code": "(fn [num list]\n   (loop [n num\n          tail list\n          head []]\n     (if (= n 0)\n       (conj []  head tail)\n       (recur (dec n) (rest tail) (conj head (first tail))))))", "user": "5f3f2281e4b004f08c61c561"}, {"problem": 49, "code": "(fn [x s]\n  (reverse (conj (list (take x s)) (take-last (- (count s) x) s))))", "user": "5f3ddc71e4b004f08c61c551"}, {"problem": 49, "code": "(juxt take drop)", "user": "5f3abcc4e4b004f08c61c52b"}, {"problem": 49, "code": "(juxt take drop)", "user": "5f419985e4b0955706451fab"}, {"problem": 49, "code": "#(let [part (partition-all %1 %2)] [(first part) (reduce concat []  (rest part))])", "user": "5f429fdfe4b0955706451faf"}, {"problem": 49, "code": "#(vector (vec (take %1 %2)) (vec (drop %1 %2)))", "user": "5f2c94b4e4b033932238a669"}, {"problem": 49, "code": "(fn [sp-at x]\n  (let [m (map-indexed vector x)]\n    (vector \n      (reduce \n        (fn [out [i part]]\n          (if (< i sp-at)\n            (conj out part) \n            out        \n          ))\n      []\n      m) \n      (into [] (nthrest x sp-at)))\n  ))", "user": "5f3a8493e4b004f08c61c527"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5f431d32e4b0955706451fb5"}, {"problem": 49, "code": "(fn [c s] (vector (take c s)\n                  (take-last (- (count s) c) s)))", "user": "5992dc6ae4b0866487ed0d7d"}, {"problem": 49, "code": "(fn [split coll]\n  (conj [] (take split coll) (drop split coll)))", "user": "5f238a59e4b0f565ad99828d"}, {"problem": 49, "code": "(fn split-a-seq [n s]\n  [(take n s) (nthrest s n)]\n  )", "user": "58ffc6cfe4b0438e51c2d008"}, {"problem": 49, "code": "(fn [col seq]\n  [(take col seq) (drop col seq)]\n  )", "user": "5ee66158e4b029a2061bbe98"}, {"problem": 49, "code": "(fn [x coll] \n  (let [rem (- (count coll) x)] \n    (conj [] (take x coll) (take-last rem coll))\n    \n    )\n  )", "user": "5f468d26e4b0955706451fc1"}, {"problem": 49, "code": "(fn [n x]\n  (list (take n x) (nthrest x n)))", "user": "5f574662e4b0a0bc16850a90"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5f0dfa48e4b0f30dddfb5d55"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5f5df0bfe4b02876ed9fcfeb"}, {"problem": 49, "code": "(fn my-split-at\n  [n coll]\n  (loop [n n\n         newlst []\n         coll coll]\n    (if (zero? n)\n      [newlst (vec coll)]\n      (recur \n        (dec n)\n        (conj newlst (first coll))\n        (rest coll)))))", "user": "5f4eb036e4b0102c75033969"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5dfb7f6de4b0a607a9a45cdc"}, {"problem": 49, "code": "(fn [i xs]\n  (letfn [(f [c xs ys]\n             (if (=  c i)\n               [xs ys]\n               (f (inc c) (conj xs (first ys)) ((comp vec rest) ys))))]\n     (f 0 [] (vec xs))))", "user": "5f5e7158e4b02876ed9fcff0"}, {"problem": 49, "code": "#( conj [] (vec (take % %2)) (vec (drop % %2)))", "user": "5f32f69ae4b0574c87022c35"}, {"problem": 49, "code": "#(map vec (vector (first (partition %1 %2)) (nthrest %2 %1)))", "user": "53275758e4b09d4e7a9b54fc"}, {"problem": 49, "code": "(fn [i c]\n (loop [first-part [] second-part c]\n \t(if (= i (count first-part))\n\t\t[first-part second-part]\n        (recur\n\t\t\t(conj first-part (first second-part))\n\t\t\t(rest second-part)))))", "user": "5ea6fe98e4b00a66d4a951b2"}, {"problem": 49, "code": "(fn splitter [index coll] \n  (vector (vec(take index coll)) \n          (vec(drop index coll))))", "user": "5f5f2eafe4b02876ed9fcff5"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5f5f9483e4b02876ed9fcff8"}, {"problem": 49, "code": "(fn [n s] [(take n s) (drop n s)])", "user": "5f5b624de4b05ea7b9adc42f"}, {"problem": 49, "code": "(fn [n s] \n  (list (take n s) (drop n s))\n)", "user": "5f631e11e4b02876ed9fd011"}, {"problem": 49, "code": "(fn [num sq]\n  (loop [s sq idx 0 result []]\n    (if (>= idx num)\n      [result s]\n      (recur\n        (rest s)\n        (inc idx)\n        (concat result [(first s)])\n        )\n      )\n    )\n  )", "user": "5f58db95e4b0a0bc16850a9a"}, {"problem": 49, "code": "(fn [value coll]\n  (vector (vec (take value coll)) (vec (drop value coll))))", "user": "5f63d933e4b02876ed9fd018"}, {"problem": 49, "code": "(fn [split-by xs]\n  (list (take split-by xs) (drop split-by xs)))", "user": "563f0fdae4b08d4f616f5ece"}, {"problem": 49, "code": "(fn [num coll]\n   (let [pref (-> (take num coll)\n                  (vec))\n         rest (-> (remove (set pref) coll)\n                  (vec))]\n     [pref rest]))", "user": "5db658ebe4b010eb3c36cd39"}, {"problem": 49, "code": "(fn [n s] [(take n s) (drop n s)])", "user": "5eff6c0ee4b0cf489e8d7f11"}, {"problem": 49, "code": "(fn split [x ls]\n  (let [coll (vec ls)]\n    [(subvec coll 0 x) (subvec coll x (count coll))]))", "user": "5f38eecce4b0574c87022c72"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5f56c0cae4b0a0bc16850a8c"}, {"problem": 49, "code": "(fn [n xs] (vector (take n xs) (drop n xs)))", "user": "5f6796d2e4b02876ed9fd036"}, {"problem": 49, "code": "#(identity [(take %1 %2) (drop %1 %2)])", "user": "5f6e5c58e4b02876ed9fd067"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "5f6b61ece4b02876ed9fd051"}, {"problem": 49, "code": "(fn split\n  [place lst]\n  [(take place lst) (drop place lst)])", "user": "5f724f55e4b02876ed9fd089"}, {"problem": 49, "code": "(fn [i c]\n  (let [cc  (count c)\n        d  (- cc i)]\n    [(take i c) (take-last d c)]))", "user": "54fce8bde4b07d26eda61d30"}, {"problem": 49, "code": "(fn [a b] [(take a b) (drop a b)])", "user": "588fbb39e4b00487982d51bd"}, {"problem": 49, "code": "(fn [i coll]\n  [(take i coll) (drop i coll)])", "user": "5f663bc0e4b02876ed9fd02d"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5f6e576ae4b02876ed9fd066"}, {"problem": 49, "code": "; #(list (take % %2) (drop % %2))\n\n(juxt take drop)", "user": "5f6a583ae4b02876ed9fd046"}, {"problem": 49, "code": "(fn [n li] (list (take n li) (nthnext li n)))", "user": "5ec0db8be4b00a66d4a9528d"}, {"problem": 49, "code": "(fn my-split-at\n  [x s]\n  [(take x s) (drop x s)])", "user": "5f3103aee4b0574c87022c24"}, {"problem": 49, "code": "(fn [n s] [(take n s) (drop n s)])", "user": "5f648ef1e4b02876ed9fd01b"}, {"problem": 49, "code": "(fn split\n  [n s]\n  (loop [n n [hd & tl] s first_half []]\n    (if (= n 0)\n      (conj [first_half] (vec (conj tl hd)))\n      (recur (- n 1) tl (conj first_half hd))\n    )\n  )\n)", "user": "5f6b8222e4b02876ed9fd052"}, {"problem": 49, "code": "(fn [n col] [(take n col) (drop n col)])", "user": "5f6b5d83e4b02876ed9fd050"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5f388489e4b0574c87022c69"}, {"problem": 49, "code": "(fn [n x]\n  [(take n x) (drop n x)])", "user": "5f727dd6e4b02876ed9fd090"}, {"problem": 49, "code": "#(vector (vec (take  %1 %2)) (vec (drop %1 %2))   )", "user": "5f77b99fe4b02876ed9fd0bc"}, {"problem": 49, "code": "(fn [n s] [ (take n s) (take-last (- (count s) n) s)])", "user": "5c06fab7e4b0bdcf453d16bd"}, {"problem": 49, "code": "(fn [cut-point sequence]\n   (loop [cursor sequence\n          index cut-point\n          output []]\n     (if (= 0 index)\n       [output cursor]\n       (recur (rest cursor) (dec index) (conj output (first cursor))))))", "user": "5f79bff2e4b02876ed9fd0ca"}, {"problem": 49, "code": "(fn[x y](vector (subvec y 0 x) (subvec y x)))", "user": "5f77890ae4b02876ed9fd0b9"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "5f393bd6e4b0574c87022c76"}, {"problem": 49, "code": "#(vec (list (vec (take %1 %2)) (vec (drop %1 %2))))", "user": "5f63cde9e4b02876ed9fd015"}, {"problem": 49, "code": "(fn [n xs] (concat [(take n xs)] [(drop n xs)]))", "user": "5f82cfcce4b0c071e6c840fb"}, {"problem": 49, "code": "(fn [n lst]\n    [(take n lst) (drop n lst)])", "user": "5f74de11e4b02876ed9fd0a5"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5f727bd1e4b02876ed9fd08c"}, {"problem": 49, "code": "(fn [indx lst]\n   (let [newlst (partition-all indx lst)]\n       (list (first newlst) (mapcat identity (rest newlst)))))", "user": "5f77d470e4b02876ed9fd0be"}, {"problem": 49, "code": "(fn [n x]\n  [(take n x) (drop n x)])", "user": "5f7e91c8e4b0c071e6c840d8"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5f72f144e4b02876ed9fd093"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5f84f0f5e4b0375e81f54e78"}, {"problem": 49, "code": "(fn[n lst] (let [lst (partition n n [] lst)]\n                (list (first lst) (reduce concat (rest lst)) )))", "user": "5f727d2fe4b02876ed9fd08f"}, {"problem": 49, "code": "(fn d [x lst]\n         [(vec (take x lst)) (vec(drop x lst))])", "user": "5f737899e4b02876ed9fd099"}, {"problem": 49, "code": "(fn\n  [i coll]\n  (loop [coll2 coll\n         index 1\n         temp []\n         result []]\n    (if-let [item (first coll2)]\n      (if (= index i)\n        (recur (rest coll2) (inc index) [] (conj result (conj temp item)))\n        (recur (rest coll2) (inc index) (conj temp item) result))\n      (conj result temp))))", "user": "5f6e23e6e4b02876ed9fd064"}, {"problem": 49, "code": "(fn [n a] (vector (take n a) (drop n a)))", "user": "5f686436e4b02876ed9fd03c"}, {"problem": 49, "code": "(fn [n s] [(take n s) (drop n s)])", "user": "5f5358b7e4b0a0bc16850a77"}, {"problem": 49, "code": "(fn [f f1]\n  \n  (list(take f f1)(drop f f1))\n  \n  )", "user": "5f727be9e4b02876ed9fd08d"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5f8497dce4b0375e81f54e74"}, {"problem": 49, "code": "(fn splitter [i lst]\n    (let [part1 (take i lst)\n          part2 (drop i lst)]\n        (cons part1 (list part2))))", "user": "5f84f110e4b0375e81f54e79"}, {"problem": 49, "code": "(fn [n item]\n  [(take n item) (drop n item)])", "user": "5f792d48e4b02876ed9fd0c5"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5f8361bae4b01aacbe7a2712"}, {"problem": 49, "code": "(fn [x seqs]\n  [(take x seqs) (drop x seqs)])", "user": "5f8795d4e4b020286baa5e96"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5f87e757e4b0169f6814c40f"}, {"problem": 49, "code": "#(vector (subvec %2 0 %1) (subvec %2 %1))", "user": "5f86a98be4b0649ffcda4caa"}, {"problem": 49, "code": "(fn [x sq] (cons (take x sq) (cons (drop x sq) '())))", "user": "5f875a0ae4b020286baa5e94"}, {"problem": 49, "code": "(fn split[limit x]\n  (list (take limit x) (drop limit x)))", "user": "5f8330b8e4b01aacbe7a270f"}, {"problem": 49, "code": "(fn [n lst]\n  [(take n lst) (drop n lst)])", "user": "5f810e97e4b0c071e6c840ed"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5f727cb0e4b02876ed9fd08e"}, {"problem": 49, "code": "(fn split-n [n coll]\n  (concat [(take n coll)] [(drop n coll)]))", "user": "5c8cfff8e4b048ec896c5996"}, {"problem": 49, "code": "(fn splt [n s]\n  (conj [] (take n s) (drop n s)))", "user": "5f8b06afe4b0715f5002d74a"}, {"problem": 49, "code": "(fn [n coll]\n  (vector (take n coll) (take-last (- (count coll) n) coll)))", "user": "5b59b89be4b02d533a91bd7d"}, {"problem": 49, "code": "#(conj [] (vec (take %1 %2)) (vec (drop %1 %2)))", "user": "5f816cc6e4b0c071e6c840f1"}, {"problem": 49, "code": "(juxt take drop)", "user": "5f8e865fe4b0715f5002d76d"}, {"problem": 49, "code": "(fn [x y] (let [a (take x y) b (drop x y)] [a b]))", "user": "5f8fe45ae4b0715f5002d78d"}, {"problem": 49, "code": "(fn [n seqn]\n   (list (take n seqn) (drop n seqn)))", "user": "5f8d76c3e4b0715f5002d758"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5f93529ae4b0715f5002d7bc"}, {"problem": 49, "code": "(fn\n  [k xs]\n  (let [inner\n        (fn\n          [acc cnt]\n          (if (>= cnt k)\n            acc\n            (recur [(conj (first acc) (first (nth acc 1))) (rest (nth acc 1))] (inc cnt))))]\n    (inner [[] xs] 0)))", "user": "5e1c24f4e4b0dc959400852d"}, {"problem": 49, "code": "(fn splitit[index lst]\n  (vector (take index lst) (drop index lst)))", "user": "5f9567cce4b0715f5002d7c7"}, {"problem": 49, "code": "(fn [myindex mylist]\n  (loop [index-to-split myindex\n         new-list []\n         remaining-list mylist]\n\n    (if (> index-to-split 0)\n      (recur (dec index-to-split) (conj new-list (first remaining-list)) (rest remaining-list))\n      (vector new-list remaining-list))))", "user": "5f1eebcee4b0f565ad998273"}, {"problem": 49, "code": "(fn [v s]\n  (let [seq-size (count s) n (- seq-size v)]\n    (list (take v s) (take-last n s))))", "user": "5f597522e4b0a0bc16850a9e"}, {"problem": 49, "code": "(fn [at coll] [(take at coll) (nthrest coll at)])", "user": "5ee4545ee4b029a2061bbe8d"}, {"problem": 49, "code": "(juxt take drop)", "user": "5f737e16e4b02876ed9fd09a"}, {"problem": 49, "code": "(fn myF [n xs] [(take n xs) (drop n xs)])", "user": "56eff7c1e4b04a395b9a0468"}, {"problem": 49, "code": "(fn [n coll] ((juxt (partial take n) (partial drop n)) coll))", "user": "5f9f032fe4b0715f5002d839"}, {"problem": 49, "code": "#(-> []\n         (conj (take %1 %2))\n         (conj (drop %1 %2)))", "user": "58db48a5e4b0a4d5acaab679"}, {"problem": 49, "code": "#(list (take %1 %2) (nthrest %2 %1))", "user": "5f838122e4b01aacbe7a2715"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5fa17538e4b0f0ebd91b77e3"}, {"problem": 49, "code": "(fn p49 [n l]\n  [(take n l) (drop n l)])", "user": "5f968f4ee4b0715f5002d7d2"}, {"problem": 49, "code": "(fn [n coll]\n   [(take n coll) (drop n coll)])", "user": "5fa74b82e4b0fa27300f3dda"}, {"problem": 49, "code": "(fn [n xs]\n  [(take n xs) (drop n xs)])", "user": "5fa8424ce4b0fa27300f3de5"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5f331015e4b0574c87022c37"}, {"problem": 49, "code": "(fn [x y] [(take x y) (drop x y)])", "user": "5f974321e4b0715f5002d7f3"}, {"problem": 49, "code": "(fn [n c] [(take n c) (drop n c)])", "user": "5fa5b72ee4b0fa27300f3dca"}, {"problem": 49, "code": "(fn [n col] (list (take n col) (drop n col)))", "user": "5face7fce4b08cb800c85ae9"}, {"problem": 49, "code": "(fn split-seq [n xs]\n    (vector (vec (take n xs)) (vec (drop n xs))))", "user": "5fa358a1e4b0f0ebd91b77fd"}, {"problem": 49, "code": "#(loop [r [] n %1 s %2] (println r n s)\n    (cond\n      (= n 0) [r (vec s)]\n      :else (recur (conj r (first s)) (dec n) (rest s))))", "user": "5f9c4113e4b0715f5002d821"}, {"problem": 49, "code": "(fn [n xs]\n  [(take n xs) (drop n xs)])", "user": "5fa5a6b1e4b0fa27300f3dc8"}, {"problem": 49, "code": "(fn [n s] (list (take n s) (drop n s)))", "user": "5facfb48e4b08cb800c85aea"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "573a0ecce4b0cd1946bd1088"}, {"problem": 49, "code": "(fn  [ n coll]\n   ((fn splitter [c n acc]\n      (if (= 0 n)\n        [acc (vec c)]\n        (splitter (rest c) (- n 1) (conj acc (first c)))))\n       coll n []))", "user": "5fb544f6e4b08cb800c85b4e"}, {"problem": 49, "code": "(fn [n l] (list (take n l) (drop n l)))", "user": "5fab7ea6e4b08cb800c85ad8"}, {"problem": 49, "code": "#(conj [] (take % %2) (drop % %2))", "user": "5df79c31e4b0a607a9a45c9b"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "5fb3a096e4b08cb800c85b35"}, {"problem": 49, "code": "(fn [n s]\n   (partition-by #(>= (.indexOf s %) n) s))", "user": "5fa80c01e4b0fa27300f3de2"}, {"problem": 49, "code": "(juxt take drop)", "user": "5fa96ddbe4b0fa27300f3dec"}, {"problem": 49, "code": "(fn [num coll]\n  [(take num coll) (drop num coll)])", "user": "5fbe40bce4b03f550f448246"}, {"problem": 49, "code": ";#(list (take %1 %2) (drop %1 %2))\n(juxt take drop)", "user": "5fae3d8ae4b08cb800c85afa"}, {"problem": 49, "code": "(fn [n coll] (conj (conj [] (take n coll)) (drop n coll)))", "user": "5fb2eac0e4b08cb800c85b2f"}, {"problem": 49, "code": "#(vector \n  (vec (take %1 %2))\n  (vec (drop %1 %2)))", "user": "5fa2b45ce4b0f0ebd91b77f5"}, {"problem": 49, "code": "(juxt take drop)", "user": "5484c3b2e4b0e286459a11a2"}, {"problem": 49, "code": "(fn [n coll]\n  (list (take n coll) (take-last (- (count coll) n) coll)))", "user": "5fac50f4e4b08cb800c85ae5"}, {"problem": 49, "code": "(fn [x xs] [(take x xs) (drop x xs)])", "user": "5fab003de4b08cb800c85ad1"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5fc4d277e4b06ffabd1ef72a"}, {"problem": 49, "code": "#( vector (take % %2) (drop % %2))", "user": "5fc5c303e4b02c825b0c8c1a"}, {"problem": 49, "code": ";(fn spat\n;  ([n coll] (spat n coll []))\n;  ([n coll acc]\n;   (if (zero? n)\n;     (into [] (cons (vec acc)\n;                    (cons (vec coll) [])))\n;     (spat (dec n) (rest coll) (conj acc (first coll))))))\n\n(fn [n coll] [(take n coll) (drop n coll)])", "user": "5f90aeefe4b0715f5002d799"}, {"problem": 49, "code": "(fn [i l] [(take i l) (drop i l)])", "user": "5a3e1243e4b0447ef91cc5ae"}, {"problem": 49, "code": "#(conj [(take %1 %2)] (nthrest %2 %1))", "user": "5fba5692e4b03f550f448230"}, {"problem": 49, "code": "#((juxt take drop) %1 %2)", "user": "58c69d88e4b021aa9917ed5e"}, {"problem": 49, "code": "(fn [idx seq]\n  (conj [] (take idx seq) (drop idx seq)))", "user": "5f3ee0d9e4b004f08c61c55c"}, {"problem": 49, "code": "(fn foo [n seq]\n  (loop [nn n ss seq ret []]\n    (cond\n      (= 0 nn) [ret ss]\n      :else (recur (dec nn) (rest ss) (conj ret (first ss))))))", "user": "5fb8fe30e4b03f550f448223"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5f96fa49e4b0715f5002d7e9"}, {"problem": 49, "code": "(fn [n s] (list (take n s) (drop n s)))", "user": "5f96fbc7e4b0715f5002d7ec"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5f969090e4b0715f5002d7d5"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5fcd15d6e4b07e53c2f3eff7"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5fd361f2e4b07e53c2f3f04e"}, {"problem": 49, "code": "#(conj (conj [] (take %1 %2)) (drop %1 %2))", "user": "5f3567d6e4b0574c87022c44"}, {"problem": 49, "code": "(fn [n s] [(take n s) (drop n s)])", "user": "54d7e277e4b0a52adc2e2031"}, {"problem": 49, "code": "(fn [split-index list]\n  (let [front (take split-index list) \n        back (drop split-index list)]\n    [front back]))", "user": "5fe5a64de4b05ac5b16ea187"}, {"problem": 49, "code": "(fn [n xs]\n [(take n xs) (drop n xs)])", "user": "59d4d126e4b0ef0a1e9b5be9"}, {"problem": 49, "code": "(juxt take drop)", "user": "5fe0d4d4e4b05ac5b16ea164"}, {"problem": 49, "code": "(fn [n xs] [(vec (take n xs)) (vec (drop n xs))])", "user": "5fc9d967e4b0689391cc77ce"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5fea32f3e4b05ac5b16ea1aa"}, {"problem": 49, "code": "#(do [(take %1 %2) (drop %1 %2)])", "user": "5fbb010ae4b03f550f448233"}, {"problem": 49, "code": "(fn [n sq]\n  (vector (take n sq) (drop n sq)))", "user": "5fe09d1fe4b05ac5b16ea15b"}, {"problem": 49, "code": "(fn [x vc-x]\n      (vector (apply vector (take x vc-x)) (apply vector (drop x vc-x))))", "user": "5df94f73e4b0a607a9a45cb6"}, {"problem": 49, "code": "(fn [n s]\n        [(take n s) (drop n s)])", "user": "546c4377e4b00cfc9eacc177"}, {"problem": 49, "code": "(fn my-split-at [n coll] (vector (take n coll) (drop n coll)))", "user": "5fd2e391e4b07e53c2f3f049"}, {"problem": 49, "code": "(fn [n c]\n  (vector (take n c) (drop n c)))", "user": "54aec375e4b09f271ff37cf9"}, {"problem": 49, "code": "(fn [n l] [(take n l) (drop n l)])", "user": "5fe1b893e4b05ac5b16ea16f"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5fef4292e4b05ac5b16ea1d7"}, {"problem": 49, "code": "(fn [n xs]\n  (cons (take n xs)\n        (list (drop n xs)))\n  )", "user": "5fa6db67e4b0fa27300f3dd2"}, {"problem": 49, "code": "(juxt take drop)", "user": "5fe362d9e4b05ac5b16ea179"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "5ff3aca3e4b05ac5b16ea205"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5ff454a1e4b05ac5b16ea20d"}, {"problem": 49, "code": "#(conj [] (take % %2) (drop % %2))", "user": "5fd8bcb3e4b05ac5b16ea11b"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5fe9169ce4b05ac5b16ea1a0"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "5fd10010e4b07e53c2f3f02a"}, {"problem": 49, "code": "#(vec [(take %1 %2) (drop %1 %2)])", "user": "5ff101a5e4b05ac5b16ea1ed"}, {"problem": 49, "code": "(juxt take drop)", "user": "5ff93da9e4b06df49cee14af"}, {"problem": 49, "code": ";; (fn [n c]\n;;     (letfn [(get-rst [next-n pre-rst rest-c]\n;;               (if (= next-n 0)\n;;                 (vector pre-rst rest-c)\n;;                 (recur (dec next-n)\n;;                        (conj pre-rst (first rest-c))\n;;                        (rest rest-c))))]\n;;       (get-rst n [] c)))\n\n;; (fn [pos, col]\n;;     [(subvec col 0 pos) (subvec col pos)])\n\n;; juxt return a fn\n;; (juxt take drop)\n\n;; comp return a fn\n;; (comp #(list (first %) (apply concat (next %))) partition-all)\n\n#(vector (take %1 %2) (drop %1 %2))", "user": "591ad160e4b09b4ee5954bdf"}, {"problem": 49, "code": "(fn spl [n coll]\n    (let [f (subvec coll 0 n)\n          s (subvec coll n)]\n      [f s]))", "user": "5ff8ead1e4b06df49cee14ab"}, {"problem": 49, "code": "(fn [pos c]\n  [\n  \t\n   \t\t(vec (take pos c))\n   \t\t(vec (drop pos c))\n   \n  \t \n   ]\n\n  ); fn end", "user": "5ff676a9e4b06df49cee1497"}, {"problem": 49, "code": "(fn [x coll] (conj (conj [] (take x coll)) (nthrest coll x)))", "user": "5b2d1c1de4b025bcb146f2c0"}, {"problem": 49, "code": "(fn [index xs]\n  (loop [sequence xs\n         new-sequence []\n         i-actual 0]\n    (if (= index i-actual)\n      [(into [] new-sequence) (conj (rest sequence) (first sequence))]\n      (recur (rest sequence) (conj new-sequence (first sequence)) (inc i-actual)))))", "user": "58a0ac0de4b02bd94d917e9c"}, {"problem": 49, "code": "(juxt take drop)", "user": "5eea5c98e4b029a2061bbebf"}, {"problem": 49, "code": "(fn [n s]\n  [(take n s) (drop n s)])", "user": "5c59b836e4b01df32ab73263"}, {"problem": 49, "code": "(fn mysplit-at [n sq]\n  [(take n sq) (drop n sq)]\n  )", "user": "5fee18f2e4b05ac5b16ea1d2"}, {"problem": 49, "code": "#(vector\n   (take %1 %2)\n   (drop %1 %2))", "user": "5beadeb5e4b0f319e2d7ec88"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5ff61113e4b06df49cee1492"}, {"problem": 49, "code": "#(let [g1 (take %1 %2)\n       g2 (remove (set g1) %2)]\n   [g1 g2])", "user": "6004c750e4b074f607df6645"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5ff709e4e4b06df49cee149b"}, {"problem": 49, "code": "(fn[x v](vector(vec(take x v))(vec(drop x v))))", "user": "6001460ce4b074f607df6611"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2) )", "user": "5fec4f5ee4b05ac5b16ea1bf"}, {"problem": 49, "code": "(fn [n xs]\n  (let [xvec (vec xs)]\n    (seq [(subvec xvec 0 n) (subvec xvec n)])))", "user": "5f37263de4b0574c87022c4e"}, {"problem": 49, "code": "(fn [n ar][(into [] (take n ar))(into [] (drop n ar))])", "user": "5feb6850e4b05ac5b16ea1b8"}, {"problem": 49, "code": "(fn foo [n s]\n    (loop [fst []\n           snd s\n           cnt 0]\n        (if (= cnt n)\n            (list fst snd)\n            (let [x (first snd)\n                  xs (rest snd)]\n                (recur (conj fst x) xs (+ cnt 1))))))", "user": "600ae927e4b074f607df6689"}, {"problem": 49, "code": "(fn [n se] [(take n se) (drop n se)])", "user": "5fbf6fe7e4b0ad6fc3476147"}, {"problem": 49, "code": "(fn [i c] (concat [(take i c)] [(drop i c)]))", "user": "600cb742e4b074f607df6696"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "583369e6e4b089d5ab817c9c"}, {"problem": 49, "code": "(fn [n xs] (rest (reduce (fn [[myN fst snd] x] (if (<= myN n)\n                                           \t\t[(inc myN) (conj fst x) snd]\n                                           \t\t[myN fst (conj snd x)])) [1 [] []] xs)))", "user": "6011b89ee4b074f607df66bc"}, {"problem": 49, "code": "(juxt take drop)", "user": "54b10d08e4b09f271ff37d18"}, {"problem": 49, "code": "(juxt take drop)", "user": "57e10705e4b0bfb2137f5a6a"}, {"problem": 49, "code": "(fn split [n coll]\n  [(take n coll) (drop n coll)])", "user": "601aaa93e4b0bf4ca6b10926"}, {"problem": 49, "code": "(fn [n coll] (conj [] (take n coll) (drop n coll)))", "user": "5a9f2c53e4b0d174b936c812"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "60096aabe4b074f607df667f"}, {"problem": 49, "code": "(fn [n xs]\n    [(vec (take n xs)) (vec (drop n xs))])", "user": "558ffb4be4b0277789237667"}, {"problem": 49, "code": ";; first problem I've solved in my own editer ^_^;;;\n;; Intuition 2 for 2 woot!\n(fn special-split [h s]\n  [(take h s) (drop h s)])\n\n;; this is super cool: (juxt take drop)", "user": "5fb68f09e4b08cb800c85b58"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "52fa250ee4b047fd55836ff3"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5ff70cfde4b06df49cee149c"}, {"problem": 49, "code": "(fn [n l]\n  [(take n l) (drop n l)])", "user": "602049b8e4b0bf4ca6b10961"}, {"problem": 49, "code": "#(vector (vec (take %1 %2)) (vec (drop %1 %2)))", "user": "601bdcb3e4b0bf4ca6b10930"}, {"problem": 49, "code": "(fn [n coll] (vector (take n coll) (drop n coll)))", "user": "60232ac0e4b0d5df2af2220c"}, {"problem": 49, "code": "#(conj [] \n        (take %1\n         %2)\n        (drop %1\n              %2))", "user": "4e38f245535deb9a81d77f3e"}, {"problem": 49, "code": "(fn[x v](vector (take x v) (drop x v)))", "user": "60195030e4b0bf4ca6b10920"}, {"problem": 49, "code": "(fn [n s] (list (take n s) (drop n s)))", "user": "6022844de4b0d5df2af22203"}, {"problem": 49, "code": "(fn [n xs]\n  [(take n xs) (drop n xs)])", "user": "60228147e4b0d5df2af22202"}, {"problem": 49, "code": "(fn [n c]\n  (list (take n c) (drop n c)))", "user": "60264d89e4b0d5df2af2222d"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "6026737ee4b0d5df2af2222f"}, {"problem": 49, "code": "(fn [n sq]\n   (let [ sq1 (take n sq) sq2 (drop n sq)]\n     [sq1 sq2]))", "user": "602b90c1e4b0d5df2af22266"}, {"problem": 49, "code": "(fn [n c] [(take n c) (drop n c)])", "user": "5d62ce13e4b0c9e5857d501f"}, {"problem": 49, "code": "(fn doon [n s]\n  (vector\n   (take n s) (drop n s))\n  )", "user": "5fdb8657e4b05ac5b16ea133"}, {"problem": 49, "code": "(fn [i v]\n  [(subvec v 0 i) (subvec v i)])", "user": "5afecee2e4b0cc2b61a3bd28"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5ff64845e4b06df49cee1495"}, {"problem": 49, "code": "#(list (take % %2) (drop % %2))", "user": "602d5eade4b0d5df2af22279"}, {"problem": 49, "code": "(fn [n l] (let [[head & tail] (partition-all n l)] (vector head (apply concat tail))))", "user": "5a778224e4b013a48d399761"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5baba1ece4b0a20761a23482"}, {"problem": 49, "code": "(fn [x coll] [(take x coll) (drop x coll)])", "user": "600eb95de4b074f607df66a6"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "602f8400e4b0d5df2af22299"}, {"problem": 49, "code": "(fn [n x] [(take n x) (drop n x)])", "user": "60329afce4b0d5df2af222b8"}, {"problem": 49, "code": "(fn splt-at [position col] (conj [] (take position col) (drop position col) ) )", "user": "6031926ae4b0d5df2af222ac"}, {"problem": 49, "code": "(fn split [v s]\n  (seq [(take v s) (drop v s)])\n)", "user": "60335b35e4b0d5df2af222bf"}, {"problem": 49, "code": "#((juxt take drop) %1 %2)", "user": "5f8e2a08e4b0715f5002d767"}, {"problem": 49, "code": "(fn\n  [n coll]\n  (let [fir-part (into [] (take n coll) )\n        sec-part (into [] (drop n coll))\n        ans (conj [] fir-part)\n        ans (conj ans sec-part)\n        ]\n    ans\n    )\n  )", "user": "60337f1fe4b0d5df2af222c1"}, {"problem": 49, "code": "(fn foo [x seqs]\n  (list (take x seqs) (drop x seqs)))", "user": "6038b6b4e4b0d5df2af222ef"}, {"problem": 49, "code": "(fn [n s]\n  [(take n s) (drop n s)])", "user": "603d5f2ae4b0d5df2af2230c"}, {"problem": 49, "code": "(juxt take drop)", "user": "603e9cb6e4b0d5df2af22317"}, {"problem": 49, "code": "(fn [p col]\n  (list (take p col) (drop p col)))", "user": "6022429be4b0d5df2af22200"}, {"problem": 49, "code": "(fn [count seq]\n    [(into [] (take count seq)) (into [] (drop count seq))])", "user": "602f56c5e4b0d5df2af22297"}, {"problem": 49, "code": "(fn [n cl]\n  [(take n cl) (drop n cl)]\n  )", "user": "60436423e4b02d28681c77a3"}, {"problem": 49, "code": "(fn split-at1 [n v]\n  \"Split vector $v at index $n.\"\n  (list (map v (range n))\n        (map v (range n (count v)))))", "user": "60460824e4b02d28681c77bc"}, {"problem": 49, "code": "(fn my-split-at [n l]\n    (vector (vec (take n l)) (vec (drop n l))))", "user": "603ae21de4b0d5df2af222fb"}, {"problem": 49, "code": "(fn [n s] [(take n s) (drop n s)])", "user": "6045582fe4b02d28681c77b6"}, {"problem": 49, "code": "(fn split\n  [n s]\n  [(take n s) (drop n s)])", "user": "5edd05bfe4b0c7845d86b0f3"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5eb56fc1e4b00a66d4a95224"}, {"problem": 49, "code": "(fn spl [n coll] (let [a ((fn iter [i ma] (\n                             cond \n                             (and (> i 0) (<= i ma)) i\n                             (< i 0) (iter (+ i ma) ma)\n                             (> i ma) (iter (- i ma) ma)\n                             )) n (count coll)) c coll]\n          [(take a c) (drop a c)]\n  ))", "user": "60471241e4b02d28681c77c9"}, {"problem": 49, "code": "(fn [i xs] [(vec (take i xs)) (vec (drop i xs))])", "user": "601c39eee4b0bf4ca6b10937"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "60486e8ae4b02d28681c77db"}, {"problem": 49, "code": "(fn [n s]\n    (vector (vec (take n s))\n            (vec (drop n s))))", "user": "6026d2cae4b0d5df2af22232"}, {"problem": 49, "code": "(fn [n l]\n  (loop [acc 0 arr1 [] arr2 l]\n    (if (= n acc)\n      [arr1 arr2]\n      (recur (inc acc) (conj arr1 (first arr2)) (rest arr2) ))))", "user": "6040f595e4b0d5df2af2232f"}, {"problem": 49, "code": "(fn [x y] (let [z (partition-all x y)] [(first z) (apply concat (rest z))]))", "user": "604d3cb1e4b0b7ec0ac60ac2"}, {"problem": 49, "code": "(fn splitter [x l]\n  (list (take x l) (drop x l)))", "user": "604f4be1e4b0b7ec0ac60ace"}, {"problem": 49, "code": "(fn\n   [x coll]\n   [(take x coll) (drop x coll)])", "user": "60396c95e4b0d5df2af222f4"}, {"problem": 49, "code": "(fn [value1 value2]\n  [(take value1 value2) (drop value1 value2)])", "user": "60504383e4b056659d6341fa"}, {"problem": 49, "code": "(fn\n  [n coll]\n  (vector (take n coll) (nthrest coll n)))", "user": "4e586949535d8a8b8723a292"}, {"problem": 49, "code": "(juxt take drop)", "user": "6020365ae4b0bf4ca6b10960"}, {"problem": 49, "code": "(fn [n coll]\n   [(take n coll) (drop n coll)])", "user": "60537cd1e4b04c8f2157d152"}, {"problem": 49, "code": "(fn [n coll] (vector (take n coll) (drop n coll)))", "user": "598e7998e4b02b9968b84d34"}, {"problem": 49, "code": "#(list (take %1 %2) (take-last (- (count %2) %1) %2))", "user": "526759b3e4b03e8d9a4a715b"}, {"problem": 49, "code": "(fn [n vektor]\n  (vector (subvec vektor 0 n)(subvec vektor n (count vektor))))", "user": "5684e200e4b04eec3ec5cfc4"}, {"problem": 49, "code": "#(conj '() (drop %1 %2) (take %1 %2))", "user": "602bca69e4b0d5df2af22267"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "5ef381a3e4b07c55ae4a053c"}, {"problem": 49, "code": "(juxt take drop)", "user": "605b7a90e4b079a07f8593fc"}, {"problem": 49, "code": "(fn [split_ coll] [(take split_ coll) (drop split_ coll)])", "user": "6059d2e0e4b07e92fa001ace"}, {"problem": 49, "code": "(fn\n  [n list_]\n  (loop [i 0 l1 [] l2 []]\n    (if-not (= i (count list_))\n      (do\n        (if (> n i)\n          (recur (inc i) (conj l1 (nth list_ i)) l2)\n          (recur (inc i) l1 (conj l2 (nth list_ i)))\n            )\n        )\n      [l1 l2]\n      )\n    )\n)", "user": "6059d824e4b07e92fa001acf"}, {"problem": 49, "code": "(fn [n s]\n  [(take n s) (drop n s)])", "user": "6059d9c8e4b07e92fa001ad0"}, {"problem": 49, "code": "#(list (take %1  %2) (drop %1 %2) )", "user": "5b522591e4b02d533a91bd09"}, {"problem": 49, "code": "(fn\n  [n s]\n  (loop [fs []\n         ss []\n         i 0]\n    (if (= i (count s))\n      [fs ss]\n      (if (> n i)\n        (recur (conj fs (nth s i)) ss (inc i))\n        (recur fs (conj ss (nth s i)) (inc i))))))", "user": "5ec02e20e4b00a66d4a95288"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "6040e6dbe4b0d5df2af2232a"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "60538924e4b04c8f2157d153"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "5eb7b41ee4b00a66d4a9523c"}, {"problem": 49, "code": "(fn [n coll]\n      [(take n coll) (drop n coll)])", "user": "5d5c2730e4b09db18d4482ea"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "54be7c0de4b0ed20f4ff6eec"}, {"problem": 49, "code": "(fn [n xs] [(take n xs) (drop n xs)])", "user": "603f6623e4b0d5df2af2231f"}, {"problem": 49, "code": "(fn my-split\n  ([n col]\n  (println n col)\n  (cond \n    (= n 0) (vec col)\n    :else (my-split n col [[]]))\n  )\n  ([n col newcol]\n  (println n col newcol)\n  (cond \n    (= n 0) (conj newcol (vec col))\n    :else (my-split (dec n) (rest col) (conj [] (conj (first newcol) (first col)))))))", "user": "6065755ee4b069485764ddcc"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "6066266de4b069485764ddd2"}, {"problem": 49, "code": "#(loop [at %1 [h & t :as c] %2 acc []]\n   (if (zero? at)\n     [acc c]\n     (recur (dec at) t (conj acc h))))", "user": "5f665d45e4b02876ed9fd02f"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "606aafcfe4b069485764ddf6"}, {"problem": 49, "code": "(juxt take drop)", "user": "5db012e3e4b0f8c104ccfc95"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "60689984e4b069485764dde6"}, {"problem": 49, "code": "#(conj [] (take %1 %2) (drop %1 %2))", "user": "606a70a5e4b069485764ddf2"}, {"problem": 49, "code": "(fn [n lst] [(take n lst) (drop n lst)])", "user": "606c87aae4b069485764de0d"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "606b16b8e4b069485764ddf7"}, {"problem": 49, "code": "(fn [n s] [(take n s) (drop n s)])", "user": "606e0a42e4b069485764de19"}, {"problem": 49, "code": "(fn my-split-in\n   [x coll]\n   (loop [x x\n          coll coll\n          result []]\n     (if (<= x 0)\n       (conj [] (vec result) (vec coll))\n       (recur (dec x) (rest coll) (conj result (first coll))))))", "user": "60631c2ee4b069485764ddbd"}, {"problem": 49, "code": "(fn [i coll] ((juxt #(take i %) #(drop i %)) coll))", "user": "5eedfc62e4b07c55ae4a050e"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "60606490e4b03746e80ebf67"}, {"problem": 49, "code": "(fn splitter [n s]\n  (loop [accum [], counter 0, rs s]\n    (if (= counter n)\n      (conj (vector accum) (apply vector rs))\n      (recur (conj accum (first rs)) (inc counter) (rest rs))))\n  )", "user": "5f6adf5ee4b02876ed9fd049"}, {"problem": 49, "code": "(fn [n nlst] (conj (conj [] (take n nlst)) (nthrest nlst n)))", "user": "606d75f5e4b069485764de13"}, {"problem": 49, "code": "(fn split-seq [n coll]\n  [(take n coll) (drop n coll)])", "user": "605a876be4b000d535e6f53c"}, {"problem": 49, "code": "(fn [split arr]\n  [(take split arr) (drop split arr)])", "user": "605b319de4b079a07f8593f7"}, {"problem": 49, "code": "(fn\n    [n s]\n    (cons (take n s) (list (drop n s)))\n    )", "user": "6074f5ede4b069485764de52"}, {"problem": 49, "code": "(fn [a b] [(take a b) (drop a b)])", "user": "6074e088e4b069485764de4d"}, {"problem": 49, "code": "(fn [n x] [(take n x) (drop n x)])", "user": "6075c214e4b069485764de5b"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "6059f25de4b07e92fa001ad1"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "6024544be4b0d5df2af2221f"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "60764350e4b069485764de5e"}, {"problem": 49, "code": "(fn my-split-at [n coll]\n  (vec (list\n        (into [] (take n coll))\n        (into [] (drop n coll)))))", "user": "605f5c69e4b03746e80ebf5e"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "606ff89be4b069485764de22"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "5f548678e4b0a0bc16850a7e"}, {"problem": 49, "code": "(fn [n lst] \n  (vec (list (take n lst) (drop n lst))))", "user": "6074df6fe4b069485764de4b"}, {"problem": 49, "code": "(fn [idx seq]\n  (vector (vec (take idx seq)) (vec (drop idx seq))))", "user": "5cf938a5e4b0b71b1d808a90"}, {"problem": 49, "code": "(fn split [n ins]\n  (loop [c 0\n         [e & rest, :as whole] ins\n         tmp-group []\n         acc []]\n\n    (cond\n      (< c n)\n      (recur\n        (inc c)\n        rest\n        (conj tmp-group e)\n        acc)\n      :else\n      (conj (conj acc tmp-group)\n            whole))))", "user": "605b49b7e4b079a07f8593f8"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "607e1d32e4b03d835a6eaeda"}, {"problem": 49, "code": "(fn [size data]\n  [(take size data)\n   (drop size data)])", "user": "606ff56ce4b069485764de21"}, {"problem": 49, "code": "(fn my-split-at [n xs] (loop [i 1 res [[] xs]] (if (> i n) res (recur (inc i) [(conj (first res) (first (second res))) (rest (second res))]))))", "user": "6076adb2e4b069485764de60"}, {"problem": 49, "code": "(fn [num c]\n  (loop [i 0 one [] two c orig c]\n    (if (= i num)\n      [one two]\n      (recur (inc i) (conj one (nth c i)) (rest two) c))))", "user": "607bd80be4b0a637ed780379"}, {"problem": 49, "code": "(fn[at list]\n  (loop [pos 0\n         list list\n         result [[] []]]\n    (cond\n      (empty? list) result\n      (> pos (dec at)) (recur (inc pos)\n                              (rest list)\n                              [(first result) (conj (second result) (first list))])\n      :else (recur (inc pos)\n                   (rest list)\n                   [(conj (first result) (first list) )(second result)]))))", "user": "5e860270e4b09a7a73c8bbdb"}, {"problem": 49, "code": "#(conj [] (take %1 %2) (drop %1 %2))", "user": "607d6bc1e4b03d835a6eaecc"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "60777335e4b0a637ed78034f"}, {"problem": 49, "code": ";;(fn [n coll] [(take n coll) (drop n coll)])\n;;(fn [n coll] ((juxt (partial take n) (partial drop n)) coll))\n(juxt take drop)", "user": "60794173e4b0a637ed78035d"}, {"problem": 49, "code": "#(vector (take %1 %2) (take-last (- (count %2) %1) %2))", "user": "6070c7bae4b069485764de27"}, {"problem": 49, "code": "(fn [n xs]\n  [(take n xs) (drop n xs)])", "user": "5d917ef0e4b0915913b1d402"}, {"problem": 49, "code": "(juxt take drop)", "user": "5f82609ae4b0c071e6c840f9"}, {"problem": 49, "code": "(fn splat [n coll] (concat (conj nil (take n coll)) (conj nil (drop n coll))))", "user": "600b385ce4b074f607df668d"}, {"problem": 49, "code": "(fn [n s] (vector (take n s) (drop n s)))", "user": "5e3d183fe4b01d43a70e8e11"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "602c30e3e4b0d5df2af2226f"}, {"problem": 49, "code": "#(vector (vec (take %1 %2)) (vec (drop %1 %2)))", "user": "6074e278e4b069485764de51"}, {"problem": 49, "code": "(fn my-split-at [n coll]\n  (list (take n coll) (drop n coll)))", "user": "608256d7e4b0736b099e42da"}, {"problem": 49, "code": "(fn [n xs] [(take n xs) (drop n xs)])", "user": "5f0a65dae4b09a3f05b71806"}, {"problem": 49, "code": "(fn [n coll] ((juxt take drop) n coll))", "user": "5f755d0be4b02876ed9fd0a9"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "6086cdefe4b0736b099e4302"}, {"problem": 49, "code": "#(vector (take % %2) (drop % %2))", "user": "607a1523e4b0a637ed78036a"}, {"problem": 49, "code": "(fn [splitpos lst] [(take splitpos lst) (drop splitpos lst)])", "user": "6074e1e4e4b069485764de4f"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "607e1c1fe4b03d835a6eaed8"}, {"problem": 49, "code": "#(conj [(vec (take % %2))](vec(drop % %2)))", "user": "6081e475e4b0736b099e42d6"}, {"problem": 49, "code": "(fn split-seq [n s]\n  (list (take n s) (drop n s)))", "user": "607dd962e4b03d835a6eaed2"}, {"problem": 49, "code": "(fn [n nums]\n      [\n       (take n nums)\n       (drop n nums)\n      ]\n      )", "user": "59c87d49e4b0a024fb6ae55b"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "60849bd6e4b0736b099e42f2"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "6088395de4b0ae75613dcee2"}, {"problem": 49, "code": "(fn [n lst] [(take n lst) (drop n lst)])", "user": "6074dfa4e4b069485764de4c"}, {"problem": 49, "code": "#(conj [] (take %1 %2) (drop %1 %2))", "user": "608135c8e4b0736b099e42d1"}, {"problem": 49, "code": "(fn [numb colle]\n  [(take numb colle) (drop numb colle)])", "user": "607e1cf9e4b03d835a6eaed9"}, {"problem": 49, "code": "(fn [n coll][(take n coll) (drop n coll)])", "user": "6074e1ade4b069485764de4e"}, {"problem": 49, "code": "(fn [n s]\n  (let [tovec (fn [l] (into [] l))]\n   (tovec (list (tovec (take n s)) (tovec (drop n s))))))", "user": "60882700e4b0ae75613dcedf"}, {"problem": 49, "code": "(fn SplitASequence [n lst]\n (list (take n lst) (drop n lst)))", "user": "607508f3e4b069485764de54"}, {"problem": 49, "code": "(fn split[n s][(take n s)\n               (drop n s)])", "user": "6085edade4b0736b099e42fc"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "608b3fe1e4b0adce4b61c442"}, {"problem": 49, "code": "(fn [n coll]\n  (list\n   (take n coll)\n   (reverse (take (- (count coll) n) (reverse coll)))\n   )\n  )", "user": "60752ef6e4b069485764de55"}, {"problem": 49, "code": "(fn [x lst] [(take x lst) (drop x lst)])", "user": "607e1d9de4b03d835a6eaedb"}, {"problem": 49, "code": "(fn [n collection]\n  [(take n collection) (drop n collection)])", "user": "608828dee4b0ae75613dcee1"}, {"problem": 49, "code": "(fn [length-of-first coll] (reduce-kv\n                             #(if (<= (inc %2) length-of-first)\n                                (list (conj (vec (first %1)) %3) (vec (last %1)))\n                                (list (first %1) (conj (vec (last %1)) %3)))\n                             [[] []]\n                             coll))", "user": "5e7fb908e4b085ba37836e3f"}, {"problem": 49, "code": "(fn [n col]\n    (conj\n     (vector(into '[] (take n col)))\n     (into '[] (nthrest col n))\n     ))", "user": "607f3336e4b05857a65e7747"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "6078ce29e4b0a637ed78035a"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "607b6452e4b0a637ed780375"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "6088c22ee4b0ae75613dcee4"}, {"problem": 49, "code": "(fn [split-n coll]\n  [(take split-n coll)\n   (drop split-n coll)])", "user": "608910a8e4b0ae75613dceed"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "6087cb25e4b0ae75613dced8"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "6081b7fce4b0736b099e42d4"}, {"problem": 49, "code": "#(conj [] (take %1 %2)  (drop %1 %2))", "user": "60845eb8e4b0736b099e42ef"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "608ec5e4e4b03bd49d9f36c0"}, {"problem": 49, "code": "(fn ans-49 [index arr] \n  (vector (take index arr) (drop index arr)))", "user": "608fac60e4b03bd49d9f36c7"}, {"problem": 49, "code": "#(vector (vec (take %1 %2)) (subvec %2 %1))", "user": "5f1eec36e4b0f565ad998274"}, {"problem": 49, "code": "(fn [n s]\n   (loop [left []\n          [first & right] s\n          todo n]\n     (if (= 0 todo)\n       [left (into [first] right)]\n       (recur\n        (conj left first)\n        right\n        (dec todo)))))", "user": "6090e617e4b03bd49d9f36ce"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "608e6047e4b03bd49d9f36bf"}, {"problem": 49, "code": "(juxt take drop)", "user": "5fb46916e4b08cb800c85b46"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "6098263be4b00e9e6653c3f9"}, {"problem": 49, "code": "(juxt take drop)", "user": "4f30896ce4b0d6649770a07b"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "609aa543e4b00e9e6653c40c"}, {"problem": 49, "code": "(juxt take drop)", "user": "5fb3bd04e4b08cb800c85b3a"}, {"problem": 49, "code": "(fn [n c] (vector (vec (take n c))  (vec (take-last (- (count c) n) c))))", "user": "609c1db9e4b00e9e6653c416"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "608ee2f7e4b03bd49d9f36c1"}, {"problem": 49, "code": "(fn \n  [n coll]\n  (conj [] \n        (take n coll)\n        (drop n coll)))", "user": "6086abade4b0736b099e42ff"}, {"problem": 49, "code": "(fn [size data]\n  [(take size data)\n   (drop size data)])", "user": "609a54f0e4b00e9e6653c40b"}, {"problem": 49, "code": "(fn split-a-sequence [n s]\n  (list (take n s) (drop n s)))", "user": "608c270ae4b03bd49d9f36b3"}, {"problem": 49, "code": "(fn [n s] (list (take n s) (drop n s)))", "user": "6092bfefe4b00e9e6653c3db"}, {"problem": 49, "code": "(juxt take drop)", "user": "60ab1536e4b00e9e6653c47e"}, {"problem": 49, "code": ";(fn _split [n coll] \n;   (list (take n coll) (drop n coll)))\n(juxt take drop)", "user": "60a7c55be4b00e9e6653c468"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "52435d0ce4b076204b44fab5"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "60a39b80e4b00e9e6653c450"}, {"problem": 49, "code": "(fn split-seq [n coll]\n  (if (= 2 (count coll))\n    coll\n    (split-seq\n      n\n      (vector (subvec coll 0 n) (vec (nthrest coll n))))))", "user": "6033f8e9e4b0d5df2af222c6"}, {"problem": 49, "code": "(fn split [ind values]\n  (let [fir (vec (take ind values))\n        sec (vec (drop ind values))]\n    [fir sec]))", "user": "60aecd73e4b00e9e6653c49a"}, {"problem": 49, "code": "(fn ksplit [n items]\n  (if (zero? n) [[] items]\n    (let [res (ksplit (- n 1) (rest items))]\n      (cons (cons (first items) (first res)) (rest res)))))", "user": "60b2aaebe4b0e0fa5f1b4228"}, {"problem": 49, "code": "(fn [%1 %2]\n  (vector (into [] (subvec %2 0 %1))\n          (into [] (subvec %2 %1 (count %2)))))", "user": "608e5697e4b03bd49d9f36be"}, {"problem": 49, "code": "(fn [n sq]\n  [(take n sq) (drop n sq)])", "user": "51b920bfe4b0e871ca4958f9"}, {"problem": 49, "code": "#(vector (vec (take %1 %2)) (subvec %2 %1))", "user": "60ac91c5e4b00e9e6653c485"}, {"problem": 49, "code": "(fn [x y] (vector (subvec y 0 x) (subvec y x)))", "user": "6093cc08e4b00e9e6653c3e1"}, {"problem": 49, "code": "(fn [n coll] [(take n coll) (drop n coll)])", "user": "57123c96e4b09c608db70454"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "60b7e2c5e4b0e0fa5f1b4252"}, {"problem": 49, "code": "(fn [n coll] (let [a (partition-all n coll)] (list (first a) (apply concat (rest a)))))", "user": "60b61b40e4b0e0fa5f1b4244"}, {"problem": 49, "code": "(fn [n coll]\n  [(take n coll) (drop n coll)])", "user": "60b1add0e4b0e0fa5f1b4227"}, {"problem": 49, "code": "(fn [n seq]\n  (loop [out []\n         n   n\n         seq seq]\n    (let [head (first seq)\n          tail (rest  seq)]\n      (if (> n 0)\n        (if head\n          (recur (conj out head) (dec n) tail)\n          (vector (vec out) (vec (conj tail head))))\n        (vector (vec out) (vec (conj tail head)))))))", "user": "60b66033e4b0e0fa5f1b4248"}, {"problem": 49, "code": "#(conj (conj [] (take %1 %2)) (drop %1 %2))", "user": "60759e51e4b069485764de5a"}, {"problem": 49, "code": "(fn [x y] (vector (take x y) (drop x y)))", "user": "60b3b375e4b0e0fa5f1b4232"}, {"problem": 49, "code": "(fn [i xs]\n  [(take i xs) (drop i xs)])", "user": "51bd78c3e4b0ff155d51d2b0"}, {"problem": 49, "code": "(fn [td vec] ( conj [] (take td vec) (drop td vec)))", "user": "60bfb68be4b0e0fa5f1b429e"}, {"problem": 49, "code": "(fn\n  [n s]\n  (loop [lhs []\n         [x & xs :as rhs] s\n         cnt n]\n    (if (zero? cnt)\n      [lhs rhs]\n      (recur (conj lhs x)\n             xs\n             (dec cnt)))))", "user": "5f2d6bc4e4b033932238a66e"}, {"problem": 49, "code": "(fn [idx coll] ((juxt take drop) idx coll))", "user": "604a3daee4b02d28681c77f2"}, {"problem": 49, "code": "#(vector (take %1 %2) (drop %1 %2))", "user": "60c0ceb7e4b0e0fa5f1b42a6"}, {"problem": 49, "code": "#(vec (list (take %1 %2) (drop %1 %2)))", "user": "5fd92743e4b05ac5b16ea11f"}, {"problem": 49, "code": "(fn [n col] [(take n col) (drop n col)])", "user": "609beb06e4b00e9e6653c412"}, {"problem": 49, "code": "(fn [n s]\n     [(take n s) (drop n s)])", "user": "6093b56ce4b00e9e6653c3e0"}, {"problem": 49, "code": "#(vector (subvec %2 0 %1) (subvec %2 %1))", "user": "60bca877e4b0e0fa5f1b4287"}, {"problem": 49, "code": "#(list (take %1 %2) (drop %1 %2))", "user": "5d3e8c3de4b01671435dbd73"}, {"problem": 49, "code": "(fn my-split-at [n xs]\n  (list\n   (take n xs)\n   (drop n xs)))", "user": "60c91f48e4b0e0fa5f1b4304"}, {"problem": 49, "code": "(fn split-col\n      [idx coll]\n      (vector (apply vector (take idx coll)) (apply vector (drop idx coll))))", "user": "60c90322e4b0e0fa5f1b4302"}, {"problem": 49, "code": "(fn mf [n col]\n  (let [split-arr (partition-all n n col)]\n    (vector (vec (first split-arr)) (vec (mapcat identity (rest split-arr)))))\n)", "user": "60dd865ee4b0d8b48c489db3"}, {"problem": 49, "code": "(fn my-split-at\n  [n coll]\n  (vector (take n coll) (take-last (- (count coll) n) coll)))", "user": "60c43b20e4b0e0fa5f1b42c9"}]